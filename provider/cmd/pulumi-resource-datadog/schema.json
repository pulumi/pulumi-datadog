{
    "name": "datadog",
    "description": "A Pulumi package for creating and managing Datadog resources.",
    "keywords": [
        "pulumi",
        "datadog"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`datadog` Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog).",
    "repository": "https://github.com/pulumi/pulumi-datadog",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.\n"
            },
            "apiUrl": {
                "type": "string",
                "description": "The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the /api/\npath. For example, https://api.datadoghq.com/ is a correct value, while https://api.datadoghq.com/api/ is not. And if\nyou're working with \"EU\" version of Datadog, use https://api.datadoghq.eu/.\n"
            },
            "appKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.\n"
            },
            "validate": {
                "type": "boolean",
                "description": "Enables validation of the provided API and APP keys during provider initialization. Default is true. When false, api_key\nand app_key won't be checked.\n"
            }
        }
    },
    "types": {
        "datadog:index/DashboardListDashItem:DashboardListDashItem": {
            "properties": {
                "dashId": {
                    "type": "string",
                    "description": "The ID of the dashboard to add\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of this dashboard. Available options are: `custom_timeboard`, `custom_screenboard`, `integration_screenboard`, `integration_timeboard`, and `host_timeboard`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dashId",
                "type"
            ]
        },
        "datadog:index/DashboardTemplateVariable:DashboardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "The default value for the template variable on dashboard load.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "description": "The tag prefix associated with the variable. Only tags with this prefix will appear in the variable dropdown.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the preset.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable"
                    },
                    "description": "The template variable names and assumed values under the given preset\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardTemplateVariablePresetTemplateVariable:DashboardTemplateVariablePresetTemplateVariable": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidget:DashboardWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition",
                    "description": "The definition for a Change  widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition",
                    "description": "The definition for a Distribution widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geomapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinition:DashboardWidgetGeomapDefinition",
                    "description": "The definition for a Geomap widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition",
                    "description": "The definition for a Group widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition",
                    "description": "The definition for a Heatmap widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition",
                    "description": "The definition for a Hostmap widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition",
                    "description": "The definition for an Iframe widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition",
                    "description": "The definition for an Image widget\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLayout:DashboardWidgetLayout",
                    "description": "The layout of the widget on a 'free' dashboard. **Deprecated.** Define `widget_layout` list with one element instead.\n",
                    "deprecationMessage": "Define `widget_layout` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition",
                    "description": "The definition for a Note widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition",
                    "description": "The definition for a Scatterplot widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servicemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetServicemapDefinition:DashboardWidgetServicemapDefinition",
                    "description": "The definition for a Service Map widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition",
                    "description": "The definition for a Timeseries widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition",
                    "description": "The definition for a Toplist widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "widgetLayout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetWidgetLayout:DashboardWidgetWidgetLayout",
                    "description": "The layout of the widget on a 'free' dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "datadog:index/DashboardWidgetAlertGraphDefinition:DashboardWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetAlertGraphDefinitionTime:DashboardWidgetAlertGraphDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:index/DashboardWidgetAlertGraphDefinitionTime:DashboardWidgetAlertGraphDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetAlertValueDefinition:DashboardWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinition:DashboardWidgetChangeDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionCustomLink:DashboardWidgetChangeDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionTime:DashboardWidgetChangeDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionCustomLink:DashboardWidgetChangeDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequest:DashboardWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQuery:DashboardWidgetChangeDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQuery:DashboardWidgetChangeDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQuery:DashboardWidgetChangeDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetChangeDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showPresent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQuery:DashboardWidgetChangeDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetChangeDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetChangeDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetChangeDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetChangeDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetChangeDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetChangeDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetChangeDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetChangeDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQuery:DashboardWidgetChangeDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetChangeDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetChangeDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetChangeDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetChangeDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetChangeDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetChangeDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetChangeDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetChangeDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQuery:DashboardWidgetChangeDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetChangeDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetChangeDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetChangeDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetChangeDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetChangeDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetChangeDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetChangeDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetChangeDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetChangeDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetChangeDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetChangeDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetChangeDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetChangeDefinitionTime:DashboardWidgetChangeDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetCheckStatusDefinition:DashboardWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetCheckStatusDefinitionTime:DashboardWidgetCheckStatusDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:index/DashboardWidgetCheckStatusDefinitionTime:DashboardWidgetCheckStatusDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinition:DashboardWidgetDistributionDefinition": {
            "properties": {
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionTime:DashboardWidgetDistributionDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequest:DashboardWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetDistributionDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetDistributionDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetDistributionDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetDistributionDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetDistributionDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetDistributionDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetDistributionDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetDistributionDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetDistributionDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetDistributionDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetDistributionDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetDistributionDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetDistributionDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetDistributionDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetDistributionDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetDistributionDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetDistributionDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetDistributionDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetDistributionDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetDistributionDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetDistributionDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetDistributionDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetDistributionDefinitionRequestStyle:DashboardWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetDistributionDefinitionTime:DashboardWidgetDistributionDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetEventStreamDefinition:DashboardWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventStreamDefinitionTime:DashboardWidgetEventStreamDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetEventStreamDefinitionTime:DashboardWidgetEventStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetEventTimelineDefinition:DashboardWidgetEventTimelineDefinition": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetEventTimelineDefinitionTime:DashboardWidgetEventTimelineDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetEventTimelineDefinitionTime:DashboardWidgetEventTimelineDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetFreeTextDefinition:DashboardWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinition:DashboardWidgetGeomapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionCustomLink:DashboardWidgetGeomapDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequest:DashboardWidgetGeomapDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionStyle:DashboardWidgetGeomapDefinitionStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "view": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionView:DashboardWidgetGeomapDefinitionView",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "view"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionCustomLink:DashboardWidgetGeomapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequest:DashboardWidgetGeomapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormula:DashboardWidgetGeomapDefinitionRequestFormula"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGeomapDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQuery:DashboardWidgetGeomapDefinitionRequestQuery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGeomapDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormula:DashboardWidgetGeomapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGeomapDefinitionRequestFormulaLimit",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGeomapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGeomapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryCompute:DashboardWidgetGeomapDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQuerySearch:DashboardWidgetGeomapDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryCompute:DashboardWidgetGeomapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestLogQuerySearch:DashboardWidgetGeomapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQuery:DashboardWidgetGeomapDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGeomapDefinitionRequestQueryEventQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGeomapDefinitionRequestQueryMetricQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGeomapDefinitionRequestQueryProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGeomapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGeomapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGeomapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGeomapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGeomapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGeomapDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryCompute:DashboardWidgetGeomapDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQuerySearch:DashboardWidgetGeomapDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryCompute:DashboardWidgetGeomapDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGeomapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGeomapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionRequestRumQuerySearch:DashboardWidgetGeomapDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionStyle:DashboardWidgetGeomapDefinitionStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "palette",
                "paletteFlip"
            ]
        },
        "datadog:index/DashboardWidgetGeomapDefinitionView:DashboardWidgetGeomapDefinitionView": {
            "properties": {
                "focus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "focus"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinition:DashboardWidgetGroupDefinition": {
            "properties": {
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard, either 'free' or 'ordered'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "layoutType",
                "widgets"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidget:DashboardWidgetGroupDefinitionWidget": {
            "properties": {
                "alertGraphDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alertValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetAlertValueDefinition:DashboardWidgetGroupDefinitionWidgetAlertValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinition:DashboardWidgetGroupDefinitionWidgetChangeDefinition",
                    "description": "The definition for a Change  widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distributionDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinition:DashboardWidgetGroupDefinitionWidgetDistributionDefinition",
                    "description": "The definition for a Distribution widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetEventStreamDefinition:DashboardWidgetGroupDefinitionWidgetEventStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventTimelineDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "freeTextDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetFreeTextDefinition:DashboardWidgetGroupDefinitionWidgetFreeTextDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geomapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinition:DashboardWidgetGroupDefinitionWidgetGeomapDefinition",
                    "description": "The definition for a Geomap widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "heatmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinition:DashboardWidgetGroupDefinitionWidgetHeatmapDefinition",
                    "description": "The definition for a Heatmap widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostmapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinition:DashboardWidgetGroupDefinitionWidgetHostmapDefinition",
                    "description": "The definition for a Hostmap widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "integer",
                    "description": "The ID of the widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iframeDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetIframeDefinition:DashboardWidgetGroupDefinitionWidgetIframeDefinition",
                    "description": "The definition for an Iframe widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetImageDefinition:DashboardWidgetGroupDefinitionWidgetImageDefinition",
                    "description": "The definition for an Image widget\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetLayout:DashboardWidgetGroupDefinitionWidgetLayout",
                    "description": "The layout of the widget on a 'free' dashboard. **Deprecated.** Define `widget_layout` list with one element instead.\n",
                    "deprecationMessage": "Define `widget_layout` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logStreamDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinition:DashboardWidgetGroupDefinitionWidgetLogStreamDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetManageStatusDefinition:DashboardWidgetGroupDefinitionWidgetManageStatusDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noteDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetNoteDefinition:DashboardWidgetGroupDefinitionWidgetNoteDefinition",
                    "description": "The definition for a Note widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryTableDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinition:DashboardWidgetGroupDefinitionWidgetQueryTableDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryValueDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinition:DashboardWidgetGroupDefinitionWidgetQueryValueDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scatterplotDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinition:DashboardWidgetGroupDefinitionWidgetScatterplotDefinition",
                    "description": "The definition for a Scatterplot widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceLevelObjectiveDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition:DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servicemapDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinition:DashboardWidgetGroupDefinitionWidgetServicemapDefinition",
                    "description": "The definition for a Service Map widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeseriesDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition",
                    "description": "The definition for a Timeseries widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "toplistDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinition:DashboardWidgetGroupDefinitionWidgetToplistDefinition",
                    "description": "The definition for a Toplist widget.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceServiceDefinition": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "widgetLayout": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetWidgetLayout:DashboardWidgetGroupDefinitionWidgetWidgetLayout",
                    "description": "The layout of the widget on a 'free' dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId",
                "vizType"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime:DashboardWidgetGroupDefinitionWidgetAlertGraphDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetAlertValueDefinition:DashboardWidgetGroupDefinitionWidgetAlertValueDefinition": {
            "properties": {
                "alertId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "alertId"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinition:DashboardWidgetGroupDefinitionWidgetChangeDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime:DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetChangeDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showPresent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime:DashboardWidgetGroupDefinitionWidgetChangeDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition": {
            "properties": {
                "check": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "check",
                "grouping"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime:DashboardWidgetGroupDefinitionWidgetCheckStatusDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinition:DashboardWidgetGroupDefinitionWidgetDistributionDefinition": {
            "properties": {
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime:DashboardWidgetGroupDefinitionWidgetDistributionDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetEventStreamDefinition:DashboardWidgetGroupDefinitionWidgetEventStreamDefinition": {
            "properties": {
                "eventSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime:DashboardWidgetGroupDefinitionWidgetEventTimelineDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetFreeTextDefinition:DashboardWidgetGroupDefinitionWidgetFreeTextDefinition": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "text"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinition:DashboardWidgetGroupDefinitionWidgetGeomapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "view": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "view"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequest": {
            "properties": {
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "palette",
                "paletteFlip"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView:DashboardWidgetGroupDefinitionWidgetGeomapDefinitionView": {
            "properties": {
                "focus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "focus"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinition:DashboardWidgetGroupDefinitionWidgetHeatmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinition:DashboardWidgetGroupDefinitionWidgetHostmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestFillSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionRequestSizeSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle:DashboardWidgetGroupDefinitionWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fillMin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetIframeDefinition:DashboardWidgetGroupDefinitionWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetImageDefinition:DashboardWidgetGroupDefinitionWidgetImageDefinition": {
            "properties": {
                "margin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetLayout:DashboardWidgetGroupDefinitionWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinition:DashboardWidgetGroupDefinitionWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "deprecationMessage": "This parameter has been deprecated. Use `indexes` instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDisplay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDateColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showMessageColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionSort": {
            "properties": {
                "column": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime:DashboardWidgetGroupDefinitionWidgetLogStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetManageStatusDefinition:DashboardWidgetGroupDefinitionWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "count": {
                    "type": "integer",
                    "deprecationMessage": "This parameter has been deprecated.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "integer",
                    "deprecationMessage": "This parameter has been deprecated.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetNoteDefinition:DashboardWidgetGroupDefinitionWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showTick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinition:DashboardWidgetGroupDefinitionWidgetQueryTableDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hasSearchBar": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cellDisplayModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "primaryTag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rowType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cellDisplayMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinition:DashboardWidgetGroupDefinitionWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime:DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinition:DashboardWidgetGroupDefinitionWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequest": {
            "properties": {
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestXSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionRequestYSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition:DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "globalTimeTarget": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrorBudget": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sloId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinition:DashboardWidgetGroupDefinitionWidgetServicemapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetServicemapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendLayout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rightYaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onRightYaxis": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lineWidth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRightYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis:DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinition:DashboardWidgetGroupDefinitionWidgetToplistDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime:DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink:DashboardWidgetGroupDefinitionWidgetToplistDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle:DashboardWidgetGroupDefinitionWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime:DashboardWidgetGroupDefinitionWidgetToplistDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showBreakdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDistribution": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrors": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showHits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLatency": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spanName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime:DashboardWidgetGroupDefinitionWidgetTraceServiceDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetGroupDefinitionWidgetWidgetLayout:DashboardWidgetGroupDefinitionWidgetWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinition:DashboardWidgetHeatmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionCustomLink:DashboardWidgetHeatmapDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionEvent:DashboardWidgetHeatmapDefinitionEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionTime:DashboardWidgetHeatmapDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionCustomLink:DashboardWidgetHeatmapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionEvent:DashboardWidgetHeatmapDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequest:DashboardWidgetHeatmapDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetHeatmapDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetHeatmapDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetHeatmapDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQuery:DashboardWidgetHeatmapDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetHeatmapDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestApmQuerySearch:DashboardWidgetHeatmapDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQuery:DashboardWidgetHeatmapDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetHeatmapDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestLogQuerySearch:DashboardWidgetHeatmapDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestProcessQuery:DashboardWidgetHeatmapDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQuery:DashboardWidgetHeatmapDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetHeatmapDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestRumQuerySearch:DashboardWidgetHeatmapDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetHeatmapDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetHeatmapDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch:DashboardWidgetHeatmapDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionRequestStyle:DashboardWidgetHeatmapDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionTime:DashboardWidgetHeatmapDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHeatmapDefinitionYaxis:DashboardWidgetHeatmapDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinition:DashboardWidgetHostmapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionCustomLink:DashboardWidgetHostmapDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionCustomLink:DashboardWidgetHostmapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequest:DashboardWidgetHostmapDefinitionRequest": {
            "properties": {
                "fills": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFill:DashboardWidgetHostmapDefinitionRequestFill": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetHostmapDefinitionRequestFillApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetHostmapDefinitionRequestFillLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetHostmapDefinitionRequestFillRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQuery:DashboardWidgetHostmapDefinitionRequestFillApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch:DashboardWidgetHostmapDefinitionRequestFillApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQuery:DashboardWidgetHostmapDefinitionRequestFillLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch:DashboardWidgetHostmapDefinitionRequestFillLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillProcessQuery:DashboardWidgetHostmapDefinitionRequestFillProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQuery:DashboardWidgetHostmapDefinitionRequestFillRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch:DashboardWidgetHostmapDefinitionRequestFillRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestFillSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestFillSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSize:DashboardWidgetHostmapDefinitionRequestSize": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeProcessQuery:DashboardWidgetHostmapDefinitionRequestSizeProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute:DashboardWidgetHostmapDefinitionRequestSizeSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch:DashboardWidgetHostmapDefinitionRequestSizeSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetHostmapDefinitionStyle:DashboardWidgetHostmapDefinitionStyle": {
            "properties": {
                "fillMax": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fillMin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "paletteFlip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetIframeDefinition:DashboardWidgetIframeDefinition": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetImageDefinition:DashboardWidgetImageDefinition": {
            "properties": {
                "margin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "datadog:index/DashboardWidgetLayout:DashboardWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DashboardWidgetLogStreamDefinition:DashboardWidgetLogStreamDefinition": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "deprecationMessage": "This parameter has been deprecated. Use `indexes` instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageDisplay": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDateColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showMessageColumn": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogStreamDefinitionSort:DashboardWidgetLogStreamDefinitionSort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetLogStreamDefinitionTime:DashboardWidgetLogStreamDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetLogStreamDefinitionSort:DashboardWidgetLogStreamDefinitionSort": {
            "properties": {
                "column": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "column",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetLogStreamDefinitionTime:DashboardWidgetLogStreamDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetManageStatusDefinition:DashboardWidgetManageStatusDefinition": {
            "properties": {
                "colorPreference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "count": {
                    "type": "integer",
                    "deprecationMessage": "This parameter has been deprecated.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "start": {
                    "type": "integer",
                    "deprecationMessage": "This parameter has been deprecated.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetNoteDefinition:DashboardWidgetNoteDefinition": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showTick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinition:DashboardWidgetQueryTableDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionCustomLink:DashboardWidgetQueryTableDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hasSearchBar": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionTime:DashboardWidgetQueryTableDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionCustomLink:DashboardWidgetQueryTableDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequest:DashboardWidgetQueryTableDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetQueryTableDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmStatsQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetQueryTableDefinitionRequestApmStatsQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cellDisplayModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetQueryTableDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetQueryTableDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQuery:DashboardWidgetQueryTableDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetQueryTableDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmQuerySearch:DashboardWidgetQueryTableDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQuery:DashboardWidgetQueryTableDefinitionRequestApmStatsQuery": {
            "properties": {
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "primaryTag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rowType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "name",
                "primaryTag",
                "rowType",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn:DashboardWidgetQueryTableDefinitionRequestApmStatsQueryColumn": {
            "properties": {
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cellDisplayMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestConditionalFormat:DashboardWidgetQueryTableDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQuery:DashboardWidgetQueryTableDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetQueryTableDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestLogQuerySearch:DashboardWidgetQueryTableDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestProcessQuery:DashboardWidgetQueryTableDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQuery:DashboardWidgetQueryTableDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetQueryTableDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestRumQuerySearch:DashboardWidgetQueryTableDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryTableDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryTableDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryTableDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryTableDefinitionTime:DashboardWidgetQueryTableDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinition:DashboardWidgetQueryValueDefinition": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionCustomLink:DashboardWidgetQueryValueDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionTime:DashboardWidgetQueryValueDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionCustomLink:DashboardWidgetQueryValueDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequest:DashboardWidgetQueryValueDefinitionRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetQueryValueDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormula:DashboardWidgetQueryValueDefinitionRequestFormula"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetQueryValueDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQuery:DashboardWidgetQueryValueDefinitionRequestQuery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetQueryValueDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQuery:DashboardWidgetQueryValueDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetQueryValueDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestApmQuerySearch:DashboardWidgetQueryValueDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestConditionalFormat:DashboardWidgetQueryValueDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormula:DashboardWidgetQueryValueDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetQueryValueDefinitionRequestFormulaLimit",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestFormulaLimit:DashboardWidgetQueryValueDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQuery:DashboardWidgetQueryValueDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetQueryValueDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestLogQuerySearch:DashboardWidgetQueryValueDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestProcessQuery:DashboardWidgetQueryValueDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQuery:DashboardWidgetQueryValueDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetQueryValueDefinitionRequestQueryEventQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuery:DashboardWidgetQueryValueDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch:DashboardWidgetQueryValueDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery:DashboardWidgetQueryValueDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery:DashboardWidgetQueryValueDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQuery:DashboardWidgetQueryValueDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetQueryValueDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestRumQuerySearch:DashboardWidgetQueryValueDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetQueryValueDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetQueryValueDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch:DashboardWidgetQueryValueDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetQueryValueDefinitionTime:DashboardWidgetQueryValueDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinition:DashboardWidgetScatterplotDefinition": {
            "properties": {
                "colorByGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionCustomLink:DashboardWidgetScatterplotDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionTime:DashboardWidgetScatterplotDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "xaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionCustomLink:DashboardWidgetScatterplotDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequest:DashboardWidgetScatterplotDefinitionRequest": {
            "properties": {
                "xes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestX:DashboardWidgetScatterplotDefinitionRequestX": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetScatterplotDefinitionRequestXApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetScatterplotDefinitionRequestXLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetScatterplotDefinitionRequestXRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQuery:DashboardWidgetScatterplotDefinitionRequestXApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestXApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQuery:DashboardWidgetScatterplotDefinitionRequestXLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestXLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXProcessQuery:DashboardWidgetScatterplotDefinitionRequestXProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQuery:DashboardWidgetScatterplotDefinitionRequestXRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestXRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestXSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestXSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestY:DashboardWidgetScatterplotDefinitionRequestY": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetScatterplotDefinitionRequestYApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetScatterplotDefinitionRequestYLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetScatterplotDefinitionRequestYRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQuery:DashboardWidgetScatterplotDefinitionRequestYApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch:DashboardWidgetScatterplotDefinitionRequestYApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQuery:DashboardWidgetScatterplotDefinitionRequestYLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch:DashboardWidgetScatterplotDefinitionRequestYLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYProcessQuery:DashboardWidgetScatterplotDefinitionRequestYProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQuery:DashboardWidgetScatterplotDefinitionRequestYRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch:DashboardWidgetScatterplotDefinitionRequestYRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute:DashboardWidgetScatterplotDefinitionRequestYSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch:DashboardWidgetScatterplotDefinitionRequestYSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionTime:DashboardWidgetScatterplotDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionXaxis:DashboardWidgetScatterplotDefinitionXaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetScatterplotDefinitionYaxis:DashboardWidgetScatterplotDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetServiceLevelObjectiveDefinition:DashboardWidgetServiceLevelObjectiveDefinition": {
            "properties": {
                "globalTimeTarget": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrorBudget": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sloId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeWindows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viewType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sloId",
                "timeWindows",
                "viewMode",
                "viewType"
            ]
        },
        "datadog:index/DashboardWidgetServicemapDefinition:DashboardWidgetServicemapDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetServicemapDefinitionCustomLink:DashboardWidgetServicemapDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "service"
            ]
        },
        "datadog:index/DashboardWidgetServicemapDefinitionCustomLink:DashboardWidgetServicemapDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinition:DashboardWidgetTimeseriesDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionCustomLink:DashboardWidgetTimeseriesDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendColumns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendLayout": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rightYaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetTimeseriesDefinitionRightYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLegend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionTime:DashboardWidgetTimeseriesDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionCustomLink:DashboardWidgetTimeseriesDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionEvent:DashboardWidgetTimeseriesDefinitionEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagsExecution": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionMarker:DashboardWidgetTimeseriesDefinitionMarker": {
            "properties": {
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequest:DashboardWidgetTimeseriesDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetTimeseriesDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetTimeseriesDefinitionRequestFormula"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetTimeseriesDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "onRightYaxis": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetTimeseriesDefinitionRequestQuery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetTimeseriesDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQuery:DashboardWidgetTimeseriesDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch:DashboardWidgetTimeseriesDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormula:DashboardWidgetTimeseriesDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetTimeseriesDefinitionRequestFormulaLimit",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestFormulaLimit:DashboardWidgetTimeseriesDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQuery:DashboardWidgetTimeseriesDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch:DashboardWidgetTimeseriesDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestMetadata:DashboardWidgetTimeseriesDefinitionRequestMetadata": {
            "properties": {
                "aliasName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch:DashboardWidgetTimeseriesDefinitionRequestNetworkQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestProcessQuery:DashboardWidgetTimeseriesDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQuery:DashboardWidgetTimeseriesDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch:DashboardWidgetTimeseriesDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery:DashboardWidgetTimeseriesDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery:DashboardWidgetTimeseriesDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQuery:DashboardWidgetTimeseriesDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch:DashboardWidgetTimeseriesDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch:DashboardWidgetTimeseriesDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRequestStyle:DashboardWidgetTimeseriesDefinitionRequestStyle": {
            "properties": {
                "lineType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lineWidth": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionRightYaxis:DashboardWidgetTimeseriesDefinitionRightYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionTime:DashboardWidgetTimeseriesDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTimeseriesDefinitionYaxis:DashboardWidgetTimeseriesDefinitionYaxis": {
            "properties": {
                "includeZero": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "max": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scale": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinition:DashboardWidgetToplistDefinition": {
            "properties": {
                "customLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionCustomLink:DashboardWidgetToplistDefinitionCustomLink"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionTime:DashboardWidgetToplistDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionCustomLink:DashboardWidgetToplistDefinitionCustomLink": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "link": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "label",
                "link"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequest:DashboardWidgetToplistDefinitionRequest": {
            "properties": {
                "apmQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQuery:DashboardWidgetToplistDefinitionRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormula:DashboardWidgetToplistDefinitionRequestFormula"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQuery:DashboardWidgetToplistDefinitionRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQuery:DashboardWidgetToplistDefinitionRequestQuery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rumQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQuery:DashboardWidgetToplistDefinitionRequestRumQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "securityQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetToplistDefinitionRequestSecurityQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQuery:DashboardWidgetToplistDefinitionRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetToplistDefinitionRequestApmQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetToplistDefinitionRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetToplistDefinitionRequestApmQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryCompute:DashboardWidgetToplistDefinitionRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery:DashboardWidgetToplistDefinitionRequestApmQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBy:DashboardWidgetToplistDefinitionRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestApmQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute:DashboardWidgetToplistDefinitionRequestApmQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestApmQuerySearch:DashboardWidgetToplistDefinitionRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestConditionalFormat:DashboardWidgetToplistDefinitionRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideValue": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator",
                "palette",
                "value"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormula:DashboardWidgetToplistDefinitionRequestFormula": {
            "properties": {
                "alias": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "formulaExpression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetToplistDefinitionRequestFormulaLimit",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "formulaExpression"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestFormulaLimit:DashboardWidgetToplistDefinitionRequestFormulaLimit": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQuery:DashboardWidgetToplistDefinitionRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetToplistDefinitionRequestLogQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetToplistDefinitionRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetToplistDefinitionRequestLogQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryCompute:DashboardWidgetToplistDefinitionRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery:DashboardWidgetToplistDefinitionRequestLogQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBy:DashboardWidgetToplistDefinitionRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestLogQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute:DashboardWidgetToplistDefinitionRequestLogQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestLogQuerySearch:DashboardWidgetToplistDefinitionRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestProcessQuery:DashboardWidgetToplistDefinitionRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQuery:DashboardWidgetToplistDefinitionRequestQuery": {
            "properties": {
                "eventQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetToplistDefinitionRequestQueryEventQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetToplistDefinitionRequestQueryMetricQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetToplistDefinitionRequestQueryProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuery:DashboardWidgetToplistDefinitionRequestQueryEventQuery": {
            "properties": {
                "computes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "computes",
                "dataSource",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute:DashboardWidgetToplistDefinitionRequestQueryEventQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort:DashboardWidgetToplistDefinitionRequestQueryEventQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch:DashboardWidgetToplistDefinitionRequestQueryEventQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryMetricQuery:DashboardWidgetToplistDefinitionRequestQueryMetricQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestQueryProcessQuery:DashboardWidgetToplistDefinitionRequestQueryProcessQuery": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dataSource": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isNormalizedCpu": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "dataSource",
                "metric",
                "name"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQuery:DashboardWidgetToplistDefinitionRequestRumQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetToplistDefinitionRequestRumQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetToplistDefinitionRequestRumQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetToplistDefinitionRequestRumQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryCompute:DashboardWidgetToplistDefinitionRequestRumQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery:DashboardWidgetToplistDefinitionRequestRumQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBy:DashboardWidgetToplistDefinitionRequestRumQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestRumQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute:DashboardWidgetToplistDefinitionRequestRumQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestRumQuerySearch:DashboardWidgetToplistDefinitionRequestRumQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQuery:DashboardWidgetToplistDefinitionRequestSecurityQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryCompute",
                    "deprecationMessage": "Define `compute_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "computeQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "multiComputes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetToplistDefinitionRequestSecurityQuerySearch",
                    "deprecationMessage": "Define `search_query` directly instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryComputeQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort",
                    "deprecationMessage": "Define `sort_query` list with one element instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sortQuery": {
                    "$ref": "#/types/datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery:DashboardWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute:DashboardWidgetToplistDefinitionRequestSecurityQueryMultiCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestSecurityQuerySearch:DashboardWidgetToplistDefinitionRequestSecurityQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/DashboardWidgetToplistDefinitionRequestStyle:DashboardWidgetToplistDefinitionRequestStyle": {
            "properties": {
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetToplistDefinitionTime:DashboardWidgetToplistDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetTraceServiceDefinition:DashboardWidgetTraceServiceDefinition": {
            "properties": {
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "service": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showBreakdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showDistribution": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showErrors": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showHits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLatency": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "spanName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "$ref": "#/types/datadog:index/DashboardWidgetTraceServiceDefinitionTime:DashboardWidgetTraceServiceDefinitionTime",
                    "deprecationMessage": "Define `live_span` directly in the widget definition instead.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "env",
                "service",
                "spanName"
            ]
        },
        "datadog:index/DashboardWidgetTraceServiceDefinitionTime:DashboardWidgetTraceServiceDefinitionTime": {
            "properties": {
                "liveSpan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/DashboardWidgetWidgetLayout:DashboardWidgetWidgetLayout": {
            "properties": {
                "height": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "height",
                "width",
                "x",
                "y"
            ]
        },
        "datadog:index/DowntimeRecurrence:DowntimeRecurrence": {
            "properties": {
                "period": {
                    "type": "integer",
                    "description": "How often to repeat as an integer. For example to repeat every 3 days, select a `type` of `days` and a `period` of `3`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rrule": {
                    "type": "string",
                    "description": "The RRULE standard for defining recurring events. For example, to have a recurring event on the first day of each month, use `FREQ=MONTHLY;INTERVAL=1`. Most common rrule options from the iCalendar Spec are supported. Attributes specifying the duration in RRULE are not supported (for example, `DTSTART`, `DTEND`, `DURATION`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "One of `days`, `weeks`, `months`, or `years`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "untilDate": {
                    "type": "integer",
                    "description": "The date at which the recurrence should end as a POSIX timestamp. `until_occurrences` and `until_date` are mutually exclusive.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "untilOccurrences": {
                    "type": "integer",
                    "description": "How many times the downtime will be rescheduled. `until_occurrences` and `until_date` are mutually exclusive.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weekDays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of week days to repeat on. Choose from: `Mon`, `Tue`, `Wed`, `Thu`, `Fri`, `Sat` or `Sun`. Only applicable when `type` is `weeks`. First letter must be capitalized.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/LogsArchiveAzure:LogsArchiveAzure": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "container": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "storageAccount": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "container",
                "storageAccount",
                "tenantId"
            ]
        },
        "datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Your client id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "container": {
                    "type": "string",
                    "description": "The container where the archive will be stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path where the archive will be stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "storageAccount": {
                    "type": "string",
                    "description": "The associated storage account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tenantId": {
                    "type": "string",
                    "description": "Your tenant id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "container",
                "storageAccount",
                "tenantId"
            ]
        },
        "datadog:index/LogsArchiveGcs:LogsArchiveGcs": {
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "clientEmail": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "clientEmail",
                "path",
                "projectId"
            ]
        },
        "datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive": {
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Name of your GCS bucket.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your client email.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path where the archive will be stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "description": "Your project id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "bucket",
                "clientEmail",
                "path",
                "projectId"
            ]
        },
        "datadog:index/LogsArchiveS3:LogsArchiveS3": {
            "properties": {
                "accountId": {
                    "type": "string"
                },
                "bucket": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "roleName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "bucket",
                "path",
                "roleName"
            ]
        },
        "datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS account id.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bucket": {
                    "type": "string",
                    "description": "Name of your s3 bucket.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "Path where the archive will be stored.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "roleName": {
                    "type": "string",
                    "description": "Your AWS role name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountId",
                "bucket",
                "path",
                "roleName"
            ]
        },
        "datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor",
                    "description": "Arithmetic Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#arithmetic-processor)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper",
                    "description": "Attribute Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#remapper)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor",
                    "description": "Category Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#category-processor)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper",
                    "description": "Date Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-date-remapper)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grokParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser",
                    "description": "Grok Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#grok-parser)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorLookupProcessor",
                    "description": "Lookup Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper",
                    "description": "Message Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-message-remapper)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pipeline": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper",
                    "description": "Service Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#service-remapper)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper",
                    "description": "Status Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-status-remapper)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser",
                    "description": "URL Parser Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#url-parser)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/LogsCustomPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideOnConflict": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preserveSource": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filter": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorDateRemapper:LogsCustomPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGrokParser:LogsCustomPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "supportRules": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorLookupProcessor": {
            "properties": {
                "defaultLookup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "lookupTables",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipeline:LogsCustomPipelineProcessorPipeline": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filters",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineFilter:LogsCustomPipelineProcessorPipelineFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessor:LogsCustomPipelineProcessorPipelineProcessor": {
            "properties": {
                "arithmeticProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor",
                    "description": "Arithmetic Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#arithmetic-processor)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "attributeRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper",
                    "description": "Attribute Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#remapper)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "categoryProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor",
                    "description": "Category Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#category-processor)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dateRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper",
                    "description": "Date Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-date-remapper)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoIpParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grokParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser",
                    "description": "Grok Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#grok-parser)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorLookupProcessor",
                    "description": "Lookup Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#lookup-processor)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messageRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper",
                    "description": "Message Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-message-remapper)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper",
                    "description": "Service Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#service-remapper)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper",
                    "description": "Status Remapper Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#log-status-remapper)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stringBuilderProcessor": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "traceIdRemapper": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "urlParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser",
                    "description": "URL Parser Processor. More information can be found in the [official docs](https://docs.datadoghq.com/logs/processing/processors/?tab=ui#url-parser)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentParser": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor:LogsCustomPipelineProcessorPipelineProcessorArithmeticProcessor": {
            "properties": {
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expression",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper:LogsCustomPipelineProcessorPipelineProcessorAttributeRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "overrideOnConflict": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preserveSource": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sourceType",
                "sources",
                "target",
                "targetType"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessor": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "categories",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategory": {
            "properties": {
                "filter": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "filter",
                "name"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter:LogsCustomPipelineProcessorPipelineProcessorCategoryProcessorCategoryFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Filter criteria of the category.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorDateRemapper:LogsCustomPipelineProcessorPipelineProcessorDateRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGeoIpParser:LogsCustomPipelineProcessorPipelineProcessorGeoIpParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParser:LogsCustomPipelineProcessorPipelineProcessorGrokParser": {
            "properties": {
                "grok": {
                    "$ref": "#/types/datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samples": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "grok",
                "source"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok:LogsCustomPipelineProcessorPipelineProcessorGrokParserGrok": {
            "properties": {
                "matchRules": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "supportRules": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "matchRules",
                "supportRules"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorLookupProcessor:LogsCustomPipelineProcessorPipelineProcessorLookupProcessor": {
            "properties": {
                "defaultLookup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lookupTables": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "lookupTables",
                "source",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorMessageRemapper:LogsCustomPipelineProcessorPipelineProcessorMessageRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorUrlParser:LogsCustomPipelineProcessorPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalizeEndingSlashes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEncoded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorServiceRemapper:LogsCustomPipelineProcessorServiceRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorStatusRemapper:LogsCustomPipelineProcessorStatusRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorStringBuilderProcessor:LogsCustomPipelineProcessorStringBuilderProcessor": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isReplaceMissing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "template"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorTraceIdRemapper:LogsCustomPipelineProcessorTraceIdRemapper": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorUrlParser:LogsCustomPipelineProcessorUrlParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "normalizeEndingSlashes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsCustomPipelineProcessorUserAgentParser:LogsCustomPipelineProcessorUserAgentParser": {
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEncoded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sources",
                "target"
            ]
        },
        "datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter": {
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter"
                    },
                    "description": "Logs filter\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "A boolean stating if the exclusion is active or not.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the exclusion filter.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/LogsIndexExclusionFilterFilter:LogsIndexExclusionFilterFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Logs filter criteria. Only logs matching this filter criteria are considered for this index.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sampleRate": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/LogsIndexFilter:LogsIndexFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "Logs filter criteria. Only logs matching this filter criteria are considered for this index.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsMetricCompute:LogsMetricCompute": {
            "properties": {
                "aggregationType": {
                    "type": "string",
                    "description": "The type of aggregation to use. This field can't be updated after creation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "description": "The path to the value the log-based metric will aggregate on (only used if the aggregation type is a \"distribution\"). This field can't be updated after creation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregationType"
            ]
        },
        "datadog:index/LogsMetricFilter:LogsMetricFilter": {
            "properties": {
                "query": {
                    "type": "string",
                    "description": "The search query - following the log search syntax.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/LogsMetricGroupBy:LogsMetricGroupBy": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "The path to the value the log-based metric will be aggregated over.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagName": {
                    "type": "string",
                    "description": "Name of the tag that gets created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "path",
                "tagName"
            ]
        },
        "datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string",
                    "description": "Describes how long an anomalous metric must be normal before the alert recovers.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerWindow": {
                    "type": "string",
                    "description": "Describes how long a metric must be anomalous before an alert triggers.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "string",
                    "description": "The monitor `CRITICAL` recovery threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "criticalRecovery": {
                    "type": "string",
                    "description": "The monitor `CRITICAL` recovery threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ok": {
                    "type": "string",
                    "description": "The monitor `OK` threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknown": {
                    "type": "string",
                    "description": "The monitor `UNKNOWN` threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warning": {
                    "type": "string",
                    "description": "The monitor `WARNING` threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warningRecovery": {
                    "type": "string",
                    "description": "The monitor `WARNING` recovery threshold. Must be a number.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorThresholdWindows:MonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string"
                },
                "triggerWindow": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/MonitorThresholds:MonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "number"
                },
                "criticalRecovery": {
                    "type": "number"
                },
                "ok": {
                    "type": "number"
                },
                "unknown": {
                    "type": "number"
                },
                "warning": {
                    "type": "number"
                },
                "warningRecovery": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "datadog:index/RolePermission:RolePermission": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the permission to assign.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the permission.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name"
                    ]
                }
            }
        },
        "datadog:index/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/ScreenBoardWidget:ScreenBoardWidget": {
            "properties": {
                "alertId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoRefresh": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bgcolor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "check": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "colorPreference": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "columns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "env": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "eventSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fontSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "group": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grouping": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "height": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hideZeroCounts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "html": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layoutVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legend": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "legendSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logset": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusShowTitle": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "manageStatusTitleText": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "margin": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitor": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowBreakdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowDistribution": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowErrors": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowHits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowLatency": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustShowResourceList": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "params": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetRule:ScreenBoardWidgetRule"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLastTriggered": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizeVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sizing": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "summaryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textSize": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEdge": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickPos": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tileDeves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDef:ScreenBoardWidgetTileDef"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "time": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "titleSize": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vizType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "width": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "x",
                "y"
            ]
        },
        "datadog:index/ScreenBoardWidgetRule:ScreenBoardWidgetRule": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "threshold": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/ScreenBoardWidgetTileDef:ScreenBoardWidgetTileDef": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefEvent:ScreenBoardWidgetTileDefEvent"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefMarker:ScreenBoardWidgetTileDefMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noGroupHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequest:ScreenBoardWidgetTileDefRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viz": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requests",
                "viz"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefEvent:ScreenBoardWidgetTileDefEvent": {
            "properties": {
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "q"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefMarker:ScreenBoardWidgetTileDefMarker": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequest:ScreenBoardWidgetTileDefRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestApmQuery:ScreenBoardWidgetTileDefRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestConditionalFormat:ScreenBoardWidgetTileDefRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extraCol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestLogQuery:ScreenBoardWidgetTileDefRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDir": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestProcessQuery:ScreenBoardWidgetTileDefRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textFilter": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestApmQuery:ScreenBoardWidgetTileDefRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestApmQueryCompute:ScreenBoardWidgetTileDefRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestApmQueryGroupBy:ScreenBoardWidgetTileDefRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestApmQuerySearch:ScreenBoardWidgetTileDefRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestApmQueryCompute:ScreenBoardWidgetTileDefRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestApmQueryGroupBy:ScreenBoardWidgetTileDefRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestApmQueryGroupBySort:ScreenBoardWidgetTileDefRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestApmQueryGroupBySort:ScreenBoardWidgetTileDefRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestApmQuerySearch:ScreenBoardWidgetTileDefRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestConditionalFormat:ScreenBoardWidgetTileDefRequestConditionalFormat": {
            "properties": {
                "color": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "invert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestLogQuery:ScreenBoardWidgetTileDefRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestLogQueryCompute:ScreenBoardWidgetTileDefRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestLogQueryGroupBy:ScreenBoardWidgetTileDefRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestLogQuerySearch:ScreenBoardWidgetTileDefRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestLogQueryCompute:ScreenBoardWidgetTileDefRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestLogQueryGroupBy:ScreenBoardWidgetTileDefRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/ScreenBoardWidgetTileDefRequestLogQueryGroupBySort:ScreenBoardWidgetTileDefRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestLogQueryGroupBySort:ScreenBoardWidgetTileDefRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestLogQuerySearch:ScreenBoardWidgetTileDefRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/ScreenBoardWidgetTileDefRequestProcessQuery:ScreenBoardWidgetTileDefRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase": {
            "properties": {
                "condition": {
                    "type": "string",
                    "description": "A rule case contains logical operations (`\u003e`,`\u003e=`, `\u0026\u0026`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the case.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Notification targets for each rule case.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Severity of the Security Signal.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ]
        },
        "datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions": {
            "properties": {
                "evaluationWindow": {
                    "type": "integer",
                    "description": "A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepAlive": {
                    "type": "integer",
                    "description": "Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSignalDuration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "evaluationWindow",
                "keepAlive",
                "maxSignalDuration"
            ]
        },
        "datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "description": "The aggregation type.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distinctFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Field for which the cardinality is measured. Sent as an array.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "description": "The target field to aggregate over when using the sum or max aggregations.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "description": "Query to run on logs.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery": {
            "properties": {
                "denominator": {
                    "type": "string",
                    "description": "The sum of the `total` events.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "numerator": {
                    "type": "string",
                    "description": "The sum of all the `good` events.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "denominator",
                "numerator"
            ]
        },
        "datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold": {
            "properties": {
                "target": {
                    "type": "number",
                    "description": "The objective's target in`[0,100]`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetDisplay": {
                    "type": "string",
                    "description": "A string representation of the target that indicates its precision. It uses trailing zeros to show significant decimal places (e.g. `98.00`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeframe": {
                    "type": "string",
                    "description": "The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Available options to choose from are: `7d`, `30d`, `90d`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warning": {
                    "type": "number",
                    "description": "The objective's warning value in `[0,100]`. This must be greater than the target value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warningDisplay": {
                    "type": "string",
                    "description": "A string representation of the warning target (see the description of the target_display field for details).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target",
                "timeframe"
            ]
        },
        "datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Required when type = `http_header`. Defines the header to use to extract the value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parser": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptionsParser:SyntheticsGlobalVariableParseTestOptionsParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Defines the source to use to extract the value. Allowed enum values: `http_body`, `http_header`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "parser",
                "type"
            ]
        },
        "datadog:index/SyntheticsGlobalVariableParseTestOptionsParser:SyntheticsGlobalVariableParseTestOptionsParser": {
            "properties": {
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "The value of the global variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep": {
            "properties": {
                "assertions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStepAssertion:SyntheticsTestApiStepAssertion"
                    },
                    "description": "Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extractedValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStepExtractedValue:SyntheticsTestApiStepExtractedValue"
                    },
                    "description": "Values to parse and save as variables from the response.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestBasicauth:SyntheticsTestApiStepRequestBasicauth",
                    "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificate:SyntheticsTestApiStepRequestClientCertificate",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestDefinition:SyntheticsTestApiStepRequestDefinition",
                    "description": "The request for the api step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Header name and value map.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Query arguments name and value map.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subtype": {
                    "type": "string",
                    "description": "The subtype of the Synthetic multistep API test step, currently only supporting `http`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/SyntheticsTestApiStepAssertion:SyntheticsTestApiStepAssertion": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "property": {
                    "type": "string",
                    "description": "If assertion type is `header`, this is the header name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetjsonpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepAssertionTargetjsonpath:SyntheticsTestApiStepAssertionTargetjsonpath",
                    "description": "Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of assertion. Choose from `body`, `header`, `responseTime`, `statusCode`. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepAssertionTargetjsonpath:SyntheticsTestApiStepAssertionTargetjsonpath": {
            "properties": {
                "jsonpath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetvalue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "jsonpath",
                "operator",
                "targetvalue"
            ]
        },
        "datadog:index/SyntheticsTestApiStepExtractedValue:SyntheticsTestApiStepExtractedValue": {
            "properties": {
                "field": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog synthetics test.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parser": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepExtractedValueParser:SyntheticsTestApiStepExtractedValueParser",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Synthetics test type (`api` or `browser`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "parser",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepExtractedValueParser:SyntheticsTestApiStepExtractedValueParser": {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Synthetics test type (`api` or `browser`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestBasicauth:SyntheticsTestApiStepRequestBasicauth": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Password for authentication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "Username for authentication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificate:SyntheticsTestApiStepRequestClientCertificate": {
            "properties": {
                "cert": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificateCert:SyntheticsTestApiStepRequestClientCertificateCert",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "$ref": "#/types/datadog:index/SyntheticsTestApiStepRequestClientCertificateKey:SyntheticsTestApiStepRequestClientCertificateKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificateCert:SyntheticsTestApiStepRequestClientCertificateCert": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filename": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestClientCertificateKey:SyntheticsTestApiStepRequestClientCertificateKey": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filename": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestApiStepRequestDefinition:SyntheticsTestApiStepRequestDefinition": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The request body.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsServer": {
                    "type": "string",
                    "description": "DNS server to use for DNS tests (`subtype = \"dns\"`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Host name to perform the test with.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "The HTTP method. One of `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noSavingResponseBody": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Port to use when performing the test.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout in seconds for the test. Defaults to `60`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL to send the request to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestAssertion:SyntheticsTestAssertion": {
            "properties": {
                "operator": {
                    "type": "string",
                    "description": "Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "property": {
                    "type": "string",
                    "description": "If assertion type is `header`, this is the header name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "description": "Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetjsonpath": {
                    "$ref": "#/types/datadog:index/SyntheticsTestAssertionTargetjsonpath:SyntheticsTestAssertionTargetjsonpath",
                    "description": "Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of assertion. Choose from `body`, `header`, `responseTime`, `statusCode`. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "operator",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestAssertionTargetjsonpath:SyntheticsTestAssertionTargetjsonpath": {
            "properties": {
                "jsonpath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "operator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "targetvalue": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "jsonpath",
                "operator",
                "targetvalue"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep": {
            "properties": {
                "allowFailure": {
                    "type": "boolean",
                    "description": "Determines if the step should be allowed to fail.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forceElementUpdate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "params": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParams:SyntheticsTestBrowserStepParams",
                    "description": "Parameters for the step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Used to override the default timeout of a step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of the step. Refer to [Datadog documentation](https://docs.datadoghq.com/api/v1/synthetics/#create-a-test) for the complete list of available types.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "params",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestBrowserStepParams:SyntheticsTestBrowserStepParams": {
            "properties": {
                "attribute": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "check": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clickType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "code": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "delay": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "element": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "file": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "files": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "modifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "playingTabId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "type": "string",
                    "description": "The synthetics test request. Required if `type = \"api\"`. **Deprecated.** Define `request_definition` list with one element instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subtestPublicId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "variable": {
                    "$ref": "#/types/datadog:index/SyntheticsTestBrowserStepParamsVariable:SyntheticsTestBrowserStepParamsVariable",
                    "description": "Variables used for a browser test steps. Multiple `browser_variable` blocks are allowed with the structure below. **Deprecated.** Define `browser_variable` blocks instead.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "withClick": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "x": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "y": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestBrowserStepParamsVariable:SyntheticsTestBrowserStepParamsVariable": {
            "properties": {
                "example": {
                    "type": "string",
                    "description": "Example for the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable": {
            "properties": {
                "example": {
                    "type": "string",
                    "description": "Example for the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type `global`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of browser test variable. Allowed enum values: `element`, `email`, `global`, `javascript`, `text`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable": {
            "properties": {
                "example": {
                    "type": "string",
                    "description": "Example for the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of test configuration variable. Allowed enum values: `text`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestOptions:SyntheticsTestOptions": {
            "properties": {
                "acceptSelfSigned": {
                    "type": "boolean"
                },
                "allowInsecure": {
                    "type": "boolean"
                },
                "followRedirects": {
                    "type": "boolean"
                },
                "minFailureDuration": {
                    "type": "integer"
                },
                "minLocationFailed": {
                    "type": "integer"
                },
                "retryCount": {
                    "type": "integer"
                },
                "retryInterval": {
                    "type": "integer"
                },
                "tickEvery": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "tickEvery"
            ]
        },
        "datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList": {
            "properties": {
                "acceptSelfSigned": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowInsecure": {
                    "type": "boolean",
                    "description": "Allows loading insecure content for an HTTP test.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "followRedirects": {
                    "type": "boolean",
                    "description": "For API HTTP test, whether or not the test should follow redirects.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minFailureDuration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minLocationFailed": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "monitorOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListMonitorOptions:SyntheticsTestOptionsListMonitorOptions",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noScreenshot": {
                    "type": "boolean",
                    "description": "Prevents saving screenshots of the steps.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "retry": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsListRetry:SyntheticsTestOptionsListRetry",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tickEvery": {
                    "type": "integer",
                    "description": "How often the test should run (in seconds). Current possible values are `900`, `1800`, `3600`, `21600`, `43200`, `86400`, `604800` plus `60` for API tests or `300` for browser tests.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "tickEvery"
            ]
        },
        "datadog:index/SyntheticsTestOptionsListMonitorOptions:SyntheticsTestOptionsListMonitorOptions": {
            "properties": {
                "renotifyInterval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestOptionsListRetry:SyntheticsTestOptionsListRetry": {
            "properties": {
                "count": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestRequest:SyntheticsTestRequest": {
            "properties": {
                "body": {
                    "type": "string"
                },
                "dnsServer": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "noSavingResponseBody": {
                    "type": "boolean"
                },
                "port": {
                    "type": "integer"
                },
                "timeout": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Password for authentication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "description": "Username for authentication.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate": {
            "properties": {
                "cert": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificateCert:SyntheticsTestRequestClientCertificateCert",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificateKey:SyntheticsTestRequestClientCertificateKey",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "datadog:index/SyntheticsTestRequestClientCertificateCert:SyntheticsTestRequestClientCertificateCert": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filename": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestRequestClientCertificateKey:SyntheticsTestRequestClientCertificateKey": {
            "properties": {
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "filename": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "content"
            ]
        },
        "datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The request body.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dnsServer": {
                    "type": "string",
                    "description": "DNS server to use for DNS tests (`subtype = \"dns\"`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "description": "Host name to perform the test with.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "description": "The HTTP method. One of `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "noSavingResponseBody": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "description": "Port to use when performing the test.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout in seconds for the test. Defaults to `60`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "The URL to send the request to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/SyntheticsTestStep:SyntheticsTestStep": {
            "properties": {
                "allowFailure": {
                    "type": "boolean",
                    "description": "Determines if the step should be allowed to fail.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forceElementUpdate": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "params": {
                    "type": "string",
                    "description": "Parameters for the step as JSON string.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "description": "Used to override the default timeout of a step.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of the step. Refer to [Datadog documentation](https://docs.datadoghq.com/api/v1/synthetics/#create-a-test) for the complete list of available types.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "params",
                "type"
            ]
        },
        "datadog:index/SyntheticsTestVariable:SyntheticsTestVariable": {
            "properties": {
                "example": {
                    "type": "string",
                    "description": "Example for the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type `global`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern of the variable.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Type of browser test variable. Allowed enum values: `element`, `email`, `global`, `javascript`, `text`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ]
        },
        "datadog:index/TimeBoardGraph:TimeBoardGraph": {
            "properties": {
                "autoscale": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeNoMetricHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeUngroupedHosts": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "markers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraphMarker:TimeBoardGraphMarker"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "precision": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraphRequest:TimeBoardGraphRequest"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "textAlign": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "viz": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "yaxis": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "requests",
                "title",
                "viz"
            ]
        },
        "datadog:index/TimeBoardGraphMarker:TimeBoardGraphMarker": {
            "properties": {
                "label": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "datadog:index/TimeBoardGraphRequest:TimeBoardGraphRequest": {
            "properties": {
                "aggregator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apmQuery": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestApmQuery:TimeBoardGraphRequestApmQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "changeType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compareTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditionalFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraphRequestConditionalFormat:TimeBoardGraphRequestConditionalFormat"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extraCol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "increaseGood": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logQuery": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestLogQuery:TimeBoardGraphRequestLogQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metadataJson": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "orderDirection": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "processQuery": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestProcessQuery:TimeBoardGraphRequestProcessQuery",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "q": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stacked": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "style": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "datadog:index/TimeBoardGraphRequestApmQuery:TimeBoardGraphRequestApmQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestApmQueryCompute:TimeBoardGraphRequestApmQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraphRequestApmQueryGroupBy:TimeBoardGraphRequestApmQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestApmQuerySearch:TimeBoardGraphRequestApmQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:index/TimeBoardGraphRequestApmQueryCompute:TimeBoardGraphRequestApmQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/TimeBoardGraphRequestApmQueryGroupBy:TimeBoardGraphRequestApmQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestApmQueryGroupBySort:TimeBoardGraphRequestApmQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/TimeBoardGraphRequestApmQueryGroupBySort:TimeBoardGraphRequestApmQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/TimeBoardGraphRequestApmQuerySearch:TimeBoardGraphRequestApmQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/TimeBoardGraphRequestConditionalFormat:TimeBoardGraphRequestConditionalFormat": {
            "properties": {
                "comparator": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customBgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customFgColor": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "palette": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparator"
            ]
        },
        "datadog:index/TimeBoardGraphRequestLogQuery:TimeBoardGraphRequestLogQuery": {
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestLogQueryCompute:TimeBoardGraphRequestLogQueryCompute",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraphRequestLogQueryGroupBy:TimeBoardGraphRequestLogQueryGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "search": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestLogQuerySearch:TimeBoardGraphRequestLogQuerySearch",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "compute",
                "index"
            ]
        },
        "datadog:index/TimeBoardGraphRequestLogQueryCompute:TimeBoardGraphRequestLogQueryCompute": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation"
            ]
        },
        "datadog:index/TimeBoardGraphRequestLogQueryGroupBy:TimeBoardGraphRequestLogQueryGroupBy": {
            "properties": {
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sort": {
                    "$ref": "#/types/datadog:index/TimeBoardGraphRequestLogQueryGroupBySort:TimeBoardGraphRequestLogQueryGroupBySort",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "facet"
            ]
        },
        "datadog:index/TimeBoardGraphRequestLogQueryGroupBySort:TimeBoardGraphRequestLogQueryGroupBySort": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "order": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "order"
            ]
        },
        "datadog:index/TimeBoardGraphRequestLogQuerySearch:TimeBoardGraphRequestLogQuerySearch": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "datadog:index/TimeBoardGraphRequestProcessQuery:TimeBoardGraphRequestProcessQuery": {
            "properties": {
                "filterBies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "limit": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "searchBy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric"
            ]
        },
        "datadog:index/TimeBoardTemplateVariable:TimeBoardTemplateVariable": {
            "properties": {
                "default": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prefix": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "datadog:index/getMonitorMonitorThresholdWindows:getMonitorMonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "triggerWindow": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "recoveryWindow",
                "triggerWindow"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorMonitorThresholds:getMonitorMonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "criticalRecovery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ok": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unknown": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warning": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "warningRecovery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "critical",
                "criticalRecovery",
                "ok",
                "unknown",
                "warning",
                "warningRecovery"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorThresholdWindows:getMonitorThresholdWindows": {
            "properties": {
                "recoveryWindow": {
                    "type": "string"
                },
                "triggerWindow": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "recoveryWindow",
                "triggerWindow"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getMonitorThresholds:getMonitorThresholds": {
            "properties": {
                "critical": {
                    "type": "number"
                },
                "criticalRecovery": {
                    "type": "number"
                },
                "ok": {
                    "type": "number"
                },
                "unknown": {
                    "type": "number"
                },
                "warning": {
                    "type": "number"
                },
                "warningRecovery": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "critical",
                "criticalRecovery",
                "ok",
                "unknown",
                "warning",
                "warningRecovery"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRule:getSecurityMonitoringRulesRule": {
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleCase:getSecurityMonitoringRulesRuleCase"
                    },
                    "description": "Cases for generating signals.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the rule is enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "description": "Message for generated signals.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "options": {
                    "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleOptions:getSecurityMonitoringRulesRuleOptions",
                    "description": "Options on rules.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRuleQuery:getSecurityMonitoringRulesRuleQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for generated signals.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cases",
                "message",
                "name",
                "queries"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleCase:getSecurityMonitoringRulesRuleCase": {
            "properties": {
                "condition": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "notifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleOptions:getSecurityMonitoringRulesRuleOptions": {
            "properties": {
                "evaluationWindow": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keepAlive": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxSignalDuration": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "evaluationWindow",
                "keepAlive",
                "maxSignalDuration"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:index/getSecurityMonitoringRulesRuleQuery:getSecurityMonitoringRulesRuleQuery": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "distinctFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupByFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metric": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "datadog:pagerduty/IntegrationService:IntegrationService": {
            "properties": {
                "serviceKey": {
                    "type": "string",
                    "description": "Your Service name associated service key in Pagerduty.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "Your Service name in PagerDuty.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "serviceKey",
                "serviceName"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the datadog package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.\n"
            },
            "apiUrl": {
                "type": "string",
                "description": "The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the /api/\npath. For example, https://api.datadoghq.com/ is a correct value, while https://api.datadoghq.com/api/ is not. And if\nyou're working with \"EU\" version of Datadog, use https://api.datadoghq.eu/.\n"
            },
            "appKey": {
                "type": "string",
                "description": "(Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.\n"
            },
            "validate": {
                "type": "boolean",
                "description": "Enables validation of the provided API and APP keys during provider initialization. Default is true. When false, api_key\nand app_key won't be checked.\n"
            }
        }
    },
    "resources": {
        "datadog:aws/integration:Integration": {
            "description": "Provides a Datadog - Amazon Web Services integration resource. This can be used to create and manage Datadog - Amazon Web Services integration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration\nconst sandbox = new datadog.aws.Integration(\"sandbox\", {\n    accountId: \"1234567890\",\n    accountSpecificNamespaceRules: {\n        auto_scaling: false,\n        opsworks: false,\n    },\n    excludedRegions: [\n        \"us-east-1\",\n        \"us-west-2\",\n    ],\n    filterTags: [\"key:value\"],\n    hostTags: [\n        \"key:value\",\n        \"key2:value2\",\n    ],\n    roleName: \"DatadogAWSIntegrationRole\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration\nsandbox = datadog.aws.Integration(\"sandbox\",\n    account_id=\"1234567890\",\n    account_specific_namespace_rules={\n        \"auto_scaling\": False,\n        \"opsworks\": False,\n    },\n    excluded_regions=[\n        \"us-east-1\",\n        \"us-west-2\",\n    ],\n    filter_tags=[\"key:value\"],\n    host_tags=[\n        \"key:value\",\n        \"key2:value2\",\n    ],\n    role_name=\"DatadogAWSIntegrationRole\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog - Amazon Web Services integration\n        var sandbox = new Datadog.Aws.Integration(\"sandbox\", new Datadog.Aws.IntegrationArgs\n        {\n            AccountId = \"1234567890\",\n            AccountSpecificNamespaceRules = \n            {\n                { \"auto_scaling\", false },\n                { \"opsworks\", false },\n            },\n            ExcludedRegions = \n            {\n                \"us-east-1\",\n                \"us-west-2\",\n            },\n            FilterTags = \n            {\n                \"key:value\",\n            },\n            HostTags = \n            {\n                \"key:value\",\n                \"key2:value2\",\n            },\n            RoleName = \"DatadogAWSIntegrationRole\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewIntegration(ctx, \"sandbox\", \u0026aws.IntegrationArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tAccountSpecificNamespaceRules: pulumi.BoolMap{\n\t\t\t\t\"auto_scaling\": pulumi.Bool(false),\n\t\t\t\t\"opsworks\":     pulumi.Bool(false),\n\t\t\t},\n\t\t\tExcludedRegions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"us-east-1\"),\n\t\t\t\tpulumi.String(\"us-west-2\"),\n\t\t\t},\n\t\t\tFilterTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"key:value\"),\n\t\t\t},\n\t\t\tHostTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"key:value\"),\n\t\t\t\tpulumi.String(\"key2:value2\"),\n\t\t\t},\n\t\t\tRoleName: pulumi.String(\"DatadogAWSIntegrationRole\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# Amazon Web Services integrations can be imported using their account ID and role name separated with a colon (:), while the external_id should be passed by setting an environment variable called EXTERNAL_ID\n\n```sh\n $ pulumi import datadog:aws/integration:Integration EXTERNAL_ID=${external_id} datadog_integration_aws.test ${account_id}:${role_name}\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be\nfound at the [available namespace rules API\nendpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                },
                "excludedRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of AWS regions to exclude from metrics collection.\n"
                },
                "externalId": {
                    "type": "string",
                    "description": "AWS External ID. **NOTE** This provider will not be able to detect changes made to the `external_id` field from outside\nTerraform.\n"
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag. e.x. `env:production,instance-type:c1.*,!region:us-east-1`.\n"
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Your Datadog role delegation name.\n"
                }
            },
            "required": [
                "accountId",
                "externalId",
                "roleName"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "accountSpecificNamespaceRules": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be\nfound at the [available namespace rules API\nendpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                },
                "excludedRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of AWS regions to exclude from metrics collection.\n"
                },
                "filterTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag. e.x. `env:production,instance-type:c1.*,!region:us-east-1`.\n"
                },
                "hostTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Your Datadog role delegation name.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "roleName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes.\n"
                    },
                    "accountSpecificNamespaceRules": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be\nfound at the [available namespace rules API\nendpoint](https://docs.datadoghq.com/api/v1/aws-integration/#list-namespace-rules).\n"
                    },
                    "excludedRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of AWS regions to exclude from metrics collection.\n"
                    },
                    "externalId": {
                        "type": "string",
                        "description": "AWS External ID. **NOTE** This provider will not be able to detect changes made to the `external_id` field from outside\nTerraform.\n"
                    },
                    "filterTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of EC2 tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used. Only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. Host matching a given tag can also be excluded by adding `!` before the tag. e.x. `env:production,instance-type:c1.*,!region:us-east-1`.\n"
                    },
                    "hostTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of tags (in the form `key:value`) to add to all hosts and metrics reporting through this integration.\n"
                    },
                    "roleName": {
                        "type": "string",
                        "description": "Your Datadog role delegation name.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationLambdaArn:IntegrationLambdaArn": {
            "description": "Provides a Datadog - Amazon Web Services integration Lambda ARN resource. This can be used to create and manage the log collection Lambdas for an account.\n\nUpdate operations are currently not supported with datadog API so any change forces a new resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration Lambda ARN\nconst mainCollector = new datadog.aws.IntegrationLambdaArn(\"main_collector\", {\n    accountId: \"1234567890\",\n    lambdaArn: \"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration Lambda ARN\nmain_collector = datadog.aws.IntegrationLambdaArn(\"mainCollector\",\n    account_id=\"1234567890\",\n    lambda_arn=\"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog - Amazon Web Services integration Lambda ARN\n        var mainCollector = new Datadog.Aws.IntegrationLambdaArn(\"mainCollector\", new Datadog.Aws.IntegrationLambdaArnArgs\n        {\n            AccountId = \"1234567890\",\n            LambdaArn = \"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewIntegrationLambdaArn(ctx, \"mainCollector\", \u0026aws.IntegrationLambdaArnArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tLambdaArn: pulumi.String(\"arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# Amazon Web Services Lambda ARN integrations can be imported using their account_id and lambda_arn separated with a space (` `).\n\n```sh\n $ pulumi import datadog:aws/integrationLambdaArn:IntegrationLambdaArn test \"1234567890 arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder\"\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "lambdaArn": {
                    "type": "string",
                    "description": "The ARN of the Datadog forwarder Lambda.\n"
                }
            },
            "required": [
                "accountId",
                "lambdaArn"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "lambdaArn": {
                    "type": "string",
                    "description": "The ARN of the Datadog forwarder Lambda.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "lambdaArn"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationLambdaArn resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes.\n"
                    },
                    "lambdaArn": {
                        "type": "string",
                        "description": "The ARN of the Datadog forwarder Lambda.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:aws/integrationLogCollection:IntegrationLogCollection": {
            "description": "Provides a Datadog - Amazon Web Services integration log collection resource. This can be used to manage which AWS services logs are collected from for an account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Amazon Web Services integration lambda arn\nconst main = new datadog.aws.IntegrationLogCollection(\"main\", {\n    accountId: \"1234567890\",\n    services: [\"lambda\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Amazon Web Services integration lambda arn\nmain = datadog.aws.IntegrationLogCollection(\"main\",\n    account_id=\"1234567890\",\n    services=[\"lambda\"])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog - Amazon Web Services integration lambda arn\n        var main = new Datadog.Aws.IntegrationLogCollection(\"main\", new Datadog.Aws.IntegrationLogCollectionArgs\n        {\n            AccountId = \"1234567890\",\n            Services = \n            {\n                \"lambda\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog/aws\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := aws.NewIntegrationLogCollection(ctx, \"main\", \u0026aws.IntegrationLogCollectionArgs{\n\t\t\tAccountId: pulumi.String(\"1234567890\"),\n\t\t\tServices: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"lambda\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# Amazon Web Services log collection integrations can be imported using the `account ID`.\n\n```sh\n $ pulumi import datadog:aws/integrationLogCollection:IntegrationLogCollection test 1234567890\n```\n\n ",
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of services to collect logs from. See the [api docs](https://docs.datadoghq.com/api/v1/aws-logs-integration/#get-list-of-aws-log-ready-services) for more details on which services are supported.\n"
                }
            },
            "required": [
                "accountId",
                "services"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "string",
                    "description": "Your AWS Account ID without dashes.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of services to collect logs from. See the [api docs](https://docs.datadoghq.com/api/v1/aws-logs-integration/#get-list-of-aws-log-ready-services) for more details on which services are supported.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "services"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IntegrationLogCollection resources.\n",
                "properties": {
                    "accountId": {
                        "type": "string",
                        "description": "Your AWS Account ID without dashes.\n"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of services to collect logs from. See the [api docs](https://docs.datadoghq.com/api/v1/aws-logs-integration/#get-list-of-aws-log-ready-services) for more details on which services are supported.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:azure/integration:Integration": {
            "description": "Provides a Datadog - Microsoft Azure integration resource. This can be used to create and manage the integrations.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Microsoft Azure integration\nconst sandbox = new datadog.azure.Integration(\"sandbox\", {\n    clientId: \"\u003cazure_client_id\u003e\",\n    clientSecret: \"\u003cazure_client_secret_key\u003e\",\n    hostFilters: \"examplefilter:true,example:true\",\n    tenantName: \"\u003cazure_tenant_name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Microsoft Azure integration\nsandbox = datadog.azure.Integration(\"sandbox\",\n    client_id=\"\u003cazure_client_id\u003e\",\n    client_secret=\"\u003cazure_client_secret_key\u003e\",\n    host_filters=\"examplefilter:true,example:true\",\n    tenant_name=\"\u003cazure_tenant_name\u003e\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog - Microsoft Azure integration\n        var sandbox = new Datadog.Azure.Integration(\"sandbox\", new Datadog.Azure.IntegrationArgs\n        {\n            ClientId = \"\u003cazure_client_id\u003e\",\n            ClientSecret = \"\u003cazure_client_secret_key\u003e\",\n            HostFilters = \"examplefilter:true,example:true\",\n            TenantName = \"\u003cazure_tenant_name\u003e\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog/azure\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := azure.NewIntegration(ctx, \"sandbox\", \u0026azure.IntegrationArgs{\n\t\t\tClientId:     pulumi.String(\"\u003cazure_client_id\u003e\"),\n\t\t\tClientSecret: pulumi.String(\"\u003cazure_client_secret_key\u003e\"),\n\t\t\tHostFilters:  pulumi.String(\"examplefilter:true,example:true\"),\n\t\t\tTenantName:   pulumi.String(\"\u003cazure_tenant_name\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# Microsoft Azure integrations can be imported using their `tenant name` and `client` id separated with a colon (`:`).\n\n```sh\n $ pulumi import datadog:azure/integration:Integration sandbox ${tenant_name}:${client_id}\n```\n\n ",
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Your Azure web application ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "(Required for Initial Creation) Your Azure web application secret key.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "Your Azure Active Directory ID.\n"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "tenantName"
            ],
            "inputProperties": {
                "clientId": {
                    "type": "string",
                    "description": "Your Azure web application ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "(Required for Initial Creation) Your Azure web application secret key.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "Your Azure Active Directory ID.\n"
                }
            },
            "requiredInputs": [
                "clientId",
                "clientSecret",
                "tenantName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "Your Azure web application ID.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "(Required for Initial Creation) Your Azure web application secret key.\n"
                    },
                    "hostFilters": {
                        "type": "string",
                        "description": "String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`\n"
                    },
                    "tenantName": {
                        "type": "string",
                        "description": "Your Azure Active Directory ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:gcp/integration:Integration": {
            "description": "Provides a Datadog - Google Cloud Platform integration resource. This can be used to create and manage Datadog - Google Cloud Platform integration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog - Google Cloud Platform integration\nconst awesomeGcpProjectIntegration = new datadog.gcp.Integration(\"awesome_gcp_project_integration\", {\n    clientEmail: \"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\",\n    clientId: \"123456789012345678901\",\n    hostFilters: \"foo:bar,buzz:lightyear\",\n    privateKey: `-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n`,\n    privateKeyId: \"1234567890123456789012345678901234567890\",\n    projectId: \"awesome-project-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog - Google Cloud Platform integration\nawesome_gcp_project_integration = datadog.gcp.Integration(\"awesomeGcpProjectIntegration\",\n    client_email=\"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\",\n    client_id=\"123456789012345678901\",\n    host_filters=\"foo:bar,buzz:lightyear\",\n    private_key=\"\"\"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n\n\"\"\",\n    private_key_id=\"1234567890123456789012345678901234567890\",\n    project_id=\"awesome-project-id\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog - Google Cloud Platform integration\n        var awesomeGcpProjectIntegration = new Datadog.Gcp.Integration(\"awesomeGcpProjectIntegration\", new Datadog.Gcp.IntegrationArgs\n        {\n            ClientEmail = \"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\",\n            ClientId = \"123456789012345678901\",\n            HostFilters = \"foo:bar,buzz:lightyear\",\n            PrivateKey = @\"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n\n\",\n            PrivateKeyId = \"1234567890123456789012345678901234567890\",\n            ProjectId = \"awesome-project-id\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog/gcp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := gcp.NewIntegration(ctx, \"awesomeGcpProjectIntegration\", \u0026gcp.IntegrationArgs{\n\t\t\tClientEmail:  pulumi.String(\"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\"),\n\t\t\tClientId:     pulumi.String(\"123456789012345678901\"),\n\t\t\tHostFilters:  pulumi.String(\"foo:bar,buzz:lightyear\"),\n\t\t\tPrivateKey:   pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"-----BEGIN PRIVATE KEY-----\\n\", \"...\\n\", \"-----END PRIVATE KEY-----\\n\", \"\\n\")),\n\t\t\tPrivateKeyId: pulumi.String(\"1234567890123456789012345678901234567890\"),\n\t\t\tProjectId:    pulumi.String(\"awesome-project-id\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# Google Cloud Platform integrations can be imported using their project ID, e.g.\n\n```sh\n $ pulumi import datadog:gcp/integration:Integration awesome_gcp_project_integration project_id\n```\n\n ",
            "properties": {
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected GCE instance shutdowns.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your email found in your JSON service account key.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your ID found in your JSON service account key.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Your private key name found in your JSON service account key.\n"
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Your private key ID found in your JSON service account key.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Your Google Cloud project ID found in your JSON service account key.\n"
                }
            },
            "required": [
                "clientEmail",
                "clientId",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "inputProperties": {
                "automute": {
                    "type": "boolean",
                    "description": "Silence monitors for expected GCE instance shutdowns.\n"
                },
                "clientEmail": {
                    "type": "string",
                    "description": "Your email found in your JSON service account key.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Your ID found in your JSON service account key.\n"
                },
                "hostFilters": {
                    "type": "string",
                    "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Your private key name found in your JSON service account key.\n"
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Your private key ID found in your JSON service account key.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Your Google Cloud project ID found in your JSON service account key.\n"
                }
            },
            "requiredInputs": [
                "clientEmail",
                "clientId",
                "privateKey",
                "privateKeyId",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "automute": {
                        "type": "boolean",
                        "description": "Silence monitors for expected GCE instance shutdowns.\n"
                    },
                    "clientEmail": {
                        "type": "string",
                        "description": "Your email found in your JSON service account key.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Your ID found in your JSON service account key.\n"
                    },
                    "hostFilters": {
                        "type": "string",
                        "description": "Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "Your private key name found in your JSON service account key.\n"
                    },
                    "privateKeyId": {
                        "type": "string",
                        "description": "Your private key ID found in your JSON service account key.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Your Google Cloud project ID found in your JSON service account key.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboard:Dashboard": {
            "description": "Provides a Datadog dashboard resource. This can be used to create and manage Datadog dashboards.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Example Ordered Layout\nconst orderedDashboard = new datadog.Dashboard(\"ordered_dashboard\", {\n    description: \"Created using the Datadog provider in Terraform\",\n    isReadOnly: true,\n    layoutType: \"ordered\",\n    templateVariables: [\n        {\n            default: \"aws\",\n            name: \"var_1\",\n            prefix: \"host\",\n        },\n        {\n            default: \"autoscaling\",\n            name: \"var_2\",\n            prefix: \"service_name\",\n        },\n    ],\n    templateVariablePresets: [{\n        name: \"preset_1\",\n        templateVariables: [\n            {\n                name: \"var_1\",\n                value: \"host.dc\",\n            },\n            {\n                name: \"var_2\",\n                value: \"my_service\",\n            },\n        ],\n    }],\n    title: \"Ordered Layout Dashboard\",\n    widgets: [\n        {\n            alertGraphDefinition: {\n                alertId: \"895605\",\n                liveSpan: \"1h\",\n                title: \"Widget Title\",\n                vizType: \"timeseries\",\n            },\n        },\n        {\n            alertValueDefinition: {\n                alertId: \"895605\",\n                precision: 3,\n                textAlign: \"center\",\n                title: \"Widget Title\",\n                unit: \"b\",\n            },\n        },\n        {\n            alertValueDefinition: {\n                alertId: \"895605\",\n                precision: 3,\n                textAlign: \"center\",\n                title: \"Widget Title\",\n                unit: \"b\",\n            },\n        },\n        {\n            changeDefinition: {\n                liveSpan: \"1h\",\n                requests: [{\n                    changeType: \"absolute\",\n                    compareTo: \"week_before\",\n                    increaseGood: true,\n                    orderBy: \"name\",\n                    orderDir: \"desc\",\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                    showPresent: true,\n                }],\n                title: \"Widget Title\",\n            },\n        },\n        {\n            distributionDefinition: {\n                liveSpan: \"1h\",\n                requests: [{\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                    style: {\n                        palette: \"warm\",\n                    },\n                }],\n                title: \"Widget Title\",\n            },\n        },\n        {\n            checkStatusDefinition: {\n                check: \"aws.ecs.agent_connected\",\n                groupBies: [\n                    \"account\",\n                    \"cluster\",\n                ],\n                grouping: \"cluster\",\n                liveSpan: \"1h\",\n                tags: [\n                    \"account:demo\",\n                    \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\",\n                ],\n                title: \"Widget Title\",\n            },\n        },\n        {\n            heatmapDefinition: {\n                liveSpan: \"1h\",\n                requests: [{\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                    style: {\n                        palette: \"warm\",\n                    },\n                }],\n                title: \"Widget Title\",\n                yaxis: {\n                    includeZero: true,\n                    max: \"2\",\n                    min: \"1\",\n                    scale: \"sqrt\",\n                },\n            },\n        },\n        {\n            hostmapDefinition: {\n                groups: [\n                    \"host\",\n                    \"region\",\n                ],\n                noGroupHosts: true,\n                noMetricHosts: true,\n                nodeType: \"container\",\n                request: {\n                    fills: [{\n                        q: \"avg:system.load.1{*} by {host}\",\n                    }],\n                    sizes: [{\n                        q: \"avg:memcache.uptime{*} by {host}\",\n                    }],\n                },\n                scopes: [\n                    \"region:us-east-1\",\n                    \"aws_account:727006795293\",\n                ],\n                style: {\n                    fillMax: \"20\",\n                    fillMin: \"10\",\n                    palette: \"yellow_to_green\",\n                    paletteFlip: true,\n                },\n                title: \"Widget Title\",\n            },\n        },\n        {\n            noteDefinition: {\n                backgroundColor: \"pink\",\n                content: \"note text\",\n                fontSize: \"14\",\n                showTick: true,\n                textAlign: \"center\",\n                tickEdge: \"left\",\n                tickPos: \"50%\",\n            },\n        },\n        {\n            queryValueDefinition: {\n                autoscale: true,\n                customUnit: \"xx\",\n                liveSpan: \"1h\",\n                precision: 4,\n                requests: [{\n                    aggregator: \"sum\",\n                    conditionalFormats: [\n                        {\n                            comparator: \"\u003c\",\n                            palette: \"white_on_green\",\n                            value: 2,\n                        },\n                        {\n                            comparator: \"\u003e\",\n                            palette: \"white_on_red\",\n                            value: 2.2,\n                        },\n                    ],\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                }],\n                textAlign: \"right\",\n                title: \"Widget Title\",\n            },\n        },\n        {\n            queryTableDefinition: {\n                liveSpan: \"1h\",\n                requests: [{\n                    aggregator: \"sum\",\n                    conditionalFormats: [\n                        {\n                            comparator: \"\u003c\",\n                            palette: \"white_on_green\",\n                            value: 2,\n                        },\n                        {\n                            comparator: \"\u003e\",\n                            palette: \"white_on_red\",\n                            value: 2.2,\n                        },\n                    ],\n                    limit: 10,\n                    q: \"avg:system.load.1{env:staging} by {account}\",\n                }],\n                title: \"Widget Title\",\n            },\n        },\n        {\n            scatterplotDefinition: {\n                colorByGroups: [\n                    \"account\",\n                    \"apm-role-group\",\n                ],\n                liveSpan: \"1h\",\n                request: {\n                    xes: [{\n                        aggregator: \"max\",\n                        q: \"avg:system.cpu.user{*} by {service, account}\",\n                    }],\n                    ys: [{\n                        aggregator: \"min\",\n                        q: \"avg:system.mem.used{*} by {service, account}\",\n                    }],\n                },\n                title: \"Widget Title\",\n                xaxis: {\n                    includeZero: true,\n                    label: \"x\",\n                    max: \"2000\",\n                    min: \"1\",\n                    scale: \"pow\",\n                },\n                yaxis: {\n                    includeZero: false,\n                    label: \"y\",\n                    max: \"2222\",\n                    min: \"5\",\n                    scale: \"log\",\n                },\n            },\n        },\n        {\n            servicemapDefinition: {\n                filters: [\n                    \"env:prod\",\n                    \"datacenter:us1.prod.dog\",\n                ],\n                service: \"master-db\",\n                title: \"env: prod, datacenter:us1.prod.dog, service: master-db\",\n                titleAlign: \"left\",\n                titleSize: \"16\",\n            },\n        },\n        {\n            timeseriesDefinition: {\n                events: [\n                    {\n                        q: \"sources:test tags:1\",\n                    },\n                    {\n                        q: \"sources:test tags:2\",\n                    },\n                ],\n                legendSize: \"2\",\n                liveSpan: \"1h\",\n                markers: [\n                    {\n                        displayType: \"error dashed\",\n                        label: \" z=6 \",\n                        value: \"y = 4\",\n                    },\n                    {\n                        displayType: \"ok solid\",\n                        label: \" x=8 \",\n                        value: \"10 \u003c y \u003c 999\",\n                    },\n                ],\n                requests: [\n                    {\n                        displayType: \"line\",\n                        metadatas: [{\n                            aliasName: \"Alpha\",\n                            expression: \"avg:system.cpu.user{app:general} by {env}\",\n                        }],\n                        q: \"avg:system.cpu.user{app:general} by {env}\",\n                        style: {\n                            lineType: \"dashed\",\n                            lineWidth: \"thin\",\n                            palette: \"warm\",\n                        },\n                    },\n                    {\n                        displayType: \"area\",\n                        logQuery: {\n                            computeQuery: {\n                                aggregation: \"avg\",\n                                facet: \"@duration\",\n                                interval: 5000,\n                            },\n                            groupBies: [{\n                                facet: \"host\",\n                                limit: 10,\n                                sortQuery: {\n                                    aggregation: \"avg\",\n                                    facet: \"@duration\",\n                                    order: \"desc\",\n                                },\n                            }],\n                            index: \"mcnulty\",\n                            searchQuery: \"status:info\",\n                        },\n                    },\n                    {\n                        apmQuery: {\n                            computeQuery: {\n                                aggregation: \"avg\",\n                                facet: \"@duration\",\n                                interval: 5000,\n                            },\n                            groupBies: [{\n                                facet: \"resource_name\",\n                                limit: 50,\n                                sortQuery: {\n                                    aggregation: \"avg\",\n                                    facet: \"@string_query.interval\",\n                                    order: \"desc\",\n                                },\n                            }],\n                            index: \"apm-search\",\n                            searchQuery: \"type:web\",\n                        },\n                        displayType: \"bars\",\n                    },\n                    {\n                        displayType: \"area\",\n                        processQuery: {\n                            filterBies: [\"active\"],\n                            limit: 50,\n                            metric: \"process.stat.cpu.total_pct\",\n                            searchBy: \"error\",\n                        },\n                    },\n                ],\n                showLegend: true,\n                title: \"Widget Title\",\n                yaxis: {\n                    includeZero: false,\n                    max: \"100\",\n                    scale: \"log\",\n                },\n            },\n        },\n        {\n            toplistDefinition: {\n                requests: [{\n                    conditionalFormats: [\n                        {\n                            comparator: \"\u003c\",\n                            palette: \"white_on_green\",\n                            value: 2,\n                        },\n                        {\n                            comparator: \"\u003e\",\n                            palette: \"white_on_red\",\n                            value: 2.2,\n                        },\n                    ],\n                    q: \"avg:system.cpu.user{app:general} by {env}\",\n                }],\n                title: \"Widget Title\",\n            },\n        },\n        {\n            groupDefinition: {\n                layoutType: \"ordered\",\n                title: \"Group Widget\",\n                widgets: [\n                    {\n                        noteDefinition: {\n                            backgroundColor: \"pink\",\n                            content: \"cluster note widget\",\n                            fontSize: \"14\",\n                            showTick: true,\n                            textAlign: \"center\",\n                            tickEdge: \"left\",\n                            tickPos: \"50%\",\n                        },\n                    },\n                    {\n                        alertGraphDefinition: {\n                            alertId: \"123\",\n                            liveSpan: \"1h\",\n                            title: \"Alert Graph\",\n                            vizType: \"toplist\",\n                        },\n                    },\n                ],\n            },\n        },\n        {\n            serviceLevelObjectiveDefinition: {\n                showErrorBudget: true,\n                sloId: \"56789\",\n                timeWindows: [\n                    \"7d\",\n                    \"previous_week\",\n                ],\n                title: \"Widget Title\",\n                viewMode: \"overall\",\n                viewType: \"detail\",\n            },\n        },\n    ],\n});\n// Example Free Layout\nconst freeDashboard = new datadog.Dashboard(\"free_dashboard\", {\n    description: \"Created using the Datadog provider in Terraform\",\n    isReadOnly: false,\n    layoutType: \"free\",\n    templateVariables: [\n        {\n            default: \"aws\",\n            name: \"var_1\",\n            prefix: \"host\",\n        },\n        {\n            default: \"autoscaling\",\n            name: \"var_2\",\n            prefix: \"service_name\",\n        },\n    ],\n    templateVariablePresets: [{\n        name: \"preset_1\",\n        templateVariables: [\n            {\n                name: \"var_1\",\n                value: \"host.dc\",\n            },\n            {\n                name: \"var_2\",\n                value: \"my_service\",\n            },\n        ],\n    }],\n    title: \"Free Layout Dashboard\",\n    widgets: [\n        {\n            eventStreamDefinition: {\n                eventSize: \"l\",\n                liveSpan: \"1h\",\n                query: \"*\",\n                title: \"Widget Title\",\n                titleAlign: \"left\",\n                titleSize: \"16\",\n            },\n            widgetLayout: {\n                height: 43,\n                width: 32,\n                x: 5,\n                y: 5,\n            },\n        },\n        {\n            eventTimelineDefinition: {\n                liveSpan: \"1h\",\n                query: \"*\",\n                title: \"Widget Title\",\n                titleAlign: \"left\",\n                titleSize: \"16\",\n            },\n            widgetLayout: {\n                height: 9,\n                width: 65,\n                x: 42,\n                y: 73,\n            },\n        },\n        {\n            freeTextDefinition: {\n                color: \"#d00\",\n                fontSize: \"88\",\n                text: \"free text content\",\n                textAlign: \"left\",\n            },\n            widgetLayout: {\n                height: 20,\n                width: 30,\n                x: 42,\n                y: 5,\n            },\n        },\n        {\n            iframeDefinition: {\n                url: \"http://google.com\",\n            },\n            widgetLayout: {\n                height: 46,\n                width: 39,\n                x: 111,\n                y: 8,\n            },\n        },\n        {\n            imageDefinition: {\n                margin: \"small\",\n                sizing: \"fit\",\n                url: \"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\",\n            },\n            widgetLayout: {\n                height: 20,\n                width: 30,\n                x: 77,\n                y: 7,\n            },\n        },\n        {\n            logStreamDefinition: {\n                columns: [\n                    \"core_host\",\n                    \"core_service\",\n                    \"tag_source\",\n                ],\n                indexes: [\"main\"],\n                messageDisplay: \"expanded-md\",\n                query: \"error\",\n                showDateColumn: true,\n                showMessageColumn: true,\n                sort: {\n                    column: \"time\",\n                    order: \"desc\",\n                },\n            },\n            widgetLayout: {\n                height: 36,\n                width: 32,\n                x: 5,\n                y: 51,\n            },\n        },\n        {\n            manageStatusDefinition: {\n                colorPreference: \"text\",\n                displayFormat: \"countsAndList\",\n                hideZeroCounts: true,\n                query: \"type:metric\",\n                showLastTriggered: false,\n                sort: \"status,asc\",\n                summaryType: \"monitors\",\n                title: \"Widget Title\",\n                titleAlign: \"left\",\n                titleSize: \"16\",\n            },\n            widgetLayout: {\n                height: 40,\n                width: 30,\n                x: 112,\n                y: 55,\n            },\n        },\n        {\n            traceServiceDefinition: {\n                displayFormat: \"three_column\",\n                env: \"datad0g.com\",\n                liveSpan: \"1h\",\n                service: \"alerting-cassandra\",\n                showBreakdown: true,\n                showDistribution: true,\n                showErrors: true,\n                showHits: true,\n                showLatency: false,\n                showResourceList: false,\n                sizeFormat: \"large\",\n                spanName: \"cassandra.query\",\n                title: \"alerting-cassandra #env:datad0g.com\",\n                titleAlign: \"center\",\n                titleSize: \"13\",\n            },\n            widgetLayout: {\n                height: 38,\n                width: 67,\n                x: 40,\n                y: 28,\n            },\n        },\n        {\n            timeseriesDefinition: {\n                requests: [{\n                    formulas: [\n                        {\n                            alias: \"my ff query\",\n                            formulaExpression: \"my_query_1 + my_query_2\",\n                        },\n                        {\n                            alias: \"my second ff query\",\n                            formulaExpression: \"my_query_1 * my_query_2\",\n                            limit: {\n                                count: 5,\n                                order: \"desc\",\n                            },\n                        },\n                    ],\n                    queries: [\n                        {\n                            metricQuery: {\n                                aggregator: \"sum\",\n                                dataSource: \"metrics\",\n                                name: \"my_query_1\",\n                                query: \"avg:system.cpu.user{app:general} by {env}\",\n                            },\n                        },\n                        {\n                            metricQuery: {\n                                aggregator: \"sum\",\n                                name: \"my_query_2\",\n                                query: \"avg:system.cpu.user{app:general} by {env}\",\n                            },\n                        },\n                    ],\n                }],\n            },\n        },\n        {\n            timeseriesDefinition: {\n                requests: [{\n                    queries: [{\n                        eventQuery: {\n                            computes: [{\n                                aggregation: \"count\",\n                            }],\n                            dataSource: \"logs\",\n                            groupBies: [{\n                                facet: \"host\",\n                                limit: 10,\n                                sort: {\n                                    aggregation: \"avg\",\n                                    metric: \"@lambda.max_memory_used\",\n                                },\n                            }],\n                            indexes: [\"days-3\"],\n                        },\n                    }],\n                }],\n            },\n        },\n        {\n            timeseriesDefinition: {\n                requests: [{\n                    queries: [{\n                        processQuery: {\n                            aggregator: \"sum\",\n                            dataSource: \"process\",\n                            isNormalizedCpu: true,\n                            limit: 10,\n                            metric: \"process.stat.cpu.total_pct\",\n                            name: \"my_process_query\",\n                            sort: \"asc\",\n                            tagFilters: [\"some_filter\"],\n                            textFilter: \"abc\",\n                        },\n                    }],\n                }],\n            },\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Example Ordered Layout\nordered_dashboard = datadog.Dashboard(\"orderedDashboard\",\n    description=\"Created using the Datadog provider in Terraform\",\n    is_read_only=True,\n    layout_type=\"ordered\",\n    template_variables=[\n        datadog.DashboardTemplateVariableArgs(\n            default=\"aws\",\n            name=\"var_1\",\n            prefix=\"host\",\n        ),\n        datadog.DashboardTemplateVariableArgs(\n            default=\"autoscaling\",\n            name=\"var_2\",\n            prefix=\"service_name\",\n        ),\n    ],\n    template_variable_presets=[datadog.DashboardTemplateVariablePresetArgs(\n        name=\"preset_1\",\n        template_variables=[\n            {\n                \"name\": \"var_1\",\n                \"value\": \"host.dc\",\n            },\n            {\n                \"name\": \"var_2\",\n                \"value\": \"my_service\",\n            },\n        ],\n    )],\n    title=\"Ordered Layout Dashboard\",\n    widgets=[\n        datadog.DashboardWidgetArgs(\n            alert_graph_definition=datadog.DashboardWidgetAlertGraphDefinitionArgs(\n                alert_id=\"895605\",\n                live_span=\"1h\",\n                title=\"Widget Title\",\n                viz_type=\"timeseries\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            alert_value_definition=datadog.DashboardWidgetAlertValueDefinitionArgs(\n                alert_id=\"895605\",\n                precision=3,\n                text_align=\"center\",\n                title=\"Widget Title\",\n                unit=\"b\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            alert_value_definition=datadog.DashboardWidgetAlertValueDefinitionArgs(\n                alert_id=\"895605\",\n                precision=3,\n                text_align=\"center\",\n                title=\"Widget Title\",\n                unit=\"b\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            change_definition=datadog.DashboardWidgetChangeDefinitionArgs(\n                live_span=\"1h\",\n                request=[{\n                    \"changeType\": \"absolute\",\n                    \"compareTo\": \"week_before\",\n                    \"increaseGood\": True,\n                    \"orderBy\": \"name\",\n                    \"orderDir\": \"desc\",\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                    \"showPresent\": True,\n                }],\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            distribution_definition=datadog.DashboardWidgetDistributionDefinitionArgs(\n                live_span=\"1h\",\n                request=[{\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                    \"style\": {\n                        \"palette\": \"warm\",\n                    },\n                }],\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            check_status_definition=datadog.DashboardWidgetCheckStatusDefinitionArgs(\n                check=\"aws.ecs.agent_connected\",\n                group_by=[\n                    \"account\",\n                    \"cluster\",\n                ],\n                grouping=\"cluster\",\n                live_span=\"1h\",\n                tags=[\n                    \"account:demo\",\n                    \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\",\n                ],\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            heatmap_definition=datadog.DashboardWidgetHeatmapDefinitionArgs(\n                live_span=\"1h\",\n                request=[{\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                    \"style\": {\n                        \"palette\": \"warm\",\n                    },\n                }],\n                title=\"Widget Title\",\n                yaxis=datadog.DashboardWidgetHeatmapDefinitionYaxisArgs(\n                    include_zero=True,\n                    max=\"2\",\n                    min=\"1\",\n                    scale=\"sqrt\",\n                ),\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            hostmap_definition=datadog.DashboardWidgetHostmapDefinitionArgs(\n                group=[\n                    \"host\",\n                    \"region\",\n                ],\n                no_group_hosts=True,\n                no_metric_hosts=True,\n                node_type=\"container\",\n                request=datadog.DashboardWidgetHostmapDefinitionRequestArgs(\n                    fill=[{\n                        \"q\": \"avg:system.load.1{*} by {host}\",\n                    }],\n                    size=[{\n                        \"q\": \"avg:memcache.uptime{*} by {host}\",\n                    }],\n                ),\n                scope=[\n                    \"region:us-east-1\",\n                    \"aws_account:727006795293\",\n                ],\n                style=datadog.DashboardWidgetHostmapDefinitionStyleArgs(\n                    fill_max=\"20\",\n                    fill_min=\"10\",\n                    palette=\"yellow_to_green\",\n                    palette_flip=True,\n                ),\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            note_definition=datadog.DashboardWidgetNoteDefinitionArgs(\n                background_color=\"pink\",\n                content=\"note text\",\n                font_size=\"14\",\n                show_tick=True,\n                text_align=\"center\",\n                tick_edge=\"left\",\n                tick_pos=\"50%\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            query_value_definition=datadog.DashboardWidgetQueryValueDefinitionArgs(\n                autoscale=True,\n                custom_unit=\"xx\",\n                live_span=\"1h\",\n                precision=4,\n                request=[{\n                    \"aggregator\": \"sum\",\n                    \"conditionalFormats\": [\n                        {\n                            \"comparator\": \"\u003c\",\n                            \"palette\": \"white_on_green\",\n                            \"value\": \"2\",\n                        },\n                        {\n                            \"comparator\": \"\u003e\",\n                            \"palette\": \"white_on_red\",\n                            \"value\": \"2.2\",\n                        },\n                    ],\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                }],\n                text_align=\"right\",\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            query_table_definition=datadog.DashboardWidgetQueryTableDefinitionArgs(\n                live_span=\"1h\",\n                request=[{\n                    \"aggregator\": \"sum\",\n                    \"conditionalFormats\": [\n                        {\n                            \"comparator\": \"\u003c\",\n                            \"palette\": \"white_on_green\",\n                            \"value\": \"2\",\n                        },\n                        {\n                            \"comparator\": \"\u003e\",\n                            \"palette\": \"white_on_red\",\n                            \"value\": \"2.2\",\n                        },\n                    ],\n                    \"limit\": \"10\",\n                    \"q\": \"avg:system.load.1{env:staging} by {account}\",\n                }],\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            scatterplot_definition=datadog.DashboardWidgetScatterplotDefinitionArgs(\n                color_by_groups=[\n                    \"account\",\n                    \"apm-role-group\",\n                ],\n                live_span=\"1h\",\n                request=datadog.DashboardWidgetScatterplotDefinitionRequestArgs(\n                    x=[{\n                        \"aggregator\": \"max\",\n                        \"q\": \"avg:system.cpu.user{*} by {service, account}\",\n                    }],\n                    y=[{\n                        \"aggregator\": \"min\",\n                        \"q\": \"avg:system.mem.used{*} by {service, account}\",\n                    }],\n                ),\n                title=\"Widget Title\",\n                xaxis=datadog.DashboardWidgetScatterplotDefinitionXaxisArgs(\n                    include_zero=True,\n                    label=\"x\",\n                    max=\"2000\",\n                    min=\"1\",\n                    scale=\"pow\",\n                ),\n                yaxis=datadog.DashboardWidgetScatterplotDefinitionYaxisArgs(\n                    include_zero=False,\n                    label=\"y\",\n                    max=\"2222\",\n                    min=\"5\",\n                    scale=\"log\",\n                ),\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            servicemap_definition=datadog.DashboardWidgetServicemapDefinitionArgs(\n                filters=[\n                    \"env:prod\",\n                    \"datacenter:us1.prod.dog\",\n                ],\n                service=\"master-db\",\n                title=\"env: prod, datacenter:us1.prod.dog, service: master-db\",\n                title_align=\"left\",\n                title_size=\"16\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            timeseries_definition=datadog.DashboardWidgetTimeseriesDefinitionArgs(\n                event=[\n                    {\n                        \"q\": \"sources:test tags:1\",\n                    },\n                    {\n                        \"q\": \"sources:test tags:2\",\n                    },\n                ],\n                legend_size=\"2\",\n                live_span=\"1h\",\n                marker=[\n                    {\n                        \"displayType\": \"error dashed\",\n                        \"label\": \" z=6 \",\n                        \"value\": \"y = 4\",\n                    },\n                    {\n                        \"displayType\": \"ok solid\",\n                        \"label\": \" x=8 \",\n                        \"value\": \"10 \u003c y \u003c 999\",\n                    },\n                ],\n                request=[\n                    {\n                        \"displayType\": \"line\",\n                        \"metadata\": [{\n                            \"aliasName\": \"Alpha\",\n                            \"expression\": \"avg:system.cpu.user{app:general} by {env}\",\n                        }],\n                        \"q\": \"avg:system.cpu.user{app:general} by {env}\",\n                        \"style\": {\n                            \"lineType\": \"dashed\",\n                            \"lineWidth\": \"thin\",\n                            \"palette\": \"warm\",\n                        },\n                    },\n                    {\n                        \"displayType\": \"area\",\n                        \"logQuery\": {\n                            \"computeQuery\": {\n                                \"aggregation\": \"avg\",\n                                \"facet\": \"@duration\",\n                                \"interval\": 5000,\n                            },\n                            \"groupBy\": [{\n                                \"facet\": \"host\",\n                                \"limit\": 10,\n                                \"sortQuery\": {\n                                    \"aggregation\": \"avg\",\n                                    \"facet\": \"@duration\",\n                                    \"order\": \"desc\",\n                                },\n                            }],\n                            \"index\": \"mcnulty\",\n                            \"searchQuery\": \"status:info\",\n                        },\n                    },\n                    {\n                        \"apmQuery\": {\n                            \"computeQuery\": {\n                                \"aggregation\": \"avg\",\n                                \"facet\": \"@duration\",\n                                \"interval\": 5000,\n                            },\n                            \"groupBy\": [{\n                                \"facet\": \"resource_name\",\n                                \"limit\": 50,\n                                \"sortQuery\": {\n                                    \"aggregation\": \"avg\",\n                                    \"facet\": \"@string_query.interval\",\n                                    \"order\": \"desc\",\n                                },\n                            }],\n                            \"index\": \"apm-search\",\n                            \"searchQuery\": \"type:web\",\n                        },\n                        \"displayType\": \"bars\",\n                    },\n                    {\n                        \"displayType\": \"area\",\n                        \"processQuery\": {\n                            \"filterBy\": [\"active\"],\n                            \"limit\": 50,\n                            \"metric\": \"process.stat.cpu.total_pct\",\n                            \"searchBy\": \"error\",\n                        },\n                    },\n                ],\n                show_legend=True,\n                title=\"Widget Title\",\n                yaxis=datadog.DashboardWidgetTimeseriesDefinitionYaxisArgs(\n                    include_zero=False,\n                    max=\"100\",\n                    scale=\"log\",\n                ),\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            toplist_definition=datadog.DashboardWidgetToplistDefinitionArgs(\n                request=[{\n                    \"conditionalFormats\": [\n                        {\n                            \"comparator\": \"\u003c\",\n                            \"palette\": \"white_on_green\",\n                            \"value\": \"2\",\n                        },\n                        {\n                            \"comparator\": \"\u003e\",\n                            \"palette\": \"white_on_red\",\n                            \"value\": \"2.2\",\n                        },\n                    ],\n                    \"q\": \"avg:system.cpu.user{app:general} by {env}\",\n                }],\n                title=\"Widget Title\",\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            group_definition=datadog.DashboardWidgetGroupDefinitionArgs(\n                layout_type=\"ordered\",\n                title=\"Group Widget\",\n                widget=[\n                    {\n                        \"noteDefinition\": {\n                            \"backgroundColor\": \"pink\",\n                            \"content\": \"cluster note widget\",\n                            \"fontSize\": \"14\",\n                            \"showTick\": True,\n                            \"textAlign\": \"center\",\n                            \"tickEdge\": \"left\",\n                            \"tickPos\": \"50%\",\n                        },\n                    },\n                    {\n                        \"alertGraphDefinition\": {\n                            \"alertId\": \"123\",\n                            \"liveSpan\": \"1h\",\n                            \"title\": \"Alert Graph\",\n                            \"vizType\": \"toplist\",\n                        },\n                    },\n                ],\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            service_level_objective_definition=datadog.DashboardWidgetServiceLevelObjectiveDefinitionArgs(\n                show_error_budget=True,\n                slo_id=\"56789\",\n                time_windows=[\n                    \"7d\",\n                    \"previous_week\",\n                ],\n                title=\"Widget Title\",\n                view_mode=\"overall\",\n                view_type=\"detail\",\n            ),\n        ),\n    ])\n# Example Free Layout\nfree_dashboard = datadog.Dashboard(\"freeDashboard\",\n    description=\"Created using the Datadog provider in Terraform\",\n    is_read_only=False,\n    layout_type=\"free\",\n    template_variables=[\n        datadog.DashboardTemplateVariableArgs(\n            default=\"aws\",\n            name=\"var_1\",\n            prefix=\"host\",\n        ),\n        datadog.DashboardTemplateVariableArgs(\n            default=\"autoscaling\",\n            name=\"var_2\",\n            prefix=\"service_name\",\n        ),\n    ],\n    template_variable_presets=[datadog.DashboardTemplateVariablePresetArgs(\n        name=\"preset_1\",\n        template_variables=[\n            {\n                \"name\": \"var_1\",\n                \"value\": \"host.dc\",\n            },\n            {\n                \"name\": \"var_2\",\n                \"value\": \"my_service\",\n            },\n        ],\n    )],\n    title=\"Free Layout Dashboard\",\n    widgets=[\n        datadog.DashboardWidgetArgs(\n            event_stream_definition=datadog.DashboardWidgetEventStreamDefinitionArgs(\n                event_size=\"l\",\n                live_span=\"1h\",\n                query=\"*\",\n                title=\"Widget Title\",\n                title_align=\"left\",\n                title_size=\"16\",\n            ),\n            widget_layout=datadog.DashboardWidgetWidgetLayoutArgs(\n                height=43,\n                width=32,\n                x=5,\n                y=5,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            event_timeline_definition=datadog.DashboardWidgetEventTimelineDefinitionArgs(\n                live_span=\"1h\",\n                query=\"*\",\n                title=\"Widget Title\",\n                title_align=\"left\",\n                title_size=\"16\",\n            ),\n            widget_layout=datadog.DashboardWidgetWidgetLayoutArgs(\n                height=9,\n                width=65,\n                x=42,\n                y=73,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            free_text_definition=datadog.DashboardWidgetFreeTextDefinitionArgs(\n                color=\"#d00\",\n                font_size=\"88\",\n                text=\"free text content\",\n                text_align=\"left\",\n            ),\n            widget_layout=datadog.DashboardWidgetWidgetLayoutArgs(\n                height=20,\n                width=30,\n                x=42,\n                y=5,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            iframe_definition=datadog.DashboardWidgetIframeDefinitionArgs(\n                url=\"http://google.com\",\n            ),\n            widget_layout=datadog.DashboardWidgetWidgetLayoutArgs(\n                height=46,\n                width=39,\n                x=111,\n                y=8,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            image_definition=datadog.DashboardWidgetImageDefinitionArgs(\n                margin=\"small\",\n                sizing=\"fit\",\n                url=\"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\",\n            ),\n            widget_layout=datadog.DashboardWidgetWidgetLayoutArgs(\n                height=20,\n                width=30,\n                x=77,\n                y=7,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            log_stream_definition=datadog.DashboardWidgetLogStreamDefinitionArgs(\n                columns=[\n                    \"core_host\",\n                    \"core_service\",\n                    \"tag_source\",\n                ],\n                indexes=[\"main\"],\n                message_display=\"expanded-md\",\n                query=\"error\",\n                show_date_column=True,\n                show_message_column=True,\n                sort=datadog.DashboardWidgetLogStreamDefinitionSortArgs(\n                    column=\"time\",\n                    order=\"desc\",\n                ),\n            ),\n            widget_layout=datadog.DashboardWidgetWidgetLayoutArgs(\n                height=36,\n                width=32,\n                x=5,\n                y=51,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            manage_status_definition=datadog.DashboardWidgetManageStatusDefinitionArgs(\n                color_preference=\"text\",\n                display_format=\"countsAndList\",\n                hide_zero_counts=True,\n                query=\"type:metric\",\n                show_last_triggered=False,\n                sort=\"status,asc\",\n                summary_type=\"monitors\",\n                title=\"Widget Title\",\n                title_align=\"left\",\n                title_size=\"16\",\n            ),\n            widget_layout=datadog.DashboardWidgetWidgetLayoutArgs(\n                height=40,\n                width=30,\n                x=112,\n                y=55,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            trace_service_definition=datadog.DashboardWidgetTraceServiceDefinitionArgs(\n                display_format=\"three_column\",\n                env=\"datad0g.com\",\n                live_span=\"1h\",\n                service=\"alerting-cassandra\",\n                show_breakdown=True,\n                show_distribution=True,\n                show_errors=True,\n                show_hits=True,\n                show_latency=False,\n                show_resource_list=False,\n                size_format=\"large\",\n                span_name=\"cassandra.query\",\n                title=\"alerting-cassandra #env:datad0g.com\",\n                title_align=\"center\",\n                title_size=\"13\",\n            ),\n            widget_layout=datadog.DashboardWidgetWidgetLayoutArgs(\n                height=38,\n                width=67,\n                x=40,\n                y=28,\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            timeseries_definition=datadog.DashboardWidgetTimeseriesDefinitionArgs(\n                request=[{\n                    \"formula\": [\n                        {\n                            \"alias\": \"my ff query\",\n                            \"formulaExpression\": \"my_query_1 + my_query_2\",\n                        },\n                        {\n                            \"alias\": \"my second ff query\",\n                            \"formulaExpression\": \"my_query_1 * my_query_2\",\n                            \"limit\": {\n                                \"count\": 5,\n                                \"order\": \"desc\",\n                            },\n                        },\n                    ],\n                    \"query\": [\n                        {\n                            \"metricQuery\": {\n                                \"aggregator\": \"sum\",\n                                \"dataSource\": \"metrics\",\n                                \"name\": \"my_query_1\",\n                                \"query\": \"avg:system.cpu.user{app:general} by {env}\",\n                            },\n                        },\n                        {\n                            \"metricQuery\": {\n                                \"aggregator\": \"sum\",\n                                \"name\": \"my_query_2\",\n                                \"query\": \"avg:system.cpu.user{app:general} by {env}\",\n                            },\n                        },\n                    ],\n                }],\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            timeseries_definition=datadog.DashboardWidgetTimeseriesDefinitionArgs(\n                request=[{\n                    \"query\": [{\n                        \"eventQuery\": {\n                            \"compute\": [{\n                                \"aggregation\": \"count\",\n                            }],\n                            \"dataSource\": \"logs\",\n                            \"groupBy\": [{\n                                \"facet\": \"host\",\n                                \"limit\": 10,\n                                \"sort\": {\n                                    \"aggregation\": \"avg\",\n                                    \"metric\": \"@lambda.max_memory_used\",\n                                },\n                            }],\n                            \"indexes\": [\"days-3\"],\n                        },\n                    }],\n                }],\n            ),\n        ),\n        datadog.DashboardWidgetArgs(\n            timeseries_definition=datadog.DashboardWidgetTimeseriesDefinitionArgs(\n                request=[{\n                    \"query\": [{\n                        \"processQuery\": {\n                            \"aggregator\": \"sum\",\n                            \"dataSource\": \"process\",\n                            \"isNormalizedCpu\": True,\n                            \"limit\": 10,\n                            \"metric\": \"process.stat.cpu.total_pct\",\n                            \"name\": \"my_process_query\",\n                            \"sort\": \"asc\",\n                            \"tagFilters\": [\"some_filter\"],\n                            \"textFilter\": \"abc\",\n                        },\n                    }],\n                }],\n            ),\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Example Ordered Layout\n        var orderedDashboard = new Datadog.Dashboard(\"orderedDashboard\", new Datadog.DashboardArgs\n        {\n            Description = \"Created using the Datadog provider in Terraform\",\n            IsReadOnly = true,\n            LayoutType = \"ordered\",\n            TemplateVariables = \n            {\n                new Datadog.Inputs.DashboardTemplateVariableArgs\n                {\n                    Default = \"aws\",\n                    Name = \"var_1\",\n                    Prefix = \"host\",\n                },\n                new Datadog.Inputs.DashboardTemplateVariableArgs\n                {\n                    Default = \"autoscaling\",\n                    Name = \"var_2\",\n                    Prefix = \"service_name\",\n                },\n            },\n            TemplateVariablePresets = \n            {\n                new Datadog.Inputs.DashboardTemplateVariablePresetArgs\n                {\n                    Name = \"preset_1\",\n                    TemplateVariables = \n                    {\n                        new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                        {\n                            Name = \"var_1\",\n                            Value = \"host.dc\",\n                        },\n                        new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                        {\n                            Name = \"var_2\",\n                            Value = \"my_service\",\n                        },\n                    },\n                },\n            },\n            Title = \"Ordered Layout Dashboard\",\n            Widgets = \n            {\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    AlertGraphDefinition = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionArgs\n                    {\n                        AlertId = \"895605\",\n                        LiveSpan = \"1h\",\n                        Title = \"Widget Title\",\n                        VizType = \"timeseries\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    AlertValueDefinition = new Datadog.Inputs.DashboardWidgetAlertValueDefinitionArgs\n                    {\n                        AlertId = \"895605\",\n                        Precision = 3,\n                        TextAlign = \"center\",\n                        Title = \"Widget Title\",\n                        Unit = \"b\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    AlertValueDefinition = new Datadog.Inputs.DashboardWidgetAlertValueDefinitionArgs\n                    {\n                        AlertId = \"895605\",\n                        Precision = 3,\n                        TextAlign = \"center\",\n                        Title = \"Widget Title\",\n                        Unit = \"b\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ChangeDefinition = new Datadog.Inputs.DashboardWidgetChangeDefinitionArgs\n                    {\n                        LiveSpan = \"1h\",\n                        Request = \n                        {\n                            \n                            {\n                                { \"changeType\", \"absolute\" },\n                                { \"compareTo\", \"week_before\" },\n                                { \"increaseGood\", true },\n                                { \"orderBy\", \"name\" },\n                                { \"orderDir\", \"desc\" },\n                                { \"q\", \"avg:system.load.1{env:staging} by {account}\" },\n                                { \"showPresent\", true },\n                            },\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    DistributionDefinition = new Datadog.Inputs.DashboardWidgetDistributionDefinitionArgs\n                    {\n                        LiveSpan = \"1h\",\n                        Request = \n                        {\n                            \n                            {\n                                { \"q\", \"avg:system.load.1{env:staging} by {account}\" },\n                                { \"style\", \n                                {\n                                    { \"palette\", \"warm\" },\n                                } },\n                            },\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    CheckStatusDefinition = new Datadog.Inputs.DashboardWidgetCheckStatusDefinitionArgs\n                    {\n                        Check = \"aws.ecs.agent_connected\",\n                        GroupBy = \n                        {\n                            \"account\",\n                            \"cluster\",\n                        },\n                        Grouping = \"cluster\",\n                        LiveSpan = \"1h\",\n                        Tags = \n                        {\n                            \"account:demo\",\n                            \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\",\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    HeatmapDefinition = new Datadog.Inputs.DashboardWidgetHeatmapDefinitionArgs\n                    {\n                        LiveSpan = \"1h\",\n                        Request = \n                        {\n                            \n                            {\n                                { \"q\", \"avg:system.load.1{env:staging} by {account}\" },\n                                { \"style\", \n                                {\n                                    { \"palette\", \"warm\" },\n                                } },\n                            },\n                        },\n                        Title = \"Widget Title\",\n                        Yaxis = new Datadog.Inputs.DashboardWidgetHeatmapDefinitionYaxisArgs\n                        {\n                            IncludeZero = true,\n                            Max = \"2\",\n                            Min = \"1\",\n                            Scale = \"sqrt\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    HostmapDefinition = new Datadog.Inputs.DashboardWidgetHostmapDefinitionArgs\n                    {\n                        Group = \n                        {\n                            \"host\",\n                            \"region\",\n                        },\n                        NoGroupHosts = true,\n                        NoMetricHosts = true,\n                        NodeType = \"container\",\n                        Request = new Datadog.Inputs.DashboardWidgetHostmapDefinitionRequestArgs\n                        {\n                            Fill = \n                            {\n                                \n                                {\n                                    { \"q\", \"avg:system.load.1{*} by {host}\" },\n                                },\n                            },\n                            Size = \n                            {\n                                \n                                {\n                                    { \"q\", \"avg:memcache.uptime{*} by {host}\" },\n                                },\n                            },\n                        },\n                        Scope = \n                        {\n                            \"region:us-east-1\",\n                            \"aws_account:727006795293\",\n                        },\n                        Style = new Datadog.Inputs.DashboardWidgetHostmapDefinitionStyleArgs\n                        {\n                            FillMax = \"20\",\n                            FillMin = \"10\",\n                            Palette = \"yellow_to_green\",\n                            PaletteFlip = true,\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    NoteDefinition = new Datadog.Inputs.DashboardWidgetNoteDefinitionArgs\n                    {\n                        BackgroundColor = \"pink\",\n                        Content = \"note text\",\n                        FontSize = \"14\",\n                        ShowTick = true,\n                        TextAlign = \"center\",\n                        TickEdge = \"left\",\n                        TickPos = \"50%\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    QueryValueDefinition = new Datadog.Inputs.DashboardWidgetQueryValueDefinitionArgs\n                    {\n                        Autoscale = true,\n                        CustomUnit = \"xx\",\n                        LiveSpan = \"1h\",\n                        Precision = 4,\n                        Request = \n                        {\n                            \n                            {\n                                { \"aggregator\", \"sum\" },\n                                { \"conditionalFormats\", \n                                {\n                                    \n                                    {\n                                        { \"comparator\", \"\u003c\" },\n                                        { \"palette\", \"white_on_green\" },\n                                        { \"value\", \"2\" },\n                                    },\n                                    \n                                    {\n                                        { \"comparator\", \"\u003e\" },\n                                        { \"palette\", \"white_on_red\" },\n                                        { \"value\", \"2.2\" },\n                                    },\n                                } },\n                                { \"q\", \"avg:system.load.1{env:staging} by {account}\" },\n                            },\n                        },\n                        TextAlign = \"right\",\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    QueryTableDefinition = new Datadog.Inputs.DashboardWidgetQueryTableDefinitionArgs\n                    {\n                        LiveSpan = \"1h\",\n                        Request = \n                        {\n                            \n                            {\n                                { \"aggregator\", \"sum\" },\n                                { \"conditionalFormats\", \n                                {\n                                    \n                                    {\n                                        { \"comparator\", \"\u003c\" },\n                                        { \"palette\", \"white_on_green\" },\n                                        { \"value\", \"2\" },\n                                    },\n                                    \n                                    {\n                                        { \"comparator\", \"\u003e\" },\n                                        { \"palette\", \"white_on_red\" },\n                                        { \"value\", \"2.2\" },\n                                    },\n                                } },\n                                { \"limit\", \"10\" },\n                                { \"q\", \"avg:system.load.1{env:staging} by {account}\" },\n                            },\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ScatterplotDefinition = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionArgs\n                    {\n                        ColorByGroups = \n                        {\n                            \"account\",\n                            \"apm-role-group\",\n                        },\n                        LiveSpan = \"1h\",\n                        Request = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionRequestArgs\n                        {\n                            X = \n                            {\n                                \n                                {\n                                    { \"aggregator\", \"max\" },\n                                    { \"q\", \"avg:system.cpu.user{*} by {service, account}\" },\n                                },\n                            },\n                            Y = \n                            {\n                                \n                                {\n                                    { \"aggregator\", \"min\" },\n                                    { \"q\", \"avg:system.mem.used{*} by {service, account}\" },\n                                },\n                            },\n                        },\n                        Title = \"Widget Title\",\n                        Xaxis = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionXaxisArgs\n                        {\n                            IncludeZero = true,\n                            Label = \"x\",\n                            Max = \"2000\",\n                            Min = \"1\",\n                            Scale = \"pow\",\n                        },\n                        Yaxis = new Datadog.Inputs.DashboardWidgetScatterplotDefinitionYaxisArgs\n                        {\n                            IncludeZero = false,\n                            Label = \"y\",\n                            Max = \"2222\",\n                            Min = \"5\",\n                            Scale = \"log\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ServicemapDefinition = new Datadog.Inputs.DashboardWidgetServicemapDefinitionArgs\n                    {\n                        Filters = \n                        {\n                            \"env:prod\",\n                            \"datacenter:us1.prod.dog\",\n                        },\n                        Service = \"master-db\",\n                        Title = \"env: prod, datacenter:us1.prod.dog, service: master-db\",\n                        TitleAlign = \"left\",\n                        TitleSize = \"16\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    TimeseriesDefinition = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionArgs\n                    {\n                        Event = \n                        {\n                            \n                            {\n                                { \"q\", \"sources:test tags:1\" },\n                            },\n                            \n                            {\n                                { \"q\", \"sources:test tags:2\" },\n                            },\n                        },\n                        LegendSize = \"2\",\n                        LiveSpan = \"1h\",\n                        Marker = \n                        {\n                            \n                            {\n                                { \"displayType\", \"error dashed\" },\n                                { \"label\", \" z=6 \" },\n                                { \"value\", \"y = 4\" },\n                            },\n                            \n                            {\n                                { \"displayType\", \"ok solid\" },\n                                { \"label\", \" x=8 \" },\n                                { \"value\", \"10 \u003c y \u003c 999\" },\n                            },\n                        },\n                        Request = \n                        {\n                            \n                            {\n                                { \"displayType\", \"line\" },\n                                { \"metadata\", \n                                {\n                                    \n                                    {\n                                        { \"aliasName\", \"Alpha\" },\n                                        { \"expression\", \"avg:system.cpu.user{app:general} by {env}\" },\n                                    },\n                                } },\n                                { \"q\", \"avg:system.cpu.user{app:general} by {env}\" },\n                                { \"style\", \n                                {\n                                    { \"lineType\", \"dashed\" },\n                                    { \"lineWidth\", \"thin\" },\n                                    { \"palette\", \"warm\" },\n                                } },\n                            },\n                            \n                            {\n                                { \"displayType\", \"area\" },\n                                { \"logQuery\", \n                                {\n                                    { \"computeQuery\", \n                                    {\n                                        { \"aggregation\", \"avg\" },\n                                        { \"facet\", \"@duration\" },\n                                        { \"interval\", 5000 },\n                                    } },\n                                    { \"groupBy\", \n                                    {\n                                        \n                                        {\n                                            { \"facet\", \"host\" },\n                                            { \"limit\", 10 },\n                                            { \"sortQuery\", \n                                            {\n                                                { \"aggregation\", \"avg\" },\n                                                { \"facet\", \"@duration\" },\n                                                { \"order\", \"desc\" },\n                                            } },\n                                        },\n                                    } },\n                                    { \"index\", \"mcnulty\" },\n                                    { \"searchQuery\", \"status:info\" },\n                                } },\n                            },\n                            \n                            {\n                                { \"apmQuery\", \n                                {\n                                    { \"computeQuery\", \n                                    {\n                                        { \"aggregation\", \"avg\" },\n                                        { \"facet\", \"@duration\" },\n                                        { \"interval\", 5000 },\n                                    } },\n                                    { \"groupBy\", \n                                    {\n                                        \n                                        {\n                                            { \"facet\", \"resource_name\" },\n                                            { \"limit\", 50 },\n                                            { \"sortQuery\", \n                                            {\n                                                { \"aggregation\", \"avg\" },\n                                                { \"facet\", \"@string_query.interval\" },\n                                                { \"order\", \"desc\" },\n                                            } },\n                                        },\n                                    } },\n                                    { \"index\", \"apm-search\" },\n                                    { \"searchQuery\", \"type:web\" },\n                                } },\n                                { \"displayType\", \"bars\" },\n                            },\n                            \n                            {\n                                { \"displayType\", \"area\" },\n                                { \"processQuery\", \n                                {\n                                    { \"filterBy\", \n                                    {\n                                        \"active\",\n                                    } },\n                                    { \"limit\", 50 },\n                                    { \"metric\", \"process.stat.cpu.total_pct\" },\n                                    { \"searchBy\", \"error\" },\n                                } },\n                            },\n                        },\n                        ShowLegend = true,\n                        Title = \"Widget Title\",\n                        Yaxis = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionYaxisArgs\n                        {\n                            IncludeZero = false,\n                            Max = \"100\",\n                            Scale = \"log\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ToplistDefinition = new Datadog.Inputs.DashboardWidgetToplistDefinitionArgs\n                    {\n                        Request = \n                        {\n                            \n                            {\n                                { \"conditionalFormats\", \n                                {\n                                    \n                                    {\n                                        { \"comparator\", \"\u003c\" },\n                                        { \"palette\", \"white_on_green\" },\n                                        { \"value\", \"2\" },\n                                    },\n                                    \n                                    {\n                                        { \"comparator\", \"\u003e\" },\n                                        { \"palette\", \"white_on_red\" },\n                                        { \"value\", \"2.2\" },\n                                    },\n                                } },\n                                { \"q\", \"avg:system.cpu.user{app:general} by {env}\" },\n                            },\n                        },\n                        Title = \"Widget Title\",\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    GroupDefinition = new Datadog.Inputs.DashboardWidgetGroupDefinitionArgs\n                    {\n                        LayoutType = \"ordered\",\n                        Title = \"Group Widget\",\n                        Widget = \n                        {\n                            \n                            {\n                                { \"noteDefinition\", \n                                {\n                                    { \"backgroundColor\", \"pink\" },\n                                    { \"content\", \"cluster note widget\" },\n                                    { \"fontSize\", \"14\" },\n                                    { \"showTick\", true },\n                                    { \"textAlign\", \"center\" },\n                                    { \"tickEdge\", \"left\" },\n                                    { \"tickPos\", \"50%\" },\n                                } },\n                            },\n                            \n                            {\n                                { \"alertGraphDefinition\", \n                                {\n                                    { \"alertId\", \"123\" },\n                                    { \"liveSpan\", \"1h\" },\n                                    { \"title\", \"Alert Graph\" },\n                                    { \"vizType\", \"toplist\" },\n                                } },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ServiceLevelObjectiveDefinition = new Datadog.Inputs.DashboardWidgetServiceLevelObjectiveDefinitionArgs\n                    {\n                        ShowErrorBudget = true,\n                        SloId = \"56789\",\n                        TimeWindows = \n                        {\n                            \"7d\",\n                            \"previous_week\",\n                        },\n                        Title = \"Widget Title\",\n                        ViewMode = \"overall\",\n                        ViewType = \"detail\",\n                    },\n                },\n            },\n        });\n        // Example Free Layout\n        var freeDashboard = new Datadog.Dashboard(\"freeDashboard\", new Datadog.DashboardArgs\n        {\n            Description = \"Created using the Datadog provider in Terraform\",\n            IsReadOnly = false,\n            LayoutType = \"free\",\n            TemplateVariables = \n            {\n                new Datadog.Inputs.DashboardTemplateVariableArgs\n                {\n                    Default = \"aws\",\n                    Name = \"var_1\",\n                    Prefix = \"host\",\n                },\n                new Datadog.Inputs.DashboardTemplateVariableArgs\n                {\n                    Default = \"autoscaling\",\n                    Name = \"var_2\",\n                    Prefix = \"service_name\",\n                },\n            },\n            TemplateVariablePresets = \n            {\n                new Datadog.Inputs.DashboardTemplateVariablePresetArgs\n                {\n                    Name = \"preset_1\",\n                    TemplateVariables = \n                    {\n                        new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                        {\n                            Name = \"var_1\",\n                            Value = \"host.dc\",\n                        },\n                        new Datadog.Inputs.DashboardTemplateVariablePresetTemplateVariableArgs\n                        {\n                            Name = \"var_2\",\n                            Value = \"my_service\",\n                        },\n                    },\n                },\n            },\n            Title = \"Free Layout Dashboard\",\n            Widgets = \n            {\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    EventStreamDefinition = new Datadog.Inputs.DashboardWidgetEventStreamDefinitionArgs\n                    {\n                        EventSize = \"l\",\n                        LiveSpan = \"1h\",\n                        Query = \"*\",\n                        Title = \"Widget Title\",\n                        TitleAlign = \"left\",\n                        TitleSize = \"16\",\n                    },\n                    WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                    {\n                        Height = 43,\n                        Width = 32,\n                        X = 5,\n                        Y = 5,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    EventTimelineDefinition = new Datadog.Inputs.DashboardWidgetEventTimelineDefinitionArgs\n                    {\n                        LiveSpan = \"1h\",\n                        Query = \"*\",\n                        Title = \"Widget Title\",\n                        TitleAlign = \"left\",\n                        TitleSize = \"16\",\n                    },\n                    WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                    {\n                        Height = 9,\n                        Width = 65,\n                        X = 42,\n                        Y = 73,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    FreeTextDefinition = new Datadog.Inputs.DashboardWidgetFreeTextDefinitionArgs\n                    {\n                        Color = \"#d00\",\n                        FontSize = \"88\",\n                        Text = \"free text content\",\n                        TextAlign = \"left\",\n                    },\n                    WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                    {\n                        Height = 20,\n                        Width = 30,\n                        X = 42,\n                        Y = 5,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    IframeDefinition = new Datadog.Inputs.DashboardWidgetIframeDefinitionArgs\n                    {\n                        Url = \"http://google.com\",\n                    },\n                    WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                    {\n                        Height = 46,\n                        Width = 39,\n                        X = 111,\n                        Y = 8,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ImageDefinition = new Datadog.Inputs.DashboardWidgetImageDefinitionArgs\n                    {\n                        Margin = \"small\",\n                        Sizing = \"fit\",\n                        Url = \"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\",\n                    },\n                    WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                    {\n                        Height = 20,\n                        Width = 30,\n                        X = 77,\n                        Y = 7,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    LogStreamDefinition = new Datadog.Inputs.DashboardWidgetLogStreamDefinitionArgs\n                    {\n                        Columns = \n                        {\n                            \"core_host\",\n                            \"core_service\",\n                            \"tag_source\",\n                        },\n                        Indexes = \n                        {\n                            \"main\",\n                        },\n                        MessageDisplay = \"expanded-md\",\n                        Query = \"error\",\n                        ShowDateColumn = true,\n                        ShowMessageColumn = true,\n                        Sort = new Datadog.Inputs.DashboardWidgetLogStreamDefinitionSortArgs\n                        {\n                            Column = \"time\",\n                            Order = \"desc\",\n                        },\n                    },\n                    WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                    {\n                        Height = 36,\n                        Width = 32,\n                        X = 5,\n                        Y = 51,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    ManageStatusDefinition = new Datadog.Inputs.DashboardWidgetManageStatusDefinitionArgs\n                    {\n                        ColorPreference = \"text\",\n                        DisplayFormat = \"countsAndList\",\n                        HideZeroCounts = true,\n                        Query = \"type:metric\",\n                        ShowLastTriggered = false,\n                        Sort = \"status,asc\",\n                        SummaryType = \"monitors\",\n                        Title = \"Widget Title\",\n                        TitleAlign = \"left\",\n                        TitleSize = \"16\",\n                    },\n                    WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                    {\n                        Height = 40,\n                        Width = 30,\n                        X = 112,\n                        Y = 55,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    TraceServiceDefinition = new Datadog.Inputs.DashboardWidgetTraceServiceDefinitionArgs\n                    {\n                        DisplayFormat = \"three_column\",\n                        Env = \"datad0g.com\",\n                        LiveSpan = \"1h\",\n                        Service = \"alerting-cassandra\",\n                        ShowBreakdown = true,\n                        ShowDistribution = true,\n                        ShowErrors = true,\n                        ShowHits = true,\n                        ShowLatency = false,\n                        ShowResourceList = false,\n                        SizeFormat = \"large\",\n                        SpanName = \"cassandra.query\",\n                        Title = \"alerting-cassandra #env:datad0g.com\",\n                        TitleAlign = \"center\",\n                        TitleSize = \"13\",\n                    },\n                    WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                    {\n                        Height = 38,\n                        Width = 67,\n                        X = 40,\n                        Y = 28,\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    TimeseriesDefinition = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionArgs\n                    {\n                        Request = \n                        {\n                            \n                            {\n                                { \"formula\", \n                                {\n                                    \n                                    {\n                                        { \"alias\", \"my ff query\" },\n                                        { \"formulaExpression\", \"my_query_1 + my_query_2\" },\n                                    },\n                                    \n                                    {\n                                        { \"alias\", \"my second ff query\" },\n                                        { \"formulaExpression\", \"my_query_1 * my_query_2\" },\n                                        { \"limit\", \n                                        {\n                                            { \"count\", 5 },\n                                            { \"order\", \"desc\" },\n                                        } },\n                                    },\n                                } },\n                                { \"query\", \n                                {\n                                    \n                                    {\n                                        { \"metricQuery\", \n                                        {\n                                            { \"aggregator\", \"sum\" },\n                                            { \"dataSource\", \"metrics\" },\n                                            { \"name\", \"my_query_1\" },\n                                            { \"query\", \"avg:system.cpu.user{app:general} by {env}\" },\n                                        } },\n                                    },\n                                    \n                                    {\n                                        { \"metricQuery\", \n                                        {\n                                            { \"aggregator\", \"sum\" },\n                                            { \"name\", \"my_query_2\" },\n                                            { \"query\", \"avg:system.cpu.user{app:general} by {env}\" },\n                                        } },\n                                    },\n                                } },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    TimeseriesDefinition = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionArgs\n                    {\n                        Request = \n                        {\n                            \n                            {\n                                { \"query\", \n                                {\n                                    \n                                    {\n                                        { \"eventQuery\", \n                                        {\n                                            { \"compute\", \n                                            {\n                                                \n                                                {\n                                                    { \"aggregation\", \"count\" },\n                                                },\n                                            } },\n                                            { \"dataSource\", \"logs\" },\n                                            { \"groupBy\", \n                                            {\n                                                \n                                                {\n                                                    { \"facet\", \"host\" },\n                                                    { \"limit\", 10 },\n                                                    { \"sort\", \n                                                    {\n                                                        { \"aggregation\", \"avg\" },\n                                                        { \"metric\", \"@lambda.max_memory_used\" },\n                                                    } },\n                                                },\n                                            } },\n                                            { \"indexes\", \n                                            {\n                                                \"days-3\",\n                                            } },\n                                        } },\n                                    },\n                                } },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    TimeseriesDefinition = new Datadog.Inputs.DashboardWidgetTimeseriesDefinitionArgs\n                    {\n                        Request = \n                        {\n                            \n                            {\n                                { \"query\", \n                                {\n                                    \n                                    {\n                                        { \"processQuery\", \n                                        {\n                                            { \"aggregator\", \"sum\" },\n                                            { \"dataSource\", \"process\" },\n                                            { \"isNormalizedCpu\", true },\n                                            { \"limit\", 10 },\n                                            { \"metric\", \"process.stat.cpu.total_pct\" },\n                                            { \"name\", \"my_process_query\" },\n                                            { \"sort\", \"asc\" },\n                                            { \"tagFilters\", \n                                            {\n                                                \"some_filter\",\n                                            } },\n                                            { \"textFilter\", \"abc\" },\n                                        } },\n                                    },\n                                } },\n                            },\n                        },\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewDashboard(ctx, \"orderedDashboard\", \u0026datadog.DashboardArgs{\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Terraform\"),\n\t\t\tIsReadOnly:  pulumi.Bool(true),\n\t\t\tLayoutType:  pulumi.String(\"ordered\"),\n\t\t\tTemplateVariables: datadog.DashboardTemplateVariableArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tDefault: pulumi.String(\"aws\"),\n\t\t\t\t\tName:    pulumi.String(\"var_1\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"host\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tDefault: pulumi.String(\"autoscaling\"),\n\t\t\t\t\tName:    pulumi.String(\"var_2\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"service_name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTemplateVariablePresets: datadog.DashboardTemplateVariablePresetArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetArgs{\n\t\t\t\t\tName: pulumi.String(\"preset_1\"),\n\t\t\t\t\tTemplateVariables: datadog.DashboardTemplateVariablePresetTemplateVariableArray{\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_1\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"host.dc\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_2\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"my_service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tTitle: pulumi.String(\"Ordered Layout Dashboard\"),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertGraphDefinition: \u0026datadog.DashboardWidgetAlertGraphDefinitionArgs{\n\t\t\t\t\t\tAlertId:  pulumi.String(\"895605\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tVizType:  pulumi.String(\"timeseries\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertValueDefinition: \u0026datadog.DashboardWidgetAlertValueDefinitionArgs{\n\t\t\t\t\t\tAlertId:   pulumi.String(\"895605\"),\n\t\t\t\t\t\tPrecision: pulumi.Int(3),\n\t\t\t\t\t\tTextAlign: pulumi.String(\"center\"),\n\t\t\t\t\t\tTitle:     pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tUnit:      pulumi.String(\"b\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertValueDefinition: \u0026datadog.DashboardWidgetAlertValueDefinitionArgs{\n\t\t\t\t\t\tAlertId:   pulumi.String(\"895605\"),\n\t\t\t\t\t\tPrecision: pulumi.Int(3),\n\t\t\t\t\t\tTextAlign: pulumi.String(\"center\"),\n\t\t\t\t\t\tTitle:     pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tUnit:      pulumi.String(\"b\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tChangeDefinition: \u0026datadog.DashboardWidgetChangeDefinitionArgs{\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"changeType\":   pulumi.String(\"absolute\"),\n\t\t\t\t\t\t\t\t\"compareTo\":    pulumi.String(\"week_before\"),\n\t\t\t\t\t\t\t\t\"increaseGood\": pulumi.Bool(true),\n\t\t\t\t\t\t\t\t\"orderBy\":      pulumi.String(\"name\"),\n\t\t\t\t\t\t\t\t\"orderDir\":     pulumi.String(\"desc\"),\n\t\t\t\t\t\t\t\t\"q\":            pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t\t\"showPresent\":  pulumi.Bool(true),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tDistributionDefinition: \u0026datadog.DashboardWidgetDistributionDefinitionArgs{\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t\t\"style\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"palette\": pulumi.String(\"warm\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tCheckStatusDefinition: \u0026datadog.DashboardWidgetCheckStatusDefinitionArgs{\n\t\t\t\t\t\tCheck: pulumi.String(\"aws.ecs.agent_connected\"),\n\t\t\t\t\t\tGroupBy: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"account\"),\n\t\t\t\t\t\t\tpulumi.String(\"cluster\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tGrouping: pulumi.String(\"cluster\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\tTags: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"account:demo\"),\n\t\t\t\t\t\t\tpulumi.String(\"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tHeatmapDefinition: \u0026datadog.DashboardWidgetHeatmapDefinitionArgs{\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t\t\"style\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"palette\": pulumi.String(\"warm\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tYaxis: \u0026datadog.DashboardWidgetHeatmapDefinitionYaxisArgs{\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(true),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"2\"),\n\t\t\t\t\t\t\tMin:         pulumi.String(\"1\"),\n\t\t\t\t\t\t\tScale:       pulumi.String(\"sqrt\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tHostmapDefinition: \u0026datadog.DashboardWidgetHostmapDefinitionArgs{\n\t\t\t\t\t\tGroup: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"host\"),\n\t\t\t\t\t\t\tpulumi.String(\"region\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tNoGroupHosts:  pulumi.Bool(true),\n\t\t\t\t\t\tNoMetricHosts: pulumi.Bool(true),\n\t\t\t\t\t\tNodeType:      pulumi.String(\"container\"),\n\t\t\t\t\t\tRequest: \u0026datadog.DashboardWidgetHostmapDefinitionRequestArgs{\n\t\t\t\t\t\t\tFill: pulumi.StringMapArray{\n\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.load.1{*} by {host}\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tSize: pulumi.StringMapArray{\n\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:memcache.uptime{*} by {host}\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tScope: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"region:us-east-1\"),\n\t\t\t\t\t\t\tpulumi.String(\"aws_account:727006795293\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tStyle: \u0026datadog.DashboardWidgetHostmapDefinitionStyleArgs{\n\t\t\t\t\t\t\tFillMax:     pulumi.String(\"20\"),\n\t\t\t\t\t\t\tFillMin:     pulumi.String(\"10\"),\n\t\t\t\t\t\t\tPalette:     pulumi.String(\"yellow_to_green\"),\n\t\t\t\t\t\t\tPaletteFlip: pulumi.Bool(true),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tNoteDefinition: \u0026datadog.DashboardWidgetNoteDefinitionArgs{\n\t\t\t\t\t\tBackgroundColor: pulumi.String(\"pink\"),\n\t\t\t\t\t\tContent:         pulumi.String(\"note text\"),\n\t\t\t\t\t\tFontSize:        pulumi.String(\"14\"),\n\t\t\t\t\t\tShowTick:        pulumi.Bool(true),\n\t\t\t\t\t\tTextAlign:       pulumi.String(\"center\"),\n\t\t\t\t\t\tTickEdge:        pulumi.String(\"left\"),\n\t\t\t\t\t\tTickPos:         pulumi.String(fmt.Sprintf(\"%v%v\", \"50\", \"%\")),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tQueryValueDefinition: \u0026datadog.DashboardWidgetQueryValueDefinitionArgs{\n\t\t\t\t\t\tAutoscale:  pulumi.Bool(true),\n\t\t\t\t\t\tCustomUnit: pulumi.String(\"xx\"),\n\t\t\t\t\t\tLiveSpan:   pulumi.String(\"1h\"),\n\t\t\t\t\t\tPrecision:  pulumi.Int(4),\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"aggregator\": pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\t\"conditionalFormats\": pulumi.StringMapArray{\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003c\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_green\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003e\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_red\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2.2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTextAlign: pulumi.String(\"right\"),\n\t\t\t\t\t\tTitle:     pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tQueryTableDefinition: \u0026datadog.DashboardWidgetQueryTableDefinitionArgs{\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"aggregator\": pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\t\"conditionalFormats\": pulumi.StringMapArray{\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003c\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_green\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003e\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_red\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2.2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"limit\": pulumi.String(\"10\"),\n\t\t\t\t\t\t\t\t\"q\":     pulumi.String(\"avg:system.load.1{env:staging} by {account}\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tScatterplotDefinition: \u0026datadog.DashboardWidgetScatterplotDefinitionArgs{\n\t\t\t\t\t\tColorByGroups: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"account\"),\n\t\t\t\t\t\t\tpulumi.String(\"apm-role-group\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t\tRequest: \u0026datadog.DashboardWidgetScatterplotDefinitionRequestArgs{\n\t\t\t\t\t\t\tX: pulumi.StringMapArray{\n\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"aggregator\": pulumi.String(\"max\"),\n\t\t\t\t\t\t\t\t\t\"q\":          pulumi.String(\"avg:system.cpu.user{*} by {service, account}\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tY: pulumi.StringMapArray{\n\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"aggregator\": pulumi.String(\"min\"),\n\t\t\t\t\t\t\t\t\t\"q\":          pulumi.String(\"avg:system.mem.used{*} by {service, account}\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tXaxis: \u0026datadog.DashboardWidgetScatterplotDefinitionXaxisArgs{\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(true),\n\t\t\t\t\t\t\tLabel:       pulumi.String(\"x\"),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"2000\"),\n\t\t\t\t\t\t\tMin:         pulumi.String(\"1\"),\n\t\t\t\t\t\t\tScale:       pulumi.String(\"pow\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tYaxis: \u0026datadog.DashboardWidgetScatterplotDefinitionYaxisArgs{\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(false),\n\t\t\t\t\t\t\tLabel:       pulumi.String(\"y\"),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"2222\"),\n\t\t\t\t\t\t\tMin:         pulumi.String(\"5\"),\n\t\t\t\t\t\t\tScale:       pulumi.String(\"log\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tServicemapDefinition: \u0026datadog.DashboardWidgetServicemapDefinitionArgs{\n\t\t\t\t\t\tFilters: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"env:prod\"),\n\t\t\t\t\t\t\tpulumi.String(\"datacenter:us1.prod.dog\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tService:    pulumi.String(\"master-db\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"env: prod, datacenter:us1.prod.dog, service: master-db\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTimeseriesDefinition: \u0026datadog.DashboardWidgetTimeseriesDefinitionArgs{\n\t\t\t\t\t\tEvent: pulumi.StringMapArray{\n\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"sources:test tags:1\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"sources:test tags:2\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tLegendSize: pulumi.String(\"2\"),\n\t\t\t\t\t\tLiveSpan:   pulumi.String(\"1h\"),\n\t\t\t\t\t\tMarker: pulumi.StringMapArray{\n\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"error dashed\"),\n\t\t\t\t\t\t\t\t\"label\":       pulumi.String(\" z=6 \"),\n\t\t\t\t\t\t\t\t\"value\":       pulumi.String(\"y = 4\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"ok solid\"),\n\t\t\t\t\t\t\t\t\"label\":       pulumi.String(\" x=8 \"),\n\t\t\t\t\t\t\t\t\"value\":       pulumi.String(\"10 \u003c y \u003c 999\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tRequest: pulumi.Array{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"line\"),\n\t\t\t\t\t\t\t\t\"metadata\": pulumi.StringMapArray{\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"aliasName\":  pulumi.String(\"Alpha\"),\n\t\t\t\t\t\t\t\t\t\t\"expression\": pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t\t\"style\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"lineType\":  pulumi.String(\"dashed\"),\n\t\t\t\t\t\t\t\t\t\"lineWidth\": pulumi.String(\"thin\"),\n\t\t\t\t\t\t\t\t\t\"palette\":   pulumi.String(\"warm\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"area\"),\n\t\t\t\t\t\t\t\t\"logQuery\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\"computeQuery\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\"aggregation\": pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\"facet\":       pulumi.String(\"@duration\"),\n\t\t\t\t\t\t\t\t\t\t\"interval\":    pulumi.Float64(5000),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"groupBy\": pulumi.MapArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\t\"facet\": pulumi.String(\"host\"),\n\t\t\t\t\t\t\t\t\t\t\t\"limit\": pulumi.Float64(10),\n\t\t\t\t\t\t\t\t\t\t\t\"sortQuery\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\t\t\"aggregation\": pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\"facet\":       pulumi.String(\"@duration\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\"order\":       pulumi.String(\"desc\"),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"index\":       pulumi.String(\"mcnulty\"),\n\t\t\t\t\t\t\t\t\t\"searchQuery\": pulumi.String(\"status:info\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"apmQuery\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\"computeQuery\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\"aggregation\": pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\"facet\":       pulumi.String(\"@duration\"),\n\t\t\t\t\t\t\t\t\t\t\"interval\":    pulumi.Float64(5000),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"groupBy\": pulumi.MapArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\t\"facet\": pulumi.String(\"resource_name\"),\n\t\t\t\t\t\t\t\t\t\t\t\"limit\": pulumi.Float64(50),\n\t\t\t\t\t\t\t\t\t\t\t\"sortQuery\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\t\t\"aggregation\": pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\"facet\":       pulumi.String(\"@string_query.interval\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\"order\":       pulumi.String(\"desc\"),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"index\":       pulumi.String(\"apm-search\"),\n\t\t\t\t\t\t\t\t\t\"searchQuery\": pulumi.String(\"type:web\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"bars\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"displayType\": pulumi.String(\"area\"),\n\t\t\t\t\t\t\t\t\"processQuery\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\"filterBy\": pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"active\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"limit\":    pulumi.Float64(50),\n\t\t\t\t\t\t\t\t\t\"metric\":   pulumi.String(\"process.stat.cpu.total_pct\"),\n\t\t\t\t\t\t\t\t\t\"searchBy\": pulumi.String(\"error\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tShowLegend: pulumi.Bool(true),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tYaxis: \u0026datadog.DashboardWidgetTimeseriesDefinitionYaxisArgs{\n\t\t\t\t\t\t\tIncludeZero: pulumi.Bool(false),\n\t\t\t\t\t\t\tMax:         pulumi.String(\"100\"),\n\t\t\t\t\t\t\tScale:       pulumi.String(\"log\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tToplistDefinition: \u0026datadog.DashboardWidgetToplistDefinitionArgs{\n\t\t\t\t\t\tRequest: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"conditionalFormats\": pulumi.StringMapArray{\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003c\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_green\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"comparator\": pulumi.String(\"\u003e\"),\n\t\t\t\t\t\t\t\t\t\t\"palette\":    pulumi.String(\"white_on_red\"),\n\t\t\t\t\t\t\t\t\t\t\"value\":      pulumi.String(\"2.2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"q\": pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle: pulumi.String(\"Widget Title\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tGroupDefinition: \u0026datadog.DashboardWidgetGroupDefinitionArgs{\n\t\t\t\t\t\tLayoutType: pulumi.String(\"ordered\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Group Widget\"),\n\t\t\t\t\t\tWidget: pulumi.Array{\n\t\t\t\t\t\t\tpulumi.MapMap{\n\t\t\t\t\t\t\t\t\"noteDefinition\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\"backgroundColor\": pulumi.String(\"pink\"),\n\t\t\t\t\t\t\t\t\t\"content\":         pulumi.String(\"cluster note widget\"),\n\t\t\t\t\t\t\t\t\t\"fontSize\":        pulumi.String(\"14\"),\n\t\t\t\t\t\t\t\t\t\"showTick\":        pulumi.Bool(true),\n\t\t\t\t\t\t\t\t\t\"textAlign\":       pulumi.String(\"center\"),\n\t\t\t\t\t\t\t\t\t\"tickEdge\":        pulumi.String(\"left\"),\n\t\t\t\t\t\t\t\t\t\"tickPos\":         pulumi.String(fmt.Sprintf(\"%v%v\", \"50\", \"%\")),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.StringMapMap{\n\t\t\t\t\t\t\t\t\"alertGraphDefinition\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"alertId\":  pulumi.String(\"123\"),\n\t\t\t\t\t\t\t\t\t\"liveSpan\": pulumi.String(\"1h\"),\n\t\t\t\t\t\t\t\t\t\"title\":    pulumi.String(\"Alert Graph\"),\n\t\t\t\t\t\t\t\t\t\"vizType\":  pulumi.String(\"toplist\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tServiceLevelObjectiveDefinition: \u0026datadog.DashboardWidgetServiceLevelObjectiveDefinitionArgs{\n\t\t\t\t\t\tShowErrorBudget: pulumi.Bool(true),\n\t\t\t\t\t\tSloId:           pulumi.String(\"56789\"),\n\t\t\t\t\t\tTimeWindows: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"7d\"),\n\t\t\t\t\t\t\tpulumi.String(\"previous_week\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tViewMode: pulumi.String(\"overall\"),\n\t\t\t\t\t\tViewType: pulumi.String(\"detail\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewDashboard(ctx, \"freeDashboard\", \u0026datadog.DashboardArgs{\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Terraform\"),\n\t\t\tIsReadOnly:  pulumi.Bool(false),\n\t\t\tLayoutType:  pulumi.String(\"free\"),\n\t\t\tTemplateVariables: datadog.DashboardTemplateVariableArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tDefault: pulumi.String(\"aws\"),\n\t\t\t\t\tName:    pulumi.String(\"var_1\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"host\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardTemplateVariableArgs{\n\t\t\t\t\tDefault: pulumi.String(\"autoscaling\"),\n\t\t\t\t\tName:    pulumi.String(\"var_2\"),\n\t\t\t\t\tPrefix:  pulumi.String(\"service_name\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTemplateVariablePresets: datadog.DashboardTemplateVariablePresetArray{\n\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetArgs{\n\t\t\t\t\tName: pulumi.String(\"preset_1\"),\n\t\t\t\t\tTemplateVariables: datadog.DashboardTemplateVariablePresetTemplateVariableArray{\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_1\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"host.dc\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\u0026datadog.DashboardTemplateVariablePresetTemplateVariableArgs{\n\t\t\t\t\t\t\tName:  pulumi.String(\"var_2\"),\n\t\t\t\t\t\t\tValue: pulumi.String(\"my_service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tTitle: pulumi.String(\"Free Layout Dashboard\"),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tEventStreamDefinition: \u0026datadog.DashboardWidgetEventStreamDefinitionArgs{\n\t\t\t\t\t\tEventSize:  pulumi.String(\"l\"),\n\t\t\t\t\t\tLiveSpan:   pulumi.String(\"1h\"),\n\t\t\t\t\t\tQuery:      pulumi.String(\"*\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(43),\n\t\t\t\t\t\tWidth:  pulumi.Int(32),\n\t\t\t\t\t\tX:      pulumi.Int(5),\n\t\t\t\t\t\tY:      pulumi.Int(5),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tEventTimelineDefinition: \u0026datadog.DashboardWidgetEventTimelineDefinitionArgs{\n\t\t\t\t\t\tLiveSpan:   pulumi.String(\"1h\"),\n\t\t\t\t\t\tQuery:      pulumi.String(\"*\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(9),\n\t\t\t\t\t\tWidth:  pulumi.Int(65),\n\t\t\t\t\t\tX:      pulumi.Int(42),\n\t\t\t\t\t\tY:      pulumi.Int(73),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tFreeTextDefinition: \u0026datadog.DashboardWidgetFreeTextDefinitionArgs{\n\t\t\t\t\t\tColor:     pulumi.String(\"#d00\"),\n\t\t\t\t\t\tFontSize:  pulumi.String(\"88\"),\n\t\t\t\t\t\tText:      pulumi.String(\"free text content\"),\n\t\t\t\t\t\tTextAlign: pulumi.String(\"left\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(20),\n\t\t\t\t\t\tWidth:  pulumi.Int(30),\n\t\t\t\t\t\tX:      pulumi.Int(42),\n\t\t\t\t\t\tY:      pulumi.Int(5),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tIframeDefinition: \u0026datadog.DashboardWidgetIframeDefinitionArgs{\n\t\t\t\t\t\tUrl: pulumi.String(\"http://google.com\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(46),\n\t\t\t\t\t\tWidth:  pulumi.Int(39),\n\t\t\t\t\t\tX:      pulumi.Int(111),\n\t\t\t\t\t\tY:      pulumi.Int(8),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tImageDefinition: \u0026datadog.DashboardWidgetImageDefinitionArgs{\n\t\t\t\t\t\tMargin: pulumi.String(\"small\"),\n\t\t\t\t\t\tSizing: pulumi.String(\"fit\"),\n\t\t\t\t\t\tUrl:    pulumi.String(\"https://images.pexels.com/photos/67636/rose-blue-flower-rose-blooms-67636.jpeg?auto=compress\u0026cs=tinysrgb\u0026h=350\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(20),\n\t\t\t\t\t\tWidth:  pulumi.Int(30),\n\t\t\t\t\t\tX:      pulumi.Int(77),\n\t\t\t\t\t\tY:      pulumi.Int(7),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tLogStreamDefinition: \u0026datadog.DashboardWidgetLogStreamDefinitionArgs{\n\t\t\t\t\t\tColumns: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"core_host\"),\n\t\t\t\t\t\t\tpulumi.String(\"core_service\"),\n\t\t\t\t\t\t\tpulumi.String(\"tag_source\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tIndexes: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"main\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tMessageDisplay:    pulumi.String(\"expanded-md\"),\n\t\t\t\t\t\tQuery:             pulumi.String(\"error\"),\n\t\t\t\t\t\tShowDateColumn:    pulumi.Bool(true),\n\t\t\t\t\t\tShowMessageColumn: pulumi.Bool(true),\n\t\t\t\t\t\tSort: \u0026datadog.DashboardWidgetLogStreamDefinitionSortArgs{\n\t\t\t\t\t\t\tColumn: pulumi.String(\"time\"),\n\t\t\t\t\t\t\tOrder:  pulumi.String(\"desc\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(36),\n\t\t\t\t\t\tWidth:  pulumi.Int(32),\n\t\t\t\t\t\tX:      pulumi.Int(5),\n\t\t\t\t\t\tY:      pulumi.Int(51),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tManageStatusDefinition: \u0026datadog.DashboardWidgetManageStatusDefinitionArgs{\n\t\t\t\t\t\tColorPreference:   pulumi.String(\"text\"),\n\t\t\t\t\t\tDisplayFormat:     pulumi.String(\"countsAndList\"),\n\t\t\t\t\t\tHideZeroCounts:    pulumi.Bool(true),\n\t\t\t\t\t\tQuery:             pulumi.String(\"type:metric\"),\n\t\t\t\t\t\tShowLastTriggered: pulumi.Bool(false),\n\t\t\t\t\t\tSort:              pulumi.String(\"status,asc\"),\n\t\t\t\t\t\tSummaryType:       pulumi.String(\"monitors\"),\n\t\t\t\t\t\tTitle:             pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleAlign:        pulumi.String(\"left\"),\n\t\t\t\t\t\tTitleSize:         pulumi.String(\"16\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(40),\n\t\t\t\t\t\tWidth:  pulumi.Int(30),\n\t\t\t\t\t\tX:      pulumi.Int(112),\n\t\t\t\t\t\tY:      pulumi.Int(55),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTraceServiceDefinition: \u0026datadog.DashboardWidgetTraceServiceDefinitionArgs{\n\t\t\t\t\t\tDisplayFormat:    pulumi.String(\"three_column\"),\n\t\t\t\t\t\tEnv:              pulumi.String(\"datad0g.com\"),\n\t\t\t\t\t\tLiveSpan:         pulumi.String(\"1h\"),\n\t\t\t\t\t\tService:          pulumi.String(\"alerting-cassandra\"),\n\t\t\t\t\t\tShowBreakdown:    pulumi.Bool(true),\n\t\t\t\t\t\tShowDistribution: pulumi.Bool(true),\n\t\t\t\t\t\tShowErrors:       pulumi.Bool(true),\n\t\t\t\t\t\tShowHits:         pulumi.Bool(true),\n\t\t\t\t\t\tShowLatency:      pulumi.Bool(false),\n\t\t\t\t\t\tShowResourceList: pulumi.Bool(false),\n\t\t\t\t\t\tSizeFormat:       pulumi.String(\"large\"),\n\t\t\t\t\t\tSpanName:         pulumi.String(\"cassandra.query\"),\n\t\t\t\t\t\tTitle:            pulumi.String(\"alerting-cassandra #env:datad0g.com\"),\n\t\t\t\t\t\tTitleAlign:       pulumi.String(\"center\"),\n\t\t\t\t\t\tTitleSize:        pulumi.String(\"13\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(38),\n\t\t\t\t\t\tWidth:  pulumi.Int(67),\n\t\t\t\t\t\tX:      pulumi.Int(40),\n\t\t\t\t\t\tY:      pulumi.Int(28),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTimeseriesDefinition: \u0026datadog.DashboardWidgetTimeseriesDefinitionArgs{\n\t\t\t\t\t\tRequest: pulumi.ArrayMapArray{\n\t\t\t\t\t\t\tpulumi.ArrayMap{\n\t\t\t\t\t\t\t\t\"formula\": pulumi.Array{\n\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\"alias\":             pulumi.String(\"my ff query\"),\n\t\t\t\t\t\t\t\t\t\t\"formulaExpression\": pulumi.String(\"my_query_1 + my_query_2\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\"alias\":             pulumi.String(\"my second ff query\"),\n\t\t\t\t\t\t\t\t\t\t\"formulaExpression\": pulumi.String(\"my_query_1 * my_query_2\"),\n\t\t\t\t\t\t\t\t\t\t\"limit\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\t\"count\": pulumi.Float64(5),\n\t\t\t\t\t\t\t\t\t\t\t\"order\": pulumi.String(\"desc\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"query\": pulumi.Array{\n\t\t\t\t\t\t\t\t\tpulumi.StringMapMap{\n\t\t\t\t\t\t\t\t\t\t\"metricQuery\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\t\"aggregator\": pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\t\t\t\t\"dataSource\": pulumi.String(\"metrics\"),\n\t\t\t\t\t\t\t\t\t\t\t\"name\":       pulumi.String(\"my_query_1\"),\n\t\t\t\t\t\t\t\t\t\t\t\"query\":      pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tpulumi.StringMapMap{\n\t\t\t\t\t\t\t\t\t\t\"metricQuery\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\t\"aggregator\": pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\t\t\t\t\"name\":       pulumi.String(\"my_query_2\"),\n\t\t\t\t\t\t\t\t\t\t\t\"query\":      pulumi.String(\"avg:system.cpu.user{app:general} by {env}\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTimeseriesDefinition: \u0026datadog.DashboardWidgetTimeseriesDefinitionArgs{\n\t\t\t\t\t\tRequest: pulumi.MapMapArrayMapArray{\n\t\t\t\t\t\t\tpulumi.MapMapArrayMap{\n\t\t\t\t\t\t\t\t\"query\": pulumi.MapMapArray{\n\t\t\t\t\t\t\t\t\tpulumi.MapMap{\n\t\t\t\t\t\t\t\t\t\t\"eventQuery\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\t\"compute\": pulumi.StringMapArray{\n\t\t\t\t\t\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"aggregation\": pulumi.String(\"count\"),\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\"dataSource\": pulumi.String(\"logs\"),\n\t\t\t\t\t\t\t\t\t\t\t\"groupBy\": pulumi.MapArray{\n\t\t\t\t\t\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"facet\": pulumi.String(\"host\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"limit\": pulumi.Float64(10),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"sort\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"aggregation\": pulumi.String(\"avg\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"metric\":      pulumi.String(\"@lambda.max_memory_used\"),\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\"indexes\": pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\t\t\tpulumi.String(\"days-3\"),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tTimeseriesDefinition: \u0026datadog.DashboardWidgetTimeseriesDefinitionArgs{\n\t\t\t\t\t\tRequest: pulumi.MapMapArrayMapArray{\n\t\t\t\t\t\t\tpulumi.MapMapArrayMap{\n\t\t\t\t\t\t\t\t\"query\": pulumi.MapMapArray{\n\t\t\t\t\t\t\t\t\tpulumi.MapMap{\n\t\t\t\t\t\t\t\t\t\t\"processQuery\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\t\t\"aggregator\":      pulumi.String(\"sum\"),\n\t\t\t\t\t\t\t\t\t\t\t\"dataSource\":      pulumi.String(\"process\"),\n\t\t\t\t\t\t\t\t\t\t\t\"isNormalizedCpu\": pulumi.Bool(true),\n\t\t\t\t\t\t\t\t\t\t\t\"limit\":           pulumi.Float64(10),\n\t\t\t\t\t\t\t\t\t\t\t\"metric\":          pulumi.String(\"process.stat.cpu.total_pct\"),\n\t\t\t\t\t\t\t\t\t\t\t\"name\":            pulumi.String(\"my_process_query\"),\n\t\t\t\t\t\t\t\t\t\t\t\"sort\":            pulumi.String(\"asc\"),\n\t\t\t\t\t\t\t\t\t\t\t\"tagFilters\": pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\t\t\tpulumi.String(\"some_filter\"),\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\"textFilter\": pulumi.String(\"abc\"),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/dashboard:Dashboard my_service_dashboard sv7-gyh-kas\n```\n\n ",
            "properties": {
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of dashboard lists this dashboard belongs to.\n"
                },
                "dashboardListsRemoveds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of dashboard lists this dashboard should be removed from. Internal only.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only.\n"
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard, either 'free' or 'ordered'.\n"
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of handles of users to notify when changes are made to this dashboard.\n"
                },
                "reflowType": {
                    "type": "string",
                    "description": "The reflow type of a multi-size layout dashboard. Set this only when layout type is ‘ordered’. If set to ‘fixed’, the dashboard expect all widgets to have a layout, and if it’s set to ‘auto’, widgets should not have layouts.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "The list of template variables for this dashboard.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n"
                }
            },
            "required": [
                "dashboardListsRemoveds",
                "layoutType",
                "title",
                "url",
                "widgets"
            ],
            "inputProperties": {
                "dashboardLists": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The list of dashboard lists this dashboard belongs to.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the dashboard.\n"
                },
                "isReadOnly": {
                    "type": "boolean",
                    "description": "Whether this dashboard is read-only.\n"
                },
                "layoutType": {
                    "type": "string",
                    "description": "The layout type of the dashboard, either 'free' or 'ordered'.\n"
                },
                "notifyLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of handles of users to notify when changes are made to this dashboard.\n"
                },
                "reflowType": {
                    "type": "string",
                    "description": "The reflow type of a multi-size layout dashboard. Set this only when layout type is ‘ordered’. If set to ‘fixed’, the dashboard expect all widgets to have a layout, and if it’s set to ‘auto’, widgets should not have layouts.\n"
                },
                "templateVariablePresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                    },
                    "description": "The list of selectable template variable presets for this dashboard.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                    },
                    "description": "The list of template variables for this dashboard.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the dashboard.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the dashboard.\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                    },
                    "description": "The list of widgets to display on the dashboard.\n"
                }
            },
            "requiredInputs": [
                "layoutType",
                "title",
                "widgets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dashboard resources.\n",
                "properties": {
                    "dashboardLists": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of dashboard lists this dashboard belongs to.\n"
                    },
                    "dashboardListsRemoveds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of dashboard lists this dashboard should be removed from. Internal only.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the dashboard.\n"
                    },
                    "isReadOnly": {
                        "type": "boolean",
                        "description": "Whether this dashboard is read-only.\n"
                    },
                    "layoutType": {
                        "type": "string",
                        "description": "The layout type of the dashboard, either 'free' or 'ordered'.\n"
                    },
                    "notifyLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of handles of users to notify when changes are made to this dashboard.\n"
                    },
                    "reflowType": {
                        "type": "string",
                        "description": "The reflow type of a multi-size layout dashboard. Set this only when layout type is ‘ordered’. If set to ‘fixed’, the dashboard expect all widgets to have a layout, and if it’s set to ‘auto’, widgets should not have layouts.\n"
                    },
                    "templateVariablePresets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardTemplateVariablePreset:DashboardTemplateVariablePreset"
                        },
                        "description": "The list of selectable template variable presets for this dashboard.\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardTemplateVariable:DashboardTemplateVariable"
                        },
                        "description": "The list of template variables for this dashboard.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the dashboard.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the dashboard.\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardWidget:DashboardWidget"
                        },
                        "description": "The list of widgets to display on the dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/dashboardList:DashboardList": {
            "description": "Provides a Datadog dashboard_list resource. This can be used to create and manage Datadog Dashboard Lists and the individual dashboards within them.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst time = new datadog.Dashboard(\"time\", {\n    title: \"TF Test Layout Dashboard\",\n    description: \"Created using the Datadog provider in Terraform\",\n    layoutType: \"ordered\",\n    isReadOnly: true,\n    widgets: [{\n        alertGraphDefinition: {\n            alertId: \"1234\",\n            vizType: \"timeseries\",\n            title: \"Widget Title\",\n            liveSpan: \"1h\",\n        },\n    }],\n});\nconst screen = new datadog.Dashboard(\"screen\", {\n    title: \"TF Test Free Layout Dashboard\",\n    description: \"Created using the Datadog provider in Terraform\",\n    layoutType: \"free\",\n    isReadOnly: false,\n    widgets: [{\n        eventStreamDefinition: {\n            query: \"*\",\n            eventSize: \"l\",\n            title: \"Widget Title\",\n            titleSize: 16,\n            titleAlign: \"left\",\n            liveSpan: \"1h\",\n        },\n        widgetLayout: {\n            height: 43,\n            width: 32,\n            x: 5,\n            y: 5,\n        },\n    }],\n});\n// Create a new Dashboard List with two Dashboards\nconst newList = new datadog.DashboardList(\"newList\", {\n    name: \"Terraform Created List\",\n    dashItems: [\n        {\n            type: \"custom_timeboard\",\n            dashId: time.id,\n        },\n        {\n            type: \"custom_screenboard\",\n            dashId: screen.id,\n        },\n    ],\n}, {\n    dependsOn: [\n        screen,\n        time,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntime = datadog.Dashboard(\"time\",\n    title=\"TF Test Layout Dashboard\",\n    description=\"Created using the Datadog provider in Terraform\",\n    layout_type=\"ordered\",\n    is_read_only=True,\n    widgets=[datadog.DashboardWidgetArgs(\n        alert_graph_definition=datadog.DashboardWidgetAlertGraphDefinitionArgs(\n            alert_id=\"1234\",\n            viz_type=\"timeseries\",\n            title=\"Widget Title\",\n            live_span=\"1h\",\n        ),\n    )])\nscreen = datadog.Dashboard(\"screen\",\n    title=\"TF Test Free Layout Dashboard\",\n    description=\"Created using the Datadog provider in Terraform\",\n    layout_type=\"free\",\n    is_read_only=False,\n    widgets=[datadog.DashboardWidgetArgs(\n        event_stream_definition=datadog.DashboardWidgetEventStreamDefinitionArgs(\n            query=\"*\",\n            event_size=\"l\",\n            title=\"Widget Title\",\n            title_size=\"16\",\n            title_align=\"left\",\n            live_span=\"1h\",\n        ),\n        widget_layout=datadog.DashboardWidgetWidgetLayoutArgs(\n            height=43,\n            width=32,\n            x=5,\n            y=5,\n        ),\n    )])\n# Create a new Dashboard List with two Dashboards\nnew_list = datadog.DashboardList(\"newList\",\n    name=\"Terraform Created List\",\n    dash_items=[\n        datadog.DashboardListDashItemArgs(\n            type=\"custom_timeboard\",\n            dash_id=time.id,\n        ),\n        datadog.DashboardListDashItemArgs(\n            type=\"custom_screenboard\",\n            dash_id=screen.id,\n        ),\n    ],\n    opts=pulumi.ResourceOptions(depends_on=[\n            screen,\n            time,\n        ]))\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var time = new Datadog.Dashboard(\"time\", new Datadog.DashboardArgs\n        {\n            Title = \"TF Test Layout Dashboard\",\n            Description = \"Created using the Datadog provider in Terraform\",\n            LayoutType = \"ordered\",\n            IsReadOnly = true,\n            Widgets = \n            {\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    AlertGraphDefinition = new Datadog.Inputs.DashboardWidgetAlertGraphDefinitionArgs\n                    {\n                        AlertId = \"1234\",\n                        VizType = \"timeseries\",\n                        Title = \"Widget Title\",\n                        LiveSpan = \"1h\",\n                    },\n                },\n            },\n        });\n        var screen = new Datadog.Dashboard(\"screen\", new Datadog.DashboardArgs\n        {\n            Title = \"TF Test Free Layout Dashboard\",\n            Description = \"Created using the Datadog provider in Terraform\",\n            LayoutType = \"free\",\n            IsReadOnly = false,\n            Widgets = \n            {\n                new Datadog.Inputs.DashboardWidgetArgs\n                {\n                    EventStreamDefinition = new Datadog.Inputs.DashboardWidgetEventStreamDefinitionArgs\n                    {\n                        Query = \"*\",\n                        EventSize = \"l\",\n                        Title = \"Widget Title\",\n                        TitleSize = \"16\",\n                        TitleAlign = \"left\",\n                        LiveSpan = \"1h\",\n                    },\n                    WidgetLayout = new Datadog.Inputs.DashboardWidgetWidgetLayoutArgs\n                    {\n                        Height = 43,\n                        Width = 32,\n                        X = 5,\n                        Y = 5,\n                    },\n                },\n            },\n        });\n        // Create a new Dashboard List with two Dashboards\n        var newList = new Datadog.DashboardList(\"newList\", new Datadog.DashboardListArgs\n        {\n            Name = \"Terraform Created List\",\n            DashItems = \n            {\n                new Datadog.Inputs.DashboardListDashItemArgs\n                {\n                    Type = \"custom_timeboard\",\n                    DashId = time.Id,\n                },\n                new Datadog.Inputs.DashboardListDashItemArgs\n                {\n                    Type = \"custom_screenboard\",\n                    DashId = screen.Id,\n                },\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                screen,\n                time,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttime, err := datadog.NewDashboard(ctx, \"time\", \u0026datadog.DashboardArgs{\n\t\t\tTitle:       pulumi.String(\"TF Test Layout Dashboard\"),\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Terraform\"),\n\t\t\tLayoutType:  pulumi.String(\"ordered\"),\n\t\t\tIsReadOnly:  pulumi.Bool(true),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tAlertGraphDefinition: \u0026datadog.DashboardWidgetAlertGraphDefinitionArgs{\n\t\t\t\t\t\tAlertId:  pulumi.String(\"1234\"),\n\t\t\t\t\t\tVizType:  pulumi.String(\"timeseries\"),\n\t\t\t\t\t\tTitle:    pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tLiveSpan: pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tscreen, err := datadog.NewDashboard(ctx, \"screen\", \u0026datadog.DashboardArgs{\n\t\t\tTitle:       pulumi.String(\"TF Test Free Layout Dashboard\"),\n\t\t\tDescription: pulumi.String(\"Created using the Datadog provider in Terraform\"),\n\t\t\tLayoutType:  pulumi.String(\"free\"),\n\t\t\tIsReadOnly:  pulumi.Bool(false),\n\t\t\tWidgets: datadog.DashboardWidgetArray{\n\t\t\t\t\u0026datadog.DashboardWidgetArgs{\n\t\t\t\t\tEventStreamDefinition: \u0026datadog.DashboardWidgetEventStreamDefinitionArgs{\n\t\t\t\t\t\tQuery:      pulumi.String(\"*\"),\n\t\t\t\t\t\tEventSize:  pulumi.String(\"l\"),\n\t\t\t\t\t\tTitle:      pulumi.String(\"Widget Title\"),\n\t\t\t\t\t\tTitleSize:  pulumi.String(\"16\"),\n\t\t\t\t\t\tTitleAlign: pulumi.String(\"left\"),\n\t\t\t\t\t\tLiveSpan:   pulumi.String(\"1h\"),\n\t\t\t\t\t},\n\t\t\t\t\tWidgetLayout: \u0026datadog.DashboardWidgetWidgetLayoutArgs{\n\t\t\t\t\t\tHeight: pulumi.Int(43),\n\t\t\t\t\t\tWidth:  pulumi.Int(32),\n\t\t\t\t\t\tX:      pulumi.Int(5),\n\t\t\t\t\t\tY:      pulumi.Int(5),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewDashboardList(ctx, \"newList\", \u0026datadog.DashboardListArgs{\n\t\t\tName: pulumi.String(\"Terraform Created List\"),\n\t\t\tDashItems: datadog.DashboardListDashItemArray{\n\t\t\t\t\u0026datadog.DashboardListDashItemArgs{\n\t\t\t\t\tType:   pulumi.String(\"custom_timeboard\"),\n\t\t\t\t\tDashId: time.ID(),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.DashboardListDashItemArgs{\n\t\t\t\t\tType:   pulumi.String(\"custom_screenboard\"),\n\t\t\t\t\tDashId: screen.ID(),\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tscreen,\n\t\t\ttime,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/dashboardList:DashboardList new_list 123456\n```\n\n ",
            "properties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "A set of dashboard items that belong to this list\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Dashboard List\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "dashItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                    },
                    "description": "A set of dashboard items that belong to this list\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Dashboard List\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DashboardList resources.\n",
                "properties": {
                    "dashItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/DashboardListDashItem:DashboardListDashItem"
                        },
                        "description": "A set of dashboard items that belong to this list\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Dashboard List\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/downtime:Downtime": {
            "description": "Provides a Datadog downtime resource. This can be used to create and manage Datadog downtimes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Example: downtime for all monitors\n// Create a new daily 1700-0900 Datadog downtime for all monitors\nconst foo = new datadog.Downtime(\"foo\", {\n    end: 1483365600,\n    recurrence: {\n        period: 1,\n        type: \"days\",\n    },\n    scopes: [\"*\"],\n    start: 1483308000,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Example: downtime for all monitors\n# Create a new daily 1700-0900 Datadog downtime for all monitors\nfoo = datadog.Downtime(\"foo\",\n    end=1483365600,\n    recurrence=datadog.DowntimeRecurrenceArgs(\n        period=1,\n        type=\"days\",\n    ),\n    scopes=[\"*\"],\n    start=1483308000)\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Example: downtime for all monitors\n        // Create a new daily 1700-0900 Datadog downtime for all monitors\n        var foo = new Datadog.Downtime(\"foo\", new Datadog.DowntimeArgs\n        {\n            End = 1483365600,\n            Recurrence = new Datadog.Inputs.DowntimeRecurrenceArgs\n            {\n                Period = 1,\n                Type = \"days\",\n            },\n            Scopes = \n            {\n                \"*\",\n            },\n            Start = 1483308000,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewDowntime(ctx, \"foo\", \u0026datadog.DowntimeArgs{\n\t\t\tEnd: pulumi.Int(1483365600),\n\t\t\tRecurrence: \u0026datadog.DowntimeRecurrenceArgs{\n\t\t\t\tPeriod: pulumi.Int(1),\n\t\t\t\tType:   pulumi.String(\"days\"),\n\t\t\t},\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"*\"),\n\t\t\t},\n\t\t\tStart: pulumi.Int(1483308000),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/downtime:Downtime bytes_received_localhost 2081\n```\n\n ",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "When true indicates this downtime is being actively applied\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "When true indicates this downtime is not being applied\n"
                },
                "end": {
                    "type": "integer",
                    "description": "Optionally specify an end date when this downtime should expire\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                },
                "message": {
                    "type": "string",
                    "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of monitor tags (up to 25), i.e. tags that are applied directly to monitors to which the downtime applies\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "Optional recurring schedule for this downtime\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Specify when this downtime should start\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the downtime, default UTC\n"
                }
            },
            "required": [
                "active",
                "disabled",
                "scopes"
            ],
            "inputProperties": {
                "end": {
                    "type": "integer",
                    "description": "Optionally specify an end date when this downtime should expire\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                },
                "message": {
                    "type": "string",
                    "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "When specified, this downtime will only apply to this monitor\n"
                },
                "monitorTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of monitor tags (up to 25), i.e. tags that are applied directly to monitors to which the downtime applies\n"
                },
                "recurrence": {
                    "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                    "description": "Optional recurring schedule for this downtime\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                },
                "start": {
                    "type": "integer",
                    "description": "Specify when this downtime should start\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "The timezone for the downtime, default UTC\n"
                }
            },
            "requiredInputs": [
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Downtime resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "When true indicates this downtime is being actively applied\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "When true indicates this downtime is not being applied\n"
                    },
                    "end": {
                        "type": "integer",
                        "description": "Optionally specify an end date when this downtime should expire\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "String representing date and time to end the downtime in RFC3339 format.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "An optional message to provide when creating the downtime, can include notification handles\n"
                    },
                    "monitorId": {
                        "type": "integer",
                        "description": "When specified, this downtime will only apply to this monitor\n"
                    },
                    "monitorTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of monitor tags (up to 25), i.e. tags that are applied directly to monitors to which the downtime applies\n"
                    },
                    "recurrence": {
                        "$ref": "#/types/datadog:index/DowntimeRecurrence:DowntimeRecurrence",
                        "description": "Optional recurring schedule for this downtime\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "specify the group scope to which this downtime applies. For everything use '*'\n"
                    },
                    "start": {
                        "type": "integer",
                        "description": "Specify when this downtime should start\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "String representing date and time to start the downtime in RFC3339 format.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The timezone for the downtime, default UTC\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsArchive:LogsArchive": {
            "description": "Provides a Datadog Logs Archive API resource, which is used to create and manage Datadog logs archives.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myS3Archive = new datadog.LogsArchive(\"my_s3_archive\", {\n    name: \"my s3 archive\",\n    query: \"service:myservice\",\n    s3Archive: {\n        accountId: \"001234567888\",\n        bucket: \"my-bucket\",\n        path: \"/path/foo\",\n        roleName: \"my-role-name\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmy_s3_archive = datadog.LogsArchive(\"myS3Archive\",\n    name=\"my s3 archive\",\n    query=\"service:myservice\",\n    s3_archive=datadog.LogsArchiveS3ArchiveArgs(\n        account_id=\"001234567888\",\n        bucket=\"my-bucket\",\n        path=\"/path/foo\",\n        role_name=\"my-role-name\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myS3Archive = new Datadog.LogsArchive(\"myS3Archive\", new Datadog.LogsArchiveArgs\n        {\n            Name = \"my s3 archive\",\n            Query = \"service:myservice\",\n            S3Archive = new Datadog.Inputs.LogsArchiveS3ArchiveArgs\n            {\n                AccountId = \"001234567888\",\n                Bucket = \"my-bucket\",\n                Path = \"/path/foo\",\n                RoleName = \"my-role-name\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsArchive(ctx, \"myS3Archive\", \u0026datadog.LogsArchiveArgs{\n\t\t\tName:  pulumi.String(\"my s3 archive\"),\n\t\t\tQuery: pulumi.String(\"service:myservice\"),\n\t\t\tS3Archive: \u0026datadog.LogsArchiveS3ArchiveArgs{\n\t\t\t\tAccountId: pulumi.String(\"001234567888\"),\n\t\t\t\tBucket:    pulumi.String(\"my-bucket\"),\n\t\t\t\tPath:      pulumi.String(\"/path/foo\"),\n\t\t\t\tRoleName:  pulumi.String(\"my-role-name\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/logsArchive:LogsArchive my_s3_archive 1Aabc2_dfQPLnXy3HlfK4hi\n```\n\n ",
            "properties": {
                "azure": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzure:LogsArchiveAzure",
                    "description": "Definition of an azure archive. **Deprecated.** Define `azure_archive` list with one element instead.\n",
                    "deprecationMessage": "Define `azure_archive` list with one element instead."
                },
                "azureArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                    "description": "Definition of an azure archive.\n"
                },
                "gcs": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcs:LogsArchiveGcs",
                    "description": "Definition of a GCS archive. **Deprecated.** Define `gcs_archive` list with one element instead.\n",
                    "deprecationMessage": "Define `gcs_archive` list with one element instead."
                },
                "gcsArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                    "description": "Definition of a GCS archive.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "To store the tags in the archive, set the value `true`. If it is set to `false`, the tags will be dropped when the logs are sent to the archive.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Your archive name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The archive query/filter. Logs matching this query are included in the archive.\n"
                },
                "rehydrationTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to add to rehydrated logs from an archive.\n"
                },
                "s3": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3:LogsArchiveS3",
                    "description": "Definition of an s3 archive. **Deprecated.** Define `s3_archive` list with one element instead.\n",
                    "deprecationMessage": "Define `s3_archive` list with one element instead."
                },
                "s3Archive": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                    "description": "Definition of an s3 archive.\n"
                }
            },
            "required": [
                "name",
                "query"
            ],
            "inputProperties": {
                "azure": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzure:LogsArchiveAzure",
                    "description": "Definition of an azure archive. **Deprecated.** Define `azure_archive` list with one element instead.\n",
                    "deprecationMessage": "Define `azure_archive` list with one element instead."
                },
                "azureArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                    "description": "Definition of an azure archive.\n"
                },
                "gcs": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcs:LogsArchiveGcs",
                    "description": "Definition of a GCS archive. **Deprecated.** Define `gcs_archive` list with one element instead.\n",
                    "deprecationMessage": "Define `gcs_archive` list with one element instead."
                },
                "gcsArchive": {
                    "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                    "description": "Definition of a GCS archive.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "To store the tags in the archive, set the value `true`. If it is set to `false`, the tags will be dropped when the logs are sent to the archive.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Your archive name.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The archive query/filter. Logs matching this query are included in the archive.\n"
                },
                "rehydrationTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags to add to rehydrated logs from an archive.\n"
                },
                "s3": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3:LogsArchiveS3",
                    "description": "Definition of an s3 archive. **Deprecated.** Define `s3_archive` list with one element instead.\n",
                    "deprecationMessage": "Define `s3_archive` list with one element instead."
                },
                "s3Archive": {
                    "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                    "description": "Definition of an s3 archive.\n"
                }
            },
            "requiredInputs": [
                "name",
                "query"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsArchive resources.\n",
                "properties": {
                    "azure": {
                        "$ref": "#/types/datadog:index/LogsArchiveAzure:LogsArchiveAzure",
                        "description": "Definition of an azure archive. **Deprecated.** Define `azure_archive` list with one element instead.\n",
                        "deprecationMessage": "Define `azure_archive` list with one element instead."
                    },
                    "azureArchive": {
                        "$ref": "#/types/datadog:index/LogsArchiveAzureArchive:LogsArchiveAzureArchive",
                        "description": "Definition of an azure archive.\n"
                    },
                    "gcs": {
                        "$ref": "#/types/datadog:index/LogsArchiveGcs:LogsArchiveGcs",
                        "description": "Definition of a GCS archive. **Deprecated.** Define `gcs_archive` list with one element instead.\n",
                        "deprecationMessage": "Define `gcs_archive` list with one element instead."
                    },
                    "gcsArchive": {
                        "$ref": "#/types/datadog:index/LogsArchiveGcsArchive:LogsArchiveGcsArchive",
                        "description": "Definition of a GCS archive.\n"
                    },
                    "includeTags": {
                        "type": "boolean",
                        "description": "To store the tags in the archive, set the value `true`. If it is set to `false`, the tags will be dropped when the logs are sent to the archive.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Your archive name.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "The archive query/filter. Logs matching this query are included in the archive.\n"
                    },
                    "rehydrationTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of tags to add to rehydrated logs from an archive.\n"
                    },
                    "s3": {
                        "$ref": "#/types/datadog:index/LogsArchiveS3:LogsArchiveS3",
                        "description": "Definition of an s3 archive. **Deprecated.** Define `s3_archive` list with one element instead.\n",
                        "deprecationMessage": "Define `s3_archive` list with one element instead."
                    },
                    "s3Archive": {
                        "$ref": "#/types/datadog:index/LogsArchiveS3Archive:LogsArchiveS3Archive",
                        "description": "Definition of an s3 archive.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsArchiveOrder:LogsArchiveOrder": {
            "description": "Provides a Datadog [Logs Archive API](https://docs.datadoghq.com/api/v2/logs-archives/) resource, which is used to manage Datadog log archives order.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst sampleArchiveOrder = new datadog.LogsArchiveOrder(\"sample_archive_order\", {\n    archiveIds: [\n        datadog_logs_archive_sample_archive_1.id,\n        datadog_logs_archive_sample_archive_2.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_archive_order = datadog.LogsArchiveOrder(\"sampleArchiveOrder\", archive_ids=[\n    datadog_logs_archive[\"sample_archive_1\"][\"id\"],\n    datadog_logs_archive[\"sample_archive_2\"][\"id\"],\n])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sampleArchiveOrder = new Datadog.LogsArchiveOrder(\"sampleArchiveOrder\", new Datadog.LogsArchiveOrderArgs\n        {\n            ArchiveIds = \n            {\n                datadog_logs_archive.Sample_archive_1.Id,\n                datadog_logs_archive.Sample_archive_2.Id,\n            },\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# There must be at most one datadog_logs_archive_order resource. You can import the datadog_logs_archive_order or create an archive order.\n\n```sh\n $ pulumi import datadog:index/logsArchiveOrder:LogsArchiveOrder name\u003e archiveOrderID\n```\n\n ",
            "properties": {
                "archiveIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                }
            },
            "required": [
                "archiveIds"
            ],
            "inputProperties": {
                "archiveIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsArchiveOrder resources.\n",
                "properties": {
                    "archiveIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsCustomPipeline:LogsCustomPipeline": {
            "description": "Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/) resource, which is used to create and manage Datadog logs custom pipelines. Each `datadog.LogsCustomPipeline` resource defines a complete pipeline. The order of the pipelines is maintained in a different resource: `datadog.LogsPipelineOrder`. When creating a new pipeline, you need to **explicitly** add this pipeline to the `datadog.LogsPipelineOrder` resource to track the pipeline. Similarly, when a pipeline needs to be destroyed, remove its references from the `datadog.LogsPipelineOrder` resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst samplePipeline = new datadog.LogsCustomPipeline(\"sample_pipeline\", {\n    filters: [{\n        query: \"source:foo\",\n    }],\n    isEnabled: true,\n    name: \"sample pipeline\",\n    processors: [\n        {\n            arithmeticProcessor: {\n                expression: \"(time1 - time2)*1000\",\n                isEnabled: true,\n                isReplaceMissing: true,\n                name: \"sample arithmetic processor\",\n                target: \"my_arithmetic\",\n            },\n        },\n        {\n            attributeRemapper: {\n                isEnabled: true,\n                name: \"sample attribute processor\",\n                overrideOnConflict: false,\n                preserveSource: true,\n                sourceType: \"tag\",\n                sources: [\"db.instance\"],\n                target: \"db\",\n                targetFormat: \"string\",\n                targetType: \"attribute\",\n            },\n        },\n        {\n            categoryProcessor: {\n                categories: [\n                    {\n                        filter: {\n                            query: \"@severity: \\\".\\\"\",\n                        },\n                        name: \"debug\",\n                    },\n                    {\n                        filter: {\n                            query: \"@severity: \\\"-\\\"\",\n                        },\n                        name: \"verbose\",\n                    },\n                ],\n                isEnabled: true,\n                name: \"sample category processor\",\n                target: \"foo.severity\",\n            },\n        },\n        {\n            dateRemapper: {\n                isEnabled: true,\n                name: \"sample date remapper\",\n                sources: [\n                    \"_timestamp\",\n                    \"published_date\",\n                ],\n            },\n        },\n        {\n            geoIpParser: {\n                isEnabled: true,\n                name: \"sample geo ip parser\",\n                sources: [\"network.client.ip\"],\n                target: \"network.client.geoip\",\n            },\n        },\n        {\n            grokParser: {\n                grok: {\n                    matchRules: \"Rule %%{word:my_word2} %%{number:my_float2}\",\n                    supportRules: \"\",\n                },\n                isEnabled: true,\n                name: \"sample grok parser\",\n                samples: [\"sample log 1\"],\n                source: \"message\",\n            },\n        },\n        {\n            lookupProcessor: {\n                defaultLookup: \"unknown service\",\n                isEnabled: true,\n                lookupTables: [\"1,my service\"],\n                name: \"sample lookup processor\",\n                source: \"service_id\",\n                target: \"service_name\",\n            },\n        },\n        {\n            messageRemapper: {\n                isEnabled: true,\n                name: \"sample message remapper\",\n                sources: [\"msg\"],\n            },\n        },\n        {\n            pipeline: {\n                filters: [{\n                    query: \"source:foo\",\n                }],\n                isEnabled: true,\n                name: \"nested pipeline\",\n                processors: [{\n                    urlParser: {\n                        name: \"sample url parser\",\n                        normalizeEndingSlashes: true,\n                        sources: [\n                            \"url\",\n                            \"extra\",\n                        ],\n                        target: \"http_url\",\n                    },\n                }],\n            },\n        },\n        {\n            serviceRemapper: {\n                isEnabled: true,\n                name: \"sample service remapper\",\n                sources: [\"service\"],\n            },\n        },\n        {\n            statusRemapper: {\n                isEnabled: true,\n                name: \"sample status remapper\",\n                sources: [\n                    \"info\",\n                    \"trace\",\n                ],\n            },\n        },\n        {\n            stringBuilderProcessor: {\n                isEnabled: true,\n                isReplaceMissing: false,\n                name: \"sample string builder processor\",\n                target: \"user_activity\",\n                template: \"%%{user.name} logged in at %%{timestamp}\",\n            },\n        },\n        {\n            traceIdRemapper: {\n                isEnabled: true,\n                name: \"sample trace id remapper\",\n                sources: [\"dd.trace_id\"],\n            },\n        },\n        {\n            userAgentParser: {\n                isEnabled: true,\n                isEncoded: false,\n                name: \"sample user agent parser\",\n                sources: [\n                    \"user\",\n                    \"agent\",\n                ],\n                target: \"http_agent\",\n            },\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_pipeline = datadog.LogsCustomPipeline(\"samplePipeline\",\n    filters=[datadog.LogsCustomPipelineFilterArgs(\n        query=\"source:foo\",\n    )],\n    is_enabled=True,\n    name=\"sample pipeline\",\n    processors=[\n        datadog.LogsCustomPipelineProcessorArgs(\n            arithmetic_processor=datadog.LogsCustomPipelineProcessorArithmeticProcessorArgs(\n                expression=\"(time1 - time2)*1000\",\n                is_enabled=True,\n                is_replace_missing=True,\n                name=\"sample arithmetic processor\",\n                target=\"my_arithmetic\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            attribute_remapper=datadog.LogsCustomPipelineProcessorAttributeRemapperArgs(\n                is_enabled=True,\n                name=\"sample attribute processor\",\n                override_on_conflict=False,\n                preserve_source=True,\n                source_type=\"tag\",\n                sources=[\"db.instance\"],\n                target=\"db\",\n                target_format=\"string\",\n                target_type=\"attribute\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            category_processor=datadog.LogsCustomPipelineProcessorCategoryProcessorArgs(\n                category=[\n                    {\n                        \"filter\": {\n                            \"query\": \"@severity: \\\".\\\"\",\n                        },\n                        \"name\": \"debug\",\n                    },\n                    {\n                        \"filter\": {\n                            \"query\": \"@severity: \\\"-\\\"\",\n                        },\n                        \"name\": \"verbose\",\n                    },\n                ],\n                is_enabled=True,\n                name=\"sample category processor\",\n                target=\"foo.severity\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            date_remapper=datadog.LogsCustomPipelineProcessorDateRemapperArgs(\n                is_enabled=True,\n                name=\"sample date remapper\",\n                sources=[\n                    \"_timestamp\",\n                    \"published_date\",\n                ],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            geo_ip_parser=datadog.LogsCustomPipelineProcessorGeoIpParserArgs(\n                is_enabled=True,\n                name=\"sample geo ip parser\",\n                sources=[\"network.client.ip\"],\n                target=\"network.client.geoip\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            grok_parser=datadog.LogsCustomPipelineProcessorGrokParserArgs(\n                grok=datadog.LogsCustomPipelineProcessorGrokParserGrokArgs(\n                    match_rules=\"Rule %{word:my_word2} %{number:my_float2}\",\n                    support_rules=\"\",\n                ),\n                is_enabled=True,\n                name=\"sample grok parser\",\n                samples=[\"sample log 1\"],\n                source=\"message\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            lookup_processor=datadog.LogsCustomPipelineProcessorLookupProcessorArgs(\n                default_lookup=\"unknown service\",\n                is_enabled=True,\n                lookup_table=[\"1,my service\"],\n                name=\"sample lookup processor\",\n                source=\"service_id\",\n                target=\"service_name\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            message_remapper=datadog.LogsCustomPipelineProcessorMessageRemapperArgs(\n                is_enabled=True,\n                name=\"sample message remapper\",\n                sources=[\"msg\"],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            pipeline=datadog.LogsCustomPipelineProcessorPipelineArgs(\n                filter=[{\n                    \"query\": \"source:foo\",\n                }],\n                is_enabled=True,\n                name=\"nested pipeline\",\n                processor=[{\n                    \"urlParser\": {\n                        \"name\": \"sample url parser\",\n                        \"normalizeEndingSlashes\": True,\n                        \"sources\": [\n                            \"url\",\n                            \"extra\",\n                        ],\n                        \"target\": \"http_url\",\n                    },\n                }],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            service_remapper=datadog.LogsCustomPipelineProcessorServiceRemapperArgs(\n                is_enabled=True,\n                name=\"sample service remapper\",\n                sources=[\"service\"],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            status_remapper=datadog.LogsCustomPipelineProcessorStatusRemapperArgs(\n                is_enabled=True,\n                name=\"sample status remapper\",\n                sources=[\n                    \"info\",\n                    \"trace\",\n                ],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            string_builder_processor=datadog.LogsCustomPipelineProcessorStringBuilderProcessorArgs(\n                is_enabled=True,\n                is_replace_missing=False,\n                name=\"sample string builder processor\",\n                target=\"user_activity\",\n                template=\"%{user.name} logged in at %{timestamp}\",\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            trace_id_remapper=datadog.LogsCustomPipelineProcessorTraceIdRemapperArgs(\n                is_enabled=True,\n                name=\"sample trace id remapper\",\n                sources=[\"dd.trace_id\"],\n            ),\n        ),\n        datadog.LogsCustomPipelineProcessorArgs(\n            user_agent_parser=datadog.LogsCustomPipelineProcessorUserAgentParserArgs(\n                is_enabled=True,\n                is_encoded=False,\n                name=\"sample user agent parser\",\n                sources=[\n                    \"user\",\n                    \"agent\",\n                ],\n                target=\"http_agent\",\n            ),\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var samplePipeline = new Datadog.LogsCustomPipeline(\"samplePipeline\", new Datadog.LogsCustomPipelineArgs\n        {\n            Filters = \n            {\n                new Datadog.Inputs.LogsCustomPipelineFilterArgs\n                {\n                    Query = \"source:foo\",\n                },\n            },\n            IsEnabled = true,\n            Name = \"sample pipeline\",\n            Processors = \n            {\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    ArithmeticProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorArithmeticProcessorArgs\n                    {\n                        Expression = \"(time1 - time2)*1000\",\n                        IsEnabled = true,\n                        IsReplaceMissing = true,\n                        Name = \"sample arithmetic processor\",\n                        Target = \"my_arithmetic\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    AttributeRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorAttributeRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample attribute processor\",\n                        OverrideOnConflict = false,\n                        PreserveSource = true,\n                        SourceType = \"tag\",\n                        Sources = \n                        {\n                            \"db.instance\",\n                        },\n                        Target = \"db\",\n                        TargetFormat = \"string\",\n                        TargetType = \"attribute\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    CategoryProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorCategoryProcessorArgs\n                    {\n                        Category = \n                        {\n                            \n                            {\n                                { \"filter\", \n                                {\n                                    { \"query\", \"@severity: \\\".\\\"\" },\n                                } },\n                                { \"name\", \"debug\" },\n                            },\n                            \n                            {\n                                { \"filter\", \n                                {\n                                    { \"query\", \"@severity: \\\"-\\\"\" },\n                                } },\n                                { \"name\", \"verbose\" },\n                            },\n                        },\n                        IsEnabled = true,\n                        Name = \"sample category processor\",\n                        Target = \"foo.severity\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    DateRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorDateRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample date remapper\",\n                        Sources = \n                        {\n                            \"_timestamp\",\n                            \"published_date\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    GeoIpParser = new Datadog.Inputs.LogsCustomPipelineProcessorGeoIpParserArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample geo ip parser\",\n                        Sources = \n                        {\n                            \"network.client.ip\",\n                        },\n                        Target = \"network.client.geoip\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    GrokParser = new Datadog.Inputs.LogsCustomPipelineProcessorGrokParserArgs\n                    {\n                        Grok = new Datadog.Inputs.LogsCustomPipelineProcessorGrokParserGrokArgs\n                        {\n                            MatchRules = \"Rule %{word:my_word2} %{number:my_float2}\",\n                            SupportRules = \"\",\n                        },\n                        IsEnabled = true,\n                        Name = \"sample grok parser\",\n                        Samples = \n                        {\n                            \"sample log 1\",\n                        },\n                        Source = \"message\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    LookupProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorLookupProcessorArgs\n                    {\n                        DefaultLookup = \"unknown service\",\n                        IsEnabled = true,\n                        LookupTable = \n                        {\n                            \"1,my service\",\n                        },\n                        Name = \"sample lookup processor\",\n                        Source = \"service_id\",\n                        Target = \"service_name\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    MessageRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorMessageRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample message remapper\",\n                        Sources = \n                        {\n                            \"msg\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    Pipeline = new Datadog.Inputs.LogsCustomPipelineProcessorPipelineArgs\n                    {\n                        Filter = \n                        {\n                            \n                            {\n                                { \"query\", \"source:foo\" },\n                            },\n                        },\n                        IsEnabled = true,\n                        Name = \"nested pipeline\",\n                        Processor = \n                        {\n                            \n                            {\n                                { \"urlParser\", \n                                {\n                                    { \"name\", \"sample url parser\" },\n                                    { \"normalizeEndingSlashes\", true },\n                                    { \"sources\", \n                                    {\n                                        \"url\",\n                                        \"extra\",\n                                    } },\n                                    { \"target\", \"http_url\" },\n                                } },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    ServiceRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorServiceRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample service remapper\",\n                        Sources = \n                        {\n                            \"service\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    StatusRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorStatusRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample status remapper\",\n                        Sources = \n                        {\n                            \"info\",\n                            \"trace\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    StringBuilderProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorStringBuilderProcessorArgs\n                    {\n                        IsEnabled = true,\n                        IsReplaceMissing = false,\n                        Name = \"sample string builder processor\",\n                        Target = \"user_activity\",\n                        Template = \"%{user.name} logged in at %{timestamp}\",\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    TraceIdRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorTraceIdRemapperArgs\n                    {\n                        IsEnabled = true,\n                        Name = \"sample trace id remapper\",\n                        Sources = \n                        {\n                            \"dd.trace_id\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.LogsCustomPipelineProcessorArgs\n                {\n                    UserAgentParser = new Datadog.Inputs.LogsCustomPipelineProcessorUserAgentParserArgs\n                    {\n                        IsEnabled = true,\n                        IsEncoded = false,\n                        Name = \"sample user agent parser\",\n                        Sources = \n                        {\n                            \"user\",\n                            \"agent\",\n                        },\n                        Target = \"http_agent\",\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsCustomPipeline(ctx, \"samplePipeline\", \u0026datadog.LogsCustomPipelineArgs{\n\t\t\tFilters: datadog.LogsCustomPipelineFilterArray{\n\t\t\t\t\u0026datadog.LogsCustomPipelineFilterArgs{\n\t\t\t\t\tQuery: pulumi.String(\"source:foo\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\tName:      pulumi.String(\"sample pipeline\"),\n\t\t\tProcessors: datadog.LogsCustomPipelineProcessorArray{\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tArithmeticProcessor: \u0026datadog.LogsCustomPipelineProcessorArithmeticProcessorArgs{\n\t\t\t\t\t\tExpression:       pulumi.String(\"(time1 - time2)*1000\"),\n\t\t\t\t\t\tIsEnabled:        pulumi.Bool(true),\n\t\t\t\t\t\tIsReplaceMissing: pulumi.Bool(true),\n\t\t\t\t\t\tName:             pulumi.String(\"sample arithmetic processor\"),\n\t\t\t\t\t\tTarget:           pulumi.String(\"my_arithmetic\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tAttributeRemapper: \u0026datadog.LogsCustomPipelineProcessorAttributeRemapperArgs{\n\t\t\t\t\t\tIsEnabled:          pulumi.Bool(true),\n\t\t\t\t\t\tName:               pulumi.String(\"sample attribute processor\"),\n\t\t\t\t\t\tOverrideOnConflict: pulumi.Bool(false),\n\t\t\t\t\t\tPreserveSource:     pulumi.Bool(true),\n\t\t\t\t\t\tSourceType:         pulumi.String(\"tag\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"db.instance\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTarget:       pulumi.String(\"db\"),\n\t\t\t\t\t\tTargetFormat: pulumi.String(\"string\"),\n\t\t\t\t\t\tTargetType:   pulumi.String(\"attribute\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tCategoryProcessor: \u0026datadog.LogsCustomPipelineProcessorCategoryProcessorArgs{\n\t\t\t\t\t\tCategory: pulumi.MapArray{\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"filter\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"query\": pulumi.String(\"@severity: \\\".\\\"\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"name\": pulumi.String(\"debug\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tpulumi.Map{\n\t\t\t\t\t\t\t\t\"filter\": pulumi.StringMap{\n\t\t\t\t\t\t\t\t\t\"query\": pulumi.String(\"@severity: \\\"-\\\"\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"name\": pulumi.String(\"verbose\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample category processor\"),\n\t\t\t\t\t\tTarget:    pulumi.String(\"foo.severity\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tDateRemapper: \u0026datadog.LogsCustomPipelineProcessorDateRemapperArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample date remapper\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"_timestamp\"),\n\t\t\t\t\t\t\tpulumi.String(\"published_date\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tGeoIpParser: \u0026datadog.LogsCustomPipelineProcessorGeoIpParserArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample geo ip parser\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"network.client.ip\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTarget: pulumi.String(\"network.client.geoip\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tGrokParser: \u0026datadog.LogsCustomPipelineProcessorGrokParserArgs{\n\t\t\t\t\t\tGrok: \u0026datadog.LogsCustomPipelineProcessorGrokParserGrokArgs{\n\t\t\t\t\t\t\tMatchRules:   pulumi.String(fmt.Sprintf(\"%v%v%v%v%v\", \"Rule \", \"%{\", \"word:my_word2} \", \"%{\", \"number:my_float2}\")),\n\t\t\t\t\t\t\tSupportRules: pulumi.String(\"\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample grok parser\"),\n\t\t\t\t\t\tSamples: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"sample log 1\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tSource: pulumi.String(\"message\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tLookupProcessor: \u0026datadog.LogsCustomPipelineProcessorLookupProcessorArgs{\n\t\t\t\t\t\tDefaultLookup: pulumi.String(\"unknown service\"),\n\t\t\t\t\t\tIsEnabled:     pulumi.Bool(true),\n\t\t\t\t\t\tLookupTable: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"1,my service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tName:   pulumi.String(\"sample lookup processor\"),\n\t\t\t\t\t\tSource: pulumi.String(\"service_id\"),\n\t\t\t\t\t\tTarget: pulumi.String(\"service_name\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tMessageRemapper: \u0026datadog.LogsCustomPipelineProcessorMessageRemapperArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample message remapper\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"msg\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tPipeline: \u0026datadog.LogsCustomPipelineProcessorPipelineArgs{\n\t\t\t\t\t\tFilter: pulumi.StringMapArray{\n\t\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\t\"query\": pulumi.String(\"source:foo\"),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"nested pipeline\"),\n\t\t\t\t\t\tProcessor: pulumi.MapMapArray{\n\t\t\t\t\t\t\tpulumi.MapMap{\n\t\t\t\t\t\t\t\t\"urlParser\": pulumi.Map{\n\t\t\t\t\t\t\t\t\t\"name\":                   pulumi.String(\"sample url parser\"),\n\t\t\t\t\t\t\t\t\t\"normalizeEndingSlashes\": pulumi.Bool(true),\n\t\t\t\t\t\t\t\t\t\"sources\": pulumi.StringArray{\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"url\"),\n\t\t\t\t\t\t\t\t\t\tpulumi.String(\"extra\"),\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"target\": pulumi.String(\"http_url\"),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tServiceRemapper: \u0026datadog.LogsCustomPipelineProcessorServiceRemapperArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample service remapper\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"service\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tStatusRemapper: \u0026datadog.LogsCustomPipelineProcessorStatusRemapperArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample status remapper\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"info\"),\n\t\t\t\t\t\t\tpulumi.String(\"trace\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tStringBuilderProcessor: \u0026datadog.LogsCustomPipelineProcessorStringBuilderProcessorArgs{\n\t\t\t\t\t\tIsEnabled:        pulumi.Bool(true),\n\t\t\t\t\t\tIsReplaceMissing: pulumi.Bool(false),\n\t\t\t\t\t\tName:             pulumi.String(\"sample string builder processor\"),\n\t\t\t\t\t\tTarget:           pulumi.String(\"user_activity\"),\n\t\t\t\t\t\tTemplate:         pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"%{\", \"user.name} logged in at \", \"%{\", \"timestamp}\")),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tTraceIdRemapper: \u0026datadog.LogsCustomPipelineProcessorTraceIdRemapperArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tName:      pulumi.String(\"sample trace id remapper\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"dd.trace_id\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsCustomPipelineProcessorArgs{\n\t\t\t\t\tUserAgentParser: \u0026datadog.LogsCustomPipelineProcessorUserAgentParserArgs{\n\t\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\t\tIsEncoded: pulumi.Bool(false),\n\t\t\t\t\t\tName:      pulumi.String(\"sample user agent parser\"),\n\t\t\t\t\t\tSources: pulumi.StringArray{\n\t\t\t\t\t\t\tpulumi.String(\"user\"),\n\t\t\t\t\t\t\tpulumi.String(\"agent\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tTarget: pulumi.String(\"http_agent\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# For the previously created custom pipelines, you can include them in Terraform with the import operation. Currently, Terraform requires you to explicitly create resources that match the existing pipelines to import them.\n\n```sh\n $ pulumi import datadog:index/logsCustomPipeline:LogsCustomPipeline name\u003e \u003cpipelineID\u003e\n```\n\n ",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    }
                }
            },
            "required": [
                "filters",
                "name"
            ],
            "inputProperties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                    }
                },
                "isEnabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "processors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                    }
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsCustomPipeline resources.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsCustomPipelineFilter:LogsCustomPipelineFilter"
                        }
                    },
                    "isEnabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "processors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsCustomPipelineProcessor:LogsCustomPipelineProcessor"
                        }
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndex:LogsIndex": {
            "description": "Provides a Datadog Logs Index API resource. This can be used to create and manage Datadog logs indexes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst sampleIndex = new datadog.LogsIndex(\"sample_index\", {\n    exclusionFilters: [\n        {\n            filters: [{\n                query: \"app:coredns\",\n                sampleRate: 0.97,\n            }],\n            isEnabled: true,\n            name: \"Filter coredns logs\",\n        },\n        {\n            filters: [{\n                query: \"service:kube_apiserver\",\n                sampleRate: 1,\n            }],\n            isEnabled: true,\n            name: \"Kubernetes apiserver\",\n        },\n    ],\n    filters: [{\n        query: \"*\",\n    }],\n    name: \"your index\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_index = datadog.LogsIndex(\"sampleIndex\",\n    exclusion_filters=[\n        datadog.LogsIndexExclusionFilterArgs(\n            filters=[datadog.LogsIndexExclusionFilterFilterArgs(\n                query=\"app:coredns\",\n                sample_rate=0.97,\n            )],\n            is_enabled=True,\n            name=\"Filter coredns logs\",\n        ),\n        datadog.LogsIndexExclusionFilterArgs(\n            filters=[datadog.LogsIndexExclusionFilterFilterArgs(\n                query=\"service:kube_apiserver\",\n                sample_rate=1,\n            )],\n            is_enabled=True,\n            name=\"Kubernetes apiserver\",\n        ),\n    ],\n    filters=[datadog.LogsIndexFilterArgs(\n        query=\"*\",\n    )],\n    name=\"your index\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sampleIndex = new Datadog.LogsIndex(\"sampleIndex\", new Datadog.LogsIndexArgs\n        {\n            ExclusionFilters = \n            {\n                new Datadog.Inputs.LogsIndexExclusionFilterArgs\n                {\n                    Filters = \n                    {\n                        new Datadog.Inputs.LogsIndexExclusionFilterFilterArgs\n                        {\n                            Query = \"app:coredns\",\n                            SampleRate = 0.97,\n                        },\n                    },\n                    IsEnabled = true,\n                    Name = \"Filter coredns logs\",\n                },\n                new Datadog.Inputs.LogsIndexExclusionFilterArgs\n                {\n                    Filters = \n                    {\n                        new Datadog.Inputs.LogsIndexExclusionFilterFilterArgs\n                        {\n                            Query = \"service:kube_apiserver\",\n                            SampleRate = 1,\n                        },\n                    },\n                    IsEnabled = true,\n                    Name = \"Kubernetes apiserver\",\n                },\n            },\n            Filters = \n            {\n                new Datadog.Inputs.LogsIndexFilterArgs\n                {\n                    Query = \"*\",\n                },\n            },\n            Name = \"your index\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsIndex(ctx, \"sampleIndex\", \u0026datadog.LogsIndexArgs{\n\t\t\tExclusionFilters: datadog.LogsIndexExclusionFilterArray{\n\t\t\t\t\u0026datadog.LogsIndexExclusionFilterArgs{\n\t\t\t\t\tFilters: datadog.LogsIndexExclusionFilterFilterArray{\n\t\t\t\t\t\t\u0026datadog.LogsIndexExclusionFilterFilterArgs{\n\t\t\t\t\t\t\tQuery:      pulumi.String(\"app:coredns\"),\n\t\t\t\t\t\t\tSampleRate: pulumi.Float64(0.97),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\tName:      pulumi.String(\"Filter coredns logs\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsIndexExclusionFilterArgs{\n\t\t\t\t\tFilters: datadog.LogsIndexExclusionFilterFilterArray{\n\t\t\t\t\t\t\u0026datadog.LogsIndexExclusionFilterFilterArgs{\n\t\t\t\t\t\t\tQuery:      pulumi.String(\"service:kube_apiserver\"),\n\t\t\t\t\t\t\tSampleRate: pulumi.Float64(1),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t\t\t\tName:      pulumi.String(\"Kubernetes apiserver\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFilters: datadog.LogsIndexFilterArray{\n\t\t\t\t\u0026datadog.LogsIndexFilterArgs{\n\t\t\t\t\tQuery: pulumi.String(\"*\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tName: pulumi.String(\"your index\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/logsIndex:LogsIndex name\u003e \u003cindexName\u003e\n```\n\n ",
            "properties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    },
                    "description": "List of exclusion filters.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                    },
                    "description": "Logs filter\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the index.\n"
                }
            },
            "required": [
                "filters",
                "name"
            ],
            "inputProperties": {
                "exclusionFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                    },
                    "description": "List of exclusion filters.\n"
                },
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                    },
                    "description": "Logs filter\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the index.\n"
                }
            },
            "requiredInputs": [
                "filters",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndex resources.\n",
                "properties": {
                    "exclusionFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsIndexExclusionFilter:LogsIndexExclusionFilter"
                        },
                        "description": "List of exclusion filters.\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsIndexFilter:LogsIndexFilter"
                        },
                        "description": "Logs filter\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the index.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIndexOrder:LogsIndexOrder": {
            "description": "Provides a Datadog Logs Index API resource. This can be used to manage the order of Datadog logs indexes.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst sampleIndexOrder = new datadog.LogsIndexOrder(\"sampleIndexOrder\", {\n    name: \"sample_index_order\",\n    indexes: [datadog_logs_index.sample_index.id],\n}, {\n    dependsOn: [\"datadog_logs_index.sample_index\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_index_order = datadog.LogsIndexOrder(\"sampleIndexOrder\",\n    name=\"sample_index_order\",\n    indexes=[datadog_logs_index[\"sample_index\"][\"id\"]],\n    opts=pulumi.ResourceOptions(depends_on=[\"datadog_logs_index.sample_index\"]))\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sampleIndexOrder = new Datadog.LogsIndexOrder(\"sampleIndexOrder\", new Datadog.LogsIndexOrderArgs\n        {\n            Name = \"sample_index_order\",\n            Indexes = \n            {\n                datadog_logs_index.Sample_index.Id,\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                \"datadog_logs_index.sample_index\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsIndexOrder(ctx, \"sampleIndexOrder\", \u0026datadog.LogsIndexOrderArgs{\n\t\t\tName: pulumi.String(\"sample_index_order\"),\n\t\t\tIndexes: pulumi.StringArray{\n\t\t\t\tpulumi.Any(datadog_logs_index.Sample_index.Id),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\t\"datadog_logs_index.sample_index\",\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# The Datadog Terraform Provider does not support the creation and deletion of index orders. There must be at most one `datadog_logs_index_order` resource\n\n```sh\n $ pulumi import datadog:index/logsIndexOrder:LogsIndexOrder name\u003e \u003cname\u003e\n```\n\n ",
            "properties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the index order resource.\n"
                }
            },
            "required": [
                "indexes",
                "name"
            ],
            "inputProperties": {
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The unique name of the index order resource.\n"
                }
            },
            "requiredInputs": [
                "indexes",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIndexOrder resources.\n",
                "properties": {
                    "indexes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The index resource list. Logs are tested against the query filter of each index one by one following the order of the list.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name of the index order resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline": {
            "description": "Provides a Datadog Logs Pipeline API resource to manage the integrations. Integration pipelines are the pipelines that are automatically installed for your organization when sending the logs with specific sources. You don't need to maintain or update these types of pipelines. Keeping them as resources, however, allows you to manage the order of your pipelines by referencing them in your `datadog.LogsPipelineOrder` resource. If you don't need the `pipeline_order` feature, this resource declaration can be omitted.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst python = new datadog.LogsIntegrationPipeline(\"python\", {\n    isEnabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npython = datadog.LogsIntegrationPipeline(\"python\", is_enabled=True)\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var python = new Datadog.LogsIntegrationPipeline(\"python\", new Datadog.LogsIntegrationPipelineArgs\n        {\n            IsEnabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsIntegrationPipeline(ctx, \"python\", \u0026datadog.LogsIntegrationPipelineArgs{\n\t\t\tIsEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline name\u003e \u003cpipelineID\u003e\n```\n\n ",
            "properties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Boolean value to enable your pipeline.\n"
                }
            },
            "inputProperties": {
                "isEnabled": {
                    "type": "boolean",
                    "description": "Boolean value to enable your pipeline.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsIntegrationPipeline resources.\n",
                "properties": {
                    "isEnabled": {
                        "type": "boolean",
                        "description": "Boolean value to enable your pipeline.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsMetric:LogsMetric": {
            "description": "Resource for interacting with the logs_metric API\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testingLogsMetric = new datadog.LogsMetric(\"testing_logs_metric\", {\n    compute: {\n        aggregationType: \"distribution\",\n        path: \"@duration\",\n    },\n    filter: {\n        query: \"service:test\",\n    },\n    groupBies: [\n        {\n            path: \"@status\",\n            tagName: \"status\",\n        },\n        {\n            path: \"@version\",\n            tagName: \"version\",\n        },\n    ],\n    name: \"testing.logs.metric\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntesting_logs_metric = datadog.LogsMetric(\"testingLogsMetric\",\n    compute=datadog.LogsMetricComputeArgs(\n        aggregation_type=\"distribution\",\n        path=\"@duration\",\n    ),\n    filter=datadog.LogsMetricFilterArgs(\n        query=\"service:test\",\n    ),\n    group_bies=[\n        datadog.LogsMetricGroupByArgs(\n            path=\"@status\",\n            tag_name=\"status\",\n        ),\n        datadog.LogsMetricGroupByArgs(\n            path=\"@version\",\n            tag_name=\"version\",\n        ),\n    ],\n    name=\"testing.logs.metric\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var testingLogsMetric = new Datadog.LogsMetric(\"testingLogsMetric\", new Datadog.LogsMetricArgs\n        {\n            Compute = new Datadog.Inputs.LogsMetricComputeArgs\n            {\n                AggregationType = \"distribution\",\n                Path = \"@duration\",\n            },\n            Filter = new Datadog.Inputs.LogsMetricFilterArgs\n            {\n                Query = \"service:test\",\n            },\n            GroupBies = \n            {\n                new Datadog.Inputs.LogsMetricGroupByArgs\n                {\n                    Path = \"@status\",\n                    TagName = \"status\",\n                },\n                new Datadog.Inputs.LogsMetricGroupByArgs\n                {\n                    Path = \"@version\",\n                    TagName = \"version\",\n                },\n            },\n            Name = \"testing.logs.metric\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsMetric(ctx, \"testingLogsMetric\", \u0026datadog.LogsMetricArgs{\n\t\t\tCompute: \u0026datadog.LogsMetricComputeArgs{\n\t\t\t\tAggregationType: pulumi.String(\"distribution\"),\n\t\t\t\tPath:            pulumi.String(\"@duration\"),\n\t\t\t},\n\t\t\tFilter: \u0026datadog.LogsMetricFilterArgs{\n\t\t\t\tQuery: pulumi.String(\"service:test\"),\n\t\t\t},\n\t\t\tGroupBies: datadog.LogsMetricGroupByArray{\n\t\t\t\t\u0026datadog.LogsMetricGroupByArgs{\n\t\t\t\t\tPath:    pulumi.String(\"@status\"),\n\t\t\t\t\tTagName: pulumi.String(\"status\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.LogsMetricGroupByArgs{\n\t\t\t\t\tPath:    pulumi.String(\"@version\"),\n\t\t\t\t\tTagName: pulumi.String(\"version\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tName: pulumi.String(\"testing.logs.metric\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/logsMetric:LogsMetric testing_logs_metric testing.logs.metric\n```\n\n ",
            "properties": {
                "compute": {
                    "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                    "description": "The compute rule to compute the log-based metric. This field can't be updated after creation.\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                    "description": "The log-based metric filter. Logs matching this filter will be aggregated in this metric.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                    },
                    "description": "The rules for the group by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the log-based metric. This field can't be updated after creation.\n"
                }
            },
            "required": [
                "compute",
                "filter",
                "name"
            ],
            "inputProperties": {
                "compute": {
                    "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                    "description": "The compute rule to compute the log-based metric. This field can't be updated after creation.\n"
                },
                "filter": {
                    "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                    "description": "The log-based metric filter. Logs matching this filter will be aggregated in this metric.\n"
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                    },
                    "description": "The rules for the group by.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the log-based metric. This field can't be updated after creation.\n"
                }
            },
            "requiredInputs": [
                "compute",
                "filter",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsMetric resources.\n",
                "properties": {
                    "compute": {
                        "$ref": "#/types/datadog:index/LogsMetricCompute:LogsMetricCompute",
                        "description": "The compute rule to compute the log-based metric. This field can't be updated after creation.\n"
                    },
                    "filter": {
                        "$ref": "#/types/datadog:index/LogsMetricFilter:LogsMetricFilter",
                        "description": "The log-based metric filter. Logs matching this filter will be aggregated in this metric.\n"
                    },
                    "groupBies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/LogsMetricGroupBy:LogsMetricGroupBy"
                        },
                        "description": "The rules for the group by.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the log-based metric. This field can't be updated after creation.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/logsPipelineOrder:LogsPipelineOrder": {
            "description": "Provides a Datadog Logs Pipeline API resource, which is used to manage Datadog log pipelines order.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst samplePipelineOrder = new datadog.LogsPipelineOrder(\"samplePipelineOrder\", {\n    name: \"sample_pipeline_order\",\n    pipelines: [\n        datadog_logs_custom_pipeline.sample_pipeline.id,\n        datadog_logs_integration_pipeline.python.id,\n    ],\n}, {\n    dependsOn: [\n        \"datadog_logs_custom_pipeline.sample_pipeline\",\n        \"datadog_logs_integration_pipeline.python\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nsample_pipeline_order = datadog.LogsPipelineOrder(\"samplePipelineOrder\",\n    name=\"sample_pipeline_order\",\n    pipelines=[\n        datadog_logs_custom_pipeline[\"sample_pipeline\"][\"id\"],\n        datadog_logs_integration_pipeline[\"python\"][\"id\"],\n    ],\n    opts=pulumi.ResourceOptions(depends_on=[\n            \"datadog_logs_custom_pipeline.sample_pipeline\",\n            \"datadog_logs_integration_pipeline.python\",\n        ]))\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var samplePipelineOrder = new Datadog.LogsPipelineOrder(\"samplePipelineOrder\", new Datadog.LogsPipelineOrderArgs\n        {\n            Name = \"sample_pipeline_order\",\n            Pipelines = \n            {\n                datadog_logs_custom_pipeline.Sample_pipeline.Id,\n                datadog_logs_integration_pipeline.Python.Id,\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                \"datadog_logs_custom_pipeline.sample_pipeline\",\n                \"datadog_logs_integration_pipeline.python\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewLogsPipelineOrder(ctx, \"samplePipelineOrder\", \u0026datadog.LogsPipelineOrderArgs{\n\t\t\tName: pulumi.String(\"sample_pipeline_order\"),\n\t\t\tPipelines: pulumi.StringArray{\n\t\t\t\tpulumi.Any(datadog_logs_custom_pipeline.Sample_pipeline.Id),\n\t\t\t\tpulumi.Any(datadog_logs_integration_pipeline.Python.Id),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\t\"datadog_logs_custom_pipeline.sample_pipeline\",\n\t\t\t\"datadog_logs_integration_pipeline.python\",\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# There must be at most one datadog_logs_pipeline_order resource. Pipeline order creation is not supported from logs config API. You can import the datadog_logs_pipeline_order or create a pipeline order (which is actually doing the update operation).\n\n```sh\n $ pulumi import datadog:index/logsPipelineOrder:LogsPipelineOrder name\u003e \u003cname\u003e\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).\n"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                }
            },
            "required": [
                "name",
                "pipelines"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).\n"
                },
                "pipelines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                }
            },
            "requiredInputs": [
                "name",
                "pipelines"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsPipelineOrder resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).\n"
                    },
                    "pipelines": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/metricMetadata:MetricMetadata": {
            "description": "Provides a Datadog metric_metadata resource. This can be used to manage a metric's metadata.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Manage a Datadog metric's metadata\nconst requestTime = new datadog.MetricMetadata(\"request_time\", {\n    description: \"99th percentile request time in millseconds\",\n    metric: \"request.time\",\n    shortName: \"Request time\",\n    type: \"gauge\",\n    unit: \"millisecond\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Manage a Datadog metric's metadata\nrequest_time = datadog.MetricMetadata(\"requestTime\",\n    description=\"99th percentile request time in millseconds\",\n    metric=\"request.time\",\n    short_name=\"Request time\",\n    type=\"gauge\",\n    unit=\"millisecond\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Manage a Datadog metric's metadata\n        var requestTime = new Datadog.MetricMetadata(\"requestTime\", new Datadog.MetricMetadataArgs\n        {\n            Description = \"99th percentile request time in millseconds\",\n            Metric = \"request.time\",\n            ShortName = \"Request time\",\n            Type = \"gauge\",\n            Unit = \"millisecond\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMetricMetadata(ctx, \"requestTime\", \u0026datadog.MetricMetadataArgs{\n\t\t\tDescription: pulumi.String(\"99th percentile request time in millseconds\"),\n\t\t\tMetric:      pulumi.String(\"request.time\"),\n\t\t\tShortName:   pulumi.String(\"Request time\"),\n\t\t\tType:        pulumi.String(\"gauge\"),\n\t\t\tUnit:        pulumi.String(\"millisecond\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The name of the metric.\n"
                },
                "perUnit": {
                    "type": "string",
                    "description": "Per unit of the metric such as `second` in `bytes per second`.\n"
                },
                "shortName": {
                    "type": "string",
                    "description": "A short name of the metric.\n"
                },
                "statsdInterval": {
                    "type": "integer",
                    "description": "If applicable, statsd flush interval in seconds for the metric.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the metric.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Primary unit of the metric such as `byte` or `operation`.\n"
                }
            },
            "required": [
                "metric"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the metric.\n"
                },
                "metric": {
                    "type": "string",
                    "description": "The name of the metric.\n"
                },
                "perUnit": {
                    "type": "string",
                    "description": "Per unit of the metric such as `second` in `bytes per second`.\n"
                },
                "shortName": {
                    "type": "string",
                    "description": "A short name of the metric.\n"
                },
                "statsdInterval": {
                    "type": "integer",
                    "description": "If applicable, statsd flush interval in seconds for the metric.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the metric.\n"
                },
                "unit": {
                    "type": "string",
                    "description": "Primary unit of the metric such as `byte` or `operation`.\n"
                }
            },
            "requiredInputs": [
                "metric"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MetricMetadata resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the metric.\n"
                    },
                    "metric": {
                        "type": "string",
                        "description": "The name of the metric.\n"
                    },
                    "perUnit": {
                        "type": "string",
                        "description": "Per unit of the metric such as `second` in `bytes per second`.\n"
                    },
                    "shortName": {
                        "type": "string",
                        "description": "A short name of the metric.\n"
                    },
                    "statsdInterval": {
                        "type": "integer",
                        "description": "If applicable, statsd flush interval in seconds for the metric.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the metric.\n"
                    },
                    "unit": {
                        "type": "string",
                        "description": "Primary unit of the metric such as `byte` or `operation`.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/monitor:Monitor": {
            "description": "Provides a Datadog monitor resource. This can be used to create and manage Datadog monitors.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog monitor\nconst foo = new datadog.Monitor(\"foo\", {\n    name: \"Name for monitor foo\",\n    type: \"metric alert\",\n    message: \"Monitor triggered. Notify: @hipchat-channel\",\n    escalationMessage: \"Escalation message @pagerduty\",\n    query: \"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n    monitorThresholds: {\n        warning: 2,\n        warningRecovery: 1,\n        critical: 4,\n        criticalRecovery: 3,\n    },\n    notifyNoData: false,\n    renotifyInterval: 60,\n    notifyAudit: false,\n    timeoutH: 60,\n    includeTags: true,\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Create a new Datadog monitor\nfoo = datadog.Monitor(\"foo\",\n    name=\"Name for monitor foo\",\n    type=\"metric alert\",\n    message=\"Monitor triggered. Notify: @hipchat-channel\",\n    escalation_message=\"Escalation message @pagerduty\",\n    query=\"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n    monitor_thresholds=datadog.MonitorMonitorThresholdsArgs(\n        warning=\"2\",\n        warning_recovery=1,\n        critical=\"4\",\n        critical_recovery=3,\n    ),\n    notify_no_data=False,\n    renotify_interval=60,\n    notify_audit=False,\n    timeout_h=60,\n    include_tags=True,\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog monitor\n        var foo = new Datadog.Monitor(\"foo\", new Datadog.MonitorArgs\n        {\n            Name = \"Name for monitor foo\",\n            Type = \"metric alert\",\n            Message = \"Monitor triggered. Notify: @hipchat-channel\",\n            EscalationMessage = \"Escalation message @pagerduty\",\n            Query = \"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\",\n            MonitorThresholds = new Datadog.Inputs.MonitorMonitorThresholdsArgs\n            {\n                Warning = \"2\",\n                WarningRecovery = \"1\",\n                Critical = \"4\",\n                CriticalRecovery = \"3\",\n            },\n            NotifyNoData = false,\n            RenotifyInterval = 60,\n            NotifyAudit = false,\n            TimeoutH = 60,\n            IncludeTags = true,\n            Tags = \n            {\n                \"foo:bar\",\n                \"baz\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewMonitor(ctx, \"foo\", \u0026datadog.MonitorArgs{\n\t\t\tName:              pulumi.String(\"Name for monitor foo\"),\n\t\t\tType:              pulumi.String(\"metric alert\"),\n\t\t\tMessage:           pulumi.String(\"Monitor triggered. Notify: @hipchat-channel\"),\n\t\t\tEscalationMessage: pulumi.String(\"Escalation message @pagerduty\"),\n\t\t\tQuery:             pulumi.String(\"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} \u003e 4\"),\n\t\t\tMonitorThresholds: \u0026datadog.MonitorMonitorThresholdsArgs{\n\t\t\t\tWarning:          pulumi.String(\"2\"),\n\t\t\t\tWarningRecovery:  pulumi.String(\"1\"),\n\t\t\t\tCritical:         pulumi.String(\"4\"),\n\t\t\t\tCriticalRecovery: pulumi.String(\"3\"),\n\t\t\t},\n\t\t\tNotifyNoData:     pulumi.Bool(false),\n\t\t\tRenotifyInterval: pulumi.Int(60),\n\t\t\tNotifyAudit:      pulumi.Bool(false),\n\t\t\tTimeoutH:         pulumi.Int(60),\n\t\t\tIncludeTags:      pulumi.Bool(true),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"baz\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/monitor:Monitor bytes_received_localhost 2081\n```\n\n ",
            "properties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                },
                "escalationMessage": {
                    "type": "string",
                    "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                },
                "groupbySimpleMonitor": {
                    "type": "boolean",
                    "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\nDefaults to `true`.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to\n`false`.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this monitor.\n"
                },
                "monitorThresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                },
                "monitorThresholds": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog monitor.\n"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to allow a host to boot and applications to fully start before starting the evaluation of monitor\nresults. Should be a non negative integer. Defaults to `300`.\n"
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes. We\nrecommend at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults to `false`.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The monitor query to notify on. Note this is not the same query you see in the UI and the syntax is different depending\non the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor) for\ndetails. `terraform plan` will validate query contents unless `validate` is set to `false`. **Note:** APM latency data\nis now available as Distribution Metrics. Existing monitors have been migrated automatically but all terraformed\nmonitors can still use the existing metrics. We strongly recommend updating monitor definitions to query the new\nmetrics. To learn more, or to see examples of how to update your terraform definitions to utilize the new distribution\nmetrics, see the [detailed doc](https://docs.datadoghq.com/tracing/guide/ddsketch_trace_metrics/).\n"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly recommend you set\nthis to `false` for sparse metrics, otherwise some evaluations will be skipped. Default: `true` for `on average`, `at\nall times` and `in total` aggregation. `false` otherwise.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "silenced": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Each scope will be muted until the given POSIX timestamp or forever if the value is `0`. Use `-1` if you want to unmute\nthe scope. Deprecated: the silenced parameter is being deprecated in favor of the downtime resource. This will be\nremoved in the next major version of the Terraform Provider.\n",
                    "deprecationMessage": "Use the Downtime resource instead."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorThresholdWindows:MonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m`. Can only be used for, and are\nrequired for, anomaly monitors.\n",
                    "deprecationMessage": "Define `monitor_threshold_windows` list with one element instead."
                },
                "thresholds": {
                    "$ref": "#/types/datadog:index/MonitorThresholds:MonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n",
                    "deprecationMessage": "Define `monitor_thresholds` list with one element instead."
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it will automatically resolve from a triggered state.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                }
            },
            "required": [
                "evaluationDelay",
                "message",
                "name",
                "query",
                "type"
            ],
            "inputProperties": {
                "enableLogsSample": {
                    "type": "boolean",
                    "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                },
                "escalationMessage": {
                    "type": "string",
                    "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                },
                "evaluationDelay": {
                    "type": "integer",
                    "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                },
                "groupbySimpleMonitor": {
                    "type": "boolean",
                    "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                },
                "includeTags": {
                    "type": "boolean",
                    "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\nDefaults to `true`.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to\n`false`.\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this monitor.\n"
                },
                "monitorThresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                },
                "monitorThresholds": {
                    "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog monitor.\n"
                },
                "newHostDelay": {
                    "type": "integer",
                    "description": "Time (in seconds) to allow a host to boot and applications to fully start before starting the evaluation of monitor\nresults. Should be a non negative integer. Defaults to `300`.\n"
                },
                "noDataTimeframe": {
                    "type": "integer",
                    "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes. We\nrecommend at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks.\n"
                },
                "notifyAudit": {
                    "type": "boolean",
                    "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                },
                "notifyNoData": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults to `false`.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                },
                "query": {
                    "type": "string",
                    "description": "The monitor query to notify on. Note this is not the same query you see in the UI and the syntax is different depending\non the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor) for\ndetails. `terraform plan` will validate query contents unless `validate` is set to `false`. **Note:** APM latency data\nis now available as Distribution Metrics. Existing monitors have been migrated automatically but all terraformed\nmonitors can still use the existing metrics. We strongly recommend updating monitor definitions to query the new\nmetrics. To learn more, or to see examples of how to update your terraform definitions to utilize the new distribution\nmetrics, see the [detailed doc](https://docs.datadoghq.com/tracing/guide/ddsketch_trace_metrics/).\n"
                },
                "renotifyInterval": {
                    "type": "integer",
                    "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                },
                "requireFullWindow": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly recommend you set\nthis to `false` for sparse metrics, otherwise some evaluations will be skipped. Default: `true` for `on average`, `at\nall times` and `in total` aggregation. `false` otherwise.\n"
                },
                "restrictedRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "silenced": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Each scope will be muted until the given POSIX timestamp or forever if the value is `0`. Use `-1` if you want to unmute\nthe scope. Deprecated: the silenced parameter is being deprecated in favor of the downtime resource. This will be\nremoved in the next major version of the Terraform Provider.\n",
                    "deprecationMessage": "Use the Downtime resource instead."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholdWindows": {
                    "$ref": "#/types/datadog:index/MonitorThresholdWindows:MonitorThresholdWindows",
                    "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m`. Can only be used for, and are\nrequired for, anomaly monitors.\n",
                    "deprecationMessage": "Define `monitor_threshold_windows` list with one element instead."
                },
                "thresholds": {
                    "$ref": "#/types/datadog:index/MonitorThresholds:MonitorThresholds",
                    "description": "Alert thresholds of the monitor.\n",
                    "deprecationMessage": "Define `monitor_thresholds` list with one element instead."
                },
                "timeoutH": {
                    "type": "integer",
                    "description": "The number of hours of the monitor not reporting data before it will automatically resolve from a triggered state.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "If set to `false`, skip the validation call done during plan.\n"
                }
            },
            "requiredInputs": [
                "message",
                "name",
                "query",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Monitor resources.\n",
                "properties": {
                    "enableLogsSample": {
                        "type": "boolean",
                        "description": "A boolean indicating whether or not to include a list of log values which triggered the alert. This is only used by log\nmonitors. Defaults to `false`.\n"
                    },
                    "escalationMessage": {
                        "type": "string",
                        "description": "A message to include with a re-notification. Supports the `@username` notification allowed elsewhere.\n"
                    },
                    "evaluationDelay": {
                        "type": "integer",
                        "description": "(Only applies to metric alert) Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the\nvalue is set to `300` (5min), the `timeframe` is set to `last_5m` and the time is 7:00, the monitor will evaluate data\nfrom 6:50 to 6:55. This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor will always have\ndata during evaluation.\n"
                    },
                    "forceDelete": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. SLO,\ncomposite monitor).\n"
                    },
                    "groupbySimpleMonitor": {
                        "type": "boolean",
                        "description": "Whether or not to trigger one alert if any source breaches a threshold. This is only used by log monitors. Defaults to\n`false`.\n"
                    },
                    "includeTags": {
                        "type": "boolean",
                        "description": "A boolean indicating whether notifications from this monitor automatically insert its triggering tags into the title.\nDefaults to `true`.\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "A boolean indicating whether changes to to this monitor should be restricted to the creator or admins. Defaults to\n`false`.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "A message to include with notifications for this monitor.\n"
                    },
                    "monitorThresholdWindows": {
                        "$ref": "#/types/datadog:index/MonitorMonitorThresholdWindows:MonitorMonitorThresholdWindows",
                        "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m` . Can only be used for, and are\nrequired for, anomaly monitors.\n"
                    },
                    "monitorThresholds": {
                        "$ref": "#/types/datadog:index/MonitorMonitorThresholds:MonitorMonitorThresholds",
                        "description": "Alert thresholds of the monitor.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog monitor.\n"
                    },
                    "newHostDelay": {
                        "type": "integer",
                        "description": "Time (in seconds) to allow a host to boot and applications to fully start before starting the evaluation of monitor\nresults. Should be a non negative integer. Defaults to `300`.\n"
                    },
                    "noDataTimeframe": {
                        "type": "integer",
                        "description": "The number of minutes before a monitor will notify when data stops reporting. Provider defaults to 10 minutes. We\nrecommend at least 2x the monitor timeframe for metric alerts or 2 minutes for service checks.\n"
                    },
                    "notifyAudit": {
                        "type": "boolean",
                        "description": "A boolean indicating whether tagged users will be notified on changes to this monitor. Defaults to `false`.\n"
                    },
                    "notifyNoData": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor will notify when data stops reporting. Defaults to `false`.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Integer from 1 (high) to 5 (low) indicating alert severity.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "The monitor query to notify on. Note this is not the same query you see in the UI and the syntax is different depending\non the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor) for\ndetails. `terraform plan` will validate query contents unless `validate` is set to `false`. **Note:** APM latency data\nis now available as Distribution Metrics. Existing monitors have been migrated automatically but all terraformed\nmonitors can still use the existing metrics. We strongly recommend updating monitor definitions to query the new\nmetrics. To learn more, or to see examples of how to update your terraform definitions to utilize the new distribution\nmetrics, see the [detailed doc](https://docs.datadoghq.com/tracing/guide/ddsketch_trace_metrics/).\n"
                    },
                    "renotifyInterval": {
                        "type": "integer",
                        "description": "The number of minutes after the last notification before a monitor will re-notify on the current status. It will only\nre-notify if it's not resolved.\n"
                    },
                    "requireFullWindow": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor needs a full window of data before it's evaluated. We highly recommend you set\nthis to `false` for sparse metrics, otherwise some evaluations will be skipped. Default: `true` for `on average`, `at\nall times` and `in total` aggregation. `false` otherwise.\n"
                    },
                    "restrictedRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "silenced": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Each scope will be muted until the given POSIX timestamp or forever if the value is `0`. Use `-1` if you want to unmute\nthe scope. Deprecated: the silenced parameter is being deprecated in favor of the downtime resource. This will be\nremoved in the next major version of the Terraform Provider.\n",
                        "deprecationMessage": "Use the Downtime resource instead."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your monitor. This can help you categorize and filter monitors in the manage monitors\npage of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                    },
                    "thresholdWindows": {
                        "$ref": "#/types/datadog:index/MonitorThresholdWindows:MonitorThresholdWindows",
                        "description": "A mapping containing `recovery_window` and `trigger_window` values, e.g. `last_15m`. Can only be used for, and are\nrequired for, anomaly monitors.\n",
                        "deprecationMessage": "Define `monitor_threshold_windows` list with one element instead."
                    },
                    "thresholds": {
                        "$ref": "#/types/datadog:index/MonitorThresholds:MonitorThresholds",
                        "description": "Alert thresholds of the monitor.\n",
                        "deprecationMessage": "Define `monitor_thresholds` list with one element instead."
                    },
                    "timeoutH": {
                        "type": "integer",
                        "description": "The number of hours of the monitor not reporting data before it will automatically resolve from a triggered state.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the monitor. The mapping from these types to the types found in the Datadog Web UI can be found in the\nDatadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor). Note: The monitor type\ncannot be changed after a monitor is created.\n"
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "If set to `false`, skip the validation call done during plan.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/role:Role": {
            "description": "Provides a Datadog role resource. This can be used to create and manage Datadog roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst bar = datadog.getPermissions({});\n// Create a new Datadog role\nconst foo = new datadog.Role(\"foo\", {\n    name: \"foo\",\n    permissions: [\n        {\n            id: bar.then(bar =\u003e bar.permissions.monitorsDowntime),\n        },\n        {\n            id: bar.then(bar =\u003e bar.permissions.monitorsWrite),\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nbar = datadog.get_permissions()\n# Create a new Datadog role\nfoo = datadog.Role(\"foo\",\n    name=\"foo\",\n    permissions=[\n        datadog.RolePermissionArgs(\n            id=bar.permissions[\"monitorsDowntime\"],\n        ),\n        datadog.RolePermissionArgs(\n            id=bar.permissions[\"monitorsWrite\"],\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var bar = Output.Create(Datadog.GetPermissions.InvokeAsync());\n        // Create a new Datadog role\n        var foo = new Datadog.Role(\"foo\", new Datadog.RoleArgs\n        {\n            Name = \"foo\",\n            Permissions = \n            {\n                new Datadog.Inputs.RolePermissionArgs\n                {\n                    Id = bar.Apply(bar =\u003e bar.Permissions.MonitorsDowntime),\n                },\n                new Datadog.Inputs.RolePermissionArgs\n                {\n                    Id = bar.Apply(bar =\u003e bar.Permissions.MonitorsWrite),\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tbar, err := datadog.GetPermissions(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewRole(ctx, \"foo\", \u0026datadog.RoleArgs{\n\t\t\tName: pulumi.String(\"foo\"),\n\t\t\tPermissions: datadog.RolePermissionArray{\n\t\t\t\t\u0026datadog.RolePermissionArgs{\n\t\t\t\t\tId: pulumi.String(bar.Permissions.MonitorsDowntime),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.RolePermissionArgs{\n\t\t\t\t\tId: pulumi.String(bar.Permissions.MonitorsWrite),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# Roles can be imported using their ID, e.g.\n\n```sh\n $ pulumi import datadog:index/role:Role example_role 000000-0000-0000-0000-000000000000\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the role.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                    },
                    "description": "Set of objects containing the permission ID and the name of the permissions granted to this role.\n"
                },
                "userCount": {
                    "type": "integer",
                    "description": "Number of users that have this role.\n"
                }
            },
            "required": [
                "name",
                "userCount"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the role.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                    },
                    "description": "Set of objects containing the permission ID and the name of the permissions granted to this role.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the role.\n"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/RolePermission:RolePermission"
                        },
                        "description": "Set of objects containing the permission ID and the name of the permissions granted to this role.\n"
                    },
                    "userCount": {
                        "type": "integer",
                        "description": "Number of users that have this role.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/screenBoard:ScreenBoard": {
            "description": "Provides a Datadog screenboard resource. This can be used to create and manage Datadog screenboards.\n\n\u003e **Note:** This resource is outdated. Use the new `datadog.Dashboard` resource instead.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Create a new Datadog screenboard\nconst acceptanceTest = new datadog.ScreenBoard(\"acceptanceTest\", {\n    title: \"Test Screenboard\",\n    readOnly: true,\n    templateVariables: [\n        {\n            name: \"varname 1\",\n            prefix: \"pod_name\",\n            \"default\": \"*\",\n        },\n        {\n            name: \"varname 2\",\n            prefix: \"service_name\",\n            \"default\": \"autoscaling\",\n        },\n    ],\n    widgets: [\n        {\n            type: \"free_text\",\n            x: 5,\n            y: 5,\n            text: \"test text\",\n            textAlign: \"right\",\n            fontSize: \"36\",\n            color: \"#ffc0cb\",\n        },\n        {\n            type: \"timeseries\",\n            x: 25,\n            y: 5,\n            title: \"graph title terraform\",\n            titleSize: 16,\n            titleAlign: \"right\",\n            legend: true,\n            legendSize: 16,\n            time: {\n                live_span: \"1d\",\n            },\n            tileDeves: [{\n                viz: \"timeseries\",\n                requests: [\n                    {\n                        q: \"avg:system.cpu.user{*}\",\n                        type: \"line\",\n                        style: {\n                            palette: \"purple\",\n                            type: \"dashed\",\n                            width: \"thin\",\n                        },\n                        metadataJson: JSON.stringify({\n                            \"avg:system.cpu.user{*}\": {\n                                alias: \"CPU Usage\",\n                            },\n                        }),\n                    },\n                    {\n                        logQuery: {\n                            index: \"mcnulty\",\n                            compute: {\n                                aggregation: \"avg\",\n                                facet: \"@duration\",\n                                interval: 5000,\n                            },\n                            search: {\n                                query: \"status:info\",\n                            },\n                            groupBies: [{\n                                facet: \"host\",\n                                limit: 10,\n                                sort: {\n                                    aggregation: \"avg\",\n                                    order: \"desc\",\n                                    facet: \"@duration\",\n                                },\n                            }],\n                        },\n                        type: \"area\",\n                    },\n                    {\n                        apmQuery: {\n                            index: \"apm-search\",\n                            compute: {\n                                aggregation: \"avg\",\n                                facet: \"@duration\",\n                                interval: 5000,\n                            },\n                            search: {\n                                query: \"type:web\",\n                            },\n                            groupBies: [{\n                                facet: \"resource_name\",\n                                limit: 50,\n                                sort: {\n                                    aggregation: \"avg\",\n                                    order: \"desc\",\n                                    facet: \"@string_query.interval\",\n                                },\n                            }],\n                        },\n                        type: \"bars\",\n                    },\n                    {\n                        processQuery: {\n                            metric: \"process.stat.cpu.total_pct\",\n                            searchBy: \"error\",\n                            filterBies: [\"active\"],\n                            limit: 50,\n                        },\n                        type: \"area\",\n                    },\n                ],\n                markers: [{\n                    label: \"test marker\",\n                    type: \"error dashed\",\n                    value: \"y \u003c 6\",\n                }],\n                events: [{\n                    q: \"test event\",\n                }],\n            }],\n        },\n        {\n            type: \"query_value\",\n            x: 45,\n            y: 25,\n            title: \"query value title terraform\",\n            titleSize: 20,\n            titleAlign: \"center\",\n            legend: true,\n            legendSize: 16,\n            tileDeves: [{\n                viz: \"query_value\",\n                requests: [{\n                    q: \"avg:system.cpu.user{*}\",\n                    type: \"line\",\n                    style: {\n                        palette: \"purple\",\n                        type: \"dashed\",\n                        width: \"thin\",\n                    },\n                    conditionalFormats: [\n                        {\n                            comparator: \"\u003e\",\n                            value: \"1\",\n                            palette: \"white_on_red\",\n                        },\n                        {\n                            comparator: \"\u003e=\",\n                            value: \"2\",\n                            palette: \"white_on_yellow\",\n                        },\n                    ],\n                    aggregator: \"max\",\n                }],\n                customUnit: \"%\",\n                autoscale: false,\n                precision: \"6\",\n                textAlign: \"right\",\n            }],\n        },\n        {\n            type: \"toplist\",\n            x: 65,\n            y: 5,\n            title: \"toplist title terraform\",\n            legend: true,\n            legendSize: \"auto\",\n            time: {\n                live_span: \"1d\",\n            },\n            tileDeves: [{\n                viz: \"toplist\",\n                requests: [{\n                    q: \"top(avg:system.load.1{*} by {host}, 10, 'mean', 'desc')\",\n                    style: {\n                        palette: \"purple\",\n                        type: \"dashed\",\n                        width: \"thin\",\n                    },\n                    conditionalFormats: [{\n                        comparator: \"\u003e\",\n                        value: \"4\",\n                        palette: \"white_on_green\",\n                    }],\n                }],\n            }],\n        },\n        {\n            type: \"change\",\n            x: 85,\n            y: 5,\n            title: \"change title terraform\",\n            tileDeves: [{\n                viz: \"change\",\n                requests: [{\n                    q: \"min:system.load.1{*} by {host}\",\n                    compareTo: \"week_before\",\n                    changeType: \"relative\",\n                    orderBy: \"present\",\n                    orderDir: \"asc\",\n                    extraCol: \"\",\n                    increaseGood: false,\n                }],\n            }],\n        },\n        {\n            type: \"event_timeline\",\n            x: 105,\n            y: 5,\n            title: \"event_timeline title terraform\",\n            query: \"status:error\",\n            time: {\n                live_span: \"1d\",\n            },\n        },\n        {\n            type: \"event_stream\",\n            x: 115,\n            y: 5,\n            title: \"event_stream title terraform\",\n            query: \"*\",\n            eventSize: \"l\",\n            time: {\n                live_span: \"4h\",\n            },\n        },\n        {\n            type: \"image\",\n            x: 145,\n            y: 5,\n            title: \"image title terraform\",\n            sizing: \"fit\",\n            margin: \"large\",\n            url: \"https://datadog-prod.imgix.net/img/dd_logo_70x75.png\",\n        },\n        {\n            type: \"note\",\n            x: 165,\n            y: 5,\n            bgcolor: \"pink\",\n            textAlign: \"right\",\n            fontSize: \"36\",\n            tick: true,\n            tickEdge: \"bottom\",\n            tickPos: `50%`,\n            html: \"\u003cb\u003etest note\u003c/b\u003e\",\n        },\n        {\n            type: \"alert_graph\",\n            x: 185,\n            y: 5,\n            title: \"alert graph title terraform\",\n            alertId: \"123456\",\n            vizType: \"toplist\",\n            time: {\n                live_span: \"15m\",\n            },\n        },\n        {\n            type: \"alert_value\",\n            x: 205,\n            y: 5,\n            title: \"alert value title terraform\",\n            alertId: \"123456\",\n            textSize: \"fill_height\",\n            textAlign: \"right\",\n            precision: \"*\",\n            unit: \"b\",\n        },\n        {\n            type: \"iframe\",\n            x: 225,\n            y: 5,\n            url: \"https://www.datadoghq.org\",\n        },\n        {\n            type: \"check_status\",\n            x: 245,\n            y: 5,\n            title: \"test title\",\n            titleAlign: \"left\",\n            grouping: \"check\",\n            check: \"aws.ecs.agent_connected\",\n            tags: [\"*\"],\n            group: \"cluster:test\",\n            time: {\n                live_span: \"30m\",\n            },\n        },\n        {\n            type: \"trace_service\",\n            x: 265,\n            y: 5,\n            env: \"testEnv\",\n            serviceService: \"\",\n            serviceName: \"\",\n            sizeVersion: \"large\",\n            layoutVersion: \"three_column\",\n            mustShowHits: true,\n            mustShowErrors: true,\n            mustShowLatency: true,\n            mustShowBreakdown: true,\n            mustShowDistribution: true,\n            mustShowResourceList: true,\n            time: {\n                live_span: \"30m\",\n            },\n        },\n        {\n            type: \"hostmap\",\n            x: 285,\n            y: 5,\n            query: \"avg:system.load.1{*} by {host}\",\n            tileDeves: [{\n                viz: \"hostmap\",\n                nodeType: \"container\",\n                scopes: [\"datacenter:test\"],\n                groups: [\"pod_name\"],\n                noGroupHosts: false,\n                noMetricHosts: false,\n                requests: [{\n                    q: \"max:process.stat.container.io.wbps{datacenter:test} by {host}\",\n                    type: \"fill\",\n                }],\n                style: {\n                    palette: \"hostmap_blues\",\n                    palette_flip: true,\n                    fill_min: 20,\n                    fill_max: 300,\n                },\n            }],\n        },\n        {\n            type: \"manage_status\",\n            x: 305,\n            y: 5,\n            summaryType: \"monitors\",\n            displayFormat: \"countsAndList\",\n            colorPreference: \"background\",\n            hideZeroCounts: true,\n            showLastTriggered: false,\n            manageStatusShowTitle: false,\n            manageStatusTitleText: \"test title\",\n            manageStatusTitleSize: \"20\",\n            manageStatusTitleAlign: \"right\",\n            params: {\n                sort: \"status,asc\",\n                text: \"status:alert\",\n            },\n        },\n        {\n            type: \"log_stream\",\n            x: 325,\n            y: 5,\n            query: \"source:kubernetes\",\n            columns: \"[\\\"column1\\\",\\\"column2\\\",\\\"column3\\\"]\",\n            logset: \"1234\",\n            time: {\n                live_span: \"1h\",\n            },\n        },\n        {\n            type: \"process\",\n            x: 365,\n            y: 5,\n            tileDeves: [{\n                viz: \"process\",\n                requests: [{\n                    queryType: \"process\",\n                    metric: \"process.stat.cpu.total_pct\",\n                    textFilter: \"\",\n                    tagFilters: [],\n                    limit: 200,\n                    style: {\n                        palette: \"dog_classic_area\",\n                    },\n                }],\n            }],\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_datadog as datadog\n\n# Create a new Datadog screenboard\nacceptance_test = datadog.ScreenBoard(\"acceptanceTest\",\n    title=\"Test Screenboard\",\n    read_only=True,\n    template_variables=[\n        datadog.ScreenBoardTemplateVariableArgs(\n            name=\"varname 1\",\n            prefix=\"pod_name\",\n            default=\"*\",\n        ),\n        datadog.ScreenBoardTemplateVariableArgs(\n            name=\"varname 2\",\n            prefix=\"service_name\",\n            default=\"autoscaling\",\n        ),\n    ],\n    widgets=[\n        datadog.ScreenBoardWidgetArgs(\n            type=\"free_text\",\n            x=5,\n            y=5,\n            text=\"test text\",\n            text_align=\"right\",\n            font_size=\"36\",\n            color=\"#ffc0cb\",\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"timeseries\",\n            x=25,\n            y=5,\n            title=\"graph title terraform\",\n            title_size=16,\n            title_align=\"right\",\n            legend=True,\n            legend_size=\"16\",\n            time={\n                \"live_span\": \"1d\",\n            },\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"timeseries\",\n                requests=[\n                    datadog.ScreenBoardWidgetTileDefRequestArgs(\n                        q=\"avg:system.cpu.user{*}\",\n                        type=\"line\",\n                        style={\n                            \"palette\": \"purple\",\n                            \"type\": \"dashed\",\n                            \"width\": \"thin\",\n                        },\n                        metadata_json=json.dumps({\n                            \"avg:system.cpu.user{*}\": {\n                                \"alias\": \"CPU Usage\",\n                            },\n                        }),\n                    ),\n                    datadog.ScreenBoardWidgetTileDefRequestArgs(\n                        log_query=datadog.ScreenBoardWidgetTileDefRequestLogQueryArgs(\n                            index=\"mcnulty\",\n                            compute=datadog.ScreenBoardWidgetTileDefRequestLogQueryComputeArgs(\n                                aggregation=\"avg\",\n                                facet=\"@duration\",\n                                interval=\"5000\",\n                            ),\n                            search=datadog.ScreenBoardWidgetTileDefRequestLogQuerySearchArgs(\n                                query=\"status:info\",\n                            ),\n                            group_bies=[{\n                                \"facet\": \"host\",\n                                \"limit\": 10,\n                                \"sort\": {\n                                    \"aggregation\": \"avg\",\n                                    \"order\": \"desc\",\n                                    \"facet\": \"@duration\",\n                                },\n                            }],\n                        ),\n                        type=\"area\",\n                    ),\n                    datadog.ScreenBoardWidgetTileDefRequestArgs(\n                        apm_query=datadog.ScreenBoardWidgetTileDefRequestApmQueryArgs(\n                            index=\"apm-search\",\n                            compute=datadog.ScreenBoardWidgetTileDefRequestApmQueryComputeArgs(\n                                aggregation=\"avg\",\n                                facet=\"@duration\",\n                                interval=\"5000\",\n                            ),\n                            search=datadog.ScreenBoardWidgetTileDefRequestApmQuerySearchArgs(\n                                query=\"type:web\",\n                            ),\n                            group_bies=[{\n                                \"facet\": \"resource_name\",\n                                \"limit\": 50,\n                                \"sort\": {\n                                    \"aggregation\": \"avg\",\n                                    \"order\": \"desc\",\n                                    \"facet\": \"@string_query.interval\",\n                                },\n                            }],\n                        ),\n                        type=\"bars\",\n                    ),\n                    datadog.ScreenBoardWidgetTileDefRequestArgs(\n                        process_query=datadog.ScreenBoardWidgetTileDefRequestProcessQueryArgs(\n                            metric=\"process.stat.cpu.total_pct\",\n                            search_by=\"error\",\n                            filter_bies=[\"active\"],\n                            limit=50,\n                        ),\n                        type=\"area\",\n                    ),\n                ],\n                markers=[datadog.ScreenBoardWidgetTileDefMarkerArgs(\n                    label=\"test marker\",\n                    type=\"error dashed\",\n                    value=\"y \u003c 6\",\n                )],\n                events=[datadog.ScreenBoardWidgetTileDefEventArgs(\n                    q=\"test event\",\n                )],\n            )],\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"query_value\",\n            x=45,\n            y=25,\n            title=\"query value title terraform\",\n            title_size=20,\n            title_align=\"center\",\n            legend=True,\n            legend_size=\"16\",\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"query_value\",\n                requests=[datadog.ScreenBoardWidgetTileDefRequestArgs(\n                    q=\"avg:system.cpu.user{*}\",\n                    type=\"line\",\n                    style={\n                        \"palette\": \"purple\",\n                        \"type\": \"dashed\",\n                        \"width\": \"thin\",\n                    },\n                    conditional_formats=[\n                        datadog.ScreenBoardWidgetTileDefRequestConditionalFormatArgs(\n                            comparator=\"\u003e\",\n                            value=\"1\",\n                            palette=\"white_on_red\",\n                        ),\n                        datadog.ScreenBoardWidgetTileDefRequestConditionalFormatArgs(\n                            comparator=\"\u003e=\",\n                            value=\"2\",\n                            palette=\"white_on_yellow\",\n                        ),\n                    ],\n                    aggregator=\"max\",\n                )],\n                custom_unit=\"%\",\n                autoscale=False,\n                precision=\"6\",\n                text_align=\"right\",\n            )],\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"toplist\",\n            x=65,\n            y=5,\n            title=\"toplist title terraform\",\n            legend=True,\n            legend_size=\"auto\",\n            time={\n                \"live_span\": \"1d\",\n            },\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"toplist\",\n                requests=[datadog.ScreenBoardWidgetTileDefRequestArgs(\n                    q=\"top(avg:system.load.1{*} by {host}, 10, 'mean', 'desc')\",\n                    style={\n                        \"palette\": \"purple\",\n                        \"type\": \"dashed\",\n                        \"width\": \"thin\",\n                    },\n                    conditional_formats=[datadog.ScreenBoardWidgetTileDefRequestConditionalFormatArgs(\n                        comparator=\"\u003e\",\n                        value=\"4\",\n                        palette=\"white_on_green\",\n                    )],\n                )],\n            )],\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"change\",\n            x=85,\n            y=5,\n            title=\"change title terraform\",\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"change\",\n                requests=[datadog.ScreenBoardWidgetTileDefRequestArgs(\n                    q=\"min:system.load.1{*} by {host}\",\n                    compare_to=\"week_before\",\n                    change_type=\"relative\",\n                    order_by=\"present\",\n                    order_dir=\"asc\",\n                    extra_col=\"\",\n                    increase_good=False,\n                )],\n            )],\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"event_timeline\",\n            x=105,\n            y=5,\n            title=\"event_timeline title terraform\",\n            query=\"status:error\",\n            time={\n                \"live_span\": \"1d\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"event_stream\",\n            x=115,\n            y=5,\n            title=\"event_stream title terraform\",\n            query=\"*\",\n            event_size=\"l\",\n            time={\n                \"live_span\": \"4h\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"image\",\n            x=145,\n            y=5,\n            title=\"image title terraform\",\n            sizing=\"fit\",\n            margin=\"large\",\n            url=\"https://datadog-prod.imgix.net/img/dd_logo_70x75.png\",\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"note\",\n            x=165,\n            y=5,\n            bgcolor=\"pink\",\n            text_align=\"right\",\n            font_size=\"36\",\n            tick=True,\n            tick_edge=\"bottom\",\n            tick_pos=\"50%\",\n            html=\"\u003cb\u003etest note\u003c/b\u003e\",\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"alert_graph\",\n            x=185,\n            y=5,\n            title=\"alert graph title terraform\",\n            alert_id=123456,\n            viz_type=\"toplist\",\n            time={\n                \"live_span\": \"15m\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"alert_value\",\n            x=205,\n            y=5,\n            title=\"alert value title terraform\",\n            alert_id=123456,\n            text_size=\"fill_height\",\n            text_align=\"right\",\n            precision=\"*\",\n            unit=\"b\",\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"iframe\",\n            x=225,\n            y=5,\n            url=\"https://www.datadoghq.org\",\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"check_status\",\n            x=245,\n            y=5,\n            title=\"test title\",\n            title_align=\"left\",\n            grouping=\"check\",\n            check=\"aws.ecs.agent_connected\",\n            tags=[\"*\"],\n            group=\"cluster:test\",\n            time={\n                \"live_span\": \"30m\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"trace_service\",\n            x=265,\n            y=5,\n            env=\"testEnv\",\n            service_service=\"\",\n            service_name=\"\",\n            size_version=\"large\",\n            layout_version=\"three_column\",\n            must_show_hits=True,\n            must_show_errors=True,\n            must_show_latency=True,\n            must_show_breakdown=True,\n            must_show_distribution=True,\n            must_show_resource_list=True,\n            time={\n                \"live_span\": \"30m\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"hostmap\",\n            x=285,\n            y=5,\n            query=\"avg:system.load.1{*} by {host}\",\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"hostmap\",\n                node_type=\"container\",\n                scopes=[\"datacenter:test\"],\n                groups=[\"pod_name\"],\n                no_group_hosts=False,\n                no_metric_hosts=False,\n                requests=[datadog.ScreenBoardWidgetTileDefRequestArgs(\n                    q=\"max:process.stat.container.io.wbps{datacenter:test} by {host}\",\n                    type=\"fill\",\n                )],\n                style={\n                    \"palette\": \"hostmap_blues\",\n                    \"palette_flip\": True,\n                    \"fill_min\": 20,\n                    \"fill_max\": 300,\n                },\n            )],\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"manage_status\",\n            x=305,\n            y=5,\n            summary_type=\"monitors\",\n            display_format=\"countsAndList\",\n            color_preference=\"background\",\n            hide_zero_counts=True,\n            show_last_triggered=False,\n            manage_status_show_title=False,\n            manage_status_title_text=\"test title\",\n            manage_status_title_size=\"20\",\n            manage_status_title_align=\"right\",\n            params={\n                \"sort\": \"status,asc\",\n                \"text\": \"status:alert\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"log_stream\",\n            x=325,\n            y=5,\n            query=\"source:kubernetes\",\n            columns=\"[\\\"column1\\\",\\\"column2\\\",\\\"column3\\\"]\",\n            logset=\"1234\",\n            time={\n                \"live_span\": \"1h\",\n            },\n        ),\n        datadog.ScreenBoardWidgetArgs(\n            type=\"process\",\n            x=365,\n            y=5,\n            tile_deves=[datadog.ScreenBoardWidgetTileDefArgs(\n                viz=\"process\",\n                requests=[datadog.ScreenBoardWidgetTileDefRequestArgs(\n                    query_type=\"process\",\n                    metric=\"process.stat.cpu.total_pct\",\n                    text_filter=\"\",\n                    tag_filters=[],\n                    limit=200,\n                    style={\n                        \"palette\": \"dog_classic_area\",\n                    },\n                )],\n            )],\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Text.Json;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Create a new Datadog screenboard\n        var acceptanceTest = new Datadog.ScreenBoard(\"acceptanceTest\", new Datadog.ScreenBoardArgs\n        {\n            Title = \"Test Screenboard\",\n            ReadOnly = true,\n            TemplateVariables = \n            {\n                new Datadog.Inputs.ScreenBoardTemplateVariableArgs\n                {\n                    Name = \"varname 1\",\n                    Prefix = \"pod_name\",\n                    Default = \"*\",\n                },\n                new Datadog.Inputs.ScreenBoardTemplateVariableArgs\n                {\n                    Name = \"varname 2\",\n                    Prefix = \"service_name\",\n                    Default = \"autoscaling\",\n                },\n            },\n            Widgets = \n            {\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"free_text\",\n                    X = 5,\n                    Y = 5,\n                    Text = \"test text\",\n                    TextAlign = \"right\",\n                    FontSize = \"36\",\n                    Color = \"#ffc0cb\",\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"timeseries\",\n                    X = 25,\n                    Y = 5,\n                    Title = \"graph title terraform\",\n                    TitleSize = 16,\n                    TitleAlign = \"right\",\n                    Legend = true,\n                    LegendSize = \"16\",\n                    Time = \n                    {\n                        { \"live_span\", \"1d\" },\n                    },\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"timeseries\",\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    Q = \"avg:system.cpu.user{*}\",\n                                    Type = \"line\",\n                                    Style = \n                                    {\n                                        { \"palette\", \"purple\" },\n                                        { \"type\", \"dashed\" },\n                                        { \"width\", \"thin\" },\n                                    },\n                                    MetadataJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                                    {\n                                        { \"avg:system.cpu.user{*}\", new Dictionary\u003cstring, object?\u003e\n                                        {\n                                            { \"alias\", \"CPU Usage\" },\n                                        } },\n                                    }),\n                                },\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    LogQuery = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestLogQueryArgs\n                                    {\n                                        Index = \"mcnulty\",\n                                        Compute = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestLogQueryComputeArgs\n                                        {\n                                            Aggregation = \"avg\",\n                                            Facet = \"@duration\",\n                                            Interval = \"5000\",\n                                        },\n                                        Search = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestLogQuerySearchArgs\n                                        {\n                                            Query = \"status:info\",\n                                        },\n                                        GroupBies = \n                                        {\n                                            new Datadog.Inputs.ScreenBoardWidgetTileDefRequestLogQueryGroupByArgs\n                                            {\n                                                Facet = \"host\",\n                                                Limit = 10,\n                                                Sort = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestLogQueryGroupBySortArgs\n                                                {\n                                                    Aggregation = \"avg\",\n                                                    Order = \"desc\",\n                                                    Facet = \"@duration\",\n                                                },\n                                            },\n                                        },\n                                    },\n                                    Type = \"area\",\n                                },\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    ApmQuery = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestApmQueryArgs\n                                    {\n                                        Index = \"apm-search\",\n                                        Compute = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestApmQueryComputeArgs\n                                        {\n                                            Aggregation = \"avg\",\n                                            Facet = \"@duration\",\n                                            Interval = \"5000\",\n                                        },\n                                        Search = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestApmQuerySearchArgs\n                                        {\n                                            Query = \"type:web\",\n                                        },\n                                        GroupBies = \n                                        {\n                                            new Datadog.Inputs.ScreenBoardWidgetTileDefRequestApmQueryGroupByArgs\n                                            {\n                                                Facet = \"resource_name\",\n                                                Limit = 50,\n                                                Sort = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestApmQueryGroupBySortArgs\n                                                {\n                                                    Aggregation = \"avg\",\n                                                    Order = \"desc\",\n                                                    Facet = \"@string_query.interval\",\n                                                },\n                                            },\n                                        },\n                                    },\n                                    Type = \"bars\",\n                                },\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    ProcessQuery = new Datadog.Inputs.ScreenBoardWidgetTileDefRequestProcessQueryArgs\n                                    {\n                                        Metric = \"process.stat.cpu.total_pct\",\n                                        SearchBy = \"error\",\n                                        FilterBies = \n                                        {\n                                            \"active\",\n                                        },\n                                        Limit = 50,\n                                    },\n                                    Type = \"area\",\n                                },\n                            },\n                            Markers = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefMarkerArgs\n                                {\n                                    Label = \"test marker\",\n                                    Type = \"error dashed\",\n                                    Value = \"y \u003c 6\",\n                                },\n                            },\n                            Events = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefEventArgs\n                                {\n                                    Q = \"test event\",\n                                },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"query_value\",\n                    X = 45,\n                    Y = 25,\n                    Title = \"query value title terraform\",\n                    TitleSize = 20,\n                    TitleAlign = \"center\",\n                    Legend = true,\n                    LegendSize = \"16\",\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"query_value\",\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    Q = \"avg:system.cpu.user{*}\",\n                                    Type = \"line\",\n                                    Style = \n                                    {\n                                        { \"palette\", \"purple\" },\n                                        { \"type\", \"dashed\" },\n                                        { \"width\", \"thin\" },\n                                    },\n                                    ConditionalFormats = \n                                    {\n                                        new Datadog.Inputs.ScreenBoardWidgetTileDefRequestConditionalFormatArgs\n                                        {\n                                            Comparator = \"\u003e\",\n                                            Value = \"1\",\n                                            Palette = \"white_on_red\",\n                                        },\n                                        new Datadog.Inputs.ScreenBoardWidgetTileDefRequestConditionalFormatArgs\n                                        {\n                                            Comparator = \"\u003e=\",\n                                            Value = \"2\",\n                                            Palette = \"white_on_yellow\",\n                                        },\n                                    },\n                                    Aggregator = \"max\",\n                                },\n                            },\n                            CustomUnit = \"%\",\n                            Autoscale = false,\n                            Precision = \"6\",\n                            TextAlign = \"right\",\n                        },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"toplist\",\n                    X = 65,\n                    Y = 5,\n                    Title = \"toplist title terraform\",\n                    Legend = true,\n                    LegendSize = \"auto\",\n                    Time = \n                    {\n                        { \"live_span\", \"1d\" },\n                    },\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"toplist\",\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    Q = \"top(avg:system.load.1{*} by {host}, 10, 'mean', 'desc')\",\n                                    Style = \n                                    {\n                                        { \"palette\", \"purple\" },\n                                        { \"type\", \"dashed\" },\n                                        { \"width\", \"thin\" },\n                                    },\n                                    ConditionalFormats = \n                                    {\n                                        new Datadog.Inputs.ScreenBoardWidgetTileDefRequestConditionalFormatArgs\n                                        {\n                                            Comparator = \"\u003e\",\n                                            Value = \"4\",\n                                            Palette = \"white_on_green\",\n                                        },\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"change\",\n                    X = 85,\n                    Y = 5,\n                    Title = \"change title terraform\",\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"change\",\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    Q = \"min:system.load.1{*} by {host}\",\n                                    CompareTo = \"week_before\",\n                                    ChangeType = \"relative\",\n                                    OrderBy = \"present\",\n                                    OrderDir = \"asc\",\n                                    ExtraCol = \"\",\n                                    IncreaseGood = false,\n                                },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"event_timeline\",\n                    X = 105,\n                    Y = 5,\n                    Title = \"event_timeline title terraform\",\n                    Query = \"status:error\",\n                    Time = \n                    {\n                        { \"live_span\", \"1d\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"event_stream\",\n                    X = 115,\n                    Y = 5,\n                    Title = \"event_stream title terraform\",\n                    Query = \"*\",\n                    EventSize = \"l\",\n                    Time = \n                    {\n                        { \"live_span\", \"4h\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"image\",\n                    X = 145,\n                    Y = 5,\n                    Title = \"image title terraform\",\n                    Sizing = \"fit\",\n                    Margin = \"large\",\n                    Url = \"https://datadog-prod.imgix.net/img/dd_logo_70x75.png\",\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"note\",\n                    X = 165,\n                    Y = 5,\n                    Bgcolor = \"pink\",\n                    TextAlign = \"right\",\n                    FontSize = \"36\",\n                    Tick = true,\n                    TickEdge = \"bottom\",\n                    TickPos = \"50%\",\n                    Html = \"\u003cb\u003etest note\u003c/b\u003e\",\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"alert_graph\",\n                    X = 185,\n                    Y = 5,\n                    Title = \"alert graph title terraform\",\n                    AlertId = 123456,\n                    VizType = \"toplist\",\n                    Time = \n                    {\n                        { \"live_span\", \"15m\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"alert_value\",\n                    X = 205,\n                    Y = 5,\n                    Title = \"alert value title terraform\",\n                    AlertId = 123456,\n                    TextSize = \"fill_height\",\n                    TextAlign = \"right\",\n                    Precision = \"*\",\n                    Unit = \"b\",\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"iframe\",\n                    X = 225,\n                    Y = 5,\n                    Url = \"https://www.datadoghq.org\",\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"check_status\",\n                    X = 245,\n                    Y = 5,\n                    Title = \"test title\",\n                    TitleAlign = \"left\",\n                    Grouping = \"check\",\n                    Check = \"aws.ecs.agent_connected\",\n                    Tags = \n                    {\n                        \"*\",\n                    },\n                    Group = \"cluster:test\",\n                    Time = \n                    {\n                        { \"live_span\", \"30m\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"trace_service\",\n                    X = 265,\n                    Y = 5,\n                    Env = \"testEnv\",\n                    ServiceService = \"\",\n                    ServiceName = \"\",\n                    SizeVersion = \"large\",\n                    LayoutVersion = \"three_column\",\n                    MustShowHits = true,\n                    MustShowErrors = true,\n                    MustShowLatency = true,\n                    MustShowBreakdown = true,\n                    MustShowDistribution = true,\n                    MustShowResourceList = true,\n                    Time = \n                    {\n                        { \"live_span\", \"30m\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"hostmap\",\n                    X = 285,\n                    Y = 5,\n                    Query = \"avg:system.load.1{*} by {host}\",\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"hostmap\",\n                            NodeType = \"container\",\n                            Scopes = \n                            {\n                                \"datacenter:test\",\n                            },\n                            Groups = \n                            {\n                                \"pod_name\",\n                            },\n                            NoGroupHosts = false,\n                            NoMetricHosts = false,\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    Q = \"max:process.stat.container.io.wbps{datacenter:test} by {host}\",\n                                    Type = \"fill\",\n                                },\n                            },\n                            Style = \n                            {\n                                { \"palette\", \"hostmap_blues\" },\n                                { \"palette_flip\", true },\n                                { \"fill_min\", 20 },\n                                { \"fill_max\", 300 },\n                            },\n                        },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"manage_status\",\n                    X = 305,\n                    Y = 5,\n                    SummaryType = \"monitors\",\n                    DisplayFormat = \"countsAndList\",\n                    ColorPreference = \"background\",\n                    HideZeroCounts = true,\n                    ShowLastTriggered = false,\n                    ManageStatusShowTitle = false,\n                    ManageStatusTitleText = \"test title\",\n                    ManageStatusTitleSize = \"20\",\n                    ManageStatusTitleAlign = \"right\",\n                    Params = \n                    {\n                        { \"sort\", \"status,asc\" },\n                        { \"text\", \"status:alert\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"log_stream\",\n                    X = 325,\n                    Y = 5,\n                    Query = \"source:kubernetes\",\n                    Columns = \"[\\\"column1\\\",\\\"column2\\\",\\\"column3\\\"]\",\n                    Logset = \"1234\",\n                    Time = \n                    {\n                        { \"live_span\", \"1h\" },\n                    },\n                },\n                new Datadog.Inputs.ScreenBoardWidgetArgs\n                {\n                    Type = \"process\",\n                    X = 365,\n                    Y = 5,\n                    TileDeves = \n                    {\n                        new Datadog.Inputs.ScreenBoardWidgetTileDefArgs\n                        {\n                            Viz = \"process\",\n                            Requests = \n                            {\n                                new Datadog.Inputs.ScreenBoardWidgetTileDefRequestArgs\n                                {\n                                    QueryType = \"process\",\n                                    Metric = \"process.stat.cpu.total_pct\",\n                                    TextFilter = \"\",\n                                    TagFilters = {},\n                                    Limit = 200,\n                                    Style = \n                                    {\n                                        { \"palette\", \"dog_classic_area\" },\n                                    },\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nscreenboards can be imported using their numeric ID, e.g.\n\n```sh\n $ pulumi import datadog:index/screenBoard:ScreenBoard my_service_screenboard 2081\n```\n\n ",
            "properties": {
                "height": {
                    "type": "string",
                    "description": "Height of the screenboard\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "The read-only status of the screenboard. Default is `false`.\n"
                },
                "shared": {
                    "type": "boolean",
                    "description": "Whether the screenboard is shared or not\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Name of the screenboard\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidget:ScreenBoardWidget"
                    },
                    "description": "A list of widget definitions.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Width of the screenboard\n"
                }
            },
            "required": [
                "title",
                "widgets"
            ],
            "inputProperties": {
                "height": {
                    "type": "string",
                    "description": "Height of the screenboard\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "The read-only status of the screenboard. Default is `false`.\n"
                },
                "shared": {
                    "type": "boolean",
                    "description": "Whether the screenboard is shared or not\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "Name of the screenboard\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ScreenBoardWidget:ScreenBoardWidget"
                    },
                    "description": "A list of widget definitions.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Width of the screenboard\n"
                }
            },
            "requiredInputs": [
                "title",
                "widgets"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScreenBoard resources.\n",
                "properties": {
                    "height": {
                        "type": "string",
                        "description": "Height of the screenboard\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "The read-only status of the screenboard. Default is `false`.\n"
                    },
                    "shared": {
                        "type": "boolean",
                        "description": "Whether the screenboard is shared or not\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ScreenBoardTemplateVariable:ScreenBoardTemplateVariable"
                        },
                        "description": "A list of template variables for using Dashboard templating.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Name of the screenboard\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ScreenBoardWidget:ScreenBoardWidget"
                        },
                        "description": "A list of widget definitions.\n"
                    },
                    "width": {
                        "type": "string",
                        "description": "Width of the screenboard\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/securityMonitoringRule:SecurityMonitoringRule": {
            "description": "Provides a Datadog Security Monitoring Rule API resource. This can be used to create and manage Datadog security monitoring rules. To change settings for a default rule use `datadog_security_default_rule` instead.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst myrule = new datadog.SecurityMonitoringRule(\"myrule\", {\n    cases: [{\n        condition: \"errors \u003e 3 \u0026\u0026 warnings \u003e 10\",\n        notifications: [\"@user\"],\n        status: \"high\",\n    }],\n    enabled: true,\n    message: \"The rule has triggered.\",\n    name: \"My rule\",\n    options: {\n        evaluationWindow: 300,\n        keepAlive: 600,\n        maxSignalDuration: 900,\n    },\n    queries: [\n        {\n            aggregation: \"count\",\n            groupByFields: [\"host\"],\n            name: \"errors\",\n            query: \"status:error\",\n        },\n        {\n            aggregation: \"count\",\n            groupByFields: [\"host\"],\n            name: \"warnings\",\n            query: \"status:warning\",\n        },\n    ],\n    tags: [\"type:dos\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nmyrule = datadog.SecurityMonitoringRule(\"myrule\",\n    cases=[datadog.SecurityMonitoringRuleCaseArgs(\n        condition=\"errors \u003e 3 \u0026\u0026 warnings \u003e 10\",\n        notifications=[\"@user\"],\n        status=\"high\",\n    )],\n    enabled=True,\n    message=\"The rule has triggered.\",\n    name=\"My rule\",\n    options=datadog.SecurityMonitoringRuleOptionsArgs(\n        evaluation_window=300,\n        keep_alive=600,\n        max_signal_duration=900,\n    ),\n    queries=[\n        datadog.SecurityMonitoringRuleQueryArgs(\n            aggregation=\"count\",\n            group_by_fields=[\"host\"],\n            name=\"errors\",\n            query=\"status:error\",\n        ),\n        datadog.SecurityMonitoringRuleQueryArgs(\n            aggregation=\"count\",\n            group_by_fields=[\"host\"],\n            name=\"warnings\",\n            query=\"status:warning\",\n        ),\n    ],\n    tags=[\"type:dos\"])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myrule = new Datadog.SecurityMonitoringRule(\"myrule\", new Datadog.SecurityMonitoringRuleArgs\n        {\n            Cases = \n            {\n                new Datadog.Inputs.SecurityMonitoringRuleCaseArgs\n                {\n                    Condition = \"errors \u003e 3 \u0026\u0026 warnings \u003e 10\",\n                    Notifications = \n                    {\n                        \"@user\",\n                    },\n                    Status = \"high\",\n                },\n            },\n            Enabled = true,\n            Message = \"The rule has triggered.\",\n            Name = \"My rule\",\n            Options = new Datadog.Inputs.SecurityMonitoringRuleOptionsArgs\n            {\n                EvaluationWindow = 300,\n                KeepAlive = 600,\n                MaxSignalDuration = 900,\n            },\n            Queries = \n            {\n                new Datadog.Inputs.SecurityMonitoringRuleQueryArgs\n                {\n                    Aggregation = \"count\",\n                    GroupByFields = \n                    {\n                        \"host\",\n                    },\n                    Name = \"errors\",\n                    Query = \"status:error\",\n                },\n                new Datadog.Inputs.SecurityMonitoringRuleQueryArgs\n                {\n                    Aggregation = \"count\",\n                    GroupByFields = \n                    {\n                        \"host\",\n                    },\n                    Name = \"warnings\",\n                    Query = \"status:warning\",\n                },\n            },\n            Tags = \n            {\n                \"type:dos\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSecurityMonitoringRule(ctx, \"myrule\", \u0026datadog.SecurityMonitoringRuleArgs{\n\t\t\tCases: datadog.SecurityMonitoringRuleCaseArray{\n\t\t\t\t\u0026datadog.SecurityMonitoringRuleCaseArgs{\n\t\t\t\t\tCondition: pulumi.String(\"errors \u003e 3 \u0026\u0026 warnings \u003e 10\"),\n\t\t\t\t\tNotifications: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"@user\"),\n\t\t\t\t\t},\n\t\t\t\t\tStatus: pulumi.String(\"high\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tMessage: pulumi.String(\"The rule has triggered.\"),\n\t\t\tName:    pulumi.String(\"My rule\"),\n\t\t\tOptions: \u0026datadog.SecurityMonitoringRuleOptionsArgs{\n\t\t\t\tEvaluationWindow:  pulumi.Int(300),\n\t\t\t\tKeepAlive:         pulumi.Int(600),\n\t\t\t\tMaxSignalDuration: pulumi.Int(900),\n\t\t\t},\n\t\t\tQueries: datadog.SecurityMonitoringRuleQueryArray{\n\t\t\t\t\u0026datadog.SecurityMonitoringRuleQueryArgs{\n\t\t\t\t\tAggregation: pulumi.String(\"count\"),\n\t\t\t\t\tGroupByFields: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"host\"),\n\t\t\t\t\t},\n\t\t\t\t\tName:  pulumi.String(\"errors\"),\n\t\t\t\t\tQuery: pulumi.String(\"status:error\"),\n\t\t\t\t},\n\t\t\t\t\u0026datadog.SecurityMonitoringRuleQueryArgs{\n\t\t\t\t\tAggregation: pulumi.String(\"count\"),\n\t\t\t\t\tGroupByFields: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"host\"),\n\t\t\t\t\t},\n\t\t\t\t\tName:  pulumi.String(\"warnings\"),\n\t\t\t\t\tQuery: pulumi.String(\"status:warning\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"type:dos\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# Security monitoring rules can be imported using ID, e.g.\n\n```sh\n $ pulumi import datadog:index/securityMonitoringRule:SecurityMonitoringRule my_rule m0o-hto-lkb\n```\n\n ",
            "properties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                    },
                    "description": "Cases for generating signals.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the rule is enabled.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message for generated signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                    "description": "Options on rules.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for generated signals.\n"
                }
            },
            "required": [
                "cases",
                "message",
                "name",
                "queries"
            ],
            "inputProperties": {
                "cases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                    },
                    "description": "Cases for generating signals.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the rule is enabled.\n"
                },
                "message": {
                    "type": "string",
                    "description": "Message for generated signals.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the rule.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                    "description": "Options on rules.\n"
                },
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                    },
                    "description": "Queries for selecting logs which are part of the rule.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for generated signals.\n"
                }
            },
            "requiredInputs": [
                "cases",
                "message",
                "name",
                "queries"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SecurityMonitoringRule resources.\n",
                "properties": {
                    "cases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleCase:SecurityMonitoringRuleCase"
                        },
                        "description": "Cases for generating signals.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the rule is enabled.\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message for generated signals.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the rule.\n"
                    },
                    "options": {
                        "$ref": "#/types/datadog:index/SecurityMonitoringRuleOptions:SecurityMonitoringRuleOptions",
                        "description": "Options on rules.\n"
                    },
                    "queries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SecurityMonitoringRuleQuery:SecurityMonitoringRuleQuery"
                        },
                        "description": "Queries for selecting logs which are part of the rule.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags for generated signals.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/serviceLevelObjective:ServiceLevelObjective": {
            "description": "Provides a Datadog service level objective resource. This can be used to create and manage Datadog service level objectives.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Metric-Based SLO\n// Create a new Datadog service level objective\nconst foo = new datadog.ServiceLevelObjective(\"foo\", {\n    description: \"My custom metric SLO\",\n    name: \"Example Metric SLO\",\n    query: {\n        denominator: \"sum:my.custom.count.metric{*}.as_count()\",\n        numerator: \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n    },\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds: [\n        {\n            target: 99.9,\n            targetDisplay: \"99.900\",\n            timeframe: \"7d\",\n            warning: 99.99,\n            warningDisplay: \"99.990\",\n        },\n        {\n            target: 99.9,\n            targetDisplay: \"99.900\",\n            timeframe: \"30d\",\n            warning: 99.99,\n            warningDisplay: \"99.990\",\n        },\n    ],\n    type: \"metric\",\n});\n// Monitor-Based SLO\n// Create a new Datadog service level objective\nconst bar = new datadog.ServiceLevelObjective(\"bar\", {\n    description: \"My custom monitor SLO\",\n    monitorIds: [\n        1,\n        2,\n        3,\n    ],\n    name: \"Example Monitor SLO\",\n    tags: [\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds: [\n        {\n            target: 99.9,\n            timeframe: \"7d\",\n            warning: 99.99,\n        },\n        {\n            target: 99.9,\n            timeframe: \"30d\",\n            warning: 99.99,\n        },\n    ],\n    type: \"monitor\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\n# Metric-Based SLO\n# Create a new Datadog service level objective\nfoo = datadog.ServiceLevelObjective(\"foo\",\n    description=\"My custom metric SLO\",\n    name=\"Example Metric SLO\",\n    query=datadog.ServiceLevelObjectiveQueryArgs(\n        denominator=\"sum:my.custom.count.metric{*}.as_count()\",\n        numerator=\"sum:my.custom.count.metric{type:good_events}.as_count()\",\n    ),\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds=[\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            target_display=\"99.900\",\n            timeframe=\"7d\",\n            warning=99.99,\n            warning_display=\"99.990\",\n        ),\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            target_display=\"99.900\",\n            timeframe=\"30d\",\n            warning=99.99,\n            warning_display=\"99.990\",\n        ),\n    ],\n    type=\"metric\")\n# Monitor-Based SLO\n# Create a new Datadog service level objective\nbar = datadog.ServiceLevelObjective(\"bar\",\n    description=\"My custom monitor SLO\",\n    monitor_ids=[\n        1,\n        2,\n        3,\n    ],\n    name=\"Example Monitor SLO\",\n    tags=[\n        \"foo:bar\",\n        \"baz\",\n    ],\n    thresholds=[\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            timeframe=\"7d\",\n            warning=99.99,\n        ),\n        datadog.ServiceLevelObjectiveThresholdArgs(\n            target=99.9,\n            timeframe=\"30d\",\n            warning=99.99,\n        ),\n    ],\n    type=\"monitor\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Metric-Based SLO\n        // Create a new Datadog service level objective\n        var foo = new Datadog.ServiceLevelObjective(\"foo\", new Datadog.ServiceLevelObjectiveArgs\n        {\n            Description = \"My custom metric SLO\",\n            Name = \"Example Metric SLO\",\n            Query = new Datadog.Inputs.ServiceLevelObjectiveQueryArgs\n            {\n                Denominator = \"sum:my.custom.count.metric{*}.as_count()\",\n                Numerator = \"sum:my.custom.count.metric{type:good_events}.as_count()\",\n            },\n            Tags = \n            {\n                \"foo:bar\",\n                \"baz\",\n            },\n            Thresholds = \n            {\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    TargetDisplay = \"99.900\",\n                    Timeframe = \"7d\",\n                    Warning = 99.99,\n                    WarningDisplay = \"99.990\",\n                },\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    TargetDisplay = \"99.900\",\n                    Timeframe = \"30d\",\n                    Warning = 99.99,\n                    WarningDisplay = \"99.990\",\n                },\n            },\n            Type = \"metric\",\n        });\n        // Monitor-Based SLO\n        // Create a new Datadog service level objective\n        var bar = new Datadog.ServiceLevelObjective(\"bar\", new Datadog.ServiceLevelObjectiveArgs\n        {\n            Description = \"My custom monitor SLO\",\n            MonitorIds = \n            {\n                1,\n                2,\n                3,\n            },\n            Name = \"Example Monitor SLO\",\n            Tags = \n            {\n                \"foo:bar\",\n                \"baz\",\n            },\n            Thresholds = \n            {\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    Timeframe = \"7d\",\n                    Warning = 99.99,\n                },\n                new Datadog.Inputs.ServiceLevelObjectiveThresholdArgs\n                {\n                    Target = 99.9,\n                    Timeframe = \"30d\",\n                    Warning = 99.99,\n                },\n            },\n            Type = \"monitor\",\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# Service Level Objectives can be imported using their string ID, e.g.\n\n```sh\n $ pulumi import datadog:index/serviceLevelObjective:ServiceLevelObjective baz 12345678901234567890123456789012\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of this service level objective.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. dashboards).\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A static set of groups to filter monitor-based SLOs\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A static set of monitor IDs to use as part of the SLO\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog service level objective\n"
                },
                "query": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "The metric query of good / total events\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    },
                    "description": "A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "Whether or not to validate the SLO.\n"
                }
            },
            "required": [
                "name",
                "thresholds",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of this service level objective.\n"
                },
                "forceDelete": {
                    "type": "boolean",
                    "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. dashboards).\n"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A static set of groups to filter monitor-based SLOs\n"
                },
                "monitorIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A static set of monitor IDs to use as part of the SLO\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog service level objective\n"
                },
                "query": {
                    "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                    "description": "The metric query of good / total events\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                    },
                    "description": "A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.\n"
                },
                "validate": {
                    "type": "boolean",
                    "description": "Whether or not to validate the SLO.\n"
                }
            },
            "requiredInputs": [
                "name",
                "thresholds",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceLevelObjective resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of this service level objective.\n"
                    },
                    "forceDelete": {
                        "type": "boolean",
                        "description": "A boolean indicating whether this monitor can be deleted even if it’s referenced by other resources (e.g. dashboards).\n"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A static set of groups to filter monitor-based SLOs\n"
                    },
                    "monitorIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A static set of monitor IDs to use as part of the SLO\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog service level objective\n"
                    },
                    "query": {
                        "$ref": "#/types/datadog:index/ServiceLevelObjectiveQuery:ServiceLevelObjectiveQuery",
                        "description": "The metric query of good / total events\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API\n"
                    },
                    "thresholds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/ServiceLevelObjectiveThreshold:ServiceLevelObjectiveThreshold"
                        },
                        "description": "A list of thresholds and targets that define the service level objectives from the provided SLIs.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.\n"
                    },
                    "validate": {
                        "type": "boolean",
                        "description": "Whether or not to validate the SLO.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable": {
            "description": "Provides a Datadog synthetics global variable resource. This can be used to create and manage Datadog synthetics global variables.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testVariable = new datadog.SyntheticsGlobalVariable(\"test_variable\", {\n    description: \"Description of the variable\",\n    name: \"EXAMPLE_VARIABLE\",\n    tags: [\n        \"foo:bar\",\n        \"env:test\",\n    ],\n    value: \"variable-value\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest_variable = datadog.SyntheticsGlobalVariable(\"testVariable\",\n    description=\"Description of the variable\",\n    name=\"EXAMPLE_VARIABLE\",\n    tags=[\n        \"foo:bar\",\n        \"env:test\",\n    ],\n    value=\"variable-value\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var testVariable = new Datadog.SyntheticsGlobalVariable(\"testVariable\", new Datadog.SyntheticsGlobalVariableArgs\n        {\n            Description = \"Description of the variable\",\n            Name = \"EXAMPLE_VARIABLE\",\n            Tags = \n            {\n                \"foo:bar\",\n                \"env:test\",\n            },\n            Value = \"variable-value\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSyntheticsGlobalVariable(ctx, \"testVariable\", \u0026datadog.SyntheticsGlobalVariableArgs{\n\t\t\tDescription: pulumi.String(\"Description of the variable\"),\n\t\t\tName:        pulumi.String(\"EXAMPLE_VARIABLE\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t\tValue: pulumi.String(\"variable-value\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# Synthetics global variables can be imported using their string ID, e.g.\n\n```sh\n $ pulumi import datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable fizz abcde123-fghi-456-jkl-mnopqrstuv\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the global variable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics global variable name.\n"
                },
                "parseTestId": {
                    "type": "string",
                    "description": "Id of the Synthetics test to use for a variable from test.\n"
                },
                "parseTestOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                    "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                },
                "secure": {
                    "type": "boolean",
                    "description": "Sets the variable as secure. Defaults to `false`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics global variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the global variable.\n"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the global variable.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics global variable name.\n"
                },
                "parseTestId": {
                    "type": "string",
                    "description": "Id of the Synthetics test to use for a variable from test.\n"
                },
                "parseTestOptions": {
                    "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                    "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                },
                "secure": {
                    "type": "boolean",
                    "description": "Sets the variable as secure. Defaults to `false`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics global variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the global variable.\n"
                }
            },
            "requiredInputs": [
                "name",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsGlobalVariable resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the global variable.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Synthetics global variable name.\n"
                    },
                    "parseTestId": {
                        "type": "string",
                        "description": "Id of the Synthetics test to use for a variable from test.\n"
                    },
                    "parseTestOptions": {
                        "$ref": "#/types/datadog:index/SyntheticsGlobalVariableParseTestOptions:SyntheticsGlobalVariableParseTestOptions",
                        "description": "ID of the Synthetics test to use a source of the global variable value.\n"
                    },
                    "secure": {
                        "type": "boolean",
                        "description": "Sets the variable as secure. Defaults to `false`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your synthetics global variable.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the global variable.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsPrivateLocation:SyntheticsPrivateLocation": {
            "description": "Provides a Datadog synthetics private location resource. This can be used to create and manage Datadog synthetics private locations.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst privateLocation = new datadog.SyntheticsPrivateLocation(\"private_location\", {\n    description: \"Description of the private location\",\n    name: \"First private location\",\n    tags: [\n        \"foo:bar\",\n        \"env:test\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nprivate_location = datadog.SyntheticsPrivateLocation(\"privateLocation\",\n    description=\"Description of the private location\",\n    name=\"First private location\",\n    tags=[\n        \"foo:bar\",\n        \"env:test\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var privateLocation = new Datadog.SyntheticsPrivateLocation(\"privateLocation\", new Datadog.SyntheticsPrivateLocationArgs\n        {\n            Description = \"Description of the private location\",\n            Name = \"First private location\",\n            Tags = \n            {\n                \"foo:bar\",\n                \"env:test\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.NewSyntheticsPrivateLocation(ctx, \"privateLocation\", \u0026datadog.SyntheticsPrivateLocationArgs{\n\t\t\tDescription: pulumi.String(\"Description of the private location\"),\n\t\t\tName:        pulumi.String(\"First private location\"),\n\t\t\tTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"foo:bar\"),\n\t\t\t\tpulumi.String(\"env:test\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# Synthetics private locations can be imported using their string ID, e.g.\n\n```sh\n $ pulumi import datadog:index/syntheticsPrivateLocation:SyntheticsPrivateLocation bar pl:private-location-name-abcdef123456\n```\n\n ",
            "properties": {
                "config": {
                    "type": "string",
                    "description": "Configuration skeleton for the private location. See installation instructions of the private location on how to use this configuration.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the private location.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics private location name.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics private location.\n"
                }
            },
            "required": [
                "config",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the private location.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Synthetics private location name.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics private location.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsPrivateLocation resources.\n",
                "properties": {
                    "config": {
                        "type": "string",
                        "description": "Configuration skeleton for the private location. See installation instructions of the private location on how to use this configuration.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the private location.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Synthetics private location name.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your synthetics private location.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/syntheticsTest:SyntheticsTest": {
            "description": "Provides a Datadog synthetics test resource. This can be used to create and manage Datadog synthetics test.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Example Usage (Synthetics API test)\n// Create a new Datadog Synthetics API/HTTP test on https://www.example.org\nconst testApi = new datadog.SyntheticsTest(\"testApi\", {\n    type: \"api\",\n    subtype: \"http\",\n    requestDefinition: {\n        method: \"GET\",\n        url: \"https://www.example.org\",\n    },\n    requestHeaders: {\n        \"Content-Type\": \"application/json\",\n        Authentication: \"Token: 1234566789\",\n    },\n    assertions: [{\n        type: \"statusCode\",\n        operator: \"is\",\n        target: \"200\",\n    }],\n    locations: [\"aws:eu-central-1\"],\n    optionsList: {\n        tickEvery: 900,\n        retry: {\n            count: 2,\n            interval: 300,\n        },\n        monitorOptions: {\n            renotifyInterval: 100,\n        },\n    },\n    name: \"An API test on example.org\",\n    message: \"Notify @pagerduty\",\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    status: \"live\",\n});\n// Example Usage (Synthetics SSL test)\n// Create a new Datadog Synthetics API/SSL test on example.org\nconst testSsl = new datadog.SyntheticsTest(\"testSsl\", {\n    type: \"api\",\n    subtype: \"ssl\",\n    requestDefinition: {\n        host: \"example.org\",\n        port: 443,\n    },\n    assertions: [{\n        type: \"certificate\",\n        operator: \"isInMoreThan\",\n        target: 30,\n    }],\n    locations: [\"aws:eu-central-1\"],\n    optionsList: {\n        tickEvery: 900,\n        acceptSelfSigned: true,\n    },\n    name: \"An API test on example.org\",\n    message: \"Notify @pagerduty\",\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    status: \"live\",\n});\n// Example Usage (Synthetics TCP test)\n// Create a new Datadog Synthetics API/TCP test on example.org\nconst testTcp = new datadog.SyntheticsTest(\"testTcp\", {\n    type: \"api\",\n    subtype: \"tcp\",\n    requestDefinition: {\n        host: \"example.org\",\n        port: 443,\n    },\n    assertions: [{\n        type: \"responseTime\",\n        operator: \"lessThan\",\n        target: 2000,\n    }],\n    locations: [\"aws:eu-central-1\"],\n    optionsList: {\n        tickEvery: 900,\n    },\n    name: \"An API test on example.org\",\n    message: \"Notify @pagerduty\",\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    status: \"live\",\n});\n// Example Usage (Synthetics DNS test)\n// Create a new Datadog Synthetics API/DNS test on example.org\nconst testDns = new datadog.SyntheticsTest(\"testDns\", {\n    type: \"api\",\n    subtype: \"dns\",\n    requestDefinition: {\n        host: \"example.org\",\n    },\n    assertions: [{\n        type: \"recordSome\",\n        operator: \"is\",\n        property: \"A\",\n        target: \"0.0.0.0\",\n    }],\n    locations: [\"aws:eu-central-1\"],\n    optionsList: {\n        tickEvery: 900,\n    },\n    name: \"An API test on example.org\",\n    message: \"Notify @pagerduty\",\n    tags: [\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    status: \"live\",\n});\n// Example Usage (Synthetics Browser test)\n// Support for Synthetics Browser test steps is limited (see below)\n// Create a new Datadog Synthetics Browser test starting on https://www.example.org\nconst testBrowser = new datadog.SyntheticsTest(\"testBrowser\", {\n    type: \"browser\",\n    requestDefinition: {\n        method: \"GET\",\n        url: \"https://app.datadoghq.com\",\n    },\n    deviceIds: [\"laptop_large\"],\n    locations: [\"aws:eu-central-1\"],\n    optionsList: {\n        tickEvery: 3600,\n    },\n    name: \"A Browser test on example.org\",\n    message: \"Notify @qa\",\n    tags: [],\n    status: \"paused\",\n    steps: [{\n        name: \"Check current url\",\n        type: \"assertCurrentUrl\",\n        params: JSON.stringify({\n            check: \"contains\",\n            value: \"datadoghq\",\n        }),\n    }],\n    variables: [\n        {\n            type: \"text\",\n            name: \"MY_PATTERN_VAR\",\n            pattern: \"{{numeric(3)}}\",\n            example: \"597\",\n        },\n        {\n            type: \"email\",\n            name: \"MY_EMAIL_VAR\",\n            pattern: \"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\",\n            example: \"jd8-afe-ydv.4546132139@synthetics.dtdg.co\",\n        },\n        {\n            type: \"global\",\n            name: \"MY_GLOBAL_VAR\",\n            id: \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_datadog as datadog\n\n# Example Usage (Synthetics API test)\n# Create a new Datadog Synthetics API/HTTP test on https://www.example.org\ntest_api = datadog.SyntheticsTest(\"testApi\",\n    type=\"api\",\n    subtype=\"http\",\n    request_definition=datadog.SyntheticsTestRequestDefinitionArgs(\n        method=\"GET\",\n        url=\"https://www.example.org\",\n    ),\n    request_headers={\n        \"Content-Type\": \"application/json\",\n        \"Authentication\": \"Token: 1234566789\",\n    },\n    assertions=[{\n        \"type\": \"statusCode\",\n        \"operator\": \"is\",\n        \"target\": \"200\",\n    }],\n    locations=[\"aws:eu-central-1\"],\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        tick_every=900,\n        retry=datadog.SyntheticsTestOptionsListRetryArgs(\n            count=2,\n            interval=300,\n        ),\n        monitor_options=datadog.SyntheticsTestOptionsListMonitorOptionsArgs(\n            renotify_interval=100,\n        ),\n    ),\n    name=\"An API test on example.org\",\n    message=\"Notify @pagerduty\",\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    status=\"live\")\n# Example Usage (Synthetics SSL test)\n# Create a new Datadog Synthetics API/SSL test on example.org\ntest_ssl = datadog.SyntheticsTest(\"testSsl\",\n    type=\"api\",\n    subtype=\"ssl\",\n    request_definition=datadog.SyntheticsTestRequestDefinitionArgs(\n        host=\"example.org\",\n        port=443,\n    ),\n    assertions=[{\n        \"type\": \"certificate\",\n        \"operator\": \"isInMoreThan\",\n        \"target\": 30,\n    }],\n    locations=[\"aws:eu-central-1\"],\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        tick_every=900,\n        accept_self_signed=True,\n    ),\n    name=\"An API test on example.org\",\n    message=\"Notify @pagerduty\",\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    status=\"live\")\n# Example Usage (Synthetics TCP test)\n# Create a new Datadog Synthetics API/TCP test on example.org\ntest_tcp = datadog.SyntheticsTest(\"testTcp\",\n    type=\"api\",\n    subtype=\"tcp\",\n    request_definition=datadog.SyntheticsTestRequestDefinitionArgs(\n        host=\"example.org\",\n        port=443,\n    ),\n    assertions=[{\n        \"type\": \"responseTime\",\n        \"operator\": \"lessThan\",\n        \"target\": 2000,\n    }],\n    locations=[\"aws:eu-central-1\"],\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        tick_every=900,\n    ),\n    name=\"An API test on example.org\",\n    message=\"Notify @pagerduty\",\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    status=\"live\")\n# Example Usage (Synthetics DNS test)\n# Create a new Datadog Synthetics API/DNS test on example.org\ntest_dns = datadog.SyntheticsTest(\"testDns\",\n    type=\"api\",\n    subtype=\"dns\",\n    request_definition=datadog.SyntheticsTestRequestDefinitionArgs(\n        host=\"example.org\",\n    ),\n    assertions=[{\n        \"type\": \"recordSome\",\n        \"operator\": \"is\",\n        \"property\": \"A\",\n        \"target\": \"0.0.0.0\",\n    }],\n    locations=[\"aws:eu-central-1\"],\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        tick_every=900,\n    ),\n    name=\"An API test on example.org\",\n    message=\"Notify @pagerduty\",\n    tags=[\n        \"foo:bar\",\n        \"foo\",\n        \"env:test\",\n    ],\n    status=\"live\")\n# Example Usage (Synthetics Browser test)\n# Support for Synthetics Browser test steps is limited (see below)\n# Create a new Datadog Synthetics Browser test starting on https://www.example.org\ntest_browser = datadog.SyntheticsTest(\"testBrowser\",\n    type=\"browser\",\n    request_definition=datadog.SyntheticsTestRequestDefinitionArgs(\n        method=\"GET\",\n        url=\"https://app.datadoghq.com\",\n    ),\n    device_ids=[\"laptop_large\"],\n    locations=[\"aws:eu-central-1\"],\n    options_list=datadog.SyntheticsTestOptionsListArgs(\n        tick_every=3600,\n    ),\n    name=\"A Browser test on example.org\",\n    message=\"Notify @qa\",\n    tags=[],\n    status=\"paused\",\n    steps=[datadog.SyntheticsTestStepArgs(\n        name=\"Check current url\",\n        type=\"assertCurrentUrl\",\n        params=json.dumps({\n            \"check\": \"contains\",\n            \"value\": \"datadoghq\",\n        }),\n    )],\n    variables=[\n        datadog.SyntheticsTestVariableArgs(\n            type=\"text\",\n            name=\"MY_PATTERN_VAR\",\n            pattern=\"{{numeric(3)}}\",\n            example=\"597\",\n        ),\n        datadog.SyntheticsTestVariableArgs(\n            type=\"email\",\n            name=\"MY_EMAIL_VAR\",\n            pattern=\"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\",\n            example=\"jd8-afe-ydv.4546132139@synthetics.dtdg.co\",\n        ),\n        datadog.SyntheticsTestVariableArgs(\n            type=\"global\",\n            name=\"MY_GLOBAL_VAR\",\n            id=\"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Text.Json;\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Example Usage (Synthetics API test)\n        // Create a new Datadog Synthetics API/HTTP test on https://www.example.org\n        var testApi = new Datadog.SyntheticsTest(\"testApi\", new Datadog.SyntheticsTestArgs\n        {\n            Type = \"api\",\n            Subtype = \"http\",\n            RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n            {\n                Method = \"GET\",\n                Url = \"https://www.example.org\",\n            },\n            RequestHeaders = \n            {\n                { \"Content-Type\", \"application/json\" },\n                { \"Authentication\", \"Token: 1234566789\" },\n            },\n            Assertions = \n            {\n                \n                {\n                    { \"type\", \"statusCode\" },\n                    { \"operator\", \"is\" },\n                    { \"target\", \"200\" },\n                },\n            },\n            Locations = \n            {\n                \"aws:eu-central-1\",\n            },\n            OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n            {\n                TickEvery = 900,\n                Retry = new Datadog.Inputs.SyntheticsTestOptionsListRetryArgs\n                {\n                    Count = 2,\n                    Interval = 300,\n                },\n                MonitorOptions = new Datadog.Inputs.SyntheticsTestOptionsListMonitorOptionsArgs\n                {\n                    RenotifyInterval = 100,\n                },\n            },\n            Name = \"An API test on example.org\",\n            Message = \"Notify @pagerduty\",\n            Tags = \n            {\n                \"foo:bar\",\n                \"foo\",\n                \"env:test\",\n            },\n            Status = \"live\",\n        });\n        // Example Usage (Synthetics SSL test)\n        // Create a new Datadog Synthetics API/SSL test on example.org\n        var testSsl = new Datadog.SyntheticsTest(\"testSsl\", new Datadog.SyntheticsTestArgs\n        {\n            Type = \"api\",\n            Subtype = \"ssl\",\n            RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n            {\n                Host = \"example.org\",\n                Port = 443,\n            },\n            Assertions = \n            {\n                \n                {\n                    { \"type\", \"certificate\" },\n                    { \"operator\", \"isInMoreThan\" },\n                    { \"target\", 30 },\n                },\n            },\n            Locations = \n            {\n                \"aws:eu-central-1\",\n            },\n            OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n            {\n                TickEvery = 900,\n                AcceptSelfSigned = true,\n            },\n            Name = \"An API test on example.org\",\n            Message = \"Notify @pagerduty\",\n            Tags = \n            {\n                \"foo:bar\",\n                \"foo\",\n                \"env:test\",\n            },\n            Status = \"live\",\n        });\n        // Example Usage (Synthetics TCP test)\n        // Create a new Datadog Synthetics API/TCP test on example.org\n        var testTcp = new Datadog.SyntheticsTest(\"testTcp\", new Datadog.SyntheticsTestArgs\n        {\n            Type = \"api\",\n            Subtype = \"tcp\",\n            RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n            {\n                Host = \"example.org\",\n                Port = 443,\n            },\n            Assertions = \n            {\n                \n                {\n                    { \"type\", \"responseTime\" },\n                    { \"operator\", \"lessThan\" },\n                    { \"target\", 2000 },\n                },\n            },\n            Locations = \n            {\n                \"aws:eu-central-1\",\n            },\n            OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n            {\n                TickEvery = 900,\n            },\n            Name = \"An API test on example.org\",\n            Message = \"Notify @pagerduty\",\n            Tags = \n            {\n                \"foo:bar\",\n                \"foo\",\n                \"env:test\",\n            },\n            Status = \"live\",\n        });\n        // Example Usage (Synthetics DNS test)\n        // Create a new Datadog Synthetics API/DNS test on example.org\n        var testDns = new Datadog.SyntheticsTest(\"testDns\", new Datadog.SyntheticsTestArgs\n        {\n            Type = \"api\",\n            Subtype = \"dns\",\n            RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n            {\n                Host = \"example.org\",\n            },\n            Assertions = \n            {\n                \n                {\n                    { \"type\", \"recordSome\" },\n                    { \"operator\", \"is\" },\n                    { \"property\", \"A\" },\n                    { \"target\", \"0.0.0.0\" },\n                },\n            },\n            Locations = \n            {\n                \"aws:eu-central-1\",\n            },\n            OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n            {\n                TickEvery = 900,\n            },\n            Name = \"An API test on example.org\",\n            Message = \"Notify @pagerduty\",\n            Tags = \n            {\n                \"foo:bar\",\n                \"foo\",\n                \"env:test\",\n            },\n            Status = \"live\",\n        });\n        // Example Usage (Synthetics Browser test)\n        // Support for Synthetics Browser test steps is limited (see below)\n        // Create a new Datadog Synthetics Browser test starting on https://www.example.org\n        var testBrowser = new Datadog.SyntheticsTest(\"testBrowser\", new Datadog.SyntheticsTestArgs\n        {\n            Type = \"browser\",\n            RequestDefinition = new Datadog.Inputs.SyntheticsTestRequestDefinitionArgs\n            {\n                Method = \"GET\",\n                Url = \"https://app.datadoghq.com\",\n            },\n            DeviceIds = \n            {\n                \"laptop_large\",\n            },\n            Locations = \n            {\n                \"aws:eu-central-1\",\n            },\n            OptionsList = new Datadog.Inputs.SyntheticsTestOptionsListArgs\n            {\n                TickEvery = 3600,\n            },\n            Name = \"A Browser test on example.org\",\n            Message = \"Notify @qa\",\n            Tags = {},\n            Status = \"paused\",\n            Steps = \n            {\n                new Datadog.Inputs.SyntheticsTestStepArgs\n                {\n                    Name = \"Check current url\",\n                    Type = \"assertCurrentUrl\",\n                    Params = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                    {\n                        { \"check\", \"contains\" },\n                        { \"value\", \"datadoghq\" },\n                    }),\n                },\n            },\n            Variables = \n            {\n                new Datadog.Inputs.SyntheticsTestVariableArgs\n                {\n                    Type = \"text\",\n                    Name = \"MY_PATTERN_VAR\",\n                    Pattern = \"{{numeric(3)}}\",\n                    Example = \"597\",\n                },\n                new Datadog.Inputs.SyntheticsTestVariableArgs\n                {\n                    Type = \"email\",\n                    Name = \"MY_EMAIL_VAR\",\n                    Pattern = \"jd8-afe-ydv.{{ numeric(10) }}@synthetics.dtdg.co\",\n                    Example = \"jd8-afe-ydv.4546132139@synthetics.dtdg.co\",\n                },\n                new Datadog.Inputs.SyntheticsTestVariableArgs\n                {\n                    Type = \"global\",\n                    Name = \"MY_GLOBAL_VAR\",\n                    Id = \"76636cd1-82e2-4aeb-9cfe-51366a8198a2\",\n                },\n            },\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# Synthetics tests can be imported using their public string ID, e.g.\n\n```sh\n $ pulumi import datadog:index/syntheticsTest:SyntheticsTest fizz abc-123-xyz\n```\n\n ",
            "properties": {
                "apiSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                    },
                    "description": "Steps for multistep api tests\n"
                },
                "assertions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "description": "List of assertions. **Deprecated.** Define `assertion` blocks instead.\n",
                    "deprecationMessage": "Define `assertion` blocks instead."
                },
                "browserSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                    },
                    "description": "Steps for browser tests.\n"
                },
                "browserVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                    },
                    "description": "Variables used for a browser test steps. Multiple `variable` blocks are allowed with the structure below.\n"
                },
                "configVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                    },
                    "description": "Variables used for the test configuration. Multiple `config_variable` blocks are allowed with the structure below.\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array with the different device IDs used to run the test. Allowed enum values: `laptop_large`, `tablet`, `mobile_small` (only available for `browser` tests).\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations used to run the test. Refer to [Datadog documentation](https://docs.datadoghq.com/synthetics/api_test/#request) for available locations (e.g. `aws:eu-central-1`).\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same `@username` notation as events.\n"
                },
                "monitorId": {
                    "type": "integer",
                    "description": "ID of the monitor associated with the Datadog synthetics test.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog synthetics test.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptions:SyntheticsTestOptions",
                    "description": "**Deprecated.** Define `options_list` blocks instead.\n",
                    "deprecationMessage": "Define `options_list` blocks instead."
                },
                "optionsList": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                },
                "request": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequest:SyntheticsTestRequest",
                    "description": "The synthetics test request. Required if `type = \"api\"`. **Deprecated.** Define `request_definition` list with one element instead.\n",
                    "deprecationMessage": "Define `request_definition` list with one element instead."
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                    "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                    "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure\nbelow.\n"
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                    "description": "The synthetics test request. Required if `type = \"api\"`.\n"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Header name and value map.\n"
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Query arguments name and value map.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Define whether you want to start (`live`) or pause (`paused`) a Synthetic test. Allowed enum values: `live`, `paused`\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestStep:SyntheticsTestStep"
                    },
                    "description": "Steps for browser tests. **Deprecated.** Define `browser_step` blocks instead.\n",
                    "deprecationMessage": "Define `browser_step` blocks instead."
                },
                "subtype": {
                    "type": "string",
                    "description": "When `type` is `api`, choose from `http`, `ssl`, `tcp`, `dns` or `multi`. Defaults to `http`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list (`[]`).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Synthetics test type (`api` or `browser`).\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestVariable:SyntheticsTestVariable"
                    },
                    "description": "Variables used for a browser test steps. Multiple `browser_variable` blocks are allowed with the structure below. **Deprecated.** Define `browser_variable` blocks instead.\n",
                    "deprecationMessage": "Define `browser_variable` blocks instead."
                }
            },
            "required": [
                "locations",
                "monitorId",
                "name",
                "status",
                "type"
            ],
            "inputProperties": {
                "apiSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                    },
                    "description": "Steps for multistep api tests\n"
                },
                "assertions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "description": "List of assertions. **Deprecated.** Define `assertion` blocks instead.\n",
                    "deprecationMessage": "Define `assertion` blocks instead."
                },
                "browserSteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                    },
                    "description": "Steps for browser tests.\n"
                },
                "browserVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                    },
                    "description": "Variables used for a browser test steps. Multiple `variable` blocks are allowed with the structure below.\n"
                },
                "configVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                    },
                    "description": "Variables used for the test configuration. Multiple `config_variable` blocks are allowed with the structure below.\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array with the different device IDs used to run the test. Allowed enum values: `laptop_large`, `tablet`, `mobile_small` (only available for `browser` tests).\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of locations used to run the test. Refer to [Datadog documentation](https://docs.datadoghq.com/synthetics/api_test/#request) for available locations (e.g. `aws:eu-central-1`).\n"
                },
                "message": {
                    "type": "string",
                    "description": "A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same `@username` notation as events.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Datadog synthetics test.\n"
                },
                "options": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptions:SyntheticsTestOptions",
                    "description": "**Deprecated.** Define `options_list` blocks instead.\n",
                    "deprecationMessage": "Define `options_list` blocks instead."
                },
                "optionsList": {
                    "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                },
                "request": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequest:SyntheticsTestRequest",
                    "description": "The synthetics test request. Required if `type = \"api\"`. **Deprecated.** Define `request_definition` list with one element instead.\n",
                    "deprecationMessage": "Define `request_definition` list with one element instead."
                },
                "requestBasicauth": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                    "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n"
                },
                "requestClientCertificate": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                    "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure\nbelow.\n"
                },
                "requestDefinition": {
                    "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                    "description": "The synthetics test request. Required if `type = \"api\"`.\n"
                },
                "requestHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Header name and value map.\n"
                },
                "requestQuery": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Query arguments name and value map.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Define whether you want to start (`live`) or pause (`paused`) a Synthetic test. Allowed enum values: `live`, `paused`\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestStep:SyntheticsTestStep"
                    },
                    "description": "Steps for browser tests. **Deprecated.** Define `browser_step` blocks instead.\n",
                    "deprecationMessage": "Define `browser_step` blocks instead."
                },
                "subtype": {
                    "type": "string",
                    "description": "When `type` is `api`, choose from `http`, `ssl`, `tcp`, `dns` or `multi`. Defaults to `http`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list (`[]`).\n"
                },
                "type": {
                    "type": "string",
                    "description": "Synthetics test type (`api` or `browser`).\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/SyntheticsTestVariable:SyntheticsTestVariable"
                    },
                    "description": "Variables used for a browser test steps. Multiple `browser_variable` blocks are allowed with the structure below. **Deprecated.** Define `browser_variable` blocks instead.\n",
                    "deprecationMessage": "Define `browser_variable` blocks instead."
                }
            },
            "requiredInputs": [
                "locations",
                "name",
                "status",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyntheticsTest resources.\n",
                "properties": {
                    "apiSteps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestApiStep:SyntheticsTestApiStep"
                        },
                        "description": "Steps for multistep api tests\n"
                    },
                    "assertions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "pulumi.json#/Any"
                            }
                        },
                        "description": "List of assertions. **Deprecated.** Define `assertion` blocks instead.\n",
                        "deprecationMessage": "Define `assertion` blocks instead."
                    },
                    "browserSteps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestBrowserStep:SyntheticsTestBrowserStep"
                        },
                        "description": "Steps for browser tests.\n"
                    },
                    "browserVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestBrowserVariable:SyntheticsTestBrowserVariable"
                        },
                        "description": "Variables used for a browser test steps. Multiple `variable` blocks are allowed with the structure below.\n"
                    },
                    "configVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestConfigVariable:SyntheticsTestConfigVariable"
                        },
                        "description": "Variables used for the test configuration. Multiple `config_variable` blocks are allowed with the structure below.\n"
                    },
                    "deviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array with the different device IDs used to run the test. Allowed enum values: `laptop_large`, `tablet`, `mobile_small` (only available for `browser` tests).\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of locations used to run the test. Refer to [Datadog documentation](https://docs.datadoghq.com/synthetics/api_test/#request) for available locations (e.g. `aws:eu-central-1`).\n"
                    },
                    "message": {
                        "type": "string",
                        "description": "A message to include with notifications for this synthetics test. Email notifications can be sent to specific users by using the same `@username` notation as events.\n"
                    },
                    "monitorId": {
                        "type": "integer",
                        "description": "ID of the monitor associated with the Datadog synthetics test.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Datadog synthetics test.\n"
                    },
                    "options": {
                        "$ref": "#/types/datadog:index/SyntheticsTestOptions:SyntheticsTestOptions",
                        "description": "**Deprecated.** Define `options_list` blocks instead.\n",
                        "deprecationMessage": "Define `options_list` blocks instead."
                    },
                    "optionsList": {
                        "$ref": "#/types/datadog:index/SyntheticsTestOptionsList:SyntheticsTestOptionsList"
                    },
                    "request": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequest:SyntheticsTestRequest",
                        "description": "The synthetics test request. Required if `type = \"api\"`. **Deprecated.** Define `request_definition` list with one element instead.\n",
                        "deprecationMessage": "Define `request_definition` list with one element instead."
                    },
                    "requestBasicauth": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestBasicauth:SyntheticsTestRequestBasicauth",
                        "description": "The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.\n"
                    },
                    "requestClientCertificate": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestClientCertificate:SyntheticsTestRequestClientCertificate",
                        "description": "Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure\nbelow.\n"
                    },
                    "requestDefinition": {
                        "$ref": "#/types/datadog:index/SyntheticsTestRequestDefinition:SyntheticsTestRequestDefinition",
                        "description": "The synthetics test request. Required if `type = \"api\"`.\n"
                    },
                    "requestHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Header name and value map.\n"
                    },
                    "requestQuery": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Query arguments name and value map.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Define whether you want to start (`live`) or pause (`paused`) a Synthetic test. Allowed enum values: `live`, `paused`\n"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestStep:SyntheticsTestStep"
                        },
                        "description": "Steps for browser tests. **Deprecated.** Define `browser_step` blocks instead.\n",
                        "deprecationMessage": "Define `browser_step` blocks instead."
                    },
                    "subtype": {
                        "type": "string",
                        "description": "When `type` is `api`, choose from `http`, `ssl`, `tcp`, `dns` or `multi`. Defaults to `http`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to associate with your synthetics test. This can help you categorize and filter tests in the manage synthetics page of the UI. Default is an empty list (`[]`).\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Synthetics test type (`api` or `browser`).\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/SyntheticsTestVariable:SyntheticsTestVariable"
                        },
                        "description": "Variables used for a browser test steps. Multiple `browser_variable` blocks are allowed with the structure below. **Deprecated.** Define `browser_variable` blocks instead.\n",
                        "deprecationMessage": "Define `browser_variable` blocks instead."
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/timeBoard:TimeBoard": {
            "description": "\n\n\n## Import\n\nTimeboards can be imported using their numeric ID, e.g.\n\n```sh\n $ pulumi import datadog:index/timeBoard:TimeBoard my_service_timeboard 2081\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the dashboard's content.\n"
                },
                "graphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraph:TimeBoardGraph"
                    },
                    "description": "A list of graph definitions.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "The read-only status of the timeboard. Default is false.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The name of the dashboard.\n"
                }
            },
            "required": [
                "description",
                "graphs",
                "title"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the dashboard's content.\n"
                },
                "graphs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardGraph:TimeBoardGraph"
                    },
                    "description": "A list of graph definitions.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "The read-only status of the timeboard. Default is false.\n"
                },
                "templateVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:index/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                    },
                    "description": "A list of template variables for using Dashboard templating.\n"
                },
                "title": {
                    "type": "string",
                    "description": "The name of the dashboard.\n"
                }
            },
            "requiredInputs": [
                "description",
                "graphs",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TimeBoard resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of the dashboard's content.\n"
                    },
                    "graphs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/TimeBoardGraph:TimeBoardGraph"
                        },
                        "description": "A list of graph definitions.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "The read-only status of the timeboard. Default is false.\n"
                    },
                    "templateVariables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/TimeBoardTemplateVariable:TimeBoardTemplateVariable"
                        },
                        "description": "A list of template variables for using Dashboard templating.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The name of the dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:index/user:User": {
            "description": "Provides a Datadog user resource. This can be used to create and manage Datadog users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst roRole = datadog.getRole({\n    filter: \"Datadog Read Only Role\",\n});\n// Create a new Datadog user\nconst foo = new datadog.User(\"foo\", {\n    email: \"new@example.com\",\n    roles: [roRole.then(roRole =\u003e roRole.id)],\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\nro_role = datadog.get_role(filter=\"Datadog Read Only Role\")\n# Create a new Datadog user\nfoo = datadog.User(\"foo\",\n    email=\"new@example.com\",\n    roles=[ro_role.id])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var roRole = Output.Create(Datadog.GetRole.InvokeAsync(new Datadog.GetRoleArgs\n        {\n            Filter = \"Datadog Read Only Role\",\n        }));\n        // Create a new Datadog user\n        var foo = new Datadog.User(\"foo\", new Datadog.UserArgs\n        {\n            Email = \"new@example.com\",\n            Roles = \n            {\n                roRole.Apply(roRole =\u003e roRole.Id),\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\troRole, err := datadog.LookupRole(ctx, \u0026datadog.LookupRoleArgs{\n\t\t\tFilter: \"Datadog Read Only Role\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = datadog.NewUser(ctx, \"foo\", \u0026datadog.UserArgs{\n\t\t\tEmail: pulumi.String(\"new@example.com\"),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tpulumi.String(roRole.Id),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import datadog:index/user:User example_user 6f1b44c0-30b2-11eb-86bc-279f7c1ebaa4\n```\n\n ",
            "properties": {
                "accessRole": {
                    "type": "string",
                    "description": "Role description for user. Can be `st` (standard user), `adm` (admin user) or `ro` (read-only user). Default is `st`. `access_role` is ignored for new users created with this resource. New users have to use the `roles` attribute. **Deprecated.** This parameter is replaced by `roles` and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the user is disabled.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for user.\n"
                },
                "handle": {
                    "type": "string",
                    "description": "The user handle, must be a valid email. **Deprecated.** This parameter is deprecated and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is deprecated and will be removed from the next Major version."
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "Whether the user is an administrator. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan. **Deprecated.** This parameter is replaced by `roles` and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                },
                "name": {
                    "type": "string",
                    "description": "Name for user.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role description for user. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan. **Deprecated.** This parameter was removed from the API and has no effect.\n",
                    "deprecationMessage": "This parameter was removed from the API and has no effect."
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list a role IDs to assign to the user.\n"
                },
                "sendUserInvitation": {
                    "type": "boolean",
                    "description": "Whether an invitation email should be sent when the user is created.\n"
                },
                "userInvitationId": {
                    "type": "string",
                    "description": "The ID of the user invitation that was sent when creating the user.\n"
                },
                "verified": {
                    "type": "boolean",
                    "description": "Returns `true` if the user is verified.\n"
                }
            },
            "required": [
                "email",
                "isAdmin",
                "userInvitationId",
                "verified"
            ],
            "inputProperties": {
                "accessRole": {
                    "type": "string",
                    "description": "Role description for user. Can be `st` (standard user), `adm` (admin user) or `ro` (read-only user). Default is `st`. `access_role` is ignored for new users created with this resource. New users have to use the `roles` attribute. **Deprecated.** This parameter is replaced by `roles` and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Whether the user is disabled.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for user.\n"
                },
                "handle": {
                    "type": "string",
                    "description": "The user handle, must be a valid email. **Deprecated.** This parameter is deprecated and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is deprecated and will be removed from the next Major version."
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "Whether the user is an administrator. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan. **Deprecated.** This parameter is replaced by `roles` and will be removed from the next Major version.\n",
                    "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                },
                "name": {
                    "type": "string",
                    "description": "Name for user.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role description for user. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan. **Deprecated.** This parameter was removed from the API and has no effect.\n",
                    "deprecationMessage": "This parameter was removed from the API and has no effect."
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list a role IDs to assign to the user.\n"
                },
                "sendUserInvitation": {
                    "type": "boolean",
                    "description": "Whether an invitation email should be sent when the user is created.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "accessRole": {
                        "type": "string",
                        "description": "Role description for user. Can be `st` (standard user), `adm` (admin user) or `ro` (read-only user). Default is `st`. `access_role` is ignored for new users created with this resource. New users have to use the `roles` attribute. **Deprecated.** This parameter is replaced by `roles` and will be removed from the next Major version.\n",
                        "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Whether the user is disabled.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address for user.\n"
                    },
                    "handle": {
                        "type": "string",
                        "description": "The user handle, must be a valid email. **Deprecated.** This parameter is deprecated and will be removed from the next Major version.\n",
                        "deprecationMessage": "This parameter is deprecated and will be removed from the next Major version."
                    },
                    "isAdmin": {
                        "type": "boolean",
                        "description": "Whether the user is an administrator. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan. **Deprecated.** This parameter is replaced by `roles` and will be removed from the next Major version.\n",
                        "deprecationMessage": "This parameter is replaced by `roles` and will be removed from the next Major version."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for user.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "Role description for user. Warning: the corresponding query parameter is ignored by the Datadog API, thus the argument would always trigger an execution plan. **Deprecated.** This parameter was removed from the API and has no effect.\n",
                        "deprecationMessage": "This parameter was removed from the API and has no effect."
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list a role IDs to assign to the user.\n"
                    },
                    "sendUserInvitation": {
                        "type": "boolean",
                        "description": "Whether an invitation email should be sent when the user is created.\n"
                    },
                    "userInvitationId": {
                        "type": "string",
                        "description": "The ID of the user invitation that was sent when creating the user.\n"
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "Returns `true` if the user is verified.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/integration:Integration": {
            "description": "Provides a Datadog - PagerDuty resource. This can be used to create and manage Datadog - PagerDuty integration. See also [PagerDuty Integration Guide](https://www.pagerduty.com/docs/guides/datadog-integration-guide/).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\n// Note: Until terraform-provider-datadog version 2.1.0, service objects under the services key were specified inside the datadog_integration_pagerduty resource. This was incompatible with multi-configuration-file setups, where users wanted to have individual service objects controlled from different Terraform configuration files. The recommended approach now is specifying service objects as individual resources using datadog_integration_pagerduty_service_object and adding individual_services = true to the datadog_integration_pagerduty object.\n// Services as Individual Resources\nconst pdIntegration = new datadog.pagerduty.Integration(\"pdIntegration\", {\n    individualServices: true,\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n    apiToken: \"38457822378273432587234242874\",\n});\nconst testingFooServiceObject = new datadog.pagerduty.ServiceObject(\"testingFooServiceObject\", {\n    serviceName: \"testing_foo\",\n    serviceKey: \"9876543210123456789\",\n}, {\n    dependsOn: [\"datadog_integration_pagerduty.pd\"],\n});\nconst testingBarServiceObject = new datadog.pagerduty.ServiceObject(\"testingBarServiceObject\", {\n    serviceName: \"testing_bar\",\n    serviceKey: \"54321098765432109876\",\n}, {\n    dependsOn: [\"datadog_integration_pagerduty.pd\"],\n});\n// Inline Services\n// With Terraform \u003c 0.12.0 (terraform-provider-datadog \u003c 1.9.0):\n// Create a new Datadog - PagerDuty integration\nconst pdDatadogPagerduty_integrationIntegration = new datadog.pagerduty.Integration(\"pdDatadogPagerduty/integrationIntegration\", {\n    services: [\n        {\n            serviceName: \"testing_foo\",\n            serviceKey: \"9876543210123456789\",\n        },\n        {\n            serviceName: \"testing_bar\",\n            serviceKey: \"54321098765432109876\",\n        },\n    ],\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n    apiToken: \"38457822378273432587234242874\",\n});\nconst pdServices = {\n    testing_foo: \"9876543210123456789\",\n    testing_bar: \"54321098765432109876\",\n};\n// Create a new Datadog - PagerDuty integration\nconst pdDatadogPagerduty_integrationIntegration1 = new datadog.pagerduty.Integration(\"pdDatadogPagerduty/integrationIntegration1\", {\n    dynamic: [{\n        forEach: pdServices,\n        content: [{\n            serviceName: services.key,\n            serviceKey: services.value,\n        }],\n    }],\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n    apiToken: \"38457822378273432587234242874\",\n});\n// Migrating from Inline Services to Individual Resources\n// Migrating from usage of inline services to individual resources is very simple. The following example shows how to convert an existing inline services configuration to configuration using individual resources. Doing analogous change and running terraform apply after every step is all that's necessary to migrate.\n// First step - this is what the configuration looked like initially\nconst myPdServices = {\n    testing_foo: \"9876543210123456789\",\n    testing_bar: \"54321098765432109876\",\n};\n// Create a new Datadog - PagerDuty integration\nconst pdDatadogPagerduty_integrationIntegration2 = new datadog.pagerduty.Integration(\"pdDatadogPagerduty/integrationIntegration2\", {\n    dynamic: [{\n        forEach: pdServices,\n        content: [{\n            serviceName: services.key,\n            serviceKey: services.value,\n        }],\n    }],\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n    apiToken: \"38457822378273432587234242874\",\n});\n// Second step - this will remove the inline-defined service objects\n// Note that during this step, `individual_services` must not be defined\nconst pdDatadogPagerduty_integrationIntegration3 = new datadog.pagerduty.Integration(\"pdDatadogPagerduty/integrationIntegration3\", {\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n    apiToken: \"38457822378273432587234242874\",\n});\n// Third step - this will reintroduce the service objects as individual resources\nconst pdPagerduty_integrationIntegration = new datadog.pagerduty.Integration(\"pdPagerduty/integrationIntegration\", {\n    individualServices: true,\n    schedules: [\n        \"https://ddog.pagerduty.com/schedules/X123VF\",\n        \"https://ddog.pagerduty.com/schedules/X321XX\",\n    ],\n    subdomain: \"ddog\",\n    apiToken: \"38457822378273432587234242874\",\n});\nconst testingFooPagerduty_serviceObjectServiceObject = new datadog.pagerduty.ServiceObject(\"testingFooPagerduty/serviceObjectServiceObject\", {\n    serviceName: \"testing_foo\",\n    serviceKey: \"9876543210123456789\",\n}, {\n    dependsOn: [\"datadog_integration_pagerduty.pd\"],\n});\nconst testingBarPagerduty_serviceObjectServiceObject = new datadog.pagerduty.ServiceObject(\"testingBarPagerduty/serviceObjectServiceObject\", {\n    serviceName: \"testing_bar\",\n    serviceKey: \"54321098765432109876\",\n}, {\n    dependsOn: [\"datadog_integration_pagerduty.pd\"],\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "Your PagerDuty API token.\n"
                },
                "individualServices": {
                    "type": "boolean",
                    "description": "Boolean to specify whether or not individual service objects specified by\n[datadog_integration_pagerduty_service_object](https://registry.terraform.io/providers/DataDog/datadog/latest/docs/resources/integration_pagerduty_service_object)\nresource are to be used. Mutually exclusive with `services` key.\n"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of your schedule URLs.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                    },
                    "description": "A list of service names and service keys. **Deprecated.** set \"individual*services\" to true and use datadog*pagerduty*integration*service_object\n",
                    "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "required": [
                "subdomain"
            ],
            "inputProperties": {
                "apiToken": {
                    "type": "string",
                    "description": "Your PagerDuty API token.\n"
                },
                "individualServices": {
                    "type": "boolean",
                    "description": "Boolean to specify whether or not individual service objects specified by\n[datadog_integration_pagerduty_service_object](https://registry.terraform.io/providers/DataDog/datadog/latest/docs/resources/integration_pagerduty_service_object)\nresource are to be used. Mutually exclusive with `services` key.\n"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of your schedule URLs.\n"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                    },
                    "description": "A list of service names and service keys. **Deprecated.** set \"individual*services\" to true and use datadog*pagerduty*integration*service_object\n",
                    "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Your PagerDuty account’s personalized subdomain name.\n"
                }
            },
            "requiredInputs": [
                "subdomain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "apiToken": {
                        "type": "string",
                        "description": "Your PagerDuty API token.\n"
                    },
                    "individualServices": {
                        "type": "boolean",
                        "description": "Boolean to specify whether or not individual service objects specified by\n[datadog_integration_pagerduty_service_object](https://registry.terraform.io/providers/DataDog/datadog/latest/docs/resources/integration_pagerduty_service_object)\nresource are to be used. Mutually exclusive with `services` key.\n"
                    },
                    "schedules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of your schedule URLs.\n"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:pagerduty/IntegrationService:IntegrationService"
                        },
                        "description": "A list of service names and service keys. **Deprecated.** set \"individual*services\" to true and use datadog*pagerduty*integration*service_object\n",
                        "deprecationMessage": "set \"individual_services\" to true and use datadog_pagerduty_integration_service_object"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Your PagerDuty account’s personalized subdomain name.\n"
                    }
                },
                "type": "object"
            }
        },
        "datadog:pagerduty/serviceObject:ServiceObject": {
            "description": "Provides access to individual Service Objects of Datadog - PagerDuty integrations. Note that the Datadog - PagerDuty integration must be activated in the Datadog UI in order for this resource to be usable.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst testingFoo = new datadog.pagerduty.ServiceObject(\"testing_foo\", {\n    serviceKey: \"9876543210123456789\",\n    serviceName: \"testing_foo\",\n});\nconst testingBar = new datadog.pagerduty.ServiceObject(\"testing_bar\", {\n    serviceKey: \"54321098765432109876\",\n    serviceName: \"testing_bar\",\n});\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntesting_foo = datadog.pagerduty.ServiceObject(\"testingFoo\",\n    service_key=\"9876543210123456789\",\n    service_name=\"testing_foo\")\ntesting_bar = datadog.pagerduty.ServiceObject(\"testingBar\",\n    service_key=\"54321098765432109876\",\n    service_name=\"testing_bar\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var testingFoo = new Datadog.PagerDuty.ServiceObject(\"testingFoo\", new Datadog.PagerDuty.ServiceObjectArgs\n        {\n            ServiceKey = \"9876543210123456789\",\n            ServiceName = \"testing_foo\",\n        });\n        var testingBar = new Datadog.PagerDuty.ServiceObject(\"testingBar\", new Datadog.PagerDuty.ServiceObjectArgs\n        {\n            ServiceKey = \"54321098765432109876\",\n            ServiceName = \"testing_bar\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog/pagerduty\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := pagerduty.NewServiceObject(ctx, \"testingFoo\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"9876543210123456789\"),\n\t\t\tServiceName: pulumi.String(\"testing_foo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = pagerduty.NewServiceObject(ctx, \"testingBar\", \u0026pagerduty.ServiceObjectArgs{\n\t\t\tServiceKey:  pulumi.String(\"54321098765432109876\"),\n\t\t\tServiceName: pulumi.String(\"testing_bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "serviceKey": {
                    "type": "string",
                    "description": "Your Service name associated service key in PagerDuty. Note: Since the Datadog API never returns service keys, it is\nimpossible to detect [drifts](https://www.hashicorp.com/blog/detecting-and-managing-drift-with-terraform). The best way\nto solve a drift is to manually mark the Service Object resource with [terraform\ntaint](https://www.terraform.io/docs/commands/taint.html) to have it destroyed and recreated.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Your Service name in PagerDuty.\n"
                }
            },
            "required": [
                "serviceKey",
                "serviceName"
            ],
            "inputProperties": {
                "serviceKey": {
                    "type": "string",
                    "description": "Your Service name associated service key in PagerDuty. Note: Since the Datadog API never returns service keys, it is\nimpossible to detect [drifts](https://www.hashicorp.com/blog/detecting-and-managing-drift-with-terraform). The best way\nto solve a drift is to manually mark the Service Object resource with [terraform\ntaint](https://www.terraform.io/docs/commands/taint.html) to have it destroyed and recreated.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Your Service name in PagerDuty.\n"
                }
            },
            "requiredInputs": [
                "serviceKey",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceObject resources.\n",
                "properties": {
                    "serviceKey": {
                        "type": "string",
                        "description": "Your Service name associated service key in PagerDuty. Note: Since the Datadog API never returns service keys, it is\nimpossible to detect [drifts](https://www.hashicorp.com/blog/detecting-and-managing-drift-with-terraform). The best way\nto solve a drift is to manually mark the Service Object resource with [terraform\ntaint](https://www.terraform.io/docs/commands/taint.html) to have it destroyed and recreated.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Your Service name in PagerDuty.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "datadog:index/getDashboard:getDashboard": {
            "description": "Use this data source to retrieve information about an existing dashboard, for use in other resources. In particular, it can be used in a monitor message to link to a specific dashboard.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = pulumi.output(datadog.getDashboard({\n    name: \"My super dashboard\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_dashboard(name=\"My super dashboard\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Datadog.GetDashboard.InvokeAsync(new Datadog.GetDashboardArgs\n        {\n            Name = \"My super dashboard\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupDashboard(ctx, \u0026datadog.LookupDashboardArgs{\n\t\t\tName: \"My super dashboard\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDashboard.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The dashboard name to search for. Must only match one dashboard.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDashboard.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "title",
                    "url",
                    "id"
                ]
            }
        },
        "datadog:index/getDashboardList:getDashboardList": {
            "description": "Use this data source to retrieve information about an existing dashboard list, for use in other resources. In particular, it can be used in a dashboard to register it in the list.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = pulumi.output(datadog.getDashboardList({\n    name: \"My super list\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_dashboard_list(name=\"My super list\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Datadog.GetDashboardList.InvokeAsync(new Datadog.GetDashboardListArgs\n        {\n            Name = \"My super list\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupDashboardList(ctx, \u0026datadog.LookupDashboardListArgs{\n\t\t\tName: \"My super list\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDashboardList.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A dashboard list name to limit the search.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDashboardList.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "datadog:index/getIpRanges:getIpRanges": {
            "description": "Use this data source to retrieve information about Datadog's IP addresses.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = pulumi.output(datadog.getIpRanges({ async: true }));\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_ip_ranges()\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Datadog.GetIpRanges.InvokeAsync());\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetIpRanges(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getIpRanges.\n",
                "properties": {
                    "agentsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "agentsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apiIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apiIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apmIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "apmIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "logsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "logsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "processIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "processIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "syntheticsIpv4ByLocation": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "syntheticsIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "syntheticsIpv6ByLocation": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "syntheticsIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webhooksIpv4s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "webhooksIpv6s": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "agentsIpv4s",
                    "agentsIpv6s",
                    "apiIpv4s",
                    "apiIpv6s",
                    "apmIpv4s",
                    "apmIpv6s",
                    "logsIpv4s",
                    "logsIpv6s",
                    "processIpv4s",
                    "processIpv6s",
                    "syntheticsIpv4s",
                    "syntheticsIpv4ByLocation",
                    "syntheticsIpv6s",
                    "syntheticsIpv6ByLocation",
                    "webhooksIpv4s",
                    "webhooksIpv6s",
                    "id"
                ]
            }
        },
        "datadog:index/getMonitor:getMonitor": {
            "description": "Use this data source to retrieve information about an existing monitor for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = pulumi.output(datadog.getMonitor({\n    monitorTagsFilters: [\"foo:bar\"],\n    nameFilter: \"My awesome monitor\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_monitor(monitor_tags_filters=[\"foo:bar\"],\n    name_filter=\"My awesome monitor\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Datadog.GetMonitor.InvokeAsync(new Datadog.GetMonitorArgs\n        {\n            MonitorTagsFilters = \n            {\n                \"foo:bar\",\n            },\n            NameFilter = \"My awesome monitor\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"My awesome monitor\"\n\t\t_, err := datadog.LookupMonitor(ctx, \u0026datadog.LookupMonitorArgs{\n\t\t\tMonitorTagsFilters: []string{\n\t\t\t\t\"foo:bar\",\n\t\t\t},\n\t\t\tNameFilter: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMonitor.\n",
                "properties": {
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "A monitor name to limit the search.\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to limit the search. This filters on the monitor scope.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getMonitor.\n",
                "properties": {
                    "enableLogsSample": {
                        "type": "boolean"
                    },
                    "escalationMessage": {
                        "type": "string"
                    },
                    "evaluationDelay": {
                        "type": "integer"
                    },
                    "groupbySimpleMonitor": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "includeTags": {
                        "type": "boolean"
                    },
                    "locked": {
                        "type": "boolean"
                    },
                    "message": {
                        "type": "string"
                    },
                    "monitorTagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "monitorThresholdWindows": {
                        "$ref": "#/types/datadog:index/getMonitorMonitorThresholdWindows:getMonitorMonitorThresholdWindows"
                    },
                    "monitorThresholds": {
                        "$ref": "#/types/datadog:index/getMonitorMonitorThresholds:getMonitorMonitorThresholds"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameFilter": {
                        "type": "string"
                    },
                    "newHostDelay": {
                        "type": "integer"
                    },
                    "noDataTimeframe": {
                        "type": "integer"
                    },
                    "notifyAudit": {
                        "type": "boolean"
                    },
                    "notifyNoData": {
                        "type": "boolean"
                    },
                    "query": {
                        "type": "string"
                    },
                    "renotifyInterval": {
                        "type": "integer"
                    },
                    "requireFullWindow": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thresholdWindows": {
                        "$ref": "#/types/datadog:index/getMonitorThresholdWindows:getMonitorThresholdWindows",
                        "deprecationMessage": "Define `monitor_threshold_windows` list with one element instead."
                    },
                    "thresholds": {
                        "$ref": "#/types/datadog:index/getMonitorThresholds:getMonitorThresholds",
                        "deprecationMessage": "Define `monitor_thresholds` list with one element instead."
                    },
                    "timeoutH": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "enableLogsSample",
                    "escalationMessage",
                    "evaluationDelay",
                    "groupbySimpleMonitor",
                    "includeTags",
                    "locked",
                    "message",
                    "monitorThresholdWindows",
                    "monitorThresholds",
                    "name",
                    "newHostDelay",
                    "noDataTimeframe",
                    "notifyAudit",
                    "notifyNoData",
                    "query",
                    "renotifyInterval",
                    "requireFullWindow",
                    "tags",
                    "thresholdWindows",
                    "thresholds",
                    "timeoutH",
                    "type",
                    "id"
                ]
            }
        },
        "datadog:index/getPermissions:getPermissions": {
            "description": "Use this data source to retrieve the list of Datadog permissions by name and their corresponding ID, for use in the role resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst permissions = pulumi.output(datadog.getPermissions({ async: true }));\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\npermissions = datadog.get_permissions()\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var permissions = Output.Create(Datadog.GetPermissions.InvokeAsync());\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.GetPermissions(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getPermissions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "permissions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "permissions",
                    "id"
                ]
            }
        },
        "datadog:index/getRole:getRole": {
            "description": "Use this data source to retrieve information about an existing role for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = pulumi.output(datadog.getRole({\n    filter: \"Datadog Standard Role\",\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_role(filter=\"Datadog Standard Role\")\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Datadog.GetRole.InvokeAsync(new Datadog.GetRoleArgs\n        {\n            Filter = \"Datadog Standard Role\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := datadog.LookupRole(ctx, \u0026datadog.LookupRoleArgs{\n\t\t\tFilter: \"Datadog Standard Role\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getRole.\n",
                "properties": {
                    "filter": {
                        "type": "string",
                        "description": "A string on which to filter the roles.\n"
                    }
                },
                "type": "object",
                "required": [
                    "filter"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRole.\n",
                "properties": {
                    "filter": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "userCount": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "filter",
                    "name",
                    "userCount",
                    "id"
                ]
            }
        },
        "datadog:index/getSecurityMonitoringRules:getSecurityMonitoringRules": {
            "description": "Use this data source to retrieve information about existing security monitoring rules for use in other resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as datadog from \"@pulumi/datadog\";\n\nconst test = pulumi.output(datadog.getSecurityMonitoringRules({\n    defaultOnlyFilter: true,\n    nameFilter: \"attack\",\n    tagsFilters: [\"foo:bar\"],\n}, { async: true }));\n```\n```python\nimport pulumi\nimport pulumi_datadog as datadog\n\ntest = datadog.get_security_monitoring_rules(default_only_filter=True,\n    name_filter=\"attack\",\n    tags_filters=[\"foo:bar\"])\n```\n```csharp\nusing Pulumi;\nusing Datadog = Pulumi.Datadog;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Datadog.GetSecurityMonitoringRules.InvokeAsync(new Datadog.GetSecurityMonitoringRulesArgs\n        {\n            DefaultOnlyFilter = true,\n            NameFilter = \"attack\",\n            TagsFilters = \n            {\n                \"foo:bar\",\n            },\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := true\n\t\topt1 := \"attack\"\n\t\t_, err := datadog.GetSecurityMonitoringRules(ctx, \u0026datadog.GetSecurityMonitoringRulesArgs{\n\t\t\tDefaultOnlyFilter: \u0026opt0,\n\t\t\tNameFilter:        \u0026opt1,\n\t\t\tTagsFilters: []string{\n\t\t\t\t\"foo:bar\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSecurityMonitoringRules.\n",
                "properties": {
                    "defaultOnlyFilter": {
                        "type": "boolean"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "A rule name to limit the search\n"
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags to limit the search\n"
                    },
                    "userOnlyFilter": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSecurityMonitoringRules.\n",
                "properties": {
                    "defaultOnlyFilter": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nameFilter": {
                        "type": "string"
                    },
                    "ruleIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/datadog:index/getSecurityMonitoringRulesRule:getSecurityMonitoringRulesRule"
                        }
                    },
                    "tagsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "userOnlyFilter": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "ruleIds",
                    "rules",
                    "id"
                ]
            }
        },
        "datadog:index/getSyntheticsLocations:getSyntheticsLocations": {
            "description": "Use this data source to retrieve Datadog's Synthetics Locations (to be used in Synthetics tests).\n",
            "outputs": {
                "description": "A collection of values returned by getSyntheticsLocations.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "locations": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "locations",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "aws": "Aws",
                "azure": "Azure",
                "datadog": "Datadog",
                "gcp": "Gcp",
                "index": "index",
                "pagerduty": "PagerDuty"
            },
            "packageReferences": {
                "Pulumi": "3.*-*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0-alpha.0"
            },
            "devDependencies": {
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Datadog resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-datadog` repo](https://github.com/pulumi/pulumi-datadog/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-datadog` repo](https://github.com/terraform-providers/terraform-provider-datadog/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-datadog)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-datadog` repo](https://github.com/pulumi/pulumi-datadog/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-providers/terraform-provider-datadog` repo](https://github.com/terraform-providers/terraform-provider-datadog/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0a1,\u003c4.0.0"
            }
        }
    }
}