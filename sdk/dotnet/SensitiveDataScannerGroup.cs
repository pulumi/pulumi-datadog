// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Sensitive Data Scanner group resource.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mygroup = new Datadog.SensitiveDataScannerGroup("mygroup", new()
    ///     {
    ///         Description = "A relevant description",
    ///         Filter = new Datadog.Inputs.SensitiveDataScannerGroupFilterArgs
    ///         {
    ///             Query = "service:my-service",
    ///         },
    ///         IsEnabled = true,
    ///         Name = "My new scanning group",
    ///         ProductLists = new[]
    ///         {
    ///             "apm",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/sensitiveDataScannerGroup:SensitiveDataScannerGroup new_list ""
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/sensitiveDataScannerGroup:SensitiveDataScannerGroup")]
    public partial class SensitiveDataScannerGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the Datadog scanning group.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Filter object the scanning group applies.
        /// </summary>
        [Output("filter")]
        public Output<Outputs.SensitiveDataScannerGroupFilter> Filter { get; private set; } = null!;

        /// <summary>
        /// Whether or not the scanning group is enabled. If the group doesn't contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend
        /// </summary>
        [Output("isEnabled")]
        public Output<bool> IsEnabled { get; private set; } = null!;

        /// <summary>
        /// Name of the Datadog scanning group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of products the scanning group applies. Valid values are `logs`, `rum`, `events`, `apm`.
        /// </summary>
        [Output("productLists")]
        public Output<ImmutableArray<string>> ProductLists { get; private set; } = null!;


        /// <summary>
        /// Create a SensitiveDataScannerGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SensitiveDataScannerGroup(string name, SensitiveDataScannerGroupArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/sensitiveDataScannerGroup:SensitiveDataScannerGroup", name, args ?? new SensitiveDataScannerGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SensitiveDataScannerGroup(string name, Input<string> id, SensitiveDataScannerGroupState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/sensitiveDataScannerGroup:SensitiveDataScannerGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SensitiveDataScannerGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SensitiveDataScannerGroup Get(string name, Input<string> id, SensitiveDataScannerGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new SensitiveDataScannerGroup(name, id, state, options);
        }
    }

    public sealed class SensitiveDataScannerGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the Datadog scanning group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Filter object the scanning group applies.
        /// </summary>
        [Input("filter", required: true)]
        public Input<Inputs.SensitiveDataScannerGroupFilterArgs> Filter { get; set; } = null!;

        /// <summary>
        /// Whether or not the scanning group is enabled. If the group doesn't contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend
        /// </summary>
        [Input("isEnabled", required: true)]
        public Input<bool> IsEnabled { get; set; } = null!;

        /// <summary>
        /// Name of the Datadog scanning group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("productLists", required: true)]
        private InputList<string>? _productLists;

        /// <summary>
        /// List of products the scanning group applies. Valid values are `logs`, `rum`, `events`, `apm`.
        /// </summary>
        public InputList<string> ProductLists
        {
            get => _productLists ?? (_productLists = new InputList<string>());
            set => _productLists = value;
        }

        public SensitiveDataScannerGroupArgs()
        {
        }
        public static new SensitiveDataScannerGroupArgs Empty => new SensitiveDataScannerGroupArgs();
    }

    public sealed class SensitiveDataScannerGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the Datadog scanning group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Filter object the scanning group applies.
        /// </summary>
        [Input("filter")]
        public Input<Inputs.SensitiveDataScannerGroupFilterGetArgs>? Filter { get; set; }

        /// <summary>
        /// Whether or not the scanning group is enabled. If the group doesn't contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Name of the Datadog scanning group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("productLists")]
        private InputList<string>? _productLists;

        /// <summary>
        /// List of products the scanning group applies. Valid values are `logs`, `rum`, `events`, `apm`.
        /// </summary>
        public InputList<string> ProductLists
        {
            get => _productLists ?? (_productLists = new InputList<string>());
            set => _productLists = value;
        }

        public SensitiveDataScannerGroupState()
        {
        }
        public static new SensitiveDataScannerGroupState Empty => new SensitiveDataScannerGroupState();
    }
}
