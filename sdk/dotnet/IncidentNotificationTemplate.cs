// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog incident notification template resource. This can be used to create and manage Datadog incident notification templates.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Reference incident type
    ///     var security = new Datadog.IncidentType("security", new()
    ///     {
    ///         Name = "Security Incident",
    ///         Description = "Security-related incidents requiring immediate attention",
    ///     });
    /// 
    ///     // Create a notification template for incident alerts
    ///     var securityIncident = new Datadog.IncidentNotificationTemplate("security_incident", new()
    ///     {
    ///         Name = "Security Incident Template",
    ///         Subject = "SEV-1 Security Incident: {{incident.title}}",
    ///         Content = @"ðŸš¨ SECURITY INCIDENT DECLARED ðŸš¨
    /// 
    /// **Incident Details:**
    /// - Title: {{incident.title}}
    /// - Severity: {{incident.severity}}
    /// - Status: {{incident.status}}
    /// - Declared at: {{incident.created}}
    /// 
    /// **Affected Services:**
    /// {{#each incident.services}}
    /// - {{name}}
    /// {{/each}}
    /// 
    /// **Commander:** {{incident.commander}}
    /// 
    /// **Next Steps:**
    /// 1. Join the incident Slack channel: #incident-{{incident.id}}
    /// 2. Review the incident details in Datadog
    /// 3. Await further instructions from the incident commander
    /// 
    /// For more information: {{incident.url}}
    /// ",
    ///         Category = "alert",
    ///         IncidentType = security.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// #!/bin/bash
    /// 
    /// Import an existing incident notification template
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/incidentNotificationTemplate:IncidentNotificationTemplate security_incident 11111111-2222-3333-4444-555555555555
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/incidentNotificationTemplate:IncidentNotificationTemplate")]
    public partial class IncidentNotificationTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The category of the notification template. Valid values are `alert`, `incident`, `recovery`.
        /// </summary>
        [Output("category")]
        public Output<string> Category { get; private set; } = null!;

        /// <summary>
        /// The content body of the notification template.
        /// </summary>
        [Output("content")]
        public Output<string> Content { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the notification template was created.
        /// </summary>
        [Output("created")]
        public Output<string> Created { get; private set; } = null!;

        /// <summary>
        /// The ID of the incident type this notification template is associated with.
        /// </summary>
        [Output("incidentType")]
        public Output<string> IncidentType { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the notification template was last modified.
        /// </summary>
        [Output("modified")]
        public Output<string> Modified { get; private set; } = null!;

        /// <summary>
        /// The name of the notification template.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The subject line of the notification template.
        /// </summary>
        [Output("subject")]
        public Output<string> Subject { get; private set; } = null!;


        /// <summary>
        /// Create a IncidentNotificationTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IncidentNotificationTemplate(string name, IncidentNotificationTemplateArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/incidentNotificationTemplate:IncidentNotificationTemplate", name, args ?? new IncidentNotificationTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IncidentNotificationTemplate(string name, Input<string> id, IncidentNotificationTemplateState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/incidentNotificationTemplate:IncidentNotificationTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IncidentNotificationTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IncidentNotificationTemplate Get(string name, Input<string> id, IncidentNotificationTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new IncidentNotificationTemplate(name, id, state, options);
        }
    }

    public sealed class IncidentNotificationTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The category of the notification template. Valid values are `alert`, `incident`, `recovery`.
        /// </summary>
        [Input("category", required: true)]
        public Input<string> Category { get; set; } = null!;

        /// <summary>
        /// The content body of the notification template.
        /// </summary>
        [Input("content", required: true)]
        public Input<string> Content { get; set; } = null!;

        /// <summary>
        /// The ID of the incident type this notification template is associated with.
        /// </summary>
        [Input("incidentType", required: true)]
        public Input<string> IncidentType { get; set; } = null!;

        /// <summary>
        /// The name of the notification template.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The subject line of the notification template.
        /// </summary>
        [Input("subject", required: true)]
        public Input<string> Subject { get; set; } = null!;

        public IncidentNotificationTemplateArgs()
        {
        }
        public static new IncidentNotificationTemplateArgs Empty => new IncidentNotificationTemplateArgs();
    }

    public sealed class IncidentNotificationTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The category of the notification template. Valid values are `alert`, `incident`, `recovery`.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// The content body of the notification template.
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        /// <summary>
        /// Timestamp when the notification template was created.
        /// </summary>
        [Input("created")]
        public Input<string>? Created { get; set; }

        /// <summary>
        /// The ID of the incident type this notification template is associated with.
        /// </summary>
        [Input("incidentType")]
        public Input<string>? IncidentType { get; set; }

        /// <summary>
        /// Timestamp when the notification template was last modified.
        /// </summary>
        [Input("modified")]
        public Input<string>? Modified { get; set; }

        /// <summary>
        /// The name of the notification template.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The subject line of the notification template.
        /// </summary>
        [Input("subject")]
        public Input<string>? Subject { get; set; }

        public IncidentNotificationTemplateState()
        {
        }
        public static new IncidentNotificationTemplateState Empty => new IncidentNotificationTemplateState();
    }
}
