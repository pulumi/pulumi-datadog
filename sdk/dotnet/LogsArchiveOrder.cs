// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog [Logs Archive API](https://docs.datadoghq.com/api/v2/logs-archives/) resource, which is used to manage Datadog log archives order.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sampleArchiveOrder = new Datadog.LogsArchiveOrder("sample_archive_order", new()
    ///     {
    ///         ArchiveIds = new[]
    ///         {
    ///             sampleArchive1.Id,
    ///             sampleArchive2.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// There must be at most one datadog_logs_archive_order resource. You can import the datadog_logs_archive_order or create an archive order.
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/logsArchiveOrder:LogsArchiveOrder name&gt; archiveOrderID
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/logsArchiveOrder:LogsArchiveOrder")]
    public partial class LogsArchiveOrder : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.
        /// </summary>
        [Output("archiveIds")]
        public Output<ImmutableArray<string>> ArchiveIds { get; private set; } = null!;


        /// <summary>
        /// Create a LogsArchiveOrder resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogsArchiveOrder(string name, LogsArchiveOrderArgs? args = null, CustomResourceOptions? options = null)
            : base("datadog:index/logsArchiveOrder:LogsArchiveOrder", name, args ?? new LogsArchiveOrderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogsArchiveOrder(string name, Input<string> id, LogsArchiveOrderState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/logsArchiveOrder:LogsArchiveOrder", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogsArchiveOrder resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogsArchiveOrder Get(string name, Input<string> id, LogsArchiveOrderState? state = null, CustomResourceOptions? options = null)
        {
            return new LogsArchiveOrder(name, id, state, options);
        }
    }

    public sealed class LogsArchiveOrderArgs : global::Pulumi.ResourceArgs
    {
        [Input("archiveIds")]
        private InputList<string>? _archiveIds;

        /// <summary>
        /// The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.
        /// </summary>
        public InputList<string> ArchiveIds
        {
            get => _archiveIds ?? (_archiveIds = new InputList<string>());
            set => _archiveIds = value;
        }

        public LogsArchiveOrderArgs()
        {
        }
        public static new LogsArchiveOrderArgs Empty => new LogsArchiveOrderArgs();
    }

    public sealed class LogsArchiveOrderState : global::Pulumi.ResourceArgs
    {
        [Input("archiveIds")]
        private InputList<string>? _archiveIds;

        /// <summary>
        /// The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archive_ids` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.
        /// </summary>
        public InputList<string> ArchiveIds
        {
            get => _archiveIds ?? (_archiveIds = new InputList<string>());
            set => _archiveIds = value;
        }

        public LogsArchiveOrderState()
        {
        }
        public static new LogsArchiveOrderState Empty => new LogsArchiveOrderState();
    }
}
