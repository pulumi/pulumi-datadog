// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog Azure Usage Cost configuration resource. This can be used to create and manage Azure Cost Export configurations for Cloud Cost Management. Azure configurations require both actual and amortized cost export settings.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/azureUcConfig:AzureUcConfig example &lt;cloud_account_id&gt;
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/azureUcConfig:AzureUcConfig")]
    public partial class AzureUcConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The tenant ID of the Azure account.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Configuration for the actual cost export.
        /// </summary>
        [Output("actualBillConfig")]
        public Output<Outputs.AzureUcConfigActualBillConfig?> ActualBillConfig { get; private set; } = null!;

        /// <summary>
        /// Configuration for the amortized cost export.
        /// </summary>
        [Output("amortizedBillConfig")]
        public Output<Outputs.AzureUcConfigAmortizedBillConfig?> AmortizedBillConfig { get; private set; } = null!;

        /// <summary>
        /// The client ID of the Azure account.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the Azure Usage Cost configuration was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// List of error messages if the Azure Usage Cost configuration encountered any issues during setup or data processing.
        /// </summary>
        [Output("errorMessages")]
        public Output<ImmutableArray<string>> ErrorMessages { get; private set; } = null!;

        /// <summary>
        /// The scope of your observed subscription.
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;

        /// <summary>
        /// The current status of the Azure Usage Cost configuration.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the configuration status was last updated.
        /// </summary>
        [Output("statusUpdatedAt")]
        public Output<string> StatusUpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the Azure Usage Cost configuration was last modified.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a AzureUcConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureUcConfig(string name, AzureUcConfigArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/azureUcConfig:AzureUcConfig", name, args ?? new AzureUcConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzureUcConfig(string name, Input<string> id, AzureUcConfigState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/azureUcConfig:AzureUcConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzureUcConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzureUcConfig Get(string name, Input<string> id, AzureUcConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new AzureUcConfig(name, id, state, options);
        }
    }

    public sealed class AzureUcConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The tenant ID of the Azure account.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// Configuration for the actual cost export.
        /// </summary>
        [Input("actualBillConfig")]
        public Input<Inputs.AzureUcConfigActualBillConfigArgs>? ActualBillConfig { get; set; }

        /// <summary>
        /// Configuration for the amortized cost export.
        /// </summary>
        [Input("amortizedBillConfig")]
        public Input<Inputs.AzureUcConfigAmortizedBillConfigArgs>? AmortizedBillConfig { get; set; }

        /// <summary>
        /// The client ID of the Azure account.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// The scope of your observed subscription.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        public AzureUcConfigArgs()
        {
        }
        public static new AzureUcConfigArgs Empty => new AzureUcConfigArgs();
    }

    public sealed class AzureUcConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The tenant ID of the Azure account.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Configuration for the actual cost export.
        /// </summary>
        [Input("actualBillConfig")]
        public Input<Inputs.AzureUcConfigActualBillConfigGetArgs>? ActualBillConfig { get; set; }

        /// <summary>
        /// Configuration for the amortized cost export.
        /// </summary>
        [Input("amortizedBillConfig")]
        public Input<Inputs.AzureUcConfigAmortizedBillConfigGetArgs>? AmortizedBillConfig { get; set; }

        /// <summary>
        /// The client ID of the Azure account.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// The timestamp when the Azure Usage Cost configuration was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("errorMessages")]
        private InputList<string>? _errorMessages;

        /// <summary>
        /// List of error messages if the Azure Usage Cost configuration encountered any issues during setup or data processing.
        /// </summary>
        public InputList<string> ErrorMessages
        {
            get => _errorMessages ?? (_errorMessages = new InputList<string>());
            set => _errorMessages = value;
        }

        /// <summary>
        /// The scope of your observed subscription.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// The current status of the Azure Usage Cost configuration.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The timestamp when the configuration status was last updated.
        /// </summary>
        [Input("statusUpdatedAt")]
        public Input<string>? StatusUpdatedAt { get; set; }

        /// <summary>
        /// The timestamp when the Azure Usage Cost configuration was last modified.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public AzureUcConfigState()
        {
        }
        public static new AzureUcConfigState Empty => new AzureUcConfigState();
    }
}
