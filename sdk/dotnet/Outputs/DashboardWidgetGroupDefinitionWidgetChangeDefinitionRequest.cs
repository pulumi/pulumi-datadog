// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest
    {
        /// <summary>
        /// The query to use for this widget.
        /// </summary>
        public readonly Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery? ApmQuery;
        /// <summary>
        /// Whether to show absolute or relative change. Valid values are `absolute`, `relative`.
        /// </summary>
        public readonly string? ChangeType;
        /// <summary>
        /// Choose from when to compare current data to. Valid values are `hour_before`, `day_before`, `week_before`, `month_before`.
        /// </summary>
        public readonly string? CompareTo;
        public readonly ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormula> Formulas;
        /// <summary>
        /// A Boolean indicating whether an increase in the value is good (displayed in green) or not (displayed in red).
        /// </summary>
        public readonly bool? IncreaseGood;
        /// <summary>
        /// The query to use for this widget.
        /// </summary>
        public readonly Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery? LogQuery;
        /// <summary>
        /// What to order by. Valid values are `change`, `name`, `present`, `past`.
        /// </summary>
        public readonly string? OrderBy;
        /// <summary>
        /// Widget sorting method. Valid values are `asc`, `desc`.
        /// </summary>
        public readonly string? OrderDir;
        /// <summary>
        /// The process query to use in the widget. The structure of this block is described below.
        /// </summary>
        public readonly Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery? ProcessQuery;
        /// <summary>
        /// The metric query to use for this widget.
        /// </summary>
        public readonly string? Q;
        public readonly ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQuery> Queries;
        /// <summary>
        /// The query to use for this widget.
        /// </summary>
        public readonly Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery? RumQuery;
        /// <summary>
        /// The query to use for this widget.
        /// </summary>
        public readonly Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery? SecurityQuery;
        /// <summary>
        /// If set to `true`, displays the current value.
        /// </summary>
        public readonly bool? ShowPresent;

        [OutputConstructor]
        private DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequest(
            Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestApmQuery? apmQuery,

            string? changeType,

            string? compareTo,

            ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestFormula> formulas,

            bool? increaseGood,

            Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestLogQuery? logQuery,

            string? orderBy,

            string? orderDir,

            Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestProcessQuery? processQuery,

            string? q,

            ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestQuery> queries,

            Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestRumQuery? rumQuery,

            Outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinitionRequestSecurityQuery? securityQuery,

            bool? showPresent)
        {
            ApmQuery = apmQuery;
            ChangeType = changeType;
            CompareTo = compareTo;
            Formulas = formulas;
            IncreaseGood = increaseGood;
            LogQuery = logQuery;
            OrderBy = orderBy;
            OrderDir = orderDir;
            ProcessQuery = processQuery;
            Q = q;
            Queries = queries;
            RumQuery = rumQuery;
            SecurityQuery = securityQuery;
            ShowPresent = showPresent;
        }
    }
}
