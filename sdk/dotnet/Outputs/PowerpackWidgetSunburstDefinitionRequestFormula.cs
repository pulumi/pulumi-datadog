// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class PowerpackWidgetSunburstDefinitionRequestFormula
    {
        /// <summary>
        /// An expression alias.
        /// </summary>
        public readonly string? Alias;
        /// <summary>
        /// A list of display modes for each table cell. Valid values are `number`, `bar`.
        /// </summary>
        public readonly string? CellDisplayMode;
        /// <summary>
        /// Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditional_formats` blocks are allowed using the structure below.
        /// </summary>
        public readonly ImmutableArray<Outputs.PowerpackWidgetSunburstDefinitionRequestFormulaConditionalFormat> ConditionalFormats;
        /// <summary>
        /// A string expression built from queries, formulas, and functions.
        /// </summary>
        public readonly string FormulaExpression;
        /// <summary>
        /// The maximum number of items in the group.
        /// </summary>
        public readonly Outputs.PowerpackWidgetSunburstDefinitionRequestFormulaLimit? Limit;
        /// <summary>
        /// Styling options for widget formulas.
        /// </summary>
        public readonly Outputs.PowerpackWidgetSunburstDefinitionRequestFormulaStyle? Style;

        [OutputConstructor]
        private PowerpackWidgetSunburstDefinitionRequestFormula(
            string? alias,

            string? cellDisplayMode,

            ImmutableArray<Outputs.PowerpackWidgetSunburstDefinitionRequestFormulaConditionalFormat> conditionalFormats,

            string formulaExpression,

            Outputs.PowerpackWidgetSunburstDefinitionRequestFormulaLimit? limit,

            Outputs.PowerpackWidgetSunburstDefinitionRequestFormulaStyle? style)
        {
            Alias = alias;
            CellDisplayMode = cellDisplayMode;
            ConditionalFormats = conditionalFormats;
            FormulaExpression = formulaExpression;
            Limit = limit;
            Style = style;
        }
    }
}
