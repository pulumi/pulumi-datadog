// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionQueryValueDefinitionRequestQuerySloQuery
    {
        /// <summary>
        /// Additional filters applied to the SLO query.
        /// </summary>
        public readonly string? AdditionalQueryFilters;
        /// <summary>
        /// The data source for SLO queries. Valid values are `slo`.
        /// </summary>
        public readonly string DataSource;
        /// <summary>
        /// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
        /// </summary>
        public readonly string? GroupMode;
        /// <summary>
        /// SLO measures queries. Valid values are `good_events`, `bad_events`, `slo_status`, `error_budget_remaining`, `burn_rate`, `error_budget_burndown`.
        /// </summary>
        public readonly string Measure;
        /// <summary>
        /// The name of query for use in formulas.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// ID of an SLO to query.
        /// </summary>
        public readonly string SloId;
        /// <summary>
        /// type of the SLO to query. Valid values are `metric`. Defaults to `"metric"`.
        /// </summary>
        public readonly string? SloQueryType;

        [OutputConstructor]
        private DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionQueryValueDefinitionRequestQuerySloQuery(
            string? additionalQueryFilters,

            string dataSource,

            string? groupMode,

            string measure,

            string? name,

            string sloId,

            string? sloQueryType)
        {
            AdditionalQueryFilters = additionalQueryFilters;
            DataSource = dataSource;
            GroupMode = groupMode;
            Measure = measure;
            Name = name;
            SloId = sloId;
            SloQueryType = sloQueryType;
        }
    }
}
