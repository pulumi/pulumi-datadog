// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class DashboardWidgetAlertValueDefinition
    {
        /// <summary>
        /// The ID of the monitor used by the widget.
        /// </summary>
        public readonly string AlertId;
        /// <summary>
        /// The precision to use when displaying the value. Use `*` for maximum precision.
        /// </summary>
        public readonly int? Precision;
        /// <summary>
        /// The alignment of the text in the widget. Valid values are `center`, `left`, `right`.
        /// </summary>
        public readonly string? TextAlign;
        /// <summary>
        /// The title of the widget.
        /// </summary>
        public readonly string? Title;
        /// <summary>
        /// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
        /// </summary>
        public readonly string? TitleAlign;
        /// <summary>
        /// The size of the widget's title (defaults to 16).
        /// </summary>
        public readonly string? TitleSize;
        /// <summary>
        /// The unit for the value displayed in the widget.
        /// </summary>
        public readonly string? Unit;

        [OutputConstructor]
        private DashboardWidgetAlertValueDefinition(
            string alertId,

            int? precision,

            string? textAlign,

            string? title,

            string? titleAlign,

            string? titleSize,

            string? unit)
        {
            AlertId = alertId;
            Precision = precision;
            TextAlign = textAlign;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            Unit = unit;
        }
    }
}
