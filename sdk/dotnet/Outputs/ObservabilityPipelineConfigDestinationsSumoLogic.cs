// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class ObservabilityPipelineConfigDestinationsSumoLogic
    {
        /// <summary>
        /// The output encoding format.
        /// </summary>
        public readonly string? Encoding;
        /// <summary>
        /// A list of custom headers to include in the request to Sumo Logic.
        /// </summary>
        public readonly ImmutableArray<Outputs.ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomField> HeaderCustomFields;
        /// <summary>
        /// Optional override for the host name header.
        /// </summary>
        public readonly string? HeaderHostName;
        /// <summary>
        /// Optional override for the source category header.
        /// </summary>
        public readonly string? HeaderSourceCategory;
        /// <summary>
        /// Optional override for the source name header.
        /// </summary>
        public readonly string? HeaderSourceName;
        /// <summary>
        /// The unique identifier for this component.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of component IDs whose output is used as the `input` for this component.
        /// </summary>
        public readonly ImmutableArray<string> Inputs;

        [OutputConstructor]
        private ObservabilityPipelineConfigDestinationsSumoLogic(
            string? encoding,

            ImmutableArray<Outputs.ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomField> headerCustomFields,

            string? headerHostName,

            string? headerSourceCategory,

            string? headerSourceName,

            string id,

            ImmutableArray<string> inputs)
        {
            Encoding = encoding;
            HeaderCustomFields = headerCustomFields;
            HeaderHostName = headerHostName;
            HeaderSourceCategory = headerSourceCategory;
            HeaderSourceName = headerSourceName;
            Id = id;
            Inputs = inputs;
        }
    }
}
