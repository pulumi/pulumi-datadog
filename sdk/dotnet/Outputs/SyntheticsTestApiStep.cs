// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class SyntheticsTestApiStep
    {
        /// <summary>
        /// Determines whether or not to continue with test if this step fails.
        /// </summary>
        public readonly bool? AllowFailure;
        /// <summary>
        /// Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.
        /// </summary>
        public readonly ImmutableArray<Outputs.SyntheticsTestApiStepAssertion> Assertions;
        /// <summary>
        /// Values to parse and save as variables from the response.
        /// </summary>
        public readonly ImmutableArray<Outputs.SyntheticsTestApiStepExtractedValue> ExtractedValues;
        /// <summary>
        /// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allow_failure` is `true`.
        /// </summary>
        public readonly bool? IsCritical;
        /// <summary>
        /// The name of the step.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.
        /// </summary>
        public readonly Outputs.SyntheticsTestApiStepRequestBasicauth? RequestBasicauth;
        /// <summary>
        /// Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.
        /// </summary>
        public readonly Outputs.SyntheticsTestApiStepRequestClientCertificate? RequestClientCertificate;
        /// <summary>
        /// The request for the api step.
        /// </summary>
        public readonly Outputs.SyntheticsTestApiStepRequestDefinition? RequestDefinition;
        /// <summary>
        /// Files to be used as part of the request in the test.
        /// </summary>
        public readonly ImmutableArray<Outputs.SyntheticsTestApiStepRequestFile> RequestFiles;
        /// <summary>
        /// Header name and value map.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? RequestHeaders;
        /// <summary>
        /// The proxy to perform the test.
        /// </summary>
        public readonly Outputs.SyntheticsTestApiStepRequestProxy? RequestProxy;
        /// <summary>
        /// Query arguments name and value map.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? RequestQuery;
        public readonly Outputs.SyntheticsTestApiStepRetry? Retry;
        /// <summary>
        /// The subtype of the Synthetic multi-step API test step. Valid values are `http`, `grpc`, `wait`. Defaults to `"http"`.
        /// </summary>
        public readonly string? Subtype;
        /// <summary>
        /// The time to wait in seconds. Minimum value: 0. Maximum value: 180.
        /// </summary>
        public readonly int? Value;

        [OutputConstructor]
        private SyntheticsTestApiStep(
            bool? allowFailure,

            ImmutableArray<Outputs.SyntheticsTestApiStepAssertion> assertions,

            ImmutableArray<Outputs.SyntheticsTestApiStepExtractedValue> extractedValues,

            bool? isCritical,

            string name,

            Outputs.SyntheticsTestApiStepRequestBasicauth? requestBasicauth,

            Outputs.SyntheticsTestApiStepRequestClientCertificate? requestClientCertificate,

            Outputs.SyntheticsTestApiStepRequestDefinition? requestDefinition,

            ImmutableArray<Outputs.SyntheticsTestApiStepRequestFile> requestFiles,

            ImmutableDictionary<string, object>? requestHeaders,

            Outputs.SyntheticsTestApiStepRequestProxy? requestProxy,

            ImmutableDictionary<string, object>? requestQuery,

            Outputs.SyntheticsTestApiStepRetry? retry,

            string? subtype,

            int? value)
        {
            AllowFailure = allowFailure;
            Assertions = assertions;
            ExtractedValues = extractedValues;
            IsCritical = isCritical;
            Name = name;
            RequestBasicauth = requestBasicauth;
            RequestClientCertificate = requestClientCertificate;
            RequestDefinition = requestDefinition;
            RequestFiles = requestFiles;
            RequestHeaders = requestHeaders;
            RequestProxy = requestProxy;
            RequestQuery = requestQuery;
            Retry = retry;
            Subtype = subtype;
            Value = value;
        }
    }
}
