// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class OnCallEscalationPolicyStep
    {
        /// <summary>
        /// Specifies how this escalation step will assign targets. Can be `default` (page all targets at once) or `round-robin`. Valid values are `assignment`, `round-robin`. Defaults to `"default"`.
        /// </summary>
        public readonly string? Assignment;
        /// <summary>
        /// Defines how many seconds to wait before escalating to the next step. Value must be between 60 and 36000.
        /// </summary>
        public readonly int EscalateAfterSeconds;
        /// <summary>
        /// The ID of this step.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// List of targets for the step.
        /// </summary>
        public readonly ImmutableArray<Outputs.OnCallEscalationPolicyStepTarget> Targets;

        [OutputConstructor]
        private OnCallEscalationPolicyStep(
            string? assignment,

            int escalateAfterSeconds,

            string? id,

            ImmutableArray<Outputs.OnCallEscalationPolicyStepTarget> targets)
        {
            Assignment = assignment;
            EscalateAfterSeconds = escalateAfterSeconds;
            Id = id;
            Targets = targets;
        }
    }
}
