// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class DashboardWidgetHostmapDefinition
    {
        /// <summary>
        /// A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DashboardWidgetHostmapDefinitionCustomLink> CustomLinks;
        /// <summary>
        /// The list of tags to group nodes by.
        /// </summary>
        public readonly ImmutableArray<string> Groups;
        /// <summary>
        /// A Boolean indicating whether to show ungrouped nodes.
        /// </summary>
        public readonly bool? NoGroupHosts;
        /// <summary>
        /// A Boolean indicating whether to show nodes with no metrics.
        /// </summary>
        public readonly bool? NoMetricHosts;
        /// <summary>
        /// The type of node used. Valid values are `host`, `container`.
        /// </summary>
        public readonly string? NodeType;
        /// <summary>
        /// A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below.
        /// </summary>
        public readonly Outputs.DashboardWidgetHostmapDefinitionRequest? Request;
        /// <summary>
        /// The list of tags to filter nodes by.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// The style of the widget graph. One nested block is allowed using the structure below.
        /// </summary>
        public readonly Outputs.DashboardWidgetHostmapDefinitionStyle? Style;
        /// <summary>
        /// The title of the widget.
        /// </summary>
        public readonly string? Title;
        /// <summary>
        /// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
        /// </summary>
        public readonly string? TitleAlign;
        /// <summary>
        /// The size of the widget's title (defaults to 16).
        /// </summary>
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetHostmapDefinition(
            ImmutableArray<Outputs.DashboardWidgetHostmapDefinitionCustomLink> customLinks,

            ImmutableArray<string> groups,

            bool? noGroupHosts,

            bool? noMetricHosts,

            string? nodeType,

            Outputs.DashboardWidgetHostmapDefinitionRequest? request,

            ImmutableArray<string> scopes,

            Outputs.DashboardWidgetHostmapDefinitionStyle? style,

            string? title,

            string? titleAlign,

            string? titleSize)
        {
            CustomLinks = customLinks;
            Groups = groups;
            NoGroupHosts = noGroupHosts;
            NoMetricHosts = noMetricHosts;
            NodeType = nodeType;
            Request = request;
            Scopes = scopes;
            Style = style;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }
}
