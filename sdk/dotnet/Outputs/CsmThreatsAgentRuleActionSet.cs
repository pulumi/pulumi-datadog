// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class CsmThreatsAgentRuleActionSet
    {
        /// <summary>
        /// Whether to append to the set
        /// </summary>
        public readonly bool? Append;
        /// <summary>
        /// The default value to set
        /// </summary>
        public readonly string? DefaultValue;
        /// <summary>
        /// The expression to use for the set action
        /// </summary>
        public readonly string? Expression;
        /// <summary>
        /// The field to get the value from
        /// </summary>
        public readonly string? Field;
        /// <summary>
        /// Whether the set action is inherited
        /// </summary>
        public readonly bool? Inherited;
        /// <summary>
        /// The name of the set action
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The scope of the set action (process, container, cgroup, or empty)
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// The maximum size of the set
        /// </summary>
        public readonly int? Size;
        /// <summary>
        /// The time to live for the set in nanoseconds
        /// </summary>
        public readonly int? Ttl;
        /// <summary>
        /// The value to set
        /// </summary>
        public readonly string? Value;

        [OutputConstructor]
        private CsmThreatsAgentRuleActionSet(
            bool? append,

            string? defaultValue,

            string? expression,

            string? field,

            bool? inherited,

            string name,

            string? scope,

            int? size,

            int? ttl,

            string? value)
        {
            Append = append;
            DefaultValue = defaultValue;
            Expression = expression;
            Field = field;
            Inherited = inherited;
            Name = name;
            Scope = scope;
            Size = size;
            Ttl = ttl;
            Value = value;
        }
    }
}
