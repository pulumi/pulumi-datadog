// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class ObservabilityPipelineConfigProcessorsParseGrok
    {
        /// <summary>
        /// If set to `true`, disables the default Grok rules provided by Datadog.
        /// </summary>
        public readonly bool? DisableLibraryRules;
        /// <summary>
        /// A unique identifier for this processor.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A Datadog search query used to determine which logs this processor targets.
        /// </summary>
        public readonly string Include;
        /// <summary>
        /// A list of component IDs whose output is used as the `input` for this component.
        /// </summary>
        public readonly ImmutableArray<string> Inputs;
        /// <summary>
        /// The list of Grok parsing rules. If multiple parsing rules are provided, they are evaluated in order. The first successful match is applied.
        /// </summary>
        public readonly ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsParseGrokRule> Rules;

        [OutputConstructor]
        private ObservabilityPipelineConfigProcessorsParseGrok(
            bool? disableLibraryRules,

            string id,

            string include,

            ImmutableArray<string> inputs,

            ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsParseGrokRule> rules)
        {
            DisableLibraryRules = disableLibraryRules;
            Id = id;
            Include = include;
            Inputs = inputs;
            Rules = rules;
        }
    }
}
