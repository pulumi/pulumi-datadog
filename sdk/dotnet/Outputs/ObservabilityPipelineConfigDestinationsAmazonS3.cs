// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class ObservabilityPipelineConfigDestinationsAmazonS3
    {
        /// <summary>
        /// AWS authentication credentials used for accessing AWS services. If omitted, the system's default credentials are used (for example, the IAM role and environment variables).
        /// </summary>
        public readonly Outputs.ObservabilityPipelineConfigDestinationsAmazonS3Auth? Auth;
        /// <summary>
        /// S3 bucket name.
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// Unique identifier for the destination component.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of component IDs whose output is used as the `Input` for this component.
        /// </summary>
        public readonly ImmutableArray<string> Inputs;
        /// <summary>
        /// Prefix for object keys.
        /// </summary>
        public readonly string KeyPrefix;
        /// <summary>
        /// AWS region of the S3 bucket.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// S3 storage class. Valid values are `STANDARD`, `REDUCED_REDUNDANCY`, `INTELLIGENT_TIERING`, `STANDARD_IA`, `EXPRESS_ONEZONE`, `ONEZONE_IA`, `GLACIER`, `GLACIER_IR`, `DEEP_ARCHIVE`.
        /// </summary>
        public readonly string StorageClass;

        [OutputConstructor]
        private ObservabilityPipelineConfigDestinationsAmazonS3(
            Outputs.ObservabilityPipelineConfigDestinationsAmazonS3Auth? auth,

            string bucket,

            string id,

            ImmutableArray<string> inputs,

            string keyPrefix,

            string region,

            string storageClass)
        {
            Auth = auth;
            Bucket = bucket;
            Id = id;
            Inputs = inputs;
            KeyPrefix = keyPrefix;
            Region = region;
            StorageClass = storageClass;
        }
    }
}
