// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class CustomAllocationRuleCostsToAllocate
    {
        /// <summary>
        /// The condition to match. Valid values are `=`, `!=`, `Is`, `is not`, `Like`, `In`, `not in`.
        /// </summary>
        public readonly string? Condition;
        /// <summary>
        /// The tag key to filter on (e.g., `AwsProduct`, `Team`, `Environment`).
        /// </summary>
        public readonly string? Tag;
        /// <summary>
        /// The single tag value to match. Use this field for conditions like `=`, `!=`, `Is`, `is not`, `Like`. Do not use with `In` or `not in` conditions.
        /// </summary>
        public readonly string? Value;
        /// <summary>
        /// A list of tag values to match. Use this field for `In` or `not in` conditions only. Do not use with single-value conditions.
        /// </summary>
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private CustomAllocationRuleCostsToAllocate(
            string? condition,

            string? tag,

            string? value,

            ImmutableArray<string> values)
        {
            Condition = condition;
            Tag = tag;
            Value = value;
            Values = values;
        }
    }
}
