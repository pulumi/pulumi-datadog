// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class ObservabilityPipelineConfigDestinationsGoogleChronicle
    {
        /// <summary>
        /// GCP credentials used to authenticate with Google Cloud Storage.
        /// </summary>
        public readonly Outputs.ObservabilityPipelineConfigDestinationsGoogleChronicleAuth? Auth;
        /// <summary>
        /// The Google Chronicle customer ID.
        /// </summary>
        public readonly string? CustomerId;
        /// <summary>
        /// The encoding format for the logs sent to Chronicle.
        /// </summary>
        public readonly string? Encoding;
        /// <summary>
        /// The unique identifier for this component.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of component IDs whose output is used as the `input` for this component.
        /// </summary>
        public readonly ImmutableArray<string> Inputs;
        /// <summary>
        /// The log type metadata associated with the Chronicle destination.
        /// </summary>
        public readonly string? LogType;

        [OutputConstructor]
        private ObservabilityPipelineConfigDestinationsGoogleChronicle(
            Outputs.ObservabilityPipelineConfigDestinationsGoogleChronicleAuth? auth,

            string? customerId,

            string? encoding,

            string id,

            ImmutableArray<string> inputs,

            string? logType)
        {
            Auth = auth;
            CustomerId = customerId;
            Encoding = encoding;
            Id = id;
            Inputs = inputs;
            LogType = logType;
        }
    }
}
