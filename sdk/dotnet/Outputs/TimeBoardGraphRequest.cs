// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class TimeBoardGraphRequest
    {
        public readonly string? Aggregator;
        public readonly Outputs.TimeBoardGraphRequestApmQuery? ApmQuery;
        public readonly string? ChangeType;
        public readonly string? CompareTo;
        public readonly ImmutableArray<Outputs.TimeBoardGraphRequestConditionalFormat> ConditionalFormats;
        public readonly string? ExtraCol;
        public readonly bool? IncreaseGood;
        public readonly Outputs.TimeBoardGraphRequestLogQuery? LogQuery;
        public readonly string? MetadataJson;
        public readonly string? OrderBy;
        public readonly string? OrderDirection;
        public readonly Outputs.TimeBoardGraphRequestProcessQuery? ProcessQuery;
        public readonly string? Q;
        public readonly bool? Stacked;
        public readonly ImmutableDictionary<string, object>? Style;
        public readonly string? Type;

        [OutputConstructor]
        private TimeBoardGraphRequest(
            string? aggregator,

            Outputs.TimeBoardGraphRequestApmQuery? apmQuery,

            string? changeType,

            string? compareTo,

            ImmutableArray<Outputs.TimeBoardGraphRequestConditionalFormat> conditionalFormats,

            string? extraCol,

            bool? increaseGood,

            Outputs.TimeBoardGraphRequestLogQuery? logQuery,

            string? metadataJson,

            string? orderBy,

            string? orderDirection,

            Outputs.TimeBoardGraphRequestProcessQuery? processQuery,

            string? q,

            bool? stacked,

            ImmutableDictionary<string, object>? style,

            string? type)
        {
            Aggregator = aggregator;
            ApmQuery = apmQuery;
            ChangeType = changeType;
            CompareTo = compareTo;
            ConditionalFormats = conditionalFormats;
            ExtraCol = extraCol;
            IncreaseGood = increaseGood;
            LogQuery = logQuery;
            MetadataJson = metadataJson;
            OrderBy = orderBy;
            OrderDirection = orderDirection;
            ProcessQuery = processQuery;
            Q = q;
            Stacked = stacked;
            Style = style;
            Type = type;
        }
    }
}
