// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class PowerpackWidgetListStreamDefinitionRequestQuery
    {
        /// <summary>
        /// Source from which to query items to display in the stream. Valid values are `logs_stream`, `audit_stream`, `ci_pipeline_stream`, `ci_test_stream`, `rum_issue_stream`, `apm_issue_stream`, `trace_stream`, `logs_issue_stream`, `logs_pattern_stream`, `logs_transaction_stream`, `event_stream`.
        /// </summary>
        public readonly string DataSource;
        /// <summary>
        /// Size of events displayed in widget. Required if `data_source` is `event_stream`. Valid values are `s`, `l`.
        /// </summary>
        public readonly string? EventSize;
        /// <summary>
        /// List of indexes.
        /// </summary>
        public readonly ImmutableArray<string> Indexes;
        /// <summary>
        /// Widget query.
        /// </summary>
        public readonly string? QueryString;
        /// <summary>
        /// The facet and order to sort the data, for example: `{"column": "time", "order": "desc"}`.
        /// </summary>
        public readonly Outputs.PowerpackWidgetListStreamDefinitionRequestQuerySort? Sort;
        /// <summary>
        /// Storage location (private beta).
        /// </summary>
        public readonly string? Storage;

        [OutputConstructor]
        private PowerpackWidgetListStreamDefinitionRequestQuery(
            string dataSource,

            string? eventSize,

            ImmutableArray<string> indexes,

            string? queryString,

            Outputs.PowerpackWidgetListStreamDefinitionRequestQuerySort? sort,

            string? storage)
        {
            DataSource = dataSource;
            EventSize = eventSize;
            Indexes = indexes;
            QueryString = queryString;
            Sort = sort;
            Storage = storage;
        }
    }
}
