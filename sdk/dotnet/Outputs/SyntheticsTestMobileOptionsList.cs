// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class SyntheticsTestMobileOptionsList
    {
        public readonly bool? AllowApplicationCrash;
        /// <summary>
        /// Restriction policy bindings for the Synthetic mobile test. Should not be used in parallel with a `datadog.RestrictionPolicy` resource
        /// </summary>
        public readonly ImmutableArray<Outputs.SyntheticsTestMobileOptionsListBinding> Bindings;
        /// <summary>
        /// CI/CD options for a Synthetic test.
        /// </summary>
        public readonly Outputs.SyntheticsTestMobileOptionsListCi? Ci;
        public readonly int? DefaultStepTimeout;
        public readonly ImmutableArray<string> DeviceIds;
        public readonly bool? DisableAutoAcceptAlert;
        /// <summary>
        /// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
        /// </summary>
        public readonly int? MinFailureDuration;
        public readonly Outputs.SyntheticsTestMobileOptionsListMobileApplication MobileApplication;
        /// <summary>
        /// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
        /// </summary>
        public readonly string? MonitorName;
        public readonly Outputs.SyntheticsTestMobileOptionsListMonitorOptions? MonitorOptions;
        public readonly int? MonitorPriority;
        /// <summary>
        /// Prevents saving screenshots of the steps.
        /// </summary>
        public readonly bool? NoScreenshot;
        /// <summary>
        /// A list of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `datadog.RestrictionPolicy` instead.
        /// </summary>
        public readonly ImmutableArray<string> RestrictedRoles;
        public readonly Outputs.SyntheticsTestMobileOptionsListRetry? Retry;
        /// <summary>
        /// Object containing timeframes and timezone used for advanced scheduling.
        /// </summary>
        public readonly Outputs.SyntheticsTestMobileOptionsListScheduling? Scheduling;
        /// <summary>
        /// How often the test should run (in seconds). Valid range is `300-604800` for mobile tests.
        /// </summary>
        public readonly int TickEvery;
        public readonly int? Verbosity;

        [OutputConstructor]
        private SyntheticsTestMobileOptionsList(
            bool? allowApplicationCrash,

            ImmutableArray<Outputs.SyntheticsTestMobileOptionsListBinding> bindings,

            Outputs.SyntheticsTestMobileOptionsListCi? ci,

            int? defaultStepTimeout,

            ImmutableArray<string> deviceIds,

            bool? disableAutoAcceptAlert,

            int? minFailureDuration,

            Outputs.SyntheticsTestMobileOptionsListMobileApplication mobileApplication,

            string? monitorName,

            Outputs.SyntheticsTestMobileOptionsListMonitorOptions? monitorOptions,

            int? monitorPriority,

            bool? noScreenshot,

            ImmutableArray<string> restrictedRoles,

            Outputs.SyntheticsTestMobileOptionsListRetry? retry,

            Outputs.SyntheticsTestMobileOptionsListScheduling? scheduling,

            int tickEvery,

            int? verbosity)
        {
            AllowApplicationCrash = allowApplicationCrash;
            Bindings = bindings;
            Ci = ci;
            DefaultStepTimeout = defaultStepTimeout;
            DeviceIds = deviceIds;
            DisableAutoAcceptAlert = disableAutoAcceptAlert;
            MinFailureDuration = minFailureDuration;
            MobileApplication = mobileApplication;
            MonitorName = monitorName;
            MonitorOptions = monitorOptions;
            MonitorPriority = monitorPriority;
            NoScreenshot = noScreenshot;
            RestrictedRoles = restrictedRoles;
            Retry = retry;
            Scheduling = scheduling;
            TickEvery = tickEvery;
            Verbosity = verbosity;
        }
    }
}
