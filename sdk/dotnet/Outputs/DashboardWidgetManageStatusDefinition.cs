// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class DashboardWidgetManageStatusDefinition
    {
        /// <summary>
        /// Whether to colorize text or background. Valid values are `Background`, `Text`.
        /// </summary>
        public readonly string? ColorPreference;
        /// <summary>
        /// The display setting to use. Valid values are `Counts`, `countsAndList`, `List`.
        /// </summary>
        public readonly string? DisplayFormat;
        /// <summary>
        /// A Boolean indicating whether to hide empty categories.
        /// </summary>
        public readonly bool? HideZeroCounts;
        /// <summary>
        /// The query to use in the widget.
        /// </summary>
        public readonly string Query;
        /// <summary>
        /// A Boolean indicating whether to show when monitors/groups last triggered.
        /// </summary>
        public readonly bool? ShowLastTriggered;
        /// <summary>
        /// Whether to show the priorities column.
        /// </summary>
        public readonly bool? ShowPriority;
        /// <summary>
        /// The method to sort the monitors. Valid values are `Name`, `Group`, `Status`, `Tags`, `Triggered`, `group,asc`, `group,desc`, `name,asc`, `name,desc`, `status,asc`, `status,desc`, `tags,asc`, `tags,desc`, `triggered,asc`, `triggered,desc`, `priority,asc`, `priority,desc`.
        /// </summary>
        public readonly string? Sort;
        /// <summary>
        /// The summary type to use. Valid values are `Monitors`, `Groups`, `Combined`.
        /// </summary>
        public readonly string? SummaryType;
        /// <summary>
        /// The title of the widget.
        /// </summary>
        public readonly string? Title;
        /// <summary>
        /// The alignment of the widget's title. Valid values are `Center`, `Left`, `Right`.
        /// </summary>
        public readonly string? TitleAlign;
        /// <summary>
        /// The size of the widget's title (defaults to 16).
        /// </summary>
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetManageStatusDefinition(
            string? colorPreference,

            string? displayFormat,

            bool? hideZeroCounts,

            string query,

            bool? showLastTriggered,

            bool? showPriority,

            string? sort,

            string? summaryType,

            string? title,

            string? titleAlign,

            string? titleSize)
        {
            ColorPreference = colorPreference;
            DisplayFormat = displayFormat;
            HideZeroCounts = hideZeroCounts;
            Query = query;
            ShowLastTriggered = showLastTriggered;
            ShowPriority = showPriority;
            Sort = sort;
            SummaryType = summaryType;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }
}
