// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class DashboardWidgetQueryTableDefinitionRequestConditionalFormat
    {
        /// <summary>
        /// The comparator to use. Valid values are `=`, `&gt;`, `&gt;=`, `&lt;`, `&lt;=`.
        /// </summary>
        public readonly string Comparator;
        /// <summary>
        /// The color palette to apply to the background, same values available as palette.
        /// </summary>
        public readonly string? CustomBgColor;
        /// <summary>
        /// The color palette to apply to the foreground, same values available as palette.
        /// </summary>
        public readonly string? CustomFgColor;
        /// <summary>
        /// Setting this to True hides values.
        /// </summary>
        public readonly bool? HideValue;
        /// <summary>
        /// Displays an image as the background.
        /// </summary>
        public readonly string? ImageUrl;
        /// <summary>
        /// The metric from the request to correlate with this conditional format.
        /// </summary>
        public readonly string? Metric;
        /// <summary>
        /// The color palette to apply. Valid values are `Blue`, `CustomBg`, `CustomImage`, `CustomText`, `GrayOnWhite`, `Grey`, `Green`, `Orange`, `Red`, `RedOnWhite`, `WhiteOnGray`, `WhiteOnGreen`, `GreenOnWhite`, `WhiteOnRed`, `WhiteOnYellow`, `YellowOnWhite`, `BlackOnLightYellow`, `BlackOnLightGreen`, `BlackOnLightRed`.
        /// </summary>
        public readonly string Palette;
        /// <summary>
        /// Defines the displayed timeframe.
        /// </summary>
        public readonly string? Timeframe;
        /// <summary>
        /// A value for the comparator.
        /// </summary>
        public readonly double Value;

        [OutputConstructor]
        private DashboardWidgetQueryTableDefinitionRequestConditionalFormat(
            string comparator,

            string? customBgColor,

            string? customFgColor,

            bool? hideValue,

            string? imageUrl,

            string? metric,

            string palette,

            string? timeframe,

            double value)
        {
            Comparator = comparator;
            CustomBgColor = customBgColor;
            CustomFgColor = customFgColor;
            HideValue = hideValue;
            ImageUrl = imageUrl;
            Metric = metric;
            Palette = palette;
            Timeframe = timeframe;
            Value = value;
        }
    }
}
