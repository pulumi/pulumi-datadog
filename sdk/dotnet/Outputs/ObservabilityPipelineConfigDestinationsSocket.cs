// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class ObservabilityPipelineConfigDestinationsSocket
    {
        /// <summary>
        /// Encoding format for log events. Valid values are `json`, `raw_message`.
        /// </summary>
        public readonly string Encoding;
        /// <summary>
        /// Defines the framing method for outgoing messages.
        /// </summary>
        public readonly Outputs.ObservabilityPipelineConfigDestinationsSocketFraming? Framing;
        /// <summary>
        /// The unique identifier for this destination.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of component IDs whose output is used as the `input` for this destination.
        /// </summary>
        public readonly ImmutableArray<string> Inputs;
        /// <summary>
        /// The protocol used to send logs. Valid values are `tcp`, `udp`.
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// Configuration for enabling TLS encryption between the pipeline component and external services.
        /// </summary>
        public readonly Outputs.ObservabilityPipelineConfigDestinationsSocketTls? Tls;

        [OutputConstructor]
        private ObservabilityPipelineConfigDestinationsSocket(
            string encoding,

            Outputs.ObservabilityPipelineConfigDestinationsSocketFraming? framing,

            string id,

            ImmutableArray<string> inputs,

            string mode,

            Outputs.ObservabilityPipelineConfigDestinationsSocketTls? tls)
        {
            Encoding = encoding;
            Framing = framing;
            Id = id;
            Inputs = inputs;
            Mode = mode;
            Tls = tls;
        }
    }
}
