// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class SyntheticsTestOptionsList
    {
        /// <summary>
        /// For SSL test, whether or not the test should allow self signed certificates.
        /// </summary>
        public readonly bool? AcceptSelfSigned;
        /// <summary>
        /// Allows loading insecure content for an HTTP test.
        /// </summary>
        public readonly bool? AllowInsecure;
        /// <summary>
        /// For SSL test, whether or not the test should fail on revoked certificate in stapled OCSP.
        /// </summary>
        public readonly bool? CheckCertificateRevocation;
        /// <summary>
        /// Determines whether or not the API HTTP test should follow redirects.
        /// </summary>
        public readonly bool? FollowRedirects;
        /// <summary>
        /// Minimum amount of time in failure required to trigger an alert. Default is `0`.
        /// </summary>
        public readonly int? MinFailureDuration;
        /// <summary>
        /// Minimum number of locations in failure required to trigger an alert. Default is `1`.
        /// </summary>
        public readonly int? MinLocationFailed;
        /// <summary>
        /// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
        /// </summary>
        public readonly string? MonitorName;
        public readonly Outputs.SyntheticsTestOptionsListMonitorOptions? MonitorOptions;
        public readonly int? MonitorPriority;
        /// <summary>
        /// Prevents saving screenshots of the steps.
        /// </summary>
        public readonly bool? NoScreenshot;
        public readonly Outputs.SyntheticsTestOptionsListRetry? Retry;
        /// <summary>
        /// How often the test should run (in seconds).
        /// </summary>
        public readonly int TickEvery;

        [OutputConstructor]
        private SyntheticsTestOptionsList(
            bool? acceptSelfSigned,

            bool? allowInsecure,

            bool? checkCertificateRevocation,

            bool? followRedirects,

            int? minFailureDuration,

            int? minLocationFailed,

            string? monitorName,

            Outputs.SyntheticsTestOptionsListMonitorOptions? monitorOptions,

            int? monitorPriority,

            bool? noScreenshot,

            Outputs.SyntheticsTestOptionsListRetry? retry,

            int tickEvery)
        {
            AcceptSelfSigned = acceptSelfSigned;
            AllowInsecure = allowInsecure;
            CheckCertificateRevocation = checkCertificateRevocation;
            FollowRedirects = followRedirects;
            MinFailureDuration = minFailureDuration;
            MinLocationFailed = minLocationFailed;
            MonitorName = monitorName;
            MonitorOptions = monitorOptions;
            MonitorPriority = monitorPriority;
            NoScreenshot = noScreenshot;
            Retry = retry;
            TickEvery = tickEvery;
        }
    }
}
