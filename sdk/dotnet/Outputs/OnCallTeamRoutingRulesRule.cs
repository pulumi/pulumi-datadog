// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class OnCallTeamRoutingRulesRule
    {
        /// <summary>
        /// Specifies the list of actions to perform when the routing rule is matched.
        /// </summary>
        public readonly ImmutableArray<Outputs.OnCallTeamRoutingRulesRuleAction> Actions;
        /// <summary>
        /// ID of the policy to be applied when this routing rule matches.
        /// </summary>
        public readonly string? EscalationPolicy;
        /// <summary>
        /// The ID of this rule.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Defines the query or condition that triggers this routing rule. Defaults to `""`.
        /// </summary>
        public readonly string? Query;
        /// <summary>
        /// Holds time zone information and a list of time restrictions for a routing rule.
        /// </summary>
        public readonly Outputs.OnCallTeamRoutingRulesRuleTimeRestrictions? TimeRestrictions;
        /// <summary>
        /// Defines the urgency for pages created via this rule. Only valid if `escalation_policy` is set. Valid values are `high`, `low`, `dynamic`.
        /// </summary>
        public readonly string? Urgency;

        [OutputConstructor]
        private OnCallTeamRoutingRulesRule(
            ImmutableArray<Outputs.OnCallTeamRoutingRulesRuleAction> actions,

            string? escalationPolicy,

            string? id,

            string? query,

            Outputs.OnCallTeamRoutingRulesRuleTimeRestrictions? timeRestrictions,

            string? urgency)
        {
            Actions = actions;
            EscalationPolicy = escalationPolicy;
            Id = id;
            Query = query;
            TimeRestrictions = timeRestrictions;
            Urgency = urgency;
        }
    }
}
