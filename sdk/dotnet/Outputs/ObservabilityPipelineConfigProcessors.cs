// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class ObservabilityPipelineConfigProcessors
    {
        /// <summary>
        /// The `add_fields` processor adds static key-value fields to logs.
        /// </summary>
        public readonly ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsAddField> AddFields;
        /// <summary>
        /// The `filter` processor allows conditional processing of logs based on a Datadog search query. Logs that match the `include` query are passed through; others are discarded.
        /// </summary>
        public readonly ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsFilter> Filters;
        /// <summary>
        /// The `parse_json` processor extracts JSON from a specified field and flattens it into the event. This is useful when logs contain embedded JSON as a string.
        /// </summary>
        public readonly ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsParseJson> ParseJsons;
        /// <summary>
        /// The `quota` measures logging traffic for logs that match a specified filter. When the configured daily quota is met, the processor can drop or alert.
        /// </summary>
        public readonly ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsQuota> Quotas;
        /// <summary>
        /// The `remove_fields` processor deletes specified fields from logs.
        /// </summary>
        public readonly ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsRemoveField> RemoveFields;
        /// <summary>
        /// The `rename_fields` processor changes field names.
        /// </summary>
        public readonly ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsRenameField> RenameFields;

        [OutputConstructor]
        private ObservabilityPipelineConfigProcessors(
            ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsAddField> addFields,

            ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsFilter> filters,

            ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsParseJson> parseJsons,

            ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsQuota> quotas,

            ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsRemoveField> removeFields,

            ImmutableArray<Outputs.ObservabilityPipelineConfigProcessorsRenameField> renameFields)
        {
            AddFields = addFields;
            Filters = filters;
            ParseJsons = parseJsons;
            Quotas = quotas;
            RemoveFields = removeFields;
            RenameFields = renameFields;
        }
    }
}
