// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class ScreenBoardWidget
    {
        public readonly int? AlertId;
        public readonly bool? AutoRefresh;
        public readonly string? Bgcolor;
        public readonly string? Check;
        public readonly string? Color;
        public readonly string? ColorPreference;
        public readonly string? Columns;
        public readonly string? DisplayFormat;
        public readonly string? Env;
        public readonly string? EventSize;
        public readonly string? FontSize;
        public readonly string? Group;
        public readonly ImmutableArray<string> GroupBies;
        public readonly string? Grouping;
        public readonly int? Height;
        public readonly bool? HideZeroCounts;
        public readonly string? Html;
        public readonly string? LayoutVersion;
        public readonly bool? Legend;
        public readonly string? LegendSize;
        public readonly string? Logset;
        public readonly bool? ManageStatusShowTitle;
        public readonly string? ManageStatusTitleAlign;
        public readonly string? ManageStatusTitleSize;
        public readonly string? ManageStatusTitleText;
        public readonly string? Margin;
        public readonly ImmutableDictionary<string, string>? Monitor;
        public readonly bool? MustShowBreakdown;
        public readonly bool? MustShowDistribution;
        public readonly bool? MustShowErrors;
        public readonly bool? MustShowHits;
        public readonly bool? MustShowLatency;
        public readonly bool? MustShowResourceList;
        public readonly ImmutableDictionary<string, string>? Params;
        public readonly string? Precision;
        public readonly string? Query;
        public readonly ImmutableArray<Outputs.ScreenBoardWidgetRule> Rules;
        public readonly string? ServiceName;
        public readonly string? ServiceService;
        public readonly bool? ShowLastTriggered;
        public readonly string? SizeVersion;
        public readonly string? Sizing;
        public readonly string? SummaryType;
        public readonly ImmutableArray<string> Tags;
        public readonly string? Text;
        public readonly string? TextAlign;
        public readonly string? TextSize;
        public readonly bool? Tick;
        public readonly string? TickEdge;
        public readonly string? TickPos;
        public readonly ImmutableArray<Outputs.ScreenBoardWidgetTileDef> TileDeves;
        public readonly ImmutableDictionary<string, string>? Time;
        public readonly ImmutableArray<string> Timeframes;
        public readonly string? Title;
        public readonly string? TitleAlign;
        public readonly int? TitleSize;
        public readonly string Type;
        public readonly string? Unit;
        public readonly string? Url;
        public readonly string? VizType;
        public readonly int? Width;
        public readonly int X;
        public readonly int Y;

        [OutputConstructor]
        private ScreenBoardWidget(
            int? alertId,

            bool? autoRefresh,

            string? bgcolor,

            string? check,

            string? color,

            string? colorPreference,

            string? columns,

            string? displayFormat,

            string? env,

            string? eventSize,

            string? fontSize,

            string? group,

            ImmutableArray<string> groupBies,

            string? grouping,

            int? height,

            bool? hideZeroCounts,

            string? html,

            string? layoutVersion,

            bool? legend,

            string? legendSize,

            string? logset,

            bool? manageStatusShowTitle,

            string? manageStatusTitleAlign,

            string? manageStatusTitleSize,

            string? manageStatusTitleText,

            string? margin,

            ImmutableDictionary<string, string>? monitor,

            bool? mustShowBreakdown,

            bool? mustShowDistribution,

            bool? mustShowErrors,

            bool? mustShowHits,

            bool? mustShowLatency,

            bool? mustShowResourceList,

            ImmutableDictionary<string, string>? @params,

            string? precision,

            string? query,

            ImmutableArray<Outputs.ScreenBoardWidgetRule> rules,

            string? serviceName,

            string? serviceService,

            bool? showLastTriggered,

            string? sizeVersion,

            string? sizing,

            string? summaryType,

            ImmutableArray<string> tags,

            string? text,

            string? textAlign,

            string? textSize,

            bool? tick,

            string? tickEdge,

            string? tickPos,

            ImmutableArray<Outputs.ScreenBoardWidgetTileDef> tileDeves,

            ImmutableDictionary<string, string>? time,

            ImmutableArray<string> timeframes,

            string? title,

            string? titleAlign,

            int? titleSize,

            string type,

            string? unit,

            string? url,

            string? vizType,

            int? width,

            int x,

            int y)
        {
            AlertId = alertId;
            AutoRefresh = autoRefresh;
            Bgcolor = bgcolor;
            Check = check;
            Color = color;
            ColorPreference = colorPreference;
            Columns = columns;
            DisplayFormat = displayFormat;
            Env = env;
            EventSize = eventSize;
            FontSize = fontSize;
            Group = group;
            GroupBies = groupBies;
            Grouping = grouping;
            Height = height;
            HideZeroCounts = hideZeroCounts;
            Html = html;
            LayoutVersion = layoutVersion;
            Legend = legend;
            LegendSize = legendSize;
            Logset = logset;
            ManageStatusShowTitle = manageStatusShowTitle;
            ManageStatusTitleAlign = manageStatusTitleAlign;
            ManageStatusTitleSize = manageStatusTitleSize;
            ManageStatusTitleText = manageStatusTitleText;
            Margin = margin;
            Monitor = monitor;
            MustShowBreakdown = mustShowBreakdown;
            MustShowDistribution = mustShowDistribution;
            MustShowErrors = mustShowErrors;
            MustShowHits = mustShowHits;
            MustShowLatency = mustShowLatency;
            MustShowResourceList = mustShowResourceList;
            Params = @params;
            Precision = precision;
            Query = query;
            Rules = rules;
            ServiceName = serviceName;
            ServiceService = serviceService;
            ShowLastTriggered = showLastTriggered;
            SizeVersion = sizeVersion;
            Sizing = sizing;
            SummaryType = summaryType;
            Tags = tags;
            Text = text;
            TextAlign = textAlign;
            TextSize = textSize;
            Tick = tick;
            TickEdge = tickEdge;
            TickPos = tickPos;
            TileDeves = tileDeves;
            Time = time;
            Timeframes = timeframes;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
            Type = type;
            Unit = unit;
            Url = url;
            VizType = vizType;
            Width = width;
            X = x;
            Y = y;
        }
    }
}
