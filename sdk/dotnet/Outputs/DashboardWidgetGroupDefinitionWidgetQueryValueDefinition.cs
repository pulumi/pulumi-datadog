// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Outputs
{

    [OutputType]
    public sealed class DashboardWidgetGroupDefinitionWidgetQueryValueDefinition
    {
        /// <summary>
        /// A Boolean indicating whether to automatically scale the tile.
        /// </summary>
        public readonly bool? Autoscale;
        /// <summary>
        /// A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink> CustomLinks;
        /// <summary>
        /// The unit for the value displayed in the widget.
        /// </summary>
        public readonly string? CustomUnit;
        /// <summary>
        /// The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `1y`, `alert`.
        /// </summary>
        public readonly string? LiveSpan;
        /// <summary>
        /// The precision to use when displaying the value. Use `*` for maximum precision.
        /// </summary>
        public readonly int? Precision;
        /// <summary>
        /// A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).
        /// </summary>
        public readonly ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest> Requests;
        /// <summary>
        /// The alignment of the text in the widget. Valid values are `center`, `left`, `right`.
        /// </summary>
        public readonly string? TextAlign;
        /// <summary>
        /// Set a timeseries on the widget background.
        /// </summary>
        public readonly Outputs.DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTimeseriesBackground? TimeseriesBackground;
        /// <summary>
        /// The title of the widget.
        /// </summary>
        public readonly string? Title;
        /// <summary>
        /// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
        /// </summary>
        public readonly string? TitleAlign;
        /// <summary>
        /// The size of the widget's title (defaults to 16).
        /// </summary>
        public readonly string? TitleSize;

        [OutputConstructor]
        private DashboardWidgetGroupDefinitionWidgetQueryValueDefinition(
            bool? autoscale,

            ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionCustomLink> customLinks,

            string? customUnit,

            string? liveSpan,

            int? precision,

            ImmutableArray<Outputs.DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionRequest> requests,

            string? textAlign,

            Outputs.DashboardWidgetGroupDefinitionWidgetQueryValueDefinitionTimeseriesBackground? timeseriesBackground,

            string? title,

            string? titleAlign,

            string? titleSize)
        {
            Autoscale = autoscale;
            CustomLinks = customLinks;
            CustomUnit = customUnit;
            LiveSpan = liveSpan;
            Precision = precision;
            Requests = requests;
            TextAlign = textAlign;
            TimeseriesBackground = timeseriesBackground;
            Title = title;
            TitleAlign = titleAlign;
            TitleSize = titleSize;
        }
    }
}
