// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetTagPipelineRuleset
    {
        /// <summary>
        /// Use this data source to retrieve information about an existing Datadog tag pipeline ruleset.
        /// </summary>
        public static Task<GetTagPipelineRulesetResult> InvokeAsync(GetTagPipelineRulesetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTagPipelineRulesetResult>("datadog:index/getTagPipelineRuleset:getTagPipelineRuleset", args ?? new GetTagPipelineRulesetArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about an existing Datadog tag pipeline ruleset.
        /// </summary>
        public static Output<GetTagPipelineRulesetResult> Invoke(GetTagPipelineRulesetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagPipelineRulesetResult>("datadog:index/getTagPipelineRuleset:getTagPipelineRuleset", args ?? new GetTagPipelineRulesetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about an existing Datadog tag pipeline ruleset.
        /// </summary>
        public static Output<GetTagPipelineRulesetResult> Invoke(GetTagPipelineRulesetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagPipelineRulesetResult>("datadog:index/getTagPipelineRuleset:getTagPipelineRuleset", args ?? new GetTagPipelineRulesetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTagPipelineRulesetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the ruleset.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("rules")]
        private List<Inputs.GetTagPipelineRulesetRuleArgs>? _rules;

        /// <summary>
        /// The rules in the ruleset.
        /// </summary>
        public List<Inputs.GetTagPipelineRulesetRuleArgs> Rules
        {
            get => _rules ?? (_rules = new List<Inputs.GetTagPipelineRulesetRuleArgs>());
            set => _rules = value;
        }

        public GetTagPipelineRulesetArgs()
        {
        }
        public static new GetTagPipelineRulesetArgs Empty => new GetTagPipelineRulesetArgs();
    }

    public sealed class GetTagPipelineRulesetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the ruleset.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("rules")]
        private InputList<Inputs.GetTagPipelineRulesetRuleInputArgs>? _rules;

        /// <summary>
        /// The rules in the ruleset.
        /// </summary>
        public InputList<Inputs.GetTagPipelineRulesetRuleInputArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.GetTagPipelineRulesetRuleInputArgs>());
            set => _rules = value;
        }

        public GetTagPipelineRulesetInvokeArgs()
        {
        }
        public static new GetTagPipelineRulesetInvokeArgs Empty => new GetTagPipelineRulesetInvokeArgs();
    }


    [OutputType]
    public sealed class GetTagPipelineRulesetResult
    {
        /// <summary>
        /// Whether the ruleset is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The ID of the ruleset.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the ruleset.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The position of the ruleset in the pipeline.
        /// </summary>
        public readonly int Position;
        /// <summary>
        /// The rules in the ruleset.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTagPipelineRulesetRuleResult> Rules;
        /// <summary>
        /// The version of the ruleset.
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetTagPipelineRulesetResult(
            bool enabled,

            string id,

            string name,

            int position,

            ImmutableArray<Outputs.GetTagPipelineRulesetRuleResult> rules,

            int version)
        {
            Enabled = enabled;
            Id = id;
            Name = name;
            Position = position;
            Rules = rules;
            Version = version;
        }
    }
}
