// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetCostBudget
    {
        /// <summary>
        /// Use this data source to retrieve information about an existing Datadog cost budget.
        /// </summary>
        public static Task<GetCostBudgetResult> InvokeAsync(GetCostBudgetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCostBudgetResult>("datadog:index/getCostBudget:getCostBudget", args ?? new GetCostBudgetArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about an existing Datadog cost budget.
        /// </summary>
        public static Output<GetCostBudgetResult> Invoke(GetCostBudgetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCostBudgetResult>("datadog:index/getCostBudget:getCostBudget", args ?? new GetCostBudgetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about an existing Datadog cost budget.
        /// </summary>
        public static Output<GetCostBudgetResult> Invoke(GetCostBudgetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCostBudgetResult>("datadog:index/getCostBudget:getCostBudget", args ?? new GetCostBudgetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCostBudgetArgs : global::Pulumi.InvokeArgs
    {
        [Input("entries")]
        private List<Inputs.GetCostBudgetEntryArgs>? _entries;

        /// <summary>
        /// The entries of the budget.
        /// </summary>
        public List<Inputs.GetCostBudgetEntryArgs> Entries
        {
            get => _entries ?? (_entries = new List<Inputs.GetCostBudgetEntryArgs>());
            set => _entries = value;
        }

        /// <summary>
        /// The ID of the budget.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetCostBudgetArgs()
        {
        }
        public static new GetCostBudgetArgs Empty => new GetCostBudgetArgs();
    }

    public sealed class GetCostBudgetInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("entries")]
        private InputList<Inputs.GetCostBudgetEntryInputArgs>? _entries;

        /// <summary>
        /// The entries of the budget.
        /// </summary>
        public InputList<Inputs.GetCostBudgetEntryInputArgs> Entries
        {
            get => _entries ?? (_entries = new InputList<Inputs.GetCostBudgetEntryInputArgs>());
            set => _entries = value;
        }

        /// <summary>
        /// The ID of the budget.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetCostBudgetInvokeArgs()
        {
        }
        public static new GetCostBudgetInvokeArgs Empty => new GetCostBudgetInvokeArgs();
    }


    [OutputType]
    public sealed class GetCostBudgetResult
    {
        /// <summary>
        /// The month when the budget ends (YYYYMM).
        /// </summary>
        public readonly int EndMonth;
        /// <summary>
        /// The entries of the budget.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCostBudgetEntryResult> Entries;
        /// <summary>
        /// The ID of the budget.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The cost query used to track against the budget.
        /// </summary>
        public readonly string MetricsQuery;
        /// <summary>
        /// The name of the budget.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The month when the budget starts (YYYYMM).
        /// </summary>
        public readonly int StartMonth;
        /// <summary>
        /// The sum of all budget entries' amounts.
        /// </summary>
        public readonly double TotalAmount;

        [OutputConstructor]
        private GetCostBudgetResult(
            int endMonth,

            ImmutableArray<Outputs.GetCostBudgetEntryResult> entries,

            string id,

            string metricsQuery,

            string name,

            int startMonth,

            double totalAmount)
        {
            EndMonth = endMonth;
            Entries = entries;
            Id = id;
            MetricsQuery = metricsQuery;
            Name = name;
            StartMonth = startMonth;
            TotalAmount = totalAmount;
        }
    }
}
