// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// The object describing the configuration of the retention filter to create/update.
    /// 
    /// ## Import
    /// 
    /// Import existing APM retention filter
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/apmRetentionFilter:ApmRetentionFilter foo &lt;filter_id&gt;
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/apmRetentionFilter:ApmRetentionFilter")]
    public partial class ApmRetentionFilter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// the status of the retention filter.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The spans filter. Spans matching this filter will be indexed and stored.
        /// </summary>
        [Output("filter")]
        public Output<Outputs.ApmRetentionFilterFilter?> Filter { get; private set; } = null!;

        /// <summary>
        /// The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.
        /// </summary>
        [Output("filterType")]
        public Output<string> FilterType { get; private set; } = null!;

        /// <summary>
        /// The name of the retention filter.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.
        /// </summary>
        [Output("rate")]
        public Output<string> Rate { get; private set; } = null!;


        /// <summary>
        /// Create a ApmRetentionFilter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApmRetentionFilter(string name, ApmRetentionFilterArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/apmRetentionFilter:ApmRetentionFilter", name, args ?? new ApmRetentionFilterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApmRetentionFilter(string name, Input<string> id, ApmRetentionFilterState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/apmRetentionFilter:ApmRetentionFilter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApmRetentionFilter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApmRetentionFilter Get(string name, Input<string> id, ApmRetentionFilterState? state = null, CustomResourceOptions? options = null)
        {
            return new ApmRetentionFilter(name, id, state, options);
        }
    }

    public sealed class ApmRetentionFilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// the status of the retention filter.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The spans filter. Spans matching this filter will be indexed and stored.
        /// </summary>
        [Input("filter")]
        public Input<Inputs.ApmRetentionFilterFilterArgs>? Filter { get; set; }

        /// <summary>
        /// The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.
        /// </summary>
        [Input("filterType", required: true)]
        public Input<string> FilterType { get; set; } = null!;

        /// <summary>
        /// The name of the retention filter.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.
        /// </summary>
        [Input("rate", required: true)]
        public Input<string> Rate { get; set; } = null!;

        public ApmRetentionFilterArgs()
        {
        }
        public static new ApmRetentionFilterArgs Empty => new ApmRetentionFilterArgs();
    }

    public sealed class ApmRetentionFilterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// the status of the retention filter.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The spans filter. Spans matching this filter will be indexed and stored.
        /// </summary>
        [Input("filter")]
        public Input<Inputs.ApmRetentionFilterFilterGetArgs>? Filter { get; set; }

        /// <summary>
        /// The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.
        /// </summary>
        [Input("filterType")]
        public Input<string>? FilterType { get; set; }

        /// <summary>
        /// The name of the retention filter.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.
        /// </summary>
        [Input("rate")]
        public Input<string>? Rate { get; set; }

        public ApmRetentionFilterState()
        {
        }
        public static new ApmRetentionFilterState Empty => new ApmRetentionFilterState();
    }
}
