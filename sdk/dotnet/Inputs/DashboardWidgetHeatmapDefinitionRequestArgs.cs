// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class DashboardWidgetHeatmapDefinitionRequestArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The query to use for this widget.
        /// </summary>
        [Input("apmQuery")]
        public Input<Inputs.DashboardWidgetApmQueryArgs>? ApmQuery { get; set; }

        [Input("formulas")]
        private InputList<Inputs.DashboardWidgetHeatmapDefinitionRequestFormulaArgs>? _formulas;
        public InputList<Inputs.DashboardWidgetHeatmapDefinitionRequestFormulaArgs> Formulas
        {
            get => _formulas ?? (_formulas = new InputList<Inputs.DashboardWidgetHeatmapDefinitionRequestFormulaArgs>());
            set => _formulas = value;
        }

        /// <summary>
        /// The query to use for this widget.
        /// </summary>
        [Input("logQuery")]
        public Input<Inputs.DashboardWidgetLogQueryArgs>? LogQuery { get; set; }

        /// <summary>
        /// The process query to use in the widget. The structure of this block is described below.
        /// </summary>
        [Input("processQuery")]
        public Input<Inputs.DashboardWidgetHeatmapDefinitionRequestProcessQueryArgs>? ProcessQuery { get; set; }

        /// <summary>
        /// The metric query to use for this widget.
        /// </summary>
        [Input("q")]
        public Input<string>? Q { get; set; }

        [Input("queries")]
        private InputList<Inputs.DashboardWidgetHeatmapDefinitionRequestQueryArgs>? _queries;
        public InputList<Inputs.DashboardWidgetHeatmapDefinitionRequestQueryArgs> Queries
        {
            get => _queries ?? (_queries = new InputList<Inputs.DashboardWidgetHeatmapDefinitionRequestQueryArgs>());
            set => _queries = value;
        }

        /// <summary>
        /// The query to use for this widget.
        /// </summary>
        [Input("rumQuery")]
        public Input<Inputs.DashboardWidgetRumQueryArgs>? RumQuery { get; set; }

        /// <summary>
        /// The query to use for this widget.
        /// </summary>
        [Input("securityQuery")]
        public Input<Inputs.DashboardWidgetSecurityQueryArgs>? SecurityQuery { get; set; }

        /// <summary>
        /// The style of the widget graph. One nested block is allowed using the structure below.
        /// </summary>
        [Input("style")]
        public Input<Inputs.DashboardWidgetHeatmapDefinitionRequestStyleArgs>? Style { get; set; }

        public DashboardWidgetHeatmapDefinitionRequestArgs()
        {
        }
        public static new DashboardWidgetHeatmapDefinitionRequestArgs Empty => new DashboardWidgetHeatmapDefinitionRequestArgs();
    }
}
