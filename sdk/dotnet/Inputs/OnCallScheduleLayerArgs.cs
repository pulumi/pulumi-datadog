// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class OnCallScheduleLayerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The date/time when this layer should become active (in ISO 8601).
        /// </summary>
        [Input("effectiveDate", required: true)]
        public Input<string> EffectiveDate { get; set; } = null!;

        /// <summary>
        /// The date/time after which this layer no longer applies (in ISO 8601).
        /// </summary>
        [Input("endDate")]
        public Input<string>? EndDate { get; set; }

        /// <summary>
        /// The ID of this layer.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Rotation interval for this layer.
        /// </summary>
        [Input("interval")]
        public Input<Inputs.OnCallScheduleLayerIntervalArgs>? Interval { get; set; }

        /// <summary>
        /// The name of this layer. Should be unique within the schedule.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("restrictions")]
        private InputList<Inputs.OnCallScheduleLayerRestrictionArgs>? _restrictions;

        /// <summary>
        /// List of restrictions for the layer.
        /// </summary>
        public InputList<Inputs.OnCallScheduleLayerRestrictionArgs> Restrictions
        {
            get => _restrictions ?? (_restrictions = new InputList<Inputs.OnCallScheduleLayerRestrictionArgs>());
            set => _restrictions = value;
        }

        /// <summary>
        /// The date/time when the rotation for this layer starts (in ISO 8601).
        /// </summary>
        [Input("rotationStart", required: true)]
        public Input<string> RotationStart { get; set; } = null!;

        [Input("users", required: true)]
        private InputList<string>? _users;

        /// <summary>
        /// List of user IDs for the layer. Can either be a valid user id or null
        /// </summary>
        public InputList<string> Users
        {
            get => _users ?? (_users = new InputList<string>());
            set => _users = value;
        }

        public OnCallScheduleLayerArgs()
        {
        }
        public static new OnCallScheduleLayerArgs Empty => new OnCallScheduleLayerArgs();
    }
}
