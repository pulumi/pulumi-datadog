// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class SyntheticsTestMobileStepParamsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Check type to use for an assertion step. Valid values are `equals`, `notEquals`, `contains`, `notContains`, `startsWith`, `notStartsWith`, `greater`, `lower`, `greaterEquals`, `lowerEquals`, `matchRegex`, `between`, `isEmpty`, `notIsEmpty`.
        /// </summary>
        [Input("check")]
        public Input<string>? Check { get; set; }

        /// <summary>
        /// Delay between each key stroke for a "type test" step.
        /// </summary>
        [Input("delay")]
        public Input<int>? Delay { get; set; }

        /// <summary>
        /// Valid values are `up`, `down`, `left`, `right`.
        /// </summary>
        [Input("direction")]
        public Input<string>? Direction { get; set; }

        /// <summary>
        /// Element to use for the step, JSON encoded string.
        /// </summary>
        [Input("element")]
        public Input<Inputs.SyntheticsTestMobileStepParamsElementGetArgs>? Element { get; set; }

        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        [Input("maxScrolls")]
        public Input<int>? MaxScrolls { get; set; }

        [Input("positions")]
        private InputList<Inputs.SyntheticsTestMobileStepParamsPositionGetArgs>? _positions;
        public InputList<Inputs.SyntheticsTestMobileStepParamsPositionGetArgs> Positions
        {
            get => _positions ?? (_positions = new InputList<Inputs.SyntheticsTestMobileStepParamsPositionGetArgs>());
            set => _positions = value;
        }

        /// <summary>
        /// ID of the Synthetics test to use as subtest.
        /// </summary>
        [Input("subtestPublicId")]
        public Input<string>? SubtestPublicId { get; set; }

        /// <summary>
        /// Value of the step.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        /// <summary>
        /// Details of the variable to extract.
        /// </summary>
        [Input("variable")]
        public Input<Inputs.SyntheticsTestMobileStepParamsVariableGetArgs>? Variable { get; set; }

        [Input("withEnter")]
        public Input<bool>? WithEnter { get; set; }

        /// <summary>
        /// X coordinates for a "scroll step".
        /// </summary>
        [Input("x")]
        public Input<double>? X { get; set; }

        /// <summary>
        /// Y coordinates for a "scroll step".
        /// </summary>
        [Input("y")]
        public Input<double>? Y { get; set; }

        public SyntheticsTestMobileStepParamsGetArgs()
        {
        }
        public static new SyntheticsTestMobileStepParamsGetArgs Empty => new SyntheticsTestMobileStepParamsGetArgs();
    }
}
