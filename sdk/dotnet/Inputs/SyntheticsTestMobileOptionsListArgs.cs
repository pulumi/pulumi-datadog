// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class SyntheticsTestMobileOptionsListArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowApplicationCrash")]
        public Input<bool>? AllowApplicationCrash { get; set; }

        [Input("bindings")]
        private InputList<Inputs.SyntheticsTestMobileOptionsListBindingArgs>? _bindings;

        /// <summary>
        /// Restriction policy bindings for the Synthetic mobile test. Should not be used in parallel with a `datadog.RestrictionPolicy` resource
        /// </summary>
        public InputList<Inputs.SyntheticsTestMobileOptionsListBindingArgs> Bindings
        {
            get => _bindings ?? (_bindings = new InputList<Inputs.SyntheticsTestMobileOptionsListBindingArgs>());
            set => _bindings = value;
        }

        /// <summary>
        /// CI/CD options for a Synthetic test.
        /// </summary>
        [Input("ci")]
        public Input<Inputs.SyntheticsTestMobileOptionsListCiArgs>? Ci { get; set; }

        [Input("defaultStepTimeout")]
        public Input<int>? DefaultStepTimeout { get; set; }

        [Input("deviceIds", required: true)]
        private InputList<string>? _deviceIds;
        public InputList<string> DeviceIds
        {
            get => _deviceIds ?? (_deviceIds = new InputList<string>());
            set => _deviceIds = value;
        }

        [Input("disableAutoAcceptAlert")]
        public Input<bool>? DisableAutoAcceptAlert { get; set; }

        /// <summary>
        /// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
        /// </summary>
        [Input("minFailureDuration")]
        public Input<int>? MinFailureDuration { get; set; }

        [Input("mobileApplication", required: true)]
        public Input<Inputs.SyntheticsTestMobileOptionsListMobileApplicationArgs> MobileApplication { get; set; } = null!;

        /// <summary>
        /// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
        /// </summary>
        [Input("monitorName")]
        public Input<string>? MonitorName { get; set; }

        [Input("monitorOptions")]
        public Input<Inputs.SyntheticsTestMobileOptionsListMonitorOptionsArgs>? MonitorOptions { get; set; }

        [Input("monitorPriority")]
        public Input<int>? MonitorPriority { get; set; }

        /// <summary>
        /// Prevents saving screenshots of the steps.
        /// </summary>
        [Input("noScreenshot")]
        public Input<bool>? NoScreenshot { get; set; }

        [Input("restrictedRoles")]
        private InputList<string>? _restrictedRoles;

        /// <summary>
        /// A list of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `datadog.RestrictionPolicy` instead.
        /// </summary>
        [Obsolete(@"This field is no longer supported by the Datadog API. Please use `datadog.RestrictionPolicy` instead.")]
        public InputList<string> RestrictedRoles
        {
            get => _restrictedRoles ?? (_restrictedRoles = new InputList<string>());
            set => _restrictedRoles = value;
        }

        [Input("retry")]
        public Input<Inputs.SyntheticsTestMobileOptionsListRetryArgs>? Retry { get; set; }

        /// <summary>
        /// Object containing timeframes and timezone used for advanced scheduling.
        /// </summary>
        [Input("scheduling")]
        public Input<Inputs.SyntheticsTestMobileOptionsListSchedulingArgs>? Scheduling { get; set; }

        /// <summary>
        /// How often the test should run (in seconds). Valid range is `300-604800` for mobile tests.
        /// </summary>
        [Input("tickEvery", required: true)]
        public Input<int> TickEvery { get; set; } = null!;

        [Input("verbosity")]
        public Input<int>? Verbosity { get; set; }

        public SyntheticsTestMobileOptionsListArgs()
        {
        }
        public static new SyntheticsTestMobileOptionsListArgs Empty => new SyntheticsTestMobileOptionsListArgs();
    }
}
