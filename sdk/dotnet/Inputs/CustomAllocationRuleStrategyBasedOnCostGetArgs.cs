// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class CustomAllocationRuleStrategyBasedOnCostGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The condition to match. Valid values are `=`, `!=`, `Is`, `is not`, `Like`, `In`, `not in`.
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        /// <summary>
        /// The tag key to use as the basis for cost allocation calculations.
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        /// <summary>
        /// The single tag value to use for cost calculations. Use with conditions like `=`, `!=`, `Is`, `is not`, `Like`.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        [Input("values")]
        private InputList<string>? _values;

        /// <summary>
        /// A list of tag values to use for cost calculations. Use with `In` or `not in` conditions.
        /// </summary>
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public CustomAllocationRuleStrategyBasedOnCostGetArgs()
        {
        }
        public static new CustomAllocationRuleStrategyBasedOnCostGetArgs Empty => new CustomAllocationRuleStrategyBasedOnCostGetArgs();
    }
}
