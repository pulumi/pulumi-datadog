// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class ObservabilityPipelineConfigProcessorsDedupeGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("fields", required: true)]
        private InputList<string>? _fields;

        /// <summary>
        /// A list of log field paths to check for duplicates.
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        /// <summary>
        /// The unique identifier for this processor.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// A Datadog search query used to determine which logs this processor targets.
        /// </summary>
        [Input("include", required: true)]
        public Input<string> Include { get; set; } = null!;

        [Input("inputs", required: true)]
        private InputList<string>? _inputs;

        /// <summary>
        /// A list of component IDs whose output is used as the input for this processor.
        /// </summary>
        public InputList<string> Inputs
        {
            get => _inputs ?? (_inputs = new InputList<string>());
            set => _inputs = value;
        }

        /// <summary>
        /// The deduplication mode to apply to the fields.
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        public ObservabilityPipelineConfigProcessorsDedupeGetArgs()
        {
        }
        public static new ObservabilityPipelineConfigProcessorsDedupeGetArgs Empty => new ObservabilityPipelineConfigProcessorsDedupeGetArgs();
    }
}
