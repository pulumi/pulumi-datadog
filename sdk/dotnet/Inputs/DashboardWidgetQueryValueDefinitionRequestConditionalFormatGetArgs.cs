// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class DashboardWidgetQueryValueDefinitionRequestConditionalFormatGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The comparator to use. Valid values are `=`, `&gt;`, `&gt;=`, `&lt;`, `&lt;=`.
        /// </summary>
        [Input("comparator", required: true)]
        public Input<string> Comparator { get; set; } = null!;

        /// <summary>
        /// The color palette to apply to the background, same values available as palette.
        /// </summary>
        [Input("customBgColor")]
        public Input<string>? CustomBgColor { get; set; }

        /// <summary>
        /// The color palette to apply to the foreground, same values available as palette.
        /// </summary>
        [Input("customFgColor")]
        public Input<string>? CustomFgColor { get; set; }

        /// <summary>
        /// Setting this to True hides values.
        /// </summary>
        [Input("hideValue")]
        public Input<bool>? HideValue { get; set; }

        /// <summary>
        /// Displays an image as the background.
        /// </summary>
        [Input("imageUrl")]
        public Input<string>? ImageUrl { get; set; }

        /// <summary>
        /// The metric from the request to correlate with this conditional format.
        /// </summary>
        [Input("metric")]
        public Input<string>? Metric { get; set; }

        /// <summary>
        /// The color palette to apply. Valid values are `Blue`, `CustomBg`, `CustomImage`, `CustomText`, `GrayOnWhite`, `Grey`, `Green`, `Orange`, `Red`, `RedOnWhite`, `WhiteOnGray`, `WhiteOnGreen`, `GreenOnWhite`, `WhiteOnRed`, `WhiteOnYellow`, `YellowOnWhite`, `BlackOnLightYellow`, `BlackOnLightGreen`, `BlackOnLightRed`.
        /// </summary>
        [Input("palette", required: true)]
        public Input<string> Palette { get; set; } = null!;

        /// <summary>
        /// Defines the displayed timeframe.
        /// </summary>
        [Input("timeframe")]
        public Input<string>? Timeframe { get; set; }

        /// <summary>
        /// A value for the comparator.
        /// </summary>
        [Input("value", required: true)]
        public Input<double> Value { get; set; } = null!;

        public DashboardWidgetQueryValueDefinitionRequestConditionalFormatGetArgs()
        {
        }
        public static new DashboardWidgetQueryValueDefinitionRequestConditionalFormatGetArgs Empty => new DashboardWidgetQueryValueDefinitionRequestConditionalFormatGetArgs();
    }
}
