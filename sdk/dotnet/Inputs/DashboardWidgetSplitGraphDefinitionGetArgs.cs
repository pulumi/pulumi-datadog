// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class DashboardWidgetSplitGraphDefinitionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Normalize y axes across graphs.
        /// </summary>
        [Input("hasUniformYAxes")]
        public Input<bool>? HasUniformYAxes { get; set; }

        /// <summary>
        /// The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.
        /// </summary>
        [Input("liveSpan")]
        public Input<string>? LiveSpan { get; set; }

        /// <summary>
        /// The query used to size the map. Exactly one nested block is allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).
        /// </summary>
        [Input("size", required: true)]
        public Input<string> Size { get; set; } = null!;

        /// <summary>
        /// The original widget we are splitting on.
        /// </summary>
        [Input("sourceWidgetDefinition", required: true)]
        public Input<Inputs.DashboardWidgetSplitGraphDefinitionSourceWidgetDefinitionGetArgs> SourceWidgetDefinition { get; set; } = null!;

        /// <summary>
        /// Encapsulates all user choices about how to split a graph.
        /// </summary>
        [Input("splitConfig", required: true)]
        public Input<Inputs.DashboardWidgetSplitGraphDefinitionSplitConfigGetArgs> SplitConfig { get; set; } = null!;

        /// <summary>
        /// The title of the widget.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public DashboardWidgetSplitGraphDefinitionGetArgs()
        {
        }
        public static new DashboardWidgetSplitGraphDefinitionGetArgs Empty => new DashboardWidgetSplitGraphDefinitionGetArgs();
    }
}
