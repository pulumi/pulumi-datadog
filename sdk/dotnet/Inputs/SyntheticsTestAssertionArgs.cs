// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class SyntheticsTestAssertionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If assertion type is `javascript`, this is the JavaScript code that performs the assertions.
        /// </summary>
        [Input("code")]
        public Input<string>? Code { get; set; }

        /// <summary>
        /// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
        /// </summary>
        [Input("operator")]
        public Input<string>? Operator { get; set; }

        /// <summary>
        /// If assertion type is `header`, this is the header name.
        /// </summary>
        [Input("property")]
        public Input<string>? Property { get; set; }

        /// <summary>
        /// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
        /// </summary>
        [Input("target")]
        public Input<string>? Target { get; set; }

        /// <summary>
        /// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
        /// </summary>
        [Input("targetjsonpath")]
        public Input<Inputs.SyntheticsTestAssertionTargetjsonpathArgs>? Targetjsonpath { get; set; }

        /// <summary>
        /// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
        /// </summary>
        [Input("targetjsonschema")]
        public Input<Inputs.SyntheticsTestAssertionTargetjsonschemaArgs>? Targetjsonschema { get; set; }

        /// <summary>
        /// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
        /// </summary>
        [Input("targetxpath")]
        public Input<Inputs.SyntheticsTestAssertionTargetxpathArgs>? Targetxpath { get; set; }

        /// <summary>
        /// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
        /// </summary>
        [Input("timingsScope")]
        public Input<string>? TimingsScope { get; set; }

        /// <summary>
        /// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`, `javascript`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public SyntheticsTestAssertionArgs()
        {
        }
        public static new SyntheticsTestAssertionArgs Empty => new SyntheticsTestAssertionArgs();
    }
}
