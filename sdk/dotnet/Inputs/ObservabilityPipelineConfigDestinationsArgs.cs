// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class ObservabilityPipelineConfigDestinationsArgs : global::Pulumi.ResourceArgs
    {
        [Input("amazonOpensearches")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsAmazonOpensearchArgs>? _amazonOpensearches;

        /// <summary>
        /// The `amazon_opensearch` destination writes logs to Amazon OpenSearch.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsAmazonOpensearchArgs> AmazonOpensearches
        {
            get => _amazonOpensearches ?? (_amazonOpensearches = new InputList<Inputs.ObservabilityPipelineConfigDestinationsAmazonOpensearchArgs>());
            set => _amazonOpensearches = value;
        }

        [Input("amazonS3s")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsAmazonS3Args>? _amazonS3s;

        /// <summary>
        /// The `amazon_s3` destination sends your logs in Datadog-rehydratable format to an Amazon S3 bucket for archiving.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsAmazonS3Args> AmazonS3s
        {
            get => _amazonS3s ?? (_amazonS3s = new InputList<Inputs.ObservabilityPipelineConfigDestinationsAmazonS3Args>());
            set => _amazonS3s = value;
        }

        [Input("amazonSecurityLakes")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsAmazonSecurityLakeArgs>? _amazonSecurityLakes;

        /// <summary>
        /// The `amazon_security_lake` destination sends your logs to Amazon Security Lake.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsAmazonSecurityLakeArgs> AmazonSecurityLakes
        {
            get => _amazonSecurityLakes ?? (_amazonSecurityLakes = new InputList<Inputs.ObservabilityPipelineConfigDestinationsAmazonSecurityLakeArgs>());
            set => _amazonSecurityLakes = value;
        }

        [Input("azureStorages")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsAzureStorageArgs>? _azureStorages;

        /// <summary>
        /// The `azure_storage` destination forwards logs to an Azure Blob Storage container.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsAzureStorageArgs> AzureStorages
        {
            get => _azureStorages ?? (_azureStorages = new InputList<Inputs.ObservabilityPipelineConfigDestinationsAzureStorageArgs>());
            set => _azureStorages = value;
        }

        [Input("crowdstrikeNextGenSiems")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemArgs>? _crowdstrikeNextGenSiems;

        /// <summary>
        /// The `crowdstrike_next_gen_siem` destination forwards logs to CrowdStrike Next Gen SIEM.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemArgs> CrowdstrikeNextGenSiems
        {
            get => _crowdstrikeNextGenSiems ?? (_crowdstrikeNextGenSiems = new InputList<Inputs.ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemArgs>());
            set => _crowdstrikeNextGenSiems = value;
        }

        [Input("datadogLogs")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsDatadogLogArgs>? _datadogLogs;

        /// <summary>
        /// The `datadog_logs` destination forwards logs to Datadog Log Management.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsDatadogLogArgs> DatadogLogs
        {
            get => _datadogLogs ?? (_datadogLogs = new InputList<Inputs.ObservabilityPipelineConfigDestinationsDatadogLogArgs>());
            set => _datadogLogs = value;
        }

        [Input("elasticsearches")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsElasticsearchArgs>? _elasticsearches;

        /// <summary>
        /// The `elasticsearch` destination writes logs to an Elasticsearch cluster.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsElasticsearchArgs> Elasticsearches
        {
            get => _elasticsearches ?? (_elasticsearches = new InputList<Inputs.ObservabilityPipelineConfigDestinationsElasticsearchArgs>());
            set => _elasticsearches = value;
        }

        [Input("googleChronicles")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsGoogleChronicleArgs>? _googleChronicles;

        /// <summary>
        /// The `google_chronicle` destination sends logs to Google Chronicle.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsGoogleChronicleArgs> GoogleChronicles
        {
            get => _googleChronicles ?? (_googleChronicles = new InputList<Inputs.ObservabilityPipelineConfigDestinationsGoogleChronicleArgs>());
            set => _googleChronicles = value;
        }

        [Input("googleCloudStorages")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsGoogleCloudStorageArgs>? _googleCloudStorages;

        /// <summary>
        /// The `google_cloud_storage` destination stores logs in a Google Cloud Storage (GCS) bucket.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsGoogleCloudStorageArgs> GoogleCloudStorages
        {
            get => _googleCloudStorages ?? (_googleCloudStorages = new InputList<Inputs.ObservabilityPipelineConfigDestinationsGoogleCloudStorageArgs>());
            set => _googleCloudStorages = value;
        }

        [Input("googlePubsubs")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsGooglePubsubArgs>? _googlePubsubs;

        /// <summary>
        /// The `google_pubsub` destination publishes logs to a Google Cloud Pub/Sub topic.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsGooglePubsubArgs> GooglePubsubs
        {
            get => _googlePubsubs ?? (_googlePubsubs = new InputList<Inputs.ObservabilityPipelineConfigDestinationsGooglePubsubArgs>());
            set => _googlePubsubs = value;
        }

        [Input("microsoftSentinels")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsMicrosoftSentinelArgs>? _microsoftSentinels;

        /// <summary>
        /// The `microsoft_sentinel` destination forwards logs to Microsoft Sentinel.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsMicrosoftSentinelArgs> MicrosoftSentinels
        {
            get => _microsoftSentinels ?? (_microsoftSentinels = new InputList<Inputs.ObservabilityPipelineConfigDestinationsMicrosoftSentinelArgs>());
            set => _microsoftSentinels = value;
        }

        [Input("newRelics")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsNewRelicArgs>? _newRelics;

        /// <summary>
        /// The `new_relic` destination sends logs to the New Relic platform.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsNewRelicArgs> NewRelics
        {
            get => _newRelics ?? (_newRelics = new InputList<Inputs.ObservabilityPipelineConfigDestinationsNewRelicArgs>());
            set => _newRelics = value;
        }

        [Input("opensearches")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsOpensearchArgs>? _opensearches;

        /// <summary>
        /// The `opensearch` destination writes logs to an OpenSearch cluster.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsOpensearchArgs> Opensearches
        {
            get => _opensearches ?? (_opensearches = new InputList<Inputs.ObservabilityPipelineConfigDestinationsOpensearchArgs>());
            set => _opensearches = value;
        }

        [Input("rsyslogs")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsRsyslogArgs>? _rsyslogs;

        /// <summary>
        /// The `rsyslog` destination forwards logs to an external `rsyslog` server over TCP or UDP using the syslog protocol.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsRsyslogArgs> Rsyslogs
        {
            get => _rsyslogs ?? (_rsyslogs = new InputList<Inputs.ObservabilityPipelineConfigDestinationsRsyslogArgs>());
            set => _rsyslogs = value;
        }

        [Input("sentinelOnes")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsSentinelOneArgs>? _sentinelOnes;

        /// <summary>
        /// The `sentinel_one` destination sends logs to SentinelOne.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsSentinelOneArgs> SentinelOnes
        {
            get => _sentinelOnes ?? (_sentinelOnes = new InputList<Inputs.ObservabilityPipelineConfigDestinationsSentinelOneArgs>());
            set => _sentinelOnes = value;
        }

        [Input("sockets")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsSocketArgs>? _sockets;

        /// <summary>
        /// The `socket` destination sends logs over TCP or UDP to a remote server.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsSocketArgs> Sockets
        {
            get => _sockets ?? (_sockets = new InputList<Inputs.ObservabilityPipelineConfigDestinationsSocketArgs>());
            set => _sockets = value;
        }

        [Input("splunkHecs")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsSplunkHecArgs>? _splunkHecs;

        /// <summary>
        /// The `splunk_hec` destination forwards logs to Splunk using the HTTP Event Collector (HEC).
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsSplunkHecArgs> SplunkHecs
        {
            get => _splunkHecs ?? (_splunkHecs = new InputList<Inputs.ObservabilityPipelineConfigDestinationsSplunkHecArgs>());
            set => _splunkHecs = value;
        }

        [Input("sumoLogics")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsSumoLogicArgs>? _sumoLogics;

        /// <summary>
        /// The `sumo_logic` destination forwards logs to Sumo Logic.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsSumoLogicArgs> SumoLogics
        {
            get => _sumoLogics ?? (_sumoLogics = new InputList<Inputs.ObservabilityPipelineConfigDestinationsSumoLogicArgs>());
            set => _sumoLogics = value;
        }

        [Input("syslogNgs")]
        private InputList<Inputs.ObservabilityPipelineConfigDestinationsSyslogNgArgs>? _syslogNgs;

        /// <summary>
        /// The `syslog_ng` destination forwards logs to an external `syslog-ng` server over TCP or UDP using the syslog protocol.
        /// </summary>
        public InputList<Inputs.ObservabilityPipelineConfigDestinationsSyslogNgArgs> SyslogNgs
        {
            get => _syslogNgs ?? (_syslogNgs = new InputList<Inputs.ObservabilityPipelineConfigDestinationsSyslogNgArgs>());
            set => _syslogNgs = value;
        }

        public ObservabilityPipelineConfigDestinationsArgs()
        {
        }
        public static new ObservabilityPipelineConfigDestinationsArgs Empty => new ObservabilityPipelineConfigDestinationsArgs();
    }
}
