// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class GetTagPipelineRulesetRuleQueryInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The addition configuration for the query.
        /// </summary>
        [Input("addition")]
        public Input<Inputs.GetTagPipelineRulesetRuleQueryAdditionInputArgs>? Addition { get; set; }

        /// <summary>
        /// Whether the query matching is case insensitive.
        /// </summary>
        [Input("caseInsensitivity", required: true)]
        public Input<bool> CaseInsensitivity { get; set; } = null!;

        /// <summary>
        /// Whether to apply the query only if the key doesn't exist.
        /// </summary>
        [Input("ifNotExists", required: true)]
        public Input<bool> IfNotExists { get; set; } = null!;

        /// <summary>
        /// The query string.
        /// </summary>
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public GetTagPipelineRulesetRuleQueryInputArgs()
        {
        }
        public static new GetTagPipelineRulesetRuleQueryInputArgs Empty => new GetTagPipelineRulesetRuleQueryInputArgs();
    }
}
