// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class ObservabilityPipelineConfigSourcesGooglePubsubArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// GCP credentials used to authenticate with Google Cloud Storage.
        /// </summary>
        [Input("auth")]
        public Input<Inputs.ObservabilityPipelineConfigSourcesGooglePubsubAuthArgs>? Auth { get; set; }

        /// <summary>
        /// The decoding format used to interpret incoming logs.
        /// </summary>
        [Input("decoding", required: true)]
        public Input<string> Decoding { get; set; } = null!;

        /// <summary>
        /// The unique identifier for this component. Used to reference this component in other parts of the pipeline (e.g., as input to downstream components).
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The GCP project ID that owns the Pub/Sub subscription.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        /// <summary>
        /// The Pub/Sub subscription name from which messages are consumed.
        /// </summary>
        [Input("subscription", required: true)]
        public Input<string> Subscription { get; set; } = null!;

        /// <summary>
        /// Configuration for enabling TLS encryption between the pipeline component and external services.
        /// </summary>
        [Input("tls")]
        public Input<Inputs.ObservabilityPipelineConfigSourcesGooglePubsubTlsArgs>? Tls { get; set; }

        public ObservabilityPipelineConfigSourcesGooglePubsubArgs()
        {
        }
        public static new ObservabilityPipelineConfigSourcesGooglePubsubArgs Empty => new ObservabilityPipelineConfigSourcesGooglePubsubArgs();
    }
}
