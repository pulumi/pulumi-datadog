// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Keyword-based proximity matching for sensitive data.
        /// </summary>
        [Input("keywordOptions")]
        public Input<Inputs.ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleKeywordOptionsGetArgs>? KeywordOptions { get; set; }

        /// <summary>
        /// A name identifying the rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The action to take when a sensitive value is found.
        /// </summary>
        [Input("onMatch")]
        public Input<Inputs.ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleOnMatchGetArgs>? OnMatch { get; set; }

        /// <summary>
        /// Pattern detection configuration for identifying sensitive data using either a custom regex or a library reference.
        /// </summary>
        [Input("pattern")]
        public Input<Inputs.ObservabilityPipelineConfigProcessorsSensitiveDataScannerRulePatternGetArgs>? Pattern { get; set; }

        /// <summary>
        /// Field-level targeting options that determine where the scanner should operate.
        /// </summary>
        [Input("scope")]
        public Input<Inputs.ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleScopeGetArgs>? Scope { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags assigned to this rule for filtering and classification.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleGetArgs()
        {
        }
        public static new ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleGetArgs Empty => new ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleGetArgs();
    }
}
