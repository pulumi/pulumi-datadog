// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class PowerpackWidgetListStreamDefinitionRequestQueryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the field for logs pattern clustering. Can only be used with `LogsPatternStream`.
        /// </summary>
        [Input("clusteringPatternFieldPath")]
        public Input<string>? ClusteringPatternFieldPath { get; set; }

        /// <summary>
        /// Source from which to query items to display in the stream. Valid values are `LogsStream`, `AuditStream`, `CiPipelineStream`, `CiTestStream`, `RumIssueStream`, `ApmIssueStream`, `TraceStream`, `LogsIssueStream`, `LogsPatternStream`, `LogsTransactionStream`, `EventStream`, `RumStream`, `LlmObservabilityStream`.
        /// </summary>
        [Input("dataSource", required: true)]
        public Input<string> DataSource { get; set; } = null!;

        /// <summary>
        /// Size of events displayed in widget. Required if `DataSource` is `EventStream`. Valid values are `S`, `L`.
        /// </summary>
        [Input("eventSize")]
        public Input<string>? EventSize { get; set; }

        [Input("groupBies")]
        private InputList<Inputs.PowerpackWidgetListStreamDefinitionRequestQueryGroupByArgs>? _groupBies;

        /// <summary>
        /// Group by configuration for the List Stream widget. Group by can only be used with `LogsPatternStream` (up to 4 items) or `LogsTransactionStream` (one group by item is required) list stream source.
        /// </summary>
        public InputList<Inputs.PowerpackWidgetListStreamDefinitionRequestQueryGroupByArgs> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<Inputs.PowerpackWidgetListStreamDefinitionRequestQueryGroupByArgs>());
            set => _groupBies = value;
        }

        [Input("indexes")]
        private InputList<string>? _indexes;

        /// <summary>
        /// List of indexes.
        /// </summary>
        public InputList<string> Indexes
        {
            get => _indexes ?? (_indexes = new InputList<string>());
            set => _indexes = value;
        }

        /// <summary>
        /// Widget query.
        /// </summary>
        [Input("queryString")]
        public Input<string>? QueryString { get; set; }

        /// <summary>
        /// The facet and order to sort the data, for example: `{"column": "time", "order": "desc"}`.
        /// </summary>
        [Input("sort")]
        public Input<Inputs.PowerpackWidgetListStreamDefinitionRequestQuerySortArgs>? Sort { get; set; }

        /// <summary>
        /// Storage location (private beta).
        /// </summary>
        [Input("storage")]
        public Input<string>? Storage { get; set; }

        public PowerpackWidgetListStreamDefinitionRequestQueryArgs()
        {
        }
        public static new PowerpackWidgetListStreamDefinitionRequestQueryArgs Empty => new PowerpackWidgetListStreamDefinitionRequestQueryArgs();
    }
}
