// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class ChildOrganizationSettingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether or not the organization users can share widgets outside of Datadog.
        /// </summary>
        [Input("privateWidgetShare")]
        public Input<bool>? PrivateWidgetShare { get; set; }

        /// <summary>
        /// The access role of the user. Options are `st` (standard user), `adm` (admin user), or `ro` (read-only user). Allowed enum values: `st`, `adm` , `ro`, `ERROR`
        /// </summary>
        [Input("samlAutocreateAccessRole")]
        public Input<string>? SamlAutocreateAccessRole { get; set; }

        [Input("samlAutocreateUsersDomains")]
        private InputList<Inputs.ChildOrganizationSettingSamlAutocreateUsersDomainArgs>? _samlAutocreateUsersDomains;

        /// <summary>
        /// List of domains where the SAML automated user creation is enabled.
        /// </summary>
        public InputList<Inputs.ChildOrganizationSettingSamlAutocreateUsersDomainArgs> SamlAutocreateUsersDomains
        {
            get => _samlAutocreateUsersDomains ?? (_samlAutocreateUsersDomains = new InputList<Inputs.ChildOrganizationSettingSamlAutocreateUsersDomainArgs>());
            set => _samlAutocreateUsersDomains = value;
        }

        /// <summary>
        /// Whether or not SAML can be enabled for this organization.
        /// </summary>
        [Input("samlCanBeEnabled")]
        public Input<bool>? SamlCanBeEnabled { get; set; }

        /// <summary>
        /// Identity provider endpoint for SAML authentication.
        /// </summary>
        [Input("samlIdpEndpoint")]
        public Input<string>? SamlIdpEndpoint { get; set; }

        [Input("samlIdpInitiatedLogins")]
        private InputList<Inputs.ChildOrganizationSettingSamlIdpInitiatedLoginArgs>? _samlIdpInitiatedLogins;

        /// <summary>
        /// Whether or not a SAML identity provider metadata file was provided to the Datadog organization.
        /// </summary>
        public InputList<Inputs.ChildOrganizationSettingSamlIdpInitiatedLoginArgs> SamlIdpInitiatedLogins
        {
            get => _samlIdpInitiatedLogins ?? (_samlIdpInitiatedLogins = new InputList<Inputs.ChildOrganizationSettingSamlIdpInitiatedLoginArgs>());
            set => _samlIdpInitiatedLogins = value;
        }

        /// <summary>
        /// Whether or not a SAML identity provider metadata file was provided to the Datadog organization.
        /// </summary>
        [Input("samlIdpMetadataUploaded")]
        public Input<bool>? SamlIdpMetadataUploaded { get; set; }

        /// <summary>
        /// URL for SAML logging.
        /// </summary>
        [Input("samlLoginUrl")]
        public Input<string>? SamlLoginUrl { get; set; }

        [Input("samlStrictModes")]
        private InputList<Inputs.ChildOrganizationSettingSamlStrictModeArgs>? _samlStrictModes;

        /// <summary>
        /// Whether or not the SAML strict mode is enabled. If true, all users must log in with SAML.
        /// </summary>
        public InputList<Inputs.ChildOrganizationSettingSamlStrictModeArgs> SamlStrictModes
        {
            get => _samlStrictModes ?? (_samlStrictModes = new InputList<Inputs.ChildOrganizationSettingSamlStrictModeArgs>());
            set => _samlStrictModes = value;
        }

        [Input("samls")]
        private InputList<Inputs.ChildOrganizationSettingSamlArgs>? _samls;

        /// <summary>
        /// SAML properties
        /// </summary>
        public InputList<Inputs.ChildOrganizationSettingSamlArgs> Samls
        {
            get => _samls ?? (_samls = new InputList<Inputs.ChildOrganizationSettingSamlArgs>());
            set => _samls = value;
        }

        public ChildOrganizationSettingArgs()
        {
        }
        public static new ChildOrganizationSettingArgs Empty => new ChildOrganizationSettingArgs();
    }
}
