// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Inputs
{

    public sealed class SecurityNotificationRuleSelectorsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Comprises one or several key:value pairs for filtering security issues based on tags and attributes. Defaults to `""`.
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        [Input("ruleTypes", required: true)]
        private InputList<string>? _ruleTypes;

        /// <summary>
        /// Specifies security rule types for filtering signals and vulnerabilities that generate notifications.
        /// </summary>
        public InputList<string> RuleTypes
        {
            get => _ruleTypes ?? (_ruleTypes = new InputList<string>());
            set => _ruleTypes = value;
        }

        [Input("severities")]
        private InputList<string>? _severities;

        /// <summary>
        /// The security rules severities to consider.
        /// </summary>
        public InputList<string> Severities
        {
            get => _severities ?? (_severities = new InputList<string>());
            set => _severities = value;
        }

        /// <summary>
        /// The type of security issues the rule applies to. Use `security_signals` for rules based on security signals and `security_findings` for those based on vulnerabilities.
        /// </summary>
        [Input("triggerSource", required: true)]
        public Input<string> TriggerSource { get; set; } = null!;

        public SecurityNotificationRuleSelectorsArgs()
        {
        }
        public static new SecurityNotificationRuleSelectorsArgs Empty => new SecurityNotificationRuleSelectorsArgs();
    }
}
