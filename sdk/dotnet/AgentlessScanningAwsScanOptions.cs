// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog Agentless Scanning AWS scan options resource. This can be used to activate and configure Agentless scan options for an AWS account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Configure agentless scanning for an AWS account
    ///     var example = new Datadog.AgentlessScanningAwsScanOptions("example", new()
    ///     {
    ///         AwsAccountId = "123456789012",
    ///         Lambda = true,
    ///         SensitiveData = false,
    ///         VulnContainersOs = true,
    ///         VulnHostOs = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// #!/bin/bash
    /// 
    /// Import existing agentless scanning aws scan options by AWS Account ID
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/agentlessScanningAwsScanOptions:AgentlessScanningAwsScanOptions example 123456789012
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/agentlessScanningAwsScanOptions:AgentlessScanningAwsScanOptions")]
    public partial class AgentlessScanningAwsScanOptions : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The AWS Account ID for which agentless scanning is configured.
        /// </summary>
        [Output("awsAccountId")]
        public Output<string> AwsAccountId { get; private set; } = null!;

        /// <summary>
        /// Indicates if scanning of Lambda functions is enabled.
        /// </summary>
        [Output("lambda")]
        public Output<bool> Lambda { get; private set; } = null!;

        /// <summary>
        /// Indicates if scanning for sensitive data is enabled.
        /// </summary>
        [Output("sensitiveData")]
        public Output<bool> SensitiveData { get; private set; } = null!;

        /// <summary>
        /// Indicates if scanning for vulnerabilities in containers is enabled.
        /// </summary>
        [Output("vulnContainersOs")]
        public Output<bool> VulnContainersOs { get; private set; } = null!;

        /// <summary>
        /// Indicates if scanning for vulnerabilities in hosts is enabled.
        /// </summary>
        [Output("vulnHostOs")]
        public Output<bool> VulnHostOs { get; private set; } = null!;


        /// <summary>
        /// Create a AgentlessScanningAwsScanOptions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AgentlessScanningAwsScanOptions(string name, AgentlessScanningAwsScanOptionsArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/agentlessScanningAwsScanOptions:AgentlessScanningAwsScanOptions", name, args ?? new AgentlessScanningAwsScanOptionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AgentlessScanningAwsScanOptions(string name, Input<string> id, AgentlessScanningAwsScanOptionsState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/agentlessScanningAwsScanOptions:AgentlessScanningAwsScanOptions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AgentlessScanningAwsScanOptions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AgentlessScanningAwsScanOptions Get(string name, Input<string> id, AgentlessScanningAwsScanOptionsState? state = null, CustomResourceOptions? options = null)
        {
            return new AgentlessScanningAwsScanOptions(name, id, state, options);
        }
    }

    public sealed class AgentlessScanningAwsScanOptionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AWS Account ID for which agentless scanning is configured.
        /// </summary>
        [Input("awsAccountId", required: true)]
        public Input<string> AwsAccountId { get; set; } = null!;

        /// <summary>
        /// Indicates if scanning of Lambda functions is enabled.
        /// </summary>
        [Input("lambda", required: true)]
        public Input<bool> Lambda { get; set; } = null!;

        /// <summary>
        /// Indicates if scanning for sensitive data is enabled.
        /// </summary>
        [Input("sensitiveData", required: true)]
        public Input<bool> SensitiveData { get; set; } = null!;

        /// <summary>
        /// Indicates if scanning for vulnerabilities in containers is enabled.
        /// </summary>
        [Input("vulnContainersOs", required: true)]
        public Input<bool> VulnContainersOs { get; set; } = null!;

        /// <summary>
        /// Indicates if scanning for vulnerabilities in hosts is enabled.
        /// </summary>
        [Input("vulnHostOs", required: true)]
        public Input<bool> VulnHostOs { get; set; } = null!;

        public AgentlessScanningAwsScanOptionsArgs()
        {
        }
        public static new AgentlessScanningAwsScanOptionsArgs Empty => new AgentlessScanningAwsScanOptionsArgs();
    }

    public sealed class AgentlessScanningAwsScanOptionsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AWS Account ID for which agentless scanning is configured.
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// Indicates if scanning of Lambda functions is enabled.
        /// </summary>
        [Input("lambda")]
        public Input<bool>? Lambda { get; set; }

        /// <summary>
        /// Indicates if scanning for sensitive data is enabled.
        /// </summary>
        [Input("sensitiveData")]
        public Input<bool>? SensitiveData { get; set; }

        /// <summary>
        /// Indicates if scanning for vulnerabilities in containers is enabled.
        /// </summary>
        [Input("vulnContainersOs")]
        public Input<bool>? VulnContainersOs { get; set; }

        /// <summary>
        /// Indicates if scanning for vulnerabilities in hosts is enabled.
        /// </summary>
        [Input("vulnHostOs")]
        public Input<bool>? VulnHostOs { get; set; }

        public AgentlessScanningAwsScanOptionsState()
        {
        }
        public static new AgentlessScanningAwsScanOptionsState Empty => new AgentlessScanningAwsScanOptionsState();
    }
}
