// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// A connection that can be used in Actions, including in the Workflow Automation and App Builder products. This resource requires a registered application key.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var awsConnection = new Datadog.ActionConnection("aws_connection", new()
    ///     {
    ///         Name = "My AWS Connection",
    ///         Aws = new[]
    ///         {
    ///             
    ///             {
    ///                 { "assumeRole", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "accountId", "123456789012" },
    ///                         { "role", "role2" },
    ///                     },
    ///                 } },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var config = new Config();
    ///     var token1 = config.Require("token1");
    ///     var token2 = config.Require("token2");
    ///     var httpConnection = new Datadog.ActionConnection("http_connection", new()
    ///     {
    ///         Name = "My HTTP connection with token auth",
    ///         Http = new[]
    ///         {
    ///             
    ///             {
    ///                 { "baseUrl", "https://catfact.ninja" },
    ///                 { "tokenAuth", new[]
    ///                 {
    ///                     
    ///                     {
    ///                         { "tokens", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "type", "SECRET" },
    ///                                 { "name", "token1" },
    ///                                 { "value", token1 },
    ///                             },
    ///                             
    ///                             {
    ///                                 { "type", "SECRET" },
    ///                                 { "name", "token2" },
    ///                                 { "value", token2 },
    ///                             },
    ///                         } },
    ///                         { "headers", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "name", "header-one" },
    ///                                 { "value", "headerval" },
    ///                             },
    ///                             
    ///                             {
    ///                                 { "name", "h2" },
    ///                                 { "value", "{{ token1 }} test" },
    ///                             },
    ///                         } },
    ///                         { "urlParameters", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "name", "param1" },
    ///                                 { "value", "{{ token1 }}" },
    ///                             },
    ///                             
    ///                             {
    ///                                 { "name", "param2" },
    ///                                 { "value", "paramVal2" },
    ///                             },
    ///                         } },
    ///                         { "body", new[]
    ///                         {
    ///                             
    ///                             {
    ///                                 { "contentType", "application/json" },
    ///                                 { "content", JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///                                 {
    ///                                     ["key"] = "mykey",
    ///                                     ["value"] = "maybe with a secret: {{ token2 }}",
    ///                                 }) },
    ///                             },
    ///                         } },
    ///                     },
    ///                 } },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/actionConnection:ActionConnection my_connection 11111111-2222-3333-4444-555555555555
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/actionConnection:ActionConnection")]
    public partial class ActionConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configuration for an AWS connection
        /// </summary>
        [Output("aws")]
        public Output<Outputs.ActionConnectionAws?> Aws { get; private set; } = null!;

        /// <summary>
        /// Configuration for an HTTP connection
        /// </summary>
        [Output("http")]
        public Output<Outputs.ActionConnectionHttp?> Http { get; private set; } = null!;

        /// <summary>
        /// Name of the connection
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a ActionConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ActionConnection(string name, ActionConnectionArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/actionConnection:ActionConnection", name, args ?? new ActionConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ActionConnection(string name, Input<string> id, ActionConnectionState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/actionConnection:ActionConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ActionConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ActionConnection Get(string name, Input<string> id, ActionConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new ActionConnection(name, id, state, options);
        }
    }

    public sealed class ActionConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration for an AWS connection
        /// </summary>
        [Input("aws")]
        public Input<Inputs.ActionConnectionAwsArgs>? Aws { get; set; }

        /// <summary>
        /// Configuration for an HTTP connection
        /// </summary>
        [Input("http")]
        public Input<Inputs.ActionConnectionHttpArgs>? Http { get; set; }

        /// <summary>
        /// Name of the connection
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ActionConnectionArgs()
        {
        }
        public static new ActionConnectionArgs Empty => new ActionConnectionArgs();
    }

    public sealed class ActionConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration for an AWS connection
        /// </summary>
        [Input("aws")]
        public Input<Inputs.ActionConnectionAwsGetArgs>? Aws { get; set; }

        /// <summary>
        /// Configuration for an HTTP connection
        /// </summary>
        [Input("http")]
        public Input<Inputs.ActionConnectionHttpGetArgs>? Http { get; set; }

        /// <summary>
        /// Name of the connection
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ActionConnectionState()
        {
        }
        public static new ActionConnectionState Empty => new ActionConnectionState();
    }
}
