// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog monitor JSON resource. This can be used to create and manage Datadog monitors using the JSON definition.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var monitorJson = new Datadog.MonitorJson("monitor_json", new()
    ///     {
    ///         Monitor = @"{
    ///     ""name"": ""Example monitor - service check"",
    ///     ""type"": ""service check"",
    ///     ""query"": ""\""ntp.in_sync\"".by(\""*\"").last(2).count_by_status()"",
    ///     ""message"": ""Change the message triggers if any host's clock goes out of sync with the time given by NTP. The offset threshold is configured in the Agent's 'ntp.yaml' file.\n\nSee [Troubleshooting NTP Offset issues](https://docs.datadoghq.com/agent/troubleshooting/ntp for more details on cause and resolution."",
    ///     ""tags"": [],
    ///     ""multi"": true,
    /// 	""restricted_roles"": null,
    ///     ""options"": {
    ///         ""include_tags"": true,
    ///         ""new_host_delay"": 150,
    ///         ""notify_audit"": false,
    ///         ""notify_no_data"": false,
    ///         ""thresholds"": {
    ///             ""warning"": 1,
    ///             ""ok"": 1,
    ///             ""critical"": 1
    ///         }
    ///     },
    ///     ""priority"": null,
    ///     ""classification"": ""custom""
    /// }
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/monitorJson:MonitorJson monitor_json 123456
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/monitorJson:MonitorJson")]
    public partial class MonitorJson : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The JSON formatted definition of the monitor.
        /// </summary>
        [Output("monitor")]
        public Output<string> Monitor { get; private set; } = null!;

        /// <summary>
        /// The URL of the monitor.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a MonitorJson resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MonitorJson(string name, MonitorJsonArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/monitorJson:MonitorJson", name, args ?? new MonitorJsonArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MonitorJson(string name, Input<string> id, MonitorJsonState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/monitorJson:MonitorJson", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MonitorJson resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MonitorJson Get(string name, Input<string> id, MonitorJsonState? state = null, CustomResourceOptions? options = null)
        {
            return new MonitorJson(name, id, state, options);
        }
    }

    public sealed class MonitorJsonArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The JSON formatted definition of the monitor.
        /// </summary>
        [Input("monitor", required: true)]
        public Input<string> Monitor { get; set; } = null!;

        /// <summary>
        /// The URL of the monitor.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public MonitorJsonArgs()
        {
        }
        public static new MonitorJsonArgs Empty => new MonitorJsonArgs();
    }

    public sealed class MonitorJsonState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The JSON formatted definition of the monitor.
        /// </summary>
        [Input("monitor")]
        public Input<string>? Monitor { get; set; }

        /// <summary>
        /// The URL of the monitor.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public MonitorJsonState()
        {
        }
        public static new MonitorJsonState Empty => new MonitorJsonState();
    }
}
