// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog On-Call escalation policy resource. This can be used to create and manage Datadog On-Call escalation policies.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var policyTest = new Datadog.OnCallEscalationPolicy("policy_test", new()
    ///     {
    ///         Name = "Policy Name",
    ///         ResolvePageOnPolicyEnd = true,
    ///         Retries = 3,
    ///         Steps = new[]
    ///         {
    ///             new Datadog.Inputs.OnCallEscalationPolicyStepArgs
    ///             {
    ///                 Assignment = "round-robin",
    ///                 EscalateAfterSeconds = 300,
    ///                 Targets = new[]
    ///                 {
    ///                     new Datadog.Inputs.OnCallEscalationPolicyStepTargetArgs
    ///                     {
    ///                         Team = "00000000-aba2-0000-0000-000000000000",
    ///                     },
    ///                     new Datadog.Inputs.OnCallEscalationPolicyStepTargetArgs
    ///                     {
    ///                         User = "00000000-aba2-0000-0000-000000000000",
    ///                     },
    ///                     new Datadog.Inputs.OnCallEscalationPolicyStepTargetArgs
    ///                     {
    ///                         Schedule = "00000000-aba2-0000-0000-000000000000",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// Import an existing on_call_escalation_policy
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/onCallEscalationPolicy:OnCallEscalationPolicy test "b03a07d5-49da-43e9-83b4-5d84969b588b"
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/onCallEscalationPolicy:OnCallEscalationPolicy")]
    public partial class OnCallEscalationPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A human-readable name for the escalation policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
        /// </summary>
        [Output("resolvePageOnPolicyEnd")]
        public Output<bool> ResolvePageOnPolicyEnd { get; private set; } = null!;

        /// <summary>
        /// If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
        /// </summary>
        [Output("retries")]
        public Output<int> Retries { get; private set; } = null!;

        /// <summary>
        /// List of steps for the escalation policy.
        /// </summary>
        [Output("steps")]
        public Output<ImmutableArray<Outputs.OnCallEscalationPolicyStep>> Steps { get; private set; } = null!;

        /// <summary>
        /// A list of team ids associated with the escalation policy.
        /// </summary>
        [Output("teams")]
        public Output<ImmutableArray<string>> Teams { get; private set; } = null!;


        /// <summary>
        /// Create a OnCallEscalationPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OnCallEscalationPolicy(string name, OnCallEscalationPolicyArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/onCallEscalationPolicy:OnCallEscalationPolicy", name, args ?? new OnCallEscalationPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OnCallEscalationPolicy(string name, Input<string> id, OnCallEscalationPolicyState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/onCallEscalationPolicy:OnCallEscalationPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OnCallEscalationPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OnCallEscalationPolicy Get(string name, Input<string> id, OnCallEscalationPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new OnCallEscalationPolicy(name, id, state, options);
        }
    }

    public sealed class OnCallEscalationPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A human-readable name for the escalation policy.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
        /// </summary>
        [Input("resolvePageOnPolicyEnd")]
        public Input<bool>? ResolvePageOnPolicyEnd { get; set; }

        /// <summary>
        /// If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
        /// </summary>
        [Input("retries")]
        public Input<int>? Retries { get; set; }

        [Input("steps", required: true)]
        private InputList<Inputs.OnCallEscalationPolicyStepArgs>? _steps;

        /// <summary>
        /// List of steps for the escalation policy.
        /// </summary>
        public InputList<Inputs.OnCallEscalationPolicyStepArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.OnCallEscalationPolicyStepArgs>());
            set => _steps = value;
        }

        [Input("teams")]
        private InputList<string>? _teams;

        /// <summary>
        /// A list of team ids associated with the escalation policy.
        /// </summary>
        public InputList<string> Teams
        {
            get => _teams ?? (_teams = new InputList<string>());
            set => _teams = value;
        }

        public OnCallEscalationPolicyArgs()
        {
        }
        public static new OnCallEscalationPolicyArgs Empty => new OnCallEscalationPolicyArgs();
    }

    public sealed class OnCallEscalationPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A human-readable name for the escalation policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
        /// </summary>
        [Input("resolvePageOnPolicyEnd")]
        public Input<bool>? ResolvePageOnPolicyEnd { get; set; }

        /// <summary>
        /// If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
        /// </summary>
        [Input("retries")]
        public Input<int>? Retries { get; set; }

        [Input("steps")]
        private InputList<Inputs.OnCallEscalationPolicyStepGetArgs>? _steps;

        /// <summary>
        /// List of steps for the escalation policy.
        /// </summary>
        public InputList<Inputs.OnCallEscalationPolicyStepGetArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.OnCallEscalationPolicyStepGetArgs>());
            set => _steps = value;
        }

        [Input("teams")]
        private InputList<string>? _teams;

        /// <summary>
        /// A list of team ids associated with the escalation policy.
        /// </summary>
        public InputList<string> Teams
        {
            get => _teams ?? (_teams = new InputList<string>());
            set => _teams = value;
        }

        public OnCallEscalationPolicyState()
        {
        }
        public static new OnCallEscalationPolicyState Empty => new OnCallEscalationPolicyState();
    }
}
