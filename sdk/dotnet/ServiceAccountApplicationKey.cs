// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog `service_account_application_key` resource. This can be used to create and manage Datadog service account application keys.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create new service_account_application_key resource
    ///     var foo = new Datadog.ServiceAccountApplicationKey("foo", new()
    ///     {
    ///         ServiceAccountId = "00000000-0000-1234-0000-000000000000",
    ///         Name = "Application key for managing dashboards",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Importing a service account's application key cannot import the value of the key.
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/serviceAccountApplicationKey:ServiceAccountApplicationKey this "&lt;service_account_id&gt;:&lt;application_key_id&gt;"
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/serviceAccountApplicationKey:ServiceAccountApplicationKey")]
    public partial class ServiceAccountApplicationKey : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation date of the application key.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The value of the service account application key. This value cannot be imported.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// The last four characters of the application key.
        /// </summary>
        [Output("last4")]
        public Output<string> Last4 { get; private set; } = null!;

        /// <summary>
        /// Name of the application key.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ID of the service account that owns this key.
        /// </summary>
        [Output("serviceAccountId")]
        public Output<string> ServiceAccountId { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceAccountApplicationKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceAccountApplicationKey(string name, ServiceAccountApplicationKeyArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/serviceAccountApplicationKey:ServiceAccountApplicationKey", name, args ?? new ServiceAccountApplicationKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceAccountApplicationKey(string name, Input<string> id, ServiceAccountApplicationKeyState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/serviceAccountApplicationKey:ServiceAccountApplicationKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "key",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceAccountApplicationKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceAccountApplicationKey Get(string name, Input<string> id, ServiceAccountApplicationKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceAccountApplicationKey(name, id, state, options);
        }
    }

    public sealed class ServiceAccountApplicationKeyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the application key.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// ID of the service account that owns this key.
        /// </summary>
        [Input("serviceAccountId", required: true)]
        public Input<string> ServiceAccountId { get; set; } = null!;

        public ServiceAccountApplicationKeyArgs()
        {
        }
        public static new ServiceAccountApplicationKeyArgs Empty => new ServiceAccountApplicationKeyArgs();
    }

    public sealed class ServiceAccountApplicationKeyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation date of the application key.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("key")]
        private Input<string>? _key;

        /// <summary>
        /// The value of the service account application key. This value cannot be imported.
        /// </summary>
        public Input<string>? Key
        {
            get => _key;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _key = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The last four characters of the application key.
        /// </summary>
        [Input("last4")]
        public Input<string>? Last4 { get; set; }

        /// <summary>
        /// Name of the application key.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the service account that owns this key.
        /// </summary>
        [Input("serviceAccountId")]
        public Input<string>? ServiceAccountId { get; set; }

        public ServiceAccountApplicationKeyState()
        {
        }
        public static new ServiceAccountApplicationKeyState Empty => new ServiceAccountApplicationKeyState();
    }
}
