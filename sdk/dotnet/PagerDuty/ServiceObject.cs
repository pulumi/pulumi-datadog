// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.PagerDuty
{
    /// <summary>
    /// Provides access to individual Service Objects of Datadog - PagerDuty integrations. Note that the Datadog - PagerDuty integration must be activated in the Datadog UI in order for this resource to be usable.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testingFoo = new Datadog.PagerDuty.ServiceObject("testing_foo", new()
    ///     {
    ///         ServiceName = "testing_foo",
    ///         ServiceKey = "9876543210123456789",
    ///     });
    /// 
    ///     var testingBar = new Datadog.PagerDuty.ServiceObject("testing_bar", new()
    ///     {
    ///         ServiceName = "testing_bar",
    ///         ServiceKey = "54321098765432109876",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Pagerduty service object can be imported using the service_name, while the service_key should be passed by setting the environment variable SERVICE_KEY
    /// 
    /// ```sh
    /// $ pulumi import datadog:pagerduty/serviceObject:ServiceObject SERVICE_KEY=${service_key} datadog_integration_pagerduty_service_object.foo ${service_name}
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:pagerduty/serviceObject:ServiceObject")]
    public partial class ServiceObject : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Your Service name associated service key in PagerDuty. This key may also be referred to as an Integration Key or Routing Key in the Pagerduty Integration documentation to have it destroyed and recreated.
        /// </summary>
        [Output("serviceKey")]
        public Output<string> ServiceKey { get; private set; } = null!;

        /// <summary>
        /// Your Service name in PagerDuty.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceObject resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceObject(string name, ServiceObjectArgs args, CustomResourceOptions? options = null)
            : base("datadog:pagerduty/serviceObject:ServiceObject", name, args ?? new ServiceObjectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceObject(string name, Input<string> id, ServiceObjectState? state = null, CustomResourceOptions? options = null)
            : base("datadog:pagerduty/serviceObject:ServiceObject", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "serviceKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceObject resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceObject Get(string name, Input<string> id, ServiceObjectState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceObject(name, id, state, options);
        }
    }

    public sealed class ServiceObjectArgs : global::Pulumi.ResourceArgs
    {
        [Input("serviceKey", required: true)]
        private Input<string>? _serviceKey;

        /// <summary>
        /// Your Service name associated service key in PagerDuty. This key may also be referred to as an Integration Key or Routing Key in the Pagerduty Integration documentation to have it destroyed and recreated.
        /// </summary>
        public Input<string>? ServiceKey
        {
            get => _serviceKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _serviceKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Your Service name in PagerDuty.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public ServiceObjectArgs()
        {
        }
        public static new ServiceObjectArgs Empty => new ServiceObjectArgs();
    }

    public sealed class ServiceObjectState : global::Pulumi.ResourceArgs
    {
        [Input("serviceKey")]
        private Input<string>? _serviceKey;

        /// <summary>
        /// Your Service name associated service key in PagerDuty. This key may also be referred to as an Integration Key or Routing Key in the Pagerduty Integration documentation to have it destroyed and recreated.
        /// </summary>
        public Input<string>? ServiceKey
        {
            get => _serviceKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _serviceKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Your Service name in PagerDuty.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        public ServiceObjectState()
        {
        }
        public static new ServiceObjectState Empty => new ServiceObjectState();
    }
}
