// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// The provider type for the datadog package. By default, resources use package-wide configuration
    /// settings, however an explicit `Provider` instance may be created and passed during resource
    /// construction to achieve fine-grained programmatic control over provider settings. See the
    /// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
    /// </summary>
    [DatadogResourceType("pulumi:providers:datadog")]
    public partial class Provider : global::Pulumi.ProviderResource
    {
        /// <summary>
        /// (Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.
        /// </summary>
        [Output("apiKey")]
        public Output<string?> ApiKey { get; private set; } = null!;

        /// <summary>
        /// The API URL. This can also be set via the DD_HOST environment variable, and defaults to `https://api.datadoghq.com`. Note that this URL must not end with the `/api/` path. For example, `https://api.datadoghq.com/` is a correct value, while `https://api.datadoghq.com/api/` is not. And if you're working with "EU" version of Datadog, use `https://api.datadoghq.eu/`. Other Datadog region examples: `https://api.us5.datadoghq.com/`, `https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See https://docs.datadoghq.com/getting_started/site/ for all available regions.
        /// </summary>
        [Output("apiUrl")]
        public Output<string?> ApiUrl { get; private set; } = null!;

        /// <summary>
        /// (Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.
        /// </summary>
        [Output("appKey")]
        public Output<string?> AppKey { get; private set; } = null!;

        /// <summary>
        /// The AWS access key ID; used for cloud-provider-based authentication. This can also be set using the `AWS_ACCESS_KEY_ID` environment variable. Required when using `cloud_provider_type` set to `aws`.
        /// </summary>
        [Output("awsAccessKeyId")]
        public Output<string?> AwsAccessKeyId { get; private set; } = null!;

        /// <summary>
        /// The AWS secret access key; used for cloud-provider-based authentication. This can also be set using the `AWS_SECRET_ACCESS_KEY` environment variable. Required when using `cloud_provider_type` set to `aws`.
        /// </summary>
        [Output("awsSecretAccessKey")]
        public Output<string?> AwsSecretAccessKey { get; private set; } = null!;

        /// <summary>
        /// The AWS session token; used for cloud-provider-based authentication. This can also be set using the `AWS_SESSION_TOKEN` environment variable. Required when using `cloud_provider_type` set to `aws` and using temporary credentials.
        /// </summary>
        [Output("awsSessionToken")]
        public Output<string?> AwsSessionToken { get; private set; } = null!;

        /// <summary>
        /// The cloud provider region specifier; used for cloud-provider-based authentication. For example, `us-east-1` for AWS.
        /// </summary>
        [Output("cloudProviderRegion")]
        public Output<string?> CloudProviderRegion { get; private set; } = null!;

        /// <summary>
        /// Specifies the cloud provider used for cloud-provider-based authentication, enabling keyless access without API or app keys. Only [`aws`] is supported. This feature is in Preview. If you'd like to enable it for your organization, contact [support](https://docs.datadoghq.com/help/).
        /// </summary>
        [Output("cloudProviderType")]
        public Output<string?> CloudProviderType { get; private set; } = null!;

        /// <summary>
        /// Enables request retries on HTTP status codes 429 and 5xx. Valid values are [`true`, `false`]. Defaults to `true`.
        /// </summary>
        [Output("httpClientRetryEnabled")]
        public Output<string?> HttpClientRetryEnabled { get; private set; } = null!;

        /// <summary>
        /// The organization UUID; used for cloud-provider-based authentication. See the [Datadog API documentation](https://docs.datadoghq.com/api/v1/organizations/) for more information.
        /// </summary>
        [Output("orgUuid")]
        public Output<string?> OrgUuid { get; private set; } = null!;

        /// <summary>
        /// Enables validation of the provided API key during provider initialization. Valid values are [`true`, `false`]. Default is true. When false, api_key won't be checked.
        /// </summary>
        [Output("validate")]
        public Output<string?> Validate { get; private set; } = null!;


        /// <summary>
        /// Create a Provider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Provider(string name, ProviderArgs? args = null, CustomResourceOptions? options = null)
            : base("datadog", name, args ?? new ProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "apiKey",
                    "appKey",
                    "awsAccessKeyId",
                    "awsSecretAccessKey",
                    "awsSessionToken",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }

        /// <summary>
        /// This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
        /// </summary>
        public global::Pulumi.Output<ProviderTerraformConfigResult> TerraformConfig()
            => global::Pulumi.Deployment.Instance.Call<ProviderTerraformConfigResult>("pulumi:providers:datadog/terraformConfig", CallArgs.Empty, this);
    }

    public sealed class ProviderArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiKey")]
        private Input<string>? _apiKey;

        /// <summary>
        /// (Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.
        /// </summary>
        public Input<string>? ApiKey
        {
            get => _apiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The API URL. This can also be set via the DD_HOST environment variable, and defaults to `https://api.datadoghq.com`. Note that this URL must not end with the `/api/` path. For example, `https://api.datadoghq.com/` is a correct value, while `https://api.datadoghq.com/api/` is not. And if you're working with "EU" version of Datadog, use `https://api.datadoghq.eu/`. Other Datadog region examples: `https://api.us5.datadoghq.com/`, `https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See https://docs.datadoghq.com/getting_started/site/ for all available regions.
        /// </summary>
        [Input("apiUrl")]
        public Input<string>? ApiUrl { get; set; }

        [Input("appKey")]
        private Input<string>? _appKey;

        /// <summary>
        /// (Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.
        /// </summary>
        public Input<string>? AppKey
        {
            get => _appKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _appKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("awsAccessKeyId")]
        private Input<string>? _awsAccessKeyId;

        /// <summary>
        /// The AWS access key ID; used for cloud-provider-based authentication. This can also be set using the `AWS_ACCESS_KEY_ID` environment variable. Required when using `cloud_provider_type` set to `aws`.
        /// </summary>
        public Input<string>? AwsAccessKeyId
        {
            get => _awsAccessKeyId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _awsAccessKeyId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("awsSecretAccessKey")]
        private Input<string>? _awsSecretAccessKey;

        /// <summary>
        /// The AWS secret access key; used for cloud-provider-based authentication. This can also be set using the `AWS_SECRET_ACCESS_KEY` environment variable. Required when using `cloud_provider_type` set to `aws`.
        /// </summary>
        public Input<string>? AwsSecretAccessKey
        {
            get => _awsSecretAccessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _awsSecretAccessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("awsSessionToken")]
        private Input<string>? _awsSessionToken;

        /// <summary>
        /// The AWS session token; used for cloud-provider-based authentication. This can also be set using the `AWS_SESSION_TOKEN` environment variable. Required when using `cloud_provider_type` set to `aws` and using temporary credentials.
        /// </summary>
        public Input<string>? AwsSessionToken
        {
            get => _awsSessionToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _awsSessionToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The cloud provider region specifier; used for cloud-provider-based authentication. For example, `us-east-1` for AWS.
        /// </summary>
        [Input("cloudProviderRegion")]
        public Input<string>? CloudProviderRegion { get; set; }

        /// <summary>
        /// Specifies the cloud provider used for cloud-provider-based authentication, enabling keyless access without API or app keys. Only [`aws`] is supported. This feature is in Preview. If you'd like to enable it for your organization, contact [support](https://docs.datadoghq.com/help/).
        /// </summary>
        [Input("cloudProviderType")]
        public Input<string>? CloudProviderType { get; set; }

        /// <summary>
        /// [Experimental - Logs Pipelines, Monitors Security Monitoring Rules, and Service Level Objectives only] Configuration block containing settings to apply default resource tags across all resources.
        /// </summary>
        [Input("defaultTags", json: true)]
        public Input<Inputs.ProviderDefaultTagsArgs>? DefaultTags { get; set; }

        /// <summary>
        /// The HTTP request retry back off base. Defaults to 2.
        /// </summary>
        [Input("httpClientRetryBackoffBase", json: true)]
        public Input<int>? HttpClientRetryBackoffBase { get; set; }

        /// <summary>
        /// The HTTP request retry back off multiplier. Defaults to 2.
        /// </summary>
        [Input("httpClientRetryBackoffMultiplier", json: true)]
        public Input<int>? HttpClientRetryBackoffMultiplier { get; set; }

        /// <summary>
        /// Enables request retries on HTTP status codes 429 and 5xx. Valid values are [`true`, `false`]. Defaults to `true`.
        /// </summary>
        [Input("httpClientRetryEnabled")]
        public Input<string>? HttpClientRetryEnabled { get; set; }

        /// <summary>
        /// The HTTP request maximum retry number. Defaults to 3.
        /// </summary>
        [Input("httpClientRetryMaxRetries", json: true)]
        public Input<int>? HttpClientRetryMaxRetries { get; set; }

        /// <summary>
        /// The HTTP request retry timeout period. Defaults to 60 seconds.
        /// </summary>
        [Input("httpClientRetryTimeout", json: true)]
        public Input<int>? HttpClientRetryTimeout { get; set; }

        /// <summary>
        /// The organization UUID; used for cloud-provider-based authentication. See the [Datadog API documentation](https://docs.datadoghq.com/api/v1/organizations/) for more information.
        /// </summary>
        [Input("orgUuid")]
        public Input<string>? OrgUuid { get; set; }

        /// <summary>
        /// Enables validation of the provided API key during provider initialization. Valid values are [`true`, `false`]. Default is true. When false, api_key won't be checked.
        /// </summary>
        [Input("validate")]
        public Input<string>? Validate { get; set; }

        public ProviderArgs()
        {
        }
        public static new ProviderArgs Empty => new ProviderArgs();
    }

    /// <summary>
    /// The results of the <see cref="Provider.TerraformConfig"/> method.
    /// </summary>
    [OutputType]
    public sealed class ProviderTerraformConfigResult
    {
        public readonly ImmutableDictionary<string, object> Result;

        [OutputConstructor]
        private ProviderTerraformConfigResult(ImmutableDictionary<string, object> result)
        {
            Result = result;
        }
    }
}
