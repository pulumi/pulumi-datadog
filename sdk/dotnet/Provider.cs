// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// The provider type for the datadog package. By default, resources use package-wide configuration
    /// settings, however an explicit `Provider` instance may be created and passed during resource
    /// construction to achieve fine-grained programmatic control over provider settings. See the
    /// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
    /// </summary>
    [DatadogResourceType("pulumi:providers:datadog")]
    public partial class Provider : global::Pulumi.ProviderResource
    {
        /// <summary>
        /// (Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.
        /// </summary>
        [Output("apiKey")]
        public Output<string?> ApiKey { get; private set; } = null!;

        /// <summary>
        /// The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the `/api/`
        /// path. For example, `https://api.datadoghq.com/` is a correct value, while `https://api.datadoghq.com/api/` is not. And
        /// if you're working with "EU" version of Datadog, use `https://api.datadoghq.eu/`. Other Datadog region examples:
        /// `https://api.us5.datadoghq.com/`, `https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See
        /// https://docs.datadoghq.com/getting_started/site/ for all available regions.
        /// </summary>
        [Output("apiUrl")]
        public Output<string?> ApiUrl { get; private set; } = null!;

        /// <summary>
        /// (Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.
        /// </summary>
        [Output("appKey")]
        public Output<string?> AppKey { get; private set; } = null!;


        /// <summary>
        /// Create a Provider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Provider(string name, ProviderArgs? args = null, CustomResourceOptions? options = null)
            : base("datadog", name, args ?? new ProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class ProviderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.
        /// </summary>
        [Input("apiKey")]
        public Input<string>? ApiKey { get; set; }

        /// <summary>
        /// The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the `/api/`
        /// path. For example, `https://api.datadoghq.com/` is a correct value, while `https://api.datadoghq.com/api/` is not. And
        /// if you're working with "EU" version of Datadog, use `https://api.datadoghq.eu/`. Other Datadog region examples:
        /// `https://api.us5.datadoghq.com/`, `https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See
        /// https://docs.datadoghq.com/getting_started/site/ for all available regions.
        /// </summary>
        [Input("apiUrl")]
        public Input<string>? ApiUrl { get; set; }

        /// <summary>
        /// (Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.
        /// </summary>
        [Input("appKey")]
        public Input<string>? AppKey { get; set; }

        /// <summary>
        /// Enables request retries on HTTP status codes 429 and 5xx. Defaults to `true`.
        /// </summary>
        [Input("httpClientRetryEnabled", json: true)]
        public Input<bool>? HttpClientRetryEnabled { get; set; }

        /// <summary>
        /// The HTTP request retry timeout period. Defaults to 60 seconds.
        /// </summary>
        [Input("httpClientRetryTimeout", json: true)]
        public Input<int>? HttpClientRetryTimeout { get; set; }

        /// <summary>
        /// Enables validation of the provided API and APP keys during provider initialization. Default is true. When false, api_key
        /// and app_key won't be checked.
        /// </summary>
        [Input("validate", json: true)]
        public Input<bool>? Validate { get; set; }

        public ProviderArgs()
        {
        }
        public static new ProviderArgs Empty => new ProviderArgs();
    }
}
