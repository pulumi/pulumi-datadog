// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog AWS CUR (Cost and Usage Report) configuration resource. This enables Datadog Cloud Cost Management to access your AWS billing data by configuring the connection to your AWS Cost and Usage Report. **Prerequisites**: An active Datadog AWS integration, existing AWS Cost and Usage Report, and proper S3 bucket permissions.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/awsCurConfig:AwsCurConfig aws_cur_report &lt;cloud_account_id&gt;
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/awsCurConfig:AwsCurConfig")]
    public partial class AwsCurConfig : global::Pulumi.CustomResource
    {
        [Output("accountFilters")]
        public Output<Outputs.AwsCurConfigAccountFilters?> AccountFilters { get; private set; } = null!;

        /// <summary>
        /// The AWS account ID of your billing/payer account. For AWS Organizations, this is typically the management account ID.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The S3 bucket name where your AWS Cost and Usage Report files are stored. This bucket must have appropriate IAM permissions for Datadog access and should be in the same AWS account as the CUR report.
        /// </summary>
        [Output("bucketName")]
        public Output<string> BucketName { get; private set; } = null!;

        /// <summary>
        /// The AWS region where the S3 bucket containing your Cost and Usage Report is located (e.g., us-east-1, eu-west-1).
        /// </summary>
        [Output("bucketRegion")]
        public Output<string?> BucketRegion { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the AWS CUR configuration was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// List of error messages if the AWS CUR configuration encountered any issues during setup or data processing.
        /// </summary>
        [Output("errorMessages")]
        public Output<ImmutableArray<string>> ErrorMessages { get; private set; } = null!;

        /// <summary>
        /// The exact name of your AWS Cost and Usage Report as configured in AWS Billing preferences. This must match the report name exactly as it appears in your AWS billing settings.
        /// </summary>
        [Output("reportName")]
        public Output<string> ReportName { get; private set; } = null!;

        /// <summary>
        /// The S3 key prefix where your Cost and Usage Report files are stored within the bucket (e.g., 'cur-reports/', 'billing/cur/').
        /// </summary>
        [Output("reportPrefix")]
        public Output<string> ReportPrefix { get; private set; } = null!;

        /// <summary>
        /// The current status of the AWS CUR configuration.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the configuration status was last updated.
        /// </summary>
        [Output("statusUpdatedAt")]
        public Output<string> StatusUpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the AWS CUR configuration was last modified.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a AwsCurConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AwsCurConfig(string name, AwsCurConfigArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/awsCurConfig:AwsCurConfig", name, args ?? new AwsCurConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AwsCurConfig(string name, Input<string> id, AwsCurConfigState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/awsCurConfig:AwsCurConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AwsCurConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AwsCurConfig Get(string name, Input<string> id, AwsCurConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new AwsCurConfig(name, id, state, options);
        }
    }

    public sealed class AwsCurConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountFilters")]
        public Input<Inputs.AwsCurConfigAccountFiltersArgs>? AccountFilters { get; set; }

        /// <summary>
        /// The AWS account ID of your billing/payer account. For AWS Organizations, this is typically the management account ID.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// The S3 bucket name where your AWS Cost and Usage Report files are stored. This bucket must have appropriate IAM permissions for Datadog access and should be in the same AWS account as the CUR report.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        /// <summary>
        /// The AWS region where the S3 bucket containing your Cost and Usage Report is located (e.g., us-east-1, eu-west-1).
        /// </summary>
        [Input("bucketRegion")]
        public Input<string>? BucketRegion { get; set; }

        /// <summary>
        /// The exact name of your AWS Cost and Usage Report as configured in AWS Billing preferences. This must match the report name exactly as it appears in your AWS billing settings.
        /// </summary>
        [Input("reportName", required: true)]
        public Input<string> ReportName { get; set; } = null!;

        /// <summary>
        /// The S3 key prefix where your Cost and Usage Report files are stored within the bucket (e.g., 'cur-reports/', 'billing/cur/').
        /// </summary>
        [Input("reportPrefix", required: true)]
        public Input<string> ReportPrefix { get; set; } = null!;

        public AwsCurConfigArgs()
        {
        }
        public static new AwsCurConfigArgs Empty => new AwsCurConfigArgs();
    }

    public sealed class AwsCurConfigState : global::Pulumi.ResourceArgs
    {
        [Input("accountFilters")]
        public Input<Inputs.AwsCurConfigAccountFiltersGetArgs>? AccountFilters { get; set; }

        /// <summary>
        /// The AWS account ID of your billing/payer account. For AWS Organizations, this is typically the management account ID.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The S3 bucket name where your AWS Cost and Usage Report files are stored. This bucket must have appropriate IAM permissions for Datadog access and should be in the same AWS account as the CUR report.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// The AWS region where the S3 bucket containing your Cost and Usage Report is located (e.g., us-east-1, eu-west-1).
        /// </summary>
        [Input("bucketRegion")]
        public Input<string>? BucketRegion { get; set; }

        /// <summary>
        /// The timestamp when the AWS CUR configuration was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("errorMessages")]
        private InputList<string>? _errorMessages;

        /// <summary>
        /// List of error messages if the AWS CUR configuration encountered any issues during setup or data processing.
        /// </summary>
        public InputList<string> ErrorMessages
        {
            get => _errorMessages ?? (_errorMessages = new InputList<string>());
            set => _errorMessages = value;
        }

        /// <summary>
        /// The exact name of your AWS Cost and Usage Report as configured in AWS Billing preferences. This must match the report name exactly as it appears in your AWS billing settings.
        /// </summary>
        [Input("reportName")]
        public Input<string>? ReportName { get; set; }

        /// <summary>
        /// The S3 key prefix where your Cost and Usage Report files are stored within the bucket (e.g., 'cur-reports/', 'billing/cur/').
        /// </summary>
        [Input("reportPrefix")]
        public Input<string>? ReportPrefix { get; set; }

        /// <summary>
        /// The current status of the AWS CUR configuration.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The timestamp when the configuration status was last updated.
        /// </summary>
        [Input("statusUpdatedAt")]
        public Input<string>? StatusUpdatedAt { get; set; }

        /// <summary>
        /// The timestamp when the AWS CUR configuration was last modified.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public AwsCurConfigState()
        {
        }
        public static new AwsCurConfigState Empty => new AwsCurConfigState();
    }
}
