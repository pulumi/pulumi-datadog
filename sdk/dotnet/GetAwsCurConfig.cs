// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetAwsCurConfig
    {
        /// <summary>
        /// Use this data source to retrieve information about a specific Datadog AWS CUR (Cost and Usage Report) configuration. This allows you to fetch details about an existing Cloud Cost Management configuration for AWS billing data access.
        /// </summary>
        public static Task<GetAwsCurConfigResult> InvokeAsync(GetAwsCurConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAwsCurConfigResult>("datadog:index/getAwsCurConfig:getAwsCurConfig", args ?? new GetAwsCurConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about a specific Datadog AWS CUR (Cost and Usage Report) configuration. This allows you to fetch details about an existing Cloud Cost Management configuration for AWS billing data access.
        /// </summary>
        public static Output<GetAwsCurConfigResult> Invoke(GetAwsCurConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsCurConfigResult>("datadog:index/getAwsCurConfig:getAwsCurConfig", args ?? new GetAwsCurConfigInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about a specific Datadog AWS CUR (Cost and Usage Report) configuration. This allows you to fetch details about an existing Cloud Cost Management configuration for AWS billing data access.
        /// </summary>
        public static Output<GetAwsCurConfigResult> Invoke(GetAwsCurConfigInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAwsCurConfigResult>("datadog:index/getAwsCurConfig:getAwsCurConfig", args ?? new GetAwsCurConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAwsCurConfigArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountFilters")]
        public Inputs.GetAwsCurConfigAccountFiltersArgs? AccountFilters { get; set; }

        /// <summary>
        /// The Datadog cloud account ID for the AWS CUR configuration you want to retrieve information about.
        /// </summary>
        [Input("cloudAccountId", required: true)]
        public int CloudAccountId { get; set; }

        public GetAwsCurConfigArgs()
        {
        }
        public static new GetAwsCurConfigArgs Empty => new GetAwsCurConfigArgs();
    }

    public sealed class GetAwsCurConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountFilters")]
        public Input<Inputs.GetAwsCurConfigAccountFiltersInputArgs>? AccountFilters { get; set; }

        /// <summary>
        /// The Datadog cloud account ID for the AWS CUR configuration you want to retrieve information about.
        /// </summary>
        [Input("cloudAccountId", required: true)]
        public Input<int> CloudAccountId { get; set; } = null!;

        public GetAwsCurConfigInvokeArgs()
        {
        }
        public static new GetAwsCurConfigInvokeArgs Empty => new GetAwsCurConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetAwsCurConfigResult
    {
        public readonly Outputs.GetAwsCurConfigAccountFiltersResult? AccountFilters;
        /// <summary>
        /// The AWS account ID associated with this CUR configuration.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The S3 bucket name where Cost and Usage Report files are stored.
        /// </summary>
        public readonly string BucketName;
        /// <summary>
        /// The AWS region where the S3 bucket is located.
        /// </summary>
        public readonly string BucketRegion;
        /// <summary>
        /// The Datadog cloud account ID for the AWS CUR configuration you want to retrieve information about.
        /// </summary>
        public readonly int CloudAccountId;
        /// <summary>
        /// The timestamp when the CUR configuration was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// List of error messages if the CUR configuration encountered any issues.
        /// </summary>
        public readonly ImmutableArray<string> ErrorMessages;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the AWS Cost and Usage Report.
        /// </summary>
        public readonly string ReportName;
        /// <summary>
        /// The S3 key prefix where CUR files are stored within the bucket.
        /// </summary>
        public readonly string ReportPrefix;
        /// <summary>
        /// The current status of the CUR configuration (e.g., active, archived).
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The timestamp when the CUR configuration status was last updated.
        /// </summary>
        public readonly string StatusUpdatedAt;
        /// <summary>
        /// The timestamp when the CUR configuration was last updated.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetAwsCurConfigResult(
            Outputs.GetAwsCurConfigAccountFiltersResult? accountFilters,

            string accountId,

            string bucketName,

            string bucketRegion,

            int cloudAccountId,

            string createdAt,

            ImmutableArray<string> errorMessages,

            string id,

            string reportName,

            string reportPrefix,

            string status,

            string statusUpdatedAt,

            string updatedAt)
        {
            AccountFilters = accountFilters;
            AccountId = accountId;
            BucketName = bucketName;
            BucketRegion = bucketRegion;
            CloudAccountId = cloudAccountId;
            CreatedAt = createdAt;
            ErrorMessages = errorMessages;
            Id = id;
            ReportName = reportName;
            ReportPrefix = reportPrefix;
            Status = status;
            StatusUpdatedAt = statusUpdatedAt;
            UpdatedAt = updatedAt;
        }
    }
}
