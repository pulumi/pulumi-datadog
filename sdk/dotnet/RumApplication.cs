// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog RUM application resource. This can be used to create and manage Datadog RUM applications.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var rumApplication = new Datadog.RumApplication("rumApplication", new()
    ///     {
    ///         Name = "my-application",
    ///         Type = "browser",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/rumApplication:RumApplication rum_application a1b2c3d4-a1b2-a1b2-a1b2-a1b2c3d4e5f6
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/rumApplication:RumApplication")]
    public partial class RumApplication : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The client token.
        /// </summary>
        [Output("clientToken")]
        public Output<string> ClientToken { get; private set; } = null!;

        /// <summary>
        /// Name of the RUM application.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Type of the RUM application. Supported values are `browser`, `ios`, `android`, `react-native`, `flutter`. Defaults to `"browser"`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a RumApplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RumApplication(string name, RumApplicationArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/rumApplication:RumApplication", name, args ?? new RumApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RumApplication(string name, Input<string> id, RumApplicationState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/rumApplication:RumApplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RumApplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RumApplication Get(string name, Input<string> id, RumApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new RumApplication(name, id, state, options);
        }
    }

    public sealed class RumApplicationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the RUM application.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Type of the RUM application. Supported values are `browser`, `ios`, `android`, `react-native`, `flutter`. Defaults to `"browser"`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public RumApplicationArgs()
        {
        }
        public static new RumApplicationArgs Empty => new RumApplicationArgs();
    }

    public sealed class RumApplicationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The client token.
        /// </summary>
        [Input("clientToken")]
        public Input<string>? ClientToken { get; set; }

        /// <summary>
        /// Name of the RUM application.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Type of the RUM application. Supported values are `browser`, `ios`, `android`, `react-native`, `flutter`. Defaults to `"browser"`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public RumApplicationState()
        {
        }
        public static new RumApplicationState Empty => new RumApplicationState();
    }
}
