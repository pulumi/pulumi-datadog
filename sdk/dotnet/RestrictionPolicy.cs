// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog RestrictionPolicy resource. This can be used to create and manage Datadog restriction policies.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create new restriction_policy resource
    ///     var foo = new Datadog.RestrictionPolicy("foo", new()
    ///     {
    ///         ResourceId = "security-rule:abc-def-ghi",
    ///         Bindings = new[]
    ///         {
    ///             new Datadog.Inputs.RestrictionPolicyBindingArgs
    ///             {
    ///                 Principals = new[]
    ///                 {
    ///                     "role:00000000-0000-1111-0000-000000000000",
    ///                 },
    ///                 Relation = "editor",
    ///             },
    ///             new Datadog.Inputs.RestrictionPolicyBindingArgs
    ///             {
    ///                 Principals = new[]
    ///                 {
    ///                     "org:10000000-0000-1111-0000-000000000000",
    ///                 },
    ///                 Relation = "viewer",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/restrictionPolicy:RestrictionPolicy new_list ""
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/restrictionPolicy:RestrictionPolicy")]
    public partial class RestrictionPolicy : global::Pulumi.CustomResource
    {
        [Output("bindings")]
        public Output<ImmutableArray<Outputs.RestrictionPolicyBinding>> Bindings { get; private set; } = null!;

        /// <summary>
        /// Identifier for the resource, formatted as resource*type:resource*id.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;


        /// <summary>
        /// Create a RestrictionPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RestrictionPolicy(string name, RestrictionPolicyArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/restrictionPolicy:RestrictionPolicy", name, args ?? new RestrictionPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RestrictionPolicy(string name, Input<string> id, RestrictionPolicyState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/restrictionPolicy:RestrictionPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RestrictionPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RestrictionPolicy Get(string name, Input<string> id, RestrictionPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new RestrictionPolicy(name, id, state, options);
        }
    }

    public sealed class RestrictionPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("bindings")]
        private InputList<Inputs.RestrictionPolicyBindingArgs>? _bindings;
        public InputList<Inputs.RestrictionPolicyBindingArgs> Bindings
        {
            get => _bindings ?? (_bindings = new InputList<Inputs.RestrictionPolicyBindingArgs>());
            set => _bindings = value;
        }

        /// <summary>
        /// Identifier for the resource, formatted as resource*type:resource*id.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        public RestrictionPolicyArgs()
        {
        }
        public static new RestrictionPolicyArgs Empty => new RestrictionPolicyArgs();
    }

    public sealed class RestrictionPolicyState : global::Pulumi.ResourceArgs
    {
        [Input("bindings")]
        private InputList<Inputs.RestrictionPolicyBindingGetArgs>? _bindings;
        public InputList<Inputs.RestrictionPolicyBindingGetArgs> Bindings
        {
            get => _bindings ?? (_bindings = new InputList<Inputs.RestrictionPolicyBindingGetArgs>());
            set => _bindings = value;
        }

        /// <summary>
        /// Identifier for the resource, formatted as resource*type:resource*id.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        public RestrictionPolicyState()
        {
        }
        public static new RestrictionPolicyState Empty => new RestrictionPolicyState();
    }
}
