// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetAppBuilderApp
    {
        /// <summary>
        /// This data source retrieves the definition of an existing Datadog App from App Builder for use in other resources, such as embedding Apps in Dashboards.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myApp = Datadog.GetAppBuilderApp.Invoke(new()
        ///     {
        ///         Id = "11111111-2222-3333-4444-555555555555",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAppBuilderAppResult> InvokeAsync(GetAppBuilderAppArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAppBuilderAppResult>("datadog:index/getAppBuilderApp:getAppBuilderApp", args ?? new GetAppBuilderAppArgs(), options.WithDefaults());

        /// <summary>
        /// This data source retrieves the definition of an existing Datadog App from App Builder for use in other resources, such as embedding Apps in Dashboards.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myApp = Datadog.GetAppBuilderApp.Invoke(new()
        ///     {
        ///         Id = "11111111-2222-3333-4444-555555555555",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAppBuilderAppResult> Invoke(GetAppBuilderAppInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppBuilderAppResult>("datadog:index/getAppBuilderApp:getAppBuilderApp", args ?? new GetAppBuilderAppInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source retrieves the definition of an existing Datadog App from App Builder for use in other resources, such as embedding Apps in Dashboards.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myApp = Datadog.GetAppBuilderApp.Invoke(new()
        ///     {
        ///         Id = "11111111-2222-3333-4444-555555555555",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAppBuilderAppResult> Invoke(GetAppBuilderAppInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAppBuilderAppResult>("datadog:index/getAppBuilderApp:getAppBuilderApp", args ?? new GetAppBuilderAppInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAppBuilderAppArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID for the App.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetAppBuilderAppArgs()
        {
        }
        public static new GetAppBuilderAppArgs Empty => new GetAppBuilderAppArgs();
    }

    public sealed class GetAppBuilderAppInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID for the App.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetAppBuilderAppInvokeArgs()
        {
        }
        public static new GetAppBuilderAppInvokeArgs Empty => new GetAppBuilderAppInvokeArgs();
    }


    [OutputType]
    public sealed class GetAppBuilderAppResult
    {
        /// <summary>
        /// A map of the App's Action Query Names to Action Connection IDs.
        /// </summary>
        public readonly ImmutableDictionary<string, string> ActionQueryNamesToConnectionIds;
        /// <summary>
        /// The JSON representation of the App.
        /// </summary>
        public readonly string AppJson;
        /// <summary>
        /// The human-readable description of the App.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// ID for the App.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the App.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Whether the app is published or unpublished. Published apps are available to other users. To ensure the app is accessible to the correct users, you also need to set a [Restriction Policy](https://docs.datadoghq.com/api/latest/restriction-policies/) on the app if a policy does not yet exist.
        /// </summary>
        public readonly bool Published;
        /// <summary>
        /// The name of the root component of the app. This is a grid component that contains all other components.
        /// </summary>
        public readonly string RootInstanceName;

        [OutputConstructor]
        private GetAppBuilderAppResult(
            ImmutableDictionary<string, string> actionQueryNamesToConnectionIds,

            string appJson,

            string description,

            string id,

            string name,

            bool published,

            string rootInstanceName)
        {
            ActionQueryNamesToConnectionIds = actionQueryNamesToConnectionIds;
            AppJson = appJson;
            Description = description;
            Id = id;
            Name = name;
            Published = published;
            RootInstanceName = rootInstanceName;
        }
    }
}
