// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/) resource, which is used to create and manage Datadog logs custom pipelines. Each `datadog.LogsCustomPipeline` resource defines a complete pipeline. The order of the pipelines is maintained in a different resource: `datadog.LogsPipelineOrder`. When creating a new pipeline, you need to **explicitly** add this pipeline to the `datadog.LogsPipelineOrder` resource to track the pipeline. Similarly, when a pipeline needs to be destroyed, remove its references from the `datadog.LogsPipelineOrder` resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var samplePipeline = new Datadog.LogsCustomPipeline("samplePipeline", new Datadog.LogsCustomPipelineArgs
    ///         {
    ///             Filters = 
    ///             {
    ///                 new Datadog.Inputs.LogsCustomPipelineFilterArgs
    ///                 {
    ///                     Query = "source:foo",
    ///                 },
    ///             },
    ///             IsEnabled = true,
    ///             Name = "sample pipeline",
    ///             Processors = 
    ///             {
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     ArithmeticProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorArithmeticProcessorArgs
    ///                     {
    ///                         Expression = "(time1 - time2)*1000",
    ///                         IsEnabled = true,
    ///                         IsReplaceMissing = true,
    ///                         Name = "sample arithmetic processor",
    ///                         Target = "my_arithmetic",
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     AttributeRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorAttributeRemapperArgs
    ///                     {
    ///                         IsEnabled = true,
    ///                         Name = "sample attribute processor",
    ///                         OverrideOnConflict = false,
    ///                         PreserveSource = true,
    ///                         SourceType = "tag",
    ///                         Sources = 
    ///                         {
    ///                             "db.instance",
    ///                         },
    ///                         Target = "db",
    ///                         TargetFormat = "string",
    ///                         TargetType = "attribute",
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     CategoryProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorCategoryProcessorArgs
    ///                     {
    ///                         Category = 
    ///                         {
    ///                             
    ///                             {
    ///                                 { "filter", 
    ///                                 {
    ///                                     { "query", "@severity: \".\"" },
    ///                                 } },
    ///                                 { "name", "debug" },
    ///                             },
    ///                             
    ///                             {
    ///                                 { "filter", 
    ///                                 {
    ///                                     { "query", "@severity: \"-\"" },
    ///                                 } },
    ///                                 { "name", "verbose" },
    ///                             },
    ///                         },
    ///                         IsEnabled = true,
    ///                         Name = "sample category processor",
    ///                         Target = "foo.severity",
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     DateRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorDateRemapperArgs
    ///                     {
    ///                         IsEnabled = true,
    ///                         Name = "sample date remapper",
    ///                         Sources = 
    ///                         {
    ///                             "_timestamp",
    ///                             "published_date",
    ///                         },
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     GeoIpParser = new Datadog.Inputs.LogsCustomPipelineProcessorGeoIpParserArgs
    ///                     {
    ///                         IsEnabled = true,
    ///                         Name = "sample geo ip parser",
    ///                         Sources = 
    ///                         {
    ///                             "network.client.ip",
    ///                         },
    ///                         Target = "network.client.geoip",
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     GrokParser = new Datadog.Inputs.LogsCustomPipelineProcessorGrokParserArgs
    ///                     {
    ///                         Grok = new Datadog.Inputs.LogsCustomPipelineProcessorGrokParserGrokArgs
    ///                         {
    ///                             MatchRules = "Rule %{word:my_word2} %{number:my_float2}",
    ///                             SupportRules = "",
    ///                         },
    ///                         IsEnabled = true,
    ///                         Name = "sample grok parser",
    ///                         Samples = 
    ///                         {
    ///                             "sample log 1",
    ///                         },
    ///                         Source = "message",
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     LookupProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorLookupProcessorArgs
    ///                     {
    ///                         DefaultLookup = "unknown service",
    ///                         IsEnabled = true,
    ///                         LookupTable = 
    ///                         {
    ///                             "1,my service",
    ///                         },
    ///                         Name = "sample lookup processor",
    ///                         Source = "service_id",
    ///                         Target = "service_name",
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     MessageRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorMessageRemapperArgs
    ///                     {
    ///                         IsEnabled = true,
    ///                         Name = "sample message remapper",
    ///                         Sources = 
    ///                         {
    ///                             "msg",
    ///                         },
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     Pipeline = new Datadog.Inputs.LogsCustomPipelineProcessorPipelineArgs
    ///                     {
    ///                         Filter = 
    ///                         {
    ///                             
    ///                             {
    ///                                 { "query", "source:foo" },
    ///                             },
    ///                         },
    ///                         IsEnabled = true,
    ///                         Name = "nested pipeline",
    ///                         Processor = 
    ///                         {
    ///                             
    ///                             {
    ///                                 { "urlParser", 
    ///                                 {
    ///                                     { "name", "sample url parser" },
    ///                                     { "normalizeEndingSlashes", true },
    ///                                     { "sources", 
    ///                                     {
    ///                                         "url",
    ///                                         "extra",
    ///                                     } },
    ///                                     { "target", "http_url" },
    ///                                 } },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     ServiceRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorServiceRemapperArgs
    ///                     {
    ///                         IsEnabled = true,
    ///                         Name = "sample service remapper",
    ///                         Sources = 
    ///                         {
    ///                             "service",
    ///                         },
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     StatusRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorStatusRemapperArgs
    ///                     {
    ///                         IsEnabled = true,
    ///                         Name = "sample status remapper",
    ///                         Sources = 
    ///                         {
    ///                             "info",
    ///                             "trace",
    ///                         },
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     StringBuilderProcessor = new Datadog.Inputs.LogsCustomPipelineProcessorStringBuilderProcessorArgs
    ///                     {
    ///                         IsEnabled = true,
    ///                         IsReplaceMissing = false,
    ///                         Name = "sample string builder processor",
    ///                         Target = "user_activity",
    ///                         Template = "%{user.name} logged in at %{timestamp}",
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     TraceIdRemapper = new Datadog.Inputs.LogsCustomPipelineProcessorTraceIdRemapperArgs
    ///                     {
    ///                         IsEnabled = true,
    ///                         Name = "sample trace id remapper",
    ///                         Sources = 
    ///                         {
    ///                             "dd.trace_id",
    ///                         },
    ///                     },
    ///                 },
    ///                 new Datadog.Inputs.LogsCustomPipelineProcessorArgs
    ///                 {
    ///                     UserAgentParser = new Datadog.Inputs.LogsCustomPipelineProcessorUserAgentParserArgs
    ///                     {
    ///                         IsEnabled = true,
    ///                         IsEncoded = false,
    ///                         Name = "sample user agent parser",
    ///                         Sources = 
    ///                         {
    ///                             "user",
    ///                             "agent",
    ///                         },
    ///                         Target = "http_agent",
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// # For the previously created custom pipelines, you can include them in Terraform with the import operation. Currently, Terraform requires you to explicitly create resources that match the existing pipelines to import them.
    /// 
    /// ```sh
    ///  $ pulumi import datadog:index/logsCustomPipeline:LogsCustomPipeline name&gt; &lt;pipelineID&gt;
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/logsCustomPipeline:LogsCustomPipeline")]
    public partial class LogsCustomPipeline : Pulumi.CustomResource
    {
        [Output("filters")]
        public Output<ImmutableArray<Outputs.LogsCustomPipelineFilter>> Filters { get; private set; } = null!;

        [Output("isEnabled")]
        public Output<bool?> IsEnabled { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("processors")]
        public Output<ImmutableArray<Outputs.LogsCustomPipelineProcessor>> Processors { get; private set; } = null!;


        /// <summary>
        /// Create a LogsCustomPipeline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogsCustomPipeline(string name, LogsCustomPipelineArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/logsCustomPipeline:LogsCustomPipeline", name, args ?? new LogsCustomPipelineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogsCustomPipeline(string name, Input<string> id, LogsCustomPipelineState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/logsCustomPipeline:LogsCustomPipeline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogsCustomPipeline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogsCustomPipeline Get(string name, Input<string> id, LogsCustomPipelineState? state = null, CustomResourceOptions? options = null)
        {
            return new LogsCustomPipeline(name, id, state, options);
        }
    }

    public sealed class LogsCustomPipelineArgs : Pulumi.ResourceArgs
    {
        [Input("filters", required: true)]
        private InputList<Inputs.LogsCustomPipelineFilterArgs>? _filters;
        public InputList<Inputs.LogsCustomPipelineFilterArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.LogsCustomPipelineFilterArgs>());
            set => _filters = value;
        }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("processors")]
        private InputList<Inputs.LogsCustomPipelineProcessorArgs>? _processors;
        public InputList<Inputs.LogsCustomPipelineProcessorArgs> Processors
        {
            get => _processors ?? (_processors = new InputList<Inputs.LogsCustomPipelineProcessorArgs>());
            set => _processors = value;
        }

        public LogsCustomPipelineArgs()
        {
        }
    }

    public sealed class LogsCustomPipelineState : Pulumi.ResourceArgs
    {
        [Input("filters")]
        private InputList<Inputs.LogsCustomPipelineFilterGetArgs>? _filters;
        public InputList<Inputs.LogsCustomPipelineFilterGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.LogsCustomPipelineFilterGetArgs>());
            set => _filters = value;
        }

        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("processors")]
        private InputList<Inputs.LogsCustomPipelineProcessorGetArgs>? _processors;
        public InputList<Inputs.LogsCustomPipelineProcessorGetArgs> Processors
        {
            get => _processors ?? (_processors = new InputList<Inputs.LogsCustomPipelineProcessorGetArgs>());
            set => _processors = value;
        }

        public LogsCustomPipelineState()
        {
        }
    }
}
