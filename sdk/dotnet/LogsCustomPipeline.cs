// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/) resource, which is used to create and manage Datadog logs custom pipelines. Each `datadog.LogsCustomPipeline` resource defines a complete pipeline. The order of the pipelines is maintained in a different resource: `datadog.LogsPipelineOrder`. When creating a new pipeline, you need to **explicitly** add this pipeline to the `datadog.LogsPipelineOrder` resource to track the pipeline. Similarly, when a pipeline needs to be destroyed, remove its references from the `datadog.LogsPipelineOrder` resource.
    /// 
    /// ## Import
    /// 
    /// To find the pipeline ID, click the "edit" button in the UI to open the pipeline details. The pipeline ID is the last part of the URL.
    /// 
    /// ```sh
    ///  $ pulumi import datadog:index/logsCustomPipeline:LogsCustomPipeline name&gt; &lt;pipelineID&gt;
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/logsCustomPipeline:LogsCustomPipeline")]
    public partial class LogsCustomPipeline : global::Pulumi.CustomResource
    {
        [Output("filters")]
        public Output<ImmutableArray<Outputs.LogsCustomPipelineFilter>> Filters { get; private set; } = null!;

        /// <summary>
        /// Boolean value to enable your pipeline.
        /// </summary>
        [Output("isEnabled")]
        public Output<bool?> IsEnabled { get; private set; } = null!;

        /// <summary>
        /// Your pipeline name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("processors")]
        public Output<ImmutableArray<Outputs.LogsCustomPipelineProcessor>> Processors { get; private set; } = null!;


        /// <summary>
        /// Create a LogsCustomPipeline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogsCustomPipeline(string name, LogsCustomPipelineArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/logsCustomPipeline:LogsCustomPipeline", name, args ?? new LogsCustomPipelineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogsCustomPipeline(string name, Input<string> id, LogsCustomPipelineState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/logsCustomPipeline:LogsCustomPipeline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogsCustomPipeline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogsCustomPipeline Get(string name, Input<string> id, LogsCustomPipelineState? state = null, CustomResourceOptions? options = null)
        {
            return new LogsCustomPipeline(name, id, state, options);
        }
    }

    public sealed class LogsCustomPipelineArgs : global::Pulumi.ResourceArgs
    {
        [Input("filters", required: true)]
        private InputList<Inputs.LogsCustomPipelineFilterArgs>? _filters;
        public InputList<Inputs.LogsCustomPipelineFilterArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.LogsCustomPipelineFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Boolean value to enable your pipeline.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Your pipeline name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("processors")]
        private InputList<Inputs.LogsCustomPipelineProcessorArgs>? _processors;
        public InputList<Inputs.LogsCustomPipelineProcessorArgs> Processors
        {
            get => _processors ?? (_processors = new InputList<Inputs.LogsCustomPipelineProcessorArgs>());
            set => _processors = value;
        }

        public LogsCustomPipelineArgs()
        {
        }
        public static new LogsCustomPipelineArgs Empty => new LogsCustomPipelineArgs();
    }

    public sealed class LogsCustomPipelineState : global::Pulumi.ResourceArgs
    {
        [Input("filters")]
        private InputList<Inputs.LogsCustomPipelineFilterGetArgs>? _filters;
        public InputList<Inputs.LogsCustomPipelineFilterGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.LogsCustomPipelineFilterGetArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Boolean value to enable your pipeline.
        /// </summary>
        [Input("isEnabled")]
        public Input<bool>? IsEnabled { get; set; }

        /// <summary>
        /// Your pipeline name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("processors")]
        private InputList<Inputs.LogsCustomPipelineProcessorGetArgs>? _processors;
        public InputList<Inputs.LogsCustomPipelineProcessorGetArgs> Processors
        {
            get => _processors ?? (_processors = new InputList<Inputs.LogsCustomPipelineProcessorGetArgs>());
            set => _processors = value;
        }

        public LogsCustomPipelineState()
        {
        }
        public static new LogsCustomPipelineState Empty => new LogsCustomPipelineState();
    }
}
