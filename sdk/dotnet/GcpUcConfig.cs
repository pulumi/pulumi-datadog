// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog GcpUcConfig resource. This can be used to create and manage Datadog gcp_uc_config.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create new GCP Usage Cost configuration resource
    ///     var example = new Datadog.GcpUcConfig("example", new()
    ///     {
    ///         BillingAccountId = "123456_ABCDEF_123456",
    ///         BucketName = "my-gcp-cost-bucket",
    ///         ExportDatasetName = "billing_export",
    ///         ExportPrefix = "datadog_cloud_cost_detailed_usage_export",
    ///         ExportProjectName = "my-gcp-project",
    ///         ServiceAccount = "datadog-cost-management@my-gcp-project.iam.gserviceaccount.com",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/gcpUcConfig:GcpUcConfig example &lt;cloud_account_id&gt;
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/gcpUcConfig:GcpUcConfig")]
    public partial class GcpUcConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Google Cloud account ID.
        /// </summary>
        [Output("billingAccountId")]
        public Output<string> BillingAccountId { get; private set; } = null!;

        /// <summary>
        /// The Google Cloud bucket name used to store the Usage Cost export.
        /// </summary>
        [Output("bucketName")]
        public Output<string> BucketName { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the GCP UC configuration was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The dataset name used for the GCP Usage Cost export.
        /// </summary>
        [Output("dataset")]
        public Output<string> Dataset { get; private set; } = null!;

        /// <summary>
        /// List of error messages if the GCP UC configuration encountered any issues during setup or data processing.
        /// </summary>
        [Output("errorMessages")]
        public Output<ImmutableArray<string>> ErrorMessages { get; private set; } = null!;

        /// <summary>
        /// The export dataset name used for the Google Cloud Usage Cost report.
        /// </summary>
        [Output("exportDatasetName")]
        public Output<string> ExportDatasetName { get; private set; } = null!;

        /// <summary>
        /// The export prefix used for the Google Cloud Usage Cost report.
        /// </summary>
        [Output("exportPrefix")]
        public Output<string?> ExportPrefix { get; private set; } = null!;

        /// <summary>
        /// The name of the Google Cloud Usage Cost report.
        /// </summary>
        [Output("exportProjectName")]
        public Output<string> ExportProjectName { get; private set; } = null!;

        /// <summary>
        /// The number of months of usage data to include in the export.
        /// </summary>
        [Output("months")]
        public Output<int> Months { get; private set; } = null!;

        /// <summary>
        /// The unique Google Cloud service account email.
        /// </summary>
        [Output("serviceAccount")]
        public Output<string> ServiceAccount { get; private set; } = null!;

        /// <summary>
        /// The current status of the GCP UC configuration.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the configuration status was last updated.
        /// </summary>
        [Output("statusUpdatedAt")]
        public Output<string> StatusUpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the GCP UC configuration was last modified.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a GcpUcConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GcpUcConfig(string name, GcpUcConfigArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/gcpUcConfig:GcpUcConfig", name, args ?? new GcpUcConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GcpUcConfig(string name, Input<string> id, GcpUcConfigState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/gcpUcConfig:GcpUcConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GcpUcConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GcpUcConfig Get(string name, Input<string> id, GcpUcConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new GcpUcConfig(name, id, state, options);
        }
    }

    public sealed class GcpUcConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Google Cloud account ID.
        /// </summary>
        [Input("billingAccountId", required: true)]
        public Input<string> BillingAccountId { get; set; } = null!;

        /// <summary>
        /// The Google Cloud bucket name used to store the Usage Cost export.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        /// <summary>
        /// The export dataset name used for the Google Cloud Usage Cost report.
        /// </summary>
        [Input("exportDatasetName", required: true)]
        public Input<string> ExportDatasetName { get; set; } = null!;

        /// <summary>
        /// The export prefix used for the Google Cloud Usage Cost report.
        /// </summary>
        [Input("exportPrefix")]
        public Input<string>? ExportPrefix { get; set; }

        /// <summary>
        /// The name of the Google Cloud Usage Cost report.
        /// </summary>
        [Input("exportProjectName", required: true)]
        public Input<string> ExportProjectName { get; set; } = null!;

        /// <summary>
        /// The unique Google Cloud service account email.
        /// </summary>
        [Input("serviceAccount", required: true)]
        public Input<string> ServiceAccount { get; set; } = null!;

        public GcpUcConfigArgs()
        {
        }
        public static new GcpUcConfigArgs Empty => new GcpUcConfigArgs();
    }

    public sealed class GcpUcConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Google Cloud account ID.
        /// </summary>
        [Input("billingAccountId")]
        public Input<string>? BillingAccountId { get; set; }

        /// <summary>
        /// The Google Cloud bucket name used to store the Usage Cost export.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// The timestamp when the GCP UC configuration was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The dataset name used for the GCP Usage Cost export.
        /// </summary>
        [Input("dataset")]
        public Input<string>? Dataset { get; set; }

        [Input("errorMessages")]
        private InputList<string>? _errorMessages;

        /// <summary>
        /// List of error messages if the GCP UC configuration encountered any issues during setup or data processing.
        /// </summary>
        public InputList<string> ErrorMessages
        {
            get => _errorMessages ?? (_errorMessages = new InputList<string>());
            set => _errorMessages = value;
        }

        /// <summary>
        /// The export dataset name used for the Google Cloud Usage Cost report.
        /// </summary>
        [Input("exportDatasetName")]
        public Input<string>? ExportDatasetName { get; set; }

        /// <summary>
        /// The export prefix used for the Google Cloud Usage Cost report.
        /// </summary>
        [Input("exportPrefix")]
        public Input<string>? ExportPrefix { get; set; }

        /// <summary>
        /// The name of the Google Cloud Usage Cost report.
        /// </summary>
        [Input("exportProjectName")]
        public Input<string>? ExportProjectName { get; set; }

        /// <summary>
        /// The number of months of usage data to include in the export.
        /// </summary>
        [Input("months")]
        public Input<int>? Months { get; set; }

        /// <summary>
        /// The unique Google Cloud service account email.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        /// <summary>
        /// The current status of the GCP UC configuration.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The timestamp when the configuration status was last updated.
        /// </summary>
        [Input("statusUpdatedAt")]
        public Input<string>? StatusUpdatedAt { get; set; }

        /// <summary>
        /// The timestamp when the GCP UC configuration was last modified.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public GcpUcConfigState()
        {
        }
        public static new GcpUcConfigState Empty => new GcpUcConfigState();
    }
}
