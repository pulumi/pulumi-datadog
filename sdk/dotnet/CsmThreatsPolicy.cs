// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog CSM Threats policy API resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myPolicy = new Datadog.CsmThreatsPolicy("my_policy", new()
    ///     {
    ///         Name = "my_policy",
    ///         Description = "My policy",
    ///         Enabled = true,
    ///         HostTagsLists = new[]
    ///         {
    ///             new[]
    ///             {
    ///                 "env:prod",
    ///                 "team:backend",
    ///             },
    ///             new[]
    ///             {
    ///                 "env:prod",
    ///                 "team:frontend",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// #Â CSM Policies can be imported using IDs. For example:
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/csmThreatsPolicy:CsmThreatsPolicy my_policy jm4-lwh-8cs
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/csmThreatsPolicy:CsmThreatsPolicy")]
    public partial class CsmThreatsPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A description for the policy.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the policy is enabled. Defaults to `false`.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
        /// </summary>
        [Output("hostTagsLists")]
        public Output<ImmutableArray<ImmutableArray<string>>> HostTagsLists { get; private set; } = null!;

        /// <summary>
        /// The name of the policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a CsmThreatsPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CsmThreatsPolicy(string name, CsmThreatsPolicyArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/csmThreatsPolicy:CsmThreatsPolicy", name, args ?? new CsmThreatsPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CsmThreatsPolicy(string name, Input<string> id, CsmThreatsPolicyState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/csmThreatsPolicy:CsmThreatsPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CsmThreatsPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CsmThreatsPolicy Get(string name, Input<string> id, CsmThreatsPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new CsmThreatsPolicy(name, id, state, options);
        }
    }

    public sealed class CsmThreatsPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description for the policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Indicates whether the policy is enabled. Defaults to `false`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("hostTagsLists")]
        private InputList<ImmutableArray<string>>? _hostTagsLists;

        /// <summary>
        /// Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
        /// </summary>
        public InputList<ImmutableArray<string>> HostTagsLists
        {
            get => _hostTagsLists ?? (_hostTagsLists = new InputList<ImmutableArray<string>>());
            set => _hostTagsLists = value;
        }

        /// <summary>
        /// The name of the policy.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public CsmThreatsPolicyArgs()
        {
        }
        public static new CsmThreatsPolicyArgs Empty => new CsmThreatsPolicyArgs();
    }

    public sealed class CsmThreatsPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description for the policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Indicates whether the policy is enabled. Defaults to `false`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("hostTagsLists")]
        private InputList<ImmutableArray<string>>? _hostTagsLists;

        /// <summary>
        /// Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
        /// </summary>
        public InputList<ImmutableArray<string>> HostTagsLists
        {
            get => _hostTagsLists ?? (_hostTagsLists = new InputList<ImmutableArray<string>>());
            set => _hostTagsLists = value;
        }

        /// <summary>
        /// The name of the policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public CsmThreatsPolicyState()
        {
        }
        public static new CsmThreatsPolicyState Empty => new CsmThreatsPolicyState();
    }
}
