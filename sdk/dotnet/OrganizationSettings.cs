// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog Organization resource. This can be used to manage your Datadog organization's settings.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Manage Datadog Organization
    ///     var organization = new Datadog.OrganizationSettings("organization", new()
    ///     {
    ///         Name = "foo-organization",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/organizationSettings:OrganizationSettings organization 11111111-2222-3333-4444-555555555555
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/organizationSettings:OrganizationSettings")]
    public partial class OrganizationSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the organization.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Name for Organization.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The `public_id` of the organization you are operating within.
        /// </summary>
        [Output("publicId")]
        public Output<string> PublicId { get; private set; } = null!;

        /// <summary>
        /// Organization settings
        /// </summary>
        [Output("settings")]
        public Output<Outputs.OrganizationSettingsSettings> Settings { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationSettings(string name, OrganizationSettingsArgs? args = null, CustomResourceOptions? options = null)
            : base("datadog:index/organizationSettings:OrganizationSettings", name, args ?? new OrganizationSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationSettings(string name, Input<string> id, OrganizationSettingsState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/organizationSettings:OrganizationSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationSettings Get(string name, Input<string> id, OrganizationSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationSettings(name, id, state, options);
        }
    }

    public sealed class OrganizationSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name for Organization.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Organization settings
        /// </summary>
        [Input("settings")]
        public Input<Inputs.OrganizationSettingsSettingsArgs>? Settings { get; set; }

        public OrganizationSettingsArgs()
        {
        }
        public static new OrganizationSettingsArgs Empty => new OrganizationSettingsArgs();
    }

    public sealed class OrganizationSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the organization.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name for Organization.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The `public_id` of the organization you are operating within.
        /// </summary>
        [Input("publicId")]
        public Input<string>? PublicId { get; set; }

        /// <summary>
        /// Organization settings
        /// </summary>
        [Input("settings")]
        public Input<Inputs.OrganizationSettingsSettingsGetArgs>? Settings { get; set; }

        public OrganizationSettingsState()
        {
        }
        public static new OrganizationSettingsState Empty => new OrganizationSettingsState();
    }
}
