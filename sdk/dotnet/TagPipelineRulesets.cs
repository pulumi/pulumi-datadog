// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog Tag Pipeline Ruleset Order resource that can be used to manage the order of Tag Pipeline Rulesets.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create new tag_pipeline_ruleset_order resource
    ///     var myRulesets = new Datadog.TagPipelineRulesets("my_rulesets", new()
    ///     {
    ///         RulesetIds = new[]
    ///         {
    ///             "ruleset-id-1",
    ///             "ruleset-id-2",
    ///             "ruleset-id-3",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/tagPipelineRulesets:TagPipelineRulesets my_rulesets order
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/tagPipelineRulesets:TagPipelineRulesets")]
    public partial class TagPipelineRulesets : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of Tag Pipeline Ruleset IDs, in order. Rulesets are executed in the order specified in this list.
        /// </summary>
        [Output("rulesetIds")]
        public Output<ImmutableArray<string>> RulesetIds { get; private set; } = null!;


        /// <summary>
        /// Create a TagPipelineRulesets resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TagPipelineRulesets(string name, TagPipelineRulesetsArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/tagPipelineRulesets:TagPipelineRulesets", name, args ?? new TagPipelineRulesetsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TagPipelineRulesets(string name, Input<string> id, TagPipelineRulesetsState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/tagPipelineRulesets:TagPipelineRulesets", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TagPipelineRulesets resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TagPipelineRulesets Get(string name, Input<string> id, TagPipelineRulesetsState? state = null, CustomResourceOptions? options = null)
        {
            return new TagPipelineRulesets(name, id, state, options);
        }
    }

    public sealed class TagPipelineRulesetsArgs : global::Pulumi.ResourceArgs
    {
        [Input("rulesetIds", required: true)]
        private InputList<string>? _rulesetIds;

        /// <summary>
        /// The list of Tag Pipeline Ruleset IDs, in order. Rulesets are executed in the order specified in this list.
        /// </summary>
        public InputList<string> RulesetIds
        {
            get => _rulesetIds ?? (_rulesetIds = new InputList<string>());
            set => _rulesetIds = value;
        }

        public TagPipelineRulesetsArgs()
        {
        }
        public static new TagPipelineRulesetsArgs Empty => new TagPipelineRulesetsArgs();
    }

    public sealed class TagPipelineRulesetsState : global::Pulumi.ResourceArgs
    {
        [Input("rulesetIds")]
        private InputList<string>? _rulesetIds;

        /// <summary>
        /// The list of Tag Pipeline Ruleset IDs, in order. Rulesets are executed in the order specified in this list.
        /// </summary>
        public InputList<string> RulesetIds
        {
            get => _rulesetIds ?? (_rulesetIds = new InputList<string>());
            set => _rulesetIds = value;
        }

        public TagPipelineRulesetsState()
        {
        }
        public static new TagPipelineRulesetsState Empty => new TagPipelineRulesetsState();
    }
}
