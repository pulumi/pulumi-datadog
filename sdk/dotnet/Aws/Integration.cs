// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Aws
{
    /// <summary>
    /// Provides a Datadog - Amazon Web Services integration resource. This can be used to create and manage Datadog - Amazon Web Services integration.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         // Create a new Datadog - Amazon Web Services integration
    ///         var sandbox = new Datadog.Aws.Integration("sandbox", new Datadog.Aws.IntegrationArgs
    ///         {
    ///             AccountId = "1234567890",
    ///             AccountSpecificNamespaceRules = 
    ///             {
    ///                 { "auto_scaling", false },
    ///                 { "opsworks", false },
    ///             },
    ///             ExcludedRegions = 
    ///             {
    ///                 "us-east-1",
    ///                 "us-west-2",
    ///             },
    ///             FilterTags = 
    ///             {
    ///                 "key:value",
    ///             },
    ///             HostTags = 
    ///             {
    ///                 "key:value",
    ///                 "key2:value2",
    ///             },
    ///             RoleName = "DatadogAWSIntegrationRole",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Amazon Web Services integrations can be imported using their `account ID` and `role name` separated with a colon (`:`), while the `external_id` should be passed by setting an environment variable called `EXTERNAL_ID`
    /// 
    /// ```sh
    ///  $ pulumi import datadog:aws/integration:Integration EXTERNAL_ID=${external_id} datadog_integration_aws.test ${account_id}:${role_name}
    /// ```
    /// </summary>
    public partial class Integration : Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        [Output("accountSpecificNamespaceRules")]
        public Output<ImmutableDictionary<string, object>?> AccountSpecificNamespaceRules { get; private set; } = null!;

        [Output("excludedRegions")]
        public Output<ImmutableArray<string>> ExcludedRegions { get; private set; } = null!;

        [Output("externalId")]
        public Output<string> ExternalId { get; private set; } = null!;

        [Output("filterTags")]
        public Output<ImmutableArray<string>> FilterTags { get; private set; } = null!;

        [Output("hostTags")]
        public Output<ImmutableArray<string>> HostTags { get; private set; } = null!;

        [Output("roleName")]
        public Output<string> RoleName { get; private set; } = null!;


        /// <summary>
        /// Create a Integration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Integration(string name, IntegrationArgs args, CustomResourceOptions? options = null)
            : base("datadog:aws/integration:Integration", name, args ?? new IntegrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Integration(string name, Input<string> id, IntegrationState? state = null, CustomResourceOptions? options = null)
            : base("datadog:aws/integration:Integration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Integration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Integration Get(string name, Input<string> id, IntegrationState? state = null, CustomResourceOptions? options = null)
        {
            return new Integration(name, id, state, options);
        }
    }

    public sealed class IntegrationArgs : Pulumi.ResourceArgs
    {
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        [Input("accountSpecificNamespaceRules")]
        private InputMap<object>? _accountSpecificNamespaceRules;
        public InputMap<object> AccountSpecificNamespaceRules
        {
            get => _accountSpecificNamespaceRules ?? (_accountSpecificNamespaceRules = new InputMap<object>());
            set => _accountSpecificNamespaceRules = value;
        }

        [Input("excludedRegions")]
        private InputList<string>? _excludedRegions;
        public InputList<string> ExcludedRegions
        {
            get => _excludedRegions ?? (_excludedRegions = new InputList<string>());
            set => _excludedRegions = value;
        }

        [Input("filterTags")]
        private InputList<string>? _filterTags;
        public InputList<string> FilterTags
        {
            get => _filterTags ?? (_filterTags = new InputList<string>());
            set => _filterTags = value;
        }

        [Input("hostTags")]
        private InputList<string>? _hostTags;
        public InputList<string> HostTags
        {
            get => _hostTags ?? (_hostTags = new InputList<string>());
            set => _hostTags = value;
        }

        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        public IntegrationArgs()
        {
        }
    }

    public sealed class IntegrationState : Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("accountSpecificNamespaceRules")]
        private InputMap<object>? _accountSpecificNamespaceRules;
        public InputMap<object> AccountSpecificNamespaceRules
        {
            get => _accountSpecificNamespaceRules ?? (_accountSpecificNamespaceRules = new InputMap<object>());
            set => _accountSpecificNamespaceRules = value;
        }

        [Input("excludedRegions")]
        private InputList<string>? _excludedRegions;
        public InputList<string> ExcludedRegions
        {
            get => _excludedRegions ?? (_excludedRegions = new InputList<string>());
            set => _excludedRegions = value;
        }

        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        [Input("filterTags")]
        private InputList<string>? _filterTags;
        public InputList<string> FilterTags
        {
            get => _filterTags ?? (_filterTags = new InputList<string>());
            set => _filterTags = value;
        }

        [Input("hostTags")]
        private InputList<string>? _hostTags;
        public InputList<string> HostTags
        {
            get => _hostTags ?? (_hostTags = new InputList<string>());
            set => _hostTags = value;
        }

        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        public IntegrationState()
        {
        }
    }
}
