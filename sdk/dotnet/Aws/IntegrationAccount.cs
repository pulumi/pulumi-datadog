// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Aws
{
    /// <summary>
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import datadog:aws/integrationAccount:IntegrationAccount example "&lt;datadog-aws-account-config-id&gt;"
    /// ```
    /// 
    ///  AWS Account Config ID can be retrieved by using the [List all AWS integrations](https://docs.datadoghq.com/api/latest/aws-integration/#list-all-aws-integrations) endpoint and querying by AWS Account ID.
    /// </summary>
    [DatadogResourceType("datadog:aws/integrationAccount:IntegrationAccount")]
    public partial class IntegrationAccount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Tags to apply to all metrics in the account. Defaults to `[]`.
        /// </summary>
        [Output("accountTags")]
        public Output<ImmutableArray<string>> AccountTags { get; private set; } = null!;

        /// <summary>
        /// Configure how Datadog authenticates to your AWS account. Either `aws_auth_config_keys` or `aws_auth_config_role` block is required within.
        /// </summary>
        [Output("authConfig")]
        public Output<Outputs.IntegrationAccountAuthConfig?> AuthConfig { get; private set; } = null!;

        /// <summary>
        /// Your AWS Account ID without dashes.
        /// </summary>
        [Output("awsAccountId")]
        public Output<string> AwsAccountId { get; private set; } = null!;

        /// <summary>
        /// AWS Account partition.
        /// </summary>
        [Output("awsPartition")]
        public Output<string> AwsPartition { get; private set; } = null!;

        /// <summary>
        /// AWS regions to collect data from. Defaults to `include_all` if block is empty.
        /// </summary>
        [Output("awsRegions")]
        public Output<Outputs.IntegrationAccountAwsRegions?> AwsRegions { get; private set; } = null!;

        /// <summary>
        /// Configure log autosubscription for your Datadog Forwarder Lambda functions. The `lambda_fowarder` block is required within, but may be empty to use defaults.
        /// </summary>
        [Output("logsConfig")]
        public Output<Outputs.IntegrationAccountLogsConfig?> LogsConfig { get; private set; } = null!;

        /// <summary>
        /// Configure metrics collection from AWS CloudWatch. The `namespace_filters` block is required within, but may be empty to use defaults.
        /// </summary>
        [Output("metricsConfig")]
        public Output<Outputs.IntegrationAccountMetricsConfig?> MetricsConfig { get; private set; } = null!;

        /// <summary>
        /// AWS resources collection config. May be empty to use defaults.
        /// </summary>
        [Output("resourcesConfig")]
        public Output<Outputs.IntegrationAccountResourcesConfig?> ResourcesConfig { get; private set; } = null!;

        /// <summary>
        /// AWS traces collection config. The `xray_services` block is required within, but may be empty to use defaults.
        /// </summary>
        [Output("tracesConfig")]
        public Output<Outputs.IntegrationAccountTracesConfig?> TracesConfig { get; private set; } = null!;


        /// <summary>
        /// Create a IntegrationAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IntegrationAccount(string name, IntegrationAccountArgs args, CustomResourceOptions? options = null)
            : base("datadog:aws/integrationAccount:IntegrationAccount", name, args ?? new IntegrationAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IntegrationAccount(string name, Input<string> id, IntegrationAccountState? state = null, CustomResourceOptions? options = null)
            : base("datadog:aws/integrationAccount:IntegrationAccount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IntegrationAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IntegrationAccount Get(string name, Input<string> id, IntegrationAccountState? state = null, CustomResourceOptions? options = null)
        {
            return new IntegrationAccount(name, id, state, options);
        }
    }

    public sealed class IntegrationAccountArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountTags")]
        private InputList<string>? _accountTags;

        /// <summary>
        /// Tags to apply to all metrics in the account. Defaults to `[]`.
        /// </summary>
        public InputList<string> AccountTags
        {
            get => _accountTags ?? (_accountTags = new InputList<string>());
            set => _accountTags = value;
        }

        /// <summary>
        /// Configure how Datadog authenticates to your AWS account. Either `aws_auth_config_keys` or `aws_auth_config_role` block is required within.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.IntegrationAccountAuthConfigArgs>? AuthConfig { get; set; }

        /// <summary>
        /// Your AWS Account ID without dashes.
        /// </summary>
        [Input("awsAccountId", required: true)]
        public Input<string> AwsAccountId { get; set; } = null!;

        /// <summary>
        /// AWS Account partition.
        /// </summary>
        [Input("awsPartition", required: true)]
        public Input<string> AwsPartition { get; set; } = null!;

        /// <summary>
        /// AWS regions to collect data from. Defaults to `include_all` if block is empty.
        /// </summary>
        [Input("awsRegions")]
        public Input<Inputs.IntegrationAccountAwsRegionsArgs>? AwsRegions { get; set; }

        /// <summary>
        /// Configure log autosubscription for your Datadog Forwarder Lambda functions. The `lambda_fowarder` block is required within, but may be empty to use defaults.
        /// </summary>
        [Input("logsConfig")]
        public Input<Inputs.IntegrationAccountLogsConfigArgs>? LogsConfig { get; set; }

        /// <summary>
        /// Configure metrics collection from AWS CloudWatch. The `namespace_filters` block is required within, but may be empty to use defaults.
        /// </summary>
        [Input("metricsConfig")]
        public Input<Inputs.IntegrationAccountMetricsConfigArgs>? MetricsConfig { get; set; }

        /// <summary>
        /// AWS resources collection config. May be empty to use defaults.
        /// </summary>
        [Input("resourcesConfig")]
        public Input<Inputs.IntegrationAccountResourcesConfigArgs>? ResourcesConfig { get; set; }

        /// <summary>
        /// AWS traces collection config. The `xray_services` block is required within, but may be empty to use defaults.
        /// </summary>
        [Input("tracesConfig")]
        public Input<Inputs.IntegrationAccountTracesConfigArgs>? TracesConfig { get; set; }

        public IntegrationAccountArgs()
        {
        }
        public static new IntegrationAccountArgs Empty => new IntegrationAccountArgs();
    }

    public sealed class IntegrationAccountState : global::Pulumi.ResourceArgs
    {
        [Input("accountTags")]
        private InputList<string>? _accountTags;

        /// <summary>
        /// Tags to apply to all metrics in the account. Defaults to `[]`.
        /// </summary>
        public InputList<string> AccountTags
        {
            get => _accountTags ?? (_accountTags = new InputList<string>());
            set => _accountTags = value;
        }

        /// <summary>
        /// Configure how Datadog authenticates to your AWS account. Either `aws_auth_config_keys` or `aws_auth_config_role` block is required within.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.IntegrationAccountAuthConfigGetArgs>? AuthConfig { get; set; }

        /// <summary>
        /// Your AWS Account ID without dashes.
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// AWS Account partition.
        /// </summary>
        [Input("awsPartition")]
        public Input<string>? AwsPartition { get; set; }

        /// <summary>
        /// AWS regions to collect data from. Defaults to `include_all` if block is empty.
        /// </summary>
        [Input("awsRegions")]
        public Input<Inputs.IntegrationAccountAwsRegionsGetArgs>? AwsRegions { get; set; }

        /// <summary>
        /// Configure log autosubscription for your Datadog Forwarder Lambda functions. The `lambda_fowarder` block is required within, but may be empty to use defaults.
        /// </summary>
        [Input("logsConfig")]
        public Input<Inputs.IntegrationAccountLogsConfigGetArgs>? LogsConfig { get; set; }

        /// <summary>
        /// Configure metrics collection from AWS CloudWatch. The `namespace_filters` block is required within, but may be empty to use defaults.
        /// </summary>
        [Input("metricsConfig")]
        public Input<Inputs.IntegrationAccountMetricsConfigGetArgs>? MetricsConfig { get; set; }

        /// <summary>
        /// AWS resources collection config. May be empty to use defaults.
        /// </summary>
        [Input("resourcesConfig")]
        public Input<Inputs.IntegrationAccountResourcesConfigGetArgs>? ResourcesConfig { get; set; }

        /// <summary>
        /// AWS traces collection config. The `xray_services` block is required within, but may be empty to use defaults.
        /// </summary>
        [Input("tracesConfig")]
        public Input<Inputs.IntegrationAccountTracesConfigGetArgs>? TracesConfig { get; set; }

        public IntegrationAccountState()
        {
        }
        public static new IntegrationAccountState Empty => new IntegrationAccountState();
    }
}
