// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Aws
{
    /// <summary>
    /// Provides a Datadog - Amazon Web Services integration EventBridge resource. This can be used to create and manage Event Sources for each Datadog integrated AWS account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Datadog.Aws.IntegrationEventBridge("foo", new()
    ///     {
    ///         AccountId = "123456789012",
    ///         CreateEventBus = true,
    ///         EventGeneratorName = "app-alerts",
    ///         Region = "us-east-1",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Amazon Web Service EventBridge integrations are imported using the Event Source name as listed for an integrated AWS account in Datadog
    /// 
    /// ```sh
    /// $ pulumi import datadog:aws/integrationEventBridge:IntegrationEventBridge foo event-source-name-abc12345
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:aws/integrationEventBridge:IntegrationEventBridge")]
    public partial class IntegrationEventBridge : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Your AWS Account ID without dashes.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// True if Datadog should create the event bus in addition to the event source. Requires the `events:CreateEventBus` permission. Defaults to `true`.
        /// </summary>
        [Output("createEventBus")]
        public Output<bool> CreateEventBus { get; private set; } = null!;

        /// <summary>
        /// The given part of the event source name, which is then combined with an assigned suffix to form the full name.
        /// </summary>
        [Output("eventGeneratorName")]
        public Output<string> EventGeneratorName { get; private set; } = null!;

        /// <summary>
        /// The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a IntegrationEventBridge resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IntegrationEventBridge(string name, IntegrationEventBridgeArgs args, CustomResourceOptions? options = null)
            : base("datadog:aws/integrationEventBridge:IntegrationEventBridge", name, args ?? new IntegrationEventBridgeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IntegrationEventBridge(string name, Input<string> id, IntegrationEventBridgeState? state = null, CustomResourceOptions? options = null)
            : base("datadog:aws/integrationEventBridge:IntegrationEventBridge", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IntegrationEventBridge resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IntegrationEventBridge Get(string name, Input<string> id, IntegrationEventBridgeState? state = null, CustomResourceOptions? options = null)
        {
            return new IntegrationEventBridge(name, id, state, options);
        }
    }

    public sealed class IntegrationEventBridgeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Your AWS Account ID without dashes.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// True if Datadog should create the event bus in addition to the event source. Requires the `events:CreateEventBus` permission. Defaults to `true`.
        /// </summary>
        [Input("createEventBus")]
        public Input<bool>? CreateEventBus { get; set; }

        /// <summary>
        /// The given part of the event source name, which is then combined with an assigned suffix to form the full name.
        /// </summary>
        [Input("eventGeneratorName", required: true)]
        public Input<string> EventGeneratorName { get; set; } = null!;

        /// <summary>
        /// The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        public IntegrationEventBridgeArgs()
        {
        }
        public static new IntegrationEventBridgeArgs Empty => new IntegrationEventBridgeArgs();
    }

    public sealed class IntegrationEventBridgeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Your AWS Account ID without dashes.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// True if Datadog should create the event bus in addition to the event source. Requires the `events:CreateEventBus` permission. Defaults to `true`.
        /// </summary>
        [Input("createEventBus")]
        public Input<bool>? CreateEventBus { get; set; }

        /// <summary>
        /// The given part of the event source name, which is then combined with an assigned suffix to form the full name.
        /// </summary>
        [Input("eventGeneratorName")]
        public Input<string>? EventGeneratorName { get; set; }

        /// <summary>
        /// The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public IntegrationEventBridgeState()
        {
        }
        public static new IntegrationEventBridgeState Empty => new IntegrationEventBridgeState();
    }
}
