// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Aws.Outputs
{

    [OutputType]
    public sealed class IntegrationAccountMetricsConfig
    {
        /// <summary>
        /// Enable EC2 automute for AWS metrics Defaults to `true`.
        /// </summary>
        public readonly bool? AutomuteEnabled;
        /// <summary>
        /// Enable CloudWatch alarms collection Defaults to `false`.
        /// </summary>
        public readonly bool? CollectCloudwatchAlarms;
        /// <summary>
        /// Enable custom metrics collection Defaults to `false`.
        /// </summary>
        public readonly bool? CollectCustomMetrics;
        /// <summary>
        /// Enable AWS metrics collection Defaults to `true`.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// AWS metrics namespace filters. Defaults to a pre-set `exclude_only` list if block is empty.
        /// </summary>
        public readonly Outputs.IntegrationAccountMetricsConfigNamespaceFilters? NamespaceFilters;
        /// <summary>
        /// AWS Metrics Collection tag filters list. The array of custom AWS resource tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from a specified service. Wildcards, such as `?` (match a single character) and `*` (match multiple characters), and exclusion using `!` before the tag are supported. For EC2, only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. For example, `env:production,instance-type:c?.*,!region:us-east-1`.
        /// </summary>
        public readonly ImmutableArray<Outputs.IntegrationAccountMetricsConfigTagFilter> TagFilters;

        [OutputConstructor]
        private IntegrationAccountMetricsConfig(
            bool? automuteEnabled,

            bool? collectCloudwatchAlarms,

            bool? collectCustomMetrics,

            bool? enabled,

            Outputs.IntegrationAccountMetricsConfigNamespaceFilters? namespaceFilters,

            ImmutableArray<Outputs.IntegrationAccountMetricsConfigTagFilter> tagFilters)
        {
            AutomuteEnabled = automuteEnabled;
            CollectCloudwatchAlarms = collectCloudwatchAlarms;
            CollectCustomMetrics = collectCustomMetrics;
            Enabled = enabled;
            NamespaceFilters = namespaceFilters;
            TagFilters = tagFilters;
        }
    }
}
