// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetCustomAllocationRule
    {
        /// <summary>
        /// Use this data source to retrieve information about an existing custom allocation rule.
        /// </summary>
        public static Task<GetCustomAllocationRuleResult> InvokeAsync(GetCustomAllocationRuleArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCustomAllocationRuleResult>("datadog:index/getCustomAllocationRule:getCustomAllocationRule", args ?? new GetCustomAllocationRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about an existing custom allocation rule.
        /// </summary>
        public static Output<GetCustomAllocationRuleResult> Invoke(GetCustomAllocationRuleInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomAllocationRuleResult>("datadog:index/getCustomAllocationRule:getCustomAllocationRule", args ?? new GetCustomAllocationRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about an existing custom allocation rule.
        /// </summary>
        public static Output<GetCustomAllocationRuleResult> Invoke(GetCustomAllocationRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCustomAllocationRuleResult>("datadog:index/getCustomAllocationRule:getCustomAllocationRule", args ?? new GetCustomAllocationRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCustomAllocationRuleArgs : global::Pulumi.InvokeArgs
    {
        [Input("costsToAllocates")]
        private List<Inputs.GetCustomAllocationRuleCostsToAllocateArgs>? _costsToAllocates;
        public List<Inputs.GetCustomAllocationRuleCostsToAllocateArgs> CostsToAllocates
        {
            get => _costsToAllocates ?? (_costsToAllocates = new List<Inputs.GetCustomAllocationRuleCostsToAllocateArgs>());
            set => _costsToAllocates = value;
        }

        /// <summary>
        /// The ID of the custom allocation rule to retrieve.
        /// </summary>
        [Input("ruleId")]
        public int? RuleId { get; set; }

        [Input("strategy")]
        public Inputs.GetCustomAllocationRuleStrategyArgs? Strategy { get; set; }

        public GetCustomAllocationRuleArgs()
        {
        }
        public static new GetCustomAllocationRuleArgs Empty => new GetCustomAllocationRuleArgs();
    }

    public sealed class GetCustomAllocationRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("costsToAllocates")]
        private InputList<Inputs.GetCustomAllocationRuleCostsToAllocateInputArgs>? _costsToAllocates;
        public InputList<Inputs.GetCustomAllocationRuleCostsToAllocateInputArgs> CostsToAllocates
        {
            get => _costsToAllocates ?? (_costsToAllocates = new InputList<Inputs.GetCustomAllocationRuleCostsToAllocateInputArgs>());
            set => _costsToAllocates = value;
        }

        /// <summary>
        /// The ID of the custom allocation rule to retrieve.
        /// </summary>
        [Input("ruleId")]
        public Input<int>? RuleId { get; set; }

        [Input("strategy")]
        public Input<Inputs.GetCustomAllocationRuleStrategyInputArgs>? Strategy { get; set; }

        public GetCustomAllocationRuleInvokeArgs()
        {
        }
        public static new GetCustomAllocationRuleInvokeArgs Empty => new GetCustomAllocationRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetCustomAllocationRuleResult
    {
        public readonly ImmutableArray<Outputs.GetCustomAllocationRuleCostsToAllocateResult> CostsToAllocates;
        /// <summary>
        /// The timestamp (in ISO 8601 format) when the rule was created.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// Whether the custom allocation rule is enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The UUID of the user who last modified the rule.
        /// </summary>
        public readonly string LastModifiedUserUuid;
        /// <summary>
        /// The order of the rule in the list of custom allocation rules.
        /// </summary>
        public readonly int OrderId;
        /// <summary>
        /// List of cloud providers the rule applies to (e.g., `Aws`, `Azure`, `Gcp`).
        /// </summary>
        public readonly ImmutableArray<string> Providernames;
        /// <summary>
        /// Whether the rule was rejected by Datadog due to runtime errors. This field can be updated well after the rule was created. If rejected this rule is treated as disabled until modified where the rejection status is reset.
        /// </summary>
        public readonly bool Rejected;
        /// <summary>
        /// The ID of the custom allocation rule to retrieve.
        /// </summary>
        public readonly int? RuleId;
        /// <summary>
        /// The unique name of the custom allocation rule.
        /// </summary>
        public readonly string RuleName;
        public readonly Outputs.GetCustomAllocationRuleStrategyResult? Strategy;
        /// <summary>
        /// The type of the custom allocation rule. This is always `Shared` currently.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The timestamp (in ISO 8601 format) when the rule was last updated.
        /// </summary>
        public readonly string Updated;
        /// <summary>
        /// The version number of the rule.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetCustomAllocationRuleResult(
            ImmutableArray<Outputs.GetCustomAllocationRuleCostsToAllocateResult> costsToAllocates,

            string created,

            bool enabled,

            string id,

            string lastModifiedUserUuid,

            int orderId,

            ImmutableArray<string> providernames,

            bool rejected,

            int? ruleId,

            string ruleName,

            Outputs.GetCustomAllocationRuleStrategyResult? strategy,

            string type,

            string updated,

            string version)
        {
            CostsToAllocates = costsToAllocates;
            Created = created;
            Enabled = enabled;
            Id = id;
            LastModifiedUserUuid = lastModifiedUserUuid;
            OrderId = orderId;
            Providernames = providernames;
            Rejected = rejected;
            RuleId = ruleId;
            RuleName = ruleName;
            Strategy = strategy;
            Type = type;
            Updated = updated;
            Version = version;
        }
    }
}
