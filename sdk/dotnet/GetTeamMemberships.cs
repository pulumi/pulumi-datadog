// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetTeamMemberships
    {
        /// <summary>
        /// Use this data source to retrieve information about existing Datadog team memberships.
        /// </summary>
        public static Task<GetTeamMembershipsResult> InvokeAsync(GetTeamMembershipsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTeamMembershipsResult>("datadog:index/getTeamMemberships:getTeamMemberships", args ?? new GetTeamMembershipsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about existing Datadog team memberships.
        /// </summary>
        public static Output<GetTeamMembershipsResult> Invoke(GetTeamMembershipsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTeamMembershipsResult>("datadog:index/getTeamMemberships:getTeamMemberships", args ?? new GetTeamMembershipsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTeamMembershipsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Search query, can be user email or name.
        /// </summary>
        [Input("filterKeyword")]
        public string? FilterKeyword { get; set; }

        [Input("teamId", required: true)]
        public string TeamId { get; set; } = null!;

        public GetTeamMembershipsArgs()
        {
        }
        public static new GetTeamMembershipsArgs Empty => new GetTeamMembershipsArgs();
    }

    public sealed class GetTeamMembershipsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Search query, can be user email or name.
        /// </summary>
        [Input("filterKeyword")]
        public Input<string>? FilterKeyword { get; set; }

        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        public GetTeamMembershipsInvokeArgs()
        {
        }
        public static new GetTeamMembershipsInvokeArgs Empty => new GetTeamMembershipsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTeamMembershipsResult
    {
        /// <summary>
        /// Search query, can be user email or name.
        /// </summary>
        public readonly string? FilterKeyword;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The team's identifier.
        /// </summary>
        public readonly string TeamId;
        /// <summary>
        /// List of team memberships.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTeamMembershipsTeamMembershipResult> TeamMemberships;

        [OutputConstructor]
        private GetTeamMembershipsResult(
            string? filterKeyword,

            string id,

            string teamId,

            ImmutableArray<Outputs.GetTeamMembershipsTeamMembershipResult> teamMemberships)
        {
            FilterKeyword = filterKeyword;
            Id = id;
            TeamId = teamId;
            TeamMemberships = teamMemberships;
        }
    }
}
