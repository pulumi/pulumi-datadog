// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetCsmThreatsAgentRules
    {
        /// <summary>
        /// Use this data source to retrieve information about existing Agent rules.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Datadog.GetCsmThreatsAgentRules.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCsmThreatsAgentRulesResult> InvokeAsync(GetCsmThreatsAgentRulesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCsmThreatsAgentRulesResult>("datadog:index/getCsmThreatsAgentRules:getCsmThreatsAgentRules", args ?? new GetCsmThreatsAgentRulesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about existing Agent rules.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Datadog.GetCsmThreatsAgentRules.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCsmThreatsAgentRulesResult> Invoke(GetCsmThreatsAgentRulesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCsmThreatsAgentRulesResult>("datadog:index/getCsmThreatsAgentRules:getCsmThreatsAgentRules", args ?? new GetCsmThreatsAgentRulesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about existing Agent rules.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Datadog.GetCsmThreatsAgentRules.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCsmThreatsAgentRulesResult> Invoke(GetCsmThreatsAgentRulesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCsmThreatsAgentRulesResult>("datadog:index/getCsmThreatsAgentRules:getCsmThreatsAgentRules", args ?? new GetCsmThreatsAgentRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCsmThreatsAgentRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Listing only the rules in the policy with this field as the ID
        /// </summary>
        [Input("policyId")]
        public string? PolicyId { get; set; }

        public GetCsmThreatsAgentRulesArgs()
        {
        }
        public static new GetCsmThreatsAgentRulesArgs Empty => new GetCsmThreatsAgentRulesArgs();
    }

    public sealed class GetCsmThreatsAgentRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Listing only the rules in the policy with this field as the ID
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        public GetCsmThreatsAgentRulesInvokeArgs()
        {
        }
        public static new GetCsmThreatsAgentRulesInvokeArgs Empty => new GetCsmThreatsAgentRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetCsmThreatsAgentRulesResult
    {
        /// <summary>
        /// List of Agent rules
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCsmThreatsAgentRulesAgentRuleResult> AgentRules;
        /// <summary>
        /// List of IDs for the Agent rules.
        /// </summary>
        public readonly ImmutableArray<string> AgentRulesIds;
        /// <summary>
        /// The ID of the data source
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Listing only the rules in the policy with this field as the ID
        /// </summary>
        public readonly string? PolicyId;

        [OutputConstructor]
        private GetCsmThreatsAgentRulesResult(
            ImmutableArray<Outputs.GetCsmThreatsAgentRulesAgentRuleResult> agentRules,

            ImmutableArray<string> agentRulesIds,

            string id,

            string? policyId)
        {
            AgentRules = agentRules;
            AgentRulesIds = agentRulesIds;
            Id = id;
            PolicyId = policyId;
        }
    }
}
