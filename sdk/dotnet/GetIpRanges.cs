// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetIpRanges
    {
        /// <summary>
        /// Use this data source to retrieve information about Datadog's IP addresses.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Datadog.GetIpRanges.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetIpRangesResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpRangesResult>("datadog:index/getIpRanges:getIpRanges", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetIpRangesResult
    {
        /// <summary>
        /// An Array of IPv4 addresses in CIDR format specifying the A records for the Agent endpoint.
        /// </summary>
        public readonly ImmutableArray<string> AgentsIpv4s;
        /// <summary>
        /// An Array of IPv6 addresses in CIDR format specifying the A records for the Agent endpoint.
        /// </summary>
        public readonly ImmutableArray<string> AgentsIpv6s;
        /// <summary>
        /// An Array of IPv4 addresses in CIDR format specifying the A records for the API endpoint.
        /// </summary>
        public readonly ImmutableArray<string> ApiIpv4s;
        /// <summary>
        /// An Array of IPv6 addresses in CIDR format specifying the A records for the API endpoint.
        /// </summary>
        public readonly ImmutableArray<string> ApiIpv6s;
        /// <summary>
        /// An Array of IPv4 addresses in CIDR format specifying the A records for the APM endpoint.
        /// </summary>
        public readonly ImmutableArray<string> ApmIpv4s;
        /// <summary>
        /// An Array of IPv6 addresses in CIDR format specifying the A records for the APM endpoint.
        /// </summary>
        public readonly ImmutableArray<string> ApmIpv6s;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// An Array of IPv4 addresses in CIDR format specifying the A records for the Logs endpoint.
        /// </summary>
        public readonly ImmutableArray<string> LogsIpv4s;
        /// <summary>
        /// An Array of IPv6 addresses in CIDR format specifying the A records for the Logs endpoint.
        /// </summary>
        public readonly ImmutableArray<string> LogsIpv6s;
        /// <summary>
        /// An Array of IPv4 addresses in CIDR format specifying the A records for the Orchestrator endpoint.
        /// </summary>
        public readonly ImmutableArray<string> OrchestratorIpv4s;
        /// <summary>
        /// An Array of IPv6 addresses in CIDR format specifying the A records for the Orchestrator endpoint.
        /// </summary>
        public readonly ImmutableArray<string> OrchestratorIpv6s;
        /// <summary>
        /// An Array of IPv4 addresses in CIDR format specifying the A records for the Process endpoint.
        /// </summary>
        public readonly ImmutableArray<string> ProcessIpv4s;
        /// <summary>
        /// An Array of IPv6 addresses in CIDR format specifying the A records for the Process endpoint.
        /// </summary>
        public readonly ImmutableArray<string> ProcessIpv6s;
        /// <summary>
        /// A map of IPv4 prefixes (string of concatenated IPs, delimited by ',') by location.
        /// </summary>
        public readonly ImmutableDictionary<string, object> SyntheticsIpv4ByLocation;
        /// <summary>
        /// An Array of IPv4 addresses in CIDR format specifying the A records for the Synthetics endpoint.
        /// </summary>
        public readonly ImmutableArray<string> SyntheticsIpv4s;
        /// <summary>
        /// A map of IPv6 prefixes (string of concatenated IPs, delimited by ',') by location.
        /// </summary>
        public readonly ImmutableDictionary<string, object> SyntheticsIpv6ByLocation;
        /// <summary>
        /// An Array of IPv6 addresses in CIDR format specifying the A records for the Synthetics endpoint.
        /// </summary>
        public readonly ImmutableArray<string> SyntheticsIpv6s;
        /// <summary>
        /// An Array of IPv4 addresses in CIDR format specifying the A records for the Webhooks endpoint.
        /// </summary>
        public readonly ImmutableArray<string> WebhooksIpv4s;
        /// <summary>
        /// An Array of IPv6 addresses in CIDR format specifying the A records for the Webhooks endpoint.
        /// </summary>
        public readonly ImmutableArray<string> WebhooksIpv6s;

        [OutputConstructor]
        private GetIpRangesResult(
            ImmutableArray<string> agentsIpv4s,

            ImmutableArray<string> agentsIpv6s,

            ImmutableArray<string> apiIpv4s,

            ImmutableArray<string> apiIpv6s,

            ImmutableArray<string> apmIpv4s,

            ImmutableArray<string> apmIpv6s,

            string id,

            ImmutableArray<string> logsIpv4s,

            ImmutableArray<string> logsIpv6s,

            ImmutableArray<string> orchestratorIpv4s,

            ImmutableArray<string> orchestratorIpv6s,

            ImmutableArray<string> processIpv4s,

            ImmutableArray<string> processIpv6s,

            ImmutableDictionary<string, object> syntheticsIpv4ByLocation,

            ImmutableArray<string> syntheticsIpv4s,

            ImmutableDictionary<string, object> syntheticsIpv6ByLocation,

            ImmutableArray<string> syntheticsIpv6s,

            ImmutableArray<string> webhooksIpv4s,

            ImmutableArray<string> webhooksIpv6s)
        {
            AgentsIpv4s = agentsIpv4s;
            AgentsIpv6s = agentsIpv6s;
            ApiIpv4s = apiIpv4s;
            ApiIpv6s = apiIpv6s;
            ApmIpv4s = apmIpv4s;
            ApmIpv6s = apmIpv6s;
            Id = id;
            LogsIpv4s = logsIpv4s;
            LogsIpv6s = logsIpv6s;
            OrchestratorIpv4s = orchestratorIpv4s;
            OrchestratorIpv6s = orchestratorIpv6s;
            ProcessIpv4s = processIpv4s;
            ProcessIpv6s = processIpv6s;
            SyntheticsIpv4ByLocation = syntheticsIpv4ByLocation;
            SyntheticsIpv4s = syntheticsIpv4s;
            SyntheticsIpv6ByLocation = syntheticsIpv6ByLocation;
            SyntheticsIpv6s = syntheticsIpv6s;
            WebhooksIpv4s = webhooksIpv4s;
            WebhooksIpv6s = webhooksIpv6s;
        }
    }
}
