// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog.Azure
{
    /// <summary>
    /// Provides a Datadog - Microsoft Azure integration resource. This can be used to create and manage the integrations.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a new Datadog - Microsoft Azure integration
    ///     var sandbox = new Datadog.Azure.Integration("sandbox", new()
    ///     {
    ///         AppServicePlanFilters = "examplefilter:true,example:another",
    ///         Automute = true,
    ///         ClientId = "&lt;azure_client_id&gt;",
    ///         ClientSecret = "&lt;azure_client_secret_key&gt;",
    ///         CspmEnabled = true,
    ///         CustomMetricsEnabled = false,
    ///         HostFilters = "examplefilter:true,example:true",
    ///         TenantName = "&lt;azure_tenant_name&gt;",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Microsoft Azure integrations can be imported using their `tenant name` and `client` id separated with a colon (`:`).
    /// 
    /// ```sh
    ///  $ pulumi import datadog:azure/integration:Integration sandbox ${tenant_name}:${client_id}
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:azure/integration:Integration")]
    public partial class Integration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s).
        /// </summary>
        [Output("appServicePlanFilters")]
        public Output<string?> AppServicePlanFilters { get; private set; } = null!;

        /// <summary>
        /// Silence monitors for expected Azure VM shutdowns.
        /// </summary>
        [Output("automute")]
        public Output<bool?> Automute { get; private set; } = null!;

        /// <summary>
        /// Your Azure web application ID.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// (Required for Initial Creation) Your Azure web application secret key.
        /// </summary>
        [Output("clientSecret")]
        public Output<string> ClientSecret { get; private set; } = null!;

        /// <summary>
        /// Enable Cloud Security Management Misconfigurations for your organization.
        /// </summary>
        [Output("cspmEnabled")]
        public Output<bool?> CspmEnabled { get; private set; } = null!;

        /// <summary>
        /// Enable custom metrics for your organization.
        /// </summary>
        [Output("customMetricsEnabled")]
        public Output<bool?> CustomMetricsEnabled { get; private set; } = null!;

        /// <summary>
        /// String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`
        /// </summary>
        [Output("hostFilters")]
        public Output<string?> HostFilters { get; private set; } = null!;

        /// <summary>
        /// Your Azure Active Directory ID.
        /// </summary>
        [Output("tenantName")]
        public Output<string> TenantName { get; private set; } = null!;


        /// <summary>
        /// Create a Integration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Integration(string name, IntegrationArgs args, CustomResourceOptions? options = null)
            : base("datadog:azure/integration:Integration", name, args ?? new IntegrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Integration(string name, Input<string> id, IntegrationState? state = null, CustomResourceOptions? options = null)
            : base("datadog:azure/integration:Integration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "clientSecret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Integration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Integration Get(string name, Input<string> id, IntegrationState? state = null, CustomResourceOptions? options = null)
        {
            return new Integration(name, id, state, options);
        }
    }

    public sealed class IntegrationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s).
        /// </summary>
        [Input("appServicePlanFilters")]
        public Input<string>? AppServicePlanFilters { get; set; }

        /// <summary>
        /// Silence monitors for expected Azure VM shutdowns.
        /// </summary>
        [Input("automute")]
        public Input<bool>? Automute { get; set; }

        /// <summary>
        /// Your Azure web application ID.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret", required: true)]
        private Input<string>? _clientSecret;

        /// <summary>
        /// (Required for Initial Creation) Your Azure web application secret key.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Enable Cloud Security Management Misconfigurations for your organization.
        /// </summary>
        [Input("cspmEnabled")]
        public Input<bool>? CspmEnabled { get; set; }

        /// <summary>
        /// Enable custom metrics for your organization.
        /// </summary>
        [Input("customMetricsEnabled")]
        public Input<bool>? CustomMetricsEnabled { get; set; }

        /// <summary>
        /// String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`
        /// </summary>
        [Input("hostFilters")]
        public Input<string>? HostFilters { get; set; }

        /// <summary>
        /// Your Azure Active Directory ID.
        /// </summary>
        [Input("tenantName", required: true)]
        public Input<string> TenantName { get; set; } = null!;

        public IntegrationArgs()
        {
        }
        public static new IntegrationArgs Empty => new IntegrationArgs();
    }

    public sealed class IntegrationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s).
        /// </summary>
        [Input("appServicePlanFilters")]
        public Input<string>? AppServicePlanFilters { get; set; }

        /// <summary>
        /// Silence monitors for expected Azure VM shutdowns.
        /// </summary>
        [Input("automute")]
        public Input<bool>? Automute { get; set; }

        /// <summary>
        /// Your Azure web application ID.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;

        /// <summary>
        /// (Required for Initial Creation) Your Azure web application secret key.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Enable Cloud Security Management Misconfigurations for your organization.
        /// </summary>
        [Input("cspmEnabled")]
        public Input<bool>? CspmEnabled { get; set; }

        /// <summary>
        /// Enable custom metrics for your organization.
        /// </summary>
        [Input("customMetricsEnabled")]
        public Input<bool>? CustomMetricsEnabled { get; set; }

        /// <summary>
        /// String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`
        /// </summary>
        [Input("hostFilters")]
        public Input<string>? HostFilters { get; set; }

        /// <summary>
        /// Your Azure Active Directory ID.
        /// </summary>
        [Input("tenantName")]
        public Input<string>? TenantName { get; set; }

        public IntegrationState()
        {
        }
        public static new IntegrationState Empty => new IntegrationState();
    }
}
