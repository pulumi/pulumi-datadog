// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides the Datadog IP allowlist resource. This can be used to manage the Datadog IP allowlist
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Datadog.IpAllowlist("example", new()
    ///     {
    ///         Enabled = false,
    ///         Entries = new[]
    ///         {
    ///             new Datadog.Inputs.IpAllowlistEntryArgs
    ///             {
    ///                 CidrBlock = "127.0.0.0/32",
    ///                 Note = "1st Example IP Range",
    ///             },
    ///             new Datadog.Inputs.IpAllowlistEntryArgs
    ///             {
    ///                 CidrBlock = "192.0.2.0/24",
    ///                 Note = "2nd Example IP Range",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/ipAllowlist:IpAllowlist")]
    public partial class IpAllowlist : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether the IP Allowlist is enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.
        /// </summary>
        [Output("entries")]
        public Output<ImmutableArray<Outputs.IpAllowlistEntry>> Entries { get; private set; } = null!;


        /// <summary>
        /// Create a IpAllowlist resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IpAllowlist(string name, IpAllowlistArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/ipAllowlist:IpAllowlist", name, args ?? new IpAllowlistArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IpAllowlist(string name, Input<string> id, IpAllowlistState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/ipAllowlist:IpAllowlist", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IpAllowlist resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IpAllowlist Get(string name, Input<string> id, IpAllowlistState? state = null, CustomResourceOptions? options = null)
        {
            return new IpAllowlist(name, id, state, options);
        }
    }

    public sealed class IpAllowlistArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the IP Allowlist is enabled.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("entries")]
        private InputList<Inputs.IpAllowlistEntryArgs>? _entries;

        /// <summary>
        /// Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.
        /// </summary>
        public InputList<Inputs.IpAllowlistEntryArgs> Entries
        {
            get => _entries ?? (_entries = new InputList<Inputs.IpAllowlistEntryArgs>());
            set => _entries = value;
        }

        public IpAllowlistArgs()
        {
        }
        public static new IpAllowlistArgs Empty => new IpAllowlistArgs();
    }

    public sealed class IpAllowlistState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the IP Allowlist is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("entries")]
        private InputList<Inputs.IpAllowlistEntryGetArgs>? _entries;

        /// <summary>
        /// Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.
        /// </summary>
        public InputList<Inputs.IpAllowlistEntryGetArgs> Entries
        {
            get => _entries ?? (_entries = new InputList<Inputs.IpAllowlistEntryGetArgs>());
            set => _entries = value;
        }

        public IpAllowlistState()
        {
        }
        public static new IpAllowlistState Empty => new IpAllowlistState();
    }
}
