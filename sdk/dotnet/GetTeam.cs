// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetTeam
    {
        /// <summary>
        /// Use this data source to retrieve information about an existing Datadog team.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Datadog.GetTeam.Invoke(new()
        ///     {
        ///         TeamId = "e6723c40-edb1-11ed-b816-da7ad0900002",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTeamResult> InvokeAsync(GetTeamArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTeamResult>("datadog:index/getTeam:getTeam", args ?? new GetTeamArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about an existing Datadog team.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Datadog.GetTeam.Invoke(new()
        ///     {
        ///         TeamId = "e6723c40-edb1-11ed-b816-da7ad0900002",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTeamResult> Invoke(GetTeamInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTeamResult>("datadog:index/getTeam:getTeam", args ?? new GetTeamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTeamArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Search query. Can be team name, team handle, or email of team member.
        /// </summary>
        [Input("filterKeyword")]
        public string? FilterKeyword { get; set; }

        /// <summary>
        /// The team's identifier.
        /// </summary>
        [Input("teamId")]
        public string? TeamId { get; set; }

        public GetTeamArgs()
        {
        }
        public static new GetTeamArgs Empty => new GetTeamArgs();
    }

    public sealed class GetTeamInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Search query. Can be team name, team handle, or email of team member.
        /// </summary>
        [Input("filterKeyword")]
        public Input<string>? FilterKeyword { get; set; }

        /// <summary>
        /// The team's identifier.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public GetTeamInvokeArgs()
        {
        }
        public static new GetTeamInvokeArgs Empty => new GetTeamInvokeArgs();
    }


    [OutputType]
    public sealed class GetTeamResult
    {
        /// <summary>
        /// Free-form markdown description/content for the team's homepage.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Search query. Can be team name, team handle, or email of team member.
        /// </summary>
        public readonly string? FilterKeyword;
        /// <summary>
        /// The team's handle.
        /// </summary>
        public readonly string Handle;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The number of links belonging to the team.
        /// </summary>
        public readonly int LinkCount;
        /// <summary>
        /// The name of the team.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A brief summary of the team, derived from the `description`.
        /// </summary>
        public readonly string Summary;
        /// <summary>
        /// The team's identifier.
        /// </summary>
        public readonly string TeamId;
        /// <summary>
        /// The number of users belonging to the team.
        /// </summary>
        public readonly int UserCount;

        [OutputConstructor]
        private GetTeamResult(
            string description,

            string? filterKeyword,

            string handle,

            string id,

            int linkCount,

            string name,

            string summary,

            string teamId,

            int userCount)
        {
            Description = description;
            FilterKeyword = filterKeyword;
            Handle = handle;
            Id = id;
            LinkCount = linkCount;
            Name = name;
            Summary = summary;
            TeamId = teamId;
            UserCount = userCount;
        }
    }
}
