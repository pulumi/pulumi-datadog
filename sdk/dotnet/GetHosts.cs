// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetHosts
    {
        /// <summary>
        /// Use this data source to retrieve information about your live hosts in Datadog.
        /// </summary>
        public static Task<GetHostsResult> InvokeAsync(GetHostsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostsResult>("datadog:index/getHosts:getHosts", args ?? new GetHostsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about your live hosts in Datadog.
        /// </summary>
        public static Output<GetHostsResult> Invoke(GetHostsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostsResult>("datadog:index/getHosts:getHosts", args ?? new GetHostsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// String to filter search results.
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// Number of seconds since UNIX epoch from which you want to search your hosts.
        /// </summary>
        [Input("from")]
        public int? From { get; set; }

        /// <summary>
        /// Include information on the muted status of hosts and when the mute expires.
        /// </summary>
        [Input("includeMutedHostsData")]
        public bool? IncludeMutedHostsData { get; set; }

        /// <summary>
        /// Direction of sort.
        /// </summary>
        [Input("sortDir")]
        public string? SortDir { get; set; }

        /// <summary>
        /// Sort hosts by this field.
        /// </summary>
        [Input("sortField")]
        public string? SortField { get; set; }

        public GetHostsArgs()
        {
        }
        public static new GetHostsArgs Empty => new GetHostsArgs();
    }

    public sealed class GetHostsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// String to filter search results.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// Number of seconds since UNIX epoch from which you want to search your hosts.
        /// </summary>
        [Input("from")]
        public Input<int>? From { get; set; }

        /// <summary>
        /// Include information on the muted status of hosts and when the mute expires.
        /// </summary>
        [Input("includeMutedHostsData")]
        public Input<bool>? IncludeMutedHostsData { get; set; }

        /// <summary>
        /// Direction of sort.
        /// </summary>
        [Input("sortDir")]
        public Input<string>? SortDir { get; set; }

        /// <summary>
        /// Sort hosts by this field.
        /// </summary>
        [Input("sortField")]
        public Input<string>? SortField { get; set; }

        public GetHostsInvokeArgs()
        {
        }
        public static new GetHostsInvokeArgs Empty => new GetHostsInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostsResult
    {
        /// <summary>
        /// String to filter search results.
        /// </summary>
        public readonly string? Filter;
        /// <summary>
        /// Number of seconds since UNIX epoch from which you want to search your hosts.
        /// </summary>
        public readonly int? From;
        /// <summary>
        /// List of hosts (1000 Max).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetHostsHostListResult> HostLists;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Include information on the muted status of hosts and when the mute expires.
        /// </summary>
        public readonly bool? IncludeMutedHostsData;
        /// <summary>
        /// Direction of sort.
        /// </summary>
        public readonly string? SortDir;
        /// <summary>
        /// Sort hosts by this field.
        /// </summary>
        public readonly string? SortField;
        /// <summary>
        /// Number of host matching the query.
        /// </summary>
        public readonly int TotalMatching;
        /// <summary>
        /// Number of host returned.
        /// </summary>
        public readonly int TotalReturned;

        [OutputConstructor]
        private GetHostsResult(
            string? filter,

            int? from,

            ImmutableArray<Outputs.GetHostsHostListResult> hostLists,

            string id,

            bool? includeMutedHostsData,

            string? sortDir,

            string? sortField,

            int totalMatching,

            int totalReturned)
        {
            Filter = filter;
            From = from;
            HostLists = hostLists;
            Id = id;
            IncludeMutedHostsData = includeMutedHostsData;
            SortDir = sortDir;
            SortField = sortField;
            TotalMatching = totalMatching;
            TotalReturned = totalReturned;
        }
    }
}
