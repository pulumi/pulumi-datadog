// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog TeamPermissionSetting resource. This can be used to manage Datadog team_permission_setting.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Datadog.Team("foo", new()
    ///     {
    ///         Description = "Example team",
    ///         Handle = "example-team-updated",
    ///         Name = "Example Team-updated",
    ///     });
    /// 
    ///     var fooTeamPermissionSetting = new Datadog.TeamPermissionSetting("foo", new()
    ///     {
    ///         TeamId = foo.Id,
    ///         Action = "manage_membership",
    ///         Value = "organization",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/teamPermissionSetting:TeamPermissionSetting")]
    public partial class TeamPermissionSetting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The identifier for the action. Valid values are `manage_membership`, `edit`.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// ID of the team the team permission setting is associated with.
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;

        /// <summary>
        /// The action value. Valid values are `admins`, `members`, `organization`, `user_access_manage`, `teams_manage`.
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a TeamPermissionSetting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TeamPermissionSetting(string name, TeamPermissionSettingArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/teamPermissionSetting:TeamPermissionSetting", name, args ?? new TeamPermissionSettingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TeamPermissionSetting(string name, Input<string> id, TeamPermissionSettingState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/teamPermissionSetting:TeamPermissionSetting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TeamPermissionSetting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TeamPermissionSetting Get(string name, Input<string> id, TeamPermissionSettingState? state = null, CustomResourceOptions? options = null)
        {
            return new TeamPermissionSetting(name, id, state, options);
        }
    }

    public sealed class TeamPermissionSettingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier for the action. Valid values are `manage_membership`, `edit`.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// ID of the team the team permission setting is associated with.
        /// </summary>
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        /// <summary>
        /// The action value. Valid values are `admins`, `members`, `organization`, `user_access_manage`, `teams_manage`.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public TeamPermissionSettingArgs()
        {
        }
        public static new TeamPermissionSettingArgs Empty => new TeamPermissionSettingArgs();
    }

    public sealed class TeamPermissionSettingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier for the action. Valid values are `manage_membership`, `edit`.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// ID of the team the team permission setting is associated with.
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        /// <summary>
        /// The action value. Valid values are `admins`, `members`, `organization`, `user_access_manage`, `teams_manage`.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public TeamPermissionSettingState()
        {
        }
        public static new TeamPermissionSettingState Empty => new TeamPermissionSettingState();
    }
}
