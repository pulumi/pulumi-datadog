// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog Workload Protection (CSM Threats) Agent Rule API resource.
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// CSM Agent Rules can be imported using ID. For example:
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule my_agent_rule m0o-hto-lkb
    /// ```
    /// 
    /// #Â CSM Agent Rules can also be imported using the policy ID and the rule ID. For example:
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule my_agent_rule jm4-lwh-8cs:m0o-hto-lkb
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule")]
    public partial class CsmThreatsAgentRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The list of actions the rule can perform
        /// </summary>
        [Output("actions")]
        public Output<ImmutableArray<Outputs.CsmThreatsAgentRuleAction>> Actions { get; private set; } = null!;

        /// <summary>
        /// A description for the Agent rule.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the Agent rule is enabled. Must not be used without policy_id.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The SECL expression of the Agent rule
        /// </summary>
        [Output("expression")]
        public Output<string> Expression { get; private set; } = null!;

        /// <summary>
        /// The name of the Agent rule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the agent policy in which the rule is saved
        /// </summary>
        [Output("policyId")]
        public Output<string?> PolicyId { get; private set; } = null!;

        /// <summary>
        /// The list of product tags associated with the rule
        /// </summary>
        [Output("productTags")]
        public Output<ImmutableArray<string>> ProductTags { get; private set; } = null!;


        /// <summary>
        /// Create a CsmThreatsAgentRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CsmThreatsAgentRule(string name, CsmThreatsAgentRuleArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule", name, args ?? new CsmThreatsAgentRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CsmThreatsAgentRule(string name, Input<string> id, CsmThreatsAgentRuleState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CsmThreatsAgentRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CsmThreatsAgentRule Get(string name, Input<string> id, CsmThreatsAgentRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new CsmThreatsAgentRule(name, id, state, options);
        }
    }

    public sealed class CsmThreatsAgentRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.CsmThreatsAgentRuleActionArgs>? _actions;

        /// <summary>
        /// The list of actions the rule can perform
        /// </summary>
        public InputList<Inputs.CsmThreatsAgentRuleActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.CsmThreatsAgentRuleActionArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// A description for the Agent rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Indicates whether the Agent rule is enabled. Must not be used without policy_id.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The SECL expression of the Agent rule
        /// </summary>
        [Input("expression", required: true)]
        public Input<string> Expression { get; set; } = null!;

        /// <summary>
        /// The name of the Agent rule.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the agent policy in which the rule is saved
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        [Input("productTags")]
        private InputList<string>? _productTags;

        /// <summary>
        /// The list of product tags associated with the rule
        /// </summary>
        public InputList<string> ProductTags
        {
            get => _productTags ?? (_productTags = new InputList<string>());
            set => _productTags = value;
        }

        public CsmThreatsAgentRuleArgs()
        {
        }
        public static new CsmThreatsAgentRuleArgs Empty => new CsmThreatsAgentRuleArgs();
    }

    public sealed class CsmThreatsAgentRuleState : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.CsmThreatsAgentRuleActionGetArgs>? _actions;

        /// <summary>
        /// The list of actions the rule can perform
        /// </summary>
        public InputList<Inputs.CsmThreatsAgentRuleActionGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.CsmThreatsAgentRuleActionGetArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// A description for the Agent rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Indicates whether the Agent rule is enabled. Must not be used without policy_id.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The SECL expression of the Agent rule
        /// </summary>
        [Input("expression")]
        public Input<string>? Expression { get; set; }

        /// <summary>
        /// The name of the Agent rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the agent policy in which the rule is saved
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        [Input("productTags")]
        private InputList<string>? _productTags;

        /// <summary>
        /// The list of product tags associated with the rule
        /// </summary>
        public InputList<string> ProductTags
        {
            get => _productTags ?? (_productTags = new InputList<string>());
            set => _productTags = value;
        }

        public CsmThreatsAgentRuleState()
        {
        }
        public static new CsmThreatsAgentRuleState Empty => new CsmThreatsAgentRuleState();
    }
}
