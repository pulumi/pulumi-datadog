// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog incident type resource. This can be used to create and manage Datadog incident types.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Basic incident type
    ///     var example = new Datadog.IncidentType("example", new()
    ///     {
    ///         Name = "Security Incident",
    ///         Description = "Security-related incidents requiring immediate attention",
    ///         IsDefault = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/incidentType:IncidentType example "12345678-1234-1234-1234-1234567890ab"
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/incidentType:IncidentType")]
    public partial class IncidentType : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the incident type. The description can have a maximum of 512 characters.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Whether this incident type is the default type.
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// Name of the incident type. Must be between 1 and 50 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a IncidentType resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IncidentType(string name, IncidentTypeArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/incidentType:IncidentType", name, args ?? new IncidentTypeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IncidentType(string name, Input<string> id, IncidentTypeState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/incidentType:IncidentType", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IncidentType resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IncidentType Get(string name, Input<string> id, IncidentTypeState? state = null, CustomResourceOptions? options = null)
        {
            return new IncidentType(name, id, state, options);
        }
    }

    public sealed class IncidentTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the incident type. The description can have a maximum of 512 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether this incident type is the default type.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// Name of the incident type. Must be between 1 and 50 characters.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public IncidentTypeArgs()
        {
        }
        public static new IncidentTypeArgs Empty => new IncidentTypeArgs();
    }

    public sealed class IncidentTypeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the incident type. The description can have a maximum of 512 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether this incident type is the default type.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// Name of the incident type. Must be between 1 and 50 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public IncidentTypeState()
        {
        }
        public static new IncidentTypeState Empty => new IncidentTypeState();
    }
}
