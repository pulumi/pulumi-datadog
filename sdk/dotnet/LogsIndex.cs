// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var sampleIndex = new Datadog.LogsIndex("sampleIndex", new Datadog.LogsIndexArgs
    ///         {
    ///             DailyLimit = 200000,
    ///             ExclusionFilters = 
    ///             {
    ///                 new Datadog.Inputs.LogsIndexExclusionFilterArgs
    ///                 {
    ///                     Filters = 
    ///                     {
    ///                         new Datadog.Inputs.LogsIndexExclusionFilterFilterArgs
    ///                         {
    ///                             Query = "app:coredns",
    ///                             SampleRate = 0.97,
    ///                         },
    ///                     },
    ///                     IsEnabled = true,
    ///                     Name = "Filter coredns logs",
    ///                 },
    ///                 new Datadog.Inputs.LogsIndexExclusionFilterArgs
    ///                 {
    ///                     Filters = 
    ///                     {
    ///                         new Datadog.Inputs.LogsIndexExclusionFilterFilterArgs
    ///                         {
    ///                             Query = "service:kube_apiserver",
    ///                             SampleRate = 1,
    ///                         },
    ///                     },
    ///                     IsEnabled = true,
    ///                     Name = "Kubernetes apiserver",
    ///                 },
    ///             },
    ///             Filters = 
    ///             {
    ///                 new Datadog.Inputs.LogsIndexFilterArgs
    ///                 {
    ///                     Query = "*",
    ///                 },
    ///             },
    ///             Name = "your index",
    ///             RetentionDays = 7,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import datadog:index/logsIndex:LogsIndex name&gt; &lt;indexName&gt;
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/logsIndex:LogsIndex")]
    public partial class LogsIndex : Pulumi.CustomResource
    {
        /// <summary>
        /// The number of log events you can send in this index per day before you are rate-limited.
        /// </summary>
        [Output("dailyLimit")]
        public Output<int?> DailyLimit { get; private set; } = null!;

        /// <summary>
        /// If true, sets the daily*limit value to null and the index is not limited on a daily basis (any specified daily*limit value in the request is ignored). If false or omitted, the index's current daily_limit is maintained.
        /// </summary>
        [Output("disableDailyLimit")]
        public Output<bool> DisableDailyLimit { get; private set; } = null!;

        /// <summary>
        /// List of exclusion filters.
        /// </summary>
        [Output("exclusionFilters")]
        public Output<ImmutableArray<Outputs.LogsIndexExclusionFilter>> ExclusionFilters { get; private set; } = null!;

        /// <summary>
        /// Logs filter
        /// </summary>
        [Output("filters")]
        public Output<ImmutableArray<Outputs.LogsIndexFilter>> Filters { get; private set; } = null!;

        /// <summary>
        /// The name of the index.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The number of days before logs are deleted from this index.
        /// </summary>
        [Output("retentionDays")]
        public Output<int> RetentionDays { get; private set; } = null!;


        /// <summary>
        /// Create a LogsIndex resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogsIndex(string name, LogsIndexArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/logsIndex:LogsIndex", name, args ?? new LogsIndexArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogsIndex(string name, Input<string> id, LogsIndexState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/logsIndex:LogsIndex", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogsIndex resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogsIndex Get(string name, Input<string> id, LogsIndexState? state = null, CustomResourceOptions? options = null)
        {
            return new LogsIndex(name, id, state, options);
        }
    }

    public sealed class LogsIndexArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of log events you can send in this index per day before you are rate-limited.
        /// </summary>
        [Input("dailyLimit")]
        public Input<int>? DailyLimit { get; set; }

        /// <summary>
        /// If true, sets the daily*limit value to null and the index is not limited on a daily basis (any specified daily*limit value in the request is ignored). If false or omitted, the index's current daily_limit is maintained.
        /// </summary>
        [Input("disableDailyLimit")]
        public Input<bool>? DisableDailyLimit { get; set; }

        [Input("exclusionFilters")]
        private InputList<Inputs.LogsIndexExclusionFilterArgs>? _exclusionFilters;

        /// <summary>
        /// List of exclusion filters.
        /// </summary>
        public InputList<Inputs.LogsIndexExclusionFilterArgs> ExclusionFilters
        {
            get => _exclusionFilters ?? (_exclusionFilters = new InputList<Inputs.LogsIndexExclusionFilterArgs>());
            set => _exclusionFilters = value;
        }

        [Input("filters", required: true)]
        private InputList<Inputs.LogsIndexFilterArgs>? _filters;

        /// <summary>
        /// Logs filter
        /// </summary>
        public InputList<Inputs.LogsIndexFilterArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.LogsIndexFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the index.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The number of days before logs are deleted from this index.
        /// </summary>
        [Input("retentionDays")]
        public Input<int>? RetentionDays { get; set; }

        public LogsIndexArgs()
        {
        }
    }

    public sealed class LogsIndexState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of log events you can send in this index per day before you are rate-limited.
        /// </summary>
        [Input("dailyLimit")]
        public Input<int>? DailyLimit { get; set; }

        /// <summary>
        /// If true, sets the daily*limit value to null and the index is not limited on a daily basis (any specified daily*limit value in the request is ignored). If false or omitted, the index's current daily_limit is maintained.
        /// </summary>
        [Input("disableDailyLimit")]
        public Input<bool>? DisableDailyLimit { get; set; }

        [Input("exclusionFilters")]
        private InputList<Inputs.LogsIndexExclusionFilterGetArgs>? _exclusionFilters;

        /// <summary>
        /// List of exclusion filters.
        /// </summary>
        public InputList<Inputs.LogsIndexExclusionFilterGetArgs> ExclusionFilters
        {
            get => _exclusionFilters ?? (_exclusionFilters = new InputList<Inputs.LogsIndexExclusionFilterGetArgs>());
            set => _exclusionFilters = value;
        }

        [Input("filters")]
        private InputList<Inputs.LogsIndexFilterGetArgs>? _filters;

        /// <summary>
        /// Logs filter
        /// </summary>
        public InputList<Inputs.LogsIndexFilterGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.LogsIndexFilterGetArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the index.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of days before logs are deleted from this index.
        /// </summary>
        [Input("retentionDays")]
        public Input<int>? RetentionDays { get; set; }

        public LogsIndexState()
        {
        }
    }
}
