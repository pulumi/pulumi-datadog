// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    /// <summary>
    /// Provides a Datadog RumRetentionFiltersOrder resource. This is used to manage the order of Datadog RUM retention filters. Please note that RetentionFilterIds should contain all IDs of retention filters, including the default ones created internally for a given RUM application.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datadog = Pulumi.Datadog;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a new rum_application resource.
    ///     var myRumApplication = new Datadog.RumApplication("my_rum_application", new()
    ///     {
    ///         Name = "my-rum-application-test",
    ///         Type = "browser",
    ///     });
    /// 
    ///     // Retrieve rum_retention_filters for the rum_application created above.
    ///     var myRetentionFilters = Datadog.GetRumRetentionFilters.Invoke(new()
    ///     {
    ///         ApplicationId = datadogRumApplication.MyRumApplication.Id,
    ///     });
    /// 
    ///     // Create a new rum_retention_filter resource.
    ///     var newRumRetentionFilter = new Datadog.RumRetentionFilter("new_rum_retention_filter", new()
    ///     {
    ///         ApplicationId = datadogRumApplication.MyRumApplication.Id,
    ///         Name = "testing.rum.retention_filter",
    ///         EventType = "action",
    ///         SampleRate = 60,
    ///         Query = "@session.has_replay:true",
    ///         Enabled = true,
    ///     });
    /// 
    ///     // Create a new rum_retention_filters_order resource for reordering.
    ///     // Please note that the IDs of all default retention filters have the prefix 'default', and you need to populate the retention_filter_ids field with all retention filter IDs.
    ///     var myRumRetentionFiltersOrder = new Datadog.RumRetentionFiltersOrder("my_rum_retention_filters_order", new()
    ///     {
    ///         ApplicationId = datadogRumApplication.MyRumApplication.Id,
    ///         RetentionFilterIds = Std.Index.Concat.Invoke(new()
    ///         {
    ///             Input = new[]
    ///             {
    ///                 .Where(rf =&gt; Std.Index.Startswith.Invoke(new()
    ///                 {
    ///                     Input = rf.Id,
    ///                     Prefix = "default",
    ///                 }).Result).Select(rf =&gt; 
    ///                 {
    ///                     return rf.Id;
    ///                 }).ToList(),
    ///                 new[]
    ///                 {
    ///                     newRumRetentionFilter.Id,
    ///                 },
    ///                 Output.Tuple(myRetentionFilters, newRumRetentionFilter.Id).Apply(values =&gt;
    ///                 {
    ///                     var myRetentionFilters = values.Item1;
    ///                     var id = values.Item2;
    ///                     return .Where(rf =&gt; !Std.Index.Startswith.Invoke(new()
    ///                     {
    ///                         Input = rf.Id,
    ///                         Prefix = "default",
    ///                     }).Result &amp;&amp; rf.Id != id).Select(rf =&gt; 
    ///                     {
    ///                         return rf.Id;
    ///                     }).ToList();
    ///                 }),
    ///             },
    ///         }).Result,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The `pulumi import` command can be used, for example:
    /// 
    /// ```sh
    /// $ pulumi import datadog:index/rumRetentionFiltersOrder:RumRetentionFiltersOrder testing_rum_retention_filters_order "&lt;application_id&gt;"
    /// ```
    /// </summary>
    [DatadogResourceType("datadog:index/rumRetentionFiltersOrder:RumRetentionFiltersOrder")]
    public partial class RumRetentionFiltersOrder : global::Pulumi.CustomResource
    {
        /// <summary>
        /// RUM application ID.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
        /// </summary>
        [Output("retentionFilterIds")]
        public Output<ImmutableArray<string>> RetentionFilterIds { get; private set; } = null!;


        /// <summary>
        /// Create a RumRetentionFiltersOrder resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RumRetentionFiltersOrder(string name, RumRetentionFiltersOrderArgs args, CustomResourceOptions? options = null)
            : base("datadog:index/rumRetentionFiltersOrder:RumRetentionFiltersOrder", name, args ?? new RumRetentionFiltersOrderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RumRetentionFiltersOrder(string name, Input<string> id, RumRetentionFiltersOrderState? state = null, CustomResourceOptions? options = null)
            : base("datadog:index/rumRetentionFiltersOrder:RumRetentionFiltersOrder", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RumRetentionFiltersOrder resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RumRetentionFiltersOrder Get(string name, Input<string> id, RumRetentionFiltersOrderState? state = null, CustomResourceOptions? options = null)
        {
            return new RumRetentionFiltersOrder(name, id, state, options);
        }
    }

    public sealed class RumRetentionFiltersOrderArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// RUM application ID.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        [Input("retentionFilterIds", required: true)]
        private InputList<string>? _retentionFilterIds;

        /// <summary>
        /// RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
        /// </summary>
        public InputList<string> RetentionFilterIds
        {
            get => _retentionFilterIds ?? (_retentionFilterIds = new InputList<string>());
            set => _retentionFilterIds = value;
        }

        public RumRetentionFiltersOrderArgs()
        {
        }
        public static new RumRetentionFiltersOrderArgs Empty => new RumRetentionFiltersOrderArgs();
    }

    public sealed class RumRetentionFiltersOrderState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// RUM application ID.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        [Input("retentionFilterIds")]
        private InputList<string>? _retentionFilterIds;

        /// <summary>
        /// RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
        /// </summary>
        public InputList<string> RetentionFilterIds
        {
            get => _retentionFilterIds ?? (_retentionFilterIds = new InputList<string>());
            set => _retentionFilterIds = value;
        }

        public RumRetentionFiltersOrderState()
        {
        }
        public static new RumRetentionFiltersOrderState Empty => new RumRetentionFiltersOrderState();
    }
}
