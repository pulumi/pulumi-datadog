// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datadog
{
    public static class GetRole
    {
        /// <summary>
        /// Use this data source to retrieve information about an existing role for use in other resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Datadog = Pulumi.Datadog;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Datadog.GetRole.InvokeAsync(new Datadog.GetRoleArgs
        ///         {
        ///             Filter = "Datadog Standard Role",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// &lt;!-- schema generated by tfplugindocs --&gt;
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Schema
        /// 
        /// ### Required
        /// 
        /// - **filter** (String) A string on which to filter the roles.
        /// 
        /// ### Read-Only
        /// 
        /// - **id** (String) The ID of this resource.
        /// - **name** (String) Name of the role.
        /// - **user_count** (Number) Number of users assigned to this role.
        /// </summary>
        public static Task<GetRoleResult> InvokeAsync(GetRoleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRoleResult>("datadog:index/getRole:getRole", args ?? new GetRoleArgs(), options.WithVersion());
    }


    public sealed class GetRoleArgs : Pulumi.InvokeArgs
    {
        [Input("filter", required: true)]
        public string Filter { get; set; } = null!;

        public GetRoleArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRoleResult
    {
        public readonly string Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly int UserCount;

        [OutputConstructor]
        private GetRoleResult(
            string filter,

            string id,

            string name,

            int userCount)
        {
            Filter = filter;
            Id = id;
            Name = name;
            UserCount = userCount;
        }
    }
}
