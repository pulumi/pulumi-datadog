// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.Datadog
{
    public static class Config
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly Pulumi.Config __config = new Pulumi.Config("datadog");

        private static readonly __Value<string?> _apiKey = new __Value<string?>(() => __config.Get("apiKey"));
        /// <summary>
        /// (Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.
        /// </summary>
        public static string? ApiKey
        {
            get => _apiKey.Get();
            set => _apiKey.Set(value);
        }

        private static readonly __Value<string?> _apiUrl = new __Value<string?>(() => __config.Get("apiUrl"));
        /// <summary>
        /// The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the /api/
        /// path. For example, https://api.datadoghq.com/ is a correct value, while https://api.datadoghq.com/api/ is not. And if
        /// you're working with "EU" version of Datadog, use https://api.datadoghq.eu/.
        /// </summary>
        public static string? ApiUrl
        {
            get => _apiUrl.Get();
            set => _apiUrl.Set(value);
        }

        private static readonly __Value<string?> _appKey = new __Value<string?>(() => __config.Get("appKey"));
        /// <summary>
        /// (Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.
        /// </summary>
        public static string? AppKey
        {
            get => _appKey.Get();
            set => _appKey.Set(value);
        }

        private static readonly __Value<bool?> _httpClientRetryEnabled = new __Value<bool?>(() => __config.GetBoolean("httpClientRetryEnabled"));
        /// <summary>
        /// Enables request retries on HTTP status codes 429 and 5xx. Defaults to `true`.
        /// </summary>
        public static bool? HttpClientRetryEnabled
        {
            get => _httpClientRetryEnabled.Get();
            set => _httpClientRetryEnabled.Set(value);
        }

        private static readonly __Value<int?> _httpClientRetryTimeout = new __Value<int?>(() => __config.GetInt32("httpClientRetryTimeout"));
        /// <summary>
        /// The HTTP request retry timeout period. Defaults to 60 seconds.
        /// </summary>
        public static int? HttpClientRetryTimeout
        {
            get => _httpClientRetryTimeout.Get();
            set => _httpClientRetryTimeout.Set(value);
        }

        private static readonly __Value<bool?> _validate = new __Value<bool?>(() => __config.GetBoolean("validate"));
        /// <summary>
        /// Enables validation of the provided API and APP keys during provider initialization. Default is true. When false, api_key
        /// and app_key won't be checked.
        /// </summary>
        public static bool? Validate
        {
            get => _validate.Get();
            set => _validate.Set(value);
        }

    }
}
