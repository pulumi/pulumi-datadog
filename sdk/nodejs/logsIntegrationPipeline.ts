// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Datadog Logs Pipeline API resource to manage the integrations. Integration pipelines are the pipelines that are automatically installed for your organization when sending the logs with specific sources. You don't need to maintain or update these types of pipelines. Keeping them as resources, however, allows you to manage the order of your pipelines by referencing them in your `datadog.LogsPipelineOrder` resource. If you don't need the `pipelineOrder` feature, this resource declaration can be omitted.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const python = new datadog.LogsIntegrationPipeline("python", {isEnabled: true});
 * ```
 *
 * ## Import
 *
 * To find the pipeline ID, click the "view" button in the UI to open the pipeline details. The pipeline ID is the last part of the URL.
 *
 * ```sh
 *  $ pulumi import datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline name> <pipelineID>
 * ```
 */
export class LogsIntegrationPipeline extends pulumi.CustomResource {
    /**
     * Get an existing LogsIntegrationPipeline resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogsIntegrationPipelineState, opts?: pulumi.CustomResourceOptions): LogsIntegrationPipeline {
        return new LogsIntegrationPipeline(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline';

    /**
     * Returns true if the given object is an instance of LogsIntegrationPipeline.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogsIntegrationPipeline {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogsIntegrationPipeline.__pulumiType;
    }

    /**
     * Boolean value to enable your pipeline.
     */
    public readonly isEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a LogsIntegrationPipeline resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: LogsIntegrationPipelineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogsIntegrationPipelineArgs | LogsIntegrationPipelineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogsIntegrationPipelineState | undefined;
            resourceInputs["isEnabled"] = state ? state.isEnabled : undefined;
        } else {
            const args = argsOrState as LogsIntegrationPipelineArgs | undefined;
            resourceInputs["isEnabled"] = args ? args.isEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogsIntegrationPipeline.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogsIntegrationPipeline resources.
 */
export interface LogsIntegrationPipelineState {
    /**
     * Boolean value to enable your pipeline.
     */
    isEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a LogsIntegrationPipeline resource.
 */
export interface LogsIntegrationPipelineArgs {
    /**
     * Boolean value to enable your pipeline.
     */
    isEnabled?: pulumi.Input<boolean>;
}
