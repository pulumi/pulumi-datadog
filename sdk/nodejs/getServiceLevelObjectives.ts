// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about multiple SLOs for use in other resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const ftFooSlos = datadog.getServiceLevelObjectives({
 *     tagsQuery: "owner:ft-foo",
 * });
 * ```
 */
export function getServiceLevelObjectives(args?: GetServiceLevelObjectivesArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceLevelObjectivesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("datadog:index/getServiceLevelObjectives:getServiceLevelObjectives", {
        "ids": args.ids,
        "metricsQuery": args.metricsQuery,
        "nameQuery": args.nameQuery,
        "tagsQuery": args.tagsQuery,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceLevelObjectives.
 */
export interface GetServiceLevelObjectivesArgs {
    /**
     * An array of SLO IDs to limit the search.
     */
    ids?: string[];
    /**
     * Filter results based on SLO numerator and denominator.
     */
    metricsQuery?: string;
    /**
     * Filter results based on SLO names.
     */
    nameQuery?: string;
    /**
     * Filter results based on a single SLO tag.
     */
    tagsQuery?: string;
}

/**
 * A collection of values returned by getServiceLevelObjectives.
 */
export interface GetServiceLevelObjectivesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * An array of SLO IDs to limit the search.
     */
    readonly ids?: string[];
    /**
     * Filter results based on SLO numerator and denominator.
     */
    readonly metricsQuery?: string;
    /**
     * Filter results based on SLO names.
     */
    readonly nameQuery?: string;
    /**
     * List of SLOs
     */
    readonly slos: outputs.GetServiceLevelObjectivesSlo[];
    /**
     * Filter results based on a single SLO tag.
     */
    readonly tagsQuery?: string;
}
/**
 * Use this data source to retrieve information about multiple SLOs for use in other resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const ftFooSlos = datadog.getServiceLevelObjectives({
 *     tagsQuery: "owner:ft-foo",
 * });
 * ```
 */
export function getServiceLevelObjectivesOutput(args?: GetServiceLevelObjectivesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceLevelObjectivesResult> {
    return pulumi.output(args).apply((a: any) => getServiceLevelObjectives(a, opts))
}

/**
 * A collection of arguments for invoking getServiceLevelObjectives.
 */
export interface GetServiceLevelObjectivesOutputArgs {
    /**
     * An array of SLO IDs to limit the search.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Filter results based on SLO numerator and denominator.
     */
    metricsQuery?: pulumi.Input<string>;
    /**
     * Filter results based on SLO names.
     */
    nameQuery?: pulumi.Input<string>;
    /**
     * Filter results based on a single SLO tag.
     */
    tagsQuery?: pulumi.Input<string>;
}
