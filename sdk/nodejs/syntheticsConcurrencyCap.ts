// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Datadog Synthetics On Demand Concurrency Cap API resource. This can be used to manage the Concurrency Cap for Synthetic tests.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * // Example Usage (Synthetics Concurrency Cap Configuration)
 * const _this = new datadog.SyntheticsConcurrencyCap("this", {onDemandConcurrencyCap: 1});
 * ```
 *
 * ## Import
 *
 * The Synthetics concurrency cap can be imported. <name> can be whatever you specify in your code. Datadog does not store the name on the server.
 *
 * ```sh
 *  $ pulumi import datadog:index/syntheticsConcurrencyCap:SyntheticsConcurrencyCap this <name>
 * ```
 */
export class SyntheticsConcurrencyCap extends pulumi.CustomResource {
    /**
     * Get an existing SyntheticsConcurrencyCap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SyntheticsConcurrencyCapState, opts?: pulumi.CustomResourceOptions): SyntheticsConcurrencyCap {
        return new SyntheticsConcurrencyCap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/syntheticsConcurrencyCap:SyntheticsConcurrencyCap';

    /**
     * Returns true if the given object is an instance of SyntheticsConcurrencyCap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SyntheticsConcurrencyCap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SyntheticsConcurrencyCap.__pulumiType;
    }

    /**
     * Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.
     */
    public readonly onDemandConcurrencyCap!: pulumi.Output<number>;

    /**
     * Create a SyntheticsConcurrencyCap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SyntheticsConcurrencyCapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SyntheticsConcurrencyCapArgs | SyntheticsConcurrencyCapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SyntheticsConcurrencyCapState | undefined;
            resourceInputs["onDemandConcurrencyCap"] = state ? state.onDemandConcurrencyCap : undefined;
        } else {
            const args = argsOrState as SyntheticsConcurrencyCapArgs | undefined;
            if ((!args || args.onDemandConcurrencyCap === undefined) && !opts.urn) {
                throw new Error("Missing required property 'onDemandConcurrencyCap'");
            }
            resourceInputs["onDemandConcurrencyCap"] = args ? args.onDemandConcurrencyCap : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SyntheticsConcurrencyCap.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SyntheticsConcurrencyCap resources.
 */
export interface SyntheticsConcurrencyCapState {
    /**
     * Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.
     */
    onDemandConcurrencyCap?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SyntheticsConcurrencyCap resource.
 */
export interface SyntheticsConcurrencyCapArgs {
    /**
     * Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.
     */
    onDemandConcurrencyCap: pulumi.Input<number>;
}
