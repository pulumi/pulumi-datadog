// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Datadog SensitiveDataScannerRule resource. This can be used to create and manage Datadog sensitive_data_scanner_rule. Setting the `createBeforeDestroy` lifecycle Meta-argument to `true` is highly recommended if modifying the `includedKeywordConfiguration` field to avoid unexpectedly disabling Sensitive Data Scanner groups.
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import datadog:index/sensitiveDataScannerRule:SensitiveDataScannerRule new_list ""
 * ```
 */
export class SensitiveDataScannerRule extends pulumi.CustomResource {
    /**
     * Get an existing SensitiveDataScannerRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SensitiveDataScannerRuleState, opts?: pulumi.CustomResourceOptions): SensitiveDataScannerRule {
        return new SensitiveDataScannerRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/sensitiveDataScannerRule:SensitiveDataScannerRule';

    /**
     * Returns true if the given object is an instance of SensitiveDataScannerRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SensitiveDataScannerRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SensitiveDataScannerRule.__pulumiType;
    }

    /**
     * Description of the rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Attributes excluded from the scan. If namespaces is provided, it has to be a sub-path of the namespaces array.
     */
    public readonly excludedNamespaces!: pulumi.Output<string[] | undefined>;
    /**
     * Id of the scanning group the rule belongs to.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * Object defining a set of keywords and a number of characters that help reduce noise. You can provide a list of keywords you would like to check within a defined proximity of the matching pattern. If any of the keywords are found within the proximity check then the match is kept. If none are found, the match is discarded. Setting the `createBeforeDestroy` lifecycle Meta-argument to `true` is highly recommended if modifying this field to avoid unexpectedly disabling Sensitive Data Scanner groups.
     */
    public readonly includedKeywordConfiguration!: pulumi.Output<outputs.SensitiveDataScannerRuleIncludedKeywordConfiguration | undefined>;
    /**
     * Whether or not the rule is enabled.
     */
    public readonly isEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the rule.
     */
    public readonly name!: pulumi.Output<string | undefined>;
    /**
     * Attributes included in the scan. If namespaces is empty or missing, all attributes except excludedNamespaces are scanned. If both are missing the whole event is scanned.
     */
    public readonly namespaces!: pulumi.Output<string[] | undefined>;
    /**
     * Not included if there is a relationship to a standard pattern.
     */
    public readonly pattern!: pulumi.Output<string | undefined>;
    /**
     * Priority level of the rule (optional). Used to order sensitive data discovered in the sds summary page. It must be between 1 and 5 (1 being the most important).
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * Id of the standard pattern the rule refers to. If provided, then pattern must not be provided.
     */
    public readonly standardPatternId!: pulumi.Output<string | undefined>;
    /**
     * List of tags.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * Object describing how the scanned event will be replaced. Defaults to `type: none`
     */
    public readonly textReplacement!: pulumi.Output<outputs.SensitiveDataScannerRuleTextReplacement | undefined>;

    /**
     * Create a SensitiveDataScannerRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SensitiveDataScannerRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SensitiveDataScannerRuleArgs | SensitiveDataScannerRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SensitiveDataScannerRuleState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["excludedNamespaces"] = state ? state.excludedNamespaces : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["includedKeywordConfiguration"] = state ? state.includedKeywordConfiguration : undefined;
            resourceInputs["isEnabled"] = state ? state.isEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespaces"] = state ? state.namespaces : undefined;
            resourceInputs["pattern"] = state ? state.pattern : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["standardPatternId"] = state ? state.standardPatternId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["textReplacement"] = state ? state.textReplacement : undefined;
        } else {
            const args = argsOrState as SensitiveDataScannerRuleArgs | undefined;
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["excludedNamespaces"] = args ? args.excludedNamespaces : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["includedKeywordConfiguration"] = args ? args.includedKeywordConfiguration : undefined;
            resourceInputs["isEnabled"] = args ? args.isEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespaces"] = args ? args.namespaces : undefined;
            resourceInputs["pattern"] = args ? args.pattern : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["standardPatternId"] = args ? args.standardPatternId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["textReplacement"] = args ? args.textReplacement : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SensitiveDataScannerRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SensitiveDataScannerRule resources.
 */
export interface SensitiveDataScannerRuleState {
    /**
     * Description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Attributes excluded from the scan. If namespaces is provided, it has to be a sub-path of the namespaces array.
     */
    excludedNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Id of the scanning group the rule belongs to.
     */
    groupId?: pulumi.Input<string>;
    /**
     * Object defining a set of keywords and a number of characters that help reduce noise. You can provide a list of keywords you would like to check within a defined proximity of the matching pattern. If any of the keywords are found within the proximity check then the match is kept. If none are found, the match is discarded. Setting the `createBeforeDestroy` lifecycle Meta-argument to `true` is highly recommended if modifying this field to avoid unexpectedly disabling Sensitive Data Scanner groups.
     */
    includedKeywordConfiguration?: pulumi.Input<inputs.SensitiveDataScannerRuleIncludedKeywordConfiguration>;
    /**
     * Whether or not the rule is enabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * Name of the rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Attributes included in the scan. If namespaces is empty or missing, all attributes except excludedNamespaces are scanned. If both are missing the whole event is scanned.
     */
    namespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Not included if there is a relationship to a standard pattern.
     */
    pattern?: pulumi.Input<string>;
    /**
     * Priority level of the rule (optional). Used to order sensitive data discovered in the sds summary page. It must be between 1 and 5 (1 being the most important).
     */
    priority?: pulumi.Input<number>;
    /**
     * Id of the standard pattern the rule refers to. If provided, then pattern must not be provided.
     */
    standardPatternId?: pulumi.Input<string>;
    /**
     * List of tags.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Object describing how the scanned event will be replaced. Defaults to `type: none`
     */
    textReplacement?: pulumi.Input<inputs.SensitiveDataScannerRuleTextReplacement>;
}

/**
 * The set of arguments for constructing a SensitiveDataScannerRule resource.
 */
export interface SensitiveDataScannerRuleArgs {
    /**
     * Description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Attributes excluded from the scan. If namespaces is provided, it has to be a sub-path of the namespaces array.
     */
    excludedNamespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Id of the scanning group the rule belongs to.
     */
    groupId: pulumi.Input<string>;
    /**
     * Object defining a set of keywords and a number of characters that help reduce noise. You can provide a list of keywords you would like to check within a defined proximity of the matching pattern. If any of the keywords are found within the proximity check then the match is kept. If none are found, the match is discarded. Setting the `createBeforeDestroy` lifecycle Meta-argument to `true` is highly recommended if modifying this field to avoid unexpectedly disabling Sensitive Data Scanner groups.
     */
    includedKeywordConfiguration?: pulumi.Input<inputs.SensitiveDataScannerRuleIncludedKeywordConfiguration>;
    /**
     * Whether or not the rule is enabled.
     */
    isEnabled?: pulumi.Input<boolean>;
    /**
     * Name of the rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Attributes included in the scan. If namespaces is empty or missing, all attributes except excludedNamespaces are scanned. If both are missing the whole event is scanned.
     */
    namespaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Not included if there is a relationship to a standard pattern.
     */
    pattern?: pulumi.Input<string>;
    /**
     * Priority level of the rule (optional). Used to order sensitive data discovered in the sds summary page. It must be between 1 and 5 (1 being the most important).
     */
    priority?: pulumi.Input<number>;
    /**
     * Id of the standard pattern the rule refers to. If provided, then pattern must not be provided.
     */
    standardPatternId?: pulumi.Input<string>;
    /**
     * List of tags.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Object describing how the scanned event will be replaced. Defaults to `type: none`
     */
    textReplacement?: pulumi.Input<inputs.SensitiveDataScannerRuleTextReplacement>;
}
