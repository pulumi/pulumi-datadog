// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetIntegrationLogsServicesResult } from "./getIntegrationLogsServices";
export const getIntegrationLogsServices: typeof import("./getIntegrationLogsServices").getIntegrationLogsServices = null as any;
utilities.lazyLoad(exports, ["getIntegrationLogsServices"], () => require("./getIntegrationLogsServices"));

export { GetIntegrationNamespaceRulesResult } from "./getIntegrationNamespaceRules";
export const getIntegrationNamespaceRules: typeof import("./getIntegrationNamespaceRules").getIntegrationNamespaceRules = null as any;
utilities.lazyLoad(exports, ["getIntegrationNamespaceRules"], () => require("./getIntegrationNamespaceRules"));

export { IntegrationArgs, IntegrationState } from "./integration";
export type Integration = import("./integration").Integration;
export const Integration: typeof import("./integration").Integration = null as any;
utilities.lazyLoad(exports, ["Integration"], () => require("./integration"));

export { IntegrationLambdaArnArgs, IntegrationLambdaArnState } from "./integrationLambdaArn";
export type IntegrationLambdaArn = import("./integrationLambdaArn").IntegrationLambdaArn;
export const IntegrationLambdaArn: typeof import("./integrationLambdaArn").IntegrationLambdaArn = null as any;
utilities.lazyLoad(exports, ["IntegrationLambdaArn"], () => require("./integrationLambdaArn"));

export { IntegrationLogCollectionArgs, IntegrationLogCollectionState } from "./integrationLogCollection";
export type IntegrationLogCollection = import("./integrationLogCollection").IntegrationLogCollection;
export const IntegrationLogCollection: typeof import("./integrationLogCollection").IntegrationLogCollection = null as any;
utilities.lazyLoad(exports, ["IntegrationLogCollection"], () => require("./integrationLogCollection"));

export { IntegrationTagFilterArgs, IntegrationTagFilterState } from "./integrationTagFilter";
export type IntegrationTagFilter = import("./integrationTagFilter").IntegrationTagFilter;
export const IntegrationTagFilter: typeof import("./integrationTagFilter").IntegrationTagFilter = null as any;
utilities.lazyLoad(exports, ["IntegrationTagFilter"], () => require("./integrationTagFilter"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "datadog:aws/integration:Integration":
                return new Integration(name, <any>undefined, { urn })
            case "datadog:aws/integrationLambdaArn:IntegrationLambdaArn":
                return new IntegrationLambdaArn(name, <any>undefined, { urn })
            case "datadog:aws/integrationLogCollection:IntegrationLogCollection":
                return new IntegrationLogCollection(name, <any>undefined, { urn })
            case "datadog:aws/integrationTagFilter:IntegrationTagFilter":
                return new IntegrationTagFilter(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("datadog", "aws/integration", _module)
pulumi.runtime.registerResourceModule("datadog", "aws/integrationLambdaArn", _module)
pulumi.runtime.registerResourceModule("datadog", "aws/integrationLogCollection", _module)
pulumi.runtime.registerResourceModule("datadog", "aws/integrationTagFilter", _module)
