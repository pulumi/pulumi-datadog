// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * // Create new integration_aws_external_id resource
 * const foo = new datadog.aws.IntegrationExternalId("foo", {});
 * ```
 *
 * ## Import
 *
 * Amazon Web Services external IDs can be imported using the ID value.
 *
 * ```sh
 * $ pulumi import datadog:aws/integrationExternalId:IntegrationExternalId foo ${id}
 * ```
 */
export class IntegrationExternalId extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationExternalId resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationExternalIdState, opts?: pulumi.CustomResourceOptions): IntegrationExternalId {
        return new IntegrationExternalId(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:aws/integrationExternalId:IntegrationExternalId';

    /**
     * Returns true if the given object is an instance of IntegrationExternalId.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationExternalId {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationExternalId.__pulumiType;
    }


    /**
     * Create a IntegrationExternalId resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IntegrationExternalIdArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationExternalIdArgs | IntegrationExternalIdState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationExternalIdState | undefined;
        } else {
            const args = argsOrState as IntegrationExternalIdArgs | undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntegrationExternalId.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IntegrationExternalId resources.
 */
export interface IntegrationExternalIdState {
}

/**
 * The set of arguments for constructing a IntegrationExternalId resource.
 */
export interface IntegrationExternalIdArgs {
}
