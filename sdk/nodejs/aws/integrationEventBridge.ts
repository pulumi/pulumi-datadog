// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Datadog - Amazon Web Services integration EventBridge resource. This can be used to create and manage Event Sources for each Datadog integrated AWS account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const foo = new datadog.aws.IntegrationEventBridge("foo", {
 *     accountId: "123456789012",
 *     createEventBus: true,
 *     eventGeneratorName: "app-alerts",
 *     region: "us-east-1",
 * });
 * ```
 *
 * ## Import
 *
 * Amazon Web Service EventBridge integrations are imported using the Event Source name as listed for an integrated AWS account in Datadog
 *
 * ```sh
 * $ pulumi import datadog:aws/integrationEventBridge:IntegrationEventBridge foo event-source-name-abc12345
 * ```
 */
export class IntegrationEventBridge extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationEventBridge resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationEventBridgeState, opts?: pulumi.CustomResourceOptions): IntegrationEventBridge {
        return new IntegrationEventBridge(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:aws/integrationEventBridge:IntegrationEventBridge';

    /**
     * Returns true if the given object is an instance of IntegrationEventBridge.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationEventBridge {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationEventBridge.__pulumiType;
    }

    /**
     * Your AWS Account ID without dashes.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * True if Datadog should create the event bus in addition to the event source. Requires the `events:CreateEventBus` permission. Defaults to `true`.
     */
    public readonly createEventBus!: pulumi.Output<boolean>;
    /**
     * The given part of the event source name, which is then combined with an assigned suffix to form the full name.
     */
    public readonly eventGeneratorName!: pulumi.Output<string>;
    /**
     * The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a IntegrationEventBridge resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationEventBridgeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationEventBridgeArgs | IntegrationEventBridgeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationEventBridgeState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["createEventBus"] = state ? state.createEventBus : undefined;
            resourceInputs["eventGeneratorName"] = state ? state.eventGeneratorName : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as IntegrationEventBridgeArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.eventGeneratorName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventGeneratorName'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["createEventBus"] = args ? args.createEventBus : undefined;
            resourceInputs["eventGeneratorName"] = args ? args.eventGeneratorName : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntegrationEventBridge.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IntegrationEventBridge resources.
 */
export interface IntegrationEventBridgeState {
    /**
     * Your AWS Account ID without dashes.
     */
    accountId?: pulumi.Input<string>;
    /**
     * True if Datadog should create the event bus in addition to the event source. Requires the `events:CreateEventBus` permission. Defaults to `true`.
     */
    createEventBus?: pulumi.Input<boolean>;
    /**
     * The given part of the event source name, which is then combined with an assigned suffix to form the full name.
     */
    eventGeneratorName?: pulumi.Input<string>;
    /**
     * The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IntegrationEventBridge resource.
 */
export interface IntegrationEventBridgeArgs {
    /**
     * Your AWS Account ID without dashes.
     */
    accountId: pulumi.Input<string>;
    /**
     * True if Datadog should create the event bus in addition to the event source. Requires the `events:CreateEventBus` permission. Defaults to `true`.
     */
    createEventBus?: pulumi.Input<boolean>;
    /**
     * The given part of the event source name, which is then combined with an assigned suffix to form the full name.
     */
    eventGeneratorName: pulumi.Input<string>;
    /**
     * The event source's [AWS region](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints).
     */
    region: pulumi.Input<string>;
}
