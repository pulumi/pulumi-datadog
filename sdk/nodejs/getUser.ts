// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about an existing user to use it in an other resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const test = datadog.getUser({
 *     filter: "user.name@company.com",
 * });
 * ```
 */
export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("datadog:index/getUser:getUser", {
        "exactMatch": args.exactMatch,
        "filter": args.filter,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    /**
     * When true, `filter` string is exact matched against the user's `email`, followed by `name` attribute. Defaults to `false`.
     */
    exactMatch?: boolean;
    /**
     * Filter all users by the given string.
     */
    filter: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    /**
     * Email of the user.
     */
    readonly email: string;
    /**
     * When true, `filter` string is exact matched against the user's `email`, followed by `name` attribute. Defaults to `false`.
     */
    readonly exactMatch?: boolean;
    /**
     * Filter all users by the given string.
     */
    readonly filter: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of the user.
     */
    readonly name: string;
}
/**
 * Use this data source to retrieve information about an existing user to use it in an other resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const test = datadog.getUser({
 *     filter: "user.name@company.com",
 * });
 * ```
 */
export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("datadog:index/getUser:getUser", {
        "exactMatch": args.exactMatch,
        "filter": args.filter,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    /**
     * When true, `filter` string is exact matched against the user's `email`, followed by `name` attribute. Defaults to `false`.
     */
    exactMatch?: pulumi.Input<boolean>;
    /**
     * Filter all users by the given string.
     */
    filter: pulumi.Input<string>;
}
