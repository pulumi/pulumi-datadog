// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Datadog Security Monitoring Rule JSON resource. This can be used to create and manage Datadog security monitoring rules using raw JSON.
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import datadog:index/securityMonitoringRuleJson:SecurityMonitoringRuleJson security_rule_json aaa-yyy-vvv
 * ```
 */
export class SecurityMonitoringRuleJson extends pulumi.CustomResource {
    /**
     * Get an existing SecurityMonitoringRuleJson resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityMonitoringRuleJsonState, opts?: pulumi.CustomResourceOptions): SecurityMonitoringRuleJson {
        return new SecurityMonitoringRuleJson(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/securityMonitoringRuleJson:SecurityMonitoringRuleJson';

    /**
     * Returns true if the given object is an instance of SecurityMonitoringRuleJson.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityMonitoringRuleJson {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityMonitoringRuleJson.__pulumiType;
    }

    /**
     * The JSON definition of the Security Monitoring Rule.
     */
    declare public readonly json: pulumi.Output<string>;

    /**
     * Create a SecurityMonitoringRuleJson resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityMonitoringRuleJsonArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityMonitoringRuleJsonArgs | SecurityMonitoringRuleJsonState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityMonitoringRuleJsonState | undefined;
            resourceInputs["json"] = state?.json;
        } else {
            const args = argsOrState as SecurityMonitoringRuleJsonArgs | undefined;
            if (args?.json === undefined && !opts.urn) {
                throw new Error("Missing required property 'json'");
            }
            resourceInputs["json"] = args?.json;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityMonitoringRuleJson.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecurityMonitoringRuleJson resources.
 */
export interface SecurityMonitoringRuleJsonState {
    /**
     * The JSON definition of the Security Monitoring Rule.
     */
    json?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurityMonitoringRuleJson resource.
 */
export interface SecurityMonitoringRuleJsonArgs {
    /**
     * The JSON definition of the Security Monitoring Rule.
     */
    json: pulumi.Input<string>;
}
