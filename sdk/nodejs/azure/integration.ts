// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a Datadog - Microsoft Azure integration resource. This can be used to create and manage the integrations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * // Create a new Datadog - Microsoft Azure integration
 * const sandbox = new datadog.azure.Integration("sandbox", {
 *     appServicePlanFilters: "examplefilter:true,example:another",
 *     automute: true,
 *     clientId: "<azure_client_id>",
 *     clientSecret: "<azure_client_secret_key>",
 *     containerAppFilters: "examplefilter:true,example:one_more",
 *     cspmEnabled: true,
 *     customMetricsEnabled: false,
 *     hostFilters: "examplefilter:true,example:true",
 *     tenantName: "<azure_tenant_name>",
 * });
 * ```
 *
 * ## Import
 *
 * Microsoft Azure integrations can be imported using their `tenant name` and `client` id separated with a colon (`:`).
 *
 * ```sh
 *  $ pulumi import datadog:azure/integration:Integration sandbox ${tenant_name}:${client_id}
 * ```
 */
export class Integration extends pulumi.CustomResource {
    /**
     * Get an existing Integration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationState, opts?: pulumi.CustomResourceOptions): Integration {
        return new Integration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:azure/integration:Integration';

    /**
     * Returns true if the given object is an instance of Integration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Integration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Integration.__pulumiType;
    }

    /**
     * This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s). Defaults to `""`.
     */
    public readonly appServicePlanFilters!: pulumi.Output<string>;
    /**
     * Silence monitors for expected Azure VM shutdowns. Defaults to `false`.
     */
    public readonly automute!: pulumi.Output<boolean>;
    /**
     * Your Azure web application ID.
     */
    public readonly clientId!: pulumi.Output<string>;
    /**
     * (Required for Initial Creation) Your Azure web application secret key.
     */
    public readonly clientSecret!: pulumi.Output<string>;
    /**
     * This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure Container Apps. Only Container Apps that match one of the defined tags are imported into Datadog. Defaults to `""`.
     */
    public readonly containerAppFilters!: pulumi.Output<string>;
    /**
     * When enabled, Datadog’s Cloud Security Management product scans resource configurations monitored by this app registration.
     * Note: This requires `resourceCollectionEnabled` to be set to true. Defaults to `false`.
     */
    public readonly cspmEnabled!: pulumi.Output<boolean>;
    /**
     * Enable custom metrics for your organization. Defaults to `false`.
     */
    public readonly customMetricsEnabled!: pulumi.Output<boolean>;
    /**
     * String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red` Defaults to `""`.
     */
    public readonly hostFilters!: pulumi.Output<string>;
    /**
     * When enabled, Datadog collects metadata and configuration info from cloud resources (such as compute instances, databases, and load balancers) monitored by this app registration.
     */
    public readonly resourceCollectionEnabled!: pulumi.Output<boolean>;
    /**
     * Your Azure Active Directory ID.
     */
    public readonly tenantName!: pulumi.Output<string>;

    /**
     * Create a Integration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationArgs | IntegrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationState | undefined;
            resourceInputs["appServicePlanFilters"] = state ? state.appServicePlanFilters : undefined;
            resourceInputs["automute"] = state ? state.automute : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["containerAppFilters"] = state ? state.containerAppFilters : undefined;
            resourceInputs["cspmEnabled"] = state ? state.cspmEnabled : undefined;
            resourceInputs["customMetricsEnabled"] = state ? state.customMetricsEnabled : undefined;
            resourceInputs["hostFilters"] = state ? state.hostFilters : undefined;
            resourceInputs["resourceCollectionEnabled"] = state ? state.resourceCollectionEnabled : undefined;
            resourceInputs["tenantName"] = state ? state.tenantName : undefined;
        } else {
            const args = argsOrState as IntegrationArgs | undefined;
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.clientSecret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientSecret'");
            }
            if ((!args || args.tenantName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantName'");
            }
            resourceInputs["appServicePlanFilters"] = args ? args.appServicePlanFilters : undefined;
            resourceInputs["automute"] = args ? args.automute : undefined;
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["containerAppFilters"] = args ? args.containerAppFilters : undefined;
            resourceInputs["cspmEnabled"] = args ? args.cspmEnabled : undefined;
            resourceInputs["customMetricsEnabled"] = args ? args.customMetricsEnabled : undefined;
            resourceInputs["hostFilters"] = args ? args.hostFilters : undefined;
            resourceInputs["resourceCollectionEnabled"] = args ? args.resourceCollectionEnabled : undefined;
            resourceInputs["tenantName"] = args ? args.tenantName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Integration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Integration resources.
 */
export interface IntegrationState {
    /**
     * This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s). Defaults to `""`.
     */
    appServicePlanFilters?: pulumi.Input<string>;
    /**
     * Silence monitors for expected Azure VM shutdowns. Defaults to `false`.
     */
    automute?: pulumi.Input<boolean>;
    /**
     * Your Azure web application ID.
     */
    clientId?: pulumi.Input<string>;
    /**
     * (Required for Initial Creation) Your Azure web application secret key.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure Container Apps. Only Container Apps that match one of the defined tags are imported into Datadog. Defaults to `""`.
     */
    containerAppFilters?: pulumi.Input<string>;
    /**
     * When enabled, Datadog’s Cloud Security Management product scans resource configurations monitored by this app registration.
     * Note: This requires `resourceCollectionEnabled` to be set to true. Defaults to `false`.
     */
    cspmEnabled?: pulumi.Input<boolean>;
    /**
     * Enable custom metrics for your organization. Defaults to `false`.
     */
    customMetricsEnabled?: pulumi.Input<boolean>;
    /**
     * String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red` Defaults to `""`.
     */
    hostFilters?: pulumi.Input<string>;
    /**
     * When enabled, Datadog collects metadata and configuration info from cloud resources (such as compute instances, databases, and load balancers) monitored by this app registration.
     */
    resourceCollectionEnabled?: pulumi.Input<boolean>;
    /**
     * Your Azure Active Directory ID.
     */
    tenantName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Integration resource.
 */
export interface IntegrationArgs {
    /**
     * This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s). Defaults to `""`.
     */
    appServicePlanFilters?: pulumi.Input<string>;
    /**
     * Silence monitors for expected Azure VM shutdowns. Defaults to `false`.
     */
    automute?: pulumi.Input<boolean>;
    /**
     * Your Azure web application ID.
     */
    clientId: pulumi.Input<string>;
    /**
     * (Required for Initial Creation) Your Azure web application secret key.
     */
    clientSecret: pulumi.Input<string>;
    /**
     * This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure Container Apps. Only Container Apps that match one of the defined tags are imported into Datadog. Defaults to `""`.
     */
    containerAppFilters?: pulumi.Input<string>;
    /**
     * When enabled, Datadog’s Cloud Security Management product scans resource configurations monitored by this app registration.
     * Note: This requires `resourceCollectionEnabled` to be set to true. Defaults to `false`.
     */
    cspmEnabled?: pulumi.Input<boolean>;
    /**
     * Enable custom metrics for your organization. Defaults to `false`.
     */
    customMetricsEnabled?: pulumi.Input<boolean>;
    /**
     * String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red` Defaults to `""`.
     */
    hostFilters?: pulumi.Input<string>;
    /**
     * When enabled, Datadog collects metadata and configuration info from cloud resources (such as compute instances, databases, and load balancers) monitored by this app registration.
     */
    resourceCollectionEnabled?: pulumi.Input<boolean>;
    /**
     * Your Azure Active Directory ID.
     */
    tenantName: pulumi.Input<string>;
}
