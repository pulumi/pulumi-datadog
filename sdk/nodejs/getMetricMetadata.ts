// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve metadata associated with a metric to use in other resources.
 */
export function getMetricMetadata(args: GetMetricMetadataArgs, opts?: pulumi.InvokeOptions): Promise<GetMetricMetadataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("datadog:index/getMetricMetadata:getMetricMetadata", {
        "metricName": args.metricName,
    }, opts);
}

/**
 * A collection of arguments for invoking getMetricMetadata.
 */
export interface GetMetricMetadataArgs {
    /**
     * The metric for which to fetch metadata.
     */
    metricName: string;
}

/**
 * A collection of values returned by getMetricMetadata.
 */
export interface GetMetricMetadataResult {
    /**
     * The metric description.
     */
    readonly description: string;
    /**
     * The ID of this resource.
     */
    readonly id: string;
    /**
     * The metric integration.
     */
    readonly integration: string;
    /**
     * The metric for which to fetch metadata.
     */
    readonly metricName: string;
    /**
     * The per unit of the metric.
     */
    readonly perUnit: string;
    /**
     * The metric short name.
     */
    readonly shortName: string;
    /**
     * The metric statsd interval.
     */
    readonly statsdInterval: number;
    /**
     * The metric type.
     */
    readonly type: string;
    /**
     * The metric unit.
     */
    readonly unit: string;
}
/**
 * Use this data source to retrieve metadata associated with a metric to use in other resources.
 */
export function getMetricMetadataOutput(args: GetMetricMetadataOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMetricMetadataResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("datadog:index/getMetricMetadata:getMetricMetadata", {
        "metricName": args.metricName,
    }, opts);
}

/**
 * A collection of arguments for invoking getMetricMetadata.
 */
export interface GetMetricMetadataOutputArgs {
    /**
     * The metric for which to fetch metadata.
     */
    metricName: pulumi.Input<string>;
}
