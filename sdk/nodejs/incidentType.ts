// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Datadog incident type resource. This can be used to create and manage Datadog incident types.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * // Basic incident type
 * const example = new datadog.IncidentType("example", {
 *     name: "Security Incident",
 *     description: "Security-related incidents requiring immediate attention",
 *     isDefault: false,
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import datadog:index/incidentType:IncidentType example "12345678-1234-1234-1234-1234567890ab"
 * ```
 */
export class IncidentType extends pulumi.CustomResource {
    /**
     * Get an existing IncidentType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IncidentTypeState, opts?: pulumi.CustomResourceOptions): IncidentType {
        return new IncidentType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/incidentType:IncidentType';

    /**
     * Returns true if the given object is an instance of IncidentType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IncidentType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IncidentType.__pulumiType;
    }

    /**
     * Description of the incident type. The description can have a maximum of 512 characters.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Whether this incident type is the default type.
     */
    declare public readonly isDefault: pulumi.Output<boolean>;
    /**
     * Name of the incident type. Must be between 1 and 50 characters.
     */
    declare public readonly name: pulumi.Output<string>;

    /**
     * Create a IncidentType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IncidentTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IncidentTypeArgs | IncidentTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IncidentTypeState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["isDefault"] = state?.isDefault;
            resourceInputs["name"] = state?.name;
        } else {
            const args = argsOrState as IncidentTypeArgs | undefined;
            if (args?.name === undefined && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["isDefault"] = args?.isDefault;
            resourceInputs["name"] = args?.name;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IncidentType.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IncidentType resources.
 */
export interface IncidentTypeState {
    /**
     * Description of the incident type. The description can have a maximum of 512 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether this incident type is the default type.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * Name of the incident type. Must be between 1 and 50 characters.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IncidentType resource.
 */
export interface IncidentTypeArgs {
    /**
     * Description of the incident type. The description can have a maximum of 512 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether this incident type is the default type.
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * Name of the incident type. Must be between 1 and 50 characters.
     */
    name: pulumi.Input<string>;
}
