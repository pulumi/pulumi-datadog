// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Datadog Azure Usage Cost configuration resource. This can be used to create and manage Azure Cost Export configurations for Cloud Cost Management. Azure configurations require both actual and amortized cost export settings.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import datadog:index/azureUcConfig:AzureUcConfig example <cloud_account_id>
 * ```
 */
export class AzureUcConfig extends pulumi.CustomResource {
    /**
     * Get an existing AzureUcConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureUcConfigState, opts?: pulumi.CustomResourceOptions): AzureUcConfig {
        return new AzureUcConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/azureUcConfig:AzureUcConfig';

    /**
     * Returns true if the given object is an instance of AzureUcConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureUcConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureUcConfig.__pulumiType;
    }

    /**
     * The tenant ID of the Azure account.
     */
    declare public readonly accountId: pulumi.Output<string>;
    /**
     * Configuration for the actual cost export.
     */
    declare public readonly actualBillConfig: pulumi.Output<outputs.AzureUcConfigActualBillConfig | undefined>;
    /**
     * Configuration for the amortized cost export.
     */
    declare public readonly amortizedBillConfig: pulumi.Output<outputs.AzureUcConfigAmortizedBillConfig | undefined>;
    /**
     * The client ID of the Azure account.
     */
    declare public readonly clientId: pulumi.Output<string>;
    /**
     * The timestamp when the Azure Usage Cost configuration was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * List of error messages if the Azure Usage Cost configuration encountered any issues during setup or data processing.
     */
    declare public /*out*/ readonly errorMessages: pulumi.Output<string[]>;
    /**
     * The scope of your observed subscription.
     */
    declare public readonly scope: pulumi.Output<string>;
    /**
     * The current status of the Azure Usage Cost configuration.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The timestamp when the configuration status was last updated.
     */
    declare public /*out*/ readonly statusUpdatedAt: pulumi.Output<string>;
    /**
     * The timestamp when the Azure Usage Cost configuration was last modified.
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;

    /**
     * Create a AzureUcConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureUcConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureUcConfigArgs | AzureUcConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureUcConfigState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["actualBillConfig"] = state?.actualBillConfig;
            resourceInputs["amortizedBillConfig"] = state?.amortizedBillConfig;
            resourceInputs["clientId"] = state?.clientId;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["errorMessages"] = state?.errorMessages;
            resourceInputs["scope"] = state?.scope;
            resourceInputs["status"] = state?.status;
            resourceInputs["statusUpdatedAt"] = state?.statusUpdatedAt;
            resourceInputs["updatedAt"] = state?.updatedAt;
        } else {
            const args = argsOrState as AzureUcConfigArgs | undefined;
            if (args?.accountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if (args?.clientId === undefined && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if (args?.scope === undefined && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["actualBillConfig"] = args?.actualBillConfig;
            resourceInputs["amortizedBillConfig"] = args?.amortizedBillConfig;
            resourceInputs["clientId"] = args?.clientId;
            resourceInputs["scope"] = args?.scope;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["errorMessages"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusUpdatedAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureUcConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureUcConfig resources.
 */
export interface AzureUcConfigState {
    /**
     * The tenant ID of the Azure account.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Configuration for the actual cost export.
     */
    actualBillConfig?: pulumi.Input<inputs.AzureUcConfigActualBillConfig>;
    /**
     * Configuration for the amortized cost export.
     */
    amortizedBillConfig?: pulumi.Input<inputs.AzureUcConfigAmortizedBillConfig>;
    /**
     * The client ID of the Azure account.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The timestamp when the Azure Usage Cost configuration was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * List of error messages if the Azure Usage Cost configuration encountered any issues during setup or data processing.
     */
    errorMessages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The scope of your observed subscription.
     */
    scope?: pulumi.Input<string>;
    /**
     * The current status of the Azure Usage Cost configuration.
     */
    status?: pulumi.Input<string>;
    /**
     * The timestamp when the configuration status was last updated.
     */
    statusUpdatedAt?: pulumi.Input<string>;
    /**
     * The timestamp when the Azure Usage Cost configuration was last modified.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AzureUcConfig resource.
 */
export interface AzureUcConfigArgs {
    /**
     * The tenant ID of the Azure account.
     */
    accountId: pulumi.Input<string>;
    /**
     * Configuration for the actual cost export.
     */
    actualBillConfig?: pulumi.Input<inputs.AzureUcConfigActualBillConfig>;
    /**
     * Configuration for the amortized cost export.
     */
    amortizedBillConfig?: pulumi.Input<inputs.AzureUcConfigAmortizedBillConfig>;
    /**
     * The client ID of the Azure account.
     */
    clientId: pulumi.Input<string>;
    /**
     * The scope of your observed subscription.
     */
    scope: pulumi.Input<string>;
}
