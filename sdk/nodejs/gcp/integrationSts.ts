// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides a Datadog Integration GCP Sts resource. This can be used to create and manage Datadog - Google Cloud Platform integration.
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import datadog:gcp/integrationSts:IntegrationSts foo "9c303af3-b963-45e0-8c8f-469b9e1a213f"
 * ```
 */
export class IntegrationSts extends pulumi.CustomResource {
    /**
     * Get an existing IntegrationSts resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationStsState, opts?: pulumi.CustomResourceOptions): IntegrationSts {
        return new IntegrationSts(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:gcp/integrationSts:IntegrationSts';

    /**
     * Returns true if the given object is an instance of IntegrationSts.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IntegrationSts {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IntegrationSts.__pulumiType;
    }

    /**
     * Tags to be associated with GCP metrics and service checks from your account.
     */
    declare public readonly accountTags: pulumi.Output<string[] | undefined>;
    /**
     * Silence monitors for expected GCE instance shutdowns.
     */
    declare public readonly automute: pulumi.Output<boolean>;
    /**
     * Your service account email address.
     */
    declare public readonly clientEmail: pulumi.Output<string>;
    /**
     * List of filters to limit the Cloud Run revisions that are pulled into Datadog by using tags. Only Cloud Run revision resources that apply to specified filters are imported into Datadog.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=cloud_run_revision`
     */
    declare public readonly cloudRunRevisionFilters: pulumi.Output<string[]>;
    /**
     * Datadog's STS Delegate Email.
     */
    declare public /*out*/ readonly delegateAccountEmail: pulumi.Output<string>;
    /**
     * List of filters to limit the VM instances that are pulled into Datadog by using tags. Only VM instance resources that apply to specified filters are imported into Datadog.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=gce_instance`
     */
    declare public readonly hostFilters: pulumi.Output<string[]>;
    /**
     * Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resourceCollectionEnabled` to also be enabled.
     */
    declare public readonly isCspmEnabled: pulumi.Output<boolean>;
    /**
     * When enabled, Datadog includes the `X-Goog-User-Project` header to attribute Google Cloud billing and quota usage to the monitored project instead of the default service account project.
     */
    declare public readonly isPerProjectQuotaEnabled: pulumi.Output<boolean>;
    /**
     * When enabled, Datadog scans for all resource change data in your Google Cloud environment.
     */
    declare public readonly isResourceChangeCollectionEnabled: pulumi.Output<boolean>;
    /**
     * When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.
     */
    declare public readonly isSecurityCommandCenterEnabled: pulumi.Output<boolean>;
    /**
     * Configurations for GCP metric namespaces.
     */
    declare public readonly metricNamespaceConfigs: pulumi.Output<outputs.gcp.IntegrationStsMetricNamespaceConfig[] | undefined>;
    /**
     * Configurations for GCP monitored resources. Only monitored resources that apply to specified filters are imported into Datadog.
     */
    declare public readonly monitoredResourceConfigs: pulumi.Output<outputs.gcp.IntegrationStsMonitoredResourceConfig[]>;
    /**
     * When enabled, Datadog scans for all resources in your GCP environment.
     */
    declare public readonly resourceCollectionEnabled: pulumi.Output<boolean>;

    /**
     * Create a IntegrationSts resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationStsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationStsArgs | IntegrationStsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationStsState | undefined;
            resourceInputs["accountTags"] = state?.accountTags;
            resourceInputs["automute"] = state?.automute;
            resourceInputs["clientEmail"] = state?.clientEmail;
            resourceInputs["cloudRunRevisionFilters"] = state?.cloudRunRevisionFilters;
            resourceInputs["delegateAccountEmail"] = state?.delegateAccountEmail;
            resourceInputs["hostFilters"] = state?.hostFilters;
            resourceInputs["isCspmEnabled"] = state?.isCspmEnabled;
            resourceInputs["isPerProjectQuotaEnabled"] = state?.isPerProjectQuotaEnabled;
            resourceInputs["isResourceChangeCollectionEnabled"] = state?.isResourceChangeCollectionEnabled;
            resourceInputs["isSecurityCommandCenterEnabled"] = state?.isSecurityCommandCenterEnabled;
            resourceInputs["metricNamespaceConfigs"] = state?.metricNamespaceConfigs;
            resourceInputs["monitoredResourceConfigs"] = state?.monitoredResourceConfigs;
            resourceInputs["resourceCollectionEnabled"] = state?.resourceCollectionEnabled;
        } else {
            const args = argsOrState as IntegrationStsArgs | undefined;
            if (args?.clientEmail === undefined && !opts.urn) {
                throw new Error("Missing required property 'clientEmail'");
            }
            resourceInputs["accountTags"] = args?.accountTags;
            resourceInputs["automute"] = args?.automute;
            resourceInputs["clientEmail"] = args?.clientEmail;
            resourceInputs["cloudRunRevisionFilters"] = args?.cloudRunRevisionFilters;
            resourceInputs["hostFilters"] = args?.hostFilters;
            resourceInputs["isCspmEnabled"] = args?.isCspmEnabled;
            resourceInputs["isPerProjectQuotaEnabled"] = args?.isPerProjectQuotaEnabled;
            resourceInputs["isResourceChangeCollectionEnabled"] = args?.isResourceChangeCollectionEnabled;
            resourceInputs["isSecurityCommandCenterEnabled"] = args?.isSecurityCommandCenterEnabled;
            resourceInputs["metricNamespaceConfigs"] = args?.metricNamespaceConfigs;
            resourceInputs["monitoredResourceConfigs"] = args?.monitoredResourceConfigs;
            resourceInputs["resourceCollectionEnabled"] = args?.resourceCollectionEnabled;
            resourceInputs["delegateAccountEmail"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IntegrationSts.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IntegrationSts resources.
 */
export interface IntegrationStsState {
    /**
     * Tags to be associated with GCP metrics and service checks from your account.
     */
    accountTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Silence monitors for expected GCE instance shutdowns.
     */
    automute?: pulumi.Input<boolean>;
    /**
     * Your service account email address.
     */
    clientEmail?: pulumi.Input<string>;
    /**
     * List of filters to limit the Cloud Run revisions that are pulled into Datadog by using tags. Only Cloud Run revision resources that apply to specified filters are imported into Datadog.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=cloud_run_revision`
     */
    cloudRunRevisionFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Datadog's STS Delegate Email.
     */
    delegateAccountEmail?: pulumi.Input<string>;
    /**
     * List of filters to limit the VM instances that are pulled into Datadog by using tags. Only VM instance resources that apply to specified filters are imported into Datadog.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=gce_instance`
     */
    hostFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resourceCollectionEnabled` to also be enabled.
     */
    isCspmEnabled?: pulumi.Input<boolean>;
    /**
     * When enabled, Datadog includes the `X-Goog-User-Project` header to attribute Google Cloud billing and quota usage to the monitored project instead of the default service account project.
     */
    isPerProjectQuotaEnabled?: pulumi.Input<boolean>;
    /**
     * When enabled, Datadog scans for all resource change data in your Google Cloud environment.
     */
    isResourceChangeCollectionEnabled?: pulumi.Input<boolean>;
    /**
     * When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.
     */
    isSecurityCommandCenterEnabled?: pulumi.Input<boolean>;
    /**
     * Configurations for GCP metric namespaces.
     */
    metricNamespaceConfigs?: pulumi.Input<pulumi.Input<inputs.gcp.IntegrationStsMetricNamespaceConfig>[]>;
    /**
     * Configurations for GCP monitored resources. Only monitored resources that apply to specified filters are imported into Datadog.
     */
    monitoredResourceConfigs?: pulumi.Input<pulumi.Input<inputs.gcp.IntegrationStsMonitoredResourceConfig>[]>;
    /**
     * When enabled, Datadog scans for all resources in your GCP environment.
     */
    resourceCollectionEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a IntegrationSts resource.
 */
export interface IntegrationStsArgs {
    /**
     * Tags to be associated with GCP metrics and service checks from your account.
     */
    accountTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Silence monitors for expected GCE instance shutdowns.
     */
    automute?: pulumi.Input<boolean>;
    /**
     * Your service account email address.
     */
    clientEmail: pulumi.Input<string>;
    /**
     * List of filters to limit the Cloud Run revisions that are pulled into Datadog by using tags. Only Cloud Run revision resources that apply to specified filters are imported into Datadog.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=cloud_run_revision`
     */
    cloudRunRevisionFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of filters to limit the VM instances that are pulled into Datadog by using tags. Only VM instance resources that apply to specified filters are imported into Datadog.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=gce_instance`
     */
    hostFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resourceCollectionEnabled` to also be enabled.
     */
    isCspmEnabled?: pulumi.Input<boolean>;
    /**
     * When enabled, Datadog includes the `X-Goog-User-Project` header to attribute Google Cloud billing and quota usage to the monitored project instead of the default service account project.
     */
    isPerProjectQuotaEnabled?: pulumi.Input<boolean>;
    /**
     * When enabled, Datadog scans for all resource change data in your Google Cloud environment.
     */
    isResourceChangeCollectionEnabled?: pulumi.Input<boolean>;
    /**
     * When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.
     */
    isSecurityCommandCenterEnabled?: pulumi.Input<boolean>;
    /**
     * Configurations for GCP metric namespaces.
     */
    metricNamespaceConfigs?: pulumi.Input<pulumi.Input<inputs.gcp.IntegrationStsMetricNamespaceConfig>[]>;
    /**
     * Configurations for GCP monitored resources. Only monitored resources that apply to specified filters are imported into Datadog.
     */
    monitoredResourceConfigs?: pulumi.Input<pulumi.Input<inputs.gcp.IntegrationStsMonitoredResourceConfig>[]>;
    /**
     * When enabled, Datadog scans for all resources in your GCP environment.
     */
    resourceCollectionEnabled?: pulumi.Input<boolean>;
}
