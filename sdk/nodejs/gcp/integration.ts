// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * This resource is deprecatedâ€”use the `datadog.gcp.IntegrationSts` resource instead. Provides a Datadog - Google Cloud Platform integration resource. This can be used to create and manage Datadog - Google Cloud Platform integration.
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Google Cloud Platform integrations can be imported using their project ID, e.g.
 *
 * ```sh
 * $ pulumi import datadog:gcp/integration:Integration awesome_gcp_project_integration project_id
 * ```
 */
export class Integration extends pulumi.CustomResource {
    /**
     * Get an existing Integration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationState, opts?: pulumi.CustomResourceOptions): Integration {
        return new Integration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:gcp/integration:Integration';

    /**
     * Returns true if the given object is an instance of Integration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Integration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Integration.__pulumiType;
    }

    /**
     * Silence monitors for expected GCE instance shutdowns. Defaults to `false`.
     */
    declare public readonly automute: pulumi.Output<boolean>;
    /**
     * Your email found in your JSON service account key.
     */
    declare public readonly clientEmail: pulumi.Output<string>;
    /**
     * Your ID found in your JSON service account key.
     */
    declare public readonly clientId: pulumi.Output<string>;
    /**
     * List of filters to limit the Cloud Run revisions that are pulled into Datadog by using tags. Only Cloud Run revision resources that apply to specified filters are imported into Datadog.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=cloud_run_revision`
     */
    declare public readonly cloudRunRevisionFilters: pulumi.Output<string[]>;
    /**
     * Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resourceCollectionEnabled` to also be enabled. Defaults to `false`.
     */
    declare public readonly cspmResourceCollectionEnabled: pulumi.Output<boolean>;
    /**
     * List of filters to limit the VM instances that are pulled into Datadog by using tags. Only VM instance resources that apply to specified filters are imported into Datadog. Defaults to `""`.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=gce_instance`
     */
    declare public readonly hostFilters: pulumi.Output<string>;
    /**
     * When enabled, Datadog scans for all resource change data in your Google Cloud environment.
     */
    declare public readonly isResourceChangeCollectionEnabled: pulumi.Output<boolean>;
    /**
     * When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.
     */
    declare public readonly isSecurityCommandCenterEnabled: pulumi.Output<boolean>;
    /**
     * Configurations for GCP monitored resources. Only monitored resources that apply to specified filters are imported into Datadog.
     */
    declare public readonly monitoredResourceConfigs: pulumi.Output<outputs.gcp.IntegrationMonitoredResourceConfig[]>;
    /**
     * Your private key name found in your JSON service account key.
     */
    declare public readonly privateKey: pulumi.Output<string>;
    /**
     * Your private key ID found in your JSON service account key.
     */
    declare public readonly privateKeyId: pulumi.Output<string>;
    /**
     * Your Google Cloud project ID found in your JSON service account key.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * When enabled, Datadog scans for all resources in your GCP environment.
     */
    declare public readonly resourceCollectionEnabled: pulumi.Output<boolean>;

    /**
     * Create a Integration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationArgs | IntegrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationState | undefined;
            resourceInputs["automute"] = state?.automute;
            resourceInputs["clientEmail"] = state?.clientEmail;
            resourceInputs["clientId"] = state?.clientId;
            resourceInputs["cloudRunRevisionFilters"] = state?.cloudRunRevisionFilters;
            resourceInputs["cspmResourceCollectionEnabled"] = state?.cspmResourceCollectionEnabled;
            resourceInputs["hostFilters"] = state?.hostFilters;
            resourceInputs["isResourceChangeCollectionEnabled"] = state?.isResourceChangeCollectionEnabled;
            resourceInputs["isSecurityCommandCenterEnabled"] = state?.isSecurityCommandCenterEnabled;
            resourceInputs["monitoredResourceConfigs"] = state?.monitoredResourceConfigs;
            resourceInputs["privateKey"] = state?.privateKey;
            resourceInputs["privateKeyId"] = state?.privateKeyId;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["resourceCollectionEnabled"] = state?.resourceCollectionEnabled;
        } else {
            const args = argsOrState as IntegrationArgs | undefined;
            if (args?.clientEmail === undefined && !opts.urn) {
                throw new Error("Missing required property 'clientEmail'");
            }
            if (args?.clientId === undefined && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if (args?.privateKey === undefined && !opts.urn) {
                throw new Error("Missing required property 'privateKey'");
            }
            if (args?.privateKeyId === undefined && !opts.urn) {
                throw new Error("Missing required property 'privateKeyId'");
            }
            if (args?.projectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["automute"] = args?.automute;
            resourceInputs["clientEmail"] = args?.clientEmail;
            resourceInputs["clientId"] = args?.clientId;
            resourceInputs["cloudRunRevisionFilters"] = args?.cloudRunRevisionFilters;
            resourceInputs["cspmResourceCollectionEnabled"] = args?.cspmResourceCollectionEnabled;
            resourceInputs["hostFilters"] = args?.hostFilters;
            resourceInputs["isResourceChangeCollectionEnabled"] = args?.isResourceChangeCollectionEnabled;
            resourceInputs["isSecurityCommandCenterEnabled"] = args?.isSecurityCommandCenterEnabled;
            resourceInputs["monitoredResourceConfigs"] = args?.monitoredResourceConfigs;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["privateKeyId"] = args?.privateKeyId;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["resourceCollectionEnabled"] = args?.resourceCollectionEnabled;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["privateKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Integration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Integration resources.
 */
export interface IntegrationState {
    /**
     * Silence monitors for expected GCE instance shutdowns. Defaults to `false`.
     */
    automute?: pulumi.Input<boolean>;
    /**
     * Your email found in your JSON service account key.
     */
    clientEmail?: pulumi.Input<string>;
    /**
     * Your ID found in your JSON service account key.
     */
    clientId?: pulumi.Input<string>;
    /**
     * List of filters to limit the Cloud Run revisions that are pulled into Datadog by using tags. Only Cloud Run revision resources that apply to specified filters are imported into Datadog.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=cloud_run_revision`
     */
    cloudRunRevisionFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resourceCollectionEnabled` to also be enabled. Defaults to `false`.
     */
    cspmResourceCollectionEnabled?: pulumi.Input<boolean>;
    /**
     * List of filters to limit the VM instances that are pulled into Datadog by using tags. Only VM instance resources that apply to specified filters are imported into Datadog. Defaults to `""`.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=gce_instance`
     */
    hostFilters?: pulumi.Input<string>;
    /**
     * When enabled, Datadog scans for all resource change data in your Google Cloud environment.
     */
    isResourceChangeCollectionEnabled?: pulumi.Input<boolean>;
    /**
     * When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.
     */
    isSecurityCommandCenterEnabled?: pulumi.Input<boolean>;
    /**
     * Configurations for GCP monitored resources. Only monitored resources that apply to specified filters are imported into Datadog.
     */
    monitoredResourceConfigs?: pulumi.Input<pulumi.Input<inputs.gcp.IntegrationMonitoredResourceConfig>[]>;
    /**
     * Your private key name found in your JSON service account key.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * Your private key ID found in your JSON service account key.
     */
    privateKeyId?: pulumi.Input<string>;
    /**
     * Your Google Cloud project ID found in your JSON service account key.
     */
    projectId?: pulumi.Input<string>;
    /**
     * When enabled, Datadog scans for all resources in your GCP environment.
     */
    resourceCollectionEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Integration resource.
 */
export interface IntegrationArgs {
    /**
     * Silence monitors for expected GCE instance shutdowns. Defaults to `false`.
     */
    automute?: pulumi.Input<boolean>;
    /**
     * Your email found in your JSON service account key.
     */
    clientEmail: pulumi.Input<string>;
    /**
     * Your ID found in your JSON service account key.
     */
    clientId: pulumi.Input<string>;
    /**
     * List of filters to limit the Cloud Run revisions that are pulled into Datadog by using tags. Only Cloud Run revision resources that apply to specified filters are imported into Datadog.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=cloud_run_revision`
     */
    cloudRunRevisionFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether Datadog collects cloud security posture management resources from your GCP project. If enabled, requires `resourceCollectionEnabled` to also be enabled. Defaults to `false`.
     */
    cspmResourceCollectionEnabled?: pulumi.Input<boolean>;
    /**
     * List of filters to limit the VM instances that are pulled into Datadog by using tags. Only VM instance resources that apply to specified filters are imported into Datadog. Defaults to `""`.
     *
     * @deprecated **Note:** This field is deprecated. Instead, use `monitoredResourceConfigs` with `type=gce_instance`
     */
    hostFilters?: pulumi.Input<string>;
    /**
     * When enabled, Datadog scans for all resource change data in your Google Cloud environment.
     */
    isResourceChangeCollectionEnabled?: pulumi.Input<boolean>;
    /**
     * When enabled, Datadog will attempt to collect Security Command Center Findings. Note: This requires additional permissions on the service account. Defaults to `false`.
     */
    isSecurityCommandCenterEnabled?: pulumi.Input<boolean>;
    /**
     * Configurations for GCP monitored resources. Only monitored resources that apply to specified filters are imported into Datadog.
     */
    monitoredResourceConfigs?: pulumi.Input<pulumi.Input<inputs.gcp.IntegrationMonitoredResourceConfig>[]>;
    /**
     * Your private key name found in your JSON service account key.
     */
    privateKey: pulumi.Input<string>;
    /**
     * Your private key ID found in your JSON service account key.
     */
    privateKeyId: pulumi.Input<string>;
    /**
     * Your Google Cloud project ID found in your JSON service account key.
     */
    projectId: pulumi.Input<string>;
    /**
     * When enabled, Datadog scans for all resources in your GCP environment.
     */
    resourceCollectionEnabled?: pulumi.Input<boolean>;
}
