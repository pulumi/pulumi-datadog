// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Datadog On-Call escalation policy resource. This can be used to create and manage Datadog On-Call escalation policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const policyTest = new datadog.OnCallEscalationPolicy("policy_test", {
 *     name: "Policy Name",
 *     resolvePageOnPolicyEnd: true,
 *     retries: 3,
 *     steps: [{
 *         assignment: "round-robin",
 *         escalateAfterSeconds: 300,
 *         targets: [
 *             {
 *                 team: "00000000-aba2-0000-0000-000000000000",
 *             },
 *             {
 *                 user: "00000000-aba2-0000-0000-000000000000",
 *             },
 *             {
 *                 schedule: "00000000-aba2-0000-0000-000000000000",
 *             },
 *         ],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Import an existing on_call_escalation_policy
 *
 * ```sh
 * $ pulumi import datadog:index/onCallEscalationPolicy:OnCallEscalationPolicy policy_test "b03a07d5-49da-43e9-83b4-5d84969b588b"
 * ```
 */
export class OnCallEscalationPolicy extends pulumi.CustomResource {
    /**
     * Get an existing OnCallEscalationPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OnCallEscalationPolicyState, opts?: pulumi.CustomResourceOptions): OnCallEscalationPolicy {
        return new OnCallEscalationPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/onCallEscalationPolicy:OnCallEscalationPolicy';

    /**
     * Returns true if the given object is an instance of OnCallEscalationPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OnCallEscalationPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OnCallEscalationPolicy.__pulumiType;
    }

    /**
     * A human-readable name for the escalation policy.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
     */
    public readonly resolvePageOnPolicyEnd!: pulumi.Output<boolean>;
    /**
     * If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
     */
    public readonly retries!: pulumi.Output<number>;
    /**
     * List of steps for the escalation policy.
     */
    public readonly steps!: pulumi.Output<outputs.OnCallEscalationPolicyStep[]>;
    /**
     * A list of team ids associated with the escalation policy.
     */
    public readonly teams!: pulumi.Output<string[]>;

    /**
     * Create a OnCallEscalationPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OnCallEscalationPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OnCallEscalationPolicyArgs | OnCallEscalationPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OnCallEscalationPolicyState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resolvePageOnPolicyEnd"] = state ? state.resolvePageOnPolicyEnd : undefined;
            resourceInputs["retries"] = state ? state.retries : undefined;
            resourceInputs["steps"] = state ? state.steps : undefined;
            resourceInputs["teams"] = state ? state.teams : undefined;
        } else {
            const args = argsOrState as OnCallEscalationPolicyArgs | undefined;
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.steps === undefined) && !opts.urn) {
                throw new Error("Missing required property 'steps'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resolvePageOnPolicyEnd"] = args ? args.resolvePageOnPolicyEnd : undefined;
            resourceInputs["retries"] = args ? args.retries : undefined;
            resourceInputs["steps"] = args ? args.steps : undefined;
            resourceInputs["teams"] = args ? args.teams : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OnCallEscalationPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OnCallEscalationPolicy resources.
 */
export interface OnCallEscalationPolicyState {
    /**
     * A human-readable name for the escalation policy.
     */
    name?: pulumi.Input<string>;
    /**
     * If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
     */
    resolvePageOnPolicyEnd?: pulumi.Input<boolean>;
    /**
     * If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
     */
    retries?: pulumi.Input<number>;
    /**
     * List of steps for the escalation policy.
     */
    steps?: pulumi.Input<pulumi.Input<inputs.OnCallEscalationPolicyStep>[]>;
    /**
     * A list of team ids associated with the escalation policy.
     */
    teams?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a OnCallEscalationPolicy resource.
 */
export interface OnCallEscalationPolicyArgs {
    /**
     * A human-readable name for the escalation policy.
     */
    name: pulumi.Input<string>;
    /**
     * If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
     */
    resolvePageOnPolicyEnd?: pulumi.Input<boolean>;
    /**
     * If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
     */
    retries?: pulumi.Input<number>;
    /**
     * List of steps for the escalation policy.
     */
    steps: pulumi.Input<pulumi.Input<inputs.OnCallEscalationPolicyStep>[]>;
    /**
     * A list of team ids associated with the escalation policy.
     */
    teams?: pulumi.Input<pulumi.Input<string>[]>;
}
