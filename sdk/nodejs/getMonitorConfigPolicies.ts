// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to list existing monitor config policies for use in other resources.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const test = datadog.getMonitorConfigPolicies({});
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMonitorConfigPolicies(opts?: pulumi.InvokeOptions): Promise<GetMonitorConfigPoliciesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("datadog:index/getMonitorConfigPolicies:getMonitorConfigPolicies", {
    }, opts);
}

/**
 * A collection of values returned by getMonitorConfigPolicies.
 */
export interface GetMonitorConfigPoliciesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of monitor config policies
     */
    readonly monitorConfigPolicies: outputs.GetMonitorConfigPoliciesMonitorConfigPolicy[];
}
/**
 * Use this data source to list existing monitor config policies for use in other resources.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const test = datadog.getMonitorConfigPolicies({});
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getMonitorConfigPoliciesOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetMonitorConfigPoliciesResult> {
    return pulumi.output(getMonitorConfigPolicies(opts))
}
