// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Datadog dashboard JSON resource. This can be used to create and manage Datadog dashboards using the JSON definition.
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import datadog:index/dashboardJson:DashboardJson my_service_dashboard sv7-gyh-kas
 * ```
 */
export class DashboardJson extends pulumi.CustomResource {
    /**
     * Get an existing DashboardJson resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DashboardJsonState, opts?: pulumi.CustomResourceOptions): DashboardJson {
        return new DashboardJson(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/dashboardJson:DashboardJson';

    /**
     * Returns true if the given object is an instance of DashboardJson.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DashboardJson {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DashboardJson.__pulumiType;
    }

    /**
     * The JSON formatted definition of the Dashboard.
     */
    public readonly dashboard!: pulumi.Output<string>;
    /**
     * A list of dashboard lists this dashboard belongs to. This attribute should not be set if managing the corresponding
     * dashboard lists using Terraform as it causes inconsistent behavior.
     */
    public readonly dashboardLists!: pulumi.Output<number[] | undefined>;
    /**
     * The list of dashboard lists this dashboard should be removed from. Internal only.
     */
    public /*out*/ readonly dashboardListsRemoveds!: pulumi.Output<number[]>;
    /**
     * The URL of the dashboard.
     */
    public readonly url!: pulumi.Output<string>;

    /**
     * Create a DashboardJson resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DashboardJsonArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DashboardJsonArgs | DashboardJsonState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DashboardJsonState | undefined;
            resourceInputs["dashboard"] = state ? state.dashboard : undefined;
            resourceInputs["dashboardLists"] = state ? state.dashboardLists : undefined;
            resourceInputs["dashboardListsRemoveds"] = state ? state.dashboardListsRemoveds : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as DashboardJsonArgs | undefined;
            if ((!args || args.dashboard === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dashboard'");
            }
            resourceInputs["dashboard"] = args ? args.dashboard : undefined;
            resourceInputs["dashboardLists"] = args ? args.dashboardLists : undefined;
            resourceInputs["url"] = args ? args.url : undefined;
            resourceInputs["dashboardListsRemoveds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DashboardJson.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DashboardJson resources.
 */
export interface DashboardJsonState {
    /**
     * The JSON formatted definition of the Dashboard.
     */
    dashboard?: pulumi.Input<string>;
    /**
     * A list of dashboard lists this dashboard belongs to. This attribute should not be set if managing the corresponding
     * dashboard lists using Terraform as it causes inconsistent behavior.
     */
    dashboardLists?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The list of dashboard lists this dashboard should be removed from. Internal only.
     */
    dashboardListsRemoveds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The URL of the dashboard.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DashboardJson resource.
 */
export interface DashboardJsonArgs {
    /**
     * The JSON formatted definition of the Dashboard.
     */
    dashboard: pulumi.Input<string>;
    /**
     * A list of dashboard lists this dashboard belongs to. This attribute should not be set if managing the corresponding
     * dashboard lists using Terraform as it causes inconsistent behavior.
     */
    dashboardLists?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * The URL of the dashboard.
     */
    url?: pulumi.Input<string>;
}
