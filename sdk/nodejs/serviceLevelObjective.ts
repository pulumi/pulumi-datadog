// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Datadog service level objective resource. This can be used to create and manage Datadog service level objectives.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * // Metric-Based SLO
 * // Create a new Datadog service level objective
 * const foo = new datadog.ServiceLevelObjective("foo", {
 *     description: "My custom metric SLO",
 *     name: "Example Metric SLO",
 *     query: {
 *         denominator: "sum:my.custom.count.metric{*}.as_count()",
 *         numerator: "sum:my.custom.count.metric{type:good_events}.as_count()",
 *     },
 *     tags: [
 *         "foo:bar",
 *         "baz",
 *     ],
 *     targetThreshold: 99.9,
 *     thresholds: [
 *         {
 *             target: 99.9,
 *             timeframe: "7d",
 *             warning: 99.99,
 *         },
 *         {
 *             target: 99.9,
 *             timeframe: "30d",
 *             warning: 99.99,
 *         },
 *     ],
 *     timeframe: "30d",
 *     type: "metric",
 *     warningThreshold: 99.99,
 * });
 * // Monitor-Based SLO
 * // Create a new Datadog service level objective
 * const bar = new datadog.ServiceLevelObjective("bar", {
 *     description: "My custom monitor SLO",
 *     monitorIds: [
 *         1,
 *         2,
 *         3,
 *     ],
 *     name: "Example Monitor SLO",
 *     tags: [
 *         "foo:bar",
 *         "baz",
 *     ],
 *     targetThreshold: 99.9,
 *     thresholds: [
 *         {
 *             target: 99.9,
 *             timeframe: "7d",
 *             warning: 99.99,
 *         },
 *         {
 *             target: 99.9,
 *             timeframe: "30d",
 *             warning: 99.99,
 *         },
 *     ],
 *     timeframe: "30d",
 *     type: "monitor",
 *     warningThreshold: 99.99,
 * });
 * ```
 *
 * ## Import
 *
 * Service Level Objectives can be imported using their string ID, e.g.
 *
 * ```sh
 *  $ pulumi import datadog:index/serviceLevelObjective:ServiceLevelObjective baz 12345678901234567890123456789012
 * ```
 */
export class ServiceLevelObjective extends pulumi.CustomResource {
    /**
     * Get an existing ServiceLevelObjective resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceLevelObjectiveState, opts?: pulumi.CustomResourceOptions): ServiceLevelObjective {
        return new ServiceLevelObjective(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/serviceLevelObjective:ServiceLevelObjective';

    /**
     * Returns true if the given object is an instance of ServiceLevelObjective.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceLevelObjective {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceLevelObjective.__pulumiType;
    }

    /**
     * A description of this service level objective.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A boolean indicating whether this monitor can be deleted even if itâ€™s referenced by other resources (e.g. dashboards).
     */
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    /**
     * A static set of groups to filter monitor-based SLOs
     */
    public readonly groups!: pulumi.Output<string[] | undefined>;
    /**
     * A static set of monitor IDs to use as part of the SLO
     */
    public readonly monitorIds!: pulumi.Output<number[] | undefined>;
    /**
     * Name of Datadog service level objective
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The metric query of good / total events
     */
    public readonly query!: pulumi.Output<outputs.ServiceLevelObjectiveQuery | undefined>;
    /**
     * A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The objective's target in `(0,100)`.
     */
    public readonly targetThreshold!: pulumi.Output<number>;
    /**
     * A list of thresholds and targets that define the service level objectives from the provided SLIs.
     */
    public readonly thresholds!: pulumi.Output<outputs.ServiceLevelObjectiveThreshold[]>;
    /**
     * The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.
     */
    public readonly timeframe!: pulumi.Output<string>;
    /**
     * The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Valid values are `metric`, `monitor`.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Whether or not to validate the SLO.
     */
    public readonly validate!: pulumi.Output<boolean | undefined>;
    /**
     * The objective's warning value in `(0,100)`. This must be greater than the target value.
     */
    public readonly warningThreshold!: pulumi.Output<number>;

    /**
     * Create a ServiceLevelObjective resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceLevelObjectiveArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceLevelObjectiveArgs | ServiceLevelObjectiveState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceLevelObjectiveState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["groups"] = state ? state.groups : undefined;
            resourceInputs["monitorIds"] = state ? state.monitorIds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["query"] = state ? state.query : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["targetThreshold"] = state ? state.targetThreshold : undefined;
            resourceInputs["thresholds"] = state ? state.thresholds : undefined;
            resourceInputs["timeframe"] = state ? state.timeframe : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["validate"] = state ? state.validate : undefined;
            resourceInputs["warningThreshold"] = state ? state.warningThreshold : undefined;
        } else {
            const args = argsOrState as ServiceLevelObjectiveArgs | undefined;
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.thresholds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'thresholds'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["groups"] = args ? args.groups : undefined;
            resourceInputs["monitorIds"] = args ? args.monitorIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["query"] = args ? args.query : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["targetThreshold"] = args ? args.targetThreshold : undefined;
            resourceInputs["thresholds"] = args ? args.thresholds : undefined;
            resourceInputs["timeframe"] = args ? args.timeframe : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["validate"] = args ? args.validate : undefined;
            resourceInputs["warningThreshold"] = args ? args.warningThreshold : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceLevelObjective.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceLevelObjective resources.
 */
export interface ServiceLevelObjectiveState {
    /**
     * A description of this service level objective.
     */
    description?: pulumi.Input<string>;
    /**
     * A boolean indicating whether this monitor can be deleted even if itâ€™s referenced by other resources (e.g. dashboards).
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * A static set of groups to filter monitor-based SLOs
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A static set of monitor IDs to use as part of the SLO
     */
    monitorIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Name of Datadog service level objective
     */
    name?: pulumi.Input<string>;
    /**
     * The metric query of good / total events
     */
    query?: pulumi.Input<inputs.ServiceLevelObjectiveQuery>;
    /**
     * A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The objective's target in `(0,100)`.
     */
    targetThreshold?: pulumi.Input<number>;
    /**
     * A list of thresholds and targets that define the service level objectives from the provided SLIs.
     */
    thresholds?: pulumi.Input<pulumi.Input<inputs.ServiceLevelObjectiveThreshold>[]>;
    /**
     * The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.
     */
    timeframe?: pulumi.Input<string>;
    /**
     * The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Valid values are `metric`, `monitor`.
     */
    type?: pulumi.Input<string>;
    /**
     * Whether or not to validate the SLO.
     */
    validate?: pulumi.Input<boolean>;
    /**
     * The objective's warning value in `(0,100)`. This must be greater than the target value.
     */
    warningThreshold?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ServiceLevelObjective resource.
 */
export interface ServiceLevelObjectiveArgs {
    /**
     * A description of this service level objective.
     */
    description?: pulumi.Input<string>;
    /**
     * A boolean indicating whether this monitor can be deleted even if itâ€™s referenced by other resources (e.g. dashboards).
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * A static set of groups to filter monitor-based SLOs
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A static set of monitor IDs to use as part of the SLO
     */
    monitorIds?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Name of Datadog service level objective
     */
    name: pulumi.Input<string>;
    /**
     * The metric query of good / total events
     */
    query?: pulumi.Input<inputs.ServiceLevelObjectiveQuery>;
    /**
     * A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it's not currently possible to filter by these tags when querying via the API
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The objective's target in `(0,100)`.
     */
    targetThreshold?: pulumi.Input<number>;
    /**
     * A list of thresholds and targets that define the service level objectives from the provided SLIs.
     */
    thresholds: pulumi.Input<pulumi.Input<inputs.ServiceLevelObjectiveThreshold>[]>;
    /**
     * The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.
     */
    timeframe?: pulumi.Input<string>;
    /**
     * The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Valid values are `metric`, `monitor`.
     */
    type: pulumi.Input<string>;
    /**
     * Whether or not to validate the SLO.
     */
    validate?: pulumi.Input<boolean>;
    /**
     * The objective's warning value in `(0,100)`. This must be greater than the target value.
     */
    warningThreshold?: pulumi.Input<number>;
}
