// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Datadog Agentless Scanning AWS scan options resource. This can be used to activate and configure Agentless scan options for an AWS account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * // Configure agentless scanning for an AWS account
 * const example = new datadog.AgentlessScanningAwsScanOptions("example", {
 *     awsAccountId: "123456789012",
 *     lambda: true,
 *     sensitiveData: false,
 *     vulnContainersOs: true,
 *     vulnHostOs: true,
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * #!/bin/bash
 *
 * Import existing agentless scanning aws scan options by AWS Account ID
 *
 * ```sh
 * $ pulumi import datadog:index/agentlessScanningAwsScanOptions:AgentlessScanningAwsScanOptions example 123456789012
 * ```
 */
export class AgentlessScanningAwsScanOptions extends pulumi.CustomResource {
    /**
     * Get an existing AgentlessScanningAwsScanOptions resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AgentlessScanningAwsScanOptionsState, opts?: pulumi.CustomResourceOptions): AgentlessScanningAwsScanOptions {
        return new AgentlessScanningAwsScanOptions(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/agentlessScanningAwsScanOptions:AgentlessScanningAwsScanOptions';

    /**
     * Returns true if the given object is an instance of AgentlessScanningAwsScanOptions.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AgentlessScanningAwsScanOptions {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgentlessScanningAwsScanOptions.__pulumiType;
    }

    /**
     * The AWS Account ID for which agentless scanning is configured.
     */
    declare public readonly awsAccountId: pulumi.Output<string>;
    /**
     * Indicates if scanning of Lambda functions is enabled.
     */
    declare public readonly lambda: pulumi.Output<boolean>;
    /**
     * Indicates if scanning for sensitive data is enabled.
     */
    declare public readonly sensitiveData: pulumi.Output<boolean>;
    /**
     * Indicates if scanning for vulnerabilities in containers is enabled.
     */
    declare public readonly vulnContainersOs: pulumi.Output<boolean>;
    /**
     * Indicates if scanning for vulnerabilities in hosts is enabled.
     */
    declare public readonly vulnHostOs: pulumi.Output<boolean>;

    /**
     * Create a AgentlessScanningAwsScanOptions resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgentlessScanningAwsScanOptionsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AgentlessScanningAwsScanOptionsArgs | AgentlessScanningAwsScanOptionsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AgentlessScanningAwsScanOptionsState | undefined;
            resourceInputs["awsAccountId"] = state?.awsAccountId;
            resourceInputs["lambda"] = state?.lambda;
            resourceInputs["sensitiveData"] = state?.sensitiveData;
            resourceInputs["vulnContainersOs"] = state?.vulnContainersOs;
            resourceInputs["vulnHostOs"] = state?.vulnHostOs;
        } else {
            const args = argsOrState as AgentlessScanningAwsScanOptionsArgs | undefined;
            if (args?.awsAccountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'awsAccountId'");
            }
            if (args?.lambda === undefined && !opts.urn) {
                throw new Error("Missing required property 'lambda'");
            }
            if (args?.sensitiveData === undefined && !opts.urn) {
                throw new Error("Missing required property 'sensitiveData'");
            }
            if (args?.vulnContainersOs === undefined && !opts.urn) {
                throw new Error("Missing required property 'vulnContainersOs'");
            }
            if (args?.vulnHostOs === undefined && !opts.urn) {
                throw new Error("Missing required property 'vulnHostOs'");
            }
            resourceInputs["awsAccountId"] = args?.awsAccountId;
            resourceInputs["lambda"] = args?.lambda;
            resourceInputs["sensitiveData"] = args?.sensitiveData;
            resourceInputs["vulnContainersOs"] = args?.vulnContainersOs;
            resourceInputs["vulnHostOs"] = args?.vulnHostOs;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AgentlessScanningAwsScanOptions.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AgentlessScanningAwsScanOptions resources.
 */
export interface AgentlessScanningAwsScanOptionsState {
    /**
     * The AWS Account ID for which agentless scanning is configured.
     */
    awsAccountId?: pulumi.Input<string>;
    /**
     * Indicates if scanning of Lambda functions is enabled.
     */
    lambda?: pulumi.Input<boolean>;
    /**
     * Indicates if scanning for sensitive data is enabled.
     */
    sensitiveData?: pulumi.Input<boolean>;
    /**
     * Indicates if scanning for vulnerabilities in containers is enabled.
     */
    vulnContainersOs?: pulumi.Input<boolean>;
    /**
     * Indicates if scanning for vulnerabilities in hosts is enabled.
     */
    vulnHostOs?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a AgentlessScanningAwsScanOptions resource.
 */
export interface AgentlessScanningAwsScanOptionsArgs {
    /**
     * The AWS Account ID for which agentless scanning is configured.
     */
    awsAccountId: pulumi.Input<string>;
    /**
     * Indicates if scanning of Lambda functions is enabled.
     */
    lambda: pulumi.Input<boolean>;
    /**
     * Indicates if scanning for sensitive data is enabled.
     */
    sensitiveData: pulumi.Input<boolean>;
    /**
     * Indicates if scanning for vulnerabilities in containers is enabled.
     */
    vulnContainersOs: pulumi.Input<boolean>;
    /**
     * Indicates if scanning for vulnerabilities in hosts is enabled.
     */
    vulnHostOs: pulumi.Input<boolean>;
}
