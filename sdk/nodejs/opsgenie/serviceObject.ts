// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Resource for interacting with Datadog Opsgenie Service API.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const fakeServiceName = new datadog.opsgenie.ServiceObject("fake_service_name", {
 *     name: "fake_service_name",
 *     opsgenieApiKey: "00000000-0000-0000-0000-000000000000",
 *     region: "us",
 * });
 * const fakeServiceName2 = new datadog.opsgenie.ServiceObject("fake_service_name_2", {
 *     name: "fake_service_name_2",
 *     opsgenieApiKey: "11111111-1111-1111-1111-111111111111",
 *     region: "eu",
 * });
 * ```
 */
export class ServiceObject extends pulumi.CustomResource {
    /**
     * Get an existing ServiceObject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceObjectState, opts?: pulumi.CustomResourceOptions): ServiceObject {
        return new ServiceObject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:opsgenie/serviceObject:ServiceObject';

    /**
     * Returns true if the given object is an instance of ServiceObject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceObject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceObject.__pulumiType;
    }

    /**
     * The custom url for a custom region.
     */
    public readonly customUrl!: pulumi.Output<string | undefined>;
    /**
     * The name for the Opsgenie service.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly opsgenieApiKey!: pulumi.Output<string>;
    /**
     * The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a ServiceObject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceObjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceObjectArgs | ServiceObjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceObjectState | undefined;
            resourceInputs["customUrl"] = state ? state.customUrl : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["opsgenieApiKey"] = state ? state.opsgenieApiKey : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as ServiceObjectArgs | undefined;
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.opsgenieApiKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'opsgenieApiKey'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["customUrl"] = args ? args.customUrl : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["opsgenieApiKey"] = args?.opsgenieApiKey ? pulumi.secret(args.opsgenieApiKey) : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["opsgenieApiKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ServiceObject.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceObject resources.
 */
export interface ServiceObjectState {
    /**
     * The custom url for a custom region.
     */
    customUrl?: pulumi.Input<string>;
    /**
     * The name for the Opsgenie service.
     */
    name?: pulumi.Input<string>;
    opsgenieApiKey?: pulumi.Input<string>;
    /**
     * The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceObject resource.
 */
export interface ServiceObjectArgs {
    /**
     * The custom url for a custom region.
     */
    customUrl?: pulumi.Input<string>;
    /**
     * The name for the Opsgenie service.
     */
    name: pulumi.Input<string>;
    opsgenieApiKey: pulumi.Input<string>;
    /**
     * The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.
     */
    region: pulumi.Input<string>;
}
