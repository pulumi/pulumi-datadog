// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to retrieve information about an existing incident notification rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const example = datadog.getIncidentNotificationRule({
 *     id: "00000000-0000-0000-0000-000000000000",
 * });
 * ```
 */
export function getIncidentNotificationRule(args: GetIncidentNotificationRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetIncidentNotificationRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("datadog:index/getIncidentNotificationRule:getIncidentNotificationRule", {
        "conditions": args.conditions,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getIncidentNotificationRule.
 */
export interface GetIncidentNotificationRuleArgs {
    /**
     * The conditions that trigger this notification rule.
     */
    conditions?: inputs.GetIncidentNotificationRuleCondition[];
    /**
     * The ID of the incident notification rule.
     */
    id: string;
}

/**
 * A collection of values returned by getIncidentNotificationRule.
 */
export interface GetIncidentNotificationRuleResult {
    /**
     * The conditions that trigger this notification rule.
     */
    readonly conditions?: outputs.GetIncidentNotificationRuleCondition[];
    /**
     * Timestamp when the notification rule was created.
     */
    readonly created: string;
    /**
     * Whether the notification rule is enabled.
     */
    readonly enabled: boolean;
    /**
     * The notification handles (targets) for this rule.
     */
    readonly handles: string[];
    /**
     * The ID of the incident notification rule.
     */
    readonly id: string;
    /**
     * The ID of the incident type this notification rule is associated with.
     */
    readonly incidentType: string;
    /**
     * Timestamp when the notification rule was last modified.
     */
    readonly modified: string;
    /**
     * The ID of the notification template used by this rule.
     */
    readonly notificationTemplate: string;
    /**
     * List of incident fields that trigger re-notification when changed.
     */
    readonly renotifyOns: string[];
    /**
     * The trigger event for this notification rule.
     */
    readonly trigger: string;
    /**
     * The visibility of the notification rule. Valid values are: all, organization, private.
     */
    readonly visibility: string;
}
/**
 * Use this data source to retrieve information about an existing incident notification rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const example = datadog.getIncidentNotificationRule({
 *     id: "00000000-0000-0000-0000-000000000000",
 * });
 * ```
 */
export function getIncidentNotificationRuleOutput(args: GetIncidentNotificationRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIncidentNotificationRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("datadog:index/getIncidentNotificationRule:getIncidentNotificationRule", {
        "conditions": args.conditions,
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getIncidentNotificationRule.
 */
export interface GetIncidentNotificationRuleOutputArgs {
    /**
     * The conditions that trigger this notification rule.
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.GetIncidentNotificationRuleConditionArgs>[]>;
    /**
     * The ID of the incident notification rule.
     */
    id: pulumi.Input<string>;
}
