// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Datadog RestrictionPolicy resource. This can be used to create and manage Datadog restriction policies. See this page for more details https://docs.datadoghq.com/api/latest/restriction-policies/#supported-relations-for-resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const foo = new datadog.RestrictionPolicy("foo", {
 *     bindings: [
 *         {
 *             principals: ["role:00000000-0000-1111-0000-000000000000"],
 *             relation: "editor",
 *         },
 *         {
 *             principals: ["org:10000000-0000-1111-0000-000000000000"],
 *             relation: "viewer",
 *         },
 *     ],
 *     resourceId: "security-rule:abc-def-ghi",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import datadog:index/restrictionPolicy:RestrictionPolicy new_list ""
 * ```
 */
export class RestrictionPolicy extends pulumi.CustomResource {
    /**
     * Get an existing RestrictionPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RestrictionPolicyState, opts?: pulumi.CustomResourceOptions): RestrictionPolicy {
        return new RestrictionPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/restrictionPolicy:RestrictionPolicy';

    /**
     * Returns true if the given object is an instance of RestrictionPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RestrictionPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RestrictionPolicy.__pulumiType;
    }

    public readonly bindings!: pulumi.Output<outputs.RestrictionPolicyBinding[] | undefined>;
    /**
     * Identifier for the resource, formatted as resource*type:resource*id.
     */
    public readonly resourceId!: pulumi.Output<string>;

    /**
     * Create a RestrictionPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RestrictionPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RestrictionPolicyArgs | RestrictionPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RestrictionPolicyState | undefined;
            resourceInputs["bindings"] = state ? state.bindings : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
        } else {
            const args = argsOrState as RestrictionPolicyArgs | undefined;
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            resourceInputs["bindings"] = args ? args.bindings : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RestrictionPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RestrictionPolicy resources.
 */
export interface RestrictionPolicyState {
    bindings?: pulumi.Input<pulumi.Input<inputs.RestrictionPolicyBinding>[]>;
    /**
     * Identifier for the resource, formatted as resource*type:resource*id.
     */
    resourceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RestrictionPolicy resource.
 */
export interface RestrictionPolicyArgs {
    bindings?: pulumi.Input<pulumi.Input<inputs.RestrictionPolicyBinding>[]>;
    /**
     * Identifier for the resource, formatted as resource*type:resource*id.
     */
    resourceId: pulumi.Input<string>;
}
