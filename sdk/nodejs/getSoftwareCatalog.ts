// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to list software catalog entities to use in other resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const test = datadog.getSoftwareCatalog({});
 * ```
 */
export function getSoftwareCatalog(args?: GetSoftwareCatalogArgs, opts?: pulumi.InvokeOptions): Promise<GetSoftwareCatalogResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("datadog:index/getSoftwareCatalog:getSoftwareCatalog", {
        "filterExcludeSnapshot": args.filterExcludeSnapshot,
        "filterId": args.filterId,
        "filterKind": args.filterKind,
        "filterName": args.filterName,
        "filterOwner": args.filterOwner,
        "filterRef": args.filterRef,
        "filterRelationType": args.filterRelationType,
    }, opts);
}

/**
 * A collection of arguments for invoking getSoftwareCatalog.
 */
export interface GetSoftwareCatalogArgs {
    /**
     * Filter entities by excluding snapshotted entities.
     */
    filterExcludeSnapshot?: string;
    /**
     * Filter entities by UUID.
     */
    filterId?: string;
    /**
     * Filter entities by kind.
     */
    filterKind?: string;
    /**
     * Filter entities by name.
     */
    filterName?: string;
    /**
     * Filter entities by owner.
     */
    filterOwner?: string;
    /**
     * Filter entities by reference.
     */
    filterRef?: string;
    /**
     * Filter entities by relation type.
     */
    filterRelationType?: string;
}

/**
 * A collection of values returned by getSoftwareCatalog.
 */
export interface GetSoftwareCatalogResult {
    /**
     * List of entities
     */
    readonly entities: outputs.GetSoftwareCatalogEntity[];
    /**
     * Filter entities by excluding snapshotted entities.
     */
    readonly filterExcludeSnapshot?: string;
    /**
     * Filter entities by UUID.
     */
    readonly filterId?: string;
    /**
     * Filter entities by kind.
     */
    readonly filterKind?: string;
    /**
     * Filter entities by name.
     */
    readonly filterName?: string;
    /**
     * Filter entities by owner.
     */
    readonly filterOwner?: string;
    /**
     * Filter entities by reference.
     */
    readonly filterRef?: string;
    /**
     * Filter entities by relation type.
     */
    readonly filterRelationType?: string;
    /**
     * The ID of this resource.
     */
    readonly id: string;
}
/**
 * Use this data source to list software catalog entities to use in other resources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const test = datadog.getSoftwareCatalog({});
 * ```
 */
export function getSoftwareCatalogOutput(args?: GetSoftwareCatalogOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSoftwareCatalogResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("datadog:index/getSoftwareCatalog:getSoftwareCatalog", {
        "filterExcludeSnapshot": args.filterExcludeSnapshot,
        "filterId": args.filterId,
        "filterKind": args.filterKind,
        "filterName": args.filterName,
        "filterOwner": args.filterOwner,
        "filterRef": args.filterRef,
        "filterRelationType": args.filterRelationType,
    }, opts);
}

/**
 * A collection of arguments for invoking getSoftwareCatalog.
 */
export interface GetSoftwareCatalogOutputArgs {
    /**
     * Filter entities by excluding snapshotted entities.
     */
    filterExcludeSnapshot?: pulumi.Input<string>;
    /**
     * Filter entities by UUID.
     */
    filterId?: pulumi.Input<string>;
    /**
     * Filter entities by kind.
     */
    filterKind?: pulumi.Input<string>;
    /**
     * Filter entities by name.
     */
    filterName?: pulumi.Input<string>;
    /**
     * Filter entities by owner.
     */
    filterOwner?: pulumi.Input<string>;
    /**
     * Filter entities by reference.
     */
    filterRef?: pulumi.Input<string>;
    /**
     * Filter entities by relation type.
     */
    filterRelationType?: pulumi.Input<string>;
}
