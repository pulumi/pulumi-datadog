// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./apiKey";
export * from "./applicationKey";
export * from "./authnMapping";
export * from "./childOrganization";
export * from "./cloudWorkloadSecurityAgentRule";
export * from "./dashboard";
export * from "./dashboardJson";
export * from "./dashboardList";
export * from "./downtime";
export * from "./getApiKey";
export * from "./getApplicationKey";
export * from "./getCloudWorkloadSecurityAgentRules";
export * from "./getDashboard";
export * from "./getDashboardList";
export * from "./getIpRanges";
export * from "./getLogsIndexes";
export * from "./getLogsIndexesOrder";
export * from "./getMonitor";
export * from "./getMonitors";
export * from "./getPermissions";
export * from "./getRole";
export * from "./getRoles";
export * from "./getSecurityMonitoringFilters";
export * from "./getSecurityMonitoringRules";
export * from "./getServiceLevelObjective";
export * from "./getServiceLevelObjectives";
export * from "./getSyntheticsGlobalVariable";
export * from "./getSyntheticsLocations";
export * from "./getSyntheticsTest";
export * from "./getUser";
export * from "./logsArchive";
export * from "./logsArchiveOrder";
export * from "./logsCustomPipeline";
export * from "./logsIndex";
export * from "./logsIndexOrder";
export * from "./logsIntegrationPipeline";
export * from "./logsMetric";
export * from "./logsPipelineOrder";
export * from "./metricMetadata";
export * from "./metricTagConfiguration";
export * from "./monitor";
export * from "./monitorJson";
export * from "./organizationSettings";
export * from "./provider";
export * from "./role";
export * from "./securityMonitoringDefaultRule";
export * from "./securityMonitoringFilter";
export * from "./securityMonitoringRule";
export * from "./serviceLevelObjective";
export * from "./sloCorrection";
export * from "./syntheticsGlobalVariable";
export * from "./syntheticsPrivateLocation";
export * from "./syntheticsTest";
export * from "./user";
export * from "./webhook";
export * from "./webhookCustomVariable";

// Export sub-modules:
import * as aws from "./aws";
import * as azure from "./azure";
import * as config from "./config";
import * as gcp from "./gcp";
import * as pagerduty from "./pagerduty";
import * as slack from "./slack";
import * as types from "./types";

export {
    aws,
    azure,
    config,
    gcp,
    pagerduty,
    slack,
    types,
};

// Import resources to register:
import { ApiKey } from "./apiKey";
import { ApplicationKey } from "./applicationKey";
import { AuthnMapping } from "./authnMapping";
import { ChildOrganization } from "./childOrganization";
import { CloudWorkloadSecurityAgentRule } from "./cloudWorkloadSecurityAgentRule";
import { Dashboard } from "./dashboard";
import { DashboardJson } from "./dashboardJson";
import { DashboardList } from "./dashboardList";
import { Downtime } from "./downtime";
import { LogsArchive } from "./logsArchive";
import { LogsArchiveOrder } from "./logsArchiveOrder";
import { LogsCustomPipeline } from "./logsCustomPipeline";
import { LogsIndex } from "./logsIndex";
import { LogsIndexOrder } from "./logsIndexOrder";
import { LogsIntegrationPipeline } from "./logsIntegrationPipeline";
import { LogsMetric } from "./logsMetric";
import { LogsPipelineOrder } from "./logsPipelineOrder";
import { MetricMetadata } from "./metricMetadata";
import { MetricTagConfiguration } from "./metricTagConfiguration";
import { Monitor } from "./monitor";
import { MonitorJson } from "./monitorJson";
import { OrganizationSettings } from "./organizationSettings";
import { Role } from "./role";
import { SecurityMonitoringDefaultRule } from "./securityMonitoringDefaultRule";
import { SecurityMonitoringFilter } from "./securityMonitoringFilter";
import { SecurityMonitoringRule } from "./securityMonitoringRule";
import { ServiceLevelObjective } from "./serviceLevelObjective";
import { SloCorrection } from "./sloCorrection";
import { SyntheticsGlobalVariable } from "./syntheticsGlobalVariable";
import { SyntheticsPrivateLocation } from "./syntheticsPrivateLocation";
import { SyntheticsTest } from "./syntheticsTest";
import { User } from "./user";
import { Webhook } from "./webhook";
import { WebhookCustomVariable } from "./webhookCustomVariable";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "datadog:index/apiKey:ApiKey":
                return new ApiKey(name, <any>undefined, { urn })
            case "datadog:index/applicationKey:ApplicationKey":
                return new ApplicationKey(name, <any>undefined, { urn })
            case "datadog:index/authnMapping:AuthnMapping":
                return new AuthnMapping(name, <any>undefined, { urn })
            case "datadog:index/childOrganization:ChildOrganization":
                return new ChildOrganization(name, <any>undefined, { urn })
            case "datadog:index/cloudWorkloadSecurityAgentRule:CloudWorkloadSecurityAgentRule":
                return new CloudWorkloadSecurityAgentRule(name, <any>undefined, { urn })
            case "datadog:index/dashboard:Dashboard":
                return new Dashboard(name, <any>undefined, { urn })
            case "datadog:index/dashboardJson:DashboardJson":
                return new DashboardJson(name, <any>undefined, { urn })
            case "datadog:index/dashboardList:DashboardList":
                return new DashboardList(name, <any>undefined, { urn })
            case "datadog:index/downtime:Downtime":
                return new Downtime(name, <any>undefined, { urn })
            case "datadog:index/logsArchive:LogsArchive":
                return new LogsArchive(name, <any>undefined, { urn })
            case "datadog:index/logsArchiveOrder:LogsArchiveOrder":
                return new LogsArchiveOrder(name, <any>undefined, { urn })
            case "datadog:index/logsCustomPipeline:LogsCustomPipeline":
                return new LogsCustomPipeline(name, <any>undefined, { urn })
            case "datadog:index/logsIndex:LogsIndex":
                return new LogsIndex(name, <any>undefined, { urn })
            case "datadog:index/logsIndexOrder:LogsIndexOrder":
                return new LogsIndexOrder(name, <any>undefined, { urn })
            case "datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline":
                return new LogsIntegrationPipeline(name, <any>undefined, { urn })
            case "datadog:index/logsMetric:LogsMetric":
                return new LogsMetric(name, <any>undefined, { urn })
            case "datadog:index/logsPipelineOrder:LogsPipelineOrder":
                return new LogsPipelineOrder(name, <any>undefined, { urn })
            case "datadog:index/metricMetadata:MetricMetadata":
                return new MetricMetadata(name, <any>undefined, { urn })
            case "datadog:index/metricTagConfiguration:MetricTagConfiguration":
                return new MetricTagConfiguration(name, <any>undefined, { urn })
            case "datadog:index/monitor:Monitor":
                return new Monitor(name, <any>undefined, { urn })
            case "datadog:index/monitorJson:MonitorJson":
                return new MonitorJson(name, <any>undefined, { urn })
            case "datadog:index/organizationSettings:OrganizationSettings":
                return new OrganizationSettings(name, <any>undefined, { urn })
            case "datadog:index/role:Role":
                return new Role(name, <any>undefined, { urn })
            case "datadog:index/securityMonitoringDefaultRule:SecurityMonitoringDefaultRule":
                return new SecurityMonitoringDefaultRule(name, <any>undefined, { urn })
            case "datadog:index/securityMonitoringFilter:SecurityMonitoringFilter":
                return new SecurityMonitoringFilter(name, <any>undefined, { urn })
            case "datadog:index/securityMonitoringRule:SecurityMonitoringRule":
                return new SecurityMonitoringRule(name, <any>undefined, { urn })
            case "datadog:index/serviceLevelObjective:ServiceLevelObjective":
                return new ServiceLevelObjective(name, <any>undefined, { urn })
            case "datadog:index/sloCorrection:SloCorrection":
                return new SloCorrection(name, <any>undefined, { urn })
            case "datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable":
                return new SyntheticsGlobalVariable(name, <any>undefined, { urn })
            case "datadog:index/syntheticsPrivateLocation:SyntheticsPrivateLocation":
                return new SyntheticsPrivateLocation(name, <any>undefined, { urn })
            case "datadog:index/syntheticsTest:SyntheticsTest":
                return new SyntheticsTest(name, <any>undefined, { urn })
            case "datadog:index/user:User":
                return new User(name, <any>undefined, { urn })
            case "datadog:index/webhook:Webhook":
                return new Webhook(name, <any>undefined, { urn })
            case "datadog:index/webhookCustomVariable:WebhookCustomVariable":
                return new WebhookCustomVariable(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("datadog", "index/apiKey", _module)
pulumi.runtime.registerResourceModule("datadog", "index/applicationKey", _module)
pulumi.runtime.registerResourceModule("datadog", "index/authnMapping", _module)
pulumi.runtime.registerResourceModule("datadog", "index/childOrganization", _module)
pulumi.runtime.registerResourceModule("datadog", "index/cloudWorkloadSecurityAgentRule", _module)
pulumi.runtime.registerResourceModule("datadog", "index/dashboard", _module)
pulumi.runtime.registerResourceModule("datadog", "index/dashboardJson", _module)
pulumi.runtime.registerResourceModule("datadog", "index/dashboardList", _module)
pulumi.runtime.registerResourceModule("datadog", "index/downtime", _module)
pulumi.runtime.registerResourceModule("datadog", "index/logsArchive", _module)
pulumi.runtime.registerResourceModule("datadog", "index/logsArchiveOrder", _module)
pulumi.runtime.registerResourceModule("datadog", "index/logsCustomPipeline", _module)
pulumi.runtime.registerResourceModule("datadog", "index/logsIndex", _module)
pulumi.runtime.registerResourceModule("datadog", "index/logsIndexOrder", _module)
pulumi.runtime.registerResourceModule("datadog", "index/logsIntegrationPipeline", _module)
pulumi.runtime.registerResourceModule("datadog", "index/logsMetric", _module)
pulumi.runtime.registerResourceModule("datadog", "index/logsPipelineOrder", _module)
pulumi.runtime.registerResourceModule("datadog", "index/metricMetadata", _module)
pulumi.runtime.registerResourceModule("datadog", "index/metricTagConfiguration", _module)
pulumi.runtime.registerResourceModule("datadog", "index/monitor", _module)
pulumi.runtime.registerResourceModule("datadog", "index/monitorJson", _module)
pulumi.runtime.registerResourceModule("datadog", "index/organizationSettings", _module)
pulumi.runtime.registerResourceModule("datadog", "index/role", _module)
pulumi.runtime.registerResourceModule("datadog", "index/securityMonitoringDefaultRule", _module)
pulumi.runtime.registerResourceModule("datadog", "index/securityMonitoringFilter", _module)
pulumi.runtime.registerResourceModule("datadog", "index/securityMonitoringRule", _module)
pulumi.runtime.registerResourceModule("datadog", "index/serviceLevelObjective", _module)
pulumi.runtime.registerResourceModule("datadog", "index/sloCorrection", _module)
pulumi.runtime.registerResourceModule("datadog", "index/syntheticsGlobalVariable", _module)
pulumi.runtime.registerResourceModule("datadog", "index/syntheticsPrivateLocation", _module)
pulumi.runtime.registerResourceModule("datadog", "index/syntheticsTest", _module)
pulumi.runtime.registerResourceModule("datadog", "index/user", _module)
pulumi.runtime.registerResourceModule("datadog", "index/webhook", _module)
pulumi.runtime.registerResourceModule("datadog", "index/webhookCustomVariable", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("datadog", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:datadog") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
