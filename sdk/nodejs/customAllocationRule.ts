// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Datadog Custom Allocation Rule resource. Custom allocation rules allow you to allocate cloud costs based on tags and filters.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import datadog:index/customAllocationRule:CustomAllocationRule new_list <rule_id>
 * ```
 */
export class CustomAllocationRule extends pulumi.CustomResource {
    /**
     * Get an existing CustomAllocationRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomAllocationRuleState, opts?: pulumi.CustomResourceOptions): CustomAllocationRule {
        return new CustomAllocationRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/customAllocationRule:CustomAllocationRule';

    /**
     * Returns true if the given object is an instance of CustomAllocationRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomAllocationRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomAllocationRule.__pulumiType;
    }

    declare public readonly costsToAllocates: pulumi.Output<outputs.CustomAllocationRuleCostsToAllocate[] | undefined>;
    /**
     * The timestamp (in ISO 8601 format) when the rule was created.
     */
    declare public /*out*/ readonly created: pulumi.Output<string>;
    /**
     * Whether the custom allocation rule is enabled.
     */
    declare public readonly enabled: pulumi.Output<boolean>;
    /**
     * The UUID of the user who last modified the rule.
     */
    declare public /*out*/ readonly lastModifiedUserUuid: pulumi.Output<string>;
    /**
     * The order of the rule in the list of custom allocation rules. This field is read-only. Use the `datadog.CustomAllocationRules` resource to manage rule order.
     */
    declare public /*out*/ readonly orderId: pulumi.Output<number>;
    /**
     * List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
     */
    declare public readonly providernames: pulumi.Output<string[]>;
    /**
     * Whether the rule was rejected by the API during creation due to validation errors. This field is read-only.
     */
    declare public /*out*/ readonly rejected: pulumi.Output<boolean>;
    /**
     * The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
     */
    declare public readonly ruleName: pulumi.Output<string>;
    declare public readonly strategy: pulumi.Output<outputs.CustomAllocationRuleStrategy | undefined>;
    /**
     * The timestamp (in ISO 8601 format) when the rule was last updated.
     */
    declare public /*out*/ readonly updated: pulumi.Output<string>;
    /**
     * The version number of the rule. This increments each time the rule is updated.
     */
    declare public /*out*/ readonly version: pulumi.Output<number>;

    /**
     * Create a CustomAllocationRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomAllocationRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomAllocationRuleArgs | CustomAllocationRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomAllocationRuleState | undefined;
            resourceInputs["costsToAllocates"] = state?.costsToAllocates;
            resourceInputs["created"] = state?.created;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["lastModifiedUserUuid"] = state?.lastModifiedUserUuid;
            resourceInputs["orderId"] = state?.orderId;
            resourceInputs["providernames"] = state?.providernames;
            resourceInputs["rejected"] = state?.rejected;
            resourceInputs["ruleName"] = state?.ruleName;
            resourceInputs["strategy"] = state?.strategy;
            resourceInputs["updated"] = state?.updated;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as CustomAllocationRuleArgs | undefined;
            if (args?.enabled === undefined && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if (args?.providernames === undefined && !opts.urn) {
                throw new Error("Missing required property 'providernames'");
            }
            if (args?.ruleName === undefined && !opts.urn) {
                throw new Error("Missing required property 'ruleName'");
            }
            resourceInputs["costsToAllocates"] = args?.costsToAllocates;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["providernames"] = args?.providernames;
            resourceInputs["ruleName"] = args?.ruleName;
            resourceInputs["strategy"] = args?.strategy;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["lastModifiedUserUuid"] = undefined /*out*/;
            resourceInputs["orderId"] = undefined /*out*/;
            resourceInputs["rejected"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomAllocationRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomAllocationRule resources.
 */
export interface CustomAllocationRuleState {
    costsToAllocates?: pulumi.Input<pulumi.Input<inputs.CustomAllocationRuleCostsToAllocate>[]>;
    /**
     * The timestamp (in ISO 8601 format) when the rule was created.
     */
    created?: pulumi.Input<string>;
    /**
     * Whether the custom allocation rule is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The UUID of the user who last modified the rule.
     */
    lastModifiedUserUuid?: pulumi.Input<string>;
    /**
     * The order of the rule in the list of custom allocation rules. This field is read-only. Use the `datadog.CustomAllocationRules` resource to manage rule order.
     */
    orderId?: pulumi.Input<number>;
    /**
     * List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
     */
    providernames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether the rule was rejected by the API during creation due to validation errors. This field is read-only.
     */
    rejected?: pulumi.Input<boolean>;
    /**
     * The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
     */
    ruleName?: pulumi.Input<string>;
    strategy?: pulumi.Input<inputs.CustomAllocationRuleStrategy>;
    /**
     * The timestamp (in ISO 8601 format) when the rule was last updated.
     */
    updated?: pulumi.Input<string>;
    /**
     * The version number of the rule. This increments each time the rule is updated.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CustomAllocationRule resource.
 */
export interface CustomAllocationRuleArgs {
    costsToAllocates?: pulumi.Input<pulumi.Input<inputs.CustomAllocationRuleCostsToAllocate>[]>;
    /**
     * Whether the custom allocation rule is enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
     */
    providernames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
     */
    ruleName: pulumi.Input<string>;
    strategy?: pulumi.Input<inputs.CustomAllocationRuleStrategy>;
}
