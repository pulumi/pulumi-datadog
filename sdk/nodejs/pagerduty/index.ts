// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { IntegrationArgs, IntegrationState } from "./integration";
export type Integration = import("./integration").Integration;
export const Integration: typeof import("./integration").Integration = null as any;
utilities.lazyLoad(exports, ["Integration"], () => require("./integration"));

export { ServiceObjectArgs, ServiceObjectState } from "./serviceObject";
export type ServiceObject = import("./serviceObject").ServiceObject;
export const ServiceObject: typeof import("./serviceObject").ServiceObject = null as any;
utilities.lazyLoad(exports, ["ServiceObject"], () => require("./serviceObject"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "datadog:pagerduty/integration:Integration":
                return new Integration(name, <any>undefined, { urn })
            case "datadog:pagerduty/serviceObject:ServiceObject":
                return new ServiceObject(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("datadog", "pagerduty/integration", _module)
pulumi.runtime.registerResourceModule("datadog", "pagerduty/serviceObject", _module)
