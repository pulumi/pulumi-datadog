// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides access to individual Service Objects of Datadog - PagerDuty integrations. Note that the Datadog - PagerDuty integration must be activated in the Datadog UI in order for this resource to be usable.
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const testingFoo = new datadog.pagerduty.ServiceObject("testing_foo", {
 *     serviceName: "testing_foo",
 *     serviceKey: "9876543210123456789",
 * });
 * const testingBar = new datadog.pagerduty.ServiceObject("testing_bar", {
 *     serviceName: "testing_bar",
 *     serviceKey: "54321098765432109876",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Pagerduty service object can be imported using the service_name, while the service_key should be passed by setting the environment variable SERVICE_KEY
 *
 * ```sh
 * $ pulumi import datadog:pagerduty/serviceObject:ServiceObject SERVICE_KEY=${service_key} datadog_integration_pagerduty_service_object.foo ${service_name}
 * ```
 */
export class ServiceObject extends pulumi.CustomResource {
    /**
     * Get an existing ServiceObject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceObjectState, opts?: pulumi.CustomResourceOptions): ServiceObject {
        return new ServiceObject(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:pagerduty/serviceObject:ServiceObject';

    /**
     * Returns true if the given object is an instance of ServiceObject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceObject {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceObject.__pulumiType;
    }

    /**
     * Your Service name associated service key in PagerDuty. This key may also be referred to as an Integration Key or Routing Key in the Pagerduty Integration documentation to have it destroyed and recreated.
     */
    public readonly serviceKey!: pulumi.Output<string>;
    /**
     * Your Service name in PagerDuty.
     */
    public readonly serviceName!: pulumi.Output<string>;

    /**
     * Create a ServiceObject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceObjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceObjectArgs | ServiceObjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceObjectState | undefined;
            resourceInputs["serviceKey"] = state ? state.serviceKey : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
        } else {
            const args = argsOrState as ServiceObjectArgs | undefined;
            if ((!args || args.serviceKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceKey'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["serviceKey"] = args?.serviceKey ? pulumi.secret(args.serviceKey) : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["serviceKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ServiceObject.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceObject resources.
 */
export interface ServiceObjectState {
    /**
     * Your Service name associated service key in PagerDuty. This key may also be referred to as an Integration Key or Routing Key in the Pagerduty Integration documentation to have it destroyed and recreated.
     */
    serviceKey?: pulumi.Input<string>;
    /**
     * Your Service name in PagerDuty.
     */
    serviceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceObject resource.
 */
export interface ServiceObjectArgs {
    /**
     * Your Service name associated service key in PagerDuty. This key may also be referred to as an Integration Key or Routing Key in the Pagerduty Integration documentation to have it destroyed and recreated.
     */
    serviceKey: pulumi.Input<string>;
    /**
     * Your Service name in PagerDuty.
     */
    serviceName: pulumi.Input<string>;
}
