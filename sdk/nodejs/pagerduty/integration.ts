// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Provides a Datadog - PagerDuty resource. This can be used to create and manage Datadog - PagerDuty integration. See also [PagerDuty Integration Guide](https://www.pagerduty.com/docs/guides/datadog-integration-guide/).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * // Note: Until terraform-provider-datadog version 2.1.0, service objects under the services key were specified inside the datadog_integration_pagerduty resource. This was incompatible with multi-configuration-file setups, where users wanted to have individual service objects controlled from different Terraform configuration files. The recommended approach now is specifying service objects as individual resources using datadog_integration_pagerduty_service_object and adding individual_services = true to the datadog_integration_pagerduty object.
 * // Services as Individual Resources
 * const pdIntegration = new datadog.pagerduty.Integration("pdIntegration", {
 *     individualServices: true,
 *     schedules: [
 *         "https://ddog.pagerduty.com/schedules/X123VF",
 *         "https://ddog.pagerduty.com/schedules/X321XX",
 *     ],
 *     subdomain: "ddog",
 *     apiToken: "38457822378273432587234242874",
 * });
 * const testingFooServiceObject = new datadog.pagerduty.ServiceObject("testingFooServiceObject", {
 *     serviceName: "testing_foo",
 *     serviceKey: "9876543210123456789",
 * }, {
 *     dependsOn: ["datadog_integration_pagerduty.pd"],
 * });
 * const testingBarServiceObject = new datadog.pagerduty.ServiceObject("testingBarServiceObject", {
 *     serviceName: "testing_bar",
 *     serviceKey: "54321098765432109876",
 * }, {
 *     dependsOn: ["datadog_integration_pagerduty.pd"],
 * });
 * // Inline Services
 * // With Terraform < 0.12.0 (terraform-provider-datadog < 1.9.0):
 * // Create a new Datadog - PagerDuty integration
 * const pdDatadogPagerduty_integrationIntegration = new datadog.pagerduty.Integration("pdDatadogPagerduty/integrationIntegration", {
 *     services: [
 *         {
 *             serviceName: "testing_foo",
 *             serviceKey: "9876543210123456789",
 *         },
 *         {
 *             serviceName: "testing_bar",
 *             serviceKey: "54321098765432109876",
 *         },
 *     ],
 *     schedules: [
 *         "https://ddog.pagerduty.com/schedules/X123VF",
 *         "https://ddog.pagerduty.com/schedules/X321XX",
 *     ],
 *     subdomain: "ddog",
 *     apiToken: "38457822378273432587234242874",
 * });
 * const pdServices = {
 *     testing_foo: "9876543210123456789",
 *     testing_bar: "54321098765432109876",
 * };
 * // Create a new Datadog - PagerDuty integration
 * const pdDatadogPagerduty_integrationIntegration1 = new datadog.pagerduty.Integration("pdDatadogPagerduty/integrationIntegration1", {
 *     dynamic: [{
 *         forEach: pdServices,
 *         content: [{
 *             serviceName: services.key,
 *             serviceKey: services.value,
 *         }],
 *     }],
 *     schedules: [
 *         "https://ddog.pagerduty.com/schedules/X123VF",
 *         "https://ddog.pagerduty.com/schedules/X321XX",
 *     ],
 *     subdomain: "ddog",
 *     apiToken: "38457822378273432587234242874",
 * });
 * // Migrating from Inline Services to Individual Resources
 * // Migrating from usage of inline services to individual resources is very simple. The following example shows how to convert an existing inline services configuration to configuration using individual resources. Doing analogous change and running terraform apply after every step is all that's necessary to migrate.
 * // First step - this is what the configuration looked like initially
 * const myPdServices = {
 *     testing_foo: "9876543210123456789",
 *     testing_bar: "54321098765432109876",
 * };
 * // Create a new Datadog - PagerDuty integration
 * const pdDatadogPagerduty_integrationIntegration2 = new datadog.pagerduty.Integration("pdDatadogPagerduty/integrationIntegration2", {
 *     dynamic: [{
 *         forEach: pdServices,
 *         content: [{
 *             serviceName: services.key,
 *             serviceKey: services.value,
 *         }],
 *     }],
 *     schedules: [
 *         "https://ddog.pagerduty.com/schedules/X123VF",
 *         "https://ddog.pagerduty.com/schedules/X321XX",
 *     ],
 *     subdomain: "ddog",
 *     apiToken: "38457822378273432587234242874",
 * });
 * // Second step - this will remove the inline-defined service objects
 * // Note that during this step, `individual_services` must not be defined
 * const pdDatadogPagerduty_integrationIntegration3 = new datadog.pagerduty.Integration("pdDatadogPagerduty/integrationIntegration3", {
 *     schedules: [
 *         "https://ddog.pagerduty.com/schedules/X123VF",
 *         "https://ddog.pagerduty.com/schedules/X321XX",
 *     ],
 *     subdomain: "ddog",
 *     apiToken: "38457822378273432587234242874",
 * });
 * // Third step - this will reintroduce the service objects as individual resources
 * const pdPagerduty_integrationIntegration = new datadog.pagerduty.Integration("pdPagerduty/integrationIntegration", {
 *     individualServices: true,
 *     schedules: [
 *         "https://ddog.pagerduty.com/schedules/X123VF",
 *         "https://ddog.pagerduty.com/schedules/X321XX",
 *     ],
 *     subdomain: "ddog",
 *     apiToken: "38457822378273432587234242874",
 * });
 * const testingFooPagerduty_serviceObjectServiceObject = new datadog.pagerduty.ServiceObject("testingFooPagerduty/serviceObjectServiceObject", {
 *     serviceName: "testing_foo",
 *     serviceKey: "9876543210123456789",
 * }, {
 *     dependsOn: ["datadog_integration_pagerduty.pd"],
 * });
 * const testingBarPagerduty_serviceObjectServiceObject = new datadog.pagerduty.ServiceObject("testingBarPagerduty/serviceObjectServiceObject", {
 *     serviceName: "testing_bar",
 *     serviceKey: "54321098765432109876",
 * }, {
 *     dependsOn: ["datadog_integration_pagerduty.pd"],
 * });
 * ```
 *
 * <!-- schema generated by tfplugindocs -->
 */
export class Integration extends pulumi.CustomResource {
    /**
     * Get an existing Integration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntegrationState, opts?: pulumi.CustomResourceOptions): Integration {
        return new Integration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:pagerduty/integration:Integration';

    /**
     * Returns true if the given object is an instance of Integration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Integration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Integration.__pulumiType;
    }

    /**
     * Your PagerDuty API token.
     */
    public readonly apiToken!: pulumi.Output<string | undefined>;
    /**
     * Boolean to specify whether or not individual service objects specified by  resource are to be used. Mutually exclusive with services key.
     */
    public readonly individualServices!: pulumi.Output<boolean | undefined>;
    /**
     * Array of your schedule URLs.
     */
    public readonly schedules!: pulumi.Output<string[] | undefined>;
    /**
     * A list of service names and service keys.  set "individualpagerdutyservice_object
     *
     * @deprecated set "individual_services" to true and use datadog_pagerduty_integration_service_object
     */
    public readonly services!: pulumi.Output<outputs.pagerduty.IntegrationService[] | undefined>;
    /**
     * Your PagerDuty accountâ€™s personalized subdomain name.
     */
    public readonly subdomain!: pulumi.Output<string>;

    /**
     * Create a Integration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntegrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntegrationArgs | IntegrationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntegrationState | undefined;
            inputs["apiToken"] = state ? state.apiToken : undefined;
            inputs["individualServices"] = state ? state.individualServices : undefined;
            inputs["schedules"] = state ? state.schedules : undefined;
            inputs["services"] = state ? state.services : undefined;
            inputs["subdomain"] = state ? state.subdomain : undefined;
        } else {
            const args = argsOrState as IntegrationArgs | undefined;
            if ((!args || args.subdomain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subdomain'");
            }
            inputs["apiToken"] = args ? args.apiToken : undefined;
            inputs["individualServices"] = args ? args.individualServices : undefined;
            inputs["schedules"] = args ? args.schedules : undefined;
            inputs["services"] = args ? args.services : undefined;
            inputs["subdomain"] = args ? args.subdomain : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Integration.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Integration resources.
 */
export interface IntegrationState {
    /**
     * Your PagerDuty API token.
     */
    readonly apiToken?: pulumi.Input<string>;
    /**
     * Boolean to specify whether or not individual service objects specified by  resource are to be used. Mutually exclusive with services key.
     */
    readonly individualServices?: pulumi.Input<boolean>;
    /**
     * Array of your schedule URLs.
     */
    readonly schedules?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of service names and service keys.  set "individualpagerdutyservice_object
     *
     * @deprecated set "individual_services" to true and use datadog_pagerduty_integration_service_object
     */
    readonly services?: pulumi.Input<pulumi.Input<inputs.pagerduty.IntegrationService>[]>;
    /**
     * Your PagerDuty accountâ€™s personalized subdomain name.
     */
    readonly subdomain?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Integration resource.
 */
export interface IntegrationArgs {
    /**
     * Your PagerDuty API token.
     */
    readonly apiToken?: pulumi.Input<string>;
    /**
     * Boolean to specify whether or not individual service objects specified by  resource are to be used. Mutually exclusive with services key.
     */
    readonly individualServices?: pulumi.Input<boolean>;
    /**
     * Array of your schedule URLs.
     */
    readonly schedules?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of service names and service keys.  set "individualpagerdutyservice_object
     *
     * @deprecated set "individual_services" to true and use datadog_pagerduty_integration_service_object
     */
    readonly services?: pulumi.Input<pulumi.Input<inputs.pagerduty.IntegrationService>[]>;
    /**
     * Your PagerDuty accountâ€™s personalized subdomain name.
     */
    readonly subdomain: pulumi.Input<string>;
}
