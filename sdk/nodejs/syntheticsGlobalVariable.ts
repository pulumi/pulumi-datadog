// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Datadog synthetics global variable resource. This can be used to create and manage Datadog synthetics global variables.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * const testApi = new datadog.SyntheticsGlobalVariable("test_api", {
 *     description: "Description of the variable",
 *     name: "EXAMPLE_VARIABLE",
 *     tags: [
 *         "foo:bar",
 *         "env:test",
 *     ],
 *     value: "variable-value",
 * });
 * ```
 * ## Secure global variables
 *
 * Secure global variables are not supported for now.
 *
 * ## Import
 *
 * Synthetics global variables can be imported using their string ID, e.g.
 *
 * ```sh
 *  $ pulumi import datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable fizz abcde123-fghi-456-jkl-mnopqrstuv
 * ```
 */
export class SyntheticsGlobalVariable extends pulumi.CustomResource {
    /**
     * Get an existing SyntheticsGlobalVariable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SyntheticsGlobalVariableState, opts?: pulumi.CustomResourceOptions): SyntheticsGlobalVariable {
        return new SyntheticsGlobalVariable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable';

    /**
     * Returns true if the given object is an instance of SyntheticsGlobalVariable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SyntheticsGlobalVariable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SyntheticsGlobalVariable.__pulumiType;
    }

    public readonly description!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<string[] | undefined>;
    public readonly value!: pulumi.Output<string>;

    /**
     * Create a SyntheticsGlobalVariable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SyntheticsGlobalVariableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SyntheticsGlobalVariableArgs | SyntheticsGlobalVariableState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as SyntheticsGlobalVariableState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as SyntheticsGlobalVariableArgs | undefined;
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.value === undefined) {
                throw new Error("Missing required property 'value'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["value"] = args ? args.value : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(SyntheticsGlobalVariable.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SyntheticsGlobalVariable resources.
 */
export interface SyntheticsGlobalVariableState {
    readonly description?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    readonly value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SyntheticsGlobalVariable resource.
 */
export interface SyntheticsGlobalVariableArgs {
    readonly description?: pulumi.Input<string>;
    readonly name: pulumi.Input<string>;
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    readonly value: pulumi.Input<string>;
}
