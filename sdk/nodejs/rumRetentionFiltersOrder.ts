// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Datadog RumRetentionFiltersOrder resource. This is used to manage the order of Datadog RUM retention filters. Please note that retentionFilterIds should contain all IDs of retention filters, including the default ones created internally for a given RUM application.
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import datadog:index/rumRetentionFiltersOrder:RumRetentionFiltersOrder testing_rum_retention_filters_order "<application_id>"
 * ```
 */
export class RumRetentionFiltersOrder extends pulumi.CustomResource {
    /**
     * Get an existing RumRetentionFiltersOrder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RumRetentionFiltersOrderState, opts?: pulumi.CustomResourceOptions): RumRetentionFiltersOrder {
        return new RumRetentionFiltersOrder(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/rumRetentionFiltersOrder:RumRetentionFiltersOrder';

    /**
     * Returns true if the given object is an instance of RumRetentionFiltersOrder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RumRetentionFiltersOrder {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RumRetentionFiltersOrder.__pulumiType;
    }

    /**
     * RUM application ID.
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
     */
    public readonly retentionFilterIds!: pulumi.Output<string[]>;

    /**
     * Create a RumRetentionFiltersOrder resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RumRetentionFiltersOrderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RumRetentionFiltersOrderArgs | RumRetentionFiltersOrderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RumRetentionFiltersOrderState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["retentionFilterIds"] = state ? state.retentionFilterIds : undefined;
        } else {
            const args = argsOrState as RumRetentionFiltersOrderArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.retentionFilterIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'retentionFilterIds'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["retentionFilterIds"] = args ? args.retentionFilterIds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RumRetentionFiltersOrder.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RumRetentionFiltersOrder resources.
 */
export interface RumRetentionFiltersOrderState {
    /**
     * RUM application ID.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
     */
    retentionFilterIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a RumRetentionFiltersOrder resource.
 */
export interface RumRetentionFiltersOrderArgs {
    /**
     * RUM application ID.
     */
    applicationId: pulumi.Input<string>;
    /**
     * RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
     */
    retentionFilterIds: pulumi.Input<pulumi.Input<string>[]>;
}
