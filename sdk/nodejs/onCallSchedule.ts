// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Datadog On-Call schedule resource. This can be used to create and manage Datadog On-Call schedules.
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * Import an existing on_call_schedule
 *
 * ```sh
 * $ pulumi import datadog:index/onCallSchedule:OnCallSchedule test "b03a07d5-49da-43e9-83b4-5d84969b588b"
 * ```
 */
export class OnCallSchedule extends pulumi.CustomResource {
    /**
     * Get an existing OnCallSchedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OnCallScheduleState, opts?: pulumi.CustomResourceOptions): OnCallSchedule {
        return new OnCallSchedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/onCallSchedule:OnCallSchedule';

    /**
     * Returns true if the given object is an instance of OnCallSchedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OnCallSchedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OnCallSchedule.__pulumiType;
    }

    /**
     * List of layers for the schedule.
     */
    declare public readonly layers: pulumi.Output<outputs.OnCallScheduleLayer[] | undefined>;
    /**
     * A human-readable name for the new schedule.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * A list of team ids associated with the schedule.
     */
    declare public readonly teams: pulumi.Output<string[]>;
    /**
     * The time zone in which the schedule is defined.
     */
    declare public readonly timeZone: pulumi.Output<string>;

    /**
     * Create a OnCallSchedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OnCallScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OnCallScheduleArgs | OnCallScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OnCallScheduleState | undefined;
            resourceInputs["layers"] = state?.layers;
            resourceInputs["name"] = state?.name;
            resourceInputs["teams"] = state?.teams;
            resourceInputs["timeZone"] = state?.timeZone;
        } else {
            const args = argsOrState as OnCallScheduleArgs | undefined;
            if (args?.name === undefined && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if (args?.timeZone === undefined && !opts.urn) {
                throw new Error("Missing required property 'timeZone'");
            }
            resourceInputs["layers"] = args?.layers;
            resourceInputs["name"] = args?.name;
            resourceInputs["teams"] = args?.teams;
            resourceInputs["timeZone"] = args?.timeZone;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OnCallSchedule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OnCallSchedule resources.
 */
export interface OnCallScheduleState {
    /**
     * List of layers for the schedule.
     */
    layers?: pulumi.Input<pulumi.Input<inputs.OnCallScheduleLayer>[]>;
    /**
     * A human-readable name for the new schedule.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of team ids associated with the schedule.
     */
    teams?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time zone in which the schedule is defined.
     */
    timeZone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OnCallSchedule resource.
 */
export interface OnCallScheduleArgs {
    /**
     * List of layers for the schedule.
     */
    layers?: pulumi.Input<pulumi.Input<inputs.OnCallScheduleLayer>[]>;
    /**
     * A human-readable name for the new schedule.
     */
    name: pulumi.Input<string>;
    /**
     * A list of team ids associated with the schedule.
     */
    teams?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The time zone in which the schedule is defined.
     */
    timeZone: pulumi.Input<string>;
}
