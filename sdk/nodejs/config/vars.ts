// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("datadog");

/**
 * (Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.
 */
export declare const apiKey: string | undefined;
Object.defineProperty(exports, "apiKey", {
    get() {
        return __config.get("apiKey");
    },
    enumerable: true,
});

/**
 * The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the `/api/`
 * path. For example, `https://api.datadoghq.com/` is a correct value, while `https://api.datadoghq.com/api/` is not. And
 * if you're working with "EU" version of Datadog, use `https://api.datadoghq.eu/`. Other Datadog region examples:
 * `https://api.us5.datadoghq.com/`, `https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See
 * https://docs.datadoghq.com/getting_started/site/ for all available regions.
 */
export declare const apiUrl: string | undefined;
Object.defineProperty(exports, "apiUrl", {
    get() {
        return __config.get("apiUrl");
    },
    enumerable: true,
});

/**
 * (Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.
 */
export declare const appKey: string | undefined;
Object.defineProperty(exports, "appKey", {
    get() {
        return __config.get("appKey");
    },
    enumerable: true,
});

/**
 * The HTTP request retry back off base. Defaults to 2.
 */
export declare const httpClientRetryBackoffBase: number | undefined;
Object.defineProperty(exports, "httpClientRetryBackoffBase", {
    get() {
        return __config.getObject<number>("httpClientRetryBackoffBase");
    },
    enumerable: true,
});

/**
 * The HTTP request retry back off multiplier. Defaults to 2.
 */
export declare const httpClientRetryBackoffMultiplier: number | undefined;
Object.defineProperty(exports, "httpClientRetryBackoffMultiplier", {
    get() {
        return __config.getObject<number>("httpClientRetryBackoffMultiplier");
    },
    enumerable: true,
});

/**
 * Enables request retries on HTTP status codes 429 and 5xx. Valid values are [`true`, `false`]. Defaults to `true`.
 */
export declare const httpClientRetryEnabled: string | undefined;
Object.defineProperty(exports, "httpClientRetryEnabled", {
    get() {
        return __config.get("httpClientRetryEnabled");
    },
    enumerable: true,
});

/**
 * The HTTP request maximum retry number. Defaults to 3.
 */
export declare const httpClientRetryMaxRetries: number | undefined;
Object.defineProperty(exports, "httpClientRetryMaxRetries", {
    get() {
        return __config.getObject<number>("httpClientRetryMaxRetries");
    },
    enumerable: true,
});

/**
 * The HTTP request retry timeout period. Defaults to 60 seconds.
 */
export declare const httpClientRetryTimeout: number | undefined;
Object.defineProperty(exports, "httpClientRetryTimeout", {
    get() {
        return __config.getObject<number>("httpClientRetryTimeout");
    },
    enumerable: true,
});

/**
 * Enables validation of the provided API key during provider initialization. Valid values are [`true`, `false`]. Default
 * is true. When false, api_key won't be checked.
 */
export declare const validate: string | undefined;
Object.defineProperty(exports, "validate", {
    get() {
        return __config.get("validate");
    },
    enumerable: true,
});

