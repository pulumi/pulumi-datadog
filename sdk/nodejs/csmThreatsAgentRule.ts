// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a Datadog CSM Threats Agent Rule API resource.
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * CSM Agent Rules can be imported using ID. For example:
 *
 * ```sh
 * $ pulumi import datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule my_agent_rule m0o-hto-lkb
 * ```
 *
 * #Â CSM Agent Rules can also be imported using the policy ID and the rule ID. For example:
 *
 * ```sh
 * $ pulumi import datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule my_agent_rule jm4-lwh-8cs:m0o-hto-lkb
 * ```
 */
export class CsmThreatsAgentRule extends pulumi.CustomResource {
    /**
     * Get an existing CsmThreatsAgentRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CsmThreatsAgentRuleState, opts?: pulumi.CustomResourceOptions): CsmThreatsAgentRule {
        return new CsmThreatsAgentRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule';

    /**
     * Returns true if the given object is an instance of CsmThreatsAgentRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CsmThreatsAgentRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CsmThreatsAgentRule.__pulumiType;
    }

    /**
     * The list of actions the rule can perform
     */
    public readonly actions!: pulumi.Output<outputs.CsmThreatsAgentRuleAction[] | undefined>;
    /**
     * A description for the Agent rule.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Indicates whether the Agent rule is enabled. Must not be used without policy_id.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The SECL expression of the Agent rule
     */
    public readonly expression!: pulumi.Output<string>;
    /**
     * The name of the Agent rule.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the agent policy in which the rule is saved
     */
    public readonly policyId!: pulumi.Output<string | undefined>;
    /**
     * The list of product tags associated with the rule
     */
    public readonly productTags!: pulumi.Output<string[]>;

    /**
     * Create a CsmThreatsAgentRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CsmThreatsAgentRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CsmThreatsAgentRuleArgs | CsmThreatsAgentRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CsmThreatsAgentRuleState | undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["expression"] = state ? state.expression : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["productTags"] = state ? state.productTags : undefined;
        } else {
            const args = argsOrState as CsmThreatsAgentRuleArgs | undefined;
            if ((!args || args.expression === undefined) && !opts.urn) {
                throw new Error("Missing required property 'expression'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["expression"] = args ? args.expression : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["policyId"] = args ? args.policyId : undefined;
            resourceInputs["productTags"] = args ? args.productTags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CsmThreatsAgentRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CsmThreatsAgentRule resources.
 */
export interface CsmThreatsAgentRuleState {
    /**
     * The list of actions the rule can perform
     */
    actions?: pulumi.Input<pulumi.Input<inputs.CsmThreatsAgentRuleAction>[]>;
    /**
     * A description for the Agent rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the Agent rule is enabled. Must not be used without policy_id.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The SECL expression of the Agent rule
     */
    expression?: pulumi.Input<string>;
    /**
     * The name of the Agent rule.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the agent policy in which the rule is saved
     */
    policyId?: pulumi.Input<string>;
    /**
     * The list of product tags associated with the rule
     */
    productTags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a CsmThreatsAgentRule resource.
 */
export interface CsmThreatsAgentRuleArgs {
    /**
     * The list of actions the rule can perform
     */
    actions?: pulumi.Input<pulumi.Input<inputs.CsmThreatsAgentRuleAction>[]>;
    /**
     * A description for the Agent rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Indicates whether the Agent rule is enabled. Must not be used without policy_id.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The SECL expression of the Agent rule
     */
    expression: pulumi.Input<string>;
    /**
     * The name of the Agent rule.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the agent policy in which the rule is saved
     */
    policyId?: pulumi.Input<string>;
    /**
     * The list of product tags associated with the rule
     */
    productTags?: pulumi.Input<pulumi.Input<string>[]>;
}
