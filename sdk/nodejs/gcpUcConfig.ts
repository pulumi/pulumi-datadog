// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Datadog GcpUcConfig resource. This can be used to create and manage Datadog gcp_uc_config.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datadog from "@pulumi/datadog";
 *
 * // Create new GCP Usage Cost configuration resource
 * const example = new datadog.GcpUcConfig("example", {
 *     billingAccountId: "123456_ABCDEF_123456",
 *     bucketName: "my-gcp-cost-bucket",
 *     exportDatasetName: "billing_export",
 *     exportPrefix: "datadog_cloud_cost_detailed_usage_export",
 *     exportProjectName: "my-gcp-project",
 *     serviceAccount: "datadog-cost-management@my-gcp-project.iam.gserviceaccount.com",
 * });
 * ```
 *
 * ## Import
 *
 * The `pulumi import` command can be used, for example:
 *
 * ```sh
 * $ pulumi import datadog:index/gcpUcConfig:GcpUcConfig example <cloud_account_id>
 * ```
 */
export class GcpUcConfig extends pulumi.CustomResource {
    /**
     * Get an existing GcpUcConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GcpUcConfigState, opts?: pulumi.CustomResourceOptions): GcpUcConfig {
        return new GcpUcConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datadog:index/gcpUcConfig:GcpUcConfig';

    /**
     * Returns true if the given object is an instance of GcpUcConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GcpUcConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GcpUcConfig.__pulumiType;
    }

    /**
     * The Google Cloud account ID.
     */
    declare public readonly billingAccountId: pulumi.Output<string>;
    /**
     * The Google Cloud bucket name used to store the Usage Cost export.
     */
    declare public readonly bucketName: pulumi.Output<string>;
    /**
     * The timestamp when the GCP UC configuration was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The dataset name used for the GCP Usage Cost export.
     */
    declare public /*out*/ readonly dataset: pulumi.Output<string>;
    /**
     * List of error messages if the GCP UC configuration encountered any issues during setup or data processing.
     */
    declare public /*out*/ readonly errorMessages: pulumi.Output<string[]>;
    /**
     * The export dataset name used for the Google Cloud Usage Cost report.
     */
    declare public readonly exportDatasetName: pulumi.Output<string>;
    /**
     * The export prefix used for the Google Cloud Usage Cost report.
     */
    declare public readonly exportPrefix: pulumi.Output<string | undefined>;
    /**
     * The name of the Google Cloud Usage Cost report.
     */
    declare public readonly exportProjectName: pulumi.Output<string>;
    /**
     * The number of months of usage data to include in the export.
     */
    declare public /*out*/ readonly months: pulumi.Output<number>;
    /**
     * The unique Google Cloud service account email.
     */
    declare public readonly serviceAccount: pulumi.Output<string>;
    /**
     * The current status of the GCP UC configuration.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * The timestamp when the configuration status was last updated.
     */
    declare public /*out*/ readonly statusUpdatedAt: pulumi.Output<string>;
    /**
     * The timestamp when the GCP UC configuration was last modified.
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;

    /**
     * Create a GcpUcConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GcpUcConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GcpUcConfigArgs | GcpUcConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GcpUcConfigState | undefined;
            resourceInputs["billingAccountId"] = state?.billingAccountId;
            resourceInputs["bucketName"] = state?.bucketName;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["dataset"] = state?.dataset;
            resourceInputs["errorMessages"] = state?.errorMessages;
            resourceInputs["exportDatasetName"] = state?.exportDatasetName;
            resourceInputs["exportPrefix"] = state?.exportPrefix;
            resourceInputs["exportProjectName"] = state?.exportProjectName;
            resourceInputs["months"] = state?.months;
            resourceInputs["serviceAccount"] = state?.serviceAccount;
            resourceInputs["status"] = state?.status;
            resourceInputs["statusUpdatedAt"] = state?.statusUpdatedAt;
            resourceInputs["updatedAt"] = state?.updatedAt;
        } else {
            const args = argsOrState as GcpUcConfigArgs | undefined;
            if (args?.billingAccountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'billingAccountId'");
            }
            if (args?.bucketName === undefined && !opts.urn) {
                throw new Error("Missing required property 'bucketName'");
            }
            if (args?.exportDatasetName === undefined && !opts.urn) {
                throw new Error("Missing required property 'exportDatasetName'");
            }
            if (args?.exportProjectName === undefined && !opts.urn) {
                throw new Error("Missing required property 'exportProjectName'");
            }
            if (args?.serviceAccount === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceAccount'");
            }
            resourceInputs["billingAccountId"] = args?.billingAccountId;
            resourceInputs["bucketName"] = args?.bucketName;
            resourceInputs["exportDatasetName"] = args?.exportDatasetName;
            resourceInputs["exportPrefix"] = args?.exportPrefix;
            resourceInputs["exportProjectName"] = args?.exportProjectName;
            resourceInputs["serviceAccount"] = args?.serviceAccount;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["dataset"] = undefined /*out*/;
            resourceInputs["errorMessages"] = undefined /*out*/;
            resourceInputs["months"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusUpdatedAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GcpUcConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GcpUcConfig resources.
 */
export interface GcpUcConfigState {
    /**
     * The Google Cloud account ID.
     */
    billingAccountId?: pulumi.Input<string>;
    /**
     * The Google Cloud bucket name used to store the Usage Cost export.
     */
    bucketName?: pulumi.Input<string>;
    /**
     * The timestamp when the GCP UC configuration was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The dataset name used for the GCP Usage Cost export.
     */
    dataset?: pulumi.Input<string>;
    /**
     * List of error messages if the GCP UC configuration encountered any issues during setup or data processing.
     */
    errorMessages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The export dataset name used for the Google Cloud Usage Cost report.
     */
    exportDatasetName?: pulumi.Input<string>;
    /**
     * The export prefix used for the Google Cloud Usage Cost report.
     */
    exportPrefix?: pulumi.Input<string>;
    /**
     * The name of the Google Cloud Usage Cost report.
     */
    exportProjectName?: pulumi.Input<string>;
    /**
     * The number of months of usage data to include in the export.
     */
    months?: pulumi.Input<number>;
    /**
     * The unique Google Cloud service account email.
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * The current status of the GCP UC configuration.
     */
    status?: pulumi.Input<string>;
    /**
     * The timestamp when the configuration status was last updated.
     */
    statusUpdatedAt?: pulumi.Input<string>;
    /**
     * The timestamp when the GCP UC configuration was last modified.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GcpUcConfig resource.
 */
export interface GcpUcConfigArgs {
    /**
     * The Google Cloud account ID.
     */
    billingAccountId: pulumi.Input<string>;
    /**
     * The Google Cloud bucket name used to store the Usage Cost export.
     */
    bucketName: pulumi.Input<string>;
    /**
     * The export dataset name used for the Google Cloud Usage Cost report.
     */
    exportDatasetName: pulumi.Input<string>;
    /**
     * The export prefix used for the Google Cloud Usage Cost report.
     */
    exportPrefix?: pulumi.Input<string>;
    /**
     * The name of the Google Cloud Usage Cost report.
     */
    exportProjectName: pulumi.Input<string>;
    /**
     * The unique Google Cloud service account email.
     */
    serviceAccount: pulumi.Input<string>;
}
