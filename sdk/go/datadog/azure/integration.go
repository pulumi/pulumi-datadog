// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azure

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Datadog - Microsoft Azure integration resource. This can be used to create and manage the integrations.
//
// ## Import
//
// Microsoft Azure integrations can be imported using their `tenant name` and `client` id separated with a colon (`:`).
//
// ```sh
//
//	$ pulumi import datadog:azure/integration:Integration sandbox ${tenant_name}:${client_id}
//
// ```
type Integration struct {
	pulumi.CustomResourceState

	// This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s).
	AppServicePlanFilters pulumi.StringPtrOutput `pulumi:"appServicePlanFilters"`
	// Silence monitors for expected Azure VM shutdowns.
	Automute pulumi.BoolPtrOutput `pulumi:"automute"`
	// Your Azure web application ID.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// (Required for Initial Creation) Your Azure web application secret key.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// Enable Cloud Security Management Misconfigurations for your organization.
	CspmEnabled pulumi.BoolPtrOutput `pulumi:"cspmEnabled"`
	// Enable custom metrics for your organization.
	CustomMetricsEnabled pulumi.BoolPtrOutput `pulumi:"customMetricsEnabled"`
	// String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`
	HostFilters pulumi.StringPtrOutput `pulumi:"hostFilters"`
	// Your Azure Active Directory ID.
	TenantName pulumi.StringOutput `pulumi:"tenantName"`
}

// NewIntegration registers a new resource with the given unique name, arguments, and options.
func NewIntegration(ctx *pulumi.Context,
	name string, args *IntegrationArgs, opts ...pulumi.ResourceOption) (*Integration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.ClientSecret == nil {
		return nil, errors.New("invalid value for required argument 'ClientSecret'")
	}
	if args.TenantName == nil {
		return nil, errors.New("invalid value for required argument 'TenantName'")
	}
	if args.ClientSecret != nil {
		args.ClientSecret = pulumi.ToSecret(args.ClientSecret).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Integration
	err := ctx.RegisterResource("datadog:azure/integration:Integration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegration gets an existing Integration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationState, opts ...pulumi.ResourceOption) (*Integration, error) {
	var resource Integration
	err := ctx.ReadResource("datadog:azure/integration:Integration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Integration resources.
type integrationState struct {
	// This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s).
	AppServicePlanFilters *string `pulumi:"appServicePlanFilters"`
	// Silence monitors for expected Azure VM shutdowns.
	Automute *bool `pulumi:"automute"`
	// Your Azure web application ID.
	ClientId *string `pulumi:"clientId"`
	// (Required for Initial Creation) Your Azure web application secret key.
	ClientSecret *string `pulumi:"clientSecret"`
	// Enable Cloud Security Management Misconfigurations for your organization.
	CspmEnabled *bool `pulumi:"cspmEnabled"`
	// Enable custom metrics for your organization.
	CustomMetricsEnabled *bool `pulumi:"customMetricsEnabled"`
	// String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`
	HostFilters *string `pulumi:"hostFilters"`
	// Your Azure Active Directory ID.
	TenantName *string `pulumi:"tenantName"`
}

type IntegrationState struct {
	// This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s).
	AppServicePlanFilters pulumi.StringPtrInput
	// Silence monitors for expected Azure VM shutdowns.
	Automute pulumi.BoolPtrInput
	// Your Azure web application ID.
	ClientId pulumi.StringPtrInput
	// (Required for Initial Creation) Your Azure web application secret key.
	ClientSecret pulumi.StringPtrInput
	// Enable Cloud Security Management Misconfigurations for your organization.
	CspmEnabled pulumi.BoolPtrInput
	// Enable custom metrics for your organization.
	CustomMetricsEnabled pulumi.BoolPtrInput
	// String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`
	HostFilters pulumi.StringPtrInput
	// Your Azure Active Directory ID.
	TenantName pulumi.StringPtrInput
}

func (IntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationState)(nil)).Elem()
}

type integrationArgs struct {
	// This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s).
	AppServicePlanFilters *string `pulumi:"appServicePlanFilters"`
	// Silence monitors for expected Azure VM shutdowns.
	Automute *bool `pulumi:"automute"`
	// Your Azure web application ID.
	ClientId string `pulumi:"clientId"`
	// (Required for Initial Creation) Your Azure web application secret key.
	ClientSecret string `pulumi:"clientSecret"`
	// Enable Cloud Security Management Misconfigurations for your organization.
	CspmEnabled *bool `pulumi:"cspmEnabled"`
	// Enable custom metrics for your organization.
	CustomMetricsEnabled *bool `pulumi:"customMetricsEnabled"`
	// String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`
	HostFilters *string `pulumi:"hostFilters"`
	// Your Azure Active Directory ID.
	TenantName string `pulumi:"tenantName"`
}

// The set of arguments for constructing a Integration resource.
type IntegrationArgs struct {
	// This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s).
	AppServicePlanFilters pulumi.StringPtrInput
	// Silence monitors for expected Azure VM shutdowns.
	Automute pulumi.BoolPtrInput
	// Your Azure web application ID.
	ClientId pulumi.StringInput
	// (Required for Initial Creation) Your Azure web application secret key.
	ClientSecret pulumi.StringInput
	// Enable Cloud Security Management Misconfigurations for your organization.
	CspmEnabled pulumi.BoolPtrInput
	// Enable custom metrics for your organization.
	CustomMetricsEnabled pulumi.BoolPtrInput
	// String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`
	HostFilters pulumi.StringPtrInput
	// Your Azure Active Directory ID.
	TenantName pulumi.StringInput
}

func (IntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationArgs)(nil)).Elem()
}

type IntegrationInput interface {
	pulumi.Input

	ToIntegrationOutput() IntegrationOutput
	ToIntegrationOutputWithContext(ctx context.Context) IntegrationOutput
}

func (*Integration) ElementType() reflect.Type {
	return reflect.TypeOf((**Integration)(nil)).Elem()
}

func (i *Integration) ToIntegrationOutput() IntegrationOutput {
	return i.ToIntegrationOutputWithContext(context.Background())
}

func (i *Integration) ToIntegrationOutputWithContext(ctx context.Context) IntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOutput)
}

func (i *Integration) ToOutput(ctx context.Context) pulumix.Output[*Integration] {
	return pulumix.Output[*Integration]{
		OutputState: i.ToIntegrationOutputWithContext(ctx).OutputState,
	}
}

// IntegrationArrayInput is an input type that accepts IntegrationArray and IntegrationArrayOutput values.
// You can construct a concrete instance of `IntegrationArrayInput` via:
//
//	IntegrationArray{ IntegrationArgs{...} }
type IntegrationArrayInput interface {
	pulumi.Input

	ToIntegrationArrayOutput() IntegrationArrayOutput
	ToIntegrationArrayOutputWithContext(context.Context) IntegrationArrayOutput
}

type IntegrationArray []IntegrationInput

func (IntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Integration)(nil)).Elem()
}

func (i IntegrationArray) ToIntegrationArrayOutput() IntegrationArrayOutput {
	return i.ToIntegrationArrayOutputWithContext(context.Background())
}

func (i IntegrationArray) ToIntegrationArrayOutputWithContext(ctx context.Context) IntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationArrayOutput)
}

func (i IntegrationArray) ToOutput(ctx context.Context) pulumix.Output[[]*Integration] {
	return pulumix.Output[[]*Integration]{
		OutputState: i.ToIntegrationArrayOutputWithContext(ctx).OutputState,
	}
}

// IntegrationMapInput is an input type that accepts IntegrationMap and IntegrationMapOutput values.
// You can construct a concrete instance of `IntegrationMapInput` via:
//
//	IntegrationMap{ "key": IntegrationArgs{...} }
type IntegrationMapInput interface {
	pulumi.Input

	ToIntegrationMapOutput() IntegrationMapOutput
	ToIntegrationMapOutputWithContext(context.Context) IntegrationMapOutput
}

type IntegrationMap map[string]IntegrationInput

func (IntegrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Integration)(nil)).Elem()
}

func (i IntegrationMap) ToIntegrationMapOutput() IntegrationMapOutput {
	return i.ToIntegrationMapOutputWithContext(context.Background())
}

func (i IntegrationMap) ToIntegrationMapOutputWithContext(ctx context.Context) IntegrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationMapOutput)
}

func (i IntegrationMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*Integration] {
	return pulumix.Output[map[string]*Integration]{
		OutputState: i.ToIntegrationMapOutputWithContext(ctx).OutputState,
	}
}

type IntegrationOutput struct{ *pulumi.OutputState }

func (IntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Integration)(nil)).Elem()
}

func (o IntegrationOutput) ToIntegrationOutput() IntegrationOutput {
	return o
}

func (o IntegrationOutput) ToIntegrationOutputWithContext(ctx context.Context) IntegrationOutput {
	return o
}

func (o IntegrationOutput) ToOutput(ctx context.Context) pulumix.Output[*Integration] {
	return pulumix.Output[*Integration]{
		OutputState: o.OutputState,
	}
}

// This comma-separated list of tags (in the form `key:value,key:value`) defines a filter that Datadog uses when collecting metrics from Azure App Service Plans. Only App Service Plans that match one of the defined tags are imported into Datadog. The rest, including the apps and functions running on them, are ignored. This also filters the metrics for any App or Function running on the App Service Plan(s).
func (o IntegrationOutput) AppServicePlanFilters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Integration) pulumi.StringPtrOutput { return v.AppServicePlanFilters }).(pulumi.StringPtrOutput)
}

// Silence monitors for expected Azure VM shutdowns.
func (o IntegrationOutput) Automute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Integration) pulumi.BoolPtrOutput { return v.Automute }).(pulumi.BoolPtrOutput)
}

// Your Azure web application ID.
func (o IntegrationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *Integration) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// (Required for Initial Creation) Your Azure web application secret key.
func (o IntegrationOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *Integration) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// Enable Cloud Security Management Misconfigurations for your organization.
func (o IntegrationOutput) CspmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Integration) pulumi.BoolPtrOutput { return v.CspmEnabled }).(pulumi.BoolPtrOutput)
}

// Enable custom metrics for your organization.
func (o IntegrationOutput) CustomMetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Integration) pulumi.BoolPtrOutput { return v.CustomMetricsEnabled }).(pulumi.BoolPtrOutput)
}

// String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure. Limit the Azure instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog. e.x. `env:production,deploymentgroup:red`
func (o IntegrationOutput) HostFilters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Integration) pulumi.StringPtrOutput { return v.HostFilters }).(pulumi.StringPtrOutput)
}

// Your Azure Active Directory ID.
func (o IntegrationOutput) TenantName() pulumi.StringOutput {
	return o.ApplyT(func(v *Integration) pulumi.StringOutput { return v.TenantName }).(pulumi.StringOutput)
}

type IntegrationArrayOutput struct{ *pulumi.OutputState }

func (IntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Integration)(nil)).Elem()
}

func (o IntegrationArrayOutput) ToIntegrationArrayOutput() IntegrationArrayOutput {
	return o
}

func (o IntegrationArrayOutput) ToIntegrationArrayOutputWithContext(ctx context.Context) IntegrationArrayOutput {
	return o
}

func (o IntegrationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*Integration] {
	return pulumix.Output[[]*Integration]{
		OutputState: o.OutputState,
	}
}

func (o IntegrationArrayOutput) Index(i pulumi.IntInput) IntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Integration {
		return vs[0].([]*Integration)[vs[1].(int)]
	}).(IntegrationOutput)
}

type IntegrationMapOutput struct{ *pulumi.OutputState }

func (IntegrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Integration)(nil)).Elem()
}

func (o IntegrationMapOutput) ToIntegrationMapOutput() IntegrationMapOutput {
	return o
}

func (o IntegrationMapOutput) ToIntegrationMapOutputWithContext(ctx context.Context) IntegrationMapOutput {
	return o
}

func (o IntegrationMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*Integration] {
	return pulumix.Output[map[string]*Integration]{
		OutputState: o.OutputState,
	}
}

func (o IntegrationMapOutput) MapIndex(k pulumi.StringInput) IntegrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Integration {
		return vs[0].(map[string]*Integration)[vs[1].(string)]
	}).(IntegrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationInput)(nil)).Elem(), &Integration{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationArrayInput)(nil)).Elem(), IntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationMapInput)(nil)).Elem(), IntegrationMap{})
	pulumi.RegisterOutputType(IntegrationOutput{})
	pulumi.RegisterOutputType(IntegrationArrayOutput{})
	pulumi.RegisterOutputType(IntegrationMapOutput{})
}
