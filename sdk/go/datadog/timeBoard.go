// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Import
//
// Timeboards can be imported using their numeric ID, e.g.
//
// ```sh
//  $ pulumi import datadog:index/timeBoard:TimeBoard my_service_timeboard 2081
// ```
type TimeBoard struct {
	pulumi.CustomResourceState

	// A description of the dashboard's content.
	Description pulumi.StringOutput `pulumi:"description"`
	// A list of graph definitions.
	Graphs   TimeBoardGraphArrayOutput `pulumi:"graphs"`
	ReadOnly pulumi.BoolPtrOutput      `pulumi:"readOnly"`
	// A list of template variables for using Dashboard templating.
	TemplateVariables TimeBoardTemplateVariableArrayOutput `pulumi:"templateVariables"`
	// The name of the dashboard.
	Title pulumi.StringOutput `pulumi:"title"`
}

// NewTimeBoard registers a new resource with the given unique name, arguments, and options.
func NewTimeBoard(ctx *pulumi.Context,
	name string, args *TimeBoardArgs, opts ...pulumi.ResourceOption) (*TimeBoard, error) {
	if args == nil || args.Description == nil {
		return nil, errors.New("missing required argument 'Description'")
	}
	if args == nil || args.Graphs == nil {
		return nil, errors.New("missing required argument 'Graphs'")
	}
	if args == nil || args.Title == nil {
		return nil, errors.New("missing required argument 'Title'")
	}
	if args == nil {
		args = &TimeBoardArgs{}
	}
	var resource TimeBoard
	err := ctx.RegisterResource("datadog:index/timeBoard:TimeBoard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTimeBoard gets an existing TimeBoard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTimeBoard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TimeBoardState, opts ...pulumi.ResourceOption) (*TimeBoard, error) {
	var resource TimeBoard
	err := ctx.ReadResource("datadog:index/timeBoard:TimeBoard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TimeBoard resources.
type timeBoardState struct {
	// A description of the dashboard's content.
	Description *string `pulumi:"description"`
	// A list of graph definitions.
	Graphs   []TimeBoardGraph `pulumi:"graphs"`
	ReadOnly *bool            `pulumi:"readOnly"`
	// A list of template variables for using Dashboard templating.
	TemplateVariables []TimeBoardTemplateVariable `pulumi:"templateVariables"`
	// The name of the dashboard.
	Title *string `pulumi:"title"`
}

type TimeBoardState struct {
	// A description of the dashboard's content.
	Description pulumi.StringPtrInput
	// A list of graph definitions.
	Graphs   TimeBoardGraphArrayInput
	ReadOnly pulumi.BoolPtrInput
	// A list of template variables for using Dashboard templating.
	TemplateVariables TimeBoardTemplateVariableArrayInput
	// The name of the dashboard.
	Title pulumi.StringPtrInput
}

func (TimeBoardState) ElementType() reflect.Type {
	return reflect.TypeOf((*timeBoardState)(nil)).Elem()
}

type timeBoardArgs struct {
	// A description of the dashboard's content.
	Description string `pulumi:"description"`
	// A list of graph definitions.
	Graphs   []TimeBoardGraph `pulumi:"graphs"`
	ReadOnly *bool            `pulumi:"readOnly"`
	// A list of template variables for using Dashboard templating.
	TemplateVariables []TimeBoardTemplateVariable `pulumi:"templateVariables"`
	// The name of the dashboard.
	Title string `pulumi:"title"`
}

// The set of arguments for constructing a TimeBoard resource.
type TimeBoardArgs struct {
	// A description of the dashboard's content.
	Description pulumi.StringInput
	// A list of graph definitions.
	Graphs   TimeBoardGraphArrayInput
	ReadOnly pulumi.BoolPtrInput
	// A list of template variables for using Dashboard templating.
	TemplateVariables TimeBoardTemplateVariableArrayInput
	// The name of the dashboard.
	Title pulumi.StringInput
}

func (TimeBoardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*timeBoardArgs)(nil)).Elem()
}

type TimeBoardInput interface {
	pulumi.Input

	ToTimeBoardOutput() TimeBoardOutput
	ToTimeBoardOutputWithContext(ctx context.Context) TimeBoardOutput
}

func (TimeBoard) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeBoard)(nil)).Elem()
}

func (i TimeBoard) ToTimeBoardOutput() TimeBoardOutput {
	return i.ToTimeBoardOutputWithContext(context.Background())
}

func (i TimeBoard) ToTimeBoardOutputWithContext(ctx context.Context) TimeBoardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TimeBoardOutput)
}

type TimeBoardOutput struct {
	*pulumi.OutputState
}

func (TimeBoardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TimeBoardOutput)(nil)).Elem()
}

func (o TimeBoardOutput) ToTimeBoardOutput() TimeBoardOutput {
	return o
}

func (o TimeBoardOutput) ToTimeBoardOutputWithContext(ctx context.Context) TimeBoardOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(TimeBoardOutput{})
}
