// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about an existing monitor for use in other resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.LookupMonitor(ctx, &GetMonitorArgs{
//				MonitorTagsFilters: []string{
//					"foo:bar",
//				},
//				NameFilter: pulumi.StringRef("My awesome monitor"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMonitor(ctx *pulumi.Context, args *LookupMonitorArgs, opts ...pulumi.InvokeOption) (*LookupMonitorResult, error) {
	var rv LookupMonitorResult
	err := ctx.Invoke("datadog:index/getMonitor:getMonitor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMonitor.
type LookupMonitorArgs struct {
	MonitorTagsFilters []string `pulumi:"monitorTagsFilters"`
	NameFilter         *string  `pulumi:"nameFilter"`
	TagsFilters        []string `pulumi:"tagsFilters"`
}

// A collection of values returned by getMonitor.
type LookupMonitorResult struct {
	EnableLogsSample       bool   `pulumi:"enableLogsSample"`
	EscalationMessage      string `pulumi:"escalationMessage"`
	EvaluationDelay        int    `pulumi:"evaluationDelay"`
	GroupRetentionDuration string `pulumi:"groupRetentionDuration"`
	GroupbySimpleMonitor   bool   `pulumi:"groupbySimpleMonitor"`
	// The provider-assigned unique ID for this managed resource.
	Id                      string                             `pulumi:"id"`
	IncludeTags             bool                               `pulumi:"includeTags"`
	Locked                  bool                               `pulumi:"locked"`
	Message                 string                             `pulumi:"message"`
	MonitorTagsFilters      []string                           `pulumi:"monitorTagsFilters"`
	MonitorThresholdWindows []GetMonitorMonitorThresholdWindow `pulumi:"monitorThresholdWindows"`
	MonitorThresholds       []GetMonitorMonitorThreshold       `pulumi:"monitorThresholds"`
	Name                    string                             `pulumi:"name"`
	NameFilter              *string                            `pulumi:"nameFilter"`
	NewGroupDelay           int                                `pulumi:"newGroupDelay"`
	NewHostDelay            int                                `pulumi:"newHostDelay"`
	NoDataTimeframe         int                                `pulumi:"noDataTimeframe"`
	NotifyAudit             bool                               `pulumi:"notifyAudit"`
	NotifyNoData            bool                               `pulumi:"notifyNoData"`
	OnMissingData           string                             `pulumi:"onMissingData"`
	Query                   string                             `pulumi:"query"`
	RenotifyInterval        int                                `pulumi:"renotifyInterval"`
	RenotifyOccurrences     int                                `pulumi:"renotifyOccurrences"`
	RenotifyStatuses        []string                           `pulumi:"renotifyStatuses"`
	RequireFullWindow       bool                               `pulumi:"requireFullWindow"`
	RestrictedRoles         []string                           `pulumi:"restrictedRoles"`
	Tags                    []string                           `pulumi:"tags"`
	TagsFilters             []string                           `pulumi:"tagsFilters"`
	TimeoutH                int                                `pulumi:"timeoutH"`
	Type                    string                             `pulumi:"type"`
}

func LookupMonitorOutput(ctx *pulumi.Context, args LookupMonitorOutputArgs, opts ...pulumi.InvokeOption) LookupMonitorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMonitorResult, error) {
			args := v.(LookupMonitorArgs)
			r, err := LookupMonitor(ctx, &args, opts...)
			var s LookupMonitorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMonitorResultOutput)
}

// A collection of arguments for invoking getMonitor.
type LookupMonitorOutputArgs struct {
	MonitorTagsFilters pulumi.StringArrayInput `pulumi:"monitorTagsFilters"`
	NameFilter         pulumi.StringPtrInput   `pulumi:"nameFilter"`
	TagsFilters        pulumi.StringArrayInput `pulumi:"tagsFilters"`
}

func (LookupMonitorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitorArgs)(nil)).Elem()
}

// A collection of values returned by getMonitor.
type LookupMonitorResultOutput struct{ *pulumi.OutputState }

func (LookupMonitorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitorResult)(nil)).Elem()
}

func (o LookupMonitorResultOutput) ToLookupMonitorResultOutput() LookupMonitorResultOutput {
	return o
}

func (o LookupMonitorResultOutput) ToLookupMonitorResultOutputWithContext(ctx context.Context) LookupMonitorResultOutput {
	return o
}

func (o LookupMonitorResultOutput) EnableLogsSample() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMonitorResult) bool { return v.EnableLogsSample }).(pulumi.BoolOutput)
}

func (o LookupMonitorResultOutput) EscalationMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitorResult) string { return v.EscalationMessage }).(pulumi.StringOutput)
}

func (o LookupMonitorResultOutput) EvaluationDelay() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMonitorResult) int { return v.EvaluationDelay }).(pulumi.IntOutput)
}

func (o LookupMonitorResultOutput) GroupRetentionDuration() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitorResult) string { return v.GroupRetentionDuration }).(pulumi.StringOutput)
}

func (o LookupMonitorResultOutput) GroupbySimpleMonitor() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMonitorResult) bool { return v.GroupbySimpleMonitor }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMonitorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitorResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMonitorResultOutput) IncludeTags() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMonitorResult) bool { return v.IncludeTags }).(pulumi.BoolOutput)
}

func (o LookupMonitorResultOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMonitorResult) bool { return v.Locked }).(pulumi.BoolOutput)
}

func (o LookupMonitorResultOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitorResult) string { return v.Message }).(pulumi.StringOutput)
}

func (o LookupMonitorResultOutput) MonitorTagsFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMonitorResult) []string { return v.MonitorTagsFilters }).(pulumi.StringArrayOutput)
}

func (o LookupMonitorResultOutput) MonitorThresholdWindows() GetMonitorMonitorThresholdWindowArrayOutput {
	return o.ApplyT(func(v LookupMonitorResult) []GetMonitorMonitorThresholdWindow { return v.MonitorThresholdWindows }).(GetMonitorMonitorThresholdWindowArrayOutput)
}

func (o LookupMonitorResultOutput) MonitorThresholds() GetMonitorMonitorThresholdArrayOutput {
	return o.ApplyT(func(v LookupMonitorResult) []GetMonitorMonitorThreshold { return v.MonitorThresholds }).(GetMonitorMonitorThresholdArrayOutput)
}

func (o LookupMonitorResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitorResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupMonitorResultOutput) NameFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.NameFilter }).(pulumi.StringPtrOutput)
}

func (o LookupMonitorResultOutput) NewGroupDelay() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMonitorResult) int { return v.NewGroupDelay }).(pulumi.IntOutput)
}

func (o LookupMonitorResultOutput) NewHostDelay() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMonitorResult) int { return v.NewHostDelay }).(pulumi.IntOutput)
}

func (o LookupMonitorResultOutput) NoDataTimeframe() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMonitorResult) int { return v.NoDataTimeframe }).(pulumi.IntOutput)
}

func (o LookupMonitorResultOutput) NotifyAudit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMonitorResult) bool { return v.NotifyAudit }).(pulumi.BoolOutput)
}

func (o LookupMonitorResultOutput) NotifyNoData() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMonitorResult) bool { return v.NotifyNoData }).(pulumi.BoolOutput)
}

func (o LookupMonitorResultOutput) OnMissingData() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitorResult) string { return v.OnMissingData }).(pulumi.StringOutput)
}

func (o LookupMonitorResultOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitorResult) string { return v.Query }).(pulumi.StringOutput)
}

func (o LookupMonitorResultOutput) RenotifyInterval() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMonitorResult) int { return v.RenotifyInterval }).(pulumi.IntOutput)
}

func (o LookupMonitorResultOutput) RenotifyOccurrences() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMonitorResult) int { return v.RenotifyOccurrences }).(pulumi.IntOutput)
}

func (o LookupMonitorResultOutput) RenotifyStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMonitorResult) []string { return v.RenotifyStatuses }).(pulumi.StringArrayOutput)
}

func (o LookupMonitorResultOutput) RequireFullWindow() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMonitorResult) bool { return v.RequireFullWindow }).(pulumi.BoolOutput)
}

func (o LookupMonitorResultOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMonitorResult) []string { return v.RestrictedRoles }).(pulumi.StringArrayOutput)
}

func (o LookupMonitorResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMonitorResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupMonitorResultOutput) TagsFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupMonitorResult) []string { return v.TagsFilters }).(pulumi.StringArrayOutput)
}

func (o LookupMonitorResultOutput) TimeoutH() pulumi.IntOutput {
	return o.ApplyT(func(v LookupMonitorResult) int { return v.TimeoutH }).(pulumi.IntOutput)
}

func (o LookupMonitorResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMonitorResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMonitorResultOutput{})
}
