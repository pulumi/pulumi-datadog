// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about existing teams for use in other resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.GetTeams(ctx, &datadog.GetTeamsArgs{
//				FilterKeyword: pulumi.StringRef("team-member@company.com"),
//				FilterMe:      pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTeams(ctx *pulumi.Context, args *GetTeamsArgs, opts ...pulumi.InvokeOption) (*GetTeamsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTeamsResult
	err := ctx.Invoke("datadog:index/getTeams:getTeams", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTeams.
type GetTeamsArgs struct {
	// Search query. Can be team name, team handle, or email of team member.
	FilterKeyword *string `pulumi:"filterKeyword"`
	// When true, only returns teams the current user belongs to.
	FilterMe *bool `pulumi:"filterMe"`
	// List of teams
	Teams []GetTeamsTeam `pulumi:"teams"`
}

// A collection of values returned by getTeams.
type GetTeamsResult struct {
	// Search query. Can be team name, team handle, or email of team member.
	FilterKeyword *string `pulumi:"filterKeyword"`
	// When true, only returns teams the current user belongs to.
	FilterMe *bool `pulumi:"filterMe"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// List of teams
	Teams []GetTeamsTeam `pulumi:"teams"`
}

func GetTeamsOutput(ctx *pulumi.Context, args GetTeamsOutputArgs, opts ...pulumi.InvokeOption) GetTeamsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetTeamsResultOutput, error) {
			args := v.(GetTeamsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("datadog:index/getTeams:getTeams", args, GetTeamsResultOutput{}, options).(GetTeamsResultOutput), nil
		}).(GetTeamsResultOutput)
}

// A collection of arguments for invoking getTeams.
type GetTeamsOutputArgs struct {
	// Search query. Can be team name, team handle, or email of team member.
	FilterKeyword pulumi.StringPtrInput `pulumi:"filterKeyword"`
	// When true, only returns teams the current user belongs to.
	FilterMe pulumi.BoolPtrInput `pulumi:"filterMe"`
	// List of teams
	Teams GetTeamsTeamArrayInput `pulumi:"teams"`
}

func (GetTeamsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsArgs)(nil)).Elem()
}

// A collection of values returned by getTeams.
type GetTeamsResultOutput struct{ *pulumi.OutputState }

func (GetTeamsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsResult)(nil)).Elem()
}

func (o GetTeamsResultOutput) ToGetTeamsResultOutput() GetTeamsResultOutput {
	return o
}

func (o GetTeamsResultOutput) ToGetTeamsResultOutputWithContext(ctx context.Context) GetTeamsResultOutput {
	return o
}

// Search query. Can be team name, team handle, or email of team member.
func (o GetTeamsResultOutput) FilterKeyword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTeamsResult) *string { return v.FilterKeyword }).(pulumi.StringPtrOutput)
}

// When true, only returns teams the current user belongs to.
func (o GetTeamsResultOutput) FilterMe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTeamsResult) *bool { return v.FilterMe }).(pulumi.BoolPtrOutput)
}

// The ID of this resource.
func (o GetTeamsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of teams
func (o GetTeamsResultOutput) Teams() GetTeamsTeamArrayOutput {
	return o.ApplyT(func(v GetTeamsResult) []GetTeamsTeam { return v.Teams }).(GetTeamsTeamArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTeamsResultOutput{})
}
