// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package slack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ChannelDisplay struct {
	Message  *bool `pulumi:"message"`
	Notified *bool `pulumi:"notified"`
	Snapshot *bool `pulumi:"snapshot"`
	Tags     *bool `pulumi:"tags"`
}

// ChannelDisplayInput is an input type that accepts ChannelDisplayArgs and ChannelDisplayOutput values.
// You can construct a concrete instance of `ChannelDisplayInput` via:
//
//	ChannelDisplayArgs{...}
type ChannelDisplayInput interface {
	pulumi.Input

	ToChannelDisplayOutput() ChannelDisplayOutput
	ToChannelDisplayOutputWithContext(context.Context) ChannelDisplayOutput
}

type ChannelDisplayArgs struct {
	Message  pulumi.BoolPtrInput `pulumi:"message"`
	Notified pulumi.BoolPtrInput `pulumi:"notified"`
	Snapshot pulumi.BoolPtrInput `pulumi:"snapshot"`
	Tags     pulumi.BoolPtrInput `pulumi:"tags"`
}

func (ChannelDisplayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDisplay)(nil)).Elem()
}

func (i ChannelDisplayArgs) ToChannelDisplayOutput() ChannelDisplayOutput {
	return i.ToChannelDisplayOutputWithContext(context.Background())
}

func (i ChannelDisplayArgs) ToChannelDisplayOutputWithContext(ctx context.Context) ChannelDisplayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDisplayOutput)
}

func (i ChannelDisplayArgs) ToChannelDisplayPtrOutput() ChannelDisplayPtrOutput {
	return i.ToChannelDisplayPtrOutputWithContext(context.Background())
}

func (i ChannelDisplayArgs) ToChannelDisplayPtrOutputWithContext(ctx context.Context) ChannelDisplayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDisplayOutput).ToChannelDisplayPtrOutputWithContext(ctx)
}

// ChannelDisplayPtrInput is an input type that accepts ChannelDisplayArgs, ChannelDisplayPtr and ChannelDisplayPtrOutput values.
// You can construct a concrete instance of `ChannelDisplayPtrInput` via:
//
//	        ChannelDisplayArgs{...}
//
//	or:
//
//	        nil
type ChannelDisplayPtrInput interface {
	pulumi.Input

	ToChannelDisplayPtrOutput() ChannelDisplayPtrOutput
	ToChannelDisplayPtrOutputWithContext(context.Context) ChannelDisplayPtrOutput
}

type channelDisplayPtrType ChannelDisplayArgs

func ChannelDisplayPtr(v *ChannelDisplayArgs) ChannelDisplayPtrInput {
	return (*channelDisplayPtrType)(v)
}

func (*channelDisplayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDisplay)(nil)).Elem()
}

func (i *channelDisplayPtrType) ToChannelDisplayPtrOutput() ChannelDisplayPtrOutput {
	return i.ToChannelDisplayPtrOutputWithContext(context.Background())
}

func (i *channelDisplayPtrType) ToChannelDisplayPtrOutputWithContext(ctx context.Context) ChannelDisplayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelDisplayPtrOutput)
}

type ChannelDisplayOutput struct{ *pulumi.OutputState }

func (ChannelDisplayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelDisplay)(nil)).Elem()
}

func (o ChannelDisplayOutput) ToChannelDisplayOutput() ChannelDisplayOutput {
	return o
}

func (o ChannelDisplayOutput) ToChannelDisplayOutputWithContext(ctx context.Context) ChannelDisplayOutput {
	return o
}

func (o ChannelDisplayOutput) ToChannelDisplayPtrOutput() ChannelDisplayPtrOutput {
	return o.ToChannelDisplayPtrOutputWithContext(context.Background())
}

func (o ChannelDisplayOutput) ToChannelDisplayPtrOutputWithContext(ctx context.Context) ChannelDisplayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelDisplay) *ChannelDisplay {
		return &v
	}).(ChannelDisplayPtrOutput)
}

func (o ChannelDisplayOutput) Message() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChannelDisplay) *bool { return v.Message }).(pulumi.BoolPtrOutput)
}

func (o ChannelDisplayOutput) Notified() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChannelDisplay) *bool { return v.Notified }).(pulumi.BoolPtrOutput)
}

func (o ChannelDisplayOutput) Snapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChannelDisplay) *bool { return v.Snapshot }).(pulumi.BoolPtrOutput)
}

func (o ChannelDisplayOutput) Tags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChannelDisplay) *bool { return v.Tags }).(pulumi.BoolPtrOutput)
}

type ChannelDisplayPtrOutput struct{ *pulumi.OutputState }

func (ChannelDisplayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelDisplay)(nil)).Elem()
}

func (o ChannelDisplayPtrOutput) ToChannelDisplayPtrOutput() ChannelDisplayPtrOutput {
	return o
}

func (o ChannelDisplayPtrOutput) ToChannelDisplayPtrOutputWithContext(ctx context.Context) ChannelDisplayPtrOutput {
	return o
}

func (o ChannelDisplayPtrOutput) Elem() ChannelDisplayOutput {
	return o.ApplyT(func(v *ChannelDisplay) ChannelDisplay {
		if v != nil {
			return *v
		}
		var ret ChannelDisplay
		return ret
	}).(ChannelDisplayOutput)
}

func (o ChannelDisplayPtrOutput) Message() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ChannelDisplay) *bool {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.BoolPtrOutput)
}

func (o ChannelDisplayPtrOutput) Notified() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ChannelDisplay) *bool {
		if v == nil {
			return nil
		}
		return v.Notified
	}).(pulumi.BoolPtrOutput)
}

func (o ChannelDisplayPtrOutput) Snapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ChannelDisplay) *bool {
		if v == nil {
			return nil
		}
		return v.Snapshot
	}).(pulumi.BoolPtrOutput)
}

func (o ChannelDisplayPtrOutput) Tags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ChannelDisplay) *bool {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelDisplayInput)(nil)).Elem(), ChannelDisplayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelDisplayPtrInput)(nil)).Elem(), ChannelDisplayArgs{})
	pulumi.RegisterOutputType(ChannelDisplayOutput{})
	pulumi.RegisterOutputType(ChannelDisplayPtrOutput{})
}
