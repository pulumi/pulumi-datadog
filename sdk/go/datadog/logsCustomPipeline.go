// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Datadog [Logs Pipeline API](https://docs.datadoghq.com/api/?lang=python#logs-pipelines) resource, which is used to create and manage Datadog logs custom pipelines.
//
//
//
// ## Important Notes
//
// Each `.LogsCustomPipeline` resource defines a complete pipeline. The order of the pipelines is maintained in
// a different resource datadog_logs_pipeline_order.
// When creating a new pipeline, you need to **explicitly** add this pipeline to the `.LogsPipelineOrder`
// resource to track the pipeline. Similarly, when a pipeline needs to be destroyed, remove its references from the
// `.LogsPipelineOrder` resource.
type LogsCustomPipeline struct {
	pulumi.CustomResourceState

	// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
	Filters LogsCustomPipelineFilterArrayOutput `pulumi:"filters"`
	// If the processor is enabled or not.
	IsEnabled pulumi.BoolPtrOutput `pulumi:"isEnabled"`
	// Name of the processor
	Name pulumi.StringOutput `pulumi:"name"`
	// Processors. Nested pipeline can't take any other nested pipeline as its processor.
	Processors LogsCustomPipelineProcessorArrayOutput `pulumi:"processors"`
}

// NewLogsCustomPipeline registers a new resource with the given unique name, arguments, and options.
func NewLogsCustomPipeline(ctx *pulumi.Context,
	name string, args *LogsCustomPipelineArgs, opts ...pulumi.ResourceOption) (*LogsCustomPipeline, error) {
	if args == nil || args.Filters == nil {
		return nil, errors.New("missing required argument 'Filters'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil {
		args = &LogsCustomPipelineArgs{}
	}
	var resource LogsCustomPipeline
	err := ctx.RegisterResource("datadog:index/logsCustomPipeline:LogsCustomPipeline", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogsCustomPipeline gets an existing LogsCustomPipeline resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogsCustomPipeline(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogsCustomPipelineState, opts ...pulumi.ResourceOption) (*LogsCustomPipeline, error) {
	var resource LogsCustomPipeline
	err := ctx.ReadResource("datadog:index/logsCustomPipeline:LogsCustomPipeline", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogsCustomPipeline resources.
type logsCustomPipelineState struct {
	// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
	Filters []LogsCustomPipelineFilter `pulumi:"filters"`
	// If the processor is enabled or not.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Name of the processor
	Name *string `pulumi:"name"`
	// Processors. Nested pipeline can't take any other nested pipeline as its processor.
	Processors []LogsCustomPipelineProcessor `pulumi:"processors"`
}

type LogsCustomPipelineState struct {
	// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
	Filters LogsCustomPipelineFilterArrayInput
	// If the processor is enabled or not.
	IsEnabled pulumi.BoolPtrInput
	// Name of the processor
	Name pulumi.StringPtrInput
	// Processors. Nested pipeline can't take any other nested pipeline as its processor.
	Processors LogsCustomPipelineProcessorArrayInput
}

func (LogsCustomPipelineState) ElementType() reflect.Type {
	return reflect.TypeOf((*logsCustomPipelineState)(nil)).Elem()
}

type logsCustomPipelineArgs struct {
	// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
	Filters []LogsCustomPipelineFilter `pulumi:"filters"`
	// If the processor is enabled or not.
	IsEnabled *bool `pulumi:"isEnabled"`
	// Name of the processor
	Name string `pulumi:"name"`
	// Processors. Nested pipeline can't take any other nested pipeline as its processor.
	Processors []LogsCustomPipelineProcessor `pulumi:"processors"`
}

// The set of arguments for constructing a LogsCustomPipeline resource.
type LogsCustomPipelineArgs struct {
	// Defines the nested pipeline filter. Only logs that match the filter criteria are processed by this pipeline.
	Filters LogsCustomPipelineFilterArrayInput
	// If the processor is enabled or not.
	IsEnabled pulumi.BoolPtrInput
	// Name of the processor
	Name pulumi.StringInput
	// Processors. Nested pipeline can't take any other nested pipeline as its processor.
	Processors LogsCustomPipelineProcessorArrayInput
}

func (LogsCustomPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logsCustomPipelineArgs)(nil)).Elem()
}
