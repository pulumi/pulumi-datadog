// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about an existing SLO for use in other resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.LookupServiceLevelObjective(ctx, &GetServiceLevelObjectiveArgs{
//				NameQuery: pulumi.StringRef("My test SLO"),
//				TagsQuery: pulumi.StringRef("foo:bar"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = datadog.LookupServiceLevelObjective(ctx, &GetServiceLevelObjectiveArgs{
//				Id: pulumi.StringRef(data.Terraform_remote_state.Api.Outputs.Slo),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServiceLevelObjective(ctx *pulumi.Context, args *LookupServiceLevelObjectiveArgs, opts ...pulumi.InvokeOption) (*LookupServiceLevelObjectiveResult, error) {
	var rv LookupServiceLevelObjectiveResult
	err := ctx.Invoke("datadog:index/getServiceLevelObjective:getServiceLevelObjective", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceLevelObjective.
type LookupServiceLevelObjectiveArgs struct {
	Id           *string `pulumi:"id"`
	MetricsQuery *string `pulumi:"metricsQuery"`
	NameQuery    *string `pulumi:"nameQuery"`
	TagsQuery    *string `pulumi:"tagsQuery"`
}

// A collection of values returned by getServiceLevelObjective.
type LookupServiceLevelObjectiveResult struct {
	Id           *string `pulumi:"id"`
	MetricsQuery *string `pulumi:"metricsQuery"`
	Name         string  `pulumi:"name"`
	NameQuery    *string `pulumi:"nameQuery"`
	TagsQuery    *string `pulumi:"tagsQuery"`
	Type         string  `pulumi:"type"`
}

func LookupServiceLevelObjectiveOutput(ctx *pulumi.Context, args LookupServiceLevelObjectiveOutputArgs, opts ...pulumi.InvokeOption) LookupServiceLevelObjectiveResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceLevelObjectiveResult, error) {
			args := v.(LookupServiceLevelObjectiveArgs)
			r, err := LookupServiceLevelObjective(ctx, &args, opts...)
			var s LookupServiceLevelObjectiveResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceLevelObjectiveResultOutput)
}

// A collection of arguments for invoking getServiceLevelObjective.
type LookupServiceLevelObjectiveOutputArgs struct {
	Id           pulumi.StringPtrInput `pulumi:"id"`
	MetricsQuery pulumi.StringPtrInput `pulumi:"metricsQuery"`
	NameQuery    pulumi.StringPtrInput `pulumi:"nameQuery"`
	TagsQuery    pulumi.StringPtrInput `pulumi:"tagsQuery"`
}

func (LookupServiceLevelObjectiveOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceLevelObjectiveArgs)(nil)).Elem()
}

// A collection of values returned by getServiceLevelObjective.
type LookupServiceLevelObjectiveResultOutput struct{ *pulumi.OutputState }

func (LookupServiceLevelObjectiveResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceLevelObjectiveResult)(nil)).Elem()
}

func (o LookupServiceLevelObjectiveResultOutput) ToLookupServiceLevelObjectiveResultOutput() LookupServiceLevelObjectiveResultOutput {
	return o
}

func (o LookupServiceLevelObjectiveResultOutput) ToLookupServiceLevelObjectiveResultOutputWithContext(ctx context.Context) LookupServiceLevelObjectiveResultOutput {
	return o
}

func (o LookupServiceLevelObjectiveResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceLevelObjectiveResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupServiceLevelObjectiveResultOutput) MetricsQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceLevelObjectiveResult) *string { return v.MetricsQuery }).(pulumi.StringPtrOutput)
}

func (o LookupServiceLevelObjectiveResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLevelObjectiveResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupServiceLevelObjectiveResultOutput) NameQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceLevelObjectiveResult) *string { return v.NameQuery }).(pulumi.StringPtrOutput)
}

func (o LookupServiceLevelObjectiveResultOutput) TagsQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceLevelObjectiveResult) *string { return v.TagsQuery }).(pulumi.StringPtrOutput)
}

func (o LookupServiceLevelObjectiveResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceLevelObjectiveResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceLevelObjectiveResultOutput{})
}
