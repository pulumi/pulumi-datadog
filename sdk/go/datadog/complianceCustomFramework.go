// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog Compliance Custom Framework resource, which is used to create and manage compliance custom frameworks.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.NewComplianceCustomFramework(ctx, "framework", &datadog.ComplianceCustomFrameworkArgs{
//				Name:    pulumi.String("my-custom-framework-terraform-2"),
//				Version: pulumi.String("2.0.0"),
//				Handle:  pulumi.String("my-custom-framework-terraform-2"),
//				Requirements: datadog.ComplianceCustomFrameworkRequirementArray{
//					&datadog.ComplianceCustomFrameworkRequirementArgs{
//						Name: pulumi.String("requirement2"),
//						Controls: datadog.ComplianceCustomFrameworkRequirementControlArray{
//							&datadog.ComplianceCustomFrameworkRequirementControlArgs{
//								Name: pulumi.String("control2"),
//								RulesIds: pulumi.StringArray{
//									pulumi.String("def-000-h9o"),
//									pulumi.String("def-000-b6i"),
//									pulumi.String("def-000-yed"),
//									pulumi.String("def-000-h5a"),
//									pulumi.String("def-000-aw5"),
//								},
//							},
//							&datadog.ComplianceCustomFrameworkRequirementControlArgs{
//								Name: pulumi.String("control1"),
//								RulesIds: pulumi.StringArray{
//									pulumi.String("def-000-j9v"),
//									pulumi.String("def-000-465"),
//									pulumi.String("def-000-vq1"),
//									pulumi.String("def-000-4hf"),
//									pulumi.String("def-000-s2d"),
//									pulumi.String("def-000-vnl"),
//								},
//							},
//						},
//					},
//					&datadog.ComplianceCustomFrameworkRequirementArgs{
//						Name: pulumi.String("requirement1"),
//						Controls: datadog.ComplianceCustomFrameworkRequirementControlArray{
//							&datadog.ComplianceCustomFrameworkRequirementControlArgs{
//								Name: pulumi.String("control2"),
//								RulesIds: pulumi.StringArray{
//									pulumi.String("def-000-wuf"),
//									pulumi.String("def-000-7og"),
//								},
//							},
//							&datadog.ComplianceCustomFrameworkRequirementControlArgs{
//								Name: pulumi.String("control5"),
//								RulesIds: pulumi.StringArray{
//									pulumi.String("def-000-mdt"),
//									pulumi.String("def-000-zrx"),
//									pulumi.String("def-000-z6k"),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ComplianceCustomFramework struct {
	pulumi.CustomResourceState

	// The framework handle. String length must be at least 1. This field is immutable.
	Handle pulumi.StringOutput `pulumi:"handle"`
	// The URL of the icon representing the framework
	IconUrl pulumi.StringPtrOutput `pulumi:"iconUrl"`
	// The framework name. String length must be at least 1.
	Name pulumi.StringOutput `pulumi:"name"`
	// The requirements of the framework. Length must be at least 1.
	Requirements ComplianceCustomFrameworkRequirementArrayOutput `pulumi:"requirements"`
	// The framework version. String length must be at least 1. This field is immutable.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewComplianceCustomFramework registers a new resource with the given unique name, arguments, and options.
func NewComplianceCustomFramework(ctx *pulumi.Context,
	name string, args *ComplianceCustomFrameworkArgs, opts ...pulumi.ResourceOption) (*ComplianceCustomFramework, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Handle == nil {
		return nil, errors.New("invalid value for required argument 'Handle'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ComplianceCustomFramework
	err := ctx.RegisterResource("datadog:index/complianceCustomFramework:ComplianceCustomFramework", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComplianceCustomFramework gets an existing ComplianceCustomFramework resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComplianceCustomFramework(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComplianceCustomFrameworkState, opts ...pulumi.ResourceOption) (*ComplianceCustomFramework, error) {
	var resource ComplianceCustomFramework
	err := ctx.ReadResource("datadog:index/complianceCustomFramework:ComplianceCustomFramework", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComplianceCustomFramework resources.
type complianceCustomFrameworkState struct {
	// The framework handle. String length must be at least 1. This field is immutable.
	Handle *string `pulumi:"handle"`
	// The URL of the icon representing the framework
	IconUrl *string `pulumi:"iconUrl"`
	// The framework name. String length must be at least 1.
	Name *string `pulumi:"name"`
	// The requirements of the framework. Length must be at least 1.
	Requirements []ComplianceCustomFrameworkRequirement `pulumi:"requirements"`
	// The framework version. String length must be at least 1. This field is immutable.
	Version *string `pulumi:"version"`
}

type ComplianceCustomFrameworkState struct {
	// The framework handle. String length must be at least 1. This field is immutable.
	Handle pulumi.StringPtrInput
	// The URL of the icon representing the framework
	IconUrl pulumi.StringPtrInput
	// The framework name. String length must be at least 1.
	Name pulumi.StringPtrInput
	// The requirements of the framework. Length must be at least 1.
	Requirements ComplianceCustomFrameworkRequirementArrayInput
	// The framework version. String length must be at least 1. This field is immutable.
	Version pulumi.StringPtrInput
}

func (ComplianceCustomFrameworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*complianceCustomFrameworkState)(nil)).Elem()
}

type complianceCustomFrameworkArgs struct {
	// The framework handle. String length must be at least 1. This field is immutable.
	Handle string `pulumi:"handle"`
	// The URL of the icon representing the framework
	IconUrl *string `pulumi:"iconUrl"`
	// The framework name. String length must be at least 1.
	Name string `pulumi:"name"`
	// The requirements of the framework. Length must be at least 1.
	Requirements []ComplianceCustomFrameworkRequirement `pulumi:"requirements"`
	// The framework version. String length must be at least 1. This field is immutable.
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a ComplianceCustomFramework resource.
type ComplianceCustomFrameworkArgs struct {
	// The framework handle. String length must be at least 1. This field is immutable.
	Handle pulumi.StringInput
	// The URL of the icon representing the framework
	IconUrl pulumi.StringPtrInput
	// The framework name. String length must be at least 1.
	Name pulumi.StringInput
	// The requirements of the framework. Length must be at least 1.
	Requirements ComplianceCustomFrameworkRequirementArrayInput
	// The framework version. String length must be at least 1. This field is immutable.
	Version pulumi.StringInput
}

func (ComplianceCustomFrameworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*complianceCustomFrameworkArgs)(nil)).Elem()
}

type ComplianceCustomFrameworkInput interface {
	pulumi.Input

	ToComplianceCustomFrameworkOutput() ComplianceCustomFrameworkOutput
	ToComplianceCustomFrameworkOutputWithContext(ctx context.Context) ComplianceCustomFrameworkOutput
}

func (*ComplianceCustomFramework) ElementType() reflect.Type {
	return reflect.TypeOf((**ComplianceCustomFramework)(nil)).Elem()
}

func (i *ComplianceCustomFramework) ToComplianceCustomFrameworkOutput() ComplianceCustomFrameworkOutput {
	return i.ToComplianceCustomFrameworkOutputWithContext(context.Background())
}

func (i *ComplianceCustomFramework) ToComplianceCustomFrameworkOutputWithContext(ctx context.Context) ComplianceCustomFrameworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComplianceCustomFrameworkOutput)
}

// ComplianceCustomFrameworkArrayInput is an input type that accepts ComplianceCustomFrameworkArray and ComplianceCustomFrameworkArrayOutput values.
// You can construct a concrete instance of `ComplianceCustomFrameworkArrayInput` via:
//
//	ComplianceCustomFrameworkArray{ ComplianceCustomFrameworkArgs{...} }
type ComplianceCustomFrameworkArrayInput interface {
	pulumi.Input

	ToComplianceCustomFrameworkArrayOutput() ComplianceCustomFrameworkArrayOutput
	ToComplianceCustomFrameworkArrayOutputWithContext(context.Context) ComplianceCustomFrameworkArrayOutput
}

type ComplianceCustomFrameworkArray []ComplianceCustomFrameworkInput

func (ComplianceCustomFrameworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComplianceCustomFramework)(nil)).Elem()
}

func (i ComplianceCustomFrameworkArray) ToComplianceCustomFrameworkArrayOutput() ComplianceCustomFrameworkArrayOutput {
	return i.ToComplianceCustomFrameworkArrayOutputWithContext(context.Background())
}

func (i ComplianceCustomFrameworkArray) ToComplianceCustomFrameworkArrayOutputWithContext(ctx context.Context) ComplianceCustomFrameworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComplianceCustomFrameworkArrayOutput)
}

// ComplianceCustomFrameworkMapInput is an input type that accepts ComplianceCustomFrameworkMap and ComplianceCustomFrameworkMapOutput values.
// You can construct a concrete instance of `ComplianceCustomFrameworkMapInput` via:
//
//	ComplianceCustomFrameworkMap{ "key": ComplianceCustomFrameworkArgs{...} }
type ComplianceCustomFrameworkMapInput interface {
	pulumi.Input

	ToComplianceCustomFrameworkMapOutput() ComplianceCustomFrameworkMapOutput
	ToComplianceCustomFrameworkMapOutputWithContext(context.Context) ComplianceCustomFrameworkMapOutput
}

type ComplianceCustomFrameworkMap map[string]ComplianceCustomFrameworkInput

func (ComplianceCustomFrameworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComplianceCustomFramework)(nil)).Elem()
}

func (i ComplianceCustomFrameworkMap) ToComplianceCustomFrameworkMapOutput() ComplianceCustomFrameworkMapOutput {
	return i.ToComplianceCustomFrameworkMapOutputWithContext(context.Background())
}

func (i ComplianceCustomFrameworkMap) ToComplianceCustomFrameworkMapOutputWithContext(ctx context.Context) ComplianceCustomFrameworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComplianceCustomFrameworkMapOutput)
}

type ComplianceCustomFrameworkOutput struct{ *pulumi.OutputState }

func (ComplianceCustomFrameworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComplianceCustomFramework)(nil)).Elem()
}

func (o ComplianceCustomFrameworkOutput) ToComplianceCustomFrameworkOutput() ComplianceCustomFrameworkOutput {
	return o
}

func (o ComplianceCustomFrameworkOutput) ToComplianceCustomFrameworkOutputWithContext(ctx context.Context) ComplianceCustomFrameworkOutput {
	return o
}

// The framework handle. String length must be at least 1. This field is immutable.
func (o ComplianceCustomFrameworkOutput) Handle() pulumi.StringOutput {
	return o.ApplyT(func(v *ComplianceCustomFramework) pulumi.StringOutput { return v.Handle }).(pulumi.StringOutput)
}

// The URL of the icon representing the framework
func (o ComplianceCustomFrameworkOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComplianceCustomFramework) pulumi.StringPtrOutput { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// The framework name. String length must be at least 1.
func (o ComplianceCustomFrameworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ComplianceCustomFramework) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The requirements of the framework. Length must be at least 1.
func (o ComplianceCustomFrameworkOutput) Requirements() ComplianceCustomFrameworkRequirementArrayOutput {
	return o.ApplyT(func(v *ComplianceCustomFramework) ComplianceCustomFrameworkRequirementArrayOutput {
		return v.Requirements
	}).(ComplianceCustomFrameworkRequirementArrayOutput)
}

// The framework version. String length must be at least 1. This field is immutable.
func (o ComplianceCustomFrameworkOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *ComplianceCustomFramework) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type ComplianceCustomFrameworkArrayOutput struct{ *pulumi.OutputState }

func (ComplianceCustomFrameworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComplianceCustomFramework)(nil)).Elem()
}

func (o ComplianceCustomFrameworkArrayOutput) ToComplianceCustomFrameworkArrayOutput() ComplianceCustomFrameworkArrayOutput {
	return o
}

func (o ComplianceCustomFrameworkArrayOutput) ToComplianceCustomFrameworkArrayOutputWithContext(ctx context.Context) ComplianceCustomFrameworkArrayOutput {
	return o
}

func (o ComplianceCustomFrameworkArrayOutput) Index(i pulumi.IntInput) ComplianceCustomFrameworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ComplianceCustomFramework {
		return vs[0].([]*ComplianceCustomFramework)[vs[1].(int)]
	}).(ComplianceCustomFrameworkOutput)
}

type ComplianceCustomFrameworkMapOutput struct{ *pulumi.OutputState }

func (ComplianceCustomFrameworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComplianceCustomFramework)(nil)).Elem()
}

func (o ComplianceCustomFrameworkMapOutput) ToComplianceCustomFrameworkMapOutput() ComplianceCustomFrameworkMapOutput {
	return o
}

func (o ComplianceCustomFrameworkMapOutput) ToComplianceCustomFrameworkMapOutputWithContext(ctx context.Context) ComplianceCustomFrameworkMapOutput {
	return o
}

func (o ComplianceCustomFrameworkMapOutput) MapIndex(k pulumi.StringInput) ComplianceCustomFrameworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ComplianceCustomFramework {
		return vs[0].(map[string]*ComplianceCustomFramework)[vs[1].(string)]
	}).(ComplianceCustomFrameworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComplianceCustomFrameworkInput)(nil)).Elem(), &ComplianceCustomFramework{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComplianceCustomFrameworkArrayInput)(nil)).Elem(), ComplianceCustomFrameworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComplianceCustomFrameworkMapInput)(nil)).Elem(), ComplianceCustomFrameworkMap{})
	pulumi.RegisterOutputType(ComplianceCustomFrameworkOutput{})
	pulumi.RegisterOutputType(ComplianceCustomFrameworkArrayOutput{})
	pulumi.RegisterOutputType(ComplianceCustomFrameworkMapOutput{})
}
