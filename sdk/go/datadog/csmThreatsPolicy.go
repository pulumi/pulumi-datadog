// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog CSM Threats policy API resource.
type CsmThreatsPolicy struct {
	pulumi.CustomResourceState

	// A description for the policy.
	Description pulumi.StringOutput `pulumi:"description"`
	// Indicates whether the policy is enabled. Defaults to `false`.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
	HostTagsLists pulumi.StringArrayArrayOutput `pulumi:"hostTagsLists"`
	// The name of the policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
}

// NewCsmThreatsPolicy registers a new resource with the given unique name, arguments, and options.
func NewCsmThreatsPolicy(ctx *pulumi.Context,
	name string, args *CsmThreatsPolicyArgs, opts ...pulumi.ResourceOption) (*CsmThreatsPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CsmThreatsPolicy
	err := ctx.RegisterResource("datadog:index/csmThreatsPolicy:CsmThreatsPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCsmThreatsPolicy gets an existing CsmThreatsPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCsmThreatsPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CsmThreatsPolicyState, opts ...pulumi.ResourceOption) (*CsmThreatsPolicy, error) {
	var resource CsmThreatsPolicy
	err := ctx.ReadResource("datadog:index/csmThreatsPolicy:CsmThreatsPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CsmThreatsPolicy resources.
type csmThreatsPolicyState struct {
	// A description for the policy.
	Description *string `pulumi:"description"`
	// Indicates whether the policy is enabled. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
	HostTagsLists [][]string `pulumi:"hostTagsLists"`
	// The name of the policy.
	Name *string `pulumi:"name"`
	// Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
	Tags []string `pulumi:"tags"`
}

type CsmThreatsPolicyState struct {
	// A description for the policy.
	Description pulumi.StringPtrInput
	// Indicates whether the policy is enabled. Defaults to `false`.
	Enabled pulumi.BoolPtrInput
	// Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
	HostTagsLists pulumi.StringArrayArrayInput
	// The name of the policy.
	Name pulumi.StringPtrInput
	// Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
	Tags pulumi.StringArrayInput
}

func (CsmThreatsPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*csmThreatsPolicyState)(nil)).Elem()
}

type csmThreatsPolicyArgs struct {
	// A description for the policy.
	Description *string `pulumi:"description"`
	// Indicates whether the policy is enabled. Defaults to `false`.
	Enabled *bool `pulumi:"enabled"`
	// Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
	HostTagsLists [][]string `pulumi:"hostTagsLists"`
	// The name of the policy.
	Name string `pulumi:"name"`
	// Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a CsmThreatsPolicy resource.
type CsmThreatsPolicyArgs struct {
	// A description for the policy.
	Description pulumi.StringPtrInput
	// Indicates whether the policy is enabled. Defaults to `false`.
	Enabled pulumi.BoolPtrInput
	// Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
	HostTagsLists pulumi.StringArrayArrayInput
	// The name of the policy.
	Name pulumi.StringInput
	// Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
	Tags pulumi.StringArrayInput
}

func (CsmThreatsPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*csmThreatsPolicyArgs)(nil)).Elem()
}

type CsmThreatsPolicyInput interface {
	pulumi.Input

	ToCsmThreatsPolicyOutput() CsmThreatsPolicyOutput
	ToCsmThreatsPolicyOutputWithContext(ctx context.Context) CsmThreatsPolicyOutput
}

func (*CsmThreatsPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**CsmThreatsPolicy)(nil)).Elem()
}

func (i *CsmThreatsPolicy) ToCsmThreatsPolicyOutput() CsmThreatsPolicyOutput {
	return i.ToCsmThreatsPolicyOutputWithContext(context.Background())
}

func (i *CsmThreatsPolicy) ToCsmThreatsPolicyOutputWithContext(ctx context.Context) CsmThreatsPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsmThreatsPolicyOutput)
}

// CsmThreatsPolicyArrayInput is an input type that accepts CsmThreatsPolicyArray and CsmThreatsPolicyArrayOutput values.
// You can construct a concrete instance of `CsmThreatsPolicyArrayInput` via:
//
//	CsmThreatsPolicyArray{ CsmThreatsPolicyArgs{...} }
type CsmThreatsPolicyArrayInput interface {
	pulumi.Input

	ToCsmThreatsPolicyArrayOutput() CsmThreatsPolicyArrayOutput
	ToCsmThreatsPolicyArrayOutputWithContext(context.Context) CsmThreatsPolicyArrayOutput
}

type CsmThreatsPolicyArray []CsmThreatsPolicyInput

func (CsmThreatsPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CsmThreatsPolicy)(nil)).Elem()
}

func (i CsmThreatsPolicyArray) ToCsmThreatsPolicyArrayOutput() CsmThreatsPolicyArrayOutput {
	return i.ToCsmThreatsPolicyArrayOutputWithContext(context.Background())
}

func (i CsmThreatsPolicyArray) ToCsmThreatsPolicyArrayOutputWithContext(ctx context.Context) CsmThreatsPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsmThreatsPolicyArrayOutput)
}

// CsmThreatsPolicyMapInput is an input type that accepts CsmThreatsPolicyMap and CsmThreatsPolicyMapOutput values.
// You can construct a concrete instance of `CsmThreatsPolicyMapInput` via:
//
//	CsmThreatsPolicyMap{ "key": CsmThreatsPolicyArgs{...} }
type CsmThreatsPolicyMapInput interface {
	pulumi.Input

	ToCsmThreatsPolicyMapOutput() CsmThreatsPolicyMapOutput
	ToCsmThreatsPolicyMapOutputWithContext(context.Context) CsmThreatsPolicyMapOutput
}

type CsmThreatsPolicyMap map[string]CsmThreatsPolicyInput

func (CsmThreatsPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CsmThreatsPolicy)(nil)).Elem()
}

func (i CsmThreatsPolicyMap) ToCsmThreatsPolicyMapOutput() CsmThreatsPolicyMapOutput {
	return i.ToCsmThreatsPolicyMapOutputWithContext(context.Background())
}

func (i CsmThreatsPolicyMap) ToCsmThreatsPolicyMapOutputWithContext(ctx context.Context) CsmThreatsPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsmThreatsPolicyMapOutput)
}

type CsmThreatsPolicyOutput struct{ *pulumi.OutputState }

func (CsmThreatsPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CsmThreatsPolicy)(nil)).Elem()
}

func (o CsmThreatsPolicyOutput) ToCsmThreatsPolicyOutput() CsmThreatsPolicyOutput {
	return o
}

func (o CsmThreatsPolicyOutput) ToCsmThreatsPolicyOutputWithContext(ctx context.Context) CsmThreatsPolicyOutput {
	return o
}

// A description for the policy.
func (o CsmThreatsPolicyOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CsmThreatsPolicy) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Indicates whether the policy is enabled. Defaults to `false`.
func (o CsmThreatsPolicyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CsmThreatsPolicy) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
func (o CsmThreatsPolicyOutput) HostTagsLists() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v *CsmThreatsPolicy) pulumi.StringArrayArrayOutput { return v.HostTagsLists }).(pulumi.StringArrayArrayOutput)
}

// The name of the policy.
func (o CsmThreatsPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CsmThreatsPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
func (o CsmThreatsPolicyOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CsmThreatsPolicy) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

type CsmThreatsPolicyArrayOutput struct{ *pulumi.OutputState }

func (CsmThreatsPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CsmThreatsPolicy)(nil)).Elem()
}

func (o CsmThreatsPolicyArrayOutput) ToCsmThreatsPolicyArrayOutput() CsmThreatsPolicyArrayOutput {
	return o
}

func (o CsmThreatsPolicyArrayOutput) ToCsmThreatsPolicyArrayOutputWithContext(ctx context.Context) CsmThreatsPolicyArrayOutput {
	return o
}

func (o CsmThreatsPolicyArrayOutput) Index(i pulumi.IntInput) CsmThreatsPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CsmThreatsPolicy {
		return vs[0].([]*CsmThreatsPolicy)[vs[1].(int)]
	}).(CsmThreatsPolicyOutput)
}

type CsmThreatsPolicyMapOutput struct{ *pulumi.OutputState }

func (CsmThreatsPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CsmThreatsPolicy)(nil)).Elem()
}

func (o CsmThreatsPolicyMapOutput) ToCsmThreatsPolicyMapOutput() CsmThreatsPolicyMapOutput {
	return o
}

func (o CsmThreatsPolicyMapOutput) ToCsmThreatsPolicyMapOutputWithContext(ctx context.Context) CsmThreatsPolicyMapOutput {
	return o
}

func (o CsmThreatsPolicyMapOutput) MapIndex(k pulumi.StringInput) CsmThreatsPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CsmThreatsPolicy {
		return vs[0].(map[string]*CsmThreatsPolicy)[vs[1].(string)]
	}).(CsmThreatsPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CsmThreatsPolicyInput)(nil)).Elem(), &CsmThreatsPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsmThreatsPolicyArrayInput)(nil)).Elem(), CsmThreatsPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsmThreatsPolicyMapInput)(nil)).Elem(), CsmThreatsPolicyMap{})
	pulumi.RegisterOutputType(CsmThreatsPolicyOutput{})
	pulumi.RegisterOutputType(CsmThreatsPolicyArrayOutput{})
	pulumi.RegisterOutputType(CsmThreatsPolicyMapOutput{})
}
