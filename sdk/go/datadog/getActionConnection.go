// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A connection that can be used in Actions, including in the Workflow Automation and App Builder products.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.LookupActionConnection(ctx, &datadog.LookupActionConnectionArgs{
//				Id: "11111111-2222-3333-4444-555555555555",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupActionConnection(ctx *pulumi.Context, args *LookupActionConnectionArgs, opts ...pulumi.InvokeOption) (*LookupActionConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupActionConnectionResult
	err := ctx.Invoke("datadog:index/getActionConnection:getActionConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getActionConnection.
type LookupActionConnectionArgs struct {
	// Configuration for an AWS connection
	Aws *GetActionConnectionAws `pulumi:"aws"`
	// Configuration for an HTTP connection
	Http *GetActionConnectionHttp `pulumi:"http"`
	// ID for Connection.
	Id string `pulumi:"id"`
}

// A collection of values returned by getActionConnection.
type LookupActionConnectionResult struct {
	// Configuration for an AWS connection
	Aws *GetActionConnectionAws `pulumi:"aws"`
	// Configuration for an HTTP connection
	Http *GetActionConnectionHttp `pulumi:"http"`
	// ID for Connection.
	Id string `pulumi:"id"`
	// Name of the connection
	Name string `pulumi:"name"`
}

func LookupActionConnectionOutput(ctx *pulumi.Context, args LookupActionConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupActionConnectionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupActionConnectionResultOutput, error) {
			args := v.(LookupActionConnectionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("datadog:index/getActionConnection:getActionConnection", args, LookupActionConnectionResultOutput{}, options).(LookupActionConnectionResultOutput), nil
		}).(LookupActionConnectionResultOutput)
}

// A collection of arguments for invoking getActionConnection.
type LookupActionConnectionOutputArgs struct {
	// Configuration for an AWS connection
	Aws GetActionConnectionAwsPtrInput `pulumi:"aws"`
	// Configuration for an HTTP connection
	Http GetActionConnectionHttpPtrInput `pulumi:"http"`
	// ID for Connection.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupActionConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupActionConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getActionConnection.
type LookupActionConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupActionConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupActionConnectionResult)(nil)).Elem()
}

func (o LookupActionConnectionResultOutput) ToLookupActionConnectionResultOutput() LookupActionConnectionResultOutput {
	return o
}

func (o LookupActionConnectionResultOutput) ToLookupActionConnectionResultOutputWithContext(ctx context.Context) LookupActionConnectionResultOutput {
	return o
}

// Configuration for an AWS connection
func (o LookupActionConnectionResultOutput) Aws() GetActionConnectionAwsPtrOutput {
	return o.ApplyT(func(v LookupActionConnectionResult) *GetActionConnectionAws { return v.Aws }).(GetActionConnectionAwsPtrOutput)
}

// Configuration for an HTTP connection
func (o LookupActionConnectionResultOutput) Http() GetActionConnectionHttpPtrOutput {
	return o.ApplyT(func(v LookupActionConnectionResult) *GetActionConnectionHttp { return v.Http }).(GetActionConnectionHttpPtrOutput)
}

// ID for Connection.
func (o LookupActionConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupActionConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the connection
func (o LookupActionConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupActionConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupActionConnectionResultOutput{})
}
