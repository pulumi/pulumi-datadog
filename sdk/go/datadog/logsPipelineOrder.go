// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog Logs Pipeline API resource, which is used to manage Datadog log pipelines order.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.NewLogsPipelineOrder(ctx, "samplePipelineOrder", &datadog.LogsPipelineOrderArgs{
//				Name: pulumi.String("sample_pipeline_order"),
//				Pipelines: pulumi.StringArray{
//					datadog_logs_custom_pipeline.Sample_pipeline.Id,
//					datadog_logs_integration_pipeline.Python.Id,
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// There must be at most one datadog_logs_pipeline_order resource. Pipeline order creation is not supported from logs config API. You can import the datadog_logs_pipeline_order or create a pipeline order (which is actually doing the update operation).
//
// ```sh
// $ pulumi import datadog:index/logsPipelineOrder:LogsPipelineOrder name> <name>
// ```
type LogsPipelineOrder struct {
	pulumi.CustomResourceState

	// The name attribute in the resource `LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).
	Name pulumi.StringOutput `pulumi:"name"`
	// The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
	Pipelines pulumi.StringArrayOutput `pulumi:"pipelines"`
}

// NewLogsPipelineOrder registers a new resource with the given unique name, arguments, and options.
func NewLogsPipelineOrder(ctx *pulumi.Context,
	name string, args *LogsPipelineOrderArgs, opts ...pulumi.ResourceOption) (*LogsPipelineOrder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Pipelines == nil {
		return nil, errors.New("invalid value for required argument 'Pipelines'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogsPipelineOrder
	err := ctx.RegisterResource("datadog:index/logsPipelineOrder:LogsPipelineOrder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogsPipelineOrder gets an existing LogsPipelineOrder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogsPipelineOrder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogsPipelineOrderState, opts ...pulumi.ResourceOption) (*LogsPipelineOrder, error) {
	var resource LogsPipelineOrder
	err := ctx.ReadResource("datadog:index/logsPipelineOrder:LogsPipelineOrder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogsPipelineOrder resources.
type logsPipelineOrderState struct {
	// The name attribute in the resource `LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).
	Name *string `pulumi:"name"`
	// The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
	Pipelines []string `pulumi:"pipelines"`
}

type LogsPipelineOrderState struct {
	// The name attribute in the resource `LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).
	Name pulumi.StringPtrInput
	// The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
	Pipelines pulumi.StringArrayInput
}

func (LogsPipelineOrderState) ElementType() reflect.Type {
	return reflect.TypeOf((*logsPipelineOrderState)(nil)).Elem()
}

type logsPipelineOrderArgs struct {
	// The name attribute in the resource `LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).
	Name string `pulumi:"name"`
	// The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
	Pipelines []string `pulumi:"pipelines"`
}

// The set of arguments for constructing a LogsPipelineOrder resource.
type LogsPipelineOrderArgs struct {
	// The name attribute in the resource `LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).
	Name pulumi.StringInput
	// The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
	Pipelines pulumi.StringArrayInput
}

func (LogsPipelineOrderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logsPipelineOrderArgs)(nil)).Elem()
}

type LogsPipelineOrderInput interface {
	pulumi.Input

	ToLogsPipelineOrderOutput() LogsPipelineOrderOutput
	ToLogsPipelineOrderOutputWithContext(ctx context.Context) LogsPipelineOrderOutput
}

func (*LogsPipelineOrder) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsPipelineOrder)(nil)).Elem()
}

func (i *LogsPipelineOrder) ToLogsPipelineOrderOutput() LogsPipelineOrderOutput {
	return i.ToLogsPipelineOrderOutputWithContext(context.Background())
}

func (i *LogsPipelineOrder) ToLogsPipelineOrderOutputWithContext(ctx context.Context) LogsPipelineOrderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsPipelineOrderOutput)
}

// LogsPipelineOrderArrayInput is an input type that accepts LogsPipelineOrderArray and LogsPipelineOrderArrayOutput values.
// You can construct a concrete instance of `LogsPipelineOrderArrayInput` via:
//
//	LogsPipelineOrderArray{ LogsPipelineOrderArgs{...} }
type LogsPipelineOrderArrayInput interface {
	pulumi.Input

	ToLogsPipelineOrderArrayOutput() LogsPipelineOrderArrayOutput
	ToLogsPipelineOrderArrayOutputWithContext(context.Context) LogsPipelineOrderArrayOutput
}

type LogsPipelineOrderArray []LogsPipelineOrderInput

func (LogsPipelineOrderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogsPipelineOrder)(nil)).Elem()
}

func (i LogsPipelineOrderArray) ToLogsPipelineOrderArrayOutput() LogsPipelineOrderArrayOutput {
	return i.ToLogsPipelineOrderArrayOutputWithContext(context.Background())
}

func (i LogsPipelineOrderArray) ToLogsPipelineOrderArrayOutputWithContext(ctx context.Context) LogsPipelineOrderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsPipelineOrderArrayOutput)
}

// LogsPipelineOrderMapInput is an input type that accepts LogsPipelineOrderMap and LogsPipelineOrderMapOutput values.
// You can construct a concrete instance of `LogsPipelineOrderMapInput` via:
//
//	LogsPipelineOrderMap{ "key": LogsPipelineOrderArgs{...} }
type LogsPipelineOrderMapInput interface {
	pulumi.Input

	ToLogsPipelineOrderMapOutput() LogsPipelineOrderMapOutput
	ToLogsPipelineOrderMapOutputWithContext(context.Context) LogsPipelineOrderMapOutput
}

type LogsPipelineOrderMap map[string]LogsPipelineOrderInput

func (LogsPipelineOrderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogsPipelineOrder)(nil)).Elem()
}

func (i LogsPipelineOrderMap) ToLogsPipelineOrderMapOutput() LogsPipelineOrderMapOutput {
	return i.ToLogsPipelineOrderMapOutputWithContext(context.Background())
}

func (i LogsPipelineOrderMap) ToLogsPipelineOrderMapOutputWithContext(ctx context.Context) LogsPipelineOrderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsPipelineOrderMapOutput)
}

type LogsPipelineOrderOutput struct{ *pulumi.OutputState }

func (LogsPipelineOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsPipelineOrder)(nil)).Elem()
}

func (o LogsPipelineOrderOutput) ToLogsPipelineOrderOutput() LogsPipelineOrderOutput {
	return o
}

func (o LogsPipelineOrderOutput) ToLogsPipelineOrderOutputWithContext(ctx context.Context) LogsPipelineOrderOutput {
	return o
}

// The name attribute in the resource `LogsPipelineOrder` needs to be unique. It's recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).
func (o LogsPipelineOrderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LogsPipelineOrder) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
func (o LogsPipelineOrderOutput) Pipelines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LogsPipelineOrder) pulumi.StringArrayOutput { return v.Pipelines }).(pulumi.StringArrayOutput)
}

type LogsPipelineOrderArrayOutput struct{ *pulumi.OutputState }

func (LogsPipelineOrderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogsPipelineOrder)(nil)).Elem()
}

func (o LogsPipelineOrderArrayOutput) ToLogsPipelineOrderArrayOutput() LogsPipelineOrderArrayOutput {
	return o
}

func (o LogsPipelineOrderArrayOutput) ToLogsPipelineOrderArrayOutputWithContext(ctx context.Context) LogsPipelineOrderArrayOutput {
	return o
}

func (o LogsPipelineOrderArrayOutput) Index(i pulumi.IntInput) LogsPipelineOrderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogsPipelineOrder {
		return vs[0].([]*LogsPipelineOrder)[vs[1].(int)]
	}).(LogsPipelineOrderOutput)
}

type LogsPipelineOrderMapOutput struct{ *pulumi.OutputState }

func (LogsPipelineOrderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogsPipelineOrder)(nil)).Elem()
}

func (o LogsPipelineOrderMapOutput) ToLogsPipelineOrderMapOutput() LogsPipelineOrderMapOutput {
	return o
}

func (o LogsPipelineOrderMapOutput) ToLogsPipelineOrderMapOutputWithContext(ctx context.Context) LogsPipelineOrderMapOutput {
	return o
}

func (o LogsPipelineOrderMapOutput) MapIndex(k pulumi.StringInput) LogsPipelineOrderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogsPipelineOrder {
		return vs[0].(map[string]*LogsPipelineOrder)[vs[1].(string)]
	}).(LogsPipelineOrderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogsPipelineOrderInput)(nil)).Elem(), &LogsPipelineOrder{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsPipelineOrderArrayInput)(nil)).Elem(), LogsPipelineOrderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsPipelineOrderMapInput)(nil)).Elem(), LogsPipelineOrderMap{})
	pulumi.RegisterOutputType(LogsPipelineOrderOutput{})
	pulumi.RegisterOutputType(LogsPipelineOrderArrayOutput{})
	pulumi.RegisterOutputType(LogsPipelineOrderMapOutput{})
}
