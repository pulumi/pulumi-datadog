// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The object describing the configuration of the retention filter to create/update.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create APM retention filter
//			_, err := datadog.NewApmRetentionFilter(ctx, "foo", &datadog.ApmRetentionFilterArgs{
//				Enabled: pulumi.Bool(false),
//				Filter: &datadog.ApmRetentionFilterFilterArgs{
//					Query: pulumi.String("*"),
//				},
//				FilterType: pulumi.String("spans-sampling-processor"),
//				Name:       pulumi.String("Sample order"),
//				Rate:       pulumi.String("1.0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// # Import existing APM retention filter
//
// ```sh
// $ pulumi import datadog:index/apmRetentionFilter:ApmRetentionFilter foo <filter_id>
// ```
type ApmRetentionFilter struct {
	pulumi.CustomResourceState

	// the status of the retention filter.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The spans filter. Spans matching this filter will be indexed and stored.
	Filter ApmRetentionFilterFilterPtrOutput `pulumi:"filter"`
	// The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.
	FilterType pulumi.StringOutput `pulumi:"filterType"`
	// The name of the retention filter.
	Name pulumi.StringOutput `pulumi:"name"`
	// Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.
	Rate pulumi.StringOutput `pulumi:"rate"`
}

// NewApmRetentionFilter registers a new resource with the given unique name, arguments, and options.
func NewApmRetentionFilter(ctx *pulumi.Context,
	name string, args *ApmRetentionFilterArgs, opts ...pulumi.ResourceOption) (*ApmRetentionFilter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.FilterType == nil {
		return nil, errors.New("invalid value for required argument 'FilterType'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Rate == nil {
		return nil, errors.New("invalid value for required argument 'Rate'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApmRetentionFilter
	err := ctx.RegisterResource("datadog:index/apmRetentionFilter:ApmRetentionFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApmRetentionFilter gets an existing ApmRetentionFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApmRetentionFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApmRetentionFilterState, opts ...pulumi.ResourceOption) (*ApmRetentionFilter, error) {
	var resource ApmRetentionFilter
	err := ctx.ReadResource("datadog:index/apmRetentionFilter:ApmRetentionFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApmRetentionFilter resources.
type apmRetentionFilterState struct {
	// the status of the retention filter.
	Enabled *bool `pulumi:"enabled"`
	// The spans filter. Spans matching this filter will be indexed and stored.
	Filter *ApmRetentionFilterFilter `pulumi:"filter"`
	// The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.
	FilterType *string `pulumi:"filterType"`
	// The name of the retention filter.
	Name *string `pulumi:"name"`
	// Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.
	Rate *string `pulumi:"rate"`
}

type ApmRetentionFilterState struct {
	// the status of the retention filter.
	Enabled pulumi.BoolPtrInput
	// The spans filter. Spans matching this filter will be indexed and stored.
	Filter ApmRetentionFilterFilterPtrInput
	// The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.
	FilterType pulumi.StringPtrInput
	// The name of the retention filter.
	Name pulumi.StringPtrInput
	// Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.
	Rate pulumi.StringPtrInput
}

func (ApmRetentionFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*apmRetentionFilterState)(nil)).Elem()
}

type apmRetentionFilterArgs struct {
	// the status of the retention filter.
	Enabled bool `pulumi:"enabled"`
	// The spans filter. Spans matching this filter will be indexed and stored.
	Filter *ApmRetentionFilterFilter `pulumi:"filter"`
	// The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.
	FilterType string `pulumi:"filterType"`
	// The name of the retention filter.
	Name string `pulumi:"name"`
	// Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.
	Rate string `pulumi:"rate"`
}

// The set of arguments for constructing a ApmRetentionFilter resource.
type ApmRetentionFilterArgs struct {
	// the status of the retention filter.
	Enabled pulumi.BoolInput
	// The spans filter. Spans matching this filter will be indexed and stored.
	Filter ApmRetentionFilterFilterPtrInput
	// The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.
	FilterType pulumi.StringInput
	// The name of the retention filter.
	Name pulumi.StringInput
	// Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.
	Rate pulumi.StringInput
}

func (ApmRetentionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apmRetentionFilterArgs)(nil)).Elem()
}

type ApmRetentionFilterInput interface {
	pulumi.Input

	ToApmRetentionFilterOutput() ApmRetentionFilterOutput
	ToApmRetentionFilterOutputWithContext(ctx context.Context) ApmRetentionFilterOutput
}

func (*ApmRetentionFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**ApmRetentionFilter)(nil)).Elem()
}

func (i *ApmRetentionFilter) ToApmRetentionFilterOutput() ApmRetentionFilterOutput {
	return i.ToApmRetentionFilterOutputWithContext(context.Background())
}

func (i *ApmRetentionFilter) ToApmRetentionFilterOutputWithContext(ctx context.Context) ApmRetentionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmRetentionFilterOutput)
}

// ApmRetentionFilterArrayInput is an input type that accepts ApmRetentionFilterArray and ApmRetentionFilterArrayOutput values.
// You can construct a concrete instance of `ApmRetentionFilterArrayInput` via:
//
//	ApmRetentionFilterArray{ ApmRetentionFilterArgs{...} }
type ApmRetentionFilterArrayInput interface {
	pulumi.Input

	ToApmRetentionFilterArrayOutput() ApmRetentionFilterArrayOutput
	ToApmRetentionFilterArrayOutputWithContext(context.Context) ApmRetentionFilterArrayOutput
}

type ApmRetentionFilterArray []ApmRetentionFilterInput

func (ApmRetentionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApmRetentionFilter)(nil)).Elem()
}

func (i ApmRetentionFilterArray) ToApmRetentionFilterArrayOutput() ApmRetentionFilterArrayOutput {
	return i.ToApmRetentionFilterArrayOutputWithContext(context.Background())
}

func (i ApmRetentionFilterArray) ToApmRetentionFilterArrayOutputWithContext(ctx context.Context) ApmRetentionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmRetentionFilterArrayOutput)
}

// ApmRetentionFilterMapInput is an input type that accepts ApmRetentionFilterMap and ApmRetentionFilterMapOutput values.
// You can construct a concrete instance of `ApmRetentionFilterMapInput` via:
//
//	ApmRetentionFilterMap{ "key": ApmRetentionFilterArgs{...} }
type ApmRetentionFilterMapInput interface {
	pulumi.Input

	ToApmRetentionFilterMapOutput() ApmRetentionFilterMapOutput
	ToApmRetentionFilterMapOutputWithContext(context.Context) ApmRetentionFilterMapOutput
}

type ApmRetentionFilterMap map[string]ApmRetentionFilterInput

func (ApmRetentionFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApmRetentionFilter)(nil)).Elem()
}

func (i ApmRetentionFilterMap) ToApmRetentionFilterMapOutput() ApmRetentionFilterMapOutput {
	return i.ToApmRetentionFilterMapOutputWithContext(context.Background())
}

func (i ApmRetentionFilterMap) ToApmRetentionFilterMapOutputWithContext(ctx context.Context) ApmRetentionFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApmRetentionFilterMapOutput)
}

type ApmRetentionFilterOutput struct{ *pulumi.OutputState }

func (ApmRetentionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApmRetentionFilter)(nil)).Elem()
}

func (o ApmRetentionFilterOutput) ToApmRetentionFilterOutput() ApmRetentionFilterOutput {
	return o
}

func (o ApmRetentionFilterOutput) ToApmRetentionFilterOutputWithContext(ctx context.Context) ApmRetentionFilterOutput {
	return o
}

// the status of the retention filter.
func (o ApmRetentionFilterOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ApmRetentionFilter) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The spans filter. Spans matching this filter will be indexed and stored.
func (o ApmRetentionFilterOutput) Filter() ApmRetentionFilterFilterPtrOutput {
	return o.ApplyT(func(v *ApmRetentionFilter) ApmRetentionFilterFilterPtrOutput { return v.Filter }).(ApmRetentionFilterFilterPtrOutput)
}

// The type of the retention filter, currently only spans-processing-sampling is available. Valid values are `spans-sampling-processor`.
func (o ApmRetentionFilterOutput) FilterType() pulumi.StringOutput {
	return o.ApplyT(func(v *ApmRetentionFilter) pulumi.StringOutput { return v.FilterType }).(pulumi.StringOutput)
}

// The name of the retention filter.
func (o ApmRetentionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ApmRetentionFilter) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Sample rate to apply to spans going through this retention filter as a string, a value of 1.0 keeps all spans matching the query.
func (o ApmRetentionFilterOutput) Rate() pulumi.StringOutput {
	return o.ApplyT(func(v *ApmRetentionFilter) pulumi.StringOutput { return v.Rate }).(pulumi.StringOutput)
}

type ApmRetentionFilterArrayOutput struct{ *pulumi.OutputState }

func (ApmRetentionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApmRetentionFilter)(nil)).Elem()
}

func (o ApmRetentionFilterArrayOutput) ToApmRetentionFilterArrayOutput() ApmRetentionFilterArrayOutput {
	return o
}

func (o ApmRetentionFilterArrayOutput) ToApmRetentionFilterArrayOutputWithContext(ctx context.Context) ApmRetentionFilterArrayOutput {
	return o
}

func (o ApmRetentionFilterArrayOutput) Index(i pulumi.IntInput) ApmRetentionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApmRetentionFilter {
		return vs[0].([]*ApmRetentionFilter)[vs[1].(int)]
	}).(ApmRetentionFilterOutput)
}

type ApmRetentionFilterMapOutput struct{ *pulumi.OutputState }

func (ApmRetentionFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApmRetentionFilter)(nil)).Elem()
}

func (o ApmRetentionFilterMapOutput) ToApmRetentionFilterMapOutput() ApmRetentionFilterMapOutput {
	return o
}

func (o ApmRetentionFilterMapOutput) ToApmRetentionFilterMapOutputWithContext(ctx context.Context) ApmRetentionFilterMapOutput {
	return o
}

func (o ApmRetentionFilterMapOutput) MapIndex(k pulumi.StringInput) ApmRetentionFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApmRetentionFilter {
		return vs[0].(map[string]*ApmRetentionFilter)[vs[1].(string)]
	}).(ApmRetentionFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApmRetentionFilterInput)(nil)).Elem(), &ApmRetentionFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApmRetentionFilterArrayInput)(nil)).Elem(), ApmRetentionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApmRetentionFilterMapInput)(nil)).Elem(), ApmRetentionFilterMap{})
	pulumi.RegisterOutputType(ApmRetentionFilterOutput{})
	pulumi.RegisterOutputType(ApmRetentionFilterArrayOutput{})
	pulumi.RegisterOutputType(ApmRetentionFilterMapOutput{})
}
