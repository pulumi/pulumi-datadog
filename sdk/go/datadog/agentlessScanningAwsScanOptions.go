// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog Agentless Scanning AWS scan options resource. This can be used to activate and configure Agentless scan options for an AWS account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Configure agentless scanning for an AWS account
//			_, err := datadog.NewAgentlessScanningAwsScanOptions(ctx, "example", &datadog.AgentlessScanningAwsScanOptionsArgs{
//				AwsAccountId:     pulumi.String("123456789012"),
//				Lambda:           pulumi.Bool(true),
//				SensitiveData:    pulumi.Bool(false),
//				VulnContainersOs: pulumi.Bool(true),
//				VulnHostOs:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// #!/bin/bash
//
// # Import existing agentless scanning aws scan options by AWS Account ID
//
// ```sh
// $ pulumi import datadog:index/agentlessScanningAwsScanOptions:AgentlessScanningAwsScanOptions example 123456789012
// ```
type AgentlessScanningAwsScanOptions struct {
	pulumi.CustomResourceState

	// The AWS Account ID for which agentless scanning is configured.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// Indicates if scanning of Lambda functions is enabled.
	Lambda pulumi.BoolOutput `pulumi:"lambda"`
	// Indicates if scanning for sensitive data is enabled.
	SensitiveData pulumi.BoolOutput `pulumi:"sensitiveData"`
	// Indicates if scanning for vulnerabilities in containers is enabled.
	VulnContainersOs pulumi.BoolOutput `pulumi:"vulnContainersOs"`
	// Indicates if scanning for vulnerabilities in hosts is enabled.
	VulnHostOs pulumi.BoolOutput `pulumi:"vulnHostOs"`
}

// NewAgentlessScanningAwsScanOptions registers a new resource with the given unique name, arguments, and options.
func NewAgentlessScanningAwsScanOptions(ctx *pulumi.Context,
	name string, args *AgentlessScanningAwsScanOptionsArgs, opts ...pulumi.ResourceOption) (*AgentlessScanningAwsScanOptions, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwsAccountId == nil {
		return nil, errors.New("invalid value for required argument 'AwsAccountId'")
	}
	if args.Lambda == nil {
		return nil, errors.New("invalid value for required argument 'Lambda'")
	}
	if args.SensitiveData == nil {
		return nil, errors.New("invalid value for required argument 'SensitiveData'")
	}
	if args.VulnContainersOs == nil {
		return nil, errors.New("invalid value for required argument 'VulnContainersOs'")
	}
	if args.VulnHostOs == nil {
		return nil, errors.New("invalid value for required argument 'VulnHostOs'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AgentlessScanningAwsScanOptions
	err := ctx.RegisterResource("datadog:index/agentlessScanningAwsScanOptions:AgentlessScanningAwsScanOptions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentlessScanningAwsScanOptions gets an existing AgentlessScanningAwsScanOptions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentlessScanningAwsScanOptions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentlessScanningAwsScanOptionsState, opts ...pulumi.ResourceOption) (*AgentlessScanningAwsScanOptions, error) {
	var resource AgentlessScanningAwsScanOptions
	err := ctx.ReadResource("datadog:index/agentlessScanningAwsScanOptions:AgentlessScanningAwsScanOptions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentlessScanningAwsScanOptions resources.
type agentlessScanningAwsScanOptionsState struct {
	// The AWS Account ID for which agentless scanning is configured.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Indicates if scanning of Lambda functions is enabled.
	Lambda *bool `pulumi:"lambda"`
	// Indicates if scanning for sensitive data is enabled.
	SensitiveData *bool `pulumi:"sensitiveData"`
	// Indicates if scanning for vulnerabilities in containers is enabled.
	VulnContainersOs *bool `pulumi:"vulnContainersOs"`
	// Indicates if scanning for vulnerabilities in hosts is enabled.
	VulnHostOs *bool `pulumi:"vulnHostOs"`
}

type AgentlessScanningAwsScanOptionsState struct {
	// The AWS Account ID for which agentless scanning is configured.
	AwsAccountId pulumi.StringPtrInput
	// Indicates if scanning of Lambda functions is enabled.
	Lambda pulumi.BoolPtrInput
	// Indicates if scanning for sensitive data is enabled.
	SensitiveData pulumi.BoolPtrInput
	// Indicates if scanning for vulnerabilities in containers is enabled.
	VulnContainersOs pulumi.BoolPtrInput
	// Indicates if scanning for vulnerabilities in hosts is enabled.
	VulnHostOs pulumi.BoolPtrInput
}

func (AgentlessScanningAwsScanOptionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentlessScanningAwsScanOptionsState)(nil)).Elem()
}

type agentlessScanningAwsScanOptionsArgs struct {
	// The AWS Account ID for which agentless scanning is configured.
	AwsAccountId string `pulumi:"awsAccountId"`
	// Indicates if scanning of Lambda functions is enabled.
	Lambda bool `pulumi:"lambda"`
	// Indicates if scanning for sensitive data is enabled.
	SensitiveData bool `pulumi:"sensitiveData"`
	// Indicates if scanning for vulnerabilities in containers is enabled.
	VulnContainersOs bool `pulumi:"vulnContainersOs"`
	// Indicates if scanning for vulnerabilities in hosts is enabled.
	VulnHostOs bool `pulumi:"vulnHostOs"`
}

// The set of arguments for constructing a AgentlessScanningAwsScanOptions resource.
type AgentlessScanningAwsScanOptionsArgs struct {
	// The AWS Account ID for which agentless scanning is configured.
	AwsAccountId pulumi.StringInput
	// Indicates if scanning of Lambda functions is enabled.
	Lambda pulumi.BoolInput
	// Indicates if scanning for sensitive data is enabled.
	SensitiveData pulumi.BoolInput
	// Indicates if scanning for vulnerabilities in containers is enabled.
	VulnContainersOs pulumi.BoolInput
	// Indicates if scanning for vulnerabilities in hosts is enabled.
	VulnHostOs pulumi.BoolInput
}

func (AgentlessScanningAwsScanOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentlessScanningAwsScanOptionsArgs)(nil)).Elem()
}

type AgentlessScanningAwsScanOptionsInput interface {
	pulumi.Input

	ToAgentlessScanningAwsScanOptionsOutput() AgentlessScanningAwsScanOptionsOutput
	ToAgentlessScanningAwsScanOptionsOutputWithContext(ctx context.Context) AgentlessScanningAwsScanOptionsOutput
}

func (*AgentlessScanningAwsScanOptions) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentlessScanningAwsScanOptions)(nil)).Elem()
}

func (i *AgentlessScanningAwsScanOptions) ToAgentlessScanningAwsScanOptionsOutput() AgentlessScanningAwsScanOptionsOutput {
	return i.ToAgentlessScanningAwsScanOptionsOutputWithContext(context.Background())
}

func (i *AgentlessScanningAwsScanOptions) ToAgentlessScanningAwsScanOptionsOutputWithContext(ctx context.Context) AgentlessScanningAwsScanOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentlessScanningAwsScanOptionsOutput)
}

// AgentlessScanningAwsScanOptionsArrayInput is an input type that accepts AgentlessScanningAwsScanOptionsArray and AgentlessScanningAwsScanOptionsArrayOutput values.
// You can construct a concrete instance of `AgentlessScanningAwsScanOptionsArrayInput` via:
//
//	AgentlessScanningAwsScanOptionsArray{ AgentlessScanningAwsScanOptionsArgs{...} }
type AgentlessScanningAwsScanOptionsArrayInput interface {
	pulumi.Input

	ToAgentlessScanningAwsScanOptionsArrayOutput() AgentlessScanningAwsScanOptionsArrayOutput
	ToAgentlessScanningAwsScanOptionsArrayOutputWithContext(context.Context) AgentlessScanningAwsScanOptionsArrayOutput
}

type AgentlessScanningAwsScanOptionsArray []AgentlessScanningAwsScanOptionsInput

func (AgentlessScanningAwsScanOptionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentlessScanningAwsScanOptions)(nil)).Elem()
}

func (i AgentlessScanningAwsScanOptionsArray) ToAgentlessScanningAwsScanOptionsArrayOutput() AgentlessScanningAwsScanOptionsArrayOutput {
	return i.ToAgentlessScanningAwsScanOptionsArrayOutputWithContext(context.Background())
}

func (i AgentlessScanningAwsScanOptionsArray) ToAgentlessScanningAwsScanOptionsArrayOutputWithContext(ctx context.Context) AgentlessScanningAwsScanOptionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentlessScanningAwsScanOptionsArrayOutput)
}

// AgentlessScanningAwsScanOptionsMapInput is an input type that accepts AgentlessScanningAwsScanOptionsMap and AgentlessScanningAwsScanOptionsMapOutput values.
// You can construct a concrete instance of `AgentlessScanningAwsScanOptionsMapInput` via:
//
//	AgentlessScanningAwsScanOptionsMap{ "key": AgentlessScanningAwsScanOptionsArgs{...} }
type AgentlessScanningAwsScanOptionsMapInput interface {
	pulumi.Input

	ToAgentlessScanningAwsScanOptionsMapOutput() AgentlessScanningAwsScanOptionsMapOutput
	ToAgentlessScanningAwsScanOptionsMapOutputWithContext(context.Context) AgentlessScanningAwsScanOptionsMapOutput
}

type AgentlessScanningAwsScanOptionsMap map[string]AgentlessScanningAwsScanOptionsInput

func (AgentlessScanningAwsScanOptionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentlessScanningAwsScanOptions)(nil)).Elem()
}

func (i AgentlessScanningAwsScanOptionsMap) ToAgentlessScanningAwsScanOptionsMapOutput() AgentlessScanningAwsScanOptionsMapOutput {
	return i.ToAgentlessScanningAwsScanOptionsMapOutputWithContext(context.Background())
}

func (i AgentlessScanningAwsScanOptionsMap) ToAgentlessScanningAwsScanOptionsMapOutputWithContext(ctx context.Context) AgentlessScanningAwsScanOptionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentlessScanningAwsScanOptionsMapOutput)
}

type AgentlessScanningAwsScanOptionsOutput struct{ *pulumi.OutputState }

func (AgentlessScanningAwsScanOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentlessScanningAwsScanOptions)(nil)).Elem()
}

func (o AgentlessScanningAwsScanOptionsOutput) ToAgentlessScanningAwsScanOptionsOutput() AgentlessScanningAwsScanOptionsOutput {
	return o
}

func (o AgentlessScanningAwsScanOptionsOutput) ToAgentlessScanningAwsScanOptionsOutputWithContext(ctx context.Context) AgentlessScanningAwsScanOptionsOutput {
	return o
}

// The AWS Account ID for which agentless scanning is configured.
func (o AgentlessScanningAwsScanOptionsOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentlessScanningAwsScanOptions) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// Indicates if scanning of Lambda functions is enabled.
func (o AgentlessScanningAwsScanOptionsOutput) Lambda() pulumi.BoolOutput {
	return o.ApplyT(func(v *AgentlessScanningAwsScanOptions) pulumi.BoolOutput { return v.Lambda }).(pulumi.BoolOutput)
}

// Indicates if scanning for sensitive data is enabled.
func (o AgentlessScanningAwsScanOptionsOutput) SensitiveData() pulumi.BoolOutput {
	return o.ApplyT(func(v *AgentlessScanningAwsScanOptions) pulumi.BoolOutput { return v.SensitiveData }).(pulumi.BoolOutput)
}

// Indicates if scanning for vulnerabilities in containers is enabled.
func (o AgentlessScanningAwsScanOptionsOutput) VulnContainersOs() pulumi.BoolOutput {
	return o.ApplyT(func(v *AgentlessScanningAwsScanOptions) pulumi.BoolOutput { return v.VulnContainersOs }).(pulumi.BoolOutput)
}

// Indicates if scanning for vulnerabilities in hosts is enabled.
func (o AgentlessScanningAwsScanOptionsOutput) VulnHostOs() pulumi.BoolOutput {
	return o.ApplyT(func(v *AgentlessScanningAwsScanOptions) pulumi.BoolOutput { return v.VulnHostOs }).(pulumi.BoolOutput)
}

type AgentlessScanningAwsScanOptionsArrayOutput struct{ *pulumi.OutputState }

func (AgentlessScanningAwsScanOptionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentlessScanningAwsScanOptions)(nil)).Elem()
}

func (o AgentlessScanningAwsScanOptionsArrayOutput) ToAgentlessScanningAwsScanOptionsArrayOutput() AgentlessScanningAwsScanOptionsArrayOutput {
	return o
}

func (o AgentlessScanningAwsScanOptionsArrayOutput) ToAgentlessScanningAwsScanOptionsArrayOutputWithContext(ctx context.Context) AgentlessScanningAwsScanOptionsArrayOutput {
	return o
}

func (o AgentlessScanningAwsScanOptionsArrayOutput) Index(i pulumi.IntInput) AgentlessScanningAwsScanOptionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AgentlessScanningAwsScanOptions {
		return vs[0].([]*AgentlessScanningAwsScanOptions)[vs[1].(int)]
	}).(AgentlessScanningAwsScanOptionsOutput)
}

type AgentlessScanningAwsScanOptionsMapOutput struct{ *pulumi.OutputState }

func (AgentlessScanningAwsScanOptionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentlessScanningAwsScanOptions)(nil)).Elem()
}

func (o AgentlessScanningAwsScanOptionsMapOutput) ToAgentlessScanningAwsScanOptionsMapOutput() AgentlessScanningAwsScanOptionsMapOutput {
	return o
}

func (o AgentlessScanningAwsScanOptionsMapOutput) ToAgentlessScanningAwsScanOptionsMapOutputWithContext(ctx context.Context) AgentlessScanningAwsScanOptionsMapOutput {
	return o
}

func (o AgentlessScanningAwsScanOptionsMapOutput) MapIndex(k pulumi.StringInput) AgentlessScanningAwsScanOptionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AgentlessScanningAwsScanOptions {
		return vs[0].(map[string]*AgentlessScanningAwsScanOptions)[vs[1].(string)]
	}).(AgentlessScanningAwsScanOptionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentlessScanningAwsScanOptionsInput)(nil)).Elem(), &AgentlessScanningAwsScanOptions{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentlessScanningAwsScanOptionsArrayInput)(nil)).Elem(), AgentlessScanningAwsScanOptionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentlessScanningAwsScanOptionsMapInput)(nil)).Elem(), AgentlessScanningAwsScanOptionsMap{})
	pulumi.RegisterOutputType(AgentlessScanningAwsScanOptionsOutput{})
	pulumi.RegisterOutputType(AgentlessScanningAwsScanOptionsArrayOutput{})
	pulumi.RegisterOutputType(AgentlessScanningAwsScanOptionsMapOutput{})
}
