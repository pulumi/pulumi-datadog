// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog ComplianceResourceEvaluationFilter resource. This can be used to create and manage a compliance resource evaluation filter.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Manage Datadog compliance resource evaluation filters
//			_, err := datadog.NewComplianceResourceEvaluationFilter(ctx, "basic_filter", &datadog.ComplianceResourceEvaluationFilterArgs{
//				Tags: pulumi.StringArray{
//					pulumi.String("tag1:val1"),
//				},
//				CloudProvider: pulumi.String("aws"),
//				ResourceId:    pulumi.String("000000000000"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import datadog:index/complianceResourceEvaluationFilter:ComplianceResourceEvaluationFilter test_filter aws:00000000000000
// ```
type ComplianceResourceEvaluationFilter struct {
	pulumi.CustomResourceState

	// The cloud provider of the filter's targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud
	// providers.
	CloudProvider pulumi.StringOutput `pulumi:"cloudProvider"`
	// The ID of the of the filter's targeted resource. Different cloud providers target different resource IDs: - `aws`:
	// account ID - `gcp`: project ID - `azure`: subscription ID
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// List of tags to filter misconfiguration detections. Each entry should follow the format: "key":"value".
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
}

// NewComplianceResourceEvaluationFilter registers a new resource with the given unique name, arguments, and options.
func NewComplianceResourceEvaluationFilter(ctx *pulumi.Context,
	name string, args *ComplianceResourceEvaluationFilterArgs, opts ...pulumi.ResourceOption) (*ComplianceResourceEvaluationFilter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CloudProvider == nil {
		return nil, errors.New("invalid value for required argument 'CloudProvider'")
	}
	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	if args.Tags == nil {
		return nil, errors.New("invalid value for required argument 'Tags'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ComplianceResourceEvaluationFilter
	err := ctx.RegisterResource("datadog:index/complianceResourceEvaluationFilter:ComplianceResourceEvaluationFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetComplianceResourceEvaluationFilter gets an existing ComplianceResourceEvaluationFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetComplianceResourceEvaluationFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ComplianceResourceEvaluationFilterState, opts ...pulumi.ResourceOption) (*ComplianceResourceEvaluationFilter, error) {
	var resource ComplianceResourceEvaluationFilter
	err := ctx.ReadResource("datadog:index/complianceResourceEvaluationFilter:ComplianceResourceEvaluationFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ComplianceResourceEvaluationFilter resources.
type complianceResourceEvaluationFilterState struct {
	// The cloud provider of the filter's targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud
	// providers.
	CloudProvider *string `pulumi:"cloudProvider"`
	// The ID of the of the filter's targeted resource. Different cloud providers target different resource IDs: - `aws`:
	// account ID - `gcp`: project ID - `azure`: subscription ID
	ResourceId *string `pulumi:"resourceId"`
	// List of tags to filter misconfiguration detections. Each entry should follow the format: "key":"value".
	Tags []string `pulumi:"tags"`
}

type ComplianceResourceEvaluationFilterState struct {
	// The cloud provider of the filter's targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud
	// providers.
	CloudProvider pulumi.StringPtrInput
	// The ID of the of the filter's targeted resource. Different cloud providers target different resource IDs: - `aws`:
	// account ID - `gcp`: project ID - `azure`: subscription ID
	ResourceId pulumi.StringPtrInput
	// List of tags to filter misconfiguration detections. Each entry should follow the format: "key":"value".
	Tags pulumi.StringArrayInput
}

func (ComplianceResourceEvaluationFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*complianceResourceEvaluationFilterState)(nil)).Elem()
}

type complianceResourceEvaluationFilterArgs struct {
	// The cloud provider of the filter's targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud
	// providers.
	CloudProvider string `pulumi:"cloudProvider"`
	// The ID of the of the filter's targeted resource. Different cloud providers target different resource IDs: - `aws`:
	// account ID - `gcp`: project ID - `azure`: subscription ID
	ResourceId string `pulumi:"resourceId"`
	// List of tags to filter misconfiguration detections. Each entry should follow the format: "key":"value".
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a ComplianceResourceEvaluationFilter resource.
type ComplianceResourceEvaluationFilterArgs struct {
	// The cloud provider of the filter's targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud
	// providers.
	CloudProvider pulumi.StringInput
	// The ID of the of the filter's targeted resource. Different cloud providers target different resource IDs: - `aws`:
	// account ID - `gcp`: project ID - `azure`: subscription ID
	ResourceId pulumi.StringInput
	// List of tags to filter misconfiguration detections. Each entry should follow the format: "key":"value".
	Tags pulumi.StringArrayInput
}

func (ComplianceResourceEvaluationFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*complianceResourceEvaluationFilterArgs)(nil)).Elem()
}

type ComplianceResourceEvaluationFilterInput interface {
	pulumi.Input

	ToComplianceResourceEvaluationFilterOutput() ComplianceResourceEvaluationFilterOutput
	ToComplianceResourceEvaluationFilterOutputWithContext(ctx context.Context) ComplianceResourceEvaluationFilterOutput
}

func (*ComplianceResourceEvaluationFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**ComplianceResourceEvaluationFilter)(nil)).Elem()
}

func (i *ComplianceResourceEvaluationFilter) ToComplianceResourceEvaluationFilterOutput() ComplianceResourceEvaluationFilterOutput {
	return i.ToComplianceResourceEvaluationFilterOutputWithContext(context.Background())
}

func (i *ComplianceResourceEvaluationFilter) ToComplianceResourceEvaluationFilterOutputWithContext(ctx context.Context) ComplianceResourceEvaluationFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComplianceResourceEvaluationFilterOutput)
}

// ComplianceResourceEvaluationFilterArrayInput is an input type that accepts ComplianceResourceEvaluationFilterArray and ComplianceResourceEvaluationFilterArrayOutput values.
// You can construct a concrete instance of `ComplianceResourceEvaluationFilterArrayInput` via:
//
//	ComplianceResourceEvaluationFilterArray{ ComplianceResourceEvaluationFilterArgs{...} }
type ComplianceResourceEvaluationFilterArrayInput interface {
	pulumi.Input

	ToComplianceResourceEvaluationFilterArrayOutput() ComplianceResourceEvaluationFilterArrayOutput
	ToComplianceResourceEvaluationFilterArrayOutputWithContext(context.Context) ComplianceResourceEvaluationFilterArrayOutput
}

type ComplianceResourceEvaluationFilterArray []ComplianceResourceEvaluationFilterInput

func (ComplianceResourceEvaluationFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComplianceResourceEvaluationFilter)(nil)).Elem()
}

func (i ComplianceResourceEvaluationFilterArray) ToComplianceResourceEvaluationFilterArrayOutput() ComplianceResourceEvaluationFilterArrayOutput {
	return i.ToComplianceResourceEvaluationFilterArrayOutputWithContext(context.Background())
}

func (i ComplianceResourceEvaluationFilterArray) ToComplianceResourceEvaluationFilterArrayOutputWithContext(ctx context.Context) ComplianceResourceEvaluationFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComplianceResourceEvaluationFilterArrayOutput)
}

// ComplianceResourceEvaluationFilterMapInput is an input type that accepts ComplianceResourceEvaluationFilterMap and ComplianceResourceEvaluationFilterMapOutput values.
// You can construct a concrete instance of `ComplianceResourceEvaluationFilterMapInput` via:
//
//	ComplianceResourceEvaluationFilterMap{ "key": ComplianceResourceEvaluationFilterArgs{...} }
type ComplianceResourceEvaluationFilterMapInput interface {
	pulumi.Input

	ToComplianceResourceEvaluationFilterMapOutput() ComplianceResourceEvaluationFilterMapOutput
	ToComplianceResourceEvaluationFilterMapOutputWithContext(context.Context) ComplianceResourceEvaluationFilterMapOutput
}

type ComplianceResourceEvaluationFilterMap map[string]ComplianceResourceEvaluationFilterInput

func (ComplianceResourceEvaluationFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComplianceResourceEvaluationFilter)(nil)).Elem()
}

func (i ComplianceResourceEvaluationFilterMap) ToComplianceResourceEvaluationFilterMapOutput() ComplianceResourceEvaluationFilterMapOutput {
	return i.ToComplianceResourceEvaluationFilterMapOutputWithContext(context.Background())
}

func (i ComplianceResourceEvaluationFilterMap) ToComplianceResourceEvaluationFilterMapOutputWithContext(ctx context.Context) ComplianceResourceEvaluationFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComplianceResourceEvaluationFilterMapOutput)
}

type ComplianceResourceEvaluationFilterOutput struct{ *pulumi.OutputState }

func (ComplianceResourceEvaluationFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComplianceResourceEvaluationFilter)(nil)).Elem()
}

func (o ComplianceResourceEvaluationFilterOutput) ToComplianceResourceEvaluationFilterOutput() ComplianceResourceEvaluationFilterOutput {
	return o
}

func (o ComplianceResourceEvaluationFilterOutput) ToComplianceResourceEvaluationFilterOutputWithContext(ctx context.Context) ComplianceResourceEvaluationFilterOutput {
	return o
}

// The cloud provider of the filter's targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud
// providers.
func (o ComplianceResourceEvaluationFilterOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *ComplianceResourceEvaluationFilter) pulumi.StringOutput { return v.CloudProvider }).(pulumi.StringOutput)
}

// The ID of the of the filter's targeted resource. Different cloud providers target different resource IDs: - `aws`:
// account ID - `gcp`: project ID - `azure`: subscription ID
func (o ComplianceResourceEvaluationFilterOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ComplianceResourceEvaluationFilter) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

// List of tags to filter misconfiguration detections. Each entry should follow the format: "key":"value".
func (o ComplianceResourceEvaluationFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComplianceResourceEvaluationFilter) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

type ComplianceResourceEvaluationFilterArrayOutput struct{ *pulumi.OutputState }

func (ComplianceResourceEvaluationFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ComplianceResourceEvaluationFilter)(nil)).Elem()
}

func (o ComplianceResourceEvaluationFilterArrayOutput) ToComplianceResourceEvaluationFilterArrayOutput() ComplianceResourceEvaluationFilterArrayOutput {
	return o
}

func (o ComplianceResourceEvaluationFilterArrayOutput) ToComplianceResourceEvaluationFilterArrayOutputWithContext(ctx context.Context) ComplianceResourceEvaluationFilterArrayOutput {
	return o
}

func (o ComplianceResourceEvaluationFilterArrayOutput) Index(i pulumi.IntInput) ComplianceResourceEvaluationFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ComplianceResourceEvaluationFilter {
		return vs[0].([]*ComplianceResourceEvaluationFilter)[vs[1].(int)]
	}).(ComplianceResourceEvaluationFilterOutput)
}

type ComplianceResourceEvaluationFilterMapOutput struct{ *pulumi.OutputState }

func (ComplianceResourceEvaluationFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ComplianceResourceEvaluationFilter)(nil)).Elem()
}

func (o ComplianceResourceEvaluationFilterMapOutput) ToComplianceResourceEvaluationFilterMapOutput() ComplianceResourceEvaluationFilterMapOutput {
	return o
}

func (o ComplianceResourceEvaluationFilterMapOutput) ToComplianceResourceEvaluationFilterMapOutputWithContext(ctx context.Context) ComplianceResourceEvaluationFilterMapOutput {
	return o
}

func (o ComplianceResourceEvaluationFilterMapOutput) MapIndex(k pulumi.StringInput) ComplianceResourceEvaluationFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ComplianceResourceEvaluationFilter {
		return vs[0].(map[string]*ComplianceResourceEvaluationFilter)[vs[1].(string)]
	}).(ComplianceResourceEvaluationFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ComplianceResourceEvaluationFilterInput)(nil)).Elem(), &ComplianceResourceEvaluationFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComplianceResourceEvaluationFilterArrayInput)(nil)).Elem(), ComplianceResourceEvaluationFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ComplianceResourceEvaluationFilterMapInput)(nil)).Elem(), ComplianceResourceEvaluationFilterMap{})
	pulumi.RegisterOutputType(ComplianceResourceEvaluationFilterOutput{})
	pulumi.RegisterOutputType(ComplianceResourceEvaluationFilterArrayOutput{})
	pulumi.RegisterOutputType(ComplianceResourceEvaluationFilterMapOutput{})
}
