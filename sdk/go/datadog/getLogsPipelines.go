// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to list all existing logs pipelines for use in other resources.
func GetLogsPipelines(ctx *pulumi.Context, args *GetLogsPipelinesArgs, opts ...pulumi.InvokeOption) (*GetLogsPipelinesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLogsPipelinesResult
	err := ctx.Invoke("datadog:index/getLogsPipelines:getLogsPipelines", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogsPipelines.
type GetLogsPipelinesArgs struct {
	// Filter parameter for retrieved pipelines
	IsReadOnly *string `pulumi:"isReadOnly"`
}

// A collection of values returned by getLogsPipelines.
type GetLogsPipelinesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Filter parameter for retrieved pipelines
	IsReadOnly *string `pulumi:"isReadOnly"`
	// List of logs pipelines
	LogsPipelines []GetLogsPipelinesLogsPipeline `pulumi:"logsPipelines"`
}

func GetLogsPipelinesOutput(ctx *pulumi.Context, args GetLogsPipelinesOutputArgs, opts ...pulumi.InvokeOption) GetLogsPipelinesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLogsPipelinesResultOutput, error) {
			args := v.(GetLogsPipelinesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetLogsPipelinesResult
			secret, err := ctx.InvokePackageRaw("datadog:index/getLogsPipelines:getLogsPipelines", args, &rv, "", opts...)
			if err != nil {
				return GetLogsPipelinesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetLogsPipelinesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetLogsPipelinesResultOutput), nil
			}
			return output, nil
		}).(GetLogsPipelinesResultOutput)
}

// A collection of arguments for invoking getLogsPipelines.
type GetLogsPipelinesOutputArgs struct {
	// Filter parameter for retrieved pipelines
	IsReadOnly pulumi.StringPtrInput `pulumi:"isReadOnly"`
}

func (GetLogsPipelinesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesArgs)(nil)).Elem()
}

// A collection of values returned by getLogsPipelines.
type GetLogsPipelinesResultOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesResult)(nil)).Elem()
}

func (o GetLogsPipelinesResultOutput) ToGetLogsPipelinesResultOutput() GetLogsPipelinesResultOutput {
	return o
}

func (o GetLogsPipelinesResultOutput) ToGetLogsPipelinesResultOutputWithContext(ctx context.Context) GetLogsPipelinesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetLogsPipelinesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Filter parameter for retrieved pipelines
func (o GetLogsPipelinesResultOutput) IsReadOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogsPipelinesResult) *string { return v.IsReadOnly }).(pulumi.StringPtrOutput)
}

// List of logs pipelines
func (o GetLogsPipelinesResultOutput) LogsPipelines() GetLogsPipelinesLogsPipelineArrayOutput {
	return o.ApplyT(func(v GetLogsPipelinesResult) []GetLogsPipelinesLogsPipeline { return v.LogsPipelines }).(GetLogsPipelinesLogsPipelineArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLogsPipelinesResultOutput{})
}
