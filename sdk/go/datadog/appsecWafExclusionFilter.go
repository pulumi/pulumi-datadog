// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog AppsecWafExclusionFilter resource. This can be used to create and manage Datadog appsec_waf_exclusion_filter.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create a WAF exclusion filter on a path
//			_, err := datadog.NewAppsecExclusionFilter(ctx, "exclude_on_path", &datadog.AppsecExclusionFilterArgs{
//				Description: "Exclude false positives on a path",
//				Enabled:     true,
//				PathGlob:    "/accounts/*",
//				RulesTarget: []map[string]interface{}{
//					map[string]interface{}{
//						"tags": []map[string]interface{}{
//							map[string]interface{}{
//								"category": "attack_attempt",
//								"type":     "lfi",
//							},
//						},
//					},
//				},
//				Scope: []map[string]interface{}{
//					map[string]interface{}{
//						"env":     "www",
//						"service": "prod",
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Create a WAF exclusion filter for trusted IPs
//			_, err = datadog.NewAppsecExclusionFilter(ctx, "trusted_ips", &datadog.AppsecExclusionFilterArgs{
//				Description: "Do not block office IP network",
//				Enabled:     true,
//				IpList: []string{
//					"198.10.14.53/24",
//				},
//				OnMatch: "monitor",
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import datadog:index/appsecWafExclusionFilter:AppsecWafExclusionFilter passlist_entry "45b7032f-0ac4-4b2f-9118-363523c625f6"
// ```
type AppsecWafExclusionFilter struct {
	pulumi.CustomResourceState

	// A description for the exclusion filter.
	Description pulumi.StringOutput `pulumi:"description"`
	// Indicates whether the exclusion filter is enabled.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The event query matched by the legacy exclusion filter. Cannot be created nor updated.
	EventQuery pulumi.StringPtrOutput `pulumi:"eventQuery"`
	// The client IP addresses matched by the exclusion filter (CIDR notation is supported).
	IpLists pulumi.StringArrayOutput `pulumi:"ipLists"`
	// The action taken when the exclusion filter matches. When set to `monitor`, security traces are emitted but the requests are not blocked. By default, security traces are not emitted and the requests are not blocked.
	OnMatch pulumi.StringPtrOutput `pulumi:"onMatch"`
	// A list of parameters matched by the exclusion filter in the HTTP query string and HTTP request body. Nested parameters can be matched by joining fields with a dot character.
	Parameters pulumi.StringArrayOutput `pulumi:"parameters"`
	// The HTTP path glob expression matched by the exclusion filter.
	PathGlob     pulumi.StringPtrOutput                         `pulumi:"pathGlob"`
	RulesTargets AppsecWafExclusionFilterRulesTargetArrayOutput `pulumi:"rulesTargets"`
	Scopes       AppsecWafExclusionFilterScopeArrayOutput       `pulumi:"scopes"`
}

// NewAppsecWafExclusionFilter registers a new resource with the given unique name, arguments, and options.
func NewAppsecWafExclusionFilter(ctx *pulumi.Context,
	name string, args *AppsecWafExclusionFilterArgs, opts ...pulumi.ResourceOption) (*AppsecWafExclusionFilter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppsecWafExclusionFilter
	err := ctx.RegisterResource("datadog:index/appsecWafExclusionFilter:AppsecWafExclusionFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppsecWafExclusionFilter gets an existing AppsecWafExclusionFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppsecWafExclusionFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppsecWafExclusionFilterState, opts ...pulumi.ResourceOption) (*AppsecWafExclusionFilter, error) {
	var resource AppsecWafExclusionFilter
	err := ctx.ReadResource("datadog:index/appsecWafExclusionFilter:AppsecWafExclusionFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppsecWafExclusionFilter resources.
type appsecWafExclusionFilterState struct {
	// A description for the exclusion filter.
	Description *string `pulumi:"description"`
	// Indicates whether the exclusion filter is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The event query matched by the legacy exclusion filter. Cannot be created nor updated.
	EventQuery *string `pulumi:"eventQuery"`
	// The client IP addresses matched by the exclusion filter (CIDR notation is supported).
	IpLists []string `pulumi:"ipLists"`
	// The action taken when the exclusion filter matches. When set to `monitor`, security traces are emitted but the requests are not blocked. By default, security traces are not emitted and the requests are not blocked.
	OnMatch *string `pulumi:"onMatch"`
	// A list of parameters matched by the exclusion filter in the HTTP query string and HTTP request body. Nested parameters can be matched by joining fields with a dot character.
	Parameters []string `pulumi:"parameters"`
	// The HTTP path glob expression matched by the exclusion filter.
	PathGlob     *string                               `pulumi:"pathGlob"`
	RulesTargets []AppsecWafExclusionFilterRulesTarget `pulumi:"rulesTargets"`
	Scopes       []AppsecWafExclusionFilterScope       `pulumi:"scopes"`
}

type AppsecWafExclusionFilterState struct {
	// A description for the exclusion filter.
	Description pulumi.StringPtrInput
	// Indicates whether the exclusion filter is enabled.
	Enabled pulumi.BoolPtrInput
	// The event query matched by the legacy exclusion filter. Cannot be created nor updated.
	EventQuery pulumi.StringPtrInput
	// The client IP addresses matched by the exclusion filter (CIDR notation is supported).
	IpLists pulumi.StringArrayInput
	// The action taken when the exclusion filter matches. When set to `monitor`, security traces are emitted but the requests are not blocked. By default, security traces are not emitted and the requests are not blocked.
	OnMatch pulumi.StringPtrInput
	// A list of parameters matched by the exclusion filter in the HTTP query string and HTTP request body. Nested parameters can be matched by joining fields with a dot character.
	Parameters pulumi.StringArrayInput
	// The HTTP path glob expression matched by the exclusion filter.
	PathGlob     pulumi.StringPtrInput
	RulesTargets AppsecWafExclusionFilterRulesTargetArrayInput
	Scopes       AppsecWafExclusionFilterScopeArrayInput
}

func (AppsecWafExclusionFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecWafExclusionFilterState)(nil)).Elem()
}

type appsecWafExclusionFilterArgs struct {
	// A description for the exclusion filter.
	Description string `pulumi:"description"`
	// Indicates whether the exclusion filter is enabled.
	Enabled bool `pulumi:"enabled"`
	// The event query matched by the legacy exclusion filter. Cannot be created nor updated.
	EventQuery *string `pulumi:"eventQuery"`
	// The client IP addresses matched by the exclusion filter (CIDR notation is supported).
	IpLists []string `pulumi:"ipLists"`
	// The action taken when the exclusion filter matches. When set to `monitor`, security traces are emitted but the requests are not blocked. By default, security traces are not emitted and the requests are not blocked.
	OnMatch *string `pulumi:"onMatch"`
	// A list of parameters matched by the exclusion filter in the HTTP query string and HTTP request body. Nested parameters can be matched by joining fields with a dot character.
	Parameters []string `pulumi:"parameters"`
	// The HTTP path glob expression matched by the exclusion filter.
	PathGlob     *string                               `pulumi:"pathGlob"`
	RulesTargets []AppsecWafExclusionFilterRulesTarget `pulumi:"rulesTargets"`
	Scopes       []AppsecWafExclusionFilterScope       `pulumi:"scopes"`
}

// The set of arguments for constructing a AppsecWafExclusionFilter resource.
type AppsecWafExclusionFilterArgs struct {
	// A description for the exclusion filter.
	Description pulumi.StringInput
	// Indicates whether the exclusion filter is enabled.
	Enabled pulumi.BoolInput
	// The event query matched by the legacy exclusion filter. Cannot be created nor updated.
	EventQuery pulumi.StringPtrInput
	// The client IP addresses matched by the exclusion filter (CIDR notation is supported).
	IpLists pulumi.StringArrayInput
	// The action taken when the exclusion filter matches. When set to `monitor`, security traces are emitted but the requests are not blocked. By default, security traces are not emitted and the requests are not blocked.
	OnMatch pulumi.StringPtrInput
	// A list of parameters matched by the exclusion filter in the HTTP query string and HTTP request body. Nested parameters can be matched by joining fields with a dot character.
	Parameters pulumi.StringArrayInput
	// The HTTP path glob expression matched by the exclusion filter.
	PathGlob     pulumi.StringPtrInput
	RulesTargets AppsecWafExclusionFilterRulesTargetArrayInput
	Scopes       AppsecWafExclusionFilterScopeArrayInput
}

func (AppsecWafExclusionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecWafExclusionFilterArgs)(nil)).Elem()
}

type AppsecWafExclusionFilterInput interface {
	pulumi.Input

	ToAppsecWafExclusionFilterOutput() AppsecWafExclusionFilterOutput
	ToAppsecWafExclusionFilterOutputWithContext(ctx context.Context) AppsecWafExclusionFilterOutput
}

func (*AppsecWafExclusionFilter) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecWafExclusionFilter)(nil)).Elem()
}

func (i *AppsecWafExclusionFilter) ToAppsecWafExclusionFilterOutput() AppsecWafExclusionFilterOutput {
	return i.ToAppsecWafExclusionFilterOutputWithContext(context.Background())
}

func (i *AppsecWafExclusionFilter) ToAppsecWafExclusionFilterOutputWithContext(ctx context.Context) AppsecWafExclusionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecWafExclusionFilterOutput)
}

// AppsecWafExclusionFilterArrayInput is an input type that accepts AppsecWafExclusionFilterArray and AppsecWafExclusionFilterArrayOutput values.
// You can construct a concrete instance of `AppsecWafExclusionFilterArrayInput` via:
//
//	AppsecWafExclusionFilterArray{ AppsecWafExclusionFilterArgs{...} }
type AppsecWafExclusionFilterArrayInput interface {
	pulumi.Input

	ToAppsecWafExclusionFilterArrayOutput() AppsecWafExclusionFilterArrayOutput
	ToAppsecWafExclusionFilterArrayOutputWithContext(context.Context) AppsecWafExclusionFilterArrayOutput
}

type AppsecWafExclusionFilterArray []AppsecWafExclusionFilterInput

func (AppsecWafExclusionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecWafExclusionFilter)(nil)).Elem()
}

func (i AppsecWafExclusionFilterArray) ToAppsecWafExclusionFilterArrayOutput() AppsecWafExclusionFilterArrayOutput {
	return i.ToAppsecWafExclusionFilterArrayOutputWithContext(context.Background())
}

func (i AppsecWafExclusionFilterArray) ToAppsecWafExclusionFilterArrayOutputWithContext(ctx context.Context) AppsecWafExclusionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecWafExclusionFilterArrayOutput)
}

// AppsecWafExclusionFilterMapInput is an input type that accepts AppsecWafExclusionFilterMap and AppsecWafExclusionFilterMapOutput values.
// You can construct a concrete instance of `AppsecWafExclusionFilterMapInput` via:
//
//	AppsecWafExclusionFilterMap{ "key": AppsecWafExclusionFilterArgs{...} }
type AppsecWafExclusionFilterMapInput interface {
	pulumi.Input

	ToAppsecWafExclusionFilterMapOutput() AppsecWafExclusionFilterMapOutput
	ToAppsecWafExclusionFilterMapOutputWithContext(context.Context) AppsecWafExclusionFilterMapOutput
}

type AppsecWafExclusionFilterMap map[string]AppsecWafExclusionFilterInput

func (AppsecWafExclusionFilterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecWafExclusionFilter)(nil)).Elem()
}

func (i AppsecWafExclusionFilterMap) ToAppsecWafExclusionFilterMapOutput() AppsecWafExclusionFilterMapOutput {
	return i.ToAppsecWafExclusionFilterMapOutputWithContext(context.Background())
}

func (i AppsecWafExclusionFilterMap) ToAppsecWafExclusionFilterMapOutputWithContext(ctx context.Context) AppsecWafExclusionFilterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecWafExclusionFilterMapOutput)
}

type AppsecWafExclusionFilterOutput struct{ *pulumi.OutputState }

func (AppsecWafExclusionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecWafExclusionFilter)(nil)).Elem()
}

func (o AppsecWafExclusionFilterOutput) ToAppsecWafExclusionFilterOutput() AppsecWafExclusionFilterOutput {
	return o
}

func (o AppsecWafExclusionFilterOutput) ToAppsecWafExclusionFilterOutputWithContext(ctx context.Context) AppsecWafExclusionFilterOutput {
	return o
}

// A description for the exclusion filter.
func (o AppsecWafExclusionFilterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecWafExclusionFilter) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Indicates whether the exclusion filter is enabled.
func (o AppsecWafExclusionFilterOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppsecWafExclusionFilter) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The event query matched by the legacy exclusion filter. Cannot be created nor updated.
func (o AppsecWafExclusionFilterOutput) EventQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsecWafExclusionFilter) pulumi.StringPtrOutput { return v.EventQuery }).(pulumi.StringPtrOutput)
}

// The client IP addresses matched by the exclusion filter (CIDR notation is supported).
func (o AppsecWafExclusionFilterOutput) IpLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppsecWafExclusionFilter) pulumi.StringArrayOutput { return v.IpLists }).(pulumi.StringArrayOutput)
}

// The action taken when the exclusion filter matches. When set to `monitor`, security traces are emitted but the requests are not blocked. By default, security traces are not emitted and the requests are not blocked.
func (o AppsecWafExclusionFilterOutput) OnMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsecWafExclusionFilter) pulumi.StringPtrOutput { return v.OnMatch }).(pulumi.StringPtrOutput)
}

// A list of parameters matched by the exclusion filter in the HTTP query string and HTTP request body. Nested parameters can be matched by joining fields with a dot character.
func (o AppsecWafExclusionFilterOutput) Parameters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppsecWafExclusionFilter) pulumi.StringArrayOutput { return v.Parameters }).(pulumi.StringArrayOutput)
}

// The HTTP path glob expression matched by the exclusion filter.
func (o AppsecWafExclusionFilterOutput) PathGlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsecWafExclusionFilter) pulumi.StringPtrOutput { return v.PathGlob }).(pulumi.StringPtrOutput)
}

func (o AppsecWafExclusionFilterOutput) RulesTargets() AppsecWafExclusionFilterRulesTargetArrayOutput {
	return o.ApplyT(func(v *AppsecWafExclusionFilter) AppsecWafExclusionFilterRulesTargetArrayOutput {
		return v.RulesTargets
	}).(AppsecWafExclusionFilterRulesTargetArrayOutput)
}

func (o AppsecWafExclusionFilterOutput) Scopes() AppsecWafExclusionFilterScopeArrayOutput {
	return o.ApplyT(func(v *AppsecWafExclusionFilter) AppsecWafExclusionFilterScopeArrayOutput { return v.Scopes }).(AppsecWafExclusionFilterScopeArrayOutput)
}

type AppsecWafExclusionFilterArrayOutput struct{ *pulumi.OutputState }

func (AppsecWafExclusionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecWafExclusionFilter)(nil)).Elem()
}

func (o AppsecWafExclusionFilterArrayOutput) ToAppsecWafExclusionFilterArrayOutput() AppsecWafExclusionFilterArrayOutput {
	return o
}

func (o AppsecWafExclusionFilterArrayOutput) ToAppsecWafExclusionFilterArrayOutputWithContext(ctx context.Context) AppsecWafExclusionFilterArrayOutput {
	return o
}

func (o AppsecWafExclusionFilterArrayOutput) Index(i pulumi.IntInput) AppsecWafExclusionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppsecWafExclusionFilter {
		return vs[0].([]*AppsecWafExclusionFilter)[vs[1].(int)]
	}).(AppsecWafExclusionFilterOutput)
}

type AppsecWafExclusionFilterMapOutput struct{ *pulumi.OutputState }

func (AppsecWafExclusionFilterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecWafExclusionFilter)(nil)).Elem()
}

func (o AppsecWafExclusionFilterMapOutput) ToAppsecWafExclusionFilterMapOutput() AppsecWafExclusionFilterMapOutput {
	return o
}

func (o AppsecWafExclusionFilterMapOutput) ToAppsecWafExclusionFilterMapOutputWithContext(ctx context.Context) AppsecWafExclusionFilterMapOutput {
	return o
}

func (o AppsecWafExclusionFilterMapOutput) MapIndex(k pulumi.StringInput) AppsecWafExclusionFilterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppsecWafExclusionFilter {
		return vs[0].(map[string]*AppsecWafExclusionFilter)[vs[1].(string)]
	}).(AppsecWafExclusionFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecWafExclusionFilterInput)(nil)).Elem(), &AppsecWafExclusionFilter{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecWafExclusionFilterArrayInput)(nil)).Elem(), AppsecWafExclusionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecWafExclusionFilterMapInput)(nil)).Elem(), AppsecWafExclusionFilterMap{})
	pulumi.RegisterOutputType(AppsecWafExclusionFilterOutput{})
	pulumi.RegisterOutputType(AppsecWafExclusionFilterArrayOutput{})
	pulumi.RegisterOutputType(AppsecWafExclusionFilterMapOutput{})
}
