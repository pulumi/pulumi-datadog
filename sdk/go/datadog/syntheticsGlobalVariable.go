// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a Datadog synthetics global variable resource. This can be used to create and manage Datadog synthetics global variables.
//
// ## Import
//
// Synthetics global variables can be imported using their string ID, e.g.
//
// ```sh
//
//	$ pulumi import datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable fizz abcde123-fghi-456-jkl-mnopqrstuv
//
// ```
type SyntheticsGlobalVariable struct {
	pulumi.CustomResourceState

	// Description of the global variable.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Synthetics global variable name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Additional options for the variable, such as a MFA token.
	Options SyntheticsGlobalVariableOptionsPtrOutput `pulumi:"options"`
	// Id of the Synthetics test to use for a variable from test.
	ParseTestId pulumi.StringPtrOutput `pulumi:"parseTestId"`
	// ID of the Synthetics test to use a source of the global variable value.
	ParseTestOptions SyntheticsGlobalVariableParseTestOptionsPtrOutput `pulumi:"parseTestOptions"`
	// A list of role identifiers to associate with the Synthetics global variable.
	RestrictedRoles pulumi.StringArrayOutput `pulumi:"restrictedRoles"`
	// If set to true, the value of the global variable is hidden. Defaults to `false`.
	Secure pulumi.BoolPtrOutput `pulumi:"secure"`
	// A list of tags to associate with your synthetics global variable.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Value for the parser to use, required for type `jsonPath` or `regex`.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewSyntheticsGlobalVariable registers a new resource with the given unique name, arguments, and options.
func NewSyntheticsGlobalVariable(ctx *pulumi.Context,
	name string, args *SyntheticsGlobalVariableArgs, opts ...pulumi.ResourceOption) (*SyntheticsGlobalVariable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	if args.Value != nil {
		args.Value = pulumi.ToSecret(args.Value).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"value",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SyntheticsGlobalVariable
	err := ctx.RegisterResource("datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSyntheticsGlobalVariable gets an existing SyntheticsGlobalVariable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSyntheticsGlobalVariable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SyntheticsGlobalVariableState, opts ...pulumi.ResourceOption) (*SyntheticsGlobalVariable, error) {
	var resource SyntheticsGlobalVariable
	err := ctx.ReadResource("datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SyntheticsGlobalVariable resources.
type syntheticsGlobalVariableState struct {
	// Description of the global variable.
	Description *string `pulumi:"description"`
	// Synthetics global variable name.
	Name *string `pulumi:"name"`
	// Additional options for the variable, such as a MFA token.
	Options *SyntheticsGlobalVariableOptions `pulumi:"options"`
	// Id of the Synthetics test to use for a variable from test.
	ParseTestId *string `pulumi:"parseTestId"`
	// ID of the Synthetics test to use a source of the global variable value.
	ParseTestOptions *SyntheticsGlobalVariableParseTestOptions `pulumi:"parseTestOptions"`
	// A list of role identifiers to associate with the Synthetics global variable.
	RestrictedRoles []string `pulumi:"restrictedRoles"`
	// If set to true, the value of the global variable is hidden. Defaults to `false`.
	Secure *bool `pulumi:"secure"`
	// A list of tags to associate with your synthetics global variable.
	Tags []string `pulumi:"tags"`
	// Value for the parser to use, required for type `jsonPath` or `regex`.
	Value *string `pulumi:"value"`
}

type SyntheticsGlobalVariableState struct {
	// Description of the global variable.
	Description pulumi.StringPtrInput
	// Synthetics global variable name.
	Name pulumi.StringPtrInput
	// Additional options for the variable, such as a MFA token.
	Options SyntheticsGlobalVariableOptionsPtrInput
	// Id of the Synthetics test to use for a variable from test.
	ParseTestId pulumi.StringPtrInput
	// ID of the Synthetics test to use a source of the global variable value.
	ParseTestOptions SyntheticsGlobalVariableParseTestOptionsPtrInput
	// A list of role identifiers to associate with the Synthetics global variable.
	RestrictedRoles pulumi.StringArrayInput
	// If set to true, the value of the global variable is hidden. Defaults to `false`.
	Secure pulumi.BoolPtrInput
	// A list of tags to associate with your synthetics global variable.
	Tags pulumi.StringArrayInput
	// Value for the parser to use, required for type `jsonPath` or `regex`.
	Value pulumi.StringPtrInput
}

func (SyntheticsGlobalVariableState) ElementType() reflect.Type {
	return reflect.TypeOf((*syntheticsGlobalVariableState)(nil)).Elem()
}

type syntheticsGlobalVariableArgs struct {
	// Description of the global variable.
	Description *string `pulumi:"description"`
	// Synthetics global variable name.
	Name string `pulumi:"name"`
	// Additional options for the variable, such as a MFA token.
	Options *SyntheticsGlobalVariableOptions `pulumi:"options"`
	// Id of the Synthetics test to use for a variable from test.
	ParseTestId *string `pulumi:"parseTestId"`
	// ID of the Synthetics test to use a source of the global variable value.
	ParseTestOptions *SyntheticsGlobalVariableParseTestOptions `pulumi:"parseTestOptions"`
	// A list of role identifiers to associate with the Synthetics global variable.
	RestrictedRoles []string `pulumi:"restrictedRoles"`
	// If set to true, the value of the global variable is hidden. Defaults to `false`.
	Secure *bool `pulumi:"secure"`
	// A list of tags to associate with your synthetics global variable.
	Tags []string `pulumi:"tags"`
	// Value for the parser to use, required for type `jsonPath` or `regex`.
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a SyntheticsGlobalVariable resource.
type SyntheticsGlobalVariableArgs struct {
	// Description of the global variable.
	Description pulumi.StringPtrInput
	// Synthetics global variable name.
	Name pulumi.StringInput
	// Additional options for the variable, such as a MFA token.
	Options SyntheticsGlobalVariableOptionsPtrInput
	// Id of the Synthetics test to use for a variable from test.
	ParseTestId pulumi.StringPtrInput
	// ID of the Synthetics test to use a source of the global variable value.
	ParseTestOptions SyntheticsGlobalVariableParseTestOptionsPtrInput
	// A list of role identifiers to associate with the Synthetics global variable.
	RestrictedRoles pulumi.StringArrayInput
	// If set to true, the value of the global variable is hidden. Defaults to `false`.
	Secure pulumi.BoolPtrInput
	// A list of tags to associate with your synthetics global variable.
	Tags pulumi.StringArrayInput
	// Value for the parser to use, required for type `jsonPath` or `regex`.
	Value pulumi.StringInput
}

func (SyntheticsGlobalVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*syntheticsGlobalVariableArgs)(nil)).Elem()
}

type SyntheticsGlobalVariableInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableOutput() SyntheticsGlobalVariableOutput
	ToSyntheticsGlobalVariableOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOutput
}

func (*SyntheticsGlobalVariable) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariable)(nil)).Elem()
}

func (i *SyntheticsGlobalVariable) ToSyntheticsGlobalVariableOutput() SyntheticsGlobalVariableOutput {
	return i.ToSyntheticsGlobalVariableOutputWithContext(context.Background())
}

func (i *SyntheticsGlobalVariable) ToSyntheticsGlobalVariableOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOutput)
}

func (i *SyntheticsGlobalVariable) ToOutput(ctx context.Context) pulumix.Output[*SyntheticsGlobalVariable] {
	return pulumix.Output[*SyntheticsGlobalVariable]{
		OutputState: i.ToSyntheticsGlobalVariableOutputWithContext(ctx).OutputState,
	}
}

// SyntheticsGlobalVariableArrayInput is an input type that accepts SyntheticsGlobalVariableArray and SyntheticsGlobalVariableArrayOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableArrayInput` via:
//
//	SyntheticsGlobalVariableArray{ SyntheticsGlobalVariableArgs{...} }
type SyntheticsGlobalVariableArrayInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableArrayOutput() SyntheticsGlobalVariableArrayOutput
	ToSyntheticsGlobalVariableArrayOutputWithContext(context.Context) SyntheticsGlobalVariableArrayOutput
}

type SyntheticsGlobalVariableArray []SyntheticsGlobalVariableInput

func (SyntheticsGlobalVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyntheticsGlobalVariable)(nil)).Elem()
}

func (i SyntheticsGlobalVariableArray) ToSyntheticsGlobalVariableArrayOutput() SyntheticsGlobalVariableArrayOutput {
	return i.ToSyntheticsGlobalVariableArrayOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableArray) ToSyntheticsGlobalVariableArrayOutputWithContext(ctx context.Context) SyntheticsGlobalVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableArrayOutput)
}

func (i SyntheticsGlobalVariableArray) ToOutput(ctx context.Context) pulumix.Output[[]*SyntheticsGlobalVariable] {
	return pulumix.Output[[]*SyntheticsGlobalVariable]{
		OutputState: i.ToSyntheticsGlobalVariableArrayOutputWithContext(ctx).OutputState,
	}
}

// SyntheticsGlobalVariableMapInput is an input type that accepts SyntheticsGlobalVariableMap and SyntheticsGlobalVariableMapOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableMapInput` via:
//
//	SyntheticsGlobalVariableMap{ "key": SyntheticsGlobalVariableArgs{...} }
type SyntheticsGlobalVariableMapInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableMapOutput() SyntheticsGlobalVariableMapOutput
	ToSyntheticsGlobalVariableMapOutputWithContext(context.Context) SyntheticsGlobalVariableMapOutput
}

type SyntheticsGlobalVariableMap map[string]SyntheticsGlobalVariableInput

func (SyntheticsGlobalVariableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyntheticsGlobalVariable)(nil)).Elem()
}

func (i SyntheticsGlobalVariableMap) ToSyntheticsGlobalVariableMapOutput() SyntheticsGlobalVariableMapOutput {
	return i.ToSyntheticsGlobalVariableMapOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableMap) ToSyntheticsGlobalVariableMapOutputWithContext(ctx context.Context) SyntheticsGlobalVariableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableMapOutput)
}

func (i SyntheticsGlobalVariableMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SyntheticsGlobalVariable] {
	return pulumix.Output[map[string]*SyntheticsGlobalVariable]{
		OutputState: i.ToSyntheticsGlobalVariableMapOutputWithContext(ctx).OutputState,
	}
}

type SyntheticsGlobalVariableOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariable)(nil)).Elem()
}

func (o SyntheticsGlobalVariableOutput) ToSyntheticsGlobalVariableOutput() SyntheticsGlobalVariableOutput {
	return o
}

func (o SyntheticsGlobalVariableOutput) ToSyntheticsGlobalVariableOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOutput {
	return o
}

func (o SyntheticsGlobalVariableOutput) ToOutput(ctx context.Context) pulumix.Output[*SyntheticsGlobalVariable] {
	return pulumix.Output[*SyntheticsGlobalVariable]{
		OutputState: o.OutputState,
	}
}

// Description of the global variable.
func (o SyntheticsGlobalVariableOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariable) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Synthetics global variable name.
func (o SyntheticsGlobalVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariable) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Additional options for the variable, such as a MFA token.
func (o SyntheticsGlobalVariableOutput) Options() SyntheticsGlobalVariableOptionsPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariable) SyntheticsGlobalVariableOptionsPtrOutput { return v.Options }).(SyntheticsGlobalVariableOptionsPtrOutput)
}

// Id of the Synthetics test to use for a variable from test.
func (o SyntheticsGlobalVariableOutput) ParseTestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariable) pulumi.StringPtrOutput { return v.ParseTestId }).(pulumi.StringPtrOutput)
}

// ID of the Synthetics test to use a source of the global variable value.
func (o SyntheticsGlobalVariableOutput) ParseTestOptions() SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariable) SyntheticsGlobalVariableParseTestOptionsPtrOutput {
		return v.ParseTestOptions
	}).(SyntheticsGlobalVariableParseTestOptionsPtrOutput)
}

// A list of role identifiers to associate with the Synthetics global variable.
func (o SyntheticsGlobalVariableOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariable) pulumi.StringArrayOutput { return v.RestrictedRoles }).(pulumi.StringArrayOutput)
}

// If set to true, the value of the global variable is hidden. Defaults to `false`.
func (o SyntheticsGlobalVariableOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariable) pulumi.BoolPtrOutput { return v.Secure }).(pulumi.BoolPtrOutput)
}

// A list of tags to associate with your synthetics global variable.
func (o SyntheticsGlobalVariableOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariable) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Value for the parser to use, required for type `jsonPath` or `regex`.
func (o SyntheticsGlobalVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariable) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type SyntheticsGlobalVariableArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyntheticsGlobalVariable)(nil)).Elem()
}

func (o SyntheticsGlobalVariableArrayOutput) ToSyntheticsGlobalVariableArrayOutput() SyntheticsGlobalVariableArrayOutput {
	return o
}

func (o SyntheticsGlobalVariableArrayOutput) ToSyntheticsGlobalVariableArrayOutputWithContext(ctx context.Context) SyntheticsGlobalVariableArrayOutput {
	return o
}

func (o SyntheticsGlobalVariableArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SyntheticsGlobalVariable] {
	return pulumix.Output[[]*SyntheticsGlobalVariable]{
		OutputState: o.OutputState,
	}
}

func (o SyntheticsGlobalVariableArrayOutput) Index(i pulumi.IntInput) SyntheticsGlobalVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SyntheticsGlobalVariable {
		return vs[0].([]*SyntheticsGlobalVariable)[vs[1].(int)]
	}).(SyntheticsGlobalVariableOutput)
}

type SyntheticsGlobalVariableMapOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyntheticsGlobalVariable)(nil)).Elem()
}

func (o SyntheticsGlobalVariableMapOutput) ToSyntheticsGlobalVariableMapOutput() SyntheticsGlobalVariableMapOutput {
	return o
}

func (o SyntheticsGlobalVariableMapOutput) ToSyntheticsGlobalVariableMapOutputWithContext(ctx context.Context) SyntheticsGlobalVariableMapOutput {
	return o
}

func (o SyntheticsGlobalVariableMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SyntheticsGlobalVariable] {
	return pulumix.Output[map[string]*SyntheticsGlobalVariable]{
		OutputState: o.OutputState,
	}
}

func (o SyntheticsGlobalVariableMapOutput) MapIndex(k pulumi.StringInput) SyntheticsGlobalVariableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SyntheticsGlobalVariable {
		return vs[0].(map[string]*SyntheticsGlobalVariable)[vs[1].(string)]
	}).(SyntheticsGlobalVariableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableInput)(nil)).Elem(), &SyntheticsGlobalVariable{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableArrayInput)(nil)).Elem(), SyntheticsGlobalVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableMapInput)(nil)).Elem(), SyntheticsGlobalVariableMap{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableMapOutput{})
}
