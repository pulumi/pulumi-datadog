// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog Azure Usage Cost configuration resource. This can be used to create and manage Azure Cost Export configurations for Cloud Cost Management. Azure configurations require both actual and amortized cost export settings.
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import datadog:index/azureUcConfig:AzureUcConfig example <cloud_account_id>
// ```
type AzureUcConfig struct {
	pulumi.CustomResourceState

	// The tenant ID of the Azure account.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Configuration for the actual cost export.
	ActualBillConfig AzureUcConfigActualBillConfigPtrOutput `pulumi:"actualBillConfig"`
	// Configuration for the amortized cost export.
	AmortizedBillConfig AzureUcConfigAmortizedBillConfigPtrOutput `pulumi:"amortizedBillConfig"`
	// The client ID of the Azure account.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// The timestamp when the Azure Usage Cost configuration was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// List of error messages if the Azure Usage Cost configuration encountered any issues during setup or data processing.
	ErrorMessages pulumi.StringArrayOutput `pulumi:"errorMessages"`
	// The scope of your observed subscription.
	Scope pulumi.StringOutput `pulumi:"scope"`
	// The current status of the Azure Usage Cost configuration.
	Status pulumi.StringOutput `pulumi:"status"`
	// The timestamp when the configuration status was last updated.
	StatusUpdatedAt pulumi.StringOutput `pulumi:"statusUpdatedAt"`
	// The timestamp when the Azure Usage Cost configuration was last modified.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewAzureUcConfig registers a new resource with the given unique name, arguments, and options.
func NewAzureUcConfig(ctx *pulumi.Context,
	name string, args *AzureUcConfigArgs, opts ...pulumi.ResourceOption) (*AzureUcConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureUcConfig
	err := ctx.RegisterResource("datadog:index/azureUcConfig:AzureUcConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureUcConfig gets an existing AzureUcConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureUcConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureUcConfigState, opts ...pulumi.ResourceOption) (*AzureUcConfig, error) {
	var resource AzureUcConfig
	err := ctx.ReadResource("datadog:index/azureUcConfig:AzureUcConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureUcConfig resources.
type azureUcConfigState struct {
	// The tenant ID of the Azure account.
	AccountId *string `pulumi:"accountId"`
	// Configuration for the actual cost export.
	ActualBillConfig *AzureUcConfigActualBillConfig `pulumi:"actualBillConfig"`
	// Configuration for the amortized cost export.
	AmortizedBillConfig *AzureUcConfigAmortizedBillConfig `pulumi:"amortizedBillConfig"`
	// The client ID of the Azure account.
	ClientId *string `pulumi:"clientId"`
	// The timestamp when the Azure Usage Cost configuration was created.
	CreatedAt *string `pulumi:"createdAt"`
	// List of error messages if the Azure Usage Cost configuration encountered any issues during setup or data processing.
	ErrorMessages []string `pulumi:"errorMessages"`
	// The scope of your observed subscription.
	Scope *string `pulumi:"scope"`
	// The current status of the Azure Usage Cost configuration.
	Status *string `pulumi:"status"`
	// The timestamp when the configuration status was last updated.
	StatusUpdatedAt *string `pulumi:"statusUpdatedAt"`
	// The timestamp when the Azure Usage Cost configuration was last modified.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type AzureUcConfigState struct {
	// The tenant ID of the Azure account.
	AccountId pulumi.StringPtrInput
	// Configuration for the actual cost export.
	ActualBillConfig AzureUcConfigActualBillConfigPtrInput
	// Configuration for the amortized cost export.
	AmortizedBillConfig AzureUcConfigAmortizedBillConfigPtrInput
	// The client ID of the Azure account.
	ClientId pulumi.StringPtrInput
	// The timestamp when the Azure Usage Cost configuration was created.
	CreatedAt pulumi.StringPtrInput
	// List of error messages if the Azure Usage Cost configuration encountered any issues during setup or data processing.
	ErrorMessages pulumi.StringArrayInput
	// The scope of your observed subscription.
	Scope pulumi.StringPtrInput
	// The current status of the Azure Usage Cost configuration.
	Status pulumi.StringPtrInput
	// The timestamp when the configuration status was last updated.
	StatusUpdatedAt pulumi.StringPtrInput
	// The timestamp when the Azure Usage Cost configuration was last modified.
	UpdatedAt pulumi.StringPtrInput
}

func (AzureUcConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureUcConfigState)(nil)).Elem()
}

type azureUcConfigArgs struct {
	// The tenant ID of the Azure account.
	AccountId string `pulumi:"accountId"`
	// Configuration for the actual cost export.
	ActualBillConfig *AzureUcConfigActualBillConfig `pulumi:"actualBillConfig"`
	// Configuration for the amortized cost export.
	AmortizedBillConfig *AzureUcConfigAmortizedBillConfig `pulumi:"amortizedBillConfig"`
	// The client ID of the Azure account.
	ClientId string `pulumi:"clientId"`
	// The scope of your observed subscription.
	Scope string `pulumi:"scope"`
}

// The set of arguments for constructing a AzureUcConfig resource.
type AzureUcConfigArgs struct {
	// The tenant ID of the Azure account.
	AccountId pulumi.StringInput
	// Configuration for the actual cost export.
	ActualBillConfig AzureUcConfigActualBillConfigPtrInput
	// Configuration for the amortized cost export.
	AmortizedBillConfig AzureUcConfigAmortizedBillConfigPtrInput
	// The client ID of the Azure account.
	ClientId pulumi.StringInput
	// The scope of your observed subscription.
	Scope pulumi.StringInput
}

func (AzureUcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureUcConfigArgs)(nil)).Elem()
}

type AzureUcConfigInput interface {
	pulumi.Input

	ToAzureUcConfigOutput() AzureUcConfigOutput
	ToAzureUcConfigOutputWithContext(ctx context.Context) AzureUcConfigOutput
}

func (*AzureUcConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureUcConfig)(nil)).Elem()
}

func (i *AzureUcConfig) ToAzureUcConfigOutput() AzureUcConfigOutput {
	return i.ToAzureUcConfigOutputWithContext(context.Background())
}

func (i *AzureUcConfig) ToAzureUcConfigOutputWithContext(ctx context.Context) AzureUcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureUcConfigOutput)
}

// AzureUcConfigArrayInput is an input type that accepts AzureUcConfigArray and AzureUcConfigArrayOutput values.
// You can construct a concrete instance of `AzureUcConfigArrayInput` via:
//
//	AzureUcConfigArray{ AzureUcConfigArgs{...} }
type AzureUcConfigArrayInput interface {
	pulumi.Input

	ToAzureUcConfigArrayOutput() AzureUcConfigArrayOutput
	ToAzureUcConfigArrayOutputWithContext(context.Context) AzureUcConfigArrayOutput
}

type AzureUcConfigArray []AzureUcConfigInput

func (AzureUcConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureUcConfig)(nil)).Elem()
}

func (i AzureUcConfigArray) ToAzureUcConfigArrayOutput() AzureUcConfigArrayOutput {
	return i.ToAzureUcConfigArrayOutputWithContext(context.Background())
}

func (i AzureUcConfigArray) ToAzureUcConfigArrayOutputWithContext(ctx context.Context) AzureUcConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureUcConfigArrayOutput)
}

// AzureUcConfigMapInput is an input type that accepts AzureUcConfigMap and AzureUcConfigMapOutput values.
// You can construct a concrete instance of `AzureUcConfigMapInput` via:
//
//	AzureUcConfigMap{ "key": AzureUcConfigArgs{...} }
type AzureUcConfigMapInput interface {
	pulumi.Input

	ToAzureUcConfigMapOutput() AzureUcConfigMapOutput
	ToAzureUcConfigMapOutputWithContext(context.Context) AzureUcConfigMapOutput
}

type AzureUcConfigMap map[string]AzureUcConfigInput

func (AzureUcConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureUcConfig)(nil)).Elem()
}

func (i AzureUcConfigMap) ToAzureUcConfigMapOutput() AzureUcConfigMapOutput {
	return i.ToAzureUcConfigMapOutputWithContext(context.Background())
}

func (i AzureUcConfigMap) ToAzureUcConfigMapOutputWithContext(ctx context.Context) AzureUcConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureUcConfigMapOutput)
}

type AzureUcConfigOutput struct{ *pulumi.OutputState }

func (AzureUcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureUcConfig)(nil)).Elem()
}

func (o AzureUcConfigOutput) ToAzureUcConfigOutput() AzureUcConfigOutput {
	return o
}

func (o AzureUcConfigOutput) ToAzureUcConfigOutputWithContext(ctx context.Context) AzureUcConfigOutput {
	return o
}

// The tenant ID of the Azure account.
func (o AzureUcConfigOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureUcConfig) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Configuration for the actual cost export.
func (o AzureUcConfigOutput) ActualBillConfig() AzureUcConfigActualBillConfigPtrOutput {
	return o.ApplyT(func(v *AzureUcConfig) AzureUcConfigActualBillConfigPtrOutput { return v.ActualBillConfig }).(AzureUcConfigActualBillConfigPtrOutput)
}

// Configuration for the amortized cost export.
func (o AzureUcConfigOutput) AmortizedBillConfig() AzureUcConfigAmortizedBillConfigPtrOutput {
	return o.ApplyT(func(v *AzureUcConfig) AzureUcConfigAmortizedBillConfigPtrOutput { return v.AmortizedBillConfig }).(AzureUcConfigAmortizedBillConfigPtrOutput)
}

// The client ID of the Azure account.
func (o AzureUcConfigOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureUcConfig) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// The timestamp when the Azure Usage Cost configuration was created.
func (o AzureUcConfigOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureUcConfig) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// List of error messages if the Azure Usage Cost configuration encountered any issues during setup or data processing.
func (o AzureUcConfigOutput) ErrorMessages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AzureUcConfig) pulumi.StringArrayOutput { return v.ErrorMessages }).(pulumi.StringArrayOutput)
}

// The scope of your observed subscription.
func (o AzureUcConfigOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureUcConfig) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

// The current status of the Azure Usage Cost configuration.
func (o AzureUcConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureUcConfig) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The timestamp when the configuration status was last updated.
func (o AzureUcConfigOutput) StatusUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureUcConfig) pulumi.StringOutput { return v.StatusUpdatedAt }).(pulumi.StringOutput)
}

// The timestamp when the Azure Usage Cost configuration was last modified.
func (o AzureUcConfigOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureUcConfig) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type AzureUcConfigArrayOutput struct{ *pulumi.OutputState }

func (AzureUcConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureUcConfig)(nil)).Elem()
}

func (o AzureUcConfigArrayOutput) ToAzureUcConfigArrayOutput() AzureUcConfigArrayOutput {
	return o
}

func (o AzureUcConfigArrayOutput) ToAzureUcConfigArrayOutputWithContext(ctx context.Context) AzureUcConfigArrayOutput {
	return o
}

func (o AzureUcConfigArrayOutput) Index(i pulumi.IntInput) AzureUcConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureUcConfig {
		return vs[0].([]*AzureUcConfig)[vs[1].(int)]
	}).(AzureUcConfigOutput)
}

type AzureUcConfigMapOutput struct{ *pulumi.OutputState }

func (AzureUcConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureUcConfig)(nil)).Elem()
}

func (o AzureUcConfigMapOutput) ToAzureUcConfigMapOutput() AzureUcConfigMapOutput {
	return o
}

func (o AzureUcConfigMapOutput) ToAzureUcConfigMapOutputWithContext(ctx context.Context) AzureUcConfigMapOutput {
	return o
}

func (o AzureUcConfigMapOutput) MapIndex(k pulumi.StringInput) AzureUcConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureUcConfig {
		return vs[0].(map[string]*AzureUcConfig)[vs[1].(string)]
	}).(AzureUcConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureUcConfigInput)(nil)).Elem(), &AzureUcConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureUcConfigArrayInput)(nil)).Elem(), AzureUcConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureUcConfigMapInput)(nil)).Elem(), AzureUcConfigMap{})
	pulumi.RegisterOutputType(AzureUcConfigOutput{})
	pulumi.RegisterOutputType(AzureUcConfigArrayOutput{})
	pulumi.RegisterOutputType(AzureUcConfigMapOutput{})
}
