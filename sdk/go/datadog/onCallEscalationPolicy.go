// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog On-Call escalation policy resource. This can be used to create and manage Datadog On-Call escalation policies.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.NewOnCallEscalationPolicy(ctx, "policy_test", &datadog.OnCallEscalationPolicyArgs{
//				Name:                   pulumi.String("Policy Name"),
//				ResolvePageOnPolicyEnd: pulumi.Bool(true),
//				Retries:                pulumi.Int(3),
//				Steps: datadog.OnCallEscalationPolicyStepArray{
//					&datadog.OnCallEscalationPolicyStepArgs{
//						Assignment:           pulumi.String("round-robin"),
//						EscalateAfterSeconds: pulumi.Int(300),
//						Targets: datadog.OnCallEscalationPolicyStepTargetArray{
//							&datadog.OnCallEscalationPolicyStepTargetArgs{
//								Team: pulumi.String("00000000-aba2-0000-0000-000000000000"),
//							},
//							&datadog.OnCallEscalationPolicyStepTargetArgs{
//								User: pulumi.String("00000000-aba2-0000-0000-000000000000"),
//							},
//							&datadog.OnCallEscalationPolicyStepTargetArgs{
//								Schedule: pulumi.String("00000000-aba2-0000-0000-000000000000"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// Import an existing on_call_escalation_policy
//
// ```sh
// $ pulumi import datadog:index/onCallEscalationPolicy:OnCallEscalationPolicy test "b03a07d5-49da-43e9-83b4-5d84969b588b"
// ```
type OnCallEscalationPolicy struct {
	pulumi.CustomResourceState

	// A human-readable name for the escalation policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
	ResolvePageOnPolicyEnd pulumi.BoolOutput `pulumi:"resolvePageOnPolicyEnd"`
	// If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
	Retries pulumi.IntOutput `pulumi:"retries"`
	// List of steps for the escalation policy.
	Steps OnCallEscalationPolicyStepArrayOutput `pulumi:"steps"`
	// A list of team ids associated with the escalation policy.
	Teams pulumi.StringArrayOutput `pulumi:"teams"`
}

// NewOnCallEscalationPolicy registers a new resource with the given unique name, arguments, and options.
func NewOnCallEscalationPolicy(ctx *pulumi.Context,
	name string, args *OnCallEscalationPolicyArgs, opts ...pulumi.ResourceOption) (*OnCallEscalationPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Steps == nil {
		return nil, errors.New("invalid value for required argument 'Steps'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OnCallEscalationPolicy
	err := ctx.RegisterResource("datadog:index/onCallEscalationPolicy:OnCallEscalationPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOnCallEscalationPolicy gets an existing OnCallEscalationPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOnCallEscalationPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OnCallEscalationPolicyState, opts ...pulumi.ResourceOption) (*OnCallEscalationPolicy, error) {
	var resource OnCallEscalationPolicy
	err := ctx.ReadResource("datadog:index/onCallEscalationPolicy:OnCallEscalationPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OnCallEscalationPolicy resources.
type onCallEscalationPolicyState struct {
	// A human-readable name for the escalation policy.
	Name *string `pulumi:"name"`
	// If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
	ResolvePageOnPolicyEnd *bool `pulumi:"resolvePageOnPolicyEnd"`
	// If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
	Retries *int `pulumi:"retries"`
	// List of steps for the escalation policy.
	Steps []OnCallEscalationPolicyStep `pulumi:"steps"`
	// A list of team ids associated with the escalation policy.
	Teams []string `pulumi:"teams"`
}

type OnCallEscalationPolicyState struct {
	// A human-readable name for the escalation policy.
	Name pulumi.StringPtrInput
	// If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
	ResolvePageOnPolicyEnd pulumi.BoolPtrInput
	// If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
	Retries pulumi.IntPtrInput
	// List of steps for the escalation policy.
	Steps OnCallEscalationPolicyStepArrayInput
	// A list of team ids associated with the escalation policy.
	Teams pulumi.StringArrayInput
}

func (OnCallEscalationPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*onCallEscalationPolicyState)(nil)).Elem()
}

type onCallEscalationPolicyArgs struct {
	// A human-readable name for the escalation policy.
	Name string `pulumi:"name"`
	// If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
	ResolvePageOnPolicyEnd *bool `pulumi:"resolvePageOnPolicyEnd"`
	// If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
	Retries *int `pulumi:"retries"`
	// List of steps for the escalation policy.
	Steps []OnCallEscalationPolicyStep `pulumi:"steps"`
	// A list of team ids associated with the escalation policy.
	Teams []string `pulumi:"teams"`
}

// The set of arguments for constructing a OnCallEscalationPolicy resource.
type OnCallEscalationPolicyArgs struct {
	// A human-readable name for the escalation policy.
	Name pulumi.StringInput
	// If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
	ResolvePageOnPolicyEnd pulumi.BoolPtrInput
	// If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
	Retries pulumi.IntPtrInput
	// List of steps for the escalation policy.
	Steps OnCallEscalationPolicyStepArrayInput
	// A list of team ids associated with the escalation policy.
	Teams pulumi.StringArrayInput
}

func (OnCallEscalationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*onCallEscalationPolicyArgs)(nil)).Elem()
}

type OnCallEscalationPolicyInput interface {
	pulumi.Input

	ToOnCallEscalationPolicyOutput() OnCallEscalationPolicyOutput
	ToOnCallEscalationPolicyOutputWithContext(ctx context.Context) OnCallEscalationPolicyOutput
}

func (*OnCallEscalationPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**OnCallEscalationPolicy)(nil)).Elem()
}

func (i *OnCallEscalationPolicy) ToOnCallEscalationPolicyOutput() OnCallEscalationPolicyOutput {
	return i.ToOnCallEscalationPolicyOutputWithContext(context.Background())
}

func (i *OnCallEscalationPolicy) ToOnCallEscalationPolicyOutputWithContext(ctx context.Context) OnCallEscalationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnCallEscalationPolicyOutput)
}

// OnCallEscalationPolicyArrayInput is an input type that accepts OnCallEscalationPolicyArray and OnCallEscalationPolicyArrayOutput values.
// You can construct a concrete instance of `OnCallEscalationPolicyArrayInput` via:
//
//	OnCallEscalationPolicyArray{ OnCallEscalationPolicyArgs{...} }
type OnCallEscalationPolicyArrayInput interface {
	pulumi.Input

	ToOnCallEscalationPolicyArrayOutput() OnCallEscalationPolicyArrayOutput
	ToOnCallEscalationPolicyArrayOutputWithContext(context.Context) OnCallEscalationPolicyArrayOutput
}

type OnCallEscalationPolicyArray []OnCallEscalationPolicyInput

func (OnCallEscalationPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OnCallEscalationPolicy)(nil)).Elem()
}

func (i OnCallEscalationPolicyArray) ToOnCallEscalationPolicyArrayOutput() OnCallEscalationPolicyArrayOutput {
	return i.ToOnCallEscalationPolicyArrayOutputWithContext(context.Background())
}

func (i OnCallEscalationPolicyArray) ToOnCallEscalationPolicyArrayOutputWithContext(ctx context.Context) OnCallEscalationPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnCallEscalationPolicyArrayOutput)
}

// OnCallEscalationPolicyMapInput is an input type that accepts OnCallEscalationPolicyMap and OnCallEscalationPolicyMapOutput values.
// You can construct a concrete instance of `OnCallEscalationPolicyMapInput` via:
//
//	OnCallEscalationPolicyMap{ "key": OnCallEscalationPolicyArgs{...} }
type OnCallEscalationPolicyMapInput interface {
	pulumi.Input

	ToOnCallEscalationPolicyMapOutput() OnCallEscalationPolicyMapOutput
	ToOnCallEscalationPolicyMapOutputWithContext(context.Context) OnCallEscalationPolicyMapOutput
}

type OnCallEscalationPolicyMap map[string]OnCallEscalationPolicyInput

func (OnCallEscalationPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OnCallEscalationPolicy)(nil)).Elem()
}

func (i OnCallEscalationPolicyMap) ToOnCallEscalationPolicyMapOutput() OnCallEscalationPolicyMapOutput {
	return i.ToOnCallEscalationPolicyMapOutputWithContext(context.Background())
}

func (i OnCallEscalationPolicyMap) ToOnCallEscalationPolicyMapOutputWithContext(ctx context.Context) OnCallEscalationPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OnCallEscalationPolicyMapOutput)
}

type OnCallEscalationPolicyOutput struct{ *pulumi.OutputState }

func (OnCallEscalationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OnCallEscalationPolicy)(nil)).Elem()
}

func (o OnCallEscalationPolicyOutput) ToOnCallEscalationPolicyOutput() OnCallEscalationPolicyOutput {
	return o
}

func (o OnCallEscalationPolicyOutput) ToOnCallEscalationPolicyOutputWithContext(ctx context.Context) OnCallEscalationPolicyOutput {
	return o
}

// A human-readable name for the escalation policy.
func (o OnCallEscalationPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OnCallEscalationPolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
func (o OnCallEscalationPolicyOutput) ResolvePageOnPolicyEnd() pulumi.BoolOutput {
	return o.ApplyT(func(v *OnCallEscalationPolicy) pulumi.BoolOutput { return v.ResolvePageOnPolicyEnd }).(pulumi.BoolOutput)
}

// If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
func (o OnCallEscalationPolicyOutput) Retries() pulumi.IntOutput {
	return o.ApplyT(func(v *OnCallEscalationPolicy) pulumi.IntOutput { return v.Retries }).(pulumi.IntOutput)
}

// List of steps for the escalation policy.
func (o OnCallEscalationPolicyOutput) Steps() OnCallEscalationPolicyStepArrayOutput {
	return o.ApplyT(func(v *OnCallEscalationPolicy) OnCallEscalationPolicyStepArrayOutput { return v.Steps }).(OnCallEscalationPolicyStepArrayOutput)
}

// A list of team ids associated with the escalation policy.
func (o OnCallEscalationPolicyOutput) Teams() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OnCallEscalationPolicy) pulumi.StringArrayOutput { return v.Teams }).(pulumi.StringArrayOutput)
}

type OnCallEscalationPolicyArrayOutput struct{ *pulumi.OutputState }

func (OnCallEscalationPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OnCallEscalationPolicy)(nil)).Elem()
}

func (o OnCallEscalationPolicyArrayOutput) ToOnCallEscalationPolicyArrayOutput() OnCallEscalationPolicyArrayOutput {
	return o
}

func (o OnCallEscalationPolicyArrayOutput) ToOnCallEscalationPolicyArrayOutputWithContext(ctx context.Context) OnCallEscalationPolicyArrayOutput {
	return o
}

func (o OnCallEscalationPolicyArrayOutput) Index(i pulumi.IntInput) OnCallEscalationPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OnCallEscalationPolicy {
		return vs[0].([]*OnCallEscalationPolicy)[vs[1].(int)]
	}).(OnCallEscalationPolicyOutput)
}

type OnCallEscalationPolicyMapOutput struct{ *pulumi.OutputState }

func (OnCallEscalationPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OnCallEscalationPolicy)(nil)).Elem()
}

func (o OnCallEscalationPolicyMapOutput) ToOnCallEscalationPolicyMapOutput() OnCallEscalationPolicyMapOutput {
	return o
}

func (o OnCallEscalationPolicyMapOutput) ToOnCallEscalationPolicyMapOutputWithContext(ctx context.Context) OnCallEscalationPolicyMapOutput {
	return o
}

func (o OnCallEscalationPolicyMapOutput) MapIndex(k pulumi.StringInput) OnCallEscalationPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OnCallEscalationPolicy {
		return vs[0].(map[string]*OnCallEscalationPolicy)[vs[1].(string)]
	}).(OnCallEscalationPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OnCallEscalationPolicyInput)(nil)).Elem(), &OnCallEscalationPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnCallEscalationPolicyArrayInput)(nil)).Elem(), OnCallEscalationPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OnCallEscalationPolicyMapInput)(nil)).Elem(), OnCallEscalationPolicyMap{})
	pulumi.RegisterOutputType(OnCallEscalationPolicyOutput{})
	pulumi.RegisterOutputType(OnCallEscalationPolicyArrayOutput{})
	pulumi.RegisterOutputType(OnCallEscalationPolicyMapOutput{})
}
