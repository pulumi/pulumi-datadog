// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog Security Monitoring Rule JSON resource. This can be used to create and manage Datadog security monitoring rules using raw JSON.
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import datadog:index/securityMonitoringRuleJson:SecurityMonitoringRuleJson security_rule_json aaa-yyy-vvv
// ```
type SecurityMonitoringRuleJson struct {
	pulumi.CustomResourceState

	// The JSON definition of the Security Monitoring Rule.
	Json pulumi.StringOutput `pulumi:"json"`
}

// NewSecurityMonitoringRuleJson registers a new resource with the given unique name, arguments, and options.
func NewSecurityMonitoringRuleJson(ctx *pulumi.Context,
	name string, args *SecurityMonitoringRuleJsonArgs, opts ...pulumi.ResourceOption) (*SecurityMonitoringRuleJson, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Json == nil {
		return nil, errors.New("invalid value for required argument 'Json'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SecurityMonitoringRuleJson
	err := ctx.RegisterResource("datadog:index/securityMonitoringRuleJson:SecurityMonitoringRuleJson", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityMonitoringRuleJson gets an existing SecurityMonitoringRuleJson resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityMonitoringRuleJson(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityMonitoringRuleJsonState, opts ...pulumi.ResourceOption) (*SecurityMonitoringRuleJson, error) {
	var resource SecurityMonitoringRuleJson
	err := ctx.ReadResource("datadog:index/securityMonitoringRuleJson:SecurityMonitoringRuleJson", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityMonitoringRuleJson resources.
type securityMonitoringRuleJsonState struct {
	// The JSON definition of the Security Monitoring Rule.
	Json *string `pulumi:"json"`
}

type SecurityMonitoringRuleJsonState struct {
	// The JSON definition of the Security Monitoring Rule.
	Json pulumi.StringPtrInput
}

func (SecurityMonitoringRuleJsonState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityMonitoringRuleJsonState)(nil)).Elem()
}

type securityMonitoringRuleJsonArgs struct {
	// The JSON definition of the Security Monitoring Rule.
	Json string `pulumi:"json"`
}

// The set of arguments for constructing a SecurityMonitoringRuleJson resource.
type SecurityMonitoringRuleJsonArgs struct {
	// The JSON definition of the Security Monitoring Rule.
	Json pulumi.StringInput
}

func (SecurityMonitoringRuleJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityMonitoringRuleJsonArgs)(nil)).Elem()
}

type SecurityMonitoringRuleJsonInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleJsonOutput() SecurityMonitoringRuleJsonOutput
	ToSecurityMonitoringRuleJsonOutputWithContext(ctx context.Context) SecurityMonitoringRuleJsonOutput
}

func (*SecurityMonitoringRuleJson) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleJson)(nil)).Elem()
}

func (i *SecurityMonitoringRuleJson) ToSecurityMonitoringRuleJsonOutput() SecurityMonitoringRuleJsonOutput {
	return i.ToSecurityMonitoringRuleJsonOutputWithContext(context.Background())
}

func (i *SecurityMonitoringRuleJson) ToSecurityMonitoringRuleJsonOutputWithContext(ctx context.Context) SecurityMonitoringRuleJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleJsonOutput)
}

// SecurityMonitoringRuleJsonArrayInput is an input type that accepts SecurityMonitoringRuleJsonArray and SecurityMonitoringRuleJsonArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleJsonArrayInput` via:
//
//	SecurityMonitoringRuleJsonArray{ SecurityMonitoringRuleJsonArgs{...} }
type SecurityMonitoringRuleJsonArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleJsonArrayOutput() SecurityMonitoringRuleJsonArrayOutput
	ToSecurityMonitoringRuleJsonArrayOutputWithContext(context.Context) SecurityMonitoringRuleJsonArrayOutput
}

type SecurityMonitoringRuleJsonArray []SecurityMonitoringRuleJsonInput

func (SecurityMonitoringRuleJsonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityMonitoringRuleJson)(nil)).Elem()
}

func (i SecurityMonitoringRuleJsonArray) ToSecurityMonitoringRuleJsonArrayOutput() SecurityMonitoringRuleJsonArrayOutput {
	return i.ToSecurityMonitoringRuleJsonArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleJsonArray) ToSecurityMonitoringRuleJsonArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleJsonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleJsonArrayOutput)
}

// SecurityMonitoringRuleJsonMapInput is an input type that accepts SecurityMonitoringRuleJsonMap and SecurityMonitoringRuleJsonMapOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleJsonMapInput` via:
//
//	SecurityMonitoringRuleJsonMap{ "key": SecurityMonitoringRuleJsonArgs{...} }
type SecurityMonitoringRuleJsonMapInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleJsonMapOutput() SecurityMonitoringRuleJsonMapOutput
	ToSecurityMonitoringRuleJsonMapOutputWithContext(context.Context) SecurityMonitoringRuleJsonMapOutput
}

type SecurityMonitoringRuleJsonMap map[string]SecurityMonitoringRuleJsonInput

func (SecurityMonitoringRuleJsonMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityMonitoringRuleJson)(nil)).Elem()
}

func (i SecurityMonitoringRuleJsonMap) ToSecurityMonitoringRuleJsonMapOutput() SecurityMonitoringRuleJsonMapOutput {
	return i.ToSecurityMonitoringRuleJsonMapOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleJsonMap) ToSecurityMonitoringRuleJsonMapOutputWithContext(ctx context.Context) SecurityMonitoringRuleJsonMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleJsonMapOutput)
}

type SecurityMonitoringRuleJsonOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleJson)(nil)).Elem()
}

func (o SecurityMonitoringRuleJsonOutput) ToSecurityMonitoringRuleJsonOutput() SecurityMonitoringRuleJsonOutput {
	return o
}

func (o SecurityMonitoringRuleJsonOutput) ToSecurityMonitoringRuleJsonOutputWithContext(ctx context.Context) SecurityMonitoringRuleJsonOutput {
	return o
}

// The JSON definition of the Security Monitoring Rule.
func (o SecurityMonitoringRuleJsonOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleJson) pulumi.StringOutput { return v.Json }).(pulumi.StringOutput)
}

type SecurityMonitoringRuleJsonArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleJsonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SecurityMonitoringRuleJson)(nil)).Elem()
}

func (o SecurityMonitoringRuleJsonArrayOutput) ToSecurityMonitoringRuleJsonArrayOutput() SecurityMonitoringRuleJsonArrayOutput {
	return o
}

func (o SecurityMonitoringRuleJsonArrayOutput) ToSecurityMonitoringRuleJsonArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleJsonArrayOutput {
	return o
}

func (o SecurityMonitoringRuleJsonArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringRuleJsonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SecurityMonitoringRuleJson {
		return vs[0].([]*SecurityMonitoringRuleJson)[vs[1].(int)]
	}).(SecurityMonitoringRuleJsonOutput)
}

type SecurityMonitoringRuleJsonMapOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleJsonMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SecurityMonitoringRuleJson)(nil)).Elem()
}

func (o SecurityMonitoringRuleJsonMapOutput) ToSecurityMonitoringRuleJsonMapOutput() SecurityMonitoringRuleJsonMapOutput {
	return o
}

func (o SecurityMonitoringRuleJsonMapOutput) ToSecurityMonitoringRuleJsonMapOutputWithContext(ctx context.Context) SecurityMonitoringRuleJsonMapOutput {
	return o
}

func (o SecurityMonitoringRuleJsonMapOutput) MapIndex(k pulumi.StringInput) SecurityMonitoringRuleJsonOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SecurityMonitoringRuleJson {
		return vs[0].(map[string]*SecurityMonitoringRuleJson)[vs[1].(string)]
	}).(SecurityMonitoringRuleJsonOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleJsonInput)(nil)).Elem(), &SecurityMonitoringRuleJson{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleJsonArrayInput)(nil)).Elem(), SecurityMonitoringRuleJsonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleJsonMapInput)(nil)).Elem(), SecurityMonitoringRuleJsonMap{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleJsonOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleJsonArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleJsonMapOutput{})
}
