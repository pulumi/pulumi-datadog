// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog Logs Index API resource. This can be used to create and manage Datadog logs indexes.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := datadog.NewLogsIndex(ctx, "sampleIndex", &datadog.LogsIndexArgs{
// 			ExclusionFilters: datadog.LogsIndexExclusionFilterArray{
// 				&datadog.LogsIndexExclusionFilterArgs{
// 					Filters: datadog.LogsIndexExclusionFilterFilterArray{
// 						&datadog.LogsIndexExclusionFilterFilterArgs{
// 							Query:      pulumi.String("app:coredns"),
// 							SampleRate: pulumi.Float64(0.97),
// 						},
// 					},
// 					IsEnabled: pulumi.Bool(true),
// 					Name:      pulumi.String("Filter coredns logs"),
// 				},
// 				&datadog.LogsIndexExclusionFilterArgs{
// 					Filters: datadog.LogsIndexExclusionFilterFilterArray{
// 						&datadog.LogsIndexExclusionFilterFilterArgs{
// 							Query:      pulumi.String("service:kube_apiserver"),
// 							SampleRate: pulumi.Float64(1),
// 						},
// 					},
// 					IsEnabled: pulumi.Bool(true),
// 					Name:      pulumi.String("Kubernetes apiserver"),
// 				},
// 			},
// 			Filters: datadog.LogsIndexFilterArray{
// 				&datadog.LogsIndexFilterArgs{
// 					Query: pulumi.String("*"),
// 				},
// 			},
// 			Name: pulumi.String("your index"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ```sh
//  $ pulumi import datadog:index/logsIndex:LogsIndex name> <indexName>
// ```
type LogsIndex struct {
	pulumi.CustomResourceState

	// List of exclusion filters.
	ExclusionFilters LogsIndexExclusionFilterArrayOutput `pulumi:"exclusionFilters"`
	// Logs filter
	Filters LogsIndexFilterArrayOutput `pulumi:"filters"`
	// The name of the index.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewLogsIndex registers a new resource with the given unique name, arguments, and options.
func NewLogsIndex(ctx *pulumi.Context,
	name string, args *LogsIndexArgs, opts ...pulumi.ResourceOption) (*LogsIndex, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Filters == nil {
		return nil, errors.New("invalid value for required argument 'Filters'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	var resource LogsIndex
	err := ctx.RegisterResource("datadog:index/logsIndex:LogsIndex", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogsIndex gets an existing LogsIndex resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogsIndex(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogsIndexState, opts ...pulumi.ResourceOption) (*LogsIndex, error) {
	var resource LogsIndex
	err := ctx.ReadResource("datadog:index/logsIndex:LogsIndex", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogsIndex resources.
type logsIndexState struct {
	// List of exclusion filters.
	ExclusionFilters []LogsIndexExclusionFilter `pulumi:"exclusionFilters"`
	// Logs filter
	Filters []LogsIndexFilter `pulumi:"filters"`
	// The name of the index.
	Name *string `pulumi:"name"`
}

type LogsIndexState struct {
	// List of exclusion filters.
	ExclusionFilters LogsIndexExclusionFilterArrayInput
	// Logs filter
	Filters LogsIndexFilterArrayInput
	// The name of the index.
	Name pulumi.StringPtrInput
}

func (LogsIndexState) ElementType() reflect.Type {
	return reflect.TypeOf((*logsIndexState)(nil)).Elem()
}

type logsIndexArgs struct {
	// List of exclusion filters.
	ExclusionFilters []LogsIndexExclusionFilter `pulumi:"exclusionFilters"`
	// Logs filter
	Filters []LogsIndexFilter `pulumi:"filters"`
	// The name of the index.
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a LogsIndex resource.
type LogsIndexArgs struct {
	// List of exclusion filters.
	ExclusionFilters LogsIndexExclusionFilterArrayInput
	// Logs filter
	Filters LogsIndexFilterArrayInput
	// The name of the index.
	Name pulumi.StringInput
}

func (LogsIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logsIndexArgs)(nil)).Elem()
}

type LogsIndexInput interface {
	pulumi.Input

	ToLogsIndexOutput() LogsIndexOutput
	ToLogsIndexOutputWithContext(ctx context.Context) LogsIndexOutput
}

func (*LogsIndex) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsIndex)(nil))
}

func (i *LogsIndex) ToLogsIndexOutput() LogsIndexOutput {
	return i.ToLogsIndexOutputWithContext(context.Background())
}

func (i *LogsIndex) ToLogsIndexOutputWithContext(ctx context.Context) LogsIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsIndexOutput)
}

func (i *LogsIndex) ToLogsIndexPtrOutput() LogsIndexPtrOutput {
	return i.ToLogsIndexPtrOutputWithContext(context.Background())
}

func (i *LogsIndex) ToLogsIndexPtrOutputWithContext(ctx context.Context) LogsIndexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsIndexPtrOutput)
}

type LogsIndexPtrInput interface {
	pulumi.Input

	ToLogsIndexPtrOutput() LogsIndexPtrOutput
	ToLogsIndexPtrOutputWithContext(ctx context.Context) LogsIndexPtrOutput
}

type logsIndexPtrType LogsIndexArgs

func (*logsIndexPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsIndex)(nil))
}

func (i *logsIndexPtrType) ToLogsIndexPtrOutput() LogsIndexPtrOutput {
	return i.ToLogsIndexPtrOutputWithContext(context.Background())
}

func (i *logsIndexPtrType) ToLogsIndexPtrOutputWithContext(ctx context.Context) LogsIndexPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsIndexPtrOutput)
}

// LogsIndexArrayInput is an input type that accepts LogsIndexArray and LogsIndexArrayOutput values.
// You can construct a concrete instance of `LogsIndexArrayInput` via:
//
//          LogsIndexArray{ LogsIndexArgs{...} }
type LogsIndexArrayInput interface {
	pulumi.Input

	ToLogsIndexArrayOutput() LogsIndexArrayOutput
	ToLogsIndexArrayOutputWithContext(context.Context) LogsIndexArrayOutput
}

type LogsIndexArray []LogsIndexInput

func (LogsIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*LogsIndex)(nil))
}

func (i LogsIndexArray) ToLogsIndexArrayOutput() LogsIndexArrayOutput {
	return i.ToLogsIndexArrayOutputWithContext(context.Background())
}

func (i LogsIndexArray) ToLogsIndexArrayOutputWithContext(ctx context.Context) LogsIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsIndexArrayOutput)
}

// LogsIndexMapInput is an input type that accepts LogsIndexMap and LogsIndexMapOutput values.
// You can construct a concrete instance of `LogsIndexMapInput` via:
//
//          LogsIndexMap{ "key": LogsIndexArgs{...} }
type LogsIndexMapInput interface {
	pulumi.Input

	ToLogsIndexMapOutput() LogsIndexMapOutput
	ToLogsIndexMapOutputWithContext(context.Context) LogsIndexMapOutput
}

type LogsIndexMap map[string]LogsIndexInput

func (LogsIndexMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*LogsIndex)(nil))
}

func (i LogsIndexMap) ToLogsIndexMapOutput() LogsIndexMapOutput {
	return i.ToLogsIndexMapOutputWithContext(context.Background())
}

func (i LogsIndexMap) ToLogsIndexMapOutputWithContext(ctx context.Context) LogsIndexMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsIndexMapOutput)
}

type LogsIndexOutput struct {
	*pulumi.OutputState
}

func (LogsIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogsIndex)(nil))
}

func (o LogsIndexOutput) ToLogsIndexOutput() LogsIndexOutput {
	return o
}

func (o LogsIndexOutput) ToLogsIndexOutputWithContext(ctx context.Context) LogsIndexOutput {
	return o
}

func (o LogsIndexOutput) ToLogsIndexPtrOutput() LogsIndexPtrOutput {
	return o.ToLogsIndexPtrOutputWithContext(context.Background())
}

func (o LogsIndexOutput) ToLogsIndexPtrOutputWithContext(ctx context.Context) LogsIndexPtrOutput {
	return o.ApplyT(func(v LogsIndex) *LogsIndex {
		return &v
	}).(LogsIndexPtrOutput)
}

type LogsIndexPtrOutput struct {
	*pulumi.OutputState
}

func (LogsIndexPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsIndex)(nil))
}

func (o LogsIndexPtrOutput) ToLogsIndexPtrOutput() LogsIndexPtrOutput {
	return o
}

func (o LogsIndexPtrOutput) ToLogsIndexPtrOutputWithContext(ctx context.Context) LogsIndexPtrOutput {
	return o
}

type LogsIndexArrayOutput struct{ *pulumi.OutputState }

func (LogsIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogsIndex)(nil))
}

func (o LogsIndexArrayOutput) ToLogsIndexArrayOutput() LogsIndexArrayOutput {
	return o
}

func (o LogsIndexArrayOutput) ToLogsIndexArrayOutputWithContext(ctx context.Context) LogsIndexArrayOutput {
	return o
}

func (o LogsIndexArrayOutput) Index(i pulumi.IntInput) LogsIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogsIndex {
		return vs[0].([]LogsIndex)[vs[1].(int)]
	}).(LogsIndexOutput)
}

type LogsIndexMapOutput struct{ *pulumi.OutputState }

func (LogsIndexMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LogsIndex)(nil))
}

func (o LogsIndexMapOutput) ToLogsIndexMapOutput() LogsIndexMapOutput {
	return o
}

func (o LogsIndexMapOutput) ToLogsIndexMapOutputWithContext(ctx context.Context) LogsIndexMapOutput {
	return o
}

func (o LogsIndexMapOutput) MapIndex(k pulumi.StringInput) LogsIndexOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LogsIndex {
		return vs[0].(map[string]LogsIndex)[vs[1].(string)]
	}).(LogsIndexOutput)
}

func init() {
	pulumi.RegisterOutputType(LogsIndexOutput{})
	pulumi.RegisterOutputType(LogsIndexPtrOutput{})
	pulumi.RegisterOutputType(LogsIndexArrayOutput{})
	pulumi.RegisterOutputType(LogsIndexMapOutput{})
}
