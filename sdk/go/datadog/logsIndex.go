// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Datadog [Logs Index API](https://docs.datadoghq.com/api/v1/logs-indexes/) resource. This can be used to create and manage Datadog logs indexes.
//
// ## Example Usage
//
// A sample Datadog logs index resource definition. Note that at this point, it is not possible to create new logs indexes
// through this provider, so the `name` field must match a name of an already existing index. If you want to keep the current
// state of the index, we suggest importing it (see below).
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := datadog.NewLogsIndex(ctx, "sampleIndex", &datadog.LogsIndexArgs{
// 			ExclusionFilters: datadog.LogsIndexExclusionFilterArray{
// 				&datadog.LogsIndexExclusionFilterArgs{
// 					Filters: datadog.LogsIndexExclusionFilterFilterArray{
// 						&datadog.LogsIndexExclusionFilterFilterArgs{
// 							Query:      pulumi.String("app:coredns"),
// 							SampleRate: pulumi.Float64(0.97),
// 						},
// 					},
// 					IsEnabled: pulumi.Bool(true),
// 					Name:      pulumi.String("Filter coredns logs"),
// 				},
// 				&datadog.LogsIndexExclusionFilterArgs{
// 					Filters: datadog.LogsIndexExclusionFilterFilterArray{
// 						&datadog.LogsIndexExclusionFilterFilterArgs{
// 							Query:      pulumi.String("service:kube_apiserver"),
// 							SampleRate: pulumi.Float64(1),
// 						},
// 					},
// 					IsEnabled: pulumi.Bool(true),
// 					Name:      pulumi.String("Kubernetes apiserver"),
// 				},
// 			},
// 			Filters: datadog.LogsIndexFilterArray{
// 				&datadog.LogsIndexFilterArgs{
// 					Query: pulumi.String("*"),
// 				},
// 			},
// 			Name: pulumi.String("your index"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Important Notes
//
// The order of indexes is maintained in the separated resource datadog_logs_index_order.
type LogsIndex struct {
	pulumi.CustomResourceState

	// List of exclusion filters.
	ExclusionFilters LogsIndexExclusionFilterArrayOutput `pulumi:"exclusionFilters"`
	Filters          LogsIndexFilterArrayOutput          `pulumi:"filters"`
	// The name of the exclusion filter.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewLogsIndex registers a new resource with the given unique name, arguments, and options.
func NewLogsIndex(ctx *pulumi.Context,
	name string, args *LogsIndexArgs, opts ...pulumi.ResourceOption) (*LogsIndex, error) {
	if args == nil || args.Filters == nil {
		return nil, errors.New("missing required argument 'Filters'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil {
		args = &LogsIndexArgs{}
	}
	var resource LogsIndex
	err := ctx.RegisterResource("datadog:index/logsIndex:LogsIndex", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogsIndex gets an existing LogsIndex resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogsIndex(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogsIndexState, opts ...pulumi.ResourceOption) (*LogsIndex, error) {
	var resource LogsIndex
	err := ctx.ReadResource("datadog:index/logsIndex:LogsIndex", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogsIndex resources.
type logsIndexState struct {
	// List of exclusion filters.
	ExclusionFilters []LogsIndexExclusionFilter `pulumi:"exclusionFilters"`
	Filters          []LogsIndexFilter          `pulumi:"filters"`
	// The name of the exclusion filter.
	Name *string `pulumi:"name"`
}

type LogsIndexState struct {
	// List of exclusion filters.
	ExclusionFilters LogsIndexExclusionFilterArrayInput
	Filters          LogsIndexFilterArrayInput
	// The name of the exclusion filter.
	Name pulumi.StringPtrInput
}

func (LogsIndexState) ElementType() reflect.Type {
	return reflect.TypeOf((*logsIndexState)(nil)).Elem()
}

type logsIndexArgs struct {
	// List of exclusion filters.
	ExclusionFilters []LogsIndexExclusionFilter `pulumi:"exclusionFilters"`
	Filters          []LogsIndexFilter          `pulumi:"filters"`
	// The name of the exclusion filter.
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a LogsIndex resource.
type LogsIndexArgs struct {
	// List of exclusion filters.
	ExclusionFilters LogsIndexExclusionFilterArrayInput
	Filters          LogsIndexFilterArrayInput
	// The name of the exclusion filter.
	Name pulumi.StringInput
}

func (LogsIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logsIndexArgs)(nil)).Elem()
}
