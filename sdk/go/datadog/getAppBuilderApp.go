// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source retrieves the definition of an existing Datadog App from App Builder for use in other resources, such as embedding Apps in Dashboards.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.LookupAppBuilderApp(ctx, &datadog.LookupAppBuilderAppArgs{
//				Id: "11111111-2222-3333-4444-555555555555",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAppBuilderApp(ctx *pulumi.Context, args *LookupAppBuilderAppArgs, opts ...pulumi.InvokeOption) (*LookupAppBuilderAppResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAppBuilderAppResult
	err := ctx.Invoke("datadog:index/getAppBuilderApp:getAppBuilderApp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppBuilderApp.
type LookupAppBuilderAppArgs struct {
	// ID for the App.
	Id string `pulumi:"id"`
}

// A collection of values returned by getAppBuilderApp.
type LookupAppBuilderAppResult struct {
	// A map of the App's Action Query Names to Action Connection IDs.
	ActionQueryNamesToConnectionIds map[string]string `pulumi:"actionQueryNamesToConnectionIds"`
	// The JSON representation of the App.
	AppJson string `pulumi:"appJson"`
	// The human-readable description of the App.
	Description string `pulumi:"description"`
	// ID for the App.
	Id string `pulumi:"id"`
	// The name of the App.
	Name string `pulumi:"name"`
	// Whether the app is published or unpublished. Published apps are available to other users. To ensure the app is accessible to the correct users, you also need to set a [Restriction Policy](https://docs.datadoghq.com/api/latest/restriction-policies/) on the app if a policy does not yet exist.
	Published bool `pulumi:"published"`
	// The name of the root component of the app. This is a grid component that contains all other components.
	RootInstanceName string `pulumi:"rootInstanceName"`
}

func LookupAppBuilderAppOutput(ctx *pulumi.Context, args LookupAppBuilderAppOutputArgs, opts ...pulumi.InvokeOption) LookupAppBuilderAppResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAppBuilderAppResultOutput, error) {
			args := v.(LookupAppBuilderAppArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("datadog:index/getAppBuilderApp:getAppBuilderApp", args, LookupAppBuilderAppResultOutput{}, options).(LookupAppBuilderAppResultOutput), nil
		}).(LookupAppBuilderAppResultOutput)
}

// A collection of arguments for invoking getAppBuilderApp.
type LookupAppBuilderAppOutputArgs struct {
	// ID for the App.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupAppBuilderAppOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppBuilderAppArgs)(nil)).Elem()
}

// A collection of values returned by getAppBuilderApp.
type LookupAppBuilderAppResultOutput struct{ *pulumi.OutputState }

func (LookupAppBuilderAppResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppBuilderAppResult)(nil)).Elem()
}

func (o LookupAppBuilderAppResultOutput) ToLookupAppBuilderAppResultOutput() LookupAppBuilderAppResultOutput {
	return o
}

func (o LookupAppBuilderAppResultOutput) ToLookupAppBuilderAppResultOutputWithContext(ctx context.Context) LookupAppBuilderAppResultOutput {
	return o
}

// A map of the App's Action Query Names to Action Connection IDs.
func (o LookupAppBuilderAppResultOutput) ActionQueryNamesToConnectionIds() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAppBuilderAppResult) map[string]string { return v.ActionQueryNamesToConnectionIds }).(pulumi.StringMapOutput)
}

// The JSON representation of the App.
func (o LookupAppBuilderAppResultOutput) AppJson() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppBuilderAppResult) string { return v.AppJson }).(pulumi.StringOutput)
}

// The human-readable description of the App.
func (o LookupAppBuilderAppResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppBuilderAppResult) string { return v.Description }).(pulumi.StringOutput)
}

// ID for the App.
func (o LookupAppBuilderAppResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppBuilderAppResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the App.
func (o LookupAppBuilderAppResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppBuilderAppResult) string { return v.Name }).(pulumi.StringOutput)
}

// Whether the app is published or unpublished. Published apps are available to other users. To ensure the app is accessible to the correct users, you also need to set a [Restriction Policy](https://docs.datadoghq.com/api/latest/restriction-policies/) on the app if a policy does not yet exist.
func (o LookupAppBuilderAppResultOutput) Published() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAppBuilderAppResult) bool { return v.Published }).(pulumi.BoolOutput)
}

// The name of the root component of the app. This is a grid component that contains all other components.
func (o LookupAppBuilderAppResultOutput) RootInstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAppBuilderAppResult) string { return v.RootInstanceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppBuilderAppResultOutput{})
}
