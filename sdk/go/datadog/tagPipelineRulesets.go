// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog Tag Pipeline Ruleset Order resource that can be used to manage the order of Tag Pipeline Rulesets.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create new tag_pipeline_ruleset_order resource
//			_, err := datadog.NewTagPipelineRulesets(ctx, "my_rulesets", &datadog.TagPipelineRulesetsArgs{
//				RulesetIds: pulumi.StringArray{
//					pulumi.String("ruleset-id-1"),
//					pulumi.String("ruleset-id-2"),
//					pulumi.String("ruleset-id-3"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import datadog:index/tagPipelineRulesets:TagPipelineRulesets my_rulesets order
// ```
type TagPipelineRulesets struct {
	pulumi.CustomResourceState

	// The list of Tag Pipeline Ruleset IDs, in order. Rulesets are executed in the order specified in this list.
	RulesetIds pulumi.StringArrayOutput `pulumi:"rulesetIds"`
}

// NewTagPipelineRulesets registers a new resource with the given unique name, arguments, and options.
func NewTagPipelineRulesets(ctx *pulumi.Context,
	name string, args *TagPipelineRulesetsArgs, opts ...pulumi.ResourceOption) (*TagPipelineRulesets, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RulesetIds == nil {
		return nil, errors.New("invalid value for required argument 'RulesetIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TagPipelineRulesets
	err := ctx.RegisterResource("datadog:index/tagPipelineRulesets:TagPipelineRulesets", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagPipelineRulesets gets an existing TagPipelineRulesets resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagPipelineRulesets(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagPipelineRulesetsState, opts ...pulumi.ResourceOption) (*TagPipelineRulesets, error) {
	var resource TagPipelineRulesets
	err := ctx.ReadResource("datadog:index/tagPipelineRulesets:TagPipelineRulesets", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagPipelineRulesets resources.
type tagPipelineRulesetsState struct {
	// The list of Tag Pipeline Ruleset IDs, in order. Rulesets are executed in the order specified in this list.
	RulesetIds []string `pulumi:"rulesetIds"`
}

type TagPipelineRulesetsState struct {
	// The list of Tag Pipeline Ruleset IDs, in order. Rulesets are executed in the order specified in this list.
	RulesetIds pulumi.StringArrayInput
}

func (TagPipelineRulesetsState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagPipelineRulesetsState)(nil)).Elem()
}

type tagPipelineRulesetsArgs struct {
	// The list of Tag Pipeline Ruleset IDs, in order. Rulesets are executed in the order specified in this list.
	RulesetIds []string `pulumi:"rulesetIds"`
}

// The set of arguments for constructing a TagPipelineRulesets resource.
type TagPipelineRulesetsArgs struct {
	// The list of Tag Pipeline Ruleset IDs, in order. Rulesets are executed in the order specified in this list.
	RulesetIds pulumi.StringArrayInput
}

func (TagPipelineRulesetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagPipelineRulesetsArgs)(nil)).Elem()
}

type TagPipelineRulesetsInput interface {
	pulumi.Input

	ToTagPipelineRulesetsOutput() TagPipelineRulesetsOutput
	ToTagPipelineRulesetsOutputWithContext(ctx context.Context) TagPipelineRulesetsOutput
}

func (*TagPipelineRulesets) ElementType() reflect.Type {
	return reflect.TypeOf((**TagPipelineRulesets)(nil)).Elem()
}

func (i *TagPipelineRulesets) ToTagPipelineRulesetsOutput() TagPipelineRulesetsOutput {
	return i.ToTagPipelineRulesetsOutputWithContext(context.Background())
}

func (i *TagPipelineRulesets) ToTagPipelineRulesetsOutputWithContext(ctx context.Context) TagPipelineRulesetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPipelineRulesetsOutput)
}

// TagPipelineRulesetsArrayInput is an input type that accepts TagPipelineRulesetsArray and TagPipelineRulesetsArrayOutput values.
// You can construct a concrete instance of `TagPipelineRulesetsArrayInput` via:
//
//	TagPipelineRulesetsArray{ TagPipelineRulesetsArgs{...} }
type TagPipelineRulesetsArrayInput interface {
	pulumi.Input

	ToTagPipelineRulesetsArrayOutput() TagPipelineRulesetsArrayOutput
	ToTagPipelineRulesetsArrayOutputWithContext(context.Context) TagPipelineRulesetsArrayOutput
}

type TagPipelineRulesetsArray []TagPipelineRulesetsInput

func (TagPipelineRulesetsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TagPipelineRulesets)(nil)).Elem()
}

func (i TagPipelineRulesetsArray) ToTagPipelineRulesetsArrayOutput() TagPipelineRulesetsArrayOutput {
	return i.ToTagPipelineRulesetsArrayOutputWithContext(context.Background())
}

func (i TagPipelineRulesetsArray) ToTagPipelineRulesetsArrayOutputWithContext(ctx context.Context) TagPipelineRulesetsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPipelineRulesetsArrayOutput)
}

// TagPipelineRulesetsMapInput is an input type that accepts TagPipelineRulesetsMap and TagPipelineRulesetsMapOutput values.
// You can construct a concrete instance of `TagPipelineRulesetsMapInput` via:
//
//	TagPipelineRulesetsMap{ "key": TagPipelineRulesetsArgs{...} }
type TagPipelineRulesetsMapInput interface {
	pulumi.Input

	ToTagPipelineRulesetsMapOutput() TagPipelineRulesetsMapOutput
	ToTagPipelineRulesetsMapOutputWithContext(context.Context) TagPipelineRulesetsMapOutput
}

type TagPipelineRulesetsMap map[string]TagPipelineRulesetsInput

func (TagPipelineRulesetsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TagPipelineRulesets)(nil)).Elem()
}

func (i TagPipelineRulesetsMap) ToTagPipelineRulesetsMapOutput() TagPipelineRulesetsMapOutput {
	return i.ToTagPipelineRulesetsMapOutputWithContext(context.Background())
}

func (i TagPipelineRulesetsMap) ToTagPipelineRulesetsMapOutputWithContext(ctx context.Context) TagPipelineRulesetsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagPipelineRulesetsMapOutput)
}

type TagPipelineRulesetsOutput struct{ *pulumi.OutputState }

func (TagPipelineRulesetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagPipelineRulesets)(nil)).Elem()
}

func (o TagPipelineRulesetsOutput) ToTagPipelineRulesetsOutput() TagPipelineRulesetsOutput {
	return o
}

func (o TagPipelineRulesetsOutput) ToTagPipelineRulesetsOutputWithContext(ctx context.Context) TagPipelineRulesetsOutput {
	return o
}

// The list of Tag Pipeline Ruleset IDs, in order. Rulesets are executed in the order specified in this list.
func (o TagPipelineRulesetsOutput) RulesetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TagPipelineRulesets) pulumi.StringArrayOutput { return v.RulesetIds }).(pulumi.StringArrayOutput)
}

type TagPipelineRulesetsArrayOutput struct{ *pulumi.OutputState }

func (TagPipelineRulesetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TagPipelineRulesets)(nil)).Elem()
}

func (o TagPipelineRulesetsArrayOutput) ToTagPipelineRulesetsArrayOutput() TagPipelineRulesetsArrayOutput {
	return o
}

func (o TagPipelineRulesetsArrayOutput) ToTagPipelineRulesetsArrayOutputWithContext(ctx context.Context) TagPipelineRulesetsArrayOutput {
	return o
}

func (o TagPipelineRulesetsArrayOutput) Index(i pulumi.IntInput) TagPipelineRulesetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TagPipelineRulesets {
		return vs[0].([]*TagPipelineRulesets)[vs[1].(int)]
	}).(TagPipelineRulesetsOutput)
}

type TagPipelineRulesetsMapOutput struct{ *pulumi.OutputState }

func (TagPipelineRulesetsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TagPipelineRulesets)(nil)).Elem()
}

func (o TagPipelineRulesetsMapOutput) ToTagPipelineRulesetsMapOutput() TagPipelineRulesetsMapOutput {
	return o
}

func (o TagPipelineRulesetsMapOutput) ToTagPipelineRulesetsMapOutputWithContext(ctx context.Context) TagPipelineRulesetsMapOutput {
	return o
}

func (o TagPipelineRulesetsMapOutput) MapIndex(k pulumi.StringInput) TagPipelineRulesetsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TagPipelineRulesets {
		return vs[0].(map[string]*TagPipelineRulesets)[vs[1].(string)]
	}).(TagPipelineRulesetsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagPipelineRulesetsInput)(nil)).Elem(), &TagPipelineRulesets{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagPipelineRulesetsArrayInput)(nil)).Elem(), TagPipelineRulesetsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TagPipelineRulesetsMapInput)(nil)).Elem(), TagPipelineRulesetsMap{})
	pulumi.RegisterOutputType(TagPipelineRulesetsOutput{})
	pulumi.RegisterOutputType(TagPipelineRulesetsArrayOutput{})
	pulumi.RegisterOutputType(TagPipelineRulesetsMapOutput{})
}
