// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "datadog:index/dashboard:Dashboard":
		r = &Dashboard{}
	case "datadog:index/dashboardList:DashboardList":
		r = &DashboardList{}
	case "datadog:index/downtime:Downtime":
		r = &Downtime{}
	case "datadog:index/logsArchive:LogsArchive":
		r = &LogsArchive{}
	case "datadog:index/logsArchiveOrder:LogsArchiveOrder":
		r = &LogsArchiveOrder{}
	case "datadog:index/logsCustomPipeline:LogsCustomPipeline":
		r = &LogsCustomPipeline{}
	case "datadog:index/logsIndex:LogsIndex":
		r = &LogsIndex{}
	case "datadog:index/logsIndexOrder:LogsIndexOrder":
		r = &LogsIndexOrder{}
	case "datadog:index/logsIntegrationPipeline:LogsIntegrationPipeline":
		r = &LogsIntegrationPipeline{}
	case "datadog:index/logsMetric:LogsMetric":
		r = &LogsMetric{}
	case "datadog:index/logsPipelineOrder:LogsPipelineOrder":
		r = &LogsPipelineOrder{}
	case "datadog:index/metricMetadata:MetricMetadata":
		r = &MetricMetadata{}
	case "datadog:index/monitor:Monitor":
		r = &Monitor{}
	case "datadog:index/role:Role":
		r = &Role{}
	case "datadog:index/screenBoard:ScreenBoard":
		r = &ScreenBoard{}
	case "datadog:index/securityMonitoringRule:SecurityMonitoringRule":
		r = &SecurityMonitoringRule{}
	case "datadog:index/serviceLevelObjective:ServiceLevelObjective":
		r = &ServiceLevelObjective{}
	case "datadog:index/syntheticsGlobalVariable:SyntheticsGlobalVariable":
		r = &SyntheticsGlobalVariable{}
	case "datadog:index/syntheticsPrivateLocation:SyntheticsPrivateLocation":
		r = &SyntheticsPrivateLocation{}
	case "datadog:index/syntheticsTest:SyntheticsTest":
		r = &SyntheticsTest{}
	case "datadog:index/timeBoard:TimeBoard":
		r = &TimeBoard{}
	case "datadog:index/user:User":
		r = &User{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:datadog" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"datadog",
		"index/dashboard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/dashboardList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/downtime",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/logsArchive",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/logsArchiveOrder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/logsCustomPipeline",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/logsIndex",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/logsIndexOrder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/logsIntegrationPipeline",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/logsMetric",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/logsPipelineOrder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/metricMetadata",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/monitor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/screenBoard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/securityMonitoringRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/serviceLevelObjective",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/syntheticsGlobalVariable",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/syntheticsPrivateLocation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/syntheticsTest",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/timeBoard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"datadog",
		"index/user",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"datadog",
		&pkg{version},
	)
}
