// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to retrieve information about existing security monitoring rules for use in other resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.GetSecurityMonitoringRules(ctx, &datadog.GetSecurityMonitoringRulesArgs{
//				DefaultOnlyFilter: pulumi.BoolRef(true),
//				NameFilter:        pulumi.StringRef("attack"),
//				TagsFilters: []string{
//					"foo:bar",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSecurityMonitoringRules(ctx *pulumi.Context, args *GetSecurityMonitoringRulesArgs, opts ...pulumi.InvokeOption) (*GetSecurityMonitoringRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityMonitoringRulesResult
	err := ctx.Invoke("datadog:index/getSecurityMonitoringRules:getSecurityMonitoringRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityMonitoringRules.
type GetSecurityMonitoringRulesArgs struct {
	// Limit the search to default rules
	DefaultOnlyFilter *bool `pulumi:"defaultOnlyFilter"`
	// A rule name to limit the search
	NameFilter *string `pulumi:"nameFilter"`
	// A list of tags to limit the search
	TagsFilters []string `pulumi:"tagsFilters"`
	// Limit the search to user rules
	UserOnlyFilter *bool `pulumi:"userOnlyFilter"`
}

// A collection of values returned by getSecurityMonitoringRules.
type GetSecurityMonitoringRulesResult struct {
	// Limit the search to default rules
	DefaultOnlyFilter *bool `pulumi:"defaultOnlyFilter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A rule name to limit the search
	NameFilter *string `pulumi:"nameFilter"`
	// List of IDs of the matched rules.
	RuleIds []string `pulumi:"ruleIds"`
	// List of rules.
	Rules []GetSecurityMonitoringRulesRule `pulumi:"rules"`
	// A list of tags to limit the search
	TagsFilters []string `pulumi:"tagsFilters"`
	// Limit the search to user rules
	UserOnlyFilter *bool `pulumi:"userOnlyFilter"`
}

func GetSecurityMonitoringRulesOutput(ctx *pulumi.Context, args GetSecurityMonitoringRulesOutputArgs, opts ...pulumi.InvokeOption) GetSecurityMonitoringRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecurityMonitoringRulesResult, error) {
			args := v.(GetSecurityMonitoringRulesArgs)
			r, err := GetSecurityMonitoringRules(ctx, &args, opts...)
			var s GetSecurityMonitoringRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecurityMonitoringRulesResultOutput)
}

// A collection of arguments for invoking getSecurityMonitoringRules.
type GetSecurityMonitoringRulesOutputArgs struct {
	// Limit the search to default rules
	DefaultOnlyFilter pulumi.BoolPtrInput `pulumi:"defaultOnlyFilter"`
	// A rule name to limit the search
	NameFilter pulumi.StringPtrInput `pulumi:"nameFilter"`
	// A list of tags to limit the search
	TagsFilters pulumi.StringArrayInput `pulumi:"tagsFilters"`
	// Limit the search to user rules
	UserOnlyFilter pulumi.BoolPtrInput `pulumi:"userOnlyFilter"`
}

func (GetSecurityMonitoringRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityMonitoringRules.
type GetSecurityMonitoringRulesResultOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesResult)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesResultOutput) ToGetSecurityMonitoringRulesResultOutput() GetSecurityMonitoringRulesResultOutput {
	return o
}

func (o GetSecurityMonitoringRulesResultOutput) ToGetSecurityMonitoringRulesResultOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesResultOutput {
	return o
}

func (o GetSecurityMonitoringRulesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSecurityMonitoringRulesResult] {
	return pulumix.Output[GetSecurityMonitoringRulesResult]{
		OutputState: o.OutputState,
	}
}

// Limit the search to default rules
func (o GetSecurityMonitoringRulesResultOutput) DefaultOnlyFilter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesResult) *bool { return v.DefaultOnlyFilter }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecurityMonitoringRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// A rule name to limit the search
func (o GetSecurityMonitoringRulesResultOutput) NameFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesResult) *string { return v.NameFilter }).(pulumi.StringPtrOutput)
}

// List of IDs of the matched rules.
func (o GetSecurityMonitoringRulesResultOutput) RuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesResult) []string { return v.RuleIds }).(pulumi.StringArrayOutput)
}

// List of rules.
func (o GetSecurityMonitoringRulesResultOutput) Rules() GetSecurityMonitoringRulesRuleArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesResult) []GetSecurityMonitoringRulesRule { return v.Rules }).(GetSecurityMonitoringRulesRuleArrayOutput)
}

// A list of tags to limit the search
func (o GetSecurityMonitoringRulesResultOutput) TagsFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesResult) []string { return v.TagsFilters }).(pulumi.StringArrayOutput)
}

// Limit the search to user rules
func (o GetSecurityMonitoringRulesResultOutput) UserOnlyFilter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesResult) *bool { return v.UserOnlyFilter }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesResultOutput{})
}
