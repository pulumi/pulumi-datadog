// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about existing security monitoring rules for use in other resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-datadog/sdk/v3/go/datadog"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := true
// 		opt1 := "attack"
// 		_, err := datadog.GetSecurityMonitoringRules(ctx, &datadog.GetSecurityMonitoringRulesArgs{
// 			DefaultOnlyFilter: &opt0,
// 			NameFilter:        &opt1,
// 			TagsFilters: []string{
// 				"foo:bar",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetSecurityMonitoringRules(ctx *pulumi.Context, args *GetSecurityMonitoringRulesArgs, opts ...pulumi.InvokeOption) (*GetSecurityMonitoringRulesResult, error) {
	var rv GetSecurityMonitoringRulesResult
	err := ctx.Invoke("datadog:index/getSecurityMonitoringRules:getSecurityMonitoringRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityMonitoringRules.
type GetSecurityMonitoringRulesArgs struct {
	DefaultOnlyFilter *bool `pulumi:"defaultOnlyFilter"`
	// A rule name to limit the search
	NameFilter *string `pulumi:"nameFilter"`
	// A list of tags to limit the search
	TagsFilters    []string `pulumi:"tagsFilters"`
	UserOnlyFilter *bool    `pulumi:"userOnlyFilter"`
}

// A collection of values returned by getSecurityMonitoringRules.
type GetSecurityMonitoringRulesResult struct {
	DefaultOnlyFilter *bool `pulumi:"defaultOnlyFilter"`
	// The provider-assigned unique ID for this managed resource.
	Id             string                           `pulumi:"id"`
	NameFilter     *string                          `pulumi:"nameFilter"`
	RuleIds        []string                         `pulumi:"ruleIds"`
	Rules          []GetSecurityMonitoringRulesRule `pulumi:"rules"`
	TagsFilters    []string                         `pulumi:"tagsFilters"`
	UserOnlyFilter *bool                            `pulumi:"userOnlyFilter"`
}
