// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog Custom Allocation Rule Order API resource. This can be used to manage the order of Datadog Custom Allocation Rules.
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import datadog:index/customAllocationRules:CustomAllocationRules order order
// ```
type CustomAllocationRules struct {
	pulumi.CustomResourceState

	// The list of Custom Allocation Rule IDs, in order. Rules are executed in the order specified in this list. Comes from the `id` field on a `CustomAllocationRule` resource.
	RuleIds pulumi.StringArrayOutput `pulumi:"ruleIds"`
}

// NewCustomAllocationRules registers a new resource with the given unique name, arguments, and options.
func NewCustomAllocationRules(ctx *pulumi.Context,
	name string, args *CustomAllocationRulesArgs, opts ...pulumi.ResourceOption) (*CustomAllocationRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RuleIds == nil {
		return nil, errors.New("invalid value for required argument 'RuleIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomAllocationRules
	err := ctx.RegisterResource("datadog:index/customAllocationRules:CustomAllocationRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomAllocationRules gets an existing CustomAllocationRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomAllocationRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomAllocationRulesState, opts ...pulumi.ResourceOption) (*CustomAllocationRules, error) {
	var resource CustomAllocationRules
	err := ctx.ReadResource("datadog:index/customAllocationRules:CustomAllocationRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomAllocationRules resources.
type customAllocationRulesState struct {
	// The list of Custom Allocation Rule IDs, in order. Rules are executed in the order specified in this list. Comes from the `id` field on a `CustomAllocationRule` resource.
	RuleIds []string `pulumi:"ruleIds"`
}

type CustomAllocationRulesState struct {
	// The list of Custom Allocation Rule IDs, in order. Rules are executed in the order specified in this list. Comes from the `id` field on a `CustomAllocationRule` resource.
	RuleIds pulumi.StringArrayInput
}

func (CustomAllocationRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*customAllocationRulesState)(nil)).Elem()
}

type customAllocationRulesArgs struct {
	// The list of Custom Allocation Rule IDs, in order. Rules are executed in the order specified in this list. Comes from the `id` field on a `CustomAllocationRule` resource.
	RuleIds []string `pulumi:"ruleIds"`
}

// The set of arguments for constructing a CustomAllocationRules resource.
type CustomAllocationRulesArgs struct {
	// The list of Custom Allocation Rule IDs, in order. Rules are executed in the order specified in this list. Comes from the `id` field on a `CustomAllocationRule` resource.
	RuleIds pulumi.StringArrayInput
}

func (CustomAllocationRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customAllocationRulesArgs)(nil)).Elem()
}

type CustomAllocationRulesInput interface {
	pulumi.Input

	ToCustomAllocationRulesOutput() CustomAllocationRulesOutput
	ToCustomAllocationRulesOutputWithContext(ctx context.Context) CustomAllocationRulesOutput
}

func (*CustomAllocationRules) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAllocationRules)(nil)).Elem()
}

func (i *CustomAllocationRules) ToCustomAllocationRulesOutput() CustomAllocationRulesOutput {
	return i.ToCustomAllocationRulesOutputWithContext(context.Background())
}

func (i *CustomAllocationRules) ToCustomAllocationRulesOutputWithContext(ctx context.Context) CustomAllocationRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAllocationRulesOutput)
}

// CustomAllocationRulesArrayInput is an input type that accepts CustomAllocationRulesArray and CustomAllocationRulesArrayOutput values.
// You can construct a concrete instance of `CustomAllocationRulesArrayInput` via:
//
//	CustomAllocationRulesArray{ CustomAllocationRulesArgs{...} }
type CustomAllocationRulesArrayInput interface {
	pulumi.Input

	ToCustomAllocationRulesArrayOutput() CustomAllocationRulesArrayOutput
	ToCustomAllocationRulesArrayOutputWithContext(context.Context) CustomAllocationRulesArrayOutput
}

type CustomAllocationRulesArray []CustomAllocationRulesInput

func (CustomAllocationRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomAllocationRules)(nil)).Elem()
}

func (i CustomAllocationRulesArray) ToCustomAllocationRulesArrayOutput() CustomAllocationRulesArrayOutput {
	return i.ToCustomAllocationRulesArrayOutputWithContext(context.Background())
}

func (i CustomAllocationRulesArray) ToCustomAllocationRulesArrayOutputWithContext(ctx context.Context) CustomAllocationRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAllocationRulesArrayOutput)
}

// CustomAllocationRulesMapInput is an input type that accepts CustomAllocationRulesMap and CustomAllocationRulesMapOutput values.
// You can construct a concrete instance of `CustomAllocationRulesMapInput` via:
//
//	CustomAllocationRulesMap{ "key": CustomAllocationRulesArgs{...} }
type CustomAllocationRulesMapInput interface {
	pulumi.Input

	ToCustomAllocationRulesMapOutput() CustomAllocationRulesMapOutput
	ToCustomAllocationRulesMapOutputWithContext(context.Context) CustomAllocationRulesMapOutput
}

type CustomAllocationRulesMap map[string]CustomAllocationRulesInput

func (CustomAllocationRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomAllocationRules)(nil)).Elem()
}

func (i CustomAllocationRulesMap) ToCustomAllocationRulesMapOutput() CustomAllocationRulesMapOutput {
	return i.ToCustomAllocationRulesMapOutputWithContext(context.Background())
}

func (i CustomAllocationRulesMap) ToCustomAllocationRulesMapOutputWithContext(ctx context.Context) CustomAllocationRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAllocationRulesMapOutput)
}

type CustomAllocationRulesOutput struct{ *pulumi.OutputState }

func (CustomAllocationRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAllocationRules)(nil)).Elem()
}

func (o CustomAllocationRulesOutput) ToCustomAllocationRulesOutput() CustomAllocationRulesOutput {
	return o
}

func (o CustomAllocationRulesOutput) ToCustomAllocationRulesOutputWithContext(ctx context.Context) CustomAllocationRulesOutput {
	return o
}

// The list of Custom Allocation Rule IDs, in order. Rules are executed in the order specified in this list. Comes from the `id` field on a `CustomAllocationRule` resource.
func (o CustomAllocationRulesOutput) RuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomAllocationRules) pulumi.StringArrayOutput { return v.RuleIds }).(pulumi.StringArrayOutput)
}

type CustomAllocationRulesArrayOutput struct{ *pulumi.OutputState }

func (CustomAllocationRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomAllocationRules)(nil)).Elem()
}

func (o CustomAllocationRulesArrayOutput) ToCustomAllocationRulesArrayOutput() CustomAllocationRulesArrayOutput {
	return o
}

func (o CustomAllocationRulesArrayOutput) ToCustomAllocationRulesArrayOutputWithContext(ctx context.Context) CustomAllocationRulesArrayOutput {
	return o
}

func (o CustomAllocationRulesArrayOutput) Index(i pulumi.IntInput) CustomAllocationRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomAllocationRules {
		return vs[0].([]*CustomAllocationRules)[vs[1].(int)]
	}).(CustomAllocationRulesOutput)
}

type CustomAllocationRulesMapOutput struct{ *pulumi.OutputState }

func (CustomAllocationRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomAllocationRules)(nil)).Elem()
}

func (o CustomAllocationRulesMapOutput) ToCustomAllocationRulesMapOutput() CustomAllocationRulesMapOutput {
	return o
}

func (o CustomAllocationRulesMapOutput) ToCustomAllocationRulesMapOutputWithContext(ctx context.Context) CustomAllocationRulesMapOutput {
	return o
}

func (o CustomAllocationRulesMapOutput) MapIndex(k pulumi.StringInput) CustomAllocationRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomAllocationRules {
		return vs[0].(map[string]*CustomAllocationRules)[vs[1].(string)]
	}).(CustomAllocationRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAllocationRulesInput)(nil)).Elem(), &CustomAllocationRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAllocationRulesArrayInput)(nil)).Elem(), CustomAllocationRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAllocationRulesMapInput)(nil)).Elem(), CustomAllocationRulesMap{})
	pulumi.RegisterOutputType(CustomAllocationRulesOutput{})
	pulumi.RegisterOutputType(CustomAllocationRulesArrayOutput{})
	pulumi.RegisterOutputType(CustomAllocationRulesMapOutput{})
}
