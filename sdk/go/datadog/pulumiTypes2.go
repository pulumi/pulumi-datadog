// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type SyntheticsTestOptionsListMonitorOptions struct {
	// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
	RenotifyInterval *int `pulumi:"renotifyInterval"`
}

// SyntheticsTestOptionsListMonitorOptionsInput is an input type that accepts SyntheticsTestOptionsListMonitorOptionsArgs and SyntheticsTestOptionsListMonitorOptionsOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListMonitorOptionsInput` via:
//
//	SyntheticsTestOptionsListMonitorOptionsArgs{...}
type SyntheticsTestOptionsListMonitorOptionsInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListMonitorOptionsOutput() SyntheticsTestOptionsListMonitorOptionsOutput
	ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(context.Context) SyntheticsTestOptionsListMonitorOptionsOutput
}

type SyntheticsTestOptionsListMonitorOptionsArgs struct {
	// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
	RenotifyInterval pulumi.IntPtrInput `pulumi:"renotifyInterval"`
}

func (SyntheticsTestOptionsListMonitorOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsOutput() SyntheticsTestOptionsListMonitorOptionsOutput {
	return i.ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListMonitorOptionsOutput)
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return i.ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListMonitorOptionsOutput).ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListMonitorOptionsPtrInput is an input type that accepts SyntheticsTestOptionsListMonitorOptionsArgs, SyntheticsTestOptionsListMonitorOptionsPtr and SyntheticsTestOptionsListMonitorOptionsPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListMonitorOptionsPtrInput` via:
//
//	        SyntheticsTestOptionsListMonitorOptionsArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListMonitorOptionsPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput
	ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput
}

type syntheticsTestOptionsListMonitorOptionsPtrType SyntheticsTestOptionsListMonitorOptionsArgs

func SyntheticsTestOptionsListMonitorOptionsPtr(v *SyntheticsTestOptionsListMonitorOptionsArgs) SyntheticsTestOptionsListMonitorOptionsPtrInput {
	return (*syntheticsTestOptionsListMonitorOptionsPtrType)(v)
}

func (*syntheticsTestOptionsListMonitorOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (i *syntheticsTestOptionsListMonitorOptionsPtrType) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return i.ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListMonitorOptionsPtrType) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListMonitorOptionsPtrOutput)
}

type SyntheticsTestOptionsListMonitorOptionsOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListMonitorOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsOutput() SyntheticsTestOptionsListMonitorOptionsOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o.ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListMonitorOptions) *SyntheticsTestOptionsListMonitorOptions {
		return &v
	}).(SyntheticsTestOptionsListMonitorOptionsPtrOutput)
}

// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
func (o SyntheticsTestOptionsListMonitorOptionsOutput) RenotifyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListMonitorOptions) *int { return v.RenotifyInterval }).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListMonitorOptionsPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListMonitorOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) Elem() SyntheticsTestOptionsListMonitorOptionsOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListMonitorOptions) SyntheticsTestOptionsListMonitorOptions {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListMonitorOptions
		return ret
	}).(SyntheticsTestOptionsListMonitorOptionsOutput)
}

// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) RenotifyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListMonitorOptions) *int {
		if v == nil {
			return nil
		}
		return v.RenotifyInterval
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListRetry struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
	Count *int `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
	Interval *int `pulumi:"interval"`
}

// SyntheticsTestOptionsListRetryInput is an input type that accepts SyntheticsTestOptionsListRetryArgs and SyntheticsTestOptionsListRetryOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRetryInput` via:
//
//	SyntheticsTestOptionsListRetryArgs{...}
type SyntheticsTestOptionsListRetryInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRetryOutput() SyntheticsTestOptionsListRetryOutput
	ToSyntheticsTestOptionsListRetryOutputWithContext(context.Context) SyntheticsTestOptionsListRetryOutput
}

type SyntheticsTestOptionsListRetryArgs struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (SyntheticsTestOptionsListRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryOutput() SyntheticsTestOptionsListRetryOutput {
	return i.ToSyntheticsTestOptionsListRetryOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRetryOutput)
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return i.ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRetryOutput).ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListRetryPtrInput is an input type that accepts SyntheticsTestOptionsListRetryArgs, SyntheticsTestOptionsListRetryPtr and SyntheticsTestOptionsListRetryPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRetryPtrInput` via:
//
//	        SyntheticsTestOptionsListRetryArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListRetryPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput
	ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Context) SyntheticsTestOptionsListRetryPtrOutput
}

type syntheticsTestOptionsListRetryPtrType SyntheticsTestOptionsListRetryArgs

func SyntheticsTestOptionsListRetryPtr(v *SyntheticsTestOptionsListRetryArgs) SyntheticsTestOptionsListRetryPtrInput {
	return (*syntheticsTestOptionsListRetryPtrType)(v)
}

func (*syntheticsTestOptionsListRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (i *syntheticsTestOptionsListRetryPtrType) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return i.ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListRetryPtrType) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRetryPtrOutput)
}

type SyntheticsTestOptionsListRetryOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryOutput() SyntheticsTestOptionsListRetryOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return o.ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListRetry) *SyntheticsTestOptionsListRetry {
		return &v
	}).(SyntheticsTestOptionsListRetryPtrOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
func (o SyntheticsTestOptionsListRetryOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRetry) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
func (o SyntheticsTestOptionsListRetryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRetry) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListRetryPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRetryPtrOutput) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryPtrOutput) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryPtrOutput) Elem() SyntheticsTestOptionsListRetryOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRetry) SyntheticsTestOptionsListRetry {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListRetry
		return ret
	}).(SyntheticsTestOptionsListRetryOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
func (o SyntheticsTestOptionsListRetryPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRetry) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
func (o SyntheticsTestOptionsListRetryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRetry) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListRumSettings struct {
	// RUM application ID used to collect RUM data for the browser test.
	ApplicationId *string `pulumi:"applicationId"`
	// RUM application API key ID used to collect RUM data for the browser test.
	ClientTokenId *int `pulumi:"clientTokenId"`
	// Determines whether RUM data is collected during test runs.
	IsEnabled bool `pulumi:"isEnabled"`
}

// SyntheticsTestOptionsListRumSettingsInput is an input type that accepts SyntheticsTestOptionsListRumSettingsArgs and SyntheticsTestOptionsListRumSettingsOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRumSettingsInput` via:
//
//	SyntheticsTestOptionsListRumSettingsArgs{...}
type SyntheticsTestOptionsListRumSettingsInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRumSettingsOutput() SyntheticsTestOptionsListRumSettingsOutput
	ToSyntheticsTestOptionsListRumSettingsOutputWithContext(context.Context) SyntheticsTestOptionsListRumSettingsOutput
}

type SyntheticsTestOptionsListRumSettingsArgs struct {
	// RUM application ID used to collect RUM data for the browser test.
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	// RUM application API key ID used to collect RUM data for the browser test.
	ClientTokenId pulumi.IntPtrInput `pulumi:"clientTokenId"`
	// Determines whether RUM data is collected during test runs.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (SyntheticsTestOptionsListRumSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsOutput() SyntheticsTestOptionsListRumSettingsOutput {
	return i.ToSyntheticsTestOptionsListRumSettingsOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRumSettingsOutput)
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return i.ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRumSettingsOutput).ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListRumSettingsPtrInput is an input type that accepts SyntheticsTestOptionsListRumSettingsArgs, SyntheticsTestOptionsListRumSettingsPtr and SyntheticsTestOptionsListRumSettingsPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRumSettingsPtrInput` via:
//
//	        SyntheticsTestOptionsListRumSettingsArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListRumSettingsPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput
	ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput
}

type syntheticsTestOptionsListRumSettingsPtrType SyntheticsTestOptionsListRumSettingsArgs

func SyntheticsTestOptionsListRumSettingsPtr(v *SyntheticsTestOptionsListRumSettingsArgs) SyntheticsTestOptionsListRumSettingsPtrInput {
	return (*syntheticsTestOptionsListRumSettingsPtrType)(v)
}

func (*syntheticsTestOptionsListRumSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (i *syntheticsTestOptionsListRumSettingsPtrType) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return i.ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListRumSettingsPtrType) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRumSettingsPtrOutput)
}

type SyntheticsTestOptionsListRumSettingsOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRumSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsOutput() SyntheticsTestOptionsListRumSettingsOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o.ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListRumSettings) *SyntheticsTestOptionsListRumSettings {
		return &v
	}).(SyntheticsTestOptionsListRumSettingsPtrOutput)
}

// RUM application ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRumSettings) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// RUM application API key ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsOutput) ClientTokenId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRumSettings) *int { return v.ClientTokenId }).(pulumi.IntPtrOutput)
}

// Determines whether RUM data is collected during test runs.
func (o SyntheticsTestOptionsListRumSettingsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRumSettings) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type SyntheticsTestOptionsListRumSettingsPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRumSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsPtrOutput) Elem() SyntheticsTestOptionsListRumSettingsOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) SyntheticsTestOptionsListRumSettings {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListRumSettings
		return ret
	}).(SyntheticsTestOptionsListRumSettingsOutput)
}

// RUM application ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// RUM application API key ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ClientTokenId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) *int {
		if v == nil {
			return nil
		}
		return v.ClientTokenId
	}).(pulumi.IntPtrOutput)
}

// Determines whether RUM data is collected during test runs.
func (o SyntheticsTestOptionsListRumSettingsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

type SyntheticsTestOptionsListScheduling struct {
	// Array containing objects describing the scheduling pattern to apply to each day.
	Timeframes []SyntheticsTestOptionsListSchedulingTimeframe `pulumi:"timeframes"`
	// Timezone in which the timeframe is based.
	Timezone string `pulumi:"timezone"`
}

// SyntheticsTestOptionsListSchedulingInput is an input type that accepts SyntheticsTestOptionsListSchedulingArgs and SyntheticsTestOptionsListSchedulingOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingInput` via:
//
//	SyntheticsTestOptionsListSchedulingArgs{...}
type SyntheticsTestOptionsListSchedulingInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingOutput() SyntheticsTestOptionsListSchedulingOutput
	ToSyntheticsTestOptionsListSchedulingOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingOutput
}

type SyntheticsTestOptionsListSchedulingArgs struct {
	// Array containing objects describing the scheduling pattern to apply to each day.
	Timeframes SyntheticsTestOptionsListSchedulingTimeframeArrayInput `pulumi:"timeframes"`
	// Timezone in which the timeframe is based.
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (SyntheticsTestOptionsListSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingOutput() SyntheticsTestOptionsListSchedulingOutput {
	return i.ToSyntheticsTestOptionsListSchedulingOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingOutput)
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return i.ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingOutput).ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListSchedulingPtrInput is an input type that accepts SyntheticsTestOptionsListSchedulingArgs, SyntheticsTestOptionsListSchedulingPtr and SyntheticsTestOptionsListSchedulingPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingPtrInput` via:
//
//	        SyntheticsTestOptionsListSchedulingArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListSchedulingPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput
	ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingPtrOutput
}

type syntheticsTestOptionsListSchedulingPtrType SyntheticsTestOptionsListSchedulingArgs

func SyntheticsTestOptionsListSchedulingPtr(v *SyntheticsTestOptionsListSchedulingArgs) SyntheticsTestOptionsListSchedulingPtrInput {
	return (*syntheticsTestOptionsListSchedulingPtrType)(v)
}

func (*syntheticsTestOptionsListSchedulingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (i *syntheticsTestOptionsListSchedulingPtrType) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return i.ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListSchedulingPtrType) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingPtrOutput)
}

type SyntheticsTestOptionsListSchedulingOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingOutput() SyntheticsTestOptionsListSchedulingOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return o.ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListScheduling) *SyntheticsTestOptionsListScheduling {
		return &v
	}).(SyntheticsTestOptionsListSchedulingPtrOutput)
}

// Array containing objects describing the scheduling pattern to apply to each day.
func (o SyntheticsTestOptionsListSchedulingOutput) Timeframes() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListScheduling) []SyntheticsTestOptionsListSchedulingTimeframe {
		return v.Timeframes
	}).(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput)
}

// Timezone in which the timeframe is based.
func (o SyntheticsTestOptionsListSchedulingOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListScheduling) string { return v.Timezone }).(pulumi.StringOutput)
}

type SyntheticsTestOptionsListSchedulingPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingPtrOutput) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingPtrOutput) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingPtrOutput) Elem() SyntheticsTestOptionsListSchedulingOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListScheduling) SyntheticsTestOptionsListScheduling {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListScheduling
		return ret
	}).(SyntheticsTestOptionsListSchedulingOutput)
}

// Array containing objects describing the scheduling pattern to apply to each day.
func (o SyntheticsTestOptionsListSchedulingPtrOutput) Timeframes() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListScheduling) []SyntheticsTestOptionsListSchedulingTimeframe {
		if v == nil {
			return nil
		}
		return v.Timeframes
	}).(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput)
}

// Timezone in which the timeframe is based.
func (o SyntheticsTestOptionsListSchedulingPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListScheduling) *string {
		if v == nil {
			return nil
		}
		return &v.Timezone
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestOptionsListSchedulingTimeframe struct {
	// Number representing the day of the week
	Day int `pulumi:"day"`
	// The hour of the day on which scheduling starts.
	From string `pulumi:"from"`
	// The hour of the day on which scheduling ends.
	To string `pulumi:"to"`
}

// SyntheticsTestOptionsListSchedulingTimeframeInput is an input type that accepts SyntheticsTestOptionsListSchedulingTimeframeArgs and SyntheticsTestOptionsListSchedulingTimeframeOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingTimeframeInput` via:
//
//	SyntheticsTestOptionsListSchedulingTimeframeArgs{...}
type SyntheticsTestOptionsListSchedulingTimeframeInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingTimeframeOutput() SyntheticsTestOptionsListSchedulingTimeframeOutput
	ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingTimeframeOutput
}

type SyntheticsTestOptionsListSchedulingTimeframeArgs struct {
	// Number representing the day of the week
	Day pulumi.IntInput `pulumi:"day"`
	// The hour of the day on which scheduling starts.
	From pulumi.StringInput `pulumi:"from"`
	// The hour of the day on which scheduling ends.
	To pulumi.StringInput `pulumi:"to"`
}

func (SyntheticsTestOptionsListSchedulingTimeframeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArgs) ToSyntheticsTestOptionsListSchedulingTimeframeOutput() SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return i.ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArgs) ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingTimeframeOutput)
}

// SyntheticsTestOptionsListSchedulingTimeframeArrayInput is an input type that accepts SyntheticsTestOptionsListSchedulingTimeframeArray and SyntheticsTestOptionsListSchedulingTimeframeArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingTimeframeArrayInput` via:
//
//	SyntheticsTestOptionsListSchedulingTimeframeArray{ SyntheticsTestOptionsListSchedulingTimeframeArgs{...} }
type SyntheticsTestOptionsListSchedulingTimeframeArrayInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput
	ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingTimeframeArrayOutput
}

type SyntheticsTestOptionsListSchedulingTimeframeArray []SyntheticsTestOptionsListSchedulingTimeframeInput

func (SyntheticsTestOptionsListSchedulingTimeframeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArray) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return i.ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArray) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput)
}

type SyntheticsTestOptionsListSchedulingTimeframeOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingTimeframeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) ToSyntheticsTestOptionsListSchedulingTimeframeOutput() SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return o
}

// Number representing the day of the week
func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListSchedulingTimeframe) int { return v.Day }).(pulumi.IntOutput)
}

// The hour of the day on which scheduling starts.
func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListSchedulingTimeframe) string { return v.From }).(pulumi.StringOutput)
}

// The hour of the day on which scheduling ends.
func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) To() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListSchedulingTimeframe) string { return v.To }).(pulumi.StringOutput)
}

type SyntheticsTestOptionsListSchedulingTimeframeArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) Index(i pulumi.IntInput) SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestOptionsListSchedulingTimeframe {
		return vs[0].([]SyntheticsTestOptionsListSchedulingTimeframe)[vs[1].(int)]
	}).(SyntheticsTestOptionsListSchedulingTimeframeOutput)
}

type SyntheticsTestRequestBasicauth struct {
	// Access key for `SIGV4` authentication.
	AccessKey *string `pulumi:"accessKey"`
	// Access token url for `oauth-client` or `oauth-rop` authentication.
	AccessTokenUrl *string `pulumi:"accessTokenUrl"`
	// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Audience *string `pulumi:"audience"`
	// Client ID for `oauth-client` or `oauth-rop` authentication.
	ClientId *string `pulumi:"clientId"`
	// Client secret for `oauth-client` or `oauth-rop` authentication.
	ClientSecret *string `pulumi:"clientSecret"`
	// Domain for `ntlm` authentication.
	Domain *string `pulumi:"domain"`
	// Password for authentication.
	Password *string `pulumi:"password"`
	// Region for `SIGV4` authentication.
	Region *string `pulumi:"region"`
	// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Resource *string `pulumi:"resource"`
	// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Scope *string `pulumi:"scope"`
	// Secret key for `SIGV4` authentication.
	SecretKey *string `pulumi:"secretKey"`
	// Service name for `SIGV4` authentication.
	ServiceName *string `pulumi:"serviceName"`
	// Session token for `SIGV4` authentication.
	SessionToken *string `pulumi:"sessionToken"`
	// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
	TokenApiAuthentication *string `pulumi:"tokenApiAuthentication"`
	// Type of basic authentication to use when performing the test. Defaults to `"web"`.
	Type *string `pulumi:"type"`
	// Username for authentication.
	Username *string `pulumi:"username"`
	// Workstation for `ntlm` authentication.
	Workstation *string `pulumi:"workstation"`
}

// SyntheticsTestRequestBasicauthInput is an input type that accepts SyntheticsTestRequestBasicauthArgs and SyntheticsTestRequestBasicauthOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestBasicauthInput` via:
//
//	SyntheticsTestRequestBasicauthArgs{...}
type SyntheticsTestRequestBasicauthInput interface {
	pulumi.Input

	ToSyntheticsTestRequestBasicauthOutput() SyntheticsTestRequestBasicauthOutput
	ToSyntheticsTestRequestBasicauthOutputWithContext(context.Context) SyntheticsTestRequestBasicauthOutput
}

type SyntheticsTestRequestBasicauthArgs struct {
	// Access key for `SIGV4` authentication.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Access token url for `oauth-client` or `oauth-rop` authentication.
	AccessTokenUrl pulumi.StringPtrInput `pulumi:"accessTokenUrl"`
	// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// Client ID for `oauth-client` or `oauth-rop` authentication.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret for `oauth-client` or `oauth-rop` authentication.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Domain for `ntlm` authentication.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Password for authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Region for `SIGV4` authentication.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Secret key for `SIGV4` authentication.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Service name for `SIGV4` authentication.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Session token for `SIGV4` authentication.
	SessionToken pulumi.StringPtrInput `pulumi:"sessionToken"`
	// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
	TokenApiAuthentication pulumi.StringPtrInput `pulumi:"tokenApiAuthentication"`
	// Type of basic authentication to use when performing the test. Defaults to `"web"`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Username for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Workstation for `ntlm` authentication.
	Workstation pulumi.StringPtrInput `pulumi:"workstation"`
}

func (SyntheticsTestRequestBasicauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthOutput() SyntheticsTestRequestBasicauthOutput {
	return i.ToSyntheticsTestRequestBasicauthOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestBasicauthOutput)
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return i.ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestBasicauthOutput).ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestBasicauthPtrInput is an input type that accepts SyntheticsTestRequestBasicauthArgs, SyntheticsTestRequestBasicauthPtr and SyntheticsTestRequestBasicauthPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestBasicauthPtrInput` via:
//
//	        SyntheticsTestRequestBasicauthArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestBasicauthPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput
	ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Context) SyntheticsTestRequestBasicauthPtrOutput
}

type syntheticsTestRequestBasicauthPtrType SyntheticsTestRequestBasicauthArgs

func SyntheticsTestRequestBasicauthPtr(v *SyntheticsTestRequestBasicauthArgs) SyntheticsTestRequestBasicauthPtrInput {
	return (*syntheticsTestRequestBasicauthPtrType)(v)
}

func (*syntheticsTestRequestBasicauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (i *syntheticsTestRequestBasicauthPtrType) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return i.ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestBasicauthPtrType) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestBasicauthPtrOutput)
}

type SyntheticsTestRequestBasicauthOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestBasicauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthOutput() SyntheticsTestRequestBasicauthOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return o.ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestBasicauth) *SyntheticsTestRequestBasicauth {
		return &v
	}).(SyntheticsTestRequestBasicauthPtrOutput)
}

// Access key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Access token url for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.AccessTokenUrl }).(pulumi.StringPtrOutput)
}

// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Client ID for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Domain for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Password for authentication.
func (o SyntheticsTestRequestBasicauthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Region for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Secret key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Service name for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Session token for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) SessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.SessionToken }).(pulumi.StringPtrOutput)
}

// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
func (o SyntheticsTestRequestBasicauthOutput) TokenApiAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.TokenApiAuthentication }).(pulumi.StringPtrOutput)
}

// Type of basic authentication to use when performing the test. Defaults to `"web"`.
func (o SyntheticsTestRequestBasicauthOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Username for authentication.
func (o SyntheticsTestRequestBasicauthOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Workstation for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthOutput) Workstation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Workstation }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestBasicauthPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestBasicauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (o SyntheticsTestRequestBasicauthPtrOutput) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthPtrOutput) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthPtrOutput) Elem() SyntheticsTestRequestBasicauthOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) SyntheticsTestRequestBasicauth {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestBasicauth
		return ret
	}).(SyntheticsTestRequestBasicauthOutput)
}

// Access key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Access token url for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.AccessTokenUrl
	}).(pulumi.StringPtrOutput)
}

// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Client ID for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Domain for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Password for authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Region for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Secret key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Service name for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Session token for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) SessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.SessionToken
	}).(pulumi.StringPtrOutput)
}

// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
func (o SyntheticsTestRequestBasicauthPtrOutput) TokenApiAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.TokenApiAuthentication
	}).(pulumi.StringPtrOutput)
}

// Type of basic authentication to use when performing the test. Defaults to `"web"`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Username for authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Workstation for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Workstation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Workstation
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificate struct {
	Cert SyntheticsTestRequestClientCertificateCert `pulumi:"cert"`
	Key  SyntheticsTestRequestClientCertificateKey  `pulumi:"key"`
}

// SyntheticsTestRequestClientCertificateInput is an input type that accepts SyntheticsTestRequestClientCertificateArgs and SyntheticsTestRequestClientCertificateOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateInput` via:
//
//	SyntheticsTestRequestClientCertificateArgs{...}
type SyntheticsTestRequestClientCertificateInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateOutput() SyntheticsTestRequestClientCertificateOutput
	ToSyntheticsTestRequestClientCertificateOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateOutput
}

type SyntheticsTestRequestClientCertificateArgs struct {
	Cert SyntheticsTestRequestClientCertificateCertInput `pulumi:"cert"`
	Key  SyntheticsTestRequestClientCertificateKeyInput  `pulumi:"key"`
}

func (SyntheticsTestRequestClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificateOutput() SyntheticsTestRequestClientCertificateOutput {
	return i.ToSyntheticsTestRequestClientCertificateOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificateOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateOutput)
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return i.ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateOutput).ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx)
}

// SyntheticsTestRequestClientCertificatePtrInput is an input type that accepts SyntheticsTestRequestClientCertificateArgs, SyntheticsTestRequestClientCertificatePtr and SyntheticsTestRequestClientCertificatePtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificatePtrInput` via:
//
//	        SyntheticsTestRequestClientCertificateArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestClientCertificatePtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput
	ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Context) SyntheticsTestRequestClientCertificatePtrOutput
}

type syntheticsTestRequestClientCertificatePtrType SyntheticsTestRequestClientCertificateArgs

func SyntheticsTestRequestClientCertificatePtr(v *SyntheticsTestRequestClientCertificateArgs) SyntheticsTestRequestClientCertificatePtrInput {
	return (*syntheticsTestRequestClientCertificatePtrType)(v)
}

func (*syntheticsTestRequestClientCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (i *syntheticsTestRequestClientCertificatePtrType) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return i.ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestClientCertificatePtrType) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificatePtrOutput)
}

type SyntheticsTestRequestClientCertificateOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificateOutput() SyntheticsTestRequestClientCertificateOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificateOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return o.ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestClientCertificate) *SyntheticsTestRequestClientCertificate {
		return &v
	}).(SyntheticsTestRequestClientCertificatePtrOutput)
}

func (o SyntheticsTestRequestClientCertificateOutput) Cert() SyntheticsTestRequestClientCertificateCertOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificate) SyntheticsTestRequestClientCertificateCert {
		return v.Cert
	}).(SyntheticsTestRequestClientCertificateCertOutput)
}

func (o SyntheticsTestRequestClientCertificateOutput) Key() SyntheticsTestRequestClientCertificateKeyOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificate) SyntheticsTestRequestClientCertificateKey { return v.Key }).(SyntheticsTestRequestClientCertificateKeyOutput)
}

type SyntheticsTestRequestClientCertificatePtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) Elem() SyntheticsTestRequestClientCertificateOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificate) SyntheticsTestRequestClientCertificate {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestClientCertificate
		return ret
	}).(SyntheticsTestRequestClientCertificateOutput)
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) Cert() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificate) *SyntheticsTestRequestClientCertificateCert {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(SyntheticsTestRequestClientCertificateCertPtrOutput)
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) Key() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificate) *SyntheticsTestRequestClientCertificateKey {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(SyntheticsTestRequestClientCertificateKeyPtrOutput)
}

type SyntheticsTestRequestClientCertificateCert struct {
	// Content of the certificate.
	Content string `pulumi:"content"`
	// File name for the certificate.
	Filename *string `pulumi:"filename"`
}

// SyntheticsTestRequestClientCertificateCertInput is an input type that accepts SyntheticsTestRequestClientCertificateCertArgs and SyntheticsTestRequestClientCertificateCertOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateCertInput` via:
//
//	SyntheticsTestRequestClientCertificateCertArgs{...}
type SyntheticsTestRequestClientCertificateCertInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateCertOutput() SyntheticsTestRequestClientCertificateCertOutput
	ToSyntheticsTestRequestClientCertificateCertOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateCertOutput
}

type SyntheticsTestRequestClientCertificateCertArgs struct {
	// Content of the certificate.
	Content pulumi.StringInput `pulumi:"content"`
	// File name for the certificate.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (SyntheticsTestRequestClientCertificateCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertOutput() SyntheticsTestRequestClientCertificateCertOutput {
	return i.ToSyntheticsTestRequestClientCertificateCertOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateCertOutput)
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateCertOutput).ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestClientCertificateCertPtrInput is an input type that accepts SyntheticsTestRequestClientCertificateCertArgs, SyntheticsTestRequestClientCertificateCertPtr and SyntheticsTestRequestClientCertificateCertPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateCertPtrInput` via:
//
//	        SyntheticsTestRequestClientCertificateCertArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestClientCertificateCertPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput
	ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput
}

type syntheticsTestRequestClientCertificateCertPtrType SyntheticsTestRequestClientCertificateCertArgs

func SyntheticsTestRequestClientCertificateCertPtr(v *SyntheticsTestRequestClientCertificateCertArgs) SyntheticsTestRequestClientCertificateCertPtrInput {
	return (*syntheticsTestRequestClientCertificateCertPtrType)(v)
}

func (*syntheticsTestRequestClientCertificateCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (i *syntheticsTestRequestClientCertificateCertPtrType) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestClientCertificateCertPtrType) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateCertPtrOutput)
}

type SyntheticsTestRequestClientCertificateCertOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertOutput() SyntheticsTestRequestClientCertificateCertOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o.ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestClientCertificateCert) *SyntheticsTestRequestClientCertificateCert {
		return &v
	}).(SyntheticsTestRequestClientCertificateCertPtrOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateCertOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateCert) string { return v.Content }).(pulumi.StringOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateCertOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateCert) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificateCertPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateCertPtrOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertPtrOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertPtrOutput) Elem() SyntheticsTestRequestClientCertificateCertOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateCert) SyntheticsTestRequestClientCertificateCert {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestClientCertificateCert
		return ret
	}).(SyntheticsTestRequestClientCertificateCertOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateCertPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateCert) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateCertPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateCert) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificateKey struct {
	// Content of the certificate.
	Content string `pulumi:"content"`
	// File name for the certificate.
	Filename *string `pulumi:"filename"`
}

// SyntheticsTestRequestClientCertificateKeyInput is an input type that accepts SyntheticsTestRequestClientCertificateKeyArgs and SyntheticsTestRequestClientCertificateKeyOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateKeyInput` via:
//
//	SyntheticsTestRequestClientCertificateKeyArgs{...}
type SyntheticsTestRequestClientCertificateKeyInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateKeyOutput() SyntheticsTestRequestClientCertificateKeyOutput
	ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateKeyOutput
}

type SyntheticsTestRequestClientCertificateKeyArgs struct {
	// Content of the certificate.
	Content pulumi.StringInput `pulumi:"content"`
	// File name for the certificate.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (SyntheticsTestRequestClientCertificateKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyOutput() SyntheticsTestRequestClientCertificateKeyOutput {
	return i.ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateKeyOutput)
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateKeyOutput).ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestClientCertificateKeyPtrInput is an input type that accepts SyntheticsTestRequestClientCertificateKeyArgs, SyntheticsTestRequestClientCertificateKeyPtr and SyntheticsTestRequestClientCertificateKeyPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateKeyPtrInput` via:
//
//	        SyntheticsTestRequestClientCertificateKeyArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestClientCertificateKeyPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput
	ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput
}

type syntheticsTestRequestClientCertificateKeyPtrType SyntheticsTestRequestClientCertificateKeyArgs

func SyntheticsTestRequestClientCertificateKeyPtr(v *SyntheticsTestRequestClientCertificateKeyArgs) SyntheticsTestRequestClientCertificateKeyPtrInput {
	return (*syntheticsTestRequestClientCertificateKeyPtrType)(v)
}

func (*syntheticsTestRequestClientCertificateKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (i *syntheticsTestRequestClientCertificateKeyPtrType) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestClientCertificateKeyPtrType) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateKeyPtrOutput)
}

type SyntheticsTestRequestClientCertificateKeyOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyOutput() SyntheticsTestRequestClientCertificateKeyOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o.ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestClientCertificateKey) *SyntheticsTestRequestClientCertificateKey {
		return &v
	}).(SyntheticsTestRequestClientCertificateKeyPtrOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateKeyOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateKey) string { return v.Content }).(pulumi.StringOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateKeyOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateKey) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificateKeyPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) Elem() SyntheticsTestRequestClientCertificateKeyOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateKey) SyntheticsTestRequestClientCertificateKey {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestClientCertificateKey
		return ret
	}).(SyntheticsTestRequestClientCertificateKeyOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateKey) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateKey) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestDefinition struct {
	// The request body.
	Body *string `pulumi:"body"`
	// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
	BodyType *string `pulumi:"bodyType"`
	// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
	CallType *string `pulumi:"callType"`
	// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
	CertificateDomains []string `pulumi:"certificateDomains"`
	// DNS server to use for DNS tests (`subtype = "dns"`).
	DnsServer *string `pulumi:"dnsServer"`
	// DNS server port to use for DNS tests.
	DnsServerPort *int `pulumi:"dnsServerPort"`
	// Host name to perform the test with.
	Host *string `pulumi:"host"`
	// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`.
	HttpVersion *string `pulumi:"httpVersion"`
	// For UDP and websocket tests, message to send with the request.
	Message *string `pulumi:"message"`
	// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
	Method *string `pulumi:"method"`
	// Determines whether or not to save the response body.
	NoSavingResponseBody *bool `pulumi:"noSavingResponseBody"`
	// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
	NumberOfPackets *int `pulumi:"numberOfPackets"`
	// Persist cookies across redirects.
	PersistCookies *bool `pulumi:"persistCookies"`
	// The content of a proto file as a string.
	PlainProtoFile *string `pulumi:"plainProtoFile"`
	// Port to use when performing the test.
	Port *int `pulumi:"port"`
	// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
	//
	// Deprecated: Use `plainProtoFile` instead.
	ProtoJsonDescriptor *string `pulumi:"protoJsonDescriptor"`
	// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
	Servername *string `pulumi:"servername"`
	// The gRPC service on which you want to perform the gRPC call.
	Service *string `pulumi:"service"`
	// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
	ShouldTrackHops *bool `pulumi:"shouldTrackHops"`
	// Timeout in seconds for the test. Defaults to `60`.
	Timeout *int `pulumi:"timeout"`
	// The URL to send the request to.
	Url *string `pulumi:"url"`
}

// SyntheticsTestRequestDefinitionInput is an input type that accepts SyntheticsTestRequestDefinitionArgs and SyntheticsTestRequestDefinitionOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestDefinitionInput` via:
//
//	SyntheticsTestRequestDefinitionArgs{...}
type SyntheticsTestRequestDefinitionInput interface {
	pulumi.Input

	ToSyntheticsTestRequestDefinitionOutput() SyntheticsTestRequestDefinitionOutput
	ToSyntheticsTestRequestDefinitionOutputWithContext(context.Context) SyntheticsTestRequestDefinitionOutput
}

type SyntheticsTestRequestDefinitionArgs struct {
	// The request body.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
	BodyType pulumi.StringPtrInput `pulumi:"bodyType"`
	// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
	CallType pulumi.StringPtrInput `pulumi:"callType"`
	// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
	CertificateDomains pulumi.StringArrayInput `pulumi:"certificateDomains"`
	// DNS server to use for DNS tests (`subtype = "dns"`).
	DnsServer pulumi.StringPtrInput `pulumi:"dnsServer"`
	// DNS server port to use for DNS tests.
	DnsServerPort pulumi.IntPtrInput `pulumi:"dnsServerPort"`
	// Host name to perform the test with.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`.
	HttpVersion pulumi.StringPtrInput `pulumi:"httpVersion"`
	// For UDP and websocket tests, message to send with the request.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Determines whether or not to save the response body.
	NoSavingResponseBody pulumi.BoolPtrInput `pulumi:"noSavingResponseBody"`
	// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
	NumberOfPackets pulumi.IntPtrInput `pulumi:"numberOfPackets"`
	// Persist cookies across redirects.
	PersistCookies pulumi.BoolPtrInput `pulumi:"persistCookies"`
	// The content of a proto file as a string.
	PlainProtoFile pulumi.StringPtrInput `pulumi:"plainProtoFile"`
	// Port to use when performing the test.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
	//
	// Deprecated: Use `plainProtoFile` instead.
	ProtoJsonDescriptor pulumi.StringPtrInput `pulumi:"protoJsonDescriptor"`
	// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
	Servername pulumi.StringPtrInput `pulumi:"servername"`
	// The gRPC service on which you want to perform the gRPC call.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
	ShouldTrackHops pulumi.BoolPtrInput `pulumi:"shouldTrackHops"`
	// Timeout in seconds for the test. Defaults to `60`.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The URL to send the request to.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SyntheticsTestRequestDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionOutput() SyntheticsTestRequestDefinitionOutput {
	return i.ToSyntheticsTestRequestDefinitionOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestDefinitionOutput)
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return i.ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestDefinitionOutput).ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestDefinitionPtrInput is an input type that accepts SyntheticsTestRequestDefinitionArgs, SyntheticsTestRequestDefinitionPtr and SyntheticsTestRequestDefinitionPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestDefinitionPtrInput` via:
//
//	        SyntheticsTestRequestDefinitionArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestDefinitionPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput
	ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Context) SyntheticsTestRequestDefinitionPtrOutput
}

type syntheticsTestRequestDefinitionPtrType SyntheticsTestRequestDefinitionArgs

func SyntheticsTestRequestDefinitionPtr(v *SyntheticsTestRequestDefinitionArgs) SyntheticsTestRequestDefinitionPtrInput {
	return (*syntheticsTestRequestDefinitionPtrType)(v)
}

func (*syntheticsTestRequestDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (i *syntheticsTestRequestDefinitionPtrType) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return i.ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestDefinitionPtrType) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestDefinitionPtrOutput)
}

type SyntheticsTestRequestDefinitionOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionOutput() SyntheticsTestRequestDefinitionOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return o.ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestDefinition) *SyntheticsTestRequestDefinition {
		return &v
	}).(SyntheticsTestRequestDefinitionPtrOutput)
}

// The request body.
func (o SyntheticsTestRequestDefinitionOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
func (o SyntheticsTestRequestDefinitionOutput) BodyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.BodyType }).(pulumi.StringPtrOutput)
}

// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
func (o SyntheticsTestRequestDefinitionOutput) CallType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.CallType }).(pulumi.StringPtrOutput)
}

// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
func (o SyntheticsTestRequestDefinitionOutput) CertificateDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) []string { return v.CertificateDomains }).(pulumi.StringArrayOutput)
}

// DNS server to use for DNS tests (`subtype = "dns"`).
func (o SyntheticsTestRequestDefinitionOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.DnsServer }).(pulumi.StringPtrOutput)
}

// DNS server port to use for DNS tests.
func (o SyntheticsTestRequestDefinitionOutput) DnsServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *int { return v.DnsServerPort }).(pulumi.IntPtrOutput)
}

// Host name to perform the test with.
func (o SyntheticsTestRequestDefinitionOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`.
func (o SyntheticsTestRequestDefinitionOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.HttpVersion }).(pulumi.StringPtrOutput)
}

// For UDP and websocket tests, message to send with the request.
func (o SyntheticsTestRequestDefinitionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
func (o SyntheticsTestRequestDefinitionOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Determines whether or not to save the response body.
func (o SyntheticsTestRequestDefinitionOutput) NoSavingResponseBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *bool { return v.NoSavingResponseBody }).(pulumi.BoolPtrOutput)
}

// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
func (o SyntheticsTestRequestDefinitionOutput) NumberOfPackets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *int { return v.NumberOfPackets }).(pulumi.IntPtrOutput)
}

// Persist cookies across redirects.
func (o SyntheticsTestRequestDefinitionOutput) PersistCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *bool { return v.PersistCookies }).(pulumi.BoolPtrOutput)
}

// The content of a proto file as a string.
func (o SyntheticsTestRequestDefinitionOutput) PlainProtoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.PlainProtoFile }).(pulumi.StringPtrOutput)
}

// Port to use when performing the test.
func (o SyntheticsTestRequestDefinitionOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
//
// Deprecated: Use `plainProtoFile` instead.
func (o SyntheticsTestRequestDefinitionOutput) ProtoJsonDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.ProtoJsonDescriptor }).(pulumi.StringPtrOutput)
}

// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
func (o SyntheticsTestRequestDefinitionOutput) Servername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Servername }).(pulumi.StringPtrOutput)
}

// The gRPC service on which you want to perform the gRPC call.
func (o SyntheticsTestRequestDefinitionOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
func (o SyntheticsTestRequestDefinitionOutput) ShouldTrackHops() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *bool { return v.ShouldTrackHops }).(pulumi.BoolPtrOutput)
}

// Timeout in seconds for the test. Defaults to `60`.
func (o SyntheticsTestRequestDefinitionOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The URL to send the request to.
func (o SyntheticsTestRequestDefinitionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestDefinitionPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (o SyntheticsTestRequestDefinitionPtrOutput) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionPtrOutput) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionPtrOutput) Elem() SyntheticsTestRequestDefinitionOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) SyntheticsTestRequestDefinition {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestDefinition
		return ret
	}).(SyntheticsTestRequestDefinitionOutput)
}

// The request body.
func (o SyntheticsTestRequestDefinitionPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
func (o SyntheticsTestRequestDefinitionPtrOutput) BodyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.BodyType
	}).(pulumi.StringPtrOutput)
}

// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
func (o SyntheticsTestRequestDefinitionPtrOutput) CallType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.CallType
	}).(pulumi.StringPtrOutput)
}

// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
func (o SyntheticsTestRequestDefinitionPtrOutput) CertificateDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) []string {
		if v == nil {
			return nil
		}
		return v.CertificateDomains
	}).(pulumi.StringArrayOutput)
}

// DNS server to use for DNS tests (`subtype = "dns"`).
func (o SyntheticsTestRequestDefinitionPtrOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DnsServer
	}).(pulumi.StringPtrOutput)
}

// DNS server port to use for DNS tests.
func (o SyntheticsTestRequestDefinitionPtrOutput) DnsServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.DnsServerPort
	}).(pulumi.IntPtrOutput)
}

// Host name to perform the test with.
func (o SyntheticsTestRequestDefinitionPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`.
func (o SyntheticsTestRequestDefinitionPtrOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.HttpVersion
	}).(pulumi.StringPtrOutput)
}

// For UDP and websocket tests, message to send with the request.
func (o SyntheticsTestRequestDefinitionPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
func (o SyntheticsTestRequestDefinitionPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Determines whether or not to save the response body.
func (o SyntheticsTestRequestDefinitionPtrOutput) NoSavingResponseBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.NoSavingResponseBody
	}).(pulumi.BoolPtrOutput)
}

// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
func (o SyntheticsTestRequestDefinitionPtrOutput) NumberOfPackets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfPackets
	}).(pulumi.IntPtrOutput)
}

// Persist cookies across redirects.
func (o SyntheticsTestRequestDefinitionPtrOutput) PersistCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.PersistCookies
	}).(pulumi.BoolPtrOutput)
}

// The content of a proto file as a string.
func (o SyntheticsTestRequestDefinitionPtrOutput) PlainProtoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.PlainProtoFile
	}).(pulumi.StringPtrOutput)
}

// Port to use when performing the test.
func (o SyntheticsTestRequestDefinitionPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
//
// Deprecated: Use `plainProtoFile` instead.
func (o SyntheticsTestRequestDefinitionPtrOutput) ProtoJsonDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ProtoJsonDescriptor
	}).(pulumi.StringPtrOutput)
}

// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
func (o SyntheticsTestRequestDefinitionPtrOutput) Servername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Servername
	}).(pulumi.StringPtrOutput)
}

// The gRPC service on which you want to perform the gRPC call.
func (o SyntheticsTestRequestDefinitionPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
func (o SyntheticsTestRequestDefinitionPtrOutput) ShouldTrackHops() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldTrackHops
	}).(pulumi.BoolPtrOutput)
}

// Timeout in seconds for the test. Defaults to `60`.
func (o SyntheticsTestRequestDefinitionPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The URL to send the request to.
func (o SyntheticsTestRequestDefinitionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestProxy struct {
	// Header name and value map.
	Headers map[string]interface{} `pulumi:"headers"`
	// URL of the proxy to perform the test.
	Url string `pulumi:"url"`
}

// SyntheticsTestRequestProxyInput is an input type that accepts SyntheticsTestRequestProxyArgs and SyntheticsTestRequestProxyOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestProxyInput` via:
//
//	SyntheticsTestRequestProxyArgs{...}
type SyntheticsTestRequestProxyInput interface {
	pulumi.Input

	ToSyntheticsTestRequestProxyOutput() SyntheticsTestRequestProxyOutput
	ToSyntheticsTestRequestProxyOutputWithContext(context.Context) SyntheticsTestRequestProxyOutput
}

type SyntheticsTestRequestProxyArgs struct {
	// Header name and value map.
	Headers pulumi.MapInput `pulumi:"headers"`
	// URL of the proxy to perform the test.
	Url pulumi.StringInput `pulumi:"url"`
}

func (SyntheticsTestRequestProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestProxy)(nil)).Elem()
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyOutput() SyntheticsTestRequestProxyOutput {
	return i.ToSyntheticsTestRequestProxyOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestProxyOutput)
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return i.ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestProxyOutput).ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestProxyPtrInput is an input type that accepts SyntheticsTestRequestProxyArgs, SyntheticsTestRequestProxyPtr and SyntheticsTestRequestProxyPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestProxyPtrInput` via:
//
//	        SyntheticsTestRequestProxyArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestProxyPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput
	ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Context) SyntheticsTestRequestProxyPtrOutput
}

type syntheticsTestRequestProxyPtrType SyntheticsTestRequestProxyArgs

func SyntheticsTestRequestProxyPtr(v *SyntheticsTestRequestProxyArgs) SyntheticsTestRequestProxyPtrInput {
	return (*syntheticsTestRequestProxyPtrType)(v)
}

func (*syntheticsTestRequestProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestProxy)(nil)).Elem()
}

func (i *syntheticsTestRequestProxyPtrType) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return i.ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestProxyPtrType) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestProxyPtrOutput)
}

type SyntheticsTestRequestProxyOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestProxy)(nil)).Elem()
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyOutput() SyntheticsTestRequestProxyOutput {
	return o
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyOutput {
	return o
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return o.ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestProxy) *SyntheticsTestRequestProxy {
		return &v
	}).(SyntheticsTestRequestProxyPtrOutput)
}

// Header name and value map.
func (o SyntheticsTestRequestProxyOutput) Headers() pulumi.MapOutput {
	return o.ApplyT(func(v SyntheticsTestRequestProxy) map[string]interface{} { return v.Headers }).(pulumi.MapOutput)
}

// URL of the proxy to perform the test.
func (o SyntheticsTestRequestProxyOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestProxy) string { return v.Url }).(pulumi.StringOutput)
}

type SyntheticsTestRequestProxyPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestProxy)(nil)).Elem()
}

func (o SyntheticsTestRequestProxyPtrOutput) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return o
}

func (o SyntheticsTestRequestProxyPtrOutput) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return o
}

func (o SyntheticsTestRequestProxyPtrOutput) Elem() SyntheticsTestRequestProxyOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestProxy) SyntheticsTestRequestProxy {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestProxy
		return ret
	}).(SyntheticsTestRequestProxyOutput)
}

// Header name and value map.
func (o SyntheticsTestRequestProxyPtrOutput) Headers() pulumi.MapOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestProxy) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.MapOutput)
}

// URL of the proxy to perform the test.
func (o SyntheticsTestRequestProxyPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestProxy) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type GetCloudWorkloadSecurityAgentRulesAgentRule struct {
	// The description of the Agent rule.
	Description string `pulumi:"description"`
	// Whether the Agent rule is enabled.
	Enabled bool `pulumi:"enabled"`
	// The SECL expression of the Agent rule.
	Expression string `pulumi:"expression"`
	// The id of the Agent rule.
	Id string `pulumi:"id"`
	// The name of the Agent rule.
	Name string `pulumi:"name"`
}

// GetCloudWorkloadSecurityAgentRulesAgentRuleInput is an input type that accepts GetCloudWorkloadSecurityAgentRulesAgentRuleArgs and GetCloudWorkloadSecurityAgentRulesAgentRuleOutput values.
// You can construct a concrete instance of `GetCloudWorkloadSecurityAgentRulesAgentRuleInput` via:
//
//	GetCloudWorkloadSecurityAgentRulesAgentRuleArgs{...}
type GetCloudWorkloadSecurityAgentRulesAgentRuleInput interface {
	pulumi.Input

	ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleOutput
	ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleArgs struct {
	// The description of the Agent rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether the Agent rule is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The SECL expression of the Agent rule.
	Expression pulumi.StringInput `pulumi:"expression"`
	// The id of the Agent rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Agent rule.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCloudWorkloadSecurityAgentRulesAgentRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArgs) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return i.ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(context.Background())
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArgs) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudWorkloadSecurityAgentRulesAgentRuleOutput)
}

// GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput is an input type that accepts GetCloudWorkloadSecurityAgentRulesAgentRuleArray and GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput values.
// You can construct a concrete instance of `GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput` via:
//
//	GetCloudWorkloadSecurityAgentRulesAgentRuleArray{ GetCloudWorkloadSecurityAgentRulesAgentRuleArgs{...} }
type GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput interface {
	pulumi.Input

	ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput
	ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleArray []GetCloudWorkloadSecurityAgentRulesAgentRuleInput

func (GetCloudWorkloadSecurityAgentRulesAgentRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArray) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return i.ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(context.Background())
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArray) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput)
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleOutput struct{ *pulumi.OutputState }

func (GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return o
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return o
}

// The description of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Description }).(pulumi.StringOutput)
}

// Whether the Agent rule is enabled.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The SECL expression of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Expression }).(pulumi.StringOutput)
}

// The id of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) Index(i pulumi.IntInput) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudWorkloadSecurityAgentRulesAgentRule {
		return vs[0].([]GetCloudWorkloadSecurityAgentRulesAgentRule)[vs[1].(int)]
	}).(GetCloudWorkloadSecurityAgentRulesAgentRuleOutput)
}

type GetCsmThreatsAgentRulesAgentRule struct {
	Description string `pulumi:"description"`
	Enabled     bool   `pulumi:"enabled"`
	Expression  string `pulumi:"expression"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
}

// GetCsmThreatsAgentRulesAgentRuleInput is an input type that accepts GetCsmThreatsAgentRulesAgentRuleArgs and GetCsmThreatsAgentRulesAgentRuleOutput values.
// You can construct a concrete instance of `GetCsmThreatsAgentRulesAgentRuleInput` via:
//
//	GetCsmThreatsAgentRulesAgentRuleArgs{...}
type GetCsmThreatsAgentRulesAgentRuleInput interface {
	pulumi.Input

	ToGetCsmThreatsAgentRulesAgentRuleOutput() GetCsmThreatsAgentRulesAgentRuleOutput
	ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(context.Context) GetCsmThreatsAgentRulesAgentRuleOutput
}

type GetCsmThreatsAgentRulesAgentRuleArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Enabled     pulumi.BoolInput   `pulumi:"enabled"`
	Expression  pulumi.StringInput `pulumi:"expression"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
}

func (GetCsmThreatsAgentRulesAgentRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCsmThreatsAgentRulesAgentRuleArgs) ToGetCsmThreatsAgentRulesAgentRuleOutput() GetCsmThreatsAgentRulesAgentRuleOutput {
	return i.ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(context.Background())
}

func (i GetCsmThreatsAgentRulesAgentRuleArgs) ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsmThreatsAgentRulesAgentRuleOutput)
}

// GetCsmThreatsAgentRulesAgentRuleArrayInput is an input type that accepts GetCsmThreatsAgentRulesAgentRuleArray and GetCsmThreatsAgentRulesAgentRuleArrayOutput values.
// You can construct a concrete instance of `GetCsmThreatsAgentRulesAgentRuleArrayInput` via:
//
//	GetCsmThreatsAgentRulesAgentRuleArray{ GetCsmThreatsAgentRulesAgentRuleArgs{...} }
type GetCsmThreatsAgentRulesAgentRuleArrayInput interface {
	pulumi.Input

	ToGetCsmThreatsAgentRulesAgentRuleArrayOutput() GetCsmThreatsAgentRulesAgentRuleArrayOutput
	ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(context.Context) GetCsmThreatsAgentRulesAgentRuleArrayOutput
}

type GetCsmThreatsAgentRulesAgentRuleArray []GetCsmThreatsAgentRulesAgentRuleInput

func (GetCsmThreatsAgentRulesAgentRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCsmThreatsAgentRulesAgentRuleArray) ToGetCsmThreatsAgentRulesAgentRuleArrayOutput() GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return i.ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(context.Background())
}

func (i GetCsmThreatsAgentRulesAgentRuleArray) ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsmThreatsAgentRulesAgentRuleArrayOutput)
}

type GetCsmThreatsAgentRulesAgentRuleOutput struct{ *pulumi.OutputState }

func (GetCsmThreatsAgentRulesAgentRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) ToGetCsmThreatsAgentRulesAgentRuleOutput() GetCsmThreatsAgentRulesAgentRuleOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Expression }).(pulumi.StringOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetCsmThreatsAgentRulesAgentRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCsmThreatsAgentRulesAgentRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCsmThreatsAgentRulesAgentRuleArrayOutput) ToGetCsmThreatsAgentRulesAgentRuleArrayOutput() GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleArrayOutput) ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleArrayOutput) Index(i pulumi.IntInput) GetCsmThreatsAgentRulesAgentRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCsmThreatsAgentRulesAgentRule {
		return vs[0].([]GetCsmThreatsAgentRulesAgentRule)[vs[1].(int)]
	}).(GetCsmThreatsAgentRulesAgentRuleOutput)
}

type GetHostsHostList struct {
	Aliases          []string                `pulumi:"aliases"`
	Apps             []string                `pulumi:"apps"`
	AwsName          string                  `pulumi:"awsName"`
	HostName         string                  `pulumi:"hostName"`
	Id               int                     `pulumi:"id"`
	IsMuted          bool                    `pulumi:"isMuted"`
	LastReportedTime int                     `pulumi:"lastReportedTime"`
	Meta             GetHostsHostListMeta    `pulumi:"meta"`
	Metrics          GetHostsHostListMetrics `pulumi:"metrics"`
	MuteTimeout      int                     `pulumi:"muteTimeout"`
	Name             string                  `pulumi:"name"`
	Sources          []string                `pulumi:"sources"`
	Up               bool                    `pulumi:"up"`
}

// GetHostsHostListInput is an input type that accepts GetHostsHostListArgs and GetHostsHostListOutput values.
// You can construct a concrete instance of `GetHostsHostListInput` via:
//
//	GetHostsHostListArgs{...}
type GetHostsHostListInput interface {
	pulumi.Input

	ToGetHostsHostListOutput() GetHostsHostListOutput
	ToGetHostsHostListOutputWithContext(context.Context) GetHostsHostListOutput
}

type GetHostsHostListArgs struct {
	Aliases          pulumi.StringArrayInput      `pulumi:"aliases"`
	Apps             pulumi.StringArrayInput      `pulumi:"apps"`
	AwsName          pulumi.StringInput           `pulumi:"awsName"`
	HostName         pulumi.StringInput           `pulumi:"hostName"`
	Id               pulumi.IntInput              `pulumi:"id"`
	IsMuted          pulumi.BoolInput             `pulumi:"isMuted"`
	LastReportedTime pulumi.IntInput              `pulumi:"lastReportedTime"`
	Meta             GetHostsHostListMetaInput    `pulumi:"meta"`
	Metrics          GetHostsHostListMetricsInput `pulumi:"metrics"`
	MuteTimeout      pulumi.IntInput              `pulumi:"muteTimeout"`
	Name             pulumi.StringInput           `pulumi:"name"`
	Sources          pulumi.StringArrayInput      `pulumi:"sources"`
	Up               pulumi.BoolInput             `pulumi:"up"`
}

func (GetHostsHostListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostList)(nil)).Elem()
}

func (i GetHostsHostListArgs) ToGetHostsHostListOutput() GetHostsHostListOutput {
	return i.ToGetHostsHostListOutputWithContext(context.Background())
}

func (i GetHostsHostListArgs) ToGetHostsHostListOutputWithContext(ctx context.Context) GetHostsHostListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListOutput)
}

// GetHostsHostListArrayInput is an input type that accepts GetHostsHostListArray and GetHostsHostListArrayOutput values.
// You can construct a concrete instance of `GetHostsHostListArrayInput` via:
//
//	GetHostsHostListArray{ GetHostsHostListArgs{...} }
type GetHostsHostListArrayInput interface {
	pulumi.Input

	ToGetHostsHostListArrayOutput() GetHostsHostListArrayOutput
	ToGetHostsHostListArrayOutputWithContext(context.Context) GetHostsHostListArrayOutput
}

type GetHostsHostListArray []GetHostsHostListInput

func (GetHostsHostListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHostList)(nil)).Elem()
}

func (i GetHostsHostListArray) ToGetHostsHostListArrayOutput() GetHostsHostListArrayOutput {
	return i.ToGetHostsHostListArrayOutputWithContext(context.Background())
}

func (i GetHostsHostListArray) ToGetHostsHostListArrayOutputWithContext(ctx context.Context) GetHostsHostListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListArrayOutput)
}

type GetHostsHostListOutput struct{ *pulumi.OutputState }

func (GetHostsHostListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostList)(nil)).Elem()
}

func (o GetHostsHostListOutput) ToGetHostsHostListOutput() GetHostsHostListOutput {
	return o
}

func (o GetHostsHostListOutput) ToGetHostsHostListOutputWithContext(ctx context.Context) GetHostsHostListOutput {
	return o
}

func (o GetHostsHostListOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostsHostList) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

func (o GetHostsHostListOutput) Apps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostsHostList) []string { return v.Apps }).(pulumi.StringArrayOutput)
}

func (o GetHostsHostListOutput) AwsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostList) string { return v.AwsName }).(pulumi.StringOutput)
}

func (o GetHostsHostListOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostList) string { return v.HostName }).(pulumi.StringOutput)
}

func (o GetHostsHostListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostList) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetHostsHostListOutput) IsMuted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostsHostList) bool { return v.IsMuted }).(pulumi.BoolOutput)
}

func (o GetHostsHostListOutput) LastReportedTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostList) int { return v.LastReportedTime }).(pulumi.IntOutput)
}

func (o GetHostsHostListOutput) Meta() GetHostsHostListMetaOutput {
	return o.ApplyT(func(v GetHostsHostList) GetHostsHostListMeta { return v.Meta }).(GetHostsHostListMetaOutput)
}

func (o GetHostsHostListOutput) Metrics() GetHostsHostListMetricsOutput {
	return o.ApplyT(func(v GetHostsHostList) GetHostsHostListMetrics { return v.Metrics }).(GetHostsHostListMetricsOutput)
}

func (o GetHostsHostListOutput) MuteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostList) int { return v.MuteTimeout }).(pulumi.IntOutput)
}

func (o GetHostsHostListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostList) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetHostsHostListOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostsHostList) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

func (o GetHostsHostListOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostsHostList) bool { return v.Up }).(pulumi.BoolOutput)
}

type GetHostsHostListArrayOutput struct{ *pulumi.OutputState }

func (GetHostsHostListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHostList)(nil)).Elem()
}

func (o GetHostsHostListArrayOutput) ToGetHostsHostListArrayOutput() GetHostsHostListArrayOutput {
	return o
}

func (o GetHostsHostListArrayOutput) ToGetHostsHostListArrayOutputWithContext(ctx context.Context) GetHostsHostListArrayOutput {
	return o
}

func (o GetHostsHostListArrayOutput) Index(i pulumi.IntInput) GetHostsHostListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostsHostList {
		return vs[0].([]GetHostsHostList)[vs[1].(int)]
	}).(GetHostsHostListOutput)
}

type GetHostsHostListMeta struct {
	AgentVersion   string `pulumi:"agentVersion"`
	CpuCores       int    `pulumi:"cpuCores"`
	Gohai          string `pulumi:"gohai"`
	Machine        string `pulumi:"machine"`
	Platform       string `pulumi:"platform"`
	Processor      string `pulumi:"processor"`
	PythonVersion  string `pulumi:"pythonVersion"`
	SocketFqdn     string `pulumi:"socketFqdn"`
	SocketHostname string `pulumi:"socketHostname"`
}

// GetHostsHostListMetaInput is an input type that accepts GetHostsHostListMetaArgs and GetHostsHostListMetaOutput values.
// You can construct a concrete instance of `GetHostsHostListMetaInput` via:
//
//	GetHostsHostListMetaArgs{...}
type GetHostsHostListMetaInput interface {
	pulumi.Input

	ToGetHostsHostListMetaOutput() GetHostsHostListMetaOutput
	ToGetHostsHostListMetaOutputWithContext(context.Context) GetHostsHostListMetaOutput
}

type GetHostsHostListMetaArgs struct {
	AgentVersion   pulumi.StringInput `pulumi:"agentVersion"`
	CpuCores       pulumi.IntInput    `pulumi:"cpuCores"`
	Gohai          pulumi.StringInput `pulumi:"gohai"`
	Machine        pulumi.StringInput `pulumi:"machine"`
	Platform       pulumi.StringInput `pulumi:"platform"`
	Processor      pulumi.StringInput `pulumi:"processor"`
	PythonVersion  pulumi.StringInput `pulumi:"pythonVersion"`
	SocketFqdn     pulumi.StringInput `pulumi:"socketFqdn"`
	SocketHostname pulumi.StringInput `pulumi:"socketHostname"`
}

func (GetHostsHostListMetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMeta)(nil)).Elem()
}

func (i GetHostsHostListMetaArgs) ToGetHostsHostListMetaOutput() GetHostsHostListMetaOutput {
	return i.ToGetHostsHostListMetaOutputWithContext(context.Background())
}

func (i GetHostsHostListMetaArgs) ToGetHostsHostListMetaOutputWithContext(ctx context.Context) GetHostsHostListMetaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListMetaOutput)
}

type GetHostsHostListMetaOutput struct{ *pulumi.OutputState }

func (GetHostsHostListMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMeta)(nil)).Elem()
}

func (o GetHostsHostListMetaOutput) ToGetHostsHostListMetaOutput() GetHostsHostListMetaOutput {
	return o
}

func (o GetHostsHostListMetaOutput) ToGetHostsHostListMetaOutputWithContext(ctx context.Context) GetHostsHostListMetaOutput {
	return o
}

func (o GetHostsHostListMetaOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.AgentVersion }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) int { return v.CpuCores }).(pulumi.IntOutput)
}

func (o GetHostsHostListMetaOutput) Gohai() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Gohai }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) Machine() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Machine }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Platform }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) Processor() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Processor }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) PythonVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.PythonVersion }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) SocketFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.SocketFqdn }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) SocketHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.SocketHostname }).(pulumi.StringOutput)
}

type GetHostsHostListMetrics struct {
	Cpu    float64 `pulumi:"cpu"`
	Iowait float64 `pulumi:"iowait"`
	Load   float64 `pulumi:"load"`
}

// GetHostsHostListMetricsInput is an input type that accepts GetHostsHostListMetricsArgs and GetHostsHostListMetricsOutput values.
// You can construct a concrete instance of `GetHostsHostListMetricsInput` via:
//
//	GetHostsHostListMetricsArgs{...}
type GetHostsHostListMetricsInput interface {
	pulumi.Input

	ToGetHostsHostListMetricsOutput() GetHostsHostListMetricsOutput
	ToGetHostsHostListMetricsOutputWithContext(context.Context) GetHostsHostListMetricsOutput
}

type GetHostsHostListMetricsArgs struct {
	Cpu    pulumi.Float64Input `pulumi:"cpu"`
	Iowait pulumi.Float64Input `pulumi:"iowait"`
	Load   pulumi.Float64Input `pulumi:"load"`
}

func (GetHostsHostListMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMetrics)(nil)).Elem()
}

func (i GetHostsHostListMetricsArgs) ToGetHostsHostListMetricsOutput() GetHostsHostListMetricsOutput {
	return i.ToGetHostsHostListMetricsOutputWithContext(context.Background())
}

func (i GetHostsHostListMetricsArgs) ToGetHostsHostListMetricsOutputWithContext(ctx context.Context) GetHostsHostListMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListMetricsOutput)
}

type GetHostsHostListMetricsOutput struct{ *pulumi.OutputState }

func (GetHostsHostListMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMetrics)(nil)).Elem()
}

func (o GetHostsHostListMetricsOutput) ToGetHostsHostListMetricsOutput() GetHostsHostListMetricsOutput {
	return o
}

func (o GetHostsHostListMetricsOutput) ToGetHostsHostListMetricsOutputWithContext(ctx context.Context) GetHostsHostListMetricsOutput {
	return o
}

func (o GetHostsHostListMetricsOutput) Cpu() pulumi.Float64Output {
	return o.ApplyT(func(v GetHostsHostListMetrics) float64 { return v.Cpu }).(pulumi.Float64Output)
}

func (o GetHostsHostListMetricsOutput) Iowait() pulumi.Float64Output {
	return o.ApplyT(func(v GetHostsHostListMetrics) float64 { return v.Iowait }).(pulumi.Float64Output)
}

func (o GetHostsHostListMetricsOutput) Load() pulumi.Float64Output {
	return o.ApplyT(func(v GetHostsHostListMetrics) float64 { return v.Load }).(pulumi.Float64Output)
}

type GetLogsIndexesLogsIndex struct {
	// The number of log events you can send in this index per day before you are rate-limited.
	DailyLimit int `pulumi:"dailyLimit"`
	// Object containing options to override the default daily limit reset time.
	DailyLimitResets []GetLogsIndexesLogsIndexDailyLimitReset `pulumi:"dailyLimitResets"`
	// The percentage threshold of the daily quota at which a Datadog warning event is generated.
	DailyLimitWarningThresholdPercentage float64 `pulumi:"dailyLimitWarningThresholdPercentage"`
	// List of exclusion filters.
	ExclusionFilters []GetLogsIndexesLogsIndexExclusionFilter `pulumi:"exclusionFilters"`
	// Logs filter
	Filters []GetLogsIndexesLogsIndexFilter `pulumi:"filters"`
	// The name of the index.
	Name string `pulumi:"name"`
	// The number of days before logs are deleted from this index.
	RetentionDays int `pulumi:"retentionDays"`
}

// GetLogsIndexesLogsIndexInput is an input type that accepts GetLogsIndexesLogsIndexArgs and GetLogsIndexesLogsIndexOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexInput` via:
//
//	GetLogsIndexesLogsIndexArgs{...}
type GetLogsIndexesLogsIndexInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexOutput() GetLogsIndexesLogsIndexOutput
	ToGetLogsIndexesLogsIndexOutputWithContext(context.Context) GetLogsIndexesLogsIndexOutput
}

type GetLogsIndexesLogsIndexArgs struct {
	// The number of log events you can send in this index per day before you are rate-limited.
	DailyLimit pulumi.IntInput `pulumi:"dailyLimit"`
	// Object containing options to override the default daily limit reset time.
	DailyLimitResets GetLogsIndexesLogsIndexDailyLimitResetArrayInput `pulumi:"dailyLimitResets"`
	// The percentage threshold of the daily quota at which a Datadog warning event is generated.
	DailyLimitWarningThresholdPercentage pulumi.Float64Input `pulumi:"dailyLimitWarningThresholdPercentage"`
	// List of exclusion filters.
	ExclusionFilters GetLogsIndexesLogsIndexExclusionFilterArrayInput `pulumi:"exclusionFilters"`
	// Logs filter
	Filters GetLogsIndexesLogsIndexFilterArrayInput `pulumi:"filters"`
	// The name of the index.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of days before logs are deleted from this index.
	RetentionDays pulumi.IntInput `pulumi:"retentionDays"`
}

func (GetLogsIndexesLogsIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexArgs) ToGetLogsIndexesLogsIndexOutput() GetLogsIndexesLogsIndexOutput {
	return i.ToGetLogsIndexesLogsIndexOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexArgs) ToGetLogsIndexesLogsIndexOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexOutput)
}

// GetLogsIndexesLogsIndexArrayInput is an input type that accepts GetLogsIndexesLogsIndexArray and GetLogsIndexesLogsIndexArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexArrayInput` via:
//
//	GetLogsIndexesLogsIndexArray{ GetLogsIndexesLogsIndexArgs{...} }
type GetLogsIndexesLogsIndexArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexArrayOutput() GetLogsIndexesLogsIndexArrayOutput
	ToGetLogsIndexesLogsIndexArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexArrayOutput
}

type GetLogsIndexesLogsIndexArray []GetLogsIndexesLogsIndexInput

func (GetLogsIndexesLogsIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexArray) ToGetLogsIndexesLogsIndexArrayOutput() GetLogsIndexesLogsIndexArrayOutput {
	return i.ToGetLogsIndexesLogsIndexArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexArray) ToGetLogsIndexesLogsIndexArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexArrayOutput)
}

type GetLogsIndexesLogsIndexOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexOutput) ToGetLogsIndexesLogsIndexOutput() GetLogsIndexesLogsIndexOutput {
	return o
}

func (o GetLogsIndexesLogsIndexOutput) ToGetLogsIndexesLogsIndexOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexOutput {
	return o
}

// The number of log events you can send in this index per day before you are rate-limited.
func (o GetLogsIndexesLogsIndexOutput) DailyLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) int { return v.DailyLimit }).(pulumi.IntOutput)
}

// Object containing options to override the default daily limit reset time.
func (o GetLogsIndexesLogsIndexOutput) DailyLimitResets() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) []GetLogsIndexesLogsIndexDailyLimitReset { return v.DailyLimitResets }).(GetLogsIndexesLogsIndexDailyLimitResetArrayOutput)
}

// The percentage threshold of the daily quota at which a Datadog warning event is generated.
func (o GetLogsIndexesLogsIndexOutput) DailyLimitWarningThresholdPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) float64 { return v.DailyLimitWarningThresholdPercentage }).(pulumi.Float64Output)
}

// List of exclusion filters.
func (o GetLogsIndexesLogsIndexOutput) ExclusionFilters() GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) []GetLogsIndexesLogsIndexExclusionFilter { return v.ExclusionFilters }).(GetLogsIndexesLogsIndexExclusionFilterArrayOutput)
}

// Logs filter
func (o GetLogsIndexesLogsIndexOutput) Filters() GetLogsIndexesLogsIndexFilterArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) []GetLogsIndexesLogsIndexFilter { return v.Filters }).(GetLogsIndexesLogsIndexFilterArrayOutput)
}

// The name of the index.
func (o GetLogsIndexesLogsIndexOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) string { return v.Name }).(pulumi.StringOutput)
}

// The number of days before logs are deleted from this index.
func (o GetLogsIndexesLogsIndexOutput) RetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) int { return v.RetentionDays }).(pulumi.IntOutput)
}

type GetLogsIndexesLogsIndexArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexArrayOutput) ToGetLogsIndexesLogsIndexArrayOutput() GetLogsIndexesLogsIndexArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexArrayOutput) ToGetLogsIndexesLogsIndexArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndex {
		return vs[0].([]GetLogsIndexesLogsIndex)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexOutput)
}

type GetLogsIndexesLogsIndexDailyLimitReset struct {
	// String in `HH:00` format representing the time of day the daily limit should be reset. The hours between 00 and 23 (inclusive).
	ResetTime string `pulumi:"resetTime"`
	// String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours between -12 and +14 (inclusive).
	ResetUtcOffset string `pulumi:"resetUtcOffset"`
}

// GetLogsIndexesLogsIndexDailyLimitResetInput is an input type that accepts GetLogsIndexesLogsIndexDailyLimitResetArgs and GetLogsIndexesLogsIndexDailyLimitResetOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexDailyLimitResetInput` via:
//
//	GetLogsIndexesLogsIndexDailyLimitResetArgs{...}
type GetLogsIndexesLogsIndexDailyLimitResetInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexDailyLimitResetOutput() GetLogsIndexesLogsIndexDailyLimitResetOutput
	ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(context.Context) GetLogsIndexesLogsIndexDailyLimitResetOutput
}

type GetLogsIndexesLogsIndexDailyLimitResetArgs struct {
	// String in `HH:00` format representing the time of day the daily limit should be reset. The hours between 00 and 23 (inclusive).
	ResetTime pulumi.StringInput `pulumi:"resetTime"`
	// String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours between -12 and +14 (inclusive).
	ResetUtcOffset pulumi.StringInput `pulumi:"resetUtcOffset"`
}

func (GetLogsIndexesLogsIndexDailyLimitResetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArgs) ToGetLogsIndexesLogsIndexDailyLimitResetOutput() GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return i.ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArgs) ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexDailyLimitResetOutput)
}

// GetLogsIndexesLogsIndexDailyLimitResetArrayInput is an input type that accepts GetLogsIndexesLogsIndexDailyLimitResetArray and GetLogsIndexesLogsIndexDailyLimitResetArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexDailyLimitResetArrayInput` via:
//
//	GetLogsIndexesLogsIndexDailyLimitResetArray{ GetLogsIndexesLogsIndexDailyLimitResetArgs{...} }
type GetLogsIndexesLogsIndexDailyLimitResetArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutput() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput
	ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexDailyLimitResetArrayOutput
}

type GetLogsIndexesLogsIndexDailyLimitResetArray []GetLogsIndexesLogsIndexDailyLimitResetInput

func (GetLogsIndexesLogsIndexDailyLimitResetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArray) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutput() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return i.ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArray) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexDailyLimitResetArrayOutput)
}

type GetLogsIndexesLogsIndexDailyLimitResetOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexDailyLimitResetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ToGetLogsIndexesLogsIndexDailyLimitResetOutput() GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return o
}

func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return o
}

// String in `HH:00` format representing the time of day the daily limit should be reset. The hours between 00 and 23 (inclusive).
func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ResetTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexDailyLimitReset) string { return v.ResetTime }).(pulumi.StringOutput)
}

// String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours between -12 and +14 (inclusive).
func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ResetUtcOffset() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexDailyLimitReset) string { return v.ResetUtcOffset }).(pulumi.StringOutput)
}

type GetLogsIndexesLogsIndexDailyLimitResetArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutput() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexDailyLimitReset {
		return vs[0].([]GetLogsIndexesLogsIndexDailyLimitReset)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexDailyLimitResetOutput)
}

type GetLogsIndexesLogsIndexExclusionFilter struct {
	Filters []GetLogsIndexesLogsIndexExclusionFilterFilter `pulumi:"filters"`
	// A boolean stating if the exclusion is active or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the exclusion filter.
	Name string `pulumi:"name"`
}

// GetLogsIndexesLogsIndexExclusionFilterInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterArgs and GetLogsIndexesLogsIndexExclusionFilterOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterArgs{...}
type GetLogsIndexesLogsIndexExclusionFilterInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterOutput() GetLogsIndexesLogsIndexExclusionFilterOutput
	ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterOutput
}

type GetLogsIndexesLogsIndexExclusionFilterArgs struct {
	Filters GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput `pulumi:"filters"`
	// A boolean stating if the exclusion is active or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the exclusion filter.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLogsIndexesLogsIndexExclusionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterOutput() GetLogsIndexesLogsIndexExclusionFilterOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterOutput)
}

// GetLogsIndexesLogsIndexExclusionFilterArrayInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterArray and GetLogsIndexesLogsIndexExclusionFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterArrayInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterArray{ GetLogsIndexesLogsIndexExclusionFilterArgs{...} }
type GetLogsIndexesLogsIndexExclusionFilterArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterArrayOutput
	ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterArrayOutput
}

type GetLogsIndexesLogsIndexExclusionFilterArray []GetLogsIndexesLogsIndexExclusionFilterInput

func (GetLogsIndexesLogsIndexExclusionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterArrayOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterOutput() GetLogsIndexesLogsIndexExclusionFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterOutput) Filters() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilter) []GetLogsIndexesLogsIndexExclusionFilterFilter {
		return v.Filters
	}).(GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput)
}

// A boolean stating if the exclusion is active or not.
func (o GetLogsIndexesLogsIndexExclusionFilterOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilter) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the exclusion filter.
func (o GetLogsIndexesLogsIndexExclusionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilter) string { return v.Name }).(pulumi.StringOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexExclusionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexExclusionFilter {
		return vs[0].([]GetLogsIndexesLogsIndexExclusionFilter)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexExclusionFilterOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterFilter struct {
	// Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.
	Query string `pulumi:"query"`
	// The fraction of logs excluded by the exclusion filter, when active.
	SampleRate float64 `pulumi:"sampleRate"`
}

// GetLogsIndexesLogsIndexExclusionFilterFilterInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterFilterArgs and GetLogsIndexesLogsIndexExclusionFilterFilterOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterFilterInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterFilterArgs{...}
type GetLogsIndexesLogsIndexExclusionFilterFilterInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterFilterOutput() GetLogsIndexesLogsIndexExclusionFilterFilterOutput
	ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterOutput
}

type GetLogsIndexesLogsIndexExclusionFilterFilterArgs struct {
	// Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.
	Query pulumi.StringInput `pulumi:"query"`
	// The fraction of logs excluded by the exclusion filter, when active.
	SampleRate pulumi.Float64Input `pulumi:"sampleRate"`
}

func (GetLogsIndexesLogsIndexExclusionFilterFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutput() GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterFilterOutput)
}

// GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterFilterArray and GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterFilterArray{ GetLogsIndexesLogsIndexExclusionFilterFilterArgs{...} }
type GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput
	ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput
}

type GetLogsIndexesLogsIndexExclusionFilterFilterArray []GetLogsIndexesLogsIndexExclusionFilterFilterInput

func (GetLogsIndexesLogsIndexExclusionFilterFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterFilterOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutput() GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return o
}

// Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.
func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilterFilter) string { return v.Query }).(pulumi.StringOutput)
}

// The fraction of logs excluded by the exclusion filter, when active.
func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) SampleRate() pulumi.Float64Output {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilterFilter) float64 { return v.SampleRate }).(pulumi.Float64Output)
}

type GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexExclusionFilterFilter {
		return vs[0].([]GetLogsIndexesLogsIndexExclusionFilterFilter)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexExclusionFilterFilterOutput)
}

type GetLogsIndexesLogsIndexFilter struct {
	// Logs filter criteria. Only logs matching this filter criteria are considered for this index.
	Query string `pulumi:"query"`
}

// GetLogsIndexesLogsIndexFilterInput is an input type that accepts GetLogsIndexesLogsIndexFilterArgs and GetLogsIndexesLogsIndexFilterOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexFilterInput` via:
//
//	GetLogsIndexesLogsIndexFilterArgs{...}
type GetLogsIndexesLogsIndexFilterInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexFilterOutput() GetLogsIndexesLogsIndexFilterOutput
	ToGetLogsIndexesLogsIndexFilterOutputWithContext(context.Context) GetLogsIndexesLogsIndexFilterOutput
}

type GetLogsIndexesLogsIndexFilterArgs struct {
	// Logs filter criteria. Only logs matching this filter criteria are considered for this index.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetLogsIndexesLogsIndexFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexFilterArgs) ToGetLogsIndexesLogsIndexFilterOutput() GetLogsIndexesLogsIndexFilterOutput {
	return i.ToGetLogsIndexesLogsIndexFilterOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexFilterArgs) ToGetLogsIndexesLogsIndexFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexFilterOutput)
}

// GetLogsIndexesLogsIndexFilterArrayInput is an input type that accepts GetLogsIndexesLogsIndexFilterArray and GetLogsIndexesLogsIndexFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexFilterArrayInput` via:
//
//	GetLogsIndexesLogsIndexFilterArray{ GetLogsIndexesLogsIndexFilterArgs{...} }
type GetLogsIndexesLogsIndexFilterArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexFilterArrayOutput() GetLogsIndexesLogsIndexFilterArrayOutput
	ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexFilterArrayOutput
}

type GetLogsIndexesLogsIndexFilterArray []GetLogsIndexesLogsIndexFilterInput

func (GetLogsIndexesLogsIndexFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexFilterArray) ToGetLogsIndexesLogsIndexFilterArrayOutput() GetLogsIndexesLogsIndexFilterArrayOutput {
	return i.ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexFilterArray) ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexFilterArrayOutput)
}

type GetLogsIndexesLogsIndexFilterOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexFilterOutput) ToGetLogsIndexesLogsIndexFilterOutput() GetLogsIndexesLogsIndexFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexFilterOutput) ToGetLogsIndexesLogsIndexFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterOutput {
	return o
}

// Logs filter criteria. Only logs matching this filter criteria are considered for this index.
func (o GetLogsIndexesLogsIndexFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetLogsIndexesLogsIndexFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexFilterArrayOutput) ToGetLogsIndexesLogsIndexFilterArrayOutput() GetLogsIndexesLogsIndexFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexFilterArrayOutput) ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexFilterArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexFilter {
		return vs[0].([]GetLogsIndexesLogsIndexFilter)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexFilterOutput)
}

type GetLogsPipelinesLogsPipeline struct {
	// Pipelines filter
	Filters []GetLogsPipelinesLogsPipelineFilter `pulumi:"filters"`
	// ID of the pipeline
	Id string `pulumi:"id"`
	// Whether or not the pipeline is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether or not the pipeline can be edited.
	IsReadOnly bool `pulumi:"isReadOnly"`
	// The name of the pipeline.
	Name string `pulumi:"name"`
	// Whether or not the pipeline can be edited.
	Type string `pulumi:"type"`
}

// GetLogsPipelinesLogsPipelineInput is an input type that accepts GetLogsPipelinesLogsPipelineArgs and GetLogsPipelinesLogsPipelineOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineInput` via:
//
//	GetLogsPipelinesLogsPipelineArgs{...}
type GetLogsPipelinesLogsPipelineInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineOutput() GetLogsPipelinesLogsPipelineOutput
	ToGetLogsPipelinesLogsPipelineOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineOutput
}

type GetLogsPipelinesLogsPipelineArgs struct {
	// Pipelines filter
	Filters GetLogsPipelinesLogsPipelineFilterArrayInput `pulumi:"filters"`
	// ID of the pipeline
	Id pulumi.StringInput `pulumi:"id"`
	// Whether or not the pipeline is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether or not the pipeline can be edited.
	IsReadOnly pulumi.BoolInput `pulumi:"isReadOnly"`
	// The name of the pipeline.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether or not the pipeline can be edited.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLogsPipelinesLogsPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineArgs) ToGetLogsPipelinesLogsPipelineOutput() GetLogsPipelinesLogsPipelineOutput {
	return i.ToGetLogsPipelinesLogsPipelineOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineArgs) ToGetLogsPipelinesLogsPipelineOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineOutput)
}

// GetLogsPipelinesLogsPipelineArrayInput is an input type that accepts GetLogsPipelinesLogsPipelineArray and GetLogsPipelinesLogsPipelineArrayOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineArrayInput` via:
//
//	GetLogsPipelinesLogsPipelineArray{ GetLogsPipelinesLogsPipelineArgs{...} }
type GetLogsPipelinesLogsPipelineArrayInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineArrayOutput() GetLogsPipelinesLogsPipelineArrayOutput
	ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineArrayOutput
}

type GetLogsPipelinesLogsPipelineArray []GetLogsPipelinesLogsPipelineInput

func (GetLogsPipelinesLogsPipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineArray) ToGetLogsPipelinesLogsPipelineArrayOutput() GetLogsPipelinesLogsPipelineArrayOutput {
	return i.ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineArray) ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineArrayOutput)
}

type GetLogsPipelinesLogsPipelineOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineOutput) ToGetLogsPipelinesLogsPipelineOutput() GetLogsPipelinesLogsPipelineOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineOutput) ToGetLogsPipelinesLogsPipelineOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineOutput {
	return o
}

// Pipelines filter
func (o GetLogsPipelinesLogsPipelineOutput) Filters() GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) []GetLogsPipelinesLogsPipelineFilter { return v.Filters }).(GetLogsPipelinesLogsPipelineFilterArrayOutput)
}

// ID of the pipeline
func (o GetLogsPipelinesLogsPipelineOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) string { return v.Id }).(pulumi.StringOutput)
}

// Whether or not the pipeline is enabled.
func (o GetLogsPipelinesLogsPipelineOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether or not the pipeline can be edited.
func (o GetLogsPipelinesLogsPipelineOutput) IsReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) bool { return v.IsReadOnly }).(pulumi.BoolOutput)
}

// The name of the pipeline.
func (o GetLogsPipelinesLogsPipelineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) string { return v.Name }).(pulumi.StringOutput)
}

// Whether or not the pipeline can be edited.
func (o GetLogsPipelinesLogsPipelineOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) string { return v.Type }).(pulumi.StringOutput)
}

type GetLogsPipelinesLogsPipelineArrayOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineArrayOutput) ToGetLogsPipelinesLogsPipelineArrayOutput() GetLogsPipelinesLogsPipelineArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineArrayOutput) ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineArrayOutput) Index(i pulumi.IntInput) GetLogsPipelinesLogsPipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsPipelinesLogsPipeline {
		return vs[0].([]GetLogsPipelinesLogsPipeline)[vs[1].(int)]
	}).(GetLogsPipelinesLogsPipelineOutput)
}

type GetLogsPipelinesLogsPipelineFilter struct {
	// Pipeline filter criteria.
	Query string `pulumi:"query"`
}

// GetLogsPipelinesLogsPipelineFilterInput is an input type that accepts GetLogsPipelinesLogsPipelineFilterArgs and GetLogsPipelinesLogsPipelineFilterOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineFilterInput` via:
//
//	GetLogsPipelinesLogsPipelineFilterArgs{...}
type GetLogsPipelinesLogsPipelineFilterInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineFilterOutput() GetLogsPipelinesLogsPipelineFilterOutput
	ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineFilterOutput
}

type GetLogsPipelinesLogsPipelineFilterArgs struct {
	// Pipeline filter criteria.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetLogsPipelinesLogsPipelineFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineFilterArgs) ToGetLogsPipelinesLogsPipelineFilterOutput() GetLogsPipelinesLogsPipelineFilterOutput {
	return i.ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineFilterArgs) ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineFilterOutput)
}

// GetLogsPipelinesLogsPipelineFilterArrayInput is an input type that accepts GetLogsPipelinesLogsPipelineFilterArray and GetLogsPipelinesLogsPipelineFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineFilterArrayInput` via:
//
//	GetLogsPipelinesLogsPipelineFilterArray{ GetLogsPipelinesLogsPipelineFilterArgs{...} }
type GetLogsPipelinesLogsPipelineFilterArrayInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineFilterArrayOutput() GetLogsPipelinesLogsPipelineFilterArrayOutput
	ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineFilterArrayOutput
}

type GetLogsPipelinesLogsPipelineFilterArray []GetLogsPipelinesLogsPipelineFilterInput

func (GetLogsPipelinesLogsPipelineFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineFilterArray) ToGetLogsPipelinesLogsPipelineFilterArrayOutput() GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return i.ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineFilterArray) ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineFilterArrayOutput)
}

type GetLogsPipelinesLogsPipelineFilterOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineFilterOutput) ToGetLogsPipelinesLogsPipelineFilterOutput() GetLogsPipelinesLogsPipelineFilterOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineFilterOutput) ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterOutput {
	return o
}

// Pipeline filter criteria.
func (o GetLogsPipelinesLogsPipelineFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipelineFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetLogsPipelinesLogsPipelineFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineFilterArrayOutput) ToGetLogsPipelinesLogsPipelineFilterArrayOutput() GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineFilterArrayOutput) ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineFilterArrayOutput) Index(i pulumi.IntInput) GetLogsPipelinesLogsPipelineFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsPipelinesLogsPipelineFilter {
		return vs[0].([]GetLogsPipelinesLogsPipelineFilter)[vs[1].(int)]
	}).(GetLogsPipelinesLogsPipelineFilterOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicy struct {
	// ID of the monitor config policy
	Id string `pulumi:"id"`
	// The monitor config policy type
	PolicyType string `pulumi:"policyType"`
	// Config for a tag policy. Only set if `policyType` is `tag`.
	TagPolicy GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy `pulumi:"tagPolicy"`
}

// GetMonitorConfigPoliciesMonitorConfigPolicyInput is an input type that accepts GetMonitorConfigPoliciesMonitorConfigPolicyArgs and GetMonitorConfigPoliciesMonitorConfigPolicyOutput values.
// You can construct a concrete instance of `GetMonitorConfigPoliciesMonitorConfigPolicyInput` via:
//
//	GetMonitorConfigPoliciesMonitorConfigPolicyArgs{...}
type GetMonitorConfigPoliciesMonitorConfigPolicyInput interface {
	pulumi.Input

	ToGetMonitorConfigPoliciesMonitorConfigPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyOutput
	ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyOutput
}

type GetMonitorConfigPoliciesMonitorConfigPolicyArgs struct {
	// ID of the monitor config policy
	Id pulumi.StringInput `pulumi:"id"`
	// The monitor config policy type
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Config for a tag policy. Only set if `policyType` is `tag`.
	TagPolicy GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput `pulumi:"tagPolicy"`
}

func (GetMonitorConfigPoliciesMonitorConfigPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return i.ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(context.Background())
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigPoliciesMonitorConfigPolicyOutput)
}

// GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput is an input type that accepts GetMonitorConfigPoliciesMonitorConfigPolicyArray and GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput` via:
//
//	GetMonitorConfigPoliciesMonitorConfigPolicyArray{ GetMonitorConfigPoliciesMonitorConfigPolicyArgs{...} }
type GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput() GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput
	ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput
}

type GetMonitorConfigPoliciesMonitorConfigPolicyArray []GetMonitorConfigPoliciesMonitorConfigPolicyInput

func (GetMonitorConfigPoliciesMonitorConfigPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArray) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput() GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return i.ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArray) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigPoliciesMonitorConfigPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return o
}

// ID of the monitor config policy
func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The monitor config policy type
func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Config for a tag policy. Only set if `policyType` is `tag`.
func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) TagPolicy() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicy) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy {
		return v.TagPolicy
	}).(GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput() GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigPoliciesMonitorConfigPolicy {
		return vs[0].([]GetMonitorConfigPoliciesMonitorConfigPolicy)[vs[1].(int)]
	}).(GetMonitorConfigPoliciesMonitorConfigPolicyOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy struct {
	// The key of the tag
	TagKey string `pulumi:"tagKey"`
	// If a tag key is required for monitor creation
	TagKeyRequired bool `pulumi:"tagKeyRequired"`
	// Valid values for the tag
	ValidTagValues []string `pulumi:"validTagValues"`
}

// GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput is an input type that accepts GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs and GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput values.
// You can construct a concrete instance of `GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput` via:
//
//	GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs{...}
type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput interface {
	pulumi.Input

	ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput
	ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput
}

type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs struct {
	// The key of the tag
	TagKey pulumi.StringInput `pulumi:"tagKey"`
	// If a tag key is required for monitor creation
	TagKeyRequired pulumi.BoolInput `pulumi:"tagKeyRequired"`
	// Valid values for the tag
	ValidTagValues pulumi.StringArrayInput `pulumi:"validTagValues"`
}

func (GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy)(nil)).Elem()
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return i.ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(context.Background())
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy)(nil)).Elem()
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return o
}

// The key of the tag
func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy) string { return v.TagKey }).(pulumi.StringOutput)
}

// If a tag key is required for monitor creation
func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) TagKeyRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy) bool { return v.TagKeyRequired }).(pulumi.BoolOutput)
}

// Valid values for the tag
func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ValidTagValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy) []string { return v.ValidTagValues }).(pulumi.StringArrayOutput)
}

type GetMonitorMonitorThreshold struct {
	Critical         string `pulumi:"critical"`
	CriticalRecovery string `pulumi:"criticalRecovery"`
	Ok               string `pulumi:"ok"`
	Unknown          string `pulumi:"unknown"`
	Warning          string `pulumi:"warning"`
	WarningRecovery  string `pulumi:"warningRecovery"`
}

// GetMonitorMonitorThresholdInput is an input type that accepts GetMonitorMonitorThresholdArgs and GetMonitorMonitorThresholdOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdInput` via:
//
//	GetMonitorMonitorThresholdArgs{...}
type GetMonitorMonitorThresholdInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdOutput() GetMonitorMonitorThresholdOutput
	ToGetMonitorMonitorThresholdOutputWithContext(context.Context) GetMonitorMonitorThresholdOutput
}

type GetMonitorMonitorThresholdArgs struct {
	Critical         pulumi.StringInput `pulumi:"critical"`
	CriticalRecovery pulumi.StringInput `pulumi:"criticalRecovery"`
	Ok               pulumi.StringInput `pulumi:"ok"`
	Unknown          pulumi.StringInput `pulumi:"unknown"`
	Warning          pulumi.StringInput `pulumi:"warning"`
	WarningRecovery  pulumi.StringInput `pulumi:"warningRecovery"`
}

func (GetMonitorMonitorThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThreshold)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdArgs) ToGetMonitorMonitorThresholdOutput() GetMonitorMonitorThresholdOutput {
	return i.ToGetMonitorMonitorThresholdOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdArgs) ToGetMonitorMonitorThresholdOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdOutput)
}

// GetMonitorMonitorThresholdArrayInput is an input type that accepts GetMonitorMonitorThresholdArray and GetMonitorMonitorThresholdArrayOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdArrayInput` via:
//
//	GetMonitorMonitorThresholdArray{ GetMonitorMonitorThresholdArgs{...} }
type GetMonitorMonitorThresholdArrayInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdArrayOutput() GetMonitorMonitorThresholdArrayOutput
	ToGetMonitorMonitorThresholdArrayOutputWithContext(context.Context) GetMonitorMonitorThresholdArrayOutput
}

type GetMonitorMonitorThresholdArray []GetMonitorMonitorThresholdInput

func (GetMonitorMonitorThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThreshold)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdArray) ToGetMonitorMonitorThresholdArrayOutput() GetMonitorMonitorThresholdArrayOutput {
	return i.ToGetMonitorMonitorThresholdArrayOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdArray) ToGetMonitorMonitorThresholdArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdArrayOutput)
}

type GetMonitorMonitorThresholdOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThreshold)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdOutput) ToGetMonitorMonitorThresholdOutput() GetMonitorMonitorThresholdOutput {
	return o
}

func (o GetMonitorMonitorThresholdOutput) ToGetMonitorMonitorThresholdOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdOutput {
	return o
}

func (o GetMonitorMonitorThresholdOutput) Critical() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Critical }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) CriticalRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.CriticalRecovery }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) Ok() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Ok }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) Unknown() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Unknown }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) Warning() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Warning }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) WarningRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.WarningRecovery }).(pulumi.StringOutput)
}

type GetMonitorMonitorThresholdArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThreshold)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdArrayOutput) ToGetMonitorMonitorThresholdArrayOutput() GetMonitorMonitorThresholdArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdArrayOutput) ToGetMonitorMonitorThresholdArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdArrayOutput) Index(i pulumi.IntInput) GetMonitorMonitorThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorMonitorThreshold {
		return vs[0].([]GetMonitorMonitorThreshold)[vs[1].(int)]
	}).(GetMonitorMonitorThresholdOutput)
}

type GetMonitorMonitorThresholdWindow struct {
	RecoveryWindow string `pulumi:"recoveryWindow"`
	TriggerWindow  string `pulumi:"triggerWindow"`
}

// GetMonitorMonitorThresholdWindowInput is an input type that accepts GetMonitorMonitorThresholdWindowArgs and GetMonitorMonitorThresholdWindowOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdWindowInput` via:
//
//	GetMonitorMonitorThresholdWindowArgs{...}
type GetMonitorMonitorThresholdWindowInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdWindowOutput() GetMonitorMonitorThresholdWindowOutput
	ToGetMonitorMonitorThresholdWindowOutputWithContext(context.Context) GetMonitorMonitorThresholdWindowOutput
}

type GetMonitorMonitorThresholdWindowArgs struct {
	RecoveryWindow pulumi.StringInput `pulumi:"recoveryWindow"`
	TriggerWindow  pulumi.StringInput `pulumi:"triggerWindow"`
}

func (GetMonitorMonitorThresholdWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdWindowArgs) ToGetMonitorMonitorThresholdWindowOutput() GetMonitorMonitorThresholdWindowOutput {
	return i.ToGetMonitorMonitorThresholdWindowOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdWindowArgs) ToGetMonitorMonitorThresholdWindowOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdWindowOutput)
}

// GetMonitorMonitorThresholdWindowArrayInput is an input type that accepts GetMonitorMonitorThresholdWindowArray and GetMonitorMonitorThresholdWindowArrayOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdWindowArrayInput` via:
//
//	GetMonitorMonitorThresholdWindowArray{ GetMonitorMonitorThresholdWindowArgs{...} }
type GetMonitorMonitorThresholdWindowArrayInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdWindowArrayOutput() GetMonitorMonitorThresholdWindowArrayOutput
	ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(context.Context) GetMonitorMonitorThresholdWindowArrayOutput
}

type GetMonitorMonitorThresholdWindowArray []GetMonitorMonitorThresholdWindowInput

func (GetMonitorMonitorThresholdWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdWindowArray) ToGetMonitorMonitorThresholdWindowArrayOutput() GetMonitorMonitorThresholdWindowArrayOutput {
	return i.ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdWindowArray) ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdWindowArrayOutput)
}

type GetMonitorMonitorThresholdWindowOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdWindowOutput) ToGetMonitorMonitorThresholdWindowOutput() GetMonitorMonitorThresholdWindowOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowOutput) ToGetMonitorMonitorThresholdWindowOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowOutput) RecoveryWindow() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThresholdWindow) string { return v.RecoveryWindow }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdWindowOutput) TriggerWindow() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThresholdWindow) string { return v.TriggerWindow }).(pulumi.StringOutput)
}

type GetMonitorMonitorThresholdWindowArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdWindowArrayOutput) ToGetMonitorMonitorThresholdWindowArrayOutput() GetMonitorMonitorThresholdWindowArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowArrayOutput) ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowArrayOutput) Index(i pulumi.IntInput) GetMonitorMonitorThresholdWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorMonitorThresholdWindow {
		return vs[0].([]GetMonitorMonitorThresholdWindow)[vs[1].(int)]
	}).(GetMonitorMonitorThresholdWindowOutput)
}

type GetMonitorSchedulingOption struct {
	// Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
	CustomSchedules []GetMonitorSchedulingOptionCustomSchedule `pulumi:"customSchedules"`
	// Configuration options for the evaluation window. If `hourStarts` is set, no other fields may be set. Otherwise, `dayStarts` and `monthStarts` must be set together.
	EvaluationWindows []GetMonitorSchedulingOptionEvaluationWindow `pulumi:"evaluationWindows"`
}

// GetMonitorSchedulingOptionInput is an input type that accepts GetMonitorSchedulingOptionArgs and GetMonitorSchedulingOptionOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionInput` via:
//
//	GetMonitorSchedulingOptionArgs{...}
type GetMonitorSchedulingOptionInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionOutput() GetMonitorSchedulingOptionOutput
	ToGetMonitorSchedulingOptionOutputWithContext(context.Context) GetMonitorSchedulingOptionOutput
}

type GetMonitorSchedulingOptionArgs struct {
	// Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
	CustomSchedules GetMonitorSchedulingOptionCustomScheduleArrayInput `pulumi:"customSchedules"`
	// Configuration options for the evaluation window. If `hourStarts` is set, no other fields may be set. Otherwise, `dayStarts` and `monthStarts` must be set together.
	EvaluationWindows GetMonitorSchedulingOptionEvaluationWindowArrayInput `pulumi:"evaluationWindows"`
}

func (GetMonitorSchedulingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOption)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionArgs) ToGetMonitorSchedulingOptionOutput() GetMonitorSchedulingOptionOutput {
	return i.ToGetMonitorSchedulingOptionOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionArgs) ToGetMonitorSchedulingOptionOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionOutput)
}

// GetMonitorSchedulingOptionArrayInput is an input type that accepts GetMonitorSchedulingOptionArray and GetMonitorSchedulingOptionArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionArrayInput` via:
//
//	GetMonitorSchedulingOptionArray{ GetMonitorSchedulingOptionArgs{...} }
type GetMonitorSchedulingOptionArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionArrayOutput() GetMonitorSchedulingOptionArrayOutput
	ToGetMonitorSchedulingOptionArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionArrayOutput
}

type GetMonitorSchedulingOptionArray []GetMonitorSchedulingOptionInput

func (GetMonitorSchedulingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOption)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionArray) ToGetMonitorSchedulingOptionArrayOutput() GetMonitorSchedulingOptionArrayOutput {
	return i.ToGetMonitorSchedulingOptionArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionArray) ToGetMonitorSchedulingOptionArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionArrayOutput)
}

type GetMonitorSchedulingOptionOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOption)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionOutput) ToGetMonitorSchedulingOptionOutput() GetMonitorSchedulingOptionOutput {
	return o
}

func (o GetMonitorSchedulingOptionOutput) ToGetMonitorSchedulingOptionOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionOutput {
	return o
}

// Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
func (o GetMonitorSchedulingOptionOutput) CustomSchedules() GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOption) []GetMonitorSchedulingOptionCustomSchedule {
		return v.CustomSchedules
	}).(GetMonitorSchedulingOptionCustomScheduleArrayOutput)
}

// Configuration options for the evaluation window. If `hourStarts` is set, no other fields may be set. Otherwise, `dayStarts` and `monthStarts` must be set together.
func (o GetMonitorSchedulingOptionOutput) EvaluationWindows() GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOption) []GetMonitorSchedulingOptionEvaluationWindow {
		return v.EvaluationWindows
	}).(GetMonitorSchedulingOptionEvaluationWindowArrayOutput)
}

type GetMonitorSchedulingOptionArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOption)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionArrayOutput) ToGetMonitorSchedulingOptionArrayOutput() GetMonitorSchedulingOptionArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionArrayOutput) ToGetMonitorSchedulingOptionArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOption {
		return vs[0].([]GetMonitorSchedulingOption)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionOutput)
}

type GetMonitorSchedulingOptionCustomSchedule struct {
	// A list of recurrence definitions. Length must be 1.
	Recurrences []GetMonitorSchedulingOptionCustomScheduleRecurrence `pulumi:"recurrences"`
}

// GetMonitorSchedulingOptionCustomScheduleInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleArgs and GetMonitorSchedulingOptionCustomScheduleOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleArgs{...}
type GetMonitorSchedulingOptionCustomScheduleInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleOutput() GetMonitorSchedulingOptionCustomScheduleOutput
	ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleOutput
}

type GetMonitorSchedulingOptionCustomScheduleArgs struct {
	// A list of recurrence definitions. Length must be 1.
	Recurrences GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput `pulumi:"recurrences"`
}

func (GetMonitorSchedulingOptionCustomScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleArgs) ToGetMonitorSchedulingOptionCustomScheduleOutput() GetMonitorSchedulingOptionCustomScheduleOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleArgs) ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleOutput)
}

// GetMonitorSchedulingOptionCustomScheduleArrayInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleArray and GetMonitorSchedulingOptionCustomScheduleArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleArrayInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleArray{ GetMonitorSchedulingOptionCustomScheduleArgs{...} }
type GetMonitorSchedulingOptionCustomScheduleArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleArrayOutput() GetMonitorSchedulingOptionCustomScheduleArrayOutput
	ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleArrayOutput
}

type GetMonitorSchedulingOptionCustomScheduleArray []GetMonitorSchedulingOptionCustomScheduleInput

func (GetMonitorSchedulingOptionCustomScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleArray) ToGetMonitorSchedulingOptionCustomScheduleArrayOutput() GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleArray) ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleArrayOutput)
}

type GetMonitorSchedulingOptionCustomScheduleOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleOutput) ToGetMonitorSchedulingOptionCustomScheduleOutput() GetMonitorSchedulingOptionCustomScheduleOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleOutput) ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleOutput {
	return o
}

// A list of recurrence definitions. Length must be 1.
func (o GetMonitorSchedulingOptionCustomScheduleOutput) Recurrences() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomSchedule) []GetMonitorSchedulingOptionCustomScheduleRecurrence {
		return v.Recurrences
	}).(GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput)
}

type GetMonitorSchedulingOptionCustomScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleArrayOutput() GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionCustomScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOptionCustomSchedule {
		return vs[0].([]GetMonitorSchedulingOptionCustomSchedule)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionCustomScheduleOutput)
}

type GetMonitorSchedulingOptionCustomScheduleRecurrence struct {
	// Must be a valid rrule. See api docs for supported fields
	Rrule string `pulumi:"rrule"`
	// Time to start recurrence cycle. Similar to DTSTART. Expected format 'YYYY-MM-DDThh:mm:ss'
	Start string `pulumi:"start"`
	// 'tz database' format. ex: 'America/New_York' or UTC
	Timezone string `pulumi:"timezone"`
}

// GetMonitorSchedulingOptionCustomScheduleRecurrenceInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs and GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleRecurrenceInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs{...}
type GetMonitorSchedulingOptionCustomScheduleRecurrenceInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput
	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs struct {
	// Must be a valid rrule. See api docs for supported fields
	Rrule pulumi.StringInput `pulumi:"rrule"`
	// Time to start recurrence cycle. Similar to DTSTART. Expected format 'YYYY-MM-DDThh:mm:ss'
	Start pulumi.StringInput `pulumi:"start"`
	// 'tz database' format. ex: 'America/New_York' or UTC
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput)
}

// GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleRecurrenceArray and GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleRecurrenceArray{ GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs{...} }
type GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput
	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceArray []GetMonitorSchedulingOptionCustomScheduleRecurrenceInput

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArray) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArray) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput)
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return o
}

// Must be a valid rrule. See api docs for supported fields
func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) Rrule() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomScheduleRecurrence) string { return v.Rrule }).(pulumi.StringOutput)
}

// Time to start recurrence cycle. Similar to DTSTART. Expected format 'YYYY-MM-DDThh:mm:ss'
func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomScheduleRecurrence) string { return v.Start }).(pulumi.StringOutput)
}

// 'tz database' format. ex: 'America/New_York' or UTC
func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomScheduleRecurrence) string { return v.Timezone }).(pulumi.StringOutput)
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOptionCustomScheduleRecurrence {
		return vs[0].([]GetMonitorSchedulingOptionCustomScheduleRecurrence)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput)
}

type GetMonitorSchedulingOptionEvaluationWindow struct {
	// The time of the day at which a one day cumulative evaluation window starts. Must be defined in UTC time in `HH:mm` format.
	DayStarts string `pulumi:"dayStarts"`
	// The minute of the hour at which a one hour cumulative evaluation window starts. Must be between 0 and 59.
	HourStarts int `pulumi:"hourStarts"`
	// The day of the month at which a one month cumulative evaluation window starts. Must be a value of 1.
	MonthStarts int `pulumi:"monthStarts"`
}

// GetMonitorSchedulingOptionEvaluationWindowInput is an input type that accepts GetMonitorSchedulingOptionEvaluationWindowArgs and GetMonitorSchedulingOptionEvaluationWindowOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionEvaluationWindowInput` via:
//
//	GetMonitorSchedulingOptionEvaluationWindowArgs{...}
type GetMonitorSchedulingOptionEvaluationWindowInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionEvaluationWindowOutput() GetMonitorSchedulingOptionEvaluationWindowOutput
	ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(context.Context) GetMonitorSchedulingOptionEvaluationWindowOutput
}

type GetMonitorSchedulingOptionEvaluationWindowArgs struct {
	// The time of the day at which a one day cumulative evaluation window starts. Must be defined in UTC time in `HH:mm` format.
	DayStarts pulumi.StringInput `pulumi:"dayStarts"`
	// The minute of the hour at which a one hour cumulative evaluation window starts. Must be between 0 and 59.
	HourStarts pulumi.IntInput `pulumi:"hourStarts"`
	// The day of the month at which a one month cumulative evaluation window starts. Must be a value of 1.
	MonthStarts pulumi.IntInput `pulumi:"monthStarts"`
}

func (GetMonitorSchedulingOptionEvaluationWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionEvaluationWindowArgs) ToGetMonitorSchedulingOptionEvaluationWindowOutput() GetMonitorSchedulingOptionEvaluationWindowOutput {
	return i.ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionEvaluationWindowArgs) ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionEvaluationWindowOutput)
}

// GetMonitorSchedulingOptionEvaluationWindowArrayInput is an input type that accepts GetMonitorSchedulingOptionEvaluationWindowArray and GetMonitorSchedulingOptionEvaluationWindowArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionEvaluationWindowArrayInput` via:
//
//	GetMonitorSchedulingOptionEvaluationWindowArray{ GetMonitorSchedulingOptionEvaluationWindowArgs{...} }
type GetMonitorSchedulingOptionEvaluationWindowArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionEvaluationWindowArrayOutput() GetMonitorSchedulingOptionEvaluationWindowArrayOutput
	ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionEvaluationWindowArrayOutput
}

type GetMonitorSchedulingOptionEvaluationWindowArray []GetMonitorSchedulingOptionEvaluationWindowInput

func (GetMonitorSchedulingOptionEvaluationWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionEvaluationWindowArray) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutput() GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return i.ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionEvaluationWindowArray) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionEvaluationWindowArrayOutput)
}

type GetMonitorSchedulingOptionEvaluationWindowOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionEvaluationWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionEvaluationWindowOutput) ToGetMonitorSchedulingOptionEvaluationWindowOutput() GetMonitorSchedulingOptionEvaluationWindowOutput {
	return o
}

func (o GetMonitorSchedulingOptionEvaluationWindowOutput) ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowOutput {
	return o
}

// The time of the day at which a one day cumulative evaluation window starts. Must be defined in UTC time in `HH:mm` format.
func (o GetMonitorSchedulingOptionEvaluationWindowOutput) DayStarts() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionEvaluationWindow) string { return v.DayStarts }).(pulumi.StringOutput)
}

// The minute of the hour at which a one hour cumulative evaluation window starts. Must be between 0 and 59.
func (o GetMonitorSchedulingOptionEvaluationWindowOutput) HourStarts() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionEvaluationWindow) int { return v.HourStarts }).(pulumi.IntOutput)
}

// The day of the month at which a one month cumulative evaluation window starts. Must be a value of 1.
func (o GetMonitorSchedulingOptionEvaluationWindowOutput) MonthStarts() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionEvaluationWindow) int { return v.MonthStarts }).(pulumi.IntOutput)
}

type GetMonitorSchedulingOptionEvaluationWindowArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionEvaluationWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionEvaluationWindowArrayOutput) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutput() GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionEvaluationWindowArrayOutput) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionEvaluationWindowArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionEvaluationWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOptionEvaluationWindow {
		return vs[0].([]GetMonitorSchedulingOptionEvaluationWindow)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionEvaluationWindowOutput)
}

type GetMonitorsMonitor struct {
	// ID of the monitor
	Id int `pulumi:"id"`
	// Name of the monitor
	Name string `pulumi:"name"`
	// Type of the monitor.
	Type string `pulumi:"type"`
}

// GetMonitorsMonitorInput is an input type that accepts GetMonitorsMonitorArgs and GetMonitorsMonitorOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorInput` via:
//
//	GetMonitorsMonitorArgs{...}
type GetMonitorsMonitorInput interface {
	pulumi.Input

	ToGetMonitorsMonitorOutput() GetMonitorsMonitorOutput
	ToGetMonitorsMonitorOutputWithContext(context.Context) GetMonitorsMonitorOutput
}

type GetMonitorsMonitorArgs struct {
	// ID of the monitor
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the monitor
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the monitor.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMonitorsMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitor)(nil)).Elem()
}

func (i GetMonitorsMonitorArgs) ToGetMonitorsMonitorOutput() GetMonitorsMonitorOutput {
	return i.ToGetMonitorsMonitorOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorArgs) ToGetMonitorsMonitorOutputWithContext(ctx context.Context) GetMonitorsMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorOutput)
}

// GetMonitorsMonitorArrayInput is an input type that accepts GetMonitorsMonitorArray and GetMonitorsMonitorArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorArrayInput` via:
//
//	GetMonitorsMonitorArray{ GetMonitorsMonitorArgs{...} }
type GetMonitorsMonitorArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorArrayOutput() GetMonitorsMonitorArrayOutput
	ToGetMonitorsMonitorArrayOutputWithContext(context.Context) GetMonitorsMonitorArrayOutput
}

type GetMonitorsMonitorArray []GetMonitorsMonitorInput

func (GetMonitorsMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitor)(nil)).Elem()
}

func (i GetMonitorsMonitorArray) ToGetMonitorsMonitorArrayOutput() GetMonitorsMonitorArrayOutput {
	return i.ToGetMonitorsMonitorArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorArray) ToGetMonitorsMonitorArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorArrayOutput)
}

type GetMonitorsMonitorOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitor)(nil)).Elem()
}

func (o GetMonitorsMonitorOutput) ToGetMonitorsMonitorOutput() GetMonitorsMonitorOutput {
	return o
}

func (o GetMonitorsMonitorOutput) ToGetMonitorsMonitorOutputWithContext(ctx context.Context) GetMonitorsMonitorOutput {
	return o
}

// ID of the monitor
func (o GetMonitorsMonitorOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitor) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the monitor
func (o GetMonitorsMonitorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitor) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the monitor.
func (o GetMonitorsMonitorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitor) string { return v.Type }).(pulumi.StringOutput)
}

type GetMonitorsMonitorArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitor)(nil)).Elem()
}

func (o GetMonitorsMonitorArrayOutput) ToGetMonitorsMonitorArrayOutput() GetMonitorsMonitorArrayOutput {
	return o
}

func (o GetMonitorsMonitorArrayOutput) ToGetMonitorsMonitorArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorArrayOutput {
	return o
}

func (o GetMonitorsMonitorArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitor {
		return vs[0].([]GetMonitorsMonitor)[vs[1].(int)]
	}).(GetMonitorsMonitorOutput)
}

type GetRoleUsersRoleUser struct {
	RoleId string `pulumi:"roleId"`
	UserId string `pulumi:"userId"`
}

// GetRoleUsersRoleUserInput is an input type that accepts GetRoleUsersRoleUserArgs and GetRoleUsersRoleUserOutput values.
// You can construct a concrete instance of `GetRoleUsersRoleUserInput` via:
//
//	GetRoleUsersRoleUserArgs{...}
type GetRoleUsersRoleUserInput interface {
	pulumi.Input

	ToGetRoleUsersRoleUserOutput() GetRoleUsersRoleUserOutput
	ToGetRoleUsersRoleUserOutputWithContext(context.Context) GetRoleUsersRoleUserOutput
}

type GetRoleUsersRoleUserArgs struct {
	RoleId pulumi.StringInput `pulumi:"roleId"`
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetRoleUsersRoleUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleUsersRoleUser)(nil)).Elem()
}

func (i GetRoleUsersRoleUserArgs) ToGetRoleUsersRoleUserOutput() GetRoleUsersRoleUserOutput {
	return i.ToGetRoleUsersRoleUserOutputWithContext(context.Background())
}

func (i GetRoleUsersRoleUserArgs) ToGetRoleUsersRoleUserOutputWithContext(ctx context.Context) GetRoleUsersRoleUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleUsersRoleUserOutput)
}

// GetRoleUsersRoleUserArrayInput is an input type that accepts GetRoleUsersRoleUserArray and GetRoleUsersRoleUserArrayOutput values.
// You can construct a concrete instance of `GetRoleUsersRoleUserArrayInput` via:
//
//	GetRoleUsersRoleUserArray{ GetRoleUsersRoleUserArgs{...} }
type GetRoleUsersRoleUserArrayInput interface {
	pulumi.Input

	ToGetRoleUsersRoleUserArrayOutput() GetRoleUsersRoleUserArrayOutput
	ToGetRoleUsersRoleUserArrayOutputWithContext(context.Context) GetRoleUsersRoleUserArrayOutput
}

type GetRoleUsersRoleUserArray []GetRoleUsersRoleUserInput

func (GetRoleUsersRoleUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleUsersRoleUser)(nil)).Elem()
}

func (i GetRoleUsersRoleUserArray) ToGetRoleUsersRoleUserArrayOutput() GetRoleUsersRoleUserArrayOutput {
	return i.ToGetRoleUsersRoleUserArrayOutputWithContext(context.Background())
}

func (i GetRoleUsersRoleUserArray) ToGetRoleUsersRoleUserArrayOutputWithContext(ctx context.Context) GetRoleUsersRoleUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleUsersRoleUserArrayOutput)
}

type GetRoleUsersRoleUserOutput struct{ *pulumi.OutputState }

func (GetRoleUsersRoleUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleUsersRoleUser)(nil)).Elem()
}

func (o GetRoleUsersRoleUserOutput) ToGetRoleUsersRoleUserOutput() GetRoleUsersRoleUserOutput {
	return o
}

func (o GetRoleUsersRoleUserOutput) ToGetRoleUsersRoleUserOutputWithContext(ctx context.Context) GetRoleUsersRoleUserOutput {
	return o
}

func (o GetRoleUsersRoleUserOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleUsersRoleUser) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o GetRoleUsersRoleUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleUsersRoleUser) string { return v.UserId }).(pulumi.StringOutput)
}

type GetRoleUsersRoleUserArrayOutput struct{ *pulumi.OutputState }

func (GetRoleUsersRoleUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleUsersRoleUser)(nil)).Elem()
}

func (o GetRoleUsersRoleUserArrayOutput) ToGetRoleUsersRoleUserArrayOutput() GetRoleUsersRoleUserArrayOutput {
	return o
}

func (o GetRoleUsersRoleUserArrayOutput) ToGetRoleUsersRoleUserArrayOutputWithContext(ctx context.Context) GetRoleUsersRoleUserArrayOutput {
	return o
}

func (o GetRoleUsersRoleUserArrayOutput) Index(i pulumi.IntInput) GetRoleUsersRoleUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoleUsersRoleUser {
		return vs[0].([]GetRoleUsersRoleUser)[vs[1].(int)]
	}).(GetRoleUsersRoleUserOutput)
}

type GetRolesRole struct {
	// ID of the Datadog role
	Id string `pulumi:"id"`
	// Name of the Datadog role
	Name string `pulumi:"name"`
	// Number of users that have this role.
	UserCount int `pulumi:"userCount"`
}

// GetRolesRoleInput is an input type that accepts GetRolesRoleArgs and GetRolesRoleOutput values.
// You can construct a concrete instance of `GetRolesRoleInput` via:
//
//	GetRolesRoleArgs{...}
type GetRolesRoleInput interface {
	pulumi.Input

	ToGetRolesRoleOutput() GetRolesRoleOutput
	ToGetRolesRoleOutputWithContext(context.Context) GetRolesRoleOutput
}

type GetRolesRoleArgs struct {
	// ID of the Datadog role
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the Datadog role
	Name pulumi.StringInput `pulumi:"name"`
	// Number of users that have this role.
	UserCount pulumi.IntInput `pulumi:"userCount"`
}

func (GetRolesRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesRole)(nil)).Elem()
}

func (i GetRolesRoleArgs) ToGetRolesRoleOutput() GetRolesRoleOutput {
	return i.ToGetRolesRoleOutputWithContext(context.Background())
}

func (i GetRolesRoleArgs) ToGetRolesRoleOutputWithContext(ctx context.Context) GetRolesRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesRoleOutput)
}

// GetRolesRoleArrayInput is an input type that accepts GetRolesRoleArray and GetRolesRoleArrayOutput values.
// You can construct a concrete instance of `GetRolesRoleArrayInput` via:
//
//	GetRolesRoleArray{ GetRolesRoleArgs{...} }
type GetRolesRoleArrayInput interface {
	pulumi.Input

	ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput
	ToGetRolesRoleArrayOutputWithContext(context.Context) GetRolesRoleArrayOutput
}

type GetRolesRoleArray []GetRolesRoleInput

func (GetRolesRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesRole)(nil)).Elem()
}

func (i GetRolesRoleArray) ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput {
	return i.ToGetRolesRoleArrayOutputWithContext(context.Background())
}

func (i GetRolesRoleArray) ToGetRolesRoleArrayOutputWithContext(ctx context.Context) GetRolesRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesRoleArrayOutput)
}

type GetRolesRoleOutput struct{ *pulumi.OutputState }

func (GetRolesRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesRole)(nil)).Elem()
}

func (o GetRolesRoleOutput) ToGetRolesRoleOutput() GetRolesRoleOutput {
	return o
}

func (o GetRolesRoleOutput) ToGetRolesRoleOutputWithContext(ctx context.Context) GetRolesRoleOutput {
	return o
}

// ID of the Datadog role
func (o GetRolesRoleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Datadog role
func (o GetRolesRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.Name }).(pulumi.StringOutput)
}

// Number of users that have this role.
func (o GetRolesRoleOutput) UserCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRolesRole) int { return v.UserCount }).(pulumi.IntOutput)
}

type GetRolesRoleArrayOutput struct{ *pulumi.OutputState }

func (GetRolesRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesRole)(nil)).Elem()
}

func (o GetRolesRoleArrayOutput) ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput {
	return o
}

func (o GetRolesRoleArrayOutput) ToGetRolesRoleArrayOutputWithContext(ctx context.Context) GetRolesRoleArrayOutput {
	return o
}

func (o GetRolesRoleArrayOutput) Index(i pulumi.IntInput) GetRolesRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRolesRole {
		return vs[0].([]GetRolesRole)[vs[1].(int)]
	}).(GetRolesRoleOutput)
}

type GetSecurityMonitoringFiltersFilter struct {
	// Exclusion filters to exclude some logs from the security filter.
	ExclusionFilters []GetSecurityMonitoringFiltersFilterExclusionFilter `pulumi:"exclusionFilters"`
	// The filtered data type.
	FilteredDataType *string `pulumi:"filteredDataType"`
	// Whether the security filter is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the security filter.
	Name string `pulumi:"name"`
	// The query of the security filter.
	Query string `pulumi:"query"`
	// The version of the security filter.
	Version int `pulumi:"version"`
}

// GetSecurityMonitoringFiltersFilterInput is an input type that accepts GetSecurityMonitoringFiltersFilterArgs and GetSecurityMonitoringFiltersFilterOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterInput` via:
//
//	GetSecurityMonitoringFiltersFilterArgs{...}
type GetSecurityMonitoringFiltersFilterInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterOutput() GetSecurityMonitoringFiltersFilterOutput
	ToGetSecurityMonitoringFiltersFilterOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterOutput
}

type GetSecurityMonitoringFiltersFilterArgs struct {
	// Exclusion filters to exclude some logs from the security filter.
	ExclusionFilters GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput `pulumi:"exclusionFilters"`
	// The filtered data type.
	FilteredDataType pulumi.StringPtrInput `pulumi:"filteredDataType"`
	// Whether the security filter is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the security filter.
	Name pulumi.StringInput `pulumi:"name"`
	// The query of the security filter.
	Query pulumi.StringInput `pulumi:"query"`
	// The version of the security filter.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetSecurityMonitoringFiltersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterArgs) ToGetSecurityMonitoringFiltersFilterOutput() GetSecurityMonitoringFiltersFilterOutput {
	return i.ToGetSecurityMonitoringFiltersFilterOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterArgs) ToGetSecurityMonitoringFiltersFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterOutput)
}

// GetSecurityMonitoringFiltersFilterArrayInput is an input type that accepts GetSecurityMonitoringFiltersFilterArray and GetSecurityMonitoringFiltersFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterArrayInput` via:
//
//	GetSecurityMonitoringFiltersFilterArray{ GetSecurityMonitoringFiltersFilterArgs{...} }
type GetSecurityMonitoringFiltersFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterArrayOutput() GetSecurityMonitoringFiltersFilterArrayOutput
	ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterArrayOutput
}

type GetSecurityMonitoringFiltersFilterArray []GetSecurityMonitoringFiltersFilterInput

func (GetSecurityMonitoringFiltersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterArray) ToGetSecurityMonitoringFiltersFilterArrayOutput() GetSecurityMonitoringFiltersFilterArrayOutput {
	return i.ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterArray) ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterArrayOutput)
}

type GetSecurityMonitoringFiltersFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterOutput) ToGetSecurityMonitoringFiltersFilterOutput() GetSecurityMonitoringFiltersFilterOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterOutput) ToGetSecurityMonitoringFiltersFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterOutput {
	return o
}

// Exclusion filters to exclude some logs from the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) ExclusionFilters() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) []GetSecurityMonitoringFiltersFilterExclusionFilter {
		return v.ExclusionFilters
	}).(GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput)
}

// The filtered data type.
func (o GetSecurityMonitoringFiltersFilterOutput) FilteredDataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) *string { return v.FilteredDataType }).(pulumi.StringPtrOutput)
}

// Whether the security filter is enabled.
func (o GetSecurityMonitoringFiltersFilterOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) string { return v.Name }).(pulumi.StringOutput)
}

// The query of the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) string { return v.Query }).(pulumi.StringOutput)
}

// The version of the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) int { return v.Version }).(pulumi.IntOutput)
}

type GetSecurityMonitoringFiltersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterArrayOutput() GetSecurityMonitoringFiltersFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringFiltersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringFiltersFilter {
		return vs[0].([]GetSecurityMonitoringFiltersFilter)[vs[1].(int)]
	}).(GetSecurityMonitoringFiltersFilterOutput)
}

type GetSecurityMonitoringFiltersFilterExclusionFilter struct {
	// Exclusion filter name.
	Name string `pulumi:"name"`
	// Exclusion filter query. Logs that match this query are excluded from the security filter.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringFiltersFilterExclusionFilterInput is an input type that accepts GetSecurityMonitoringFiltersFilterExclusionFilterArgs and GetSecurityMonitoringFiltersFilterExclusionFilterOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterExclusionFilterInput` via:
//
//	GetSecurityMonitoringFiltersFilterExclusionFilterArgs{...}
type GetSecurityMonitoringFiltersFilterExclusionFilterInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterExclusionFilterOutput() GetSecurityMonitoringFiltersFilterExclusionFilterOutput
	ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterOutput
}

type GetSecurityMonitoringFiltersFilterExclusionFilterArgs struct {
	// Exclusion filter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Exclusion filter query. Logs that match this query are excluded from the security filter.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringFiltersFilterExclusionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArgs) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutput() GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return i.ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArgs) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterExclusionFilterOutput)
}

// GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput is an input type that accepts GetSecurityMonitoringFiltersFilterExclusionFilterArray and GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput` via:
//
//	GetSecurityMonitoringFiltersFilterExclusionFilterArray{ GetSecurityMonitoringFiltersFilterExclusionFilterArgs{...} }
type GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput
	ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput
}

type GetSecurityMonitoringFiltersFilterExclusionFilterArray []GetSecurityMonitoringFiltersFilterExclusionFilterInput

func (GetSecurityMonitoringFiltersFilterExclusionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArray) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return i.ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArray) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput)
}

type GetSecurityMonitoringFiltersFilterExclusionFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterExclusionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutput() GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return o
}

// Exclusion filter name.
func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilterExclusionFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Exclusion filter query. Logs that match this query are excluded from the security filter.
func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilterExclusionFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringFiltersFilterExclusionFilter {
		return vs[0].([]GetSecurityMonitoringFiltersFilterExclusionFilter)[vs[1].(int)]
	}).(GetSecurityMonitoringFiltersFilterExclusionFilterOutput)
}

type GetSecurityMonitoringRulesRule struct {
	// Cases for generating signals.
	Cases []GetSecurityMonitoringRulesRuleCase `pulumi:"cases"`
	// Whether the rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.
	Filters []GetSecurityMonitoringRulesRuleFilter `pulumi:"filters"`
	// Whether the notifications include the triggering group-by values in their title.
	HasExtendedTitle *bool `pulumi:"hasExtendedTitle"`
	// Message for generated signals.
	Message string `pulumi:"message"`
	// The name of the rule.
	Name string `pulumi:"name"`
	// Options on rules.
	Options *GetSecurityMonitoringRulesRuleOptions `pulumi:"options"`
	// Queries for selecting logs which are part of the rule.
	Queries []GetSecurityMonitoringRulesRuleQuery `pulumi:"queries"`
	// Queries for selecting logs which are part of the rule.
	SignalQueries []GetSecurityMonitoringRulesRuleSignalQuery `pulumi:"signalQueries"`
	// Tags for generated signals.
	Tags []string `pulumi:"tags"`
	// Cases for generating signals for third-party rules. Only required and accepted for third-party rules
	ThirdPartyCases []GetSecurityMonitoringRulesRuleThirdPartyCase `pulumi:"thirdPartyCases"`
	// The rule type.
	Type *string `pulumi:"type"`
}

// GetSecurityMonitoringRulesRuleInput is an input type that accepts GetSecurityMonitoringRulesRuleArgs and GetSecurityMonitoringRulesRuleOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleInput` via:
//
//	GetSecurityMonitoringRulesRuleArgs{...}
type GetSecurityMonitoringRulesRuleInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOutput() GetSecurityMonitoringRulesRuleOutput
	ToGetSecurityMonitoringRulesRuleOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOutput
}

type GetSecurityMonitoringRulesRuleArgs struct {
	// Cases for generating signals.
	Cases GetSecurityMonitoringRulesRuleCaseArrayInput `pulumi:"cases"`
	// Whether the rule is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.
	Filters GetSecurityMonitoringRulesRuleFilterArrayInput `pulumi:"filters"`
	// Whether the notifications include the triggering group-by values in their title.
	HasExtendedTitle pulumi.BoolPtrInput `pulumi:"hasExtendedTitle"`
	// Message for generated signals.
	Message pulumi.StringInput `pulumi:"message"`
	// The name of the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Options on rules.
	Options GetSecurityMonitoringRulesRuleOptionsPtrInput `pulumi:"options"`
	// Queries for selecting logs which are part of the rule.
	Queries GetSecurityMonitoringRulesRuleQueryArrayInput `pulumi:"queries"`
	// Queries for selecting logs which are part of the rule.
	SignalQueries GetSecurityMonitoringRulesRuleSignalQueryArrayInput `pulumi:"signalQueries"`
	// Tags for generated signals.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Cases for generating signals for third-party rules. Only required and accepted for third-party rules
	ThirdPartyCases GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput `pulumi:"thirdPartyCases"`
	// The rule type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSecurityMonitoringRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleArgs) ToGetSecurityMonitoringRulesRuleOutput() GetSecurityMonitoringRulesRuleOutput {
	return i.ToGetSecurityMonitoringRulesRuleOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleArgs) ToGetSecurityMonitoringRulesRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOutput)
}

// GetSecurityMonitoringRulesRuleArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleArray and GetSecurityMonitoringRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleArray{ GetSecurityMonitoringRulesRuleArgs{...} }
type GetSecurityMonitoringRulesRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleArrayOutput() GetSecurityMonitoringRulesRuleArrayOutput
	ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleArrayOutput
}

type GetSecurityMonitoringRulesRuleArray []GetSecurityMonitoringRulesRuleInput

func (GetSecurityMonitoringRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleArray) ToGetSecurityMonitoringRulesRuleArrayOutput() GetSecurityMonitoringRulesRuleArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleArray) ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleArrayOutput)
}

type GetSecurityMonitoringRulesRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOutput) ToGetSecurityMonitoringRulesRuleOutput() GetSecurityMonitoringRulesRuleOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOutput) ToGetSecurityMonitoringRulesRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOutput {
	return o
}

// Cases for generating signals.
func (o GetSecurityMonitoringRulesRuleOutput) Cases() GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleCase { return v.Cases }).(GetSecurityMonitoringRulesRuleCaseArrayOutput)
}

// Whether the rule is enabled.
func (o GetSecurityMonitoringRulesRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.
func (o GetSecurityMonitoringRulesRuleOutput) Filters() GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleFilter { return v.Filters }).(GetSecurityMonitoringRulesRuleFilterArrayOutput)
}

// Whether the notifications include the triggering group-by values in their title.
func (o GetSecurityMonitoringRulesRuleOutput) HasExtendedTitle() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *bool { return v.HasExtendedTitle }).(pulumi.BoolPtrOutput)
}

// Message for generated signals.
func (o GetSecurityMonitoringRulesRuleOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) string { return v.Message }).(pulumi.StringOutput)
}

// The name of the rule.
func (o GetSecurityMonitoringRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

// Options on rules.
func (o GetSecurityMonitoringRulesRuleOutput) Options() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *GetSecurityMonitoringRulesRuleOptions { return v.Options }).(GetSecurityMonitoringRulesRuleOptionsPtrOutput)
}

// Queries for selecting logs which are part of the rule.
func (o GetSecurityMonitoringRulesRuleOutput) Queries() GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleQuery { return v.Queries }).(GetSecurityMonitoringRulesRuleQueryArrayOutput)
}

// Queries for selecting logs which are part of the rule.
func (o GetSecurityMonitoringRulesRuleOutput) SignalQueries() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleSignalQuery {
		return v.SignalQueries
	}).(GetSecurityMonitoringRulesRuleSignalQueryArrayOutput)
}

// Tags for generated signals.
func (o GetSecurityMonitoringRulesRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Cases for generating signals for third-party rules. Only required and accepted for third-party rules
func (o GetSecurityMonitoringRulesRuleOutput) ThirdPartyCases() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleThirdPartyCase {
		return v.ThirdPartyCases
	}).(GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput)
}

// The rule type.
func (o GetSecurityMonitoringRulesRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetSecurityMonitoringRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleArrayOutput) ToGetSecurityMonitoringRulesRuleArrayOutput() GetSecurityMonitoringRulesRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleArrayOutput) ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRule {
		return vs[0].([]GetSecurityMonitoringRulesRule)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleOutput)
}

type GetSecurityMonitoringRulesRuleCase struct {
	// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
	Condition *string `pulumi:"condition"`
	// Name of the case.
	Name *string `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications []string `pulumi:"notifications"`
	// Severity of the Security Signal.
	Status string `pulumi:"status"`
}

// GetSecurityMonitoringRulesRuleCaseInput is an input type that accepts GetSecurityMonitoringRulesRuleCaseArgs and GetSecurityMonitoringRulesRuleCaseOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleCaseInput` via:
//
//	GetSecurityMonitoringRulesRuleCaseArgs{...}
type GetSecurityMonitoringRulesRuleCaseInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleCaseOutput() GetSecurityMonitoringRulesRuleCaseOutput
	ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleCaseOutput
}

type GetSecurityMonitoringRulesRuleCaseArgs struct {
	// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// Name of the case.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications pulumi.StringArrayInput `pulumi:"notifications"`
	// Severity of the Security Signal.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSecurityMonitoringRulesRuleCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleCaseArgs) ToGetSecurityMonitoringRulesRuleCaseOutput() GetSecurityMonitoringRulesRuleCaseOutput {
	return i.ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleCaseArgs) ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleCaseOutput)
}

// GetSecurityMonitoringRulesRuleCaseArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleCaseArray and GetSecurityMonitoringRulesRuleCaseArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleCaseArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleCaseArray{ GetSecurityMonitoringRulesRuleCaseArgs{...} }
type GetSecurityMonitoringRulesRuleCaseArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleCaseArrayOutput() GetSecurityMonitoringRulesRuleCaseArrayOutput
	ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleCaseArrayOutput
}

type GetSecurityMonitoringRulesRuleCaseArray []GetSecurityMonitoringRulesRuleCaseInput

func (GetSecurityMonitoringRulesRuleCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleCaseArray) ToGetSecurityMonitoringRulesRuleCaseArrayOutput() GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleCaseArray) ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleCaseArrayOutput)
}

type GetSecurityMonitoringRulesRuleCaseOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleCaseOutput) ToGetSecurityMonitoringRulesRuleCaseOutput() GetSecurityMonitoringRulesRuleCaseOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseOutput) ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseOutput {
	return o
}

// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Name of the case.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notification targets for each rule case.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) []string { return v.Notifications }).(pulumi.StringArrayOutput)
}

// Severity of the Security Signal.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) string { return v.Status }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleCaseArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleCaseArrayOutput) ToGetSecurityMonitoringRulesRuleCaseArrayOutput() GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseArrayOutput) ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleCase {
		return vs[0].([]GetSecurityMonitoringRulesRuleCase)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleCaseOutput)
}

type GetSecurityMonitoringRulesRuleFilter struct {
	// The type of filtering action.
	Action string `pulumi:"action"`
	// Query for selecting logs to apply the filtering action.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringRulesRuleFilterInput is an input type that accepts GetSecurityMonitoringRulesRuleFilterArgs and GetSecurityMonitoringRulesRuleFilterOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleFilterInput` via:
//
//	GetSecurityMonitoringRulesRuleFilterArgs{...}
type GetSecurityMonitoringRulesRuleFilterInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleFilterOutput() GetSecurityMonitoringRulesRuleFilterOutput
	ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleFilterOutput
}

type GetSecurityMonitoringRulesRuleFilterArgs struct {
	// The type of filtering action.
	Action pulumi.StringInput `pulumi:"action"`
	// Query for selecting logs to apply the filtering action.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringRulesRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleFilterArgs) ToGetSecurityMonitoringRulesRuleFilterOutput() GetSecurityMonitoringRulesRuleFilterOutput {
	return i.ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleFilterArgs) ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleFilterOutput)
}

// GetSecurityMonitoringRulesRuleFilterArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleFilterArray and GetSecurityMonitoringRulesRuleFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleFilterArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleFilterArray{ GetSecurityMonitoringRulesRuleFilterArgs{...} }
type GetSecurityMonitoringRulesRuleFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleFilterArrayOutput() GetSecurityMonitoringRulesRuleFilterArrayOutput
	ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleFilterArrayOutput
}

type GetSecurityMonitoringRulesRuleFilterArray []GetSecurityMonitoringRulesRuleFilterInput

func (GetSecurityMonitoringRulesRuleFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleFilterArray) ToGetSecurityMonitoringRulesRuleFilterArrayOutput() GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleFilterArray) ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleFilterArrayOutput)
}

type GetSecurityMonitoringRulesRuleFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleFilterOutput) ToGetSecurityMonitoringRulesRuleFilterOutput() GetSecurityMonitoringRulesRuleFilterOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleFilterOutput) ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterOutput {
	return o
}

// The type of filtering action.
func (o GetSecurityMonitoringRulesRuleFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleFilter) string { return v.Action }).(pulumi.StringOutput)
}

// Query for selecting logs to apply the filtering action.
func (o GetSecurityMonitoringRulesRuleFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleFilterArrayOutput) ToGetSecurityMonitoringRulesRuleFilterArrayOutput() GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleFilterArrayOutput) ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleFilter {
		return vs[0].([]GetSecurityMonitoringRulesRuleFilter)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleFilterOutput)
}

type GetSecurityMonitoringRulesRuleOptions struct {
	// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
	DecreaseCriticalityBasedOnEnv *bool `pulumi:"decreaseCriticalityBasedOnEnv"`
	// The detection method.
	DetectionMethod *string `pulumi:"detectionMethod"`
	// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
	EvaluationWindow *int `pulumi:"evaluationWindow"`
	// Options for rules using the impossible travel detection method.
	ImpossibleTravelOptions *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions `pulumi:"impossibleTravelOptions"`
	// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
	KeepAlive *int `pulumi:"keepAlive"`
	// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
	MaxSignalDuration *int `pulumi:"maxSignalDuration"`
	// New value rules specific options.
	NewValueOptions *GetSecurityMonitoringRulesRuleOptionsNewValueOptions `pulumi:"newValueOptions"`
	// Options for rules using the third-party detection method.
	ThirdPartyRuleOptions *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions `pulumi:"thirdPartyRuleOptions"`
}

// GetSecurityMonitoringRulesRuleOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsArgs and GetSecurityMonitoringRulesRuleOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsArgs struct {
	// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
	DecreaseCriticalityBasedOnEnv pulumi.BoolPtrInput `pulumi:"decreaseCriticalityBasedOnEnv"`
	// The detection method.
	DetectionMethod pulumi.StringPtrInput `pulumi:"detectionMethod"`
	// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
	EvaluationWindow pulumi.IntPtrInput `pulumi:"evaluationWindow"`
	// Options for rules using the impossible travel detection method.
	ImpossibleTravelOptions GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput `pulumi:"impossibleTravelOptions"`
	// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
	KeepAlive pulumi.IntPtrInput `pulumi:"keepAlive"`
	// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
	MaxSignalDuration pulumi.IntPtrInput `pulumi:"maxSignalDuration"`
	// New value rules specific options.
	NewValueOptions GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput `pulumi:"newValueOptions"`
	// Options for rules using the third-party detection method.
	ThirdPartyRuleOptions GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput `pulumi:"thirdPartyRuleOptions"`
}

func (GetSecurityMonitoringRulesRuleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsArgs, GetSecurityMonitoringRulesRuleOptionsPtr and GetSecurityMonitoringRulesRuleOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsPtrType GetSecurityMonitoringRulesRuleOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsArgs) GetSecurityMonitoringRulesRuleOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsPtrOutput)
}

// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) DecreaseCriticalityBasedOnEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *bool { return v.DecreaseCriticalityBasedOnEnv }).(pulumi.BoolPtrOutput)
}

// The detection method.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) DetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *string { return v.DetectionMethod }).(pulumi.StringPtrOutput)
}

// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) EvaluationWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *int { return v.EvaluationWindow }).(pulumi.IntPtrOutput)
}

// Options for rules using the impossible travel detection method.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) ImpossibleTravelOptions() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		return v.ImpossibleTravelOptions
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
func (o GetSecurityMonitoringRulesRuleOptionsOutput) KeepAlive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *int { return v.KeepAlive }).(pulumi.IntPtrOutput)
}

// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) MaxSignalDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *int { return v.MaxSignalDuration }).(pulumi.IntPtrOutput)
}

// New value rules specific options.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) NewValueOptions() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		return v.NewValueOptions
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

// Options for rules using the third-party detection method.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) ThirdPartyRuleOptions() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		return v.ThirdPartyRuleOptions
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) GetSecurityMonitoringRulesRuleOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsOutput)
}

// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) DecreaseCriticalityBasedOnEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DecreaseCriticalityBasedOnEnv
	}).(pulumi.BoolPtrOutput)
}

// The detection method.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) DetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMethod
	}).(pulumi.StringPtrOutput)
}

// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) EvaluationWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationWindow
	}).(pulumi.IntPtrOutput)
}

// Options for rules using the impossible travel detection method.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ImpossibleTravelOptions() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		if v == nil {
			return nil
		}
		return v.ImpossibleTravelOptions
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) KeepAlive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.KeepAlive
	}).(pulumi.IntPtrOutput)
}

// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) MaxSignalDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.MaxSignalDuration
	}).(pulumi.IntPtrOutput)
}

// New value rules specific options.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) NewValueOptions() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		if v == nil {
			return nil
		}
		return v.NewValueOptions
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

// Options for rules using the third-party detection method.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ThirdPartyRuleOptions() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		if v == nil {
			return nil
		}
		return v.ThirdPartyRuleOptions
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions struct {
	// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
	BaselineUserLocations *bool `pulumi:"baselineUserLocations"`
}

// GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs and GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs struct {
	// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
	BaselineUserLocations pulumi.BoolPtrInput `pulumi:"baselineUserLocations"`
}

func (GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs, GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtr and GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) BaselineUserLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) *bool {
		return v.BaselineUserLocations
	}).(pulumi.BoolPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput)
}

// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) BaselineUserLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) *bool {
		if v == nil {
			return nil
		}
		return v.BaselineUserLocations
	}).(pulumi.BoolPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptions struct {
	// The duration in days after which a learned value is forgotten.
	ForgetAfter int `pulumi:"forgetAfter"`
	// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
	LearningDuration *int `pulumi:"learningDuration"`
	// The learning method used to determine when signals should be generated for values that weren't learned.
	LearningMethod *string `pulumi:"learningMethod"`
	// A number of occurrences after which signals are generated for values that weren't learned.
	LearningThreshold *int `pulumi:"learningThreshold"`
}

// GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs and GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs struct {
	// The duration in days after which a learned value is forgotten.
	ForgetAfter pulumi.IntInput `pulumi:"forgetAfter"`
	// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
	LearningDuration pulumi.IntPtrInput `pulumi:"learningDuration"`
	// The learning method used to determine when signals should be generated for values that weren't learned.
	LearningMethod pulumi.StringPtrInput `pulumi:"learningMethod"`
	// A number of occurrences after which signals are generated for values that weren't learned.
	LearningThreshold pulumi.IntPtrInput `pulumi:"learningThreshold"`
}

func (GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs, GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtr and GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

// The duration in days after which a learned value is forgotten.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ForgetAfter() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) int { return v.ForgetAfter }).(pulumi.IntOutput)
}

// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) LearningDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int { return v.LearningDuration }).(pulumi.IntPtrOutput)
}

// The learning method used to determine when signals should be generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) LearningMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *string { return v.LearningMethod }).(pulumi.StringPtrOutput)
}

// A number of occurrences after which signals are generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) LearningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int { return v.LearningThreshold }).(pulumi.IntPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptionsNewValueOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput)
}

// The duration in days after which a learned value is forgotten.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ForgetAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return &v.ForgetAfter
	}).(pulumi.IntPtrOutput)
}

// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) LearningDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return v.LearningDuration
	}).(pulumi.IntPtrOutput)
}

// The learning method used to determine when signals should be generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) LearningMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *string {
		if v == nil {
			return nil
		}
		return v.LearningMethod
	}).(pulumi.StringPtrOutput)
}

// A number of occurrences after which signals are generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) LearningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return v.LearningThreshold
	}).(pulumi.IntPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions struct {
	// Notification targets for the default rule case, when none of the third-party cases match.
	DefaultNotifications []string `pulumi:"defaultNotifications"`
	// Severity of the default rule case, when none of the third-party cases match.
	DefaultStatus string `pulumi:"defaultStatus"`
	// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
	RootQueries []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery `pulumi:"rootQueries"`
	// A template for the signal title; if omitted, the title is generated based on the case name.
	SignalTitleTemplate *string `pulumi:"signalTitleTemplate"`
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs struct {
	// Notification targets for the default rule case, when none of the third-party cases match.
	DefaultNotifications pulumi.StringArrayInput `pulumi:"defaultNotifications"`
	// Severity of the default rule case, when none of the third-party cases match.
	DefaultStatus pulumi.StringInput `pulumi:"defaultStatus"`
	// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
	RootQueries GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput `pulumi:"rootQueries"`
	// A template for the signal title; if omitted, the title is generated based on the case name.
	SignalTitleTemplate pulumi.StringPtrInput `pulumi:"signalTitleTemplate"`
}

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs, GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtr and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

// Notification targets for the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) DefaultNotifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []string {
		return v.DefaultNotifications
	}).(pulumi.StringArrayOutput)
}

// Severity of the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) DefaultStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) string { return v.DefaultStatus }).(pulumi.StringOutput)
}

// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) RootQueries() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery {
		return v.RootQueries
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

// A template for the signal title; if omitted, the title is generated based on the case name.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) SignalTitleTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *string {
		return v.SignalTitleTemplate
	}).(pulumi.StringPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput)
}

// Notification targets for the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) DefaultNotifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []string {
		if v == nil {
			return nil
		}
		return v.DefaultNotifications
	}).(pulumi.StringArrayOutput)
}

// Severity of the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) DefaultStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultStatus
	}).(pulumi.StringPtrOutput)
}

// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) RootQueries() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery {
		if v == nil {
			return nil
		}
		return v.RootQueries
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

// A template for the signal title; if omitted, the title is generated based on the case name.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) SignalTitleTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignalTitleTemplate
	}).(pulumi.StringPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery struct {
	// Fields to group by. If empty, each log triggers a signal.
	GroupByFields []string `pulumi:"groupByFields"`
	// Query to filter logs.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs{...}
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs struct {
	// Fields to group by. If empty, each log triggers a signal.
	GroupByFields pulumi.StringArrayInput `pulumi:"groupByFields"`
	// Query to filter logs.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput)
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray{ GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs{...} }
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return o
}

// Fields to group by. If empty, each log triggers a signal.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) GroupByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery) []string {
		return v.GroupByFields
	}).(pulumi.StringArrayOutput)
}

// Query to filter logs.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery {
		return vs[0].([]GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput)
}

type GetSecurityMonitoringRulesRuleQuery struct {
	// **Deprecated**. It won't be applied anymore.
	//
	// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
	AgentRules []GetSecurityMonitoringRulesRuleQueryAgentRule `pulumi:"agentRules"`
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation *string `pulumi:"aggregation"`
	// Field for which the cardinality is measured. Sent as an array.
	DistinctFields []string `pulumi:"distinctFields"`
	// Fields to group by.
	GroupByFields []string `pulumi:"groupByFields"`
	// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations.
	//
	// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
	Metric *string `pulumi:"metric"`
	// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
	Metrics []string `pulumi:"metrics"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name *string `pulumi:"name"`
	// Query to run on logs.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringRulesRuleQueryInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryArgs and GetSecurityMonitoringRulesRuleQueryOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryArgs{...}
type GetSecurityMonitoringRulesRuleQueryInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryOutput() GetSecurityMonitoringRulesRuleQueryOutput
	ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryOutput
}

type GetSecurityMonitoringRulesRuleQueryArgs struct {
	// **Deprecated**. It won't be applied anymore.
	//
	// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
	AgentRules GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput `pulumi:"agentRules"`
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Field for which the cardinality is measured. Sent as an array.
	DistinctFields pulumi.StringArrayInput `pulumi:"distinctFields"`
	// Fields to group by.
	GroupByFields pulumi.StringArrayInput `pulumi:"groupByFields"`
	// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations.
	//
	// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
	Metrics pulumi.StringArrayInput `pulumi:"metrics"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Query to run on logs.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringRulesRuleQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryArgs) ToGetSecurityMonitoringRulesRuleQueryOutput() GetSecurityMonitoringRulesRuleQueryOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryArgs) ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryOutput)
}

// GetSecurityMonitoringRulesRuleQueryArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryArray and GetSecurityMonitoringRulesRuleQueryArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryArray{ GetSecurityMonitoringRulesRuleQueryArgs{...} }
type GetSecurityMonitoringRulesRuleQueryArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryArrayOutput() GetSecurityMonitoringRulesRuleQueryArrayOutput
	ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryArrayOutput
}

type GetSecurityMonitoringRulesRuleQueryArray []GetSecurityMonitoringRulesRuleQueryInput

func (GetSecurityMonitoringRulesRuleQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryArray) ToGetSecurityMonitoringRulesRuleQueryArrayOutput() GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryArray) ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryArrayOutput)
}

type GetSecurityMonitoringRulesRuleQueryOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryOutput) ToGetSecurityMonitoringRulesRuleQueryOutput() GetSecurityMonitoringRulesRuleQueryOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryOutput) ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryOutput {
	return o
}

// **Deprecated**. It won't be applied anymore.
//
// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
func (o GetSecurityMonitoringRulesRuleQueryOutput) AgentRules() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []GetSecurityMonitoringRulesRuleQueryAgentRule {
		return v.AgentRules
	}).(GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput)
}

// The aggregation type. For Signal Correlation rules, it must be event_count.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Field for which the cardinality is measured. Sent as an array.
func (o GetSecurityMonitoringRulesRuleQueryOutput) DistinctFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []string { return v.DistinctFields }).(pulumi.StringArrayOutput)
}

// Fields to group by.
func (o GetSecurityMonitoringRulesRuleQueryOutput) GroupByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []string { return v.GroupByFields }).(pulumi.StringArrayOutput)
}

// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations.
//
// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Metrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []string { return v.Metrics }).(pulumi.StringArrayOutput)
}

// Name of the query. Not compatible with `newValue` aggregations.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Query to run on logs.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryArrayOutput) ToGetSecurityMonitoringRulesRuleQueryArrayOutput() GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryArrayOutput) ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleQuery {
		return vs[0].([]GetSecurityMonitoringRulesRuleQuery)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleQueryOutput)
}

type GetSecurityMonitoringRulesRuleQueryAgentRule struct {
	// **Deprecated**. It won't be applied anymore.
	AgentRuleId string `pulumi:"agentRuleId"`
	// **Deprecated**. It won't be applied anymore.
	Expression string `pulumi:"expression"`
}

// GetSecurityMonitoringRulesRuleQueryAgentRuleInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryAgentRuleArgs and GetSecurityMonitoringRulesRuleQueryAgentRuleOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryAgentRuleInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryAgentRuleArgs{...}
type GetSecurityMonitoringRulesRuleQueryAgentRuleInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleOutput
	ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleArgs struct {
	// **Deprecated**. It won't be applied anymore.
	AgentRuleId pulumi.StringInput `pulumi:"agentRuleId"`
	// **Deprecated**. It won't be applied anymore.
	Expression pulumi.StringInput `pulumi:"expression"`
}

func (GetSecurityMonitoringRulesRuleQueryAgentRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArgs) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArgs) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryAgentRuleOutput)
}

// GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryAgentRuleArray and GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryAgentRuleArray{ GetSecurityMonitoringRulesRuleQueryAgentRuleArgs{...} }
type GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput
	ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleArray []GetSecurityMonitoringRulesRuleQueryAgentRuleInput

func (GetSecurityMonitoringRulesRuleQueryAgentRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArray) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArray) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput)
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return o
}

// **Deprecated**. It won't be applied anymore.
func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) AgentRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQueryAgentRule) string { return v.AgentRuleId }).(pulumi.StringOutput)
}

// **Deprecated**. It won't be applied anymore.
func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQueryAgentRule) string { return v.Expression }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleQueryAgentRule {
		return vs[0].([]GetSecurityMonitoringRulesRuleQueryAgentRule)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleQueryAgentRuleOutput)
}

type GetSecurityMonitoringRulesRuleSignalQuery struct {
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation *string `pulumi:"aggregation"`
	// Fields to correlate by.
	CorrelatedByFields []string `pulumi:"correlatedByFields"`
	// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule.
	CorrelatedQueryIndex *string `pulumi:"correlatedQueryIndex"`
	// Default Rule ID of the signal to correlate. This value is READ-ONLY.
	DefaultRuleId *string `pulumi:"defaultRuleId"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name *string `pulumi:"name"`
	// Rule ID of the signal to correlate.
	RuleId string `pulumi:"ruleId"`
}

// GetSecurityMonitoringRulesRuleSignalQueryInput is an input type that accepts GetSecurityMonitoringRulesRuleSignalQueryArgs and GetSecurityMonitoringRulesRuleSignalQueryOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleSignalQueryInput` via:
//
//	GetSecurityMonitoringRulesRuleSignalQueryArgs{...}
type GetSecurityMonitoringRulesRuleSignalQueryInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleSignalQueryOutput() GetSecurityMonitoringRulesRuleSignalQueryOutput
	ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleSignalQueryOutput
}

type GetSecurityMonitoringRulesRuleSignalQueryArgs struct {
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Fields to correlate by.
	CorrelatedByFields pulumi.StringArrayInput `pulumi:"correlatedByFields"`
	// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule.
	CorrelatedQueryIndex pulumi.StringPtrInput `pulumi:"correlatedQueryIndex"`
	// Default Rule ID of the signal to correlate. This value is READ-ONLY.
	DefaultRuleId pulumi.StringPtrInput `pulumi:"defaultRuleId"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule ID of the signal to correlate.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (GetSecurityMonitoringRulesRuleSignalQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArgs) ToGetSecurityMonitoringRulesRuleSignalQueryOutput() GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return i.ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArgs) ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleSignalQueryOutput)
}

// GetSecurityMonitoringRulesRuleSignalQueryArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleSignalQueryArray and GetSecurityMonitoringRulesRuleSignalQueryArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleSignalQueryArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleSignalQueryArray{ GetSecurityMonitoringRulesRuleSignalQueryArgs{...} }
type GetSecurityMonitoringRulesRuleSignalQueryArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutput() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput
	ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleSignalQueryArrayOutput
}

type GetSecurityMonitoringRulesRuleSignalQueryArray []GetSecurityMonitoringRulesRuleSignalQueryInput

func (GetSecurityMonitoringRulesRuleSignalQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArray) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutput() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArray) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleSignalQueryArrayOutput)
}

type GetSecurityMonitoringRulesRuleSignalQueryOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleSignalQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) ToGetSecurityMonitoringRulesRuleSignalQueryOutput() GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return o
}

// The aggregation type. For Signal Correlation rules, it must be event_count.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Fields to correlate by.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) CorrelatedByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) []string { return v.CorrelatedByFields }).(pulumi.StringArrayOutput)
}

// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) CorrelatedQueryIndex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.CorrelatedQueryIndex }).(pulumi.StringPtrOutput)
}

// Default Rule ID of the signal to correlate. This value is READ-ONLY.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) DefaultRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.DefaultRuleId }).(pulumi.StringPtrOutput)
}

// Name of the query. Not compatible with `newValue` aggregations.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule ID of the signal to correlate.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) string { return v.RuleId }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleSignalQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutput() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleSignalQuery {
		return vs[0].([]GetSecurityMonitoringRulesRuleSignalQuery)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleSignalQueryOutput)
}

type GetSecurityMonitoringRulesRuleThirdPartyCase struct {
	// Name of the case.
	Name *string `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications []string `pulumi:"notifications"`
	// A query to associate a third-party event to this case.
	Query *string `pulumi:"query"`
	// Severity of the Security Signal.
	Status string `pulumi:"status"`
}

// GetSecurityMonitoringRulesRuleThirdPartyCaseInput is an input type that accepts GetSecurityMonitoringRulesRuleThirdPartyCaseArgs and GetSecurityMonitoringRulesRuleThirdPartyCaseOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleThirdPartyCaseInput` via:
//
//	GetSecurityMonitoringRulesRuleThirdPartyCaseArgs{...}
type GetSecurityMonitoringRulesRuleThirdPartyCaseInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseOutput
	ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseArgs struct {
	// Name of the case.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications pulumi.StringArrayInput `pulumi:"notifications"`
	// A query to associate a third-party event to this case.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Severity of the Security Signal.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSecurityMonitoringRulesRuleThirdPartyCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArgs) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return i.ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArgs) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleThirdPartyCaseOutput)
}

// GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleThirdPartyCaseArray and GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleThirdPartyCaseArray{ GetSecurityMonitoringRulesRuleThirdPartyCaseArgs{...} }
type GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput
	ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseArray []GetSecurityMonitoringRulesRuleThirdPartyCaseInput

func (GetSecurityMonitoringRulesRuleThirdPartyCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArray) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArray) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput)
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return o
}

// Name of the case.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notification targets for each rule case.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) []string { return v.Notifications }).(pulumi.StringArrayOutput)
}

// A query to associate a third-party event to this case.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Severity of the Security Signal.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) string { return v.Status }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleThirdPartyCase {
		return vs[0].([]GetSecurityMonitoringRulesRuleThirdPartyCase)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleThirdPartyCaseOutput)
}

type GetSecurityMonitoringSuppressionsSuppression struct {
	DataExclusionQuery string `pulumi:"dataExclusionQuery"`
	Description        string `pulumi:"description"`
	Enabled            bool   `pulumi:"enabled"`
	ExpirationDate     string `pulumi:"expirationDate"`
	Id                 string `pulumi:"id"`
	Name               string `pulumi:"name"`
	RuleQuery          string `pulumi:"ruleQuery"`
	SuppressionQuery   string `pulumi:"suppressionQuery"`
}

// GetSecurityMonitoringSuppressionsSuppressionInput is an input type that accepts GetSecurityMonitoringSuppressionsSuppressionArgs and GetSecurityMonitoringSuppressionsSuppressionOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringSuppressionsSuppressionInput` via:
//
//	GetSecurityMonitoringSuppressionsSuppressionArgs{...}
type GetSecurityMonitoringSuppressionsSuppressionInput interface {
	pulumi.Input

	ToGetSecurityMonitoringSuppressionsSuppressionOutput() GetSecurityMonitoringSuppressionsSuppressionOutput
	ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(context.Context) GetSecurityMonitoringSuppressionsSuppressionOutput
}

type GetSecurityMonitoringSuppressionsSuppressionArgs struct {
	DataExclusionQuery pulumi.StringInput `pulumi:"dataExclusionQuery"`
	Description        pulumi.StringInput `pulumi:"description"`
	Enabled            pulumi.BoolInput   `pulumi:"enabled"`
	ExpirationDate     pulumi.StringInput `pulumi:"expirationDate"`
	Id                 pulumi.StringInput `pulumi:"id"`
	Name               pulumi.StringInput `pulumi:"name"`
	RuleQuery          pulumi.StringInput `pulumi:"ruleQuery"`
	SuppressionQuery   pulumi.StringInput `pulumi:"suppressionQuery"`
}

func (GetSecurityMonitoringSuppressionsSuppressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (i GetSecurityMonitoringSuppressionsSuppressionArgs) ToGetSecurityMonitoringSuppressionsSuppressionOutput() GetSecurityMonitoringSuppressionsSuppressionOutput {
	return i.ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringSuppressionsSuppressionArgs) ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringSuppressionsSuppressionOutput)
}

// GetSecurityMonitoringSuppressionsSuppressionArrayInput is an input type that accepts GetSecurityMonitoringSuppressionsSuppressionArray and GetSecurityMonitoringSuppressionsSuppressionArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringSuppressionsSuppressionArrayInput` via:
//
//	GetSecurityMonitoringSuppressionsSuppressionArray{ GetSecurityMonitoringSuppressionsSuppressionArgs{...} }
type GetSecurityMonitoringSuppressionsSuppressionArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringSuppressionsSuppressionArrayOutput() GetSecurityMonitoringSuppressionsSuppressionArrayOutput
	ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(context.Context) GetSecurityMonitoringSuppressionsSuppressionArrayOutput
}

type GetSecurityMonitoringSuppressionsSuppressionArray []GetSecurityMonitoringSuppressionsSuppressionInput

func (GetSecurityMonitoringSuppressionsSuppressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (i GetSecurityMonitoringSuppressionsSuppressionArray) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutput() GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return i.ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringSuppressionsSuppressionArray) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringSuppressionsSuppressionArrayOutput)
}

type GetSecurityMonitoringSuppressionsSuppressionOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringSuppressionsSuppressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) ToGetSecurityMonitoringSuppressionsSuppressionOutput() GetSecurityMonitoringSuppressionsSuppressionOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) DataExclusionQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.DataExclusionQuery }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) RuleQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.RuleQuery }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) SuppressionQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.SuppressionQuery }).(pulumi.StringOutput)
}

type GetSecurityMonitoringSuppressionsSuppressionArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringSuppressionsSuppressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (o GetSecurityMonitoringSuppressionsSuppressionArrayOutput) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutput() GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionArrayOutput) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringSuppressionsSuppressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringSuppressionsSuppression {
		return vs[0].([]GetSecurityMonitoringSuppressionsSuppression)[vs[1].(int)]
	}).(GetSecurityMonitoringSuppressionsSuppressionOutput)
}

type GetServiceLevelObjectiveQuery struct {
	// The sum of the `total` events.
	Denominator string `pulumi:"denominator"`
	// The sum of all the `good` events.
	Numerator string `pulumi:"numerator"`
}

// GetServiceLevelObjectiveQueryInput is an input type that accepts GetServiceLevelObjectiveQueryArgs and GetServiceLevelObjectiveQueryOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectiveQueryInput` via:
//
//	GetServiceLevelObjectiveQueryArgs{...}
type GetServiceLevelObjectiveQueryInput interface {
	pulumi.Input

	ToGetServiceLevelObjectiveQueryOutput() GetServiceLevelObjectiveQueryOutput
	ToGetServiceLevelObjectiveQueryOutputWithContext(context.Context) GetServiceLevelObjectiveQueryOutput
}

type GetServiceLevelObjectiveQueryArgs struct {
	// The sum of the `total` events.
	Denominator pulumi.StringInput `pulumi:"denominator"`
	// The sum of all the `good` events.
	Numerator pulumi.StringInput `pulumi:"numerator"`
}

func (GetServiceLevelObjectiveQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (i GetServiceLevelObjectiveQueryArgs) ToGetServiceLevelObjectiveQueryOutput() GetServiceLevelObjectiveQueryOutput {
	return i.ToGetServiceLevelObjectiveQueryOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectiveQueryArgs) ToGetServiceLevelObjectiveQueryOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectiveQueryOutput)
}

// GetServiceLevelObjectiveQueryArrayInput is an input type that accepts GetServiceLevelObjectiveQueryArray and GetServiceLevelObjectiveQueryArrayOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectiveQueryArrayInput` via:
//
//	GetServiceLevelObjectiveQueryArray{ GetServiceLevelObjectiveQueryArgs{...} }
type GetServiceLevelObjectiveQueryArrayInput interface {
	pulumi.Input

	ToGetServiceLevelObjectiveQueryArrayOutput() GetServiceLevelObjectiveQueryArrayOutput
	ToGetServiceLevelObjectiveQueryArrayOutputWithContext(context.Context) GetServiceLevelObjectiveQueryArrayOutput
}

type GetServiceLevelObjectiveQueryArray []GetServiceLevelObjectiveQueryInput

func (GetServiceLevelObjectiveQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (i GetServiceLevelObjectiveQueryArray) ToGetServiceLevelObjectiveQueryArrayOutput() GetServiceLevelObjectiveQueryArrayOutput {
	return i.ToGetServiceLevelObjectiveQueryArrayOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectiveQueryArray) ToGetServiceLevelObjectiveQueryArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectiveQueryArrayOutput)
}

type GetServiceLevelObjectiveQueryOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectiveQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (o GetServiceLevelObjectiveQueryOutput) ToGetServiceLevelObjectiveQueryOutput() GetServiceLevelObjectiveQueryOutput {
	return o
}

func (o GetServiceLevelObjectiveQueryOutput) ToGetServiceLevelObjectiveQueryOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryOutput {
	return o
}

// The sum of the `total` events.
func (o GetServiceLevelObjectiveQueryOutput) Denominator() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectiveQuery) string { return v.Denominator }).(pulumi.StringOutput)
}

// The sum of all the `good` events.
func (o GetServiceLevelObjectiveQueryOutput) Numerator() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectiveQuery) string { return v.Numerator }).(pulumi.StringOutput)
}

type GetServiceLevelObjectiveQueryArrayOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectiveQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (o GetServiceLevelObjectiveQueryArrayOutput) ToGetServiceLevelObjectiveQueryArrayOutput() GetServiceLevelObjectiveQueryArrayOutput {
	return o
}

func (o GetServiceLevelObjectiveQueryArrayOutput) ToGetServiceLevelObjectiveQueryArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryArrayOutput {
	return o
}

func (o GetServiceLevelObjectiveQueryArrayOutput) Index(i pulumi.IntInput) GetServiceLevelObjectiveQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceLevelObjectiveQuery {
		return vs[0].([]GetServiceLevelObjectiveQuery)[vs[1].(int)]
	}).(GetServiceLevelObjectiveQueryOutput)
}

type GetServiceLevelObjectivesSlo struct {
	// ID of the Datadog service level objective
	Id string `pulumi:"id"`
	// Name of the Datadog service level objective
	Name string `pulumi:"name"`
	// The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.
	Type string `pulumi:"type"`
}

// GetServiceLevelObjectivesSloInput is an input type that accepts GetServiceLevelObjectivesSloArgs and GetServiceLevelObjectivesSloOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectivesSloInput` via:
//
//	GetServiceLevelObjectivesSloArgs{...}
type GetServiceLevelObjectivesSloInput interface {
	pulumi.Input

	ToGetServiceLevelObjectivesSloOutput() GetServiceLevelObjectivesSloOutput
	ToGetServiceLevelObjectivesSloOutputWithContext(context.Context) GetServiceLevelObjectivesSloOutput
}

type GetServiceLevelObjectivesSloArgs struct {
	// ID of the Datadog service level objective
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the Datadog service level objective
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServiceLevelObjectivesSloArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (i GetServiceLevelObjectivesSloArgs) ToGetServiceLevelObjectivesSloOutput() GetServiceLevelObjectivesSloOutput {
	return i.ToGetServiceLevelObjectivesSloOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectivesSloArgs) ToGetServiceLevelObjectivesSloOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectivesSloOutput)
}

// GetServiceLevelObjectivesSloArrayInput is an input type that accepts GetServiceLevelObjectivesSloArray and GetServiceLevelObjectivesSloArrayOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectivesSloArrayInput` via:
//
//	GetServiceLevelObjectivesSloArray{ GetServiceLevelObjectivesSloArgs{...} }
type GetServiceLevelObjectivesSloArrayInput interface {
	pulumi.Input

	ToGetServiceLevelObjectivesSloArrayOutput() GetServiceLevelObjectivesSloArrayOutput
	ToGetServiceLevelObjectivesSloArrayOutputWithContext(context.Context) GetServiceLevelObjectivesSloArrayOutput
}

type GetServiceLevelObjectivesSloArray []GetServiceLevelObjectivesSloInput

func (GetServiceLevelObjectivesSloArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (i GetServiceLevelObjectivesSloArray) ToGetServiceLevelObjectivesSloArrayOutput() GetServiceLevelObjectivesSloArrayOutput {
	return i.ToGetServiceLevelObjectivesSloArrayOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectivesSloArray) ToGetServiceLevelObjectivesSloArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectivesSloArrayOutput)
}

type GetServiceLevelObjectivesSloOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectivesSloOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (o GetServiceLevelObjectivesSloOutput) ToGetServiceLevelObjectivesSloOutput() GetServiceLevelObjectivesSloOutput {
	return o
}

func (o GetServiceLevelObjectivesSloOutput) ToGetServiceLevelObjectivesSloOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloOutput {
	return o
}

// ID of the Datadog service level objective
func (o GetServiceLevelObjectivesSloOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectivesSlo) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Datadog service level objective
func (o GetServiceLevelObjectivesSloOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectivesSlo) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.
func (o GetServiceLevelObjectivesSloOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectivesSlo) string { return v.Type }).(pulumi.StringOutput)
}

type GetServiceLevelObjectivesSloArrayOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectivesSloArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (o GetServiceLevelObjectivesSloArrayOutput) ToGetServiceLevelObjectivesSloArrayOutput() GetServiceLevelObjectivesSloArrayOutput {
	return o
}

func (o GetServiceLevelObjectivesSloArrayOutput) ToGetServiceLevelObjectivesSloArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloArrayOutput {
	return o
}

func (o GetServiceLevelObjectivesSloArrayOutput) Index(i pulumi.IntInput) GetServiceLevelObjectivesSloOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceLevelObjectivesSlo {
		return vs[0].([]GetServiceLevelObjectivesSlo)[vs[1].(int)]
	}).(GetServiceLevelObjectivesSloOutput)
}

type GetTeamMembershipsTeamMembership struct {
	Id     string `pulumi:"id"`
	Role   string `pulumi:"role"`
	TeamId string `pulumi:"teamId"`
	UserId string `pulumi:"userId"`
}

// GetTeamMembershipsTeamMembershipInput is an input type that accepts GetTeamMembershipsTeamMembershipArgs and GetTeamMembershipsTeamMembershipOutput values.
// You can construct a concrete instance of `GetTeamMembershipsTeamMembershipInput` via:
//
//	GetTeamMembershipsTeamMembershipArgs{...}
type GetTeamMembershipsTeamMembershipInput interface {
	pulumi.Input

	ToGetTeamMembershipsTeamMembershipOutput() GetTeamMembershipsTeamMembershipOutput
	ToGetTeamMembershipsTeamMembershipOutputWithContext(context.Context) GetTeamMembershipsTeamMembershipOutput
}

type GetTeamMembershipsTeamMembershipArgs struct {
	Id     pulumi.StringInput `pulumi:"id"`
	Role   pulumi.StringInput `pulumi:"role"`
	TeamId pulumi.StringInput `pulumi:"teamId"`
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetTeamMembershipsTeamMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (i GetTeamMembershipsTeamMembershipArgs) ToGetTeamMembershipsTeamMembershipOutput() GetTeamMembershipsTeamMembershipOutput {
	return i.ToGetTeamMembershipsTeamMembershipOutputWithContext(context.Background())
}

func (i GetTeamMembershipsTeamMembershipArgs) ToGetTeamMembershipsTeamMembershipOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamMembershipsTeamMembershipOutput)
}

// GetTeamMembershipsTeamMembershipArrayInput is an input type that accepts GetTeamMembershipsTeamMembershipArray and GetTeamMembershipsTeamMembershipArrayOutput values.
// You can construct a concrete instance of `GetTeamMembershipsTeamMembershipArrayInput` via:
//
//	GetTeamMembershipsTeamMembershipArray{ GetTeamMembershipsTeamMembershipArgs{...} }
type GetTeamMembershipsTeamMembershipArrayInput interface {
	pulumi.Input

	ToGetTeamMembershipsTeamMembershipArrayOutput() GetTeamMembershipsTeamMembershipArrayOutput
	ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(context.Context) GetTeamMembershipsTeamMembershipArrayOutput
}

type GetTeamMembershipsTeamMembershipArray []GetTeamMembershipsTeamMembershipInput

func (GetTeamMembershipsTeamMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (i GetTeamMembershipsTeamMembershipArray) ToGetTeamMembershipsTeamMembershipArrayOutput() GetTeamMembershipsTeamMembershipArrayOutput {
	return i.ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(context.Background())
}

func (i GetTeamMembershipsTeamMembershipArray) ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamMembershipsTeamMembershipArrayOutput)
}

type GetTeamMembershipsTeamMembershipOutput struct{ *pulumi.OutputState }

func (GetTeamMembershipsTeamMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (o GetTeamMembershipsTeamMembershipOutput) ToGetTeamMembershipsTeamMembershipOutput() GetTeamMembershipsTeamMembershipOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipOutput) ToGetTeamMembershipsTeamMembershipOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTeamMembershipsTeamMembershipOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.Role }).(pulumi.StringOutput)
}

func (o GetTeamMembershipsTeamMembershipOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.TeamId }).(pulumi.StringOutput)
}

func (o GetTeamMembershipsTeamMembershipOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.UserId }).(pulumi.StringOutput)
}

type GetTeamMembershipsTeamMembershipArrayOutput struct{ *pulumi.OutputState }

func (GetTeamMembershipsTeamMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (o GetTeamMembershipsTeamMembershipArrayOutput) ToGetTeamMembershipsTeamMembershipArrayOutput() GetTeamMembershipsTeamMembershipArrayOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipArrayOutput) ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipArrayOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipArrayOutput) Index(i pulumi.IntInput) GetTeamMembershipsTeamMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTeamMembershipsTeamMembership {
		return vs[0].([]GetTeamMembershipsTeamMembership)[vs[1].(int)]
	}).(GetTeamMembershipsTeamMembershipOutput)
}

type GetUsersUser struct {
	Email string `pulumi:"email"`
	Id    string `pulumi:"id"`
	Name  string `pulumi:"name"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//	GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	Email pulumi.StringInput `pulumi:"email"`
	Id    pulumi.StringInput `pulumi:"id"`
	Name  pulumi.StringInput `pulumi:"name"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//	GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptionsInput)(nil)).Elem(), SyntheticsTestOptionsListMonitorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptionsPtrInput)(nil)).Elem(), SyntheticsTestOptionsListMonitorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRetryInput)(nil)).Elem(), SyntheticsTestOptionsListRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRetryPtrInput)(nil)).Elem(), SyntheticsTestOptionsListRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRumSettingsInput)(nil)).Elem(), SyntheticsTestOptionsListRumSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRumSettingsPtrInput)(nil)).Elem(), SyntheticsTestOptionsListRumSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingPtrInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframeInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingTimeframeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframeArrayInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingTimeframeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestBasicauthInput)(nil)).Elem(), SyntheticsTestRequestBasicauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestBasicauthPtrInput)(nil)).Elem(), SyntheticsTestRequestBasicauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificatePtrInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateCertInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateCertPtrInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateKeyInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateKeyPtrInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestDefinitionInput)(nil)).Elem(), SyntheticsTestRequestDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestDefinitionPtrInput)(nil)).Elem(), SyntheticsTestRequestDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestProxyInput)(nil)).Elem(), SyntheticsTestRequestProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestProxyPtrInput)(nil)).Elem(), SyntheticsTestRequestProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRuleInput)(nil)).Elem(), GetCloudWorkloadSecurityAgentRulesAgentRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput)(nil)).Elem(), GetCloudWorkloadSecurityAgentRulesAgentRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRuleInput)(nil)).Elem(), GetCsmThreatsAgentRulesAgentRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRuleArrayInput)(nil)).Elem(), GetCsmThreatsAgentRulesAgentRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListInput)(nil)).Elem(), GetHostsHostListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListArrayInput)(nil)).Elem(), GetHostsHostListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListMetaInput)(nil)).Elem(), GetHostsHostListMetaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListMetricsInput)(nil)).Elem(), GetHostsHostListMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexInput)(nil)).Elem(), GetLogsIndexesLogsIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitResetInput)(nil)).Elem(), GetLogsIndexesLogsIndexDailyLimitResetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitResetArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexDailyLimitResetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilterInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexFilterInput)(nil)).Elem(), GetLogsIndexesLogsIndexFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexFilterArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineArrayInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilterInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilterArrayInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyInput)(nil)).Elem(), GetMonitorConfigPoliciesMonitorConfigPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput)(nil)).Elem(), GetMonitorConfigPoliciesMonitorConfigPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput)(nil)).Elem(), GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdInput)(nil)).Elem(), GetMonitorMonitorThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdArrayInput)(nil)).Elem(), GetMonitorMonitorThresholdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdWindowInput)(nil)).Elem(), GetMonitorMonitorThresholdWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdWindowArrayInput)(nil)).Elem(), GetMonitorMonitorThresholdWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionInput)(nil)).Elem(), GetMonitorSchedulingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrenceInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleRecurrenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindowInput)(nil)).Elem(), GetMonitorSchedulingOptionEvaluationWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindowArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionEvaluationWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorInput)(nil)).Elem(), GetMonitorsMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorArrayInput)(nil)).Elem(), GetMonitorsMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoleUsersRoleUserInput)(nil)).Elem(), GetRoleUsersRoleUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoleUsersRoleUserArrayInput)(nil)).Elem(), GetRoleUsersRoleUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesRoleInput)(nil)).Elem(), GetRolesRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesRoleArrayInput)(nil)).Elem(), GetRolesRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterArrayInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilterInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterExclusionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterExclusionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilterInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilterArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRuleInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryAgentRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryAgentRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQueryInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleSignalQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQueryArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleSignalQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCaseInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleThirdPartyCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleThirdPartyCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppressionInput)(nil)).Elem(), GetSecurityMonitoringSuppressionsSuppressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppressionArrayInput)(nil)).Elem(), GetSecurityMonitoringSuppressionsSuppressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectiveQueryInput)(nil)).Elem(), GetServiceLevelObjectiveQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectiveQueryArrayInput)(nil)).Elem(), GetServiceLevelObjectiveQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectivesSloInput)(nil)).Elem(), GetServiceLevelObjectivesSloArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectivesSloArrayInput)(nil)).Elem(), GetServiceLevelObjectivesSloArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamMembershipsTeamMembershipInput)(nil)).Elem(), GetTeamMembershipsTeamMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamMembershipsTeamMembershipArrayInput)(nil)).Elem(), GetTeamMembershipsTeamMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListMonitorOptionsOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListMonitorOptionsPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRetryOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRetryPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRumSettingsOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRumSettingsPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingTimeframeOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestBasicauthOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestBasicauthPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificatePtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateCertOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateCertPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateKeyOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateKeyPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestDefinitionOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestDefinitionPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestProxyOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestProxyPtrOutput{})
	pulumi.RegisterOutputType(GetCloudWorkloadSecurityAgentRulesAgentRuleOutput{})
	pulumi.RegisterOutputType(GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput{})
	pulumi.RegisterOutputType(GetCsmThreatsAgentRulesAgentRuleOutput{})
	pulumi.RegisterOutputType(GetCsmThreatsAgentRulesAgentRuleArrayOutput{})
	pulumi.RegisterOutputType(GetHostsHostListOutput{})
	pulumi.RegisterOutputType(GetHostsHostListArrayOutput{})
	pulumi.RegisterOutputType(GetHostsHostListMetaOutput{})
	pulumi.RegisterOutputType(GetHostsHostListMetricsOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexDailyLimitResetOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexDailyLimitResetArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterFilterOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexFilterOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineArrayOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineFilterOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigPoliciesMonitorConfigPolicyOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdWindowOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdWindowArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionEvaluationWindowOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionEvaluationWindowArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorArrayOutput{})
	pulumi.RegisterOutputType(GetRoleUsersRoleUserOutput{})
	pulumi.RegisterOutputType(GetRoleUsersRoleUserArrayOutput{})
	pulumi.RegisterOutputType(GetRolesRoleOutput{})
	pulumi.RegisterOutputType(GetRolesRoleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterExclusionFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleCaseOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleCaseArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryAgentRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleSignalQueryOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleSignalQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleThirdPartyCaseOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringSuppressionsSuppressionOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringSuppressionsSuppressionArrayOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectiveQueryOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectiveQueryArrayOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectivesSloOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectivesSloArrayOutput{})
	pulumi.RegisterOutputType(GetTeamMembershipsTeamMembershipOutput{})
	pulumi.RegisterOutputType(GetTeamMembershipsTeamMembershipArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
}
