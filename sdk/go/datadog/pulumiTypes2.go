// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ServiceLevelObjectiveSliSpecificationTimeSlice struct {
	// The comparator used to compare the SLI value to the threshold. Valid values are `>`, `>=`, `<`, `<=`.
	Comparator string `pulumi:"comparator"`
	// A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
	Query ServiceLevelObjectiveSliSpecificationTimeSliceQuery `pulumi:"query"`
	// The interval used when querying data, which defines the size of a time slice. Valid values are `60`, `300`. Defaults to `300`.
	QueryIntervalSeconds *int `pulumi:"queryIntervalSeconds"`
	// The threshold value to which each SLI value will be compared.
	Threshold float64 `pulumi:"threshold"`
}

// ServiceLevelObjectiveSliSpecificationTimeSliceInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceArgs and ServiceLevelObjectiveSliSpecificationTimeSliceOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceArgs{...}
type ServiceLevelObjectiveSliSpecificationTimeSliceInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceOutput() ServiceLevelObjectiveSliSpecificationTimeSliceOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceArgs struct {
	// The comparator used to compare the SLI value to the threshold. Valid values are `>`, `>=`, `<`, `<=`.
	Comparator pulumi.StringInput `pulumi:"comparator"`
	// A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
	Query ServiceLevelObjectiveSliSpecificationTimeSliceQueryInput `pulumi:"query"`
	// The interval used when querying data, which defines the size of a time slice. Valid values are `60`, `300`. Defaults to `300`.
	QueryIntervalSeconds pulumi.IntPtrInput `pulumi:"queryIntervalSeconds"`
	// The threshold value to which each SLI value will be compared.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSlice)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceOutput() ServiceLevelObjectiveSliSpecificationTimeSliceOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceOutput)
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput() ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceOutput).ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveSliSpecificationTimeSlicePtrInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceArgs, ServiceLevelObjectiveSliSpecificationTimeSlicePtr and ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSlicePtrInput` via:
//
//	        ServiceLevelObjectiveSliSpecificationTimeSliceArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveSliSpecificationTimeSlicePtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput() ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput
	ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput
}

type serviceLevelObjectiveSliSpecificationTimeSlicePtrType ServiceLevelObjectiveSliSpecificationTimeSliceArgs

func ServiceLevelObjectiveSliSpecificationTimeSlicePtr(v *ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ServiceLevelObjectiveSliSpecificationTimeSlicePtrInput {
	return (*serviceLevelObjectiveSliSpecificationTimeSlicePtrType)(v)
}

func (*serviceLevelObjectiveSliSpecificationTimeSlicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSlice)(nil)).Elem()
}

func (i *serviceLevelObjectiveSliSpecificationTimeSlicePtrType) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput() ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveSliSpecificationTimeSlicePtrType) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSlice)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceOutput() ServiceLevelObjectiveSliSpecificationTimeSliceOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput() ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return o.ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveSliSpecificationTimeSlice) *ServiceLevelObjectiveSliSpecificationTimeSlice {
		return &v
	}).(ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput)
}

// The comparator used to compare the SLI value to the threshold. Valid values are `>`, `>=`, `<`, `<=`.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) Comparator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSlice) string { return v.Comparator }).(pulumi.StringOutput)
}

// A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) Query() ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSlice) ServiceLevelObjectiveSliSpecificationTimeSliceQuery {
		return v.Query
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput)
}

// The interval used when querying data, which defines the size of a time slice. Valid values are `60`, `300`. Defaults to `300`.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) QueryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSlice) *int { return v.QueryIntervalSeconds }).(pulumi.IntPtrOutput)
}

// The threshold value to which each SLI value will be compared.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSlice) float64 { return v.Threshold }).(pulumi.Float64Output)
}

type ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSlice)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput() ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) Elem() ServiceLevelObjectiveSliSpecificationTimeSliceOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSlice) ServiceLevelObjectiveSliSpecificationTimeSlice {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveSliSpecificationTimeSlice
		return ret
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceOutput)
}

// The comparator used to compare the SLI value to the threshold. Valid values are `>`, `>=`, `<`, `<=`.
func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) Comparator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSlice) *string {
		if v == nil {
			return nil
		}
		return &v.Comparator
	}).(pulumi.StringPtrOutput)
}

// A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) Query() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSlice) *ServiceLevelObjectiveSliSpecificationTimeSliceQuery {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput)
}

// The interval used when querying data, which defines the size of a time slice. Valid values are `60`, `300`. Defaults to `300`.
func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) QueryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSlice) *int {
		if v == nil {
			return nil
		}
		return v.QueryIntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The threshold value to which each SLI value will be compared.
func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSlice) *float64 {
		if v == nil {
			return nil
		}
		return &v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQuery struct {
	// A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
	Formula ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula `pulumi:"formula"`
	// A list of data-source-specific queries that are in the formula.
	Queries []ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery `pulumi:"queries"`
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs and ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs{...}
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs struct {
	// A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
	Formula ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaInput `pulumi:"formula"`
	// A list of data-source-specific queries that are in the formula.
	Queries ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayInput `pulumi:"queries"`
}

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQuery)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput)
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput).ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs, ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtr and ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrInput` via:
//
//	        ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput
}

type serviceLevelObjectiveSliSpecificationTimeSliceQueryPtrType ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs

func ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtr(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrInput {
	return (*serviceLevelObjectiveSliSpecificationTimeSliceQueryPtrType)(v)
}

func (*serviceLevelObjectiveSliSpecificationTimeSliceQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQuery)(nil)).Elem()
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return o.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveSliSpecificationTimeSliceQuery) *ServiceLevelObjectiveSliSpecificationTimeSliceQuery {
		return &v
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput)
}

// A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) Formula() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQuery) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula {
		return v.Formula
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput)
}

// A list of data-source-specific queries that are in the formula.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) Queries() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQuery) []ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery {
		return v.Queries
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) Elem() ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQuery) ServiceLevelObjectiveSliSpecificationTimeSliceQuery {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveSliSpecificationTimeSliceQuery
		return ret
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput)
}

// A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) Formula() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQuery) *ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula {
		if v == nil {
			return nil
		}
		return &v.Formula
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput)
}

// A list of data-source-specific queries that are in the formula.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) Queries() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQuery) []ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula struct {
	// The formula string, which is an expression involving named queries.
	FormulaExpression string `pulumi:"formulaExpression"`
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs and ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs{...}
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs struct {
	// The formula string, which is an expression involving named queries.
	FormulaExpression pulumi.StringInput `pulumi:"formulaExpression"`
}

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput)
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput).ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs, ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtr and ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrInput` via:
//
//	        ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput
}

type serviceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrType ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs

func ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtr(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrInput {
	return (*serviceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrType)(v)
}

func (*serviceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula)(nil)).Elem()
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return o.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula) *ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula {
		return &v
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput)
}

// The formula string, which is an expression involving named queries.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) FormulaExpression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula) string { return v.FormulaExpression }).(pulumi.StringOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput) Elem() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula
		return ret
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput)
}

// The formula string, which is an expression involving named queries.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput) FormulaExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula) *string {
		if v == nil {
			return nil
		}
		return &v.FormulaExpression
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery struct {
	// A timeseries formula and functions metrics query.
	MetricQuery *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery `pulumi:"metricQuery"`
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs and ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs{...}
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs struct {
	// A timeseries formula and functions metrics query.
	MetricQuery ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput `pulumi:"metricQuery"`
}

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput)
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray and ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray{ ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs{...} }
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray []ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryInput

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput {
	return o
}

// A timeseries formula and functions metrics query.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput) MetricQuery() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery) *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery {
		return v.MetricQuery
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput) Index(i pulumi.IntInput) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery {
		return vs[0].([]ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery)[vs[1].(int)]
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery struct {
	// The data source for metrics queries. Defaults to `"metrics"`.
	DataSource *string `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name string `pulumi:"name"`
	// The metrics query definition.
	Query string `pulumi:"query"`
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs and ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs{...}
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs struct {
	// The data source for metrics queries. Defaults to `"metrics"`.
	DataSource pulumi.StringPtrInput `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The metrics query definition.
	Query pulumi.StringInput `pulumi:"query"`
}

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput)
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput).ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs, ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtr and ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput` via:
//
//	        ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput
}

type serviceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrType ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs

func ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtr(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput {
	return (*serviceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrType)(v)
}

func (*serviceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery)(nil)).Elem()
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return o.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery {
		return &v
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput)
}

// The data source for metrics queries. Defaults to `"metrics"`.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) *string {
		return v.DataSource
	}).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The metrics query definition.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) string { return v.Query }).(pulumi.StringOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) Elem() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery
		return ret
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput)
}

// The data source for metrics queries. Defaults to `"metrics"`.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The metrics query definition.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelObjectiveThreshold struct {
	// The objective's target in `(0,100)`.
	Target float64 `pulumi:"target"`
	// A string representation of the target that indicates its precision. It uses trailing zeros to show significant decimal places (e.g. `98.00`).
	TargetDisplay *string `pulumi:"targetDisplay"`
	// The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.
	Timeframe string `pulumi:"timeframe"`
	// The objective's warning value in `(0,100)`. This must be greater than the target value.
	Warning *float64 `pulumi:"warning"`
	// A string representation of the warning target (see the description of the targetDisplay field for details).
	WarningDisplay *string `pulumi:"warningDisplay"`
}

// ServiceLevelObjectiveThresholdInput is an input type that accepts ServiceLevelObjectiveThresholdArgs and ServiceLevelObjectiveThresholdOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveThresholdInput` via:
//
//	ServiceLevelObjectiveThresholdArgs{...}
type ServiceLevelObjectiveThresholdInput interface {
	pulumi.Input

	ToServiceLevelObjectiveThresholdOutput() ServiceLevelObjectiveThresholdOutput
	ToServiceLevelObjectiveThresholdOutputWithContext(context.Context) ServiceLevelObjectiveThresholdOutput
}

type ServiceLevelObjectiveThresholdArgs struct {
	// The objective's target in `(0,100)`.
	Target pulumi.Float64Input `pulumi:"target"`
	// A string representation of the target that indicates its precision. It uses trailing zeros to show significant decimal places (e.g. `98.00`).
	TargetDisplay pulumi.StringPtrInput `pulumi:"targetDisplay"`
	// The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.
	Timeframe pulumi.StringInput `pulumi:"timeframe"`
	// The objective's warning value in `(0,100)`. This must be greater than the target value.
	Warning pulumi.Float64PtrInput `pulumi:"warning"`
	// A string representation of the warning target (see the description of the targetDisplay field for details).
	WarningDisplay pulumi.StringPtrInput `pulumi:"warningDisplay"`
}

func (ServiceLevelObjectiveThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveThreshold)(nil)).Elem()
}

func (i ServiceLevelObjectiveThresholdArgs) ToServiceLevelObjectiveThresholdOutput() ServiceLevelObjectiveThresholdOutput {
	return i.ToServiceLevelObjectiveThresholdOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveThresholdArgs) ToServiceLevelObjectiveThresholdOutputWithContext(ctx context.Context) ServiceLevelObjectiveThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveThresholdOutput)
}

// ServiceLevelObjectiveThresholdArrayInput is an input type that accepts ServiceLevelObjectiveThresholdArray and ServiceLevelObjectiveThresholdArrayOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveThresholdArrayInput` via:
//
//	ServiceLevelObjectiveThresholdArray{ ServiceLevelObjectiveThresholdArgs{...} }
type ServiceLevelObjectiveThresholdArrayInput interface {
	pulumi.Input

	ToServiceLevelObjectiveThresholdArrayOutput() ServiceLevelObjectiveThresholdArrayOutput
	ToServiceLevelObjectiveThresholdArrayOutputWithContext(context.Context) ServiceLevelObjectiveThresholdArrayOutput
}

type ServiceLevelObjectiveThresholdArray []ServiceLevelObjectiveThresholdInput

func (ServiceLevelObjectiveThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLevelObjectiveThreshold)(nil)).Elem()
}

func (i ServiceLevelObjectiveThresholdArray) ToServiceLevelObjectiveThresholdArrayOutput() ServiceLevelObjectiveThresholdArrayOutput {
	return i.ToServiceLevelObjectiveThresholdArrayOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveThresholdArray) ToServiceLevelObjectiveThresholdArrayOutputWithContext(ctx context.Context) ServiceLevelObjectiveThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveThresholdArrayOutput)
}

type ServiceLevelObjectiveThresholdOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveThreshold)(nil)).Elem()
}

func (o ServiceLevelObjectiveThresholdOutput) ToServiceLevelObjectiveThresholdOutput() ServiceLevelObjectiveThresholdOutput {
	return o
}

func (o ServiceLevelObjectiveThresholdOutput) ToServiceLevelObjectiveThresholdOutputWithContext(ctx context.Context) ServiceLevelObjectiveThresholdOutput {
	return o
}

// The objective's target in `(0,100)`.
func (o ServiceLevelObjectiveThresholdOutput) Target() pulumi.Float64Output {
	return o.ApplyT(func(v ServiceLevelObjectiveThreshold) float64 { return v.Target }).(pulumi.Float64Output)
}

// A string representation of the target that indicates its precision. It uses trailing zeros to show significant decimal places (e.g. `98.00`).
func (o ServiceLevelObjectiveThresholdOutput) TargetDisplay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveThreshold) *string { return v.TargetDisplay }).(pulumi.StringPtrOutput)
}

// The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.
func (o ServiceLevelObjectiveThresholdOutput) Timeframe() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveThreshold) string { return v.Timeframe }).(pulumi.StringOutput)
}

// The objective's warning value in `(0,100)`. This must be greater than the target value.
func (o ServiceLevelObjectiveThresholdOutput) Warning() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveThreshold) *float64 { return v.Warning }).(pulumi.Float64PtrOutput)
}

// A string representation of the warning target (see the description of the targetDisplay field for details).
func (o ServiceLevelObjectiveThresholdOutput) WarningDisplay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveThreshold) *string { return v.WarningDisplay }).(pulumi.StringPtrOutput)
}

type ServiceLevelObjectiveThresholdArrayOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLevelObjectiveThreshold)(nil)).Elem()
}

func (o ServiceLevelObjectiveThresholdArrayOutput) ToServiceLevelObjectiveThresholdArrayOutput() ServiceLevelObjectiveThresholdArrayOutput {
	return o
}

func (o ServiceLevelObjectiveThresholdArrayOutput) ToServiceLevelObjectiveThresholdArrayOutputWithContext(ctx context.Context) ServiceLevelObjectiveThresholdArrayOutput {
	return o
}

func (o ServiceLevelObjectiveThresholdArrayOutput) Index(i pulumi.IntInput) ServiceLevelObjectiveThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceLevelObjectiveThreshold {
		return vs[0].([]ServiceLevelObjectiveThreshold)[vs[1].(int)]
	}).(ServiceLevelObjectiveThresholdOutput)
}

type SpansMetricCompute struct {
	// The type of aggregation to use. This field can't be updated after creation.
	AggregationType string `pulumi:"aggregationType"`
	// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when the `aggregationType` is `distribution`.
	IncludePercentiles *bool `pulumi:"includePercentiles"`
	// The path to the value the span-based metric will aggregate on (only used if the aggregation type is a "distribution"). This field can't be updated after creation.
	Path *string `pulumi:"path"`
}

// SpansMetricComputeInput is an input type that accepts SpansMetricComputeArgs and SpansMetricComputeOutput values.
// You can construct a concrete instance of `SpansMetricComputeInput` via:
//
//	SpansMetricComputeArgs{...}
type SpansMetricComputeInput interface {
	pulumi.Input

	ToSpansMetricComputeOutput() SpansMetricComputeOutput
	ToSpansMetricComputeOutputWithContext(context.Context) SpansMetricComputeOutput
}

type SpansMetricComputeArgs struct {
	// The type of aggregation to use. This field can't be updated after creation.
	AggregationType pulumi.StringInput `pulumi:"aggregationType"`
	// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when the `aggregationType` is `distribution`.
	IncludePercentiles pulumi.BoolPtrInput `pulumi:"includePercentiles"`
	// The path to the value the span-based metric will aggregate on (only used if the aggregation type is a "distribution"). This field can't be updated after creation.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (SpansMetricComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricCompute)(nil)).Elem()
}

func (i SpansMetricComputeArgs) ToSpansMetricComputeOutput() SpansMetricComputeOutput {
	return i.ToSpansMetricComputeOutputWithContext(context.Background())
}

func (i SpansMetricComputeArgs) ToSpansMetricComputeOutputWithContext(ctx context.Context) SpansMetricComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricComputeOutput)
}

func (i SpansMetricComputeArgs) ToSpansMetricComputePtrOutput() SpansMetricComputePtrOutput {
	return i.ToSpansMetricComputePtrOutputWithContext(context.Background())
}

func (i SpansMetricComputeArgs) ToSpansMetricComputePtrOutputWithContext(ctx context.Context) SpansMetricComputePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricComputeOutput).ToSpansMetricComputePtrOutputWithContext(ctx)
}

// SpansMetricComputePtrInput is an input type that accepts SpansMetricComputeArgs, SpansMetricComputePtr and SpansMetricComputePtrOutput values.
// You can construct a concrete instance of `SpansMetricComputePtrInput` via:
//
//	        SpansMetricComputeArgs{...}
//
//	or:
//
//	        nil
type SpansMetricComputePtrInput interface {
	pulumi.Input

	ToSpansMetricComputePtrOutput() SpansMetricComputePtrOutput
	ToSpansMetricComputePtrOutputWithContext(context.Context) SpansMetricComputePtrOutput
}

type spansMetricComputePtrType SpansMetricComputeArgs

func SpansMetricComputePtr(v *SpansMetricComputeArgs) SpansMetricComputePtrInput {
	return (*spansMetricComputePtrType)(v)
}

func (*spansMetricComputePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpansMetricCompute)(nil)).Elem()
}

func (i *spansMetricComputePtrType) ToSpansMetricComputePtrOutput() SpansMetricComputePtrOutput {
	return i.ToSpansMetricComputePtrOutputWithContext(context.Background())
}

func (i *spansMetricComputePtrType) ToSpansMetricComputePtrOutputWithContext(ctx context.Context) SpansMetricComputePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricComputePtrOutput)
}

type SpansMetricComputeOutput struct{ *pulumi.OutputState }

func (SpansMetricComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricCompute)(nil)).Elem()
}

func (o SpansMetricComputeOutput) ToSpansMetricComputeOutput() SpansMetricComputeOutput {
	return o
}

func (o SpansMetricComputeOutput) ToSpansMetricComputeOutputWithContext(ctx context.Context) SpansMetricComputeOutput {
	return o
}

func (o SpansMetricComputeOutput) ToSpansMetricComputePtrOutput() SpansMetricComputePtrOutput {
	return o.ToSpansMetricComputePtrOutputWithContext(context.Background())
}

func (o SpansMetricComputeOutput) ToSpansMetricComputePtrOutputWithContext(ctx context.Context) SpansMetricComputePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpansMetricCompute) *SpansMetricCompute {
		return &v
	}).(SpansMetricComputePtrOutput)
}

// The type of aggregation to use. This field can't be updated after creation.
func (o SpansMetricComputeOutput) AggregationType() pulumi.StringOutput {
	return o.ApplyT(func(v SpansMetricCompute) string { return v.AggregationType }).(pulumi.StringOutput)
}

// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when the `aggregationType` is `distribution`.
func (o SpansMetricComputeOutput) IncludePercentiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpansMetricCompute) *bool { return v.IncludePercentiles }).(pulumi.BoolPtrOutput)
}

// The path to the value the span-based metric will aggregate on (only used if the aggregation type is a "distribution"). This field can't be updated after creation.
func (o SpansMetricComputeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpansMetricCompute) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type SpansMetricComputePtrOutput struct{ *pulumi.OutputState }

func (SpansMetricComputePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpansMetricCompute)(nil)).Elem()
}

func (o SpansMetricComputePtrOutput) ToSpansMetricComputePtrOutput() SpansMetricComputePtrOutput {
	return o
}

func (o SpansMetricComputePtrOutput) ToSpansMetricComputePtrOutputWithContext(ctx context.Context) SpansMetricComputePtrOutput {
	return o
}

func (o SpansMetricComputePtrOutput) Elem() SpansMetricComputeOutput {
	return o.ApplyT(func(v *SpansMetricCompute) SpansMetricCompute {
		if v != nil {
			return *v
		}
		var ret SpansMetricCompute
		return ret
	}).(SpansMetricComputeOutput)
}

// The type of aggregation to use. This field can't be updated after creation.
func (o SpansMetricComputePtrOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpansMetricCompute) *string {
		if v == nil {
			return nil
		}
		return &v.AggregationType
	}).(pulumi.StringPtrOutput)
}

// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when the `aggregationType` is `distribution`.
func (o SpansMetricComputePtrOutput) IncludePercentiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpansMetricCompute) *bool {
		if v == nil {
			return nil
		}
		return v.IncludePercentiles
	}).(pulumi.BoolPtrOutput)
}

// The path to the value the span-based metric will aggregate on (only used if the aggregation type is a "distribution"). This field can't be updated after creation.
func (o SpansMetricComputePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpansMetricCompute) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type SpansMetricFilter struct {
	// The search query - following the span search syntax. Defaults to `"*"`.
	Query *string `pulumi:"query"`
}

// SpansMetricFilterInput is an input type that accepts SpansMetricFilterArgs and SpansMetricFilterOutput values.
// You can construct a concrete instance of `SpansMetricFilterInput` via:
//
//	SpansMetricFilterArgs{...}
type SpansMetricFilterInput interface {
	pulumi.Input

	ToSpansMetricFilterOutput() SpansMetricFilterOutput
	ToSpansMetricFilterOutputWithContext(context.Context) SpansMetricFilterOutput
}

type SpansMetricFilterArgs struct {
	// The search query - following the span search syntax. Defaults to `"*"`.
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (SpansMetricFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricFilter)(nil)).Elem()
}

func (i SpansMetricFilterArgs) ToSpansMetricFilterOutput() SpansMetricFilterOutput {
	return i.ToSpansMetricFilterOutputWithContext(context.Background())
}

func (i SpansMetricFilterArgs) ToSpansMetricFilterOutputWithContext(ctx context.Context) SpansMetricFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricFilterOutput)
}

func (i SpansMetricFilterArgs) ToSpansMetricFilterPtrOutput() SpansMetricFilterPtrOutput {
	return i.ToSpansMetricFilterPtrOutputWithContext(context.Background())
}

func (i SpansMetricFilterArgs) ToSpansMetricFilterPtrOutputWithContext(ctx context.Context) SpansMetricFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricFilterOutput).ToSpansMetricFilterPtrOutputWithContext(ctx)
}

// SpansMetricFilterPtrInput is an input type that accepts SpansMetricFilterArgs, SpansMetricFilterPtr and SpansMetricFilterPtrOutput values.
// You can construct a concrete instance of `SpansMetricFilterPtrInput` via:
//
//	        SpansMetricFilterArgs{...}
//
//	or:
//
//	        nil
type SpansMetricFilterPtrInput interface {
	pulumi.Input

	ToSpansMetricFilterPtrOutput() SpansMetricFilterPtrOutput
	ToSpansMetricFilterPtrOutputWithContext(context.Context) SpansMetricFilterPtrOutput
}

type spansMetricFilterPtrType SpansMetricFilterArgs

func SpansMetricFilterPtr(v *SpansMetricFilterArgs) SpansMetricFilterPtrInput {
	return (*spansMetricFilterPtrType)(v)
}

func (*spansMetricFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpansMetricFilter)(nil)).Elem()
}

func (i *spansMetricFilterPtrType) ToSpansMetricFilterPtrOutput() SpansMetricFilterPtrOutput {
	return i.ToSpansMetricFilterPtrOutputWithContext(context.Background())
}

func (i *spansMetricFilterPtrType) ToSpansMetricFilterPtrOutputWithContext(ctx context.Context) SpansMetricFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricFilterPtrOutput)
}

type SpansMetricFilterOutput struct{ *pulumi.OutputState }

func (SpansMetricFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricFilter)(nil)).Elem()
}

func (o SpansMetricFilterOutput) ToSpansMetricFilterOutput() SpansMetricFilterOutput {
	return o
}

func (o SpansMetricFilterOutput) ToSpansMetricFilterOutputWithContext(ctx context.Context) SpansMetricFilterOutput {
	return o
}

func (o SpansMetricFilterOutput) ToSpansMetricFilterPtrOutput() SpansMetricFilterPtrOutput {
	return o.ToSpansMetricFilterPtrOutputWithContext(context.Background())
}

func (o SpansMetricFilterOutput) ToSpansMetricFilterPtrOutputWithContext(ctx context.Context) SpansMetricFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpansMetricFilter) *SpansMetricFilter {
		return &v
	}).(SpansMetricFilterPtrOutput)
}

// The search query - following the span search syntax. Defaults to `"*"`.
func (o SpansMetricFilterOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpansMetricFilter) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type SpansMetricFilterPtrOutput struct{ *pulumi.OutputState }

func (SpansMetricFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpansMetricFilter)(nil)).Elem()
}

func (o SpansMetricFilterPtrOutput) ToSpansMetricFilterPtrOutput() SpansMetricFilterPtrOutput {
	return o
}

func (o SpansMetricFilterPtrOutput) ToSpansMetricFilterPtrOutputWithContext(ctx context.Context) SpansMetricFilterPtrOutput {
	return o
}

func (o SpansMetricFilterPtrOutput) Elem() SpansMetricFilterOutput {
	return o.ApplyT(func(v *SpansMetricFilter) SpansMetricFilter {
		if v != nil {
			return *v
		}
		var ret SpansMetricFilter
		return ret
	}).(SpansMetricFilterOutput)
}

// The search query - following the span search syntax. Defaults to `"*"`.
func (o SpansMetricFilterPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpansMetricFilter) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

type SpansMetricGroupBy struct {
	// The path to the value the span-based metric will be aggregated over.
	Path string `pulumi:"path"`
	// Eventual name of the tag that gets created. By default, the path attribute is used as the tag name.
	TagName *string `pulumi:"tagName"`
}

// SpansMetricGroupByInput is an input type that accepts SpansMetricGroupByArgs and SpansMetricGroupByOutput values.
// You can construct a concrete instance of `SpansMetricGroupByInput` via:
//
//	SpansMetricGroupByArgs{...}
type SpansMetricGroupByInput interface {
	pulumi.Input

	ToSpansMetricGroupByOutput() SpansMetricGroupByOutput
	ToSpansMetricGroupByOutputWithContext(context.Context) SpansMetricGroupByOutput
}

type SpansMetricGroupByArgs struct {
	// The path to the value the span-based metric will be aggregated over.
	Path pulumi.StringInput `pulumi:"path"`
	// Eventual name of the tag that gets created. By default, the path attribute is used as the tag name.
	TagName pulumi.StringPtrInput `pulumi:"tagName"`
}

func (SpansMetricGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricGroupBy)(nil)).Elem()
}

func (i SpansMetricGroupByArgs) ToSpansMetricGroupByOutput() SpansMetricGroupByOutput {
	return i.ToSpansMetricGroupByOutputWithContext(context.Background())
}

func (i SpansMetricGroupByArgs) ToSpansMetricGroupByOutputWithContext(ctx context.Context) SpansMetricGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricGroupByOutput)
}

// SpansMetricGroupByArrayInput is an input type that accepts SpansMetricGroupByArray and SpansMetricGroupByArrayOutput values.
// You can construct a concrete instance of `SpansMetricGroupByArrayInput` via:
//
//	SpansMetricGroupByArray{ SpansMetricGroupByArgs{...} }
type SpansMetricGroupByArrayInput interface {
	pulumi.Input

	ToSpansMetricGroupByArrayOutput() SpansMetricGroupByArrayOutput
	ToSpansMetricGroupByArrayOutputWithContext(context.Context) SpansMetricGroupByArrayOutput
}

type SpansMetricGroupByArray []SpansMetricGroupByInput

func (SpansMetricGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpansMetricGroupBy)(nil)).Elem()
}

func (i SpansMetricGroupByArray) ToSpansMetricGroupByArrayOutput() SpansMetricGroupByArrayOutput {
	return i.ToSpansMetricGroupByArrayOutputWithContext(context.Background())
}

func (i SpansMetricGroupByArray) ToSpansMetricGroupByArrayOutputWithContext(ctx context.Context) SpansMetricGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricGroupByArrayOutput)
}

type SpansMetricGroupByOutput struct{ *pulumi.OutputState }

func (SpansMetricGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricGroupBy)(nil)).Elem()
}

func (o SpansMetricGroupByOutput) ToSpansMetricGroupByOutput() SpansMetricGroupByOutput {
	return o
}

func (o SpansMetricGroupByOutput) ToSpansMetricGroupByOutputWithContext(ctx context.Context) SpansMetricGroupByOutput {
	return o
}

// The path to the value the span-based metric will be aggregated over.
func (o SpansMetricGroupByOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SpansMetricGroupBy) string { return v.Path }).(pulumi.StringOutput)
}

// Eventual name of the tag that gets created. By default, the path attribute is used as the tag name.
func (o SpansMetricGroupByOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpansMetricGroupBy) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type SpansMetricGroupByArrayOutput struct{ *pulumi.OutputState }

func (SpansMetricGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpansMetricGroupBy)(nil)).Elem()
}

func (o SpansMetricGroupByArrayOutput) ToSpansMetricGroupByArrayOutput() SpansMetricGroupByArrayOutput {
	return o
}

func (o SpansMetricGroupByArrayOutput) ToSpansMetricGroupByArrayOutputWithContext(ctx context.Context) SpansMetricGroupByArrayOutput {
	return o
}

func (o SpansMetricGroupByArrayOutput) Index(i pulumi.IntInput) SpansMetricGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpansMetricGroupBy {
		return vs[0].([]SpansMetricGroupBy)[vs[1].(int)]
	}).(SpansMetricGroupByOutput)
}

type SyntheticsGlobalVariableOptions struct {
	// Parameters needed for MFA/TOTP.
	TotpParameters *SyntheticsGlobalVariableOptionsTotpParameters `pulumi:"totpParameters"`
}

// SyntheticsGlobalVariableOptionsInput is an input type that accepts SyntheticsGlobalVariableOptionsArgs and SyntheticsGlobalVariableOptionsOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableOptionsInput` via:
//
//	SyntheticsGlobalVariableOptionsArgs{...}
type SyntheticsGlobalVariableOptionsInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableOptionsOutput() SyntheticsGlobalVariableOptionsOutput
	ToSyntheticsGlobalVariableOptionsOutputWithContext(context.Context) SyntheticsGlobalVariableOptionsOutput
}

type SyntheticsGlobalVariableOptionsArgs struct {
	// Parameters needed for MFA/TOTP.
	TotpParameters SyntheticsGlobalVariableOptionsTotpParametersPtrInput `pulumi:"totpParameters"`
}

func (SyntheticsGlobalVariableOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableOptions)(nil)).Elem()
}

func (i SyntheticsGlobalVariableOptionsArgs) ToSyntheticsGlobalVariableOptionsOutput() SyntheticsGlobalVariableOptionsOutput {
	return i.ToSyntheticsGlobalVariableOptionsOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableOptionsArgs) ToSyntheticsGlobalVariableOptionsOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsOutput)
}

func (i SyntheticsGlobalVariableOptionsArgs) ToSyntheticsGlobalVariableOptionsPtrOutput() SyntheticsGlobalVariableOptionsPtrOutput {
	return i.ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableOptionsArgs) ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsOutput).ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(ctx)
}

// SyntheticsGlobalVariableOptionsPtrInput is an input type that accepts SyntheticsGlobalVariableOptionsArgs, SyntheticsGlobalVariableOptionsPtr and SyntheticsGlobalVariableOptionsPtrOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableOptionsPtrInput` via:
//
//	        SyntheticsGlobalVariableOptionsArgs{...}
//
//	or:
//
//	        nil
type SyntheticsGlobalVariableOptionsPtrInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableOptionsPtrOutput() SyntheticsGlobalVariableOptionsPtrOutput
	ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(context.Context) SyntheticsGlobalVariableOptionsPtrOutput
}

type syntheticsGlobalVariableOptionsPtrType SyntheticsGlobalVariableOptionsArgs

func SyntheticsGlobalVariableOptionsPtr(v *SyntheticsGlobalVariableOptionsArgs) SyntheticsGlobalVariableOptionsPtrInput {
	return (*syntheticsGlobalVariableOptionsPtrType)(v)
}

func (*syntheticsGlobalVariableOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableOptions)(nil)).Elem()
}

func (i *syntheticsGlobalVariableOptionsPtrType) ToSyntheticsGlobalVariableOptionsPtrOutput() SyntheticsGlobalVariableOptionsPtrOutput {
	return i.ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(context.Background())
}

func (i *syntheticsGlobalVariableOptionsPtrType) ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsPtrOutput)
}

type SyntheticsGlobalVariableOptionsOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableOptions)(nil)).Elem()
}

func (o SyntheticsGlobalVariableOptionsOutput) ToSyntheticsGlobalVariableOptionsOutput() SyntheticsGlobalVariableOptionsOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsOutput) ToSyntheticsGlobalVariableOptionsOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsOutput) ToSyntheticsGlobalVariableOptionsPtrOutput() SyntheticsGlobalVariableOptionsPtrOutput {
	return o.ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(context.Background())
}

func (o SyntheticsGlobalVariableOptionsOutput) ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsGlobalVariableOptions) *SyntheticsGlobalVariableOptions {
		return &v
	}).(SyntheticsGlobalVariableOptionsPtrOutput)
}

// Parameters needed for MFA/TOTP.
func (o SyntheticsGlobalVariableOptionsOutput) TotpParameters() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableOptions) *SyntheticsGlobalVariableOptionsTotpParameters {
		return v.TotpParameters
	}).(SyntheticsGlobalVariableOptionsTotpParametersPtrOutput)
}

type SyntheticsGlobalVariableOptionsPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableOptions)(nil)).Elem()
}

func (o SyntheticsGlobalVariableOptionsPtrOutput) ToSyntheticsGlobalVariableOptionsPtrOutput() SyntheticsGlobalVariableOptionsPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsPtrOutput) ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsPtrOutput) Elem() SyntheticsGlobalVariableOptionsOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableOptions) SyntheticsGlobalVariableOptions {
		if v != nil {
			return *v
		}
		var ret SyntheticsGlobalVariableOptions
		return ret
	}).(SyntheticsGlobalVariableOptionsOutput)
}

// Parameters needed for MFA/TOTP.
func (o SyntheticsGlobalVariableOptionsPtrOutput) TotpParameters() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableOptions) *SyntheticsGlobalVariableOptionsTotpParameters {
		if v == nil {
			return nil
		}
		return v.TotpParameters
	}).(SyntheticsGlobalVariableOptionsTotpParametersPtrOutput)
}

type SyntheticsGlobalVariableOptionsTotpParameters struct {
	// Number of digits for the OTP.
	Digits int `pulumi:"digits"`
	// Interval for which to refresh the token (in seconds).
	RefreshInterval int `pulumi:"refreshInterval"`
}

// SyntheticsGlobalVariableOptionsTotpParametersInput is an input type that accepts SyntheticsGlobalVariableOptionsTotpParametersArgs and SyntheticsGlobalVariableOptionsTotpParametersOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableOptionsTotpParametersInput` via:
//
//	SyntheticsGlobalVariableOptionsTotpParametersArgs{...}
type SyntheticsGlobalVariableOptionsTotpParametersInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableOptionsTotpParametersOutput() SyntheticsGlobalVariableOptionsTotpParametersOutput
	ToSyntheticsGlobalVariableOptionsTotpParametersOutputWithContext(context.Context) SyntheticsGlobalVariableOptionsTotpParametersOutput
}

type SyntheticsGlobalVariableOptionsTotpParametersArgs struct {
	// Number of digits for the OTP.
	Digits pulumi.IntInput `pulumi:"digits"`
	// Interval for which to refresh the token (in seconds).
	RefreshInterval pulumi.IntInput `pulumi:"refreshInterval"`
}

func (SyntheticsGlobalVariableOptionsTotpParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableOptionsTotpParameters)(nil)).Elem()
}

func (i SyntheticsGlobalVariableOptionsTotpParametersArgs) ToSyntheticsGlobalVariableOptionsTotpParametersOutput() SyntheticsGlobalVariableOptionsTotpParametersOutput {
	return i.ToSyntheticsGlobalVariableOptionsTotpParametersOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableOptionsTotpParametersArgs) ToSyntheticsGlobalVariableOptionsTotpParametersOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsTotpParametersOutput)
}

func (i SyntheticsGlobalVariableOptionsTotpParametersArgs) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutput() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return i.ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableOptionsTotpParametersArgs) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsTotpParametersOutput).ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(ctx)
}

// SyntheticsGlobalVariableOptionsTotpParametersPtrInput is an input type that accepts SyntheticsGlobalVariableOptionsTotpParametersArgs, SyntheticsGlobalVariableOptionsTotpParametersPtr and SyntheticsGlobalVariableOptionsTotpParametersPtrOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableOptionsTotpParametersPtrInput` via:
//
//	        SyntheticsGlobalVariableOptionsTotpParametersArgs{...}
//
//	or:
//
//	        nil
type SyntheticsGlobalVariableOptionsTotpParametersPtrInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutput() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput
	ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(context.Context) SyntheticsGlobalVariableOptionsTotpParametersPtrOutput
}

type syntheticsGlobalVariableOptionsTotpParametersPtrType SyntheticsGlobalVariableOptionsTotpParametersArgs

func SyntheticsGlobalVariableOptionsTotpParametersPtr(v *SyntheticsGlobalVariableOptionsTotpParametersArgs) SyntheticsGlobalVariableOptionsTotpParametersPtrInput {
	return (*syntheticsGlobalVariableOptionsTotpParametersPtrType)(v)
}

func (*syntheticsGlobalVariableOptionsTotpParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableOptionsTotpParameters)(nil)).Elem()
}

func (i *syntheticsGlobalVariableOptionsTotpParametersPtrType) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutput() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return i.ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(context.Background())
}

func (i *syntheticsGlobalVariableOptionsTotpParametersPtrType) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsTotpParametersPtrOutput)
}

type SyntheticsGlobalVariableOptionsTotpParametersOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableOptionsTotpParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableOptionsTotpParameters)(nil)).Elem()
}

func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) ToSyntheticsGlobalVariableOptionsTotpParametersOutput() SyntheticsGlobalVariableOptionsTotpParametersOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) ToSyntheticsGlobalVariableOptionsTotpParametersOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutput() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o.ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(context.Background())
}

func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsGlobalVariableOptionsTotpParameters) *SyntheticsGlobalVariableOptionsTotpParameters {
		return &v
	}).(SyntheticsGlobalVariableOptionsTotpParametersPtrOutput)
}

// Number of digits for the OTP.
func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) Digits() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableOptionsTotpParameters) int { return v.Digits }).(pulumi.IntOutput)
}

// Interval for which to refresh the token (in seconds).
func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) RefreshInterval() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableOptionsTotpParameters) int { return v.RefreshInterval }).(pulumi.IntOutput)
}

type SyntheticsGlobalVariableOptionsTotpParametersPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableOptionsTotpParameters)(nil)).Elem()
}

func (o SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutput() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) Elem() SyntheticsGlobalVariableOptionsTotpParametersOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableOptionsTotpParameters) SyntheticsGlobalVariableOptionsTotpParameters {
		if v != nil {
			return *v
		}
		var ret SyntheticsGlobalVariableOptionsTotpParameters
		return ret
	}).(SyntheticsGlobalVariableOptionsTotpParametersOutput)
}

// Number of digits for the OTP.
func (o SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) Digits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableOptionsTotpParameters) *int {
		if v == nil {
			return nil
		}
		return &v.Digits
	}).(pulumi.IntPtrOutput)
}

// Interval for which to refresh the token (in seconds).
func (o SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) RefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableOptionsTotpParameters) *int {
		if v == nil {
			return nil
		}
		return &v.RefreshInterval
	}).(pulumi.IntPtrOutput)
}

type SyntheticsGlobalVariableParseTestOptions struct {
	// Required when type = `httpHeader`. Defines the header to use to extract the value
	Field *string `pulumi:"field"`
	// When type is `localVariable`, name of the local variable to use to extract the value.
	LocalVariableName *string                                         `pulumi:"localVariableName"`
	Parser            *SyntheticsGlobalVariableParseTestOptionsParser `pulumi:"parser"`
	// Defines the source to use to extract the value. Valid values are `httpBody`, `httpHeader`, `localVariable`.
	Type string `pulumi:"type"`
}

// SyntheticsGlobalVariableParseTestOptionsInput is an input type that accepts SyntheticsGlobalVariableParseTestOptionsArgs and SyntheticsGlobalVariableParseTestOptionsOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableParseTestOptionsInput` via:
//
//	SyntheticsGlobalVariableParseTestOptionsArgs{...}
type SyntheticsGlobalVariableParseTestOptionsInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableParseTestOptionsOutput() SyntheticsGlobalVariableParseTestOptionsOutput
	ToSyntheticsGlobalVariableParseTestOptionsOutputWithContext(context.Context) SyntheticsGlobalVariableParseTestOptionsOutput
}

type SyntheticsGlobalVariableParseTestOptionsArgs struct {
	// Required when type = `httpHeader`. Defines the header to use to extract the value
	Field pulumi.StringPtrInput `pulumi:"field"`
	// When type is `localVariable`, name of the local variable to use to extract the value.
	LocalVariableName pulumi.StringPtrInput                                  `pulumi:"localVariableName"`
	Parser            SyntheticsGlobalVariableParseTestOptionsParserPtrInput `pulumi:"parser"`
	// Defines the source to use to extract the value. Valid values are `httpBody`, `httpHeader`, `localVariable`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsGlobalVariableParseTestOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptions)(nil)).Elem()
}

func (i SyntheticsGlobalVariableParseTestOptionsArgs) ToSyntheticsGlobalVariableParseTestOptionsOutput() SyntheticsGlobalVariableParseTestOptionsOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableParseTestOptionsArgs) ToSyntheticsGlobalVariableParseTestOptionsOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsOutput)
}

func (i SyntheticsGlobalVariableParseTestOptionsArgs) ToSyntheticsGlobalVariableParseTestOptionsPtrOutput() SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableParseTestOptionsArgs) ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsOutput).ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(ctx)
}

// SyntheticsGlobalVariableParseTestOptionsPtrInput is an input type that accepts SyntheticsGlobalVariableParseTestOptionsArgs, SyntheticsGlobalVariableParseTestOptionsPtr and SyntheticsGlobalVariableParseTestOptionsPtrOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableParseTestOptionsPtrInput` via:
//
//	        SyntheticsGlobalVariableParseTestOptionsArgs{...}
//
//	or:
//
//	        nil
type SyntheticsGlobalVariableParseTestOptionsPtrInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableParseTestOptionsPtrOutput() SyntheticsGlobalVariableParseTestOptionsPtrOutput
	ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(context.Context) SyntheticsGlobalVariableParseTestOptionsPtrOutput
}

type syntheticsGlobalVariableParseTestOptionsPtrType SyntheticsGlobalVariableParseTestOptionsArgs

func SyntheticsGlobalVariableParseTestOptionsPtr(v *SyntheticsGlobalVariableParseTestOptionsArgs) SyntheticsGlobalVariableParseTestOptionsPtrInput {
	return (*syntheticsGlobalVariableParseTestOptionsPtrType)(v)
}

func (*syntheticsGlobalVariableParseTestOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableParseTestOptions)(nil)).Elem()
}

func (i *syntheticsGlobalVariableParseTestOptionsPtrType) ToSyntheticsGlobalVariableParseTestOptionsPtrOutput() SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(context.Background())
}

func (i *syntheticsGlobalVariableParseTestOptionsPtrType) ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsPtrOutput)
}

type SyntheticsGlobalVariableParseTestOptionsOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableParseTestOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptions)(nil)).Elem()
}

func (o SyntheticsGlobalVariableParseTestOptionsOutput) ToSyntheticsGlobalVariableParseTestOptionsOutput() SyntheticsGlobalVariableParseTestOptionsOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsOutput) ToSyntheticsGlobalVariableParseTestOptionsOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsOutput) ToSyntheticsGlobalVariableParseTestOptionsPtrOutput() SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return o.ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(context.Background())
}

func (o SyntheticsGlobalVariableParseTestOptionsOutput) ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsGlobalVariableParseTestOptions) *SyntheticsGlobalVariableParseTestOptions {
		return &v
	}).(SyntheticsGlobalVariableParseTestOptionsPtrOutput)
}

// Required when type = `httpHeader`. Defines the header to use to extract the value
func (o SyntheticsGlobalVariableParseTestOptionsOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptions) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// When type is `localVariable`, name of the local variable to use to extract the value.
func (o SyntheticsGlobalVariableParseTestOptionsOutput) LocalVariableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptions) *string { return v.LocalVariableName }).(pulumi.StringPtrOutput)
}

func (o SyntheticsGlobalVariableParseTestOptionsOutput) Parser() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptions) *SyntheticsGlobalVariableParseTestOptionsParser {
		return v.Parser
	}).(SyntheticsGlobalVariableParseTestOptionsParserPtrOutput)
}

// Defines the source to use to extract the value. Valid values are `httpBody`, `httpHeader`, `localVariable`.
func (o SyntheticsGlobalVariableParseTestOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptions) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsGlobalVariableParseTestOptionsPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableParseTestOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableParseTestOptions)(nil)).Elem()
}

func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) ToSyntheticsGlobalVariableParseTestOptionsPtrOutput() SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) Elem() SyntheticsGlobalVariableParseTestOptionsOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptions) SyntheticsGlobalVariableParseTestOptions {
		if v != nil {
			return *v
		}
		var ret SyntheticsGlobalVariableParseTestOptions
		return ret
	}).(SyntheticsGlobalVariableParseTestOptionsOutput)
}

// Required when type = `httpHeader`. Defines the header to use to extract the value
func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptions) *string {
		if v == nil {
			return nil
		}
		return v.Field
	}).(pulumi.StringPtrOutput)
}

// When type is `localVariable`, name of the local variable to use to extract the value.
func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) LocalVariableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptions) *string {
		if v == nil {
			return nil
		}
		return v.LocalVariableName
	}).(pulumi.StringPtrOutput)
}

func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) Parser() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptions) *SyntheticsGlobalVariableParseTestOptionsParser {
		if v == nil {
			return nil
		}
		return v.Parser
	}).(SyntheticsGlobalVariableParseTestOptionsParserPtrOutput)
}

// Defines the source to use to extract the value. Valid values are `httpBody`, `httpHeader`, `localVariable`.
func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptions) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SyntheticsGlobalVariableParseTestOptionsParser struct {
	// Type of parser to extract the value. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
	Type string `pulumi:"type"`
	// Value for the parser to use, required for type `jsonPath` or `regex`.
	Value *string `pulumi:"value"`
}

// SyntheticsGlobalVariableParseTestOptionsParserInput is an input type that accepts SyntheticsGlobalVariableParseTestOptionsParserArgs and SyntheticsGlobalVariableParseTestOptionsParserOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableParseTestOptionsParserInput` via:
//
//	SyntheticsGlobalVariableParseTestOptionsParserArgs{...}
type SyntheticsGlobalVariableParseTestOptionsParserInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableParseTestOptionsParserOutput() SyntheticsGlobalVariableParseTestOptionsParserOutput
	ToSyntheticsGlobalVariableParseTestOptionsParserOutputWithContext(context.Context) SyntheticsGlobalVariableParseTestOptionsParserOutput
}

type SyntheticsGlobalVariableParseTestOptionsParserArgs struct {
	// Type of parser to extract the value. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
	Type pulumi.StringInput `pulumi:"type"`
	// Value for the parser to use, required for type `jsonPath` or `regex`.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SyntheticsGlobalVariableParseTestOptionsParserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsParser)(nil)).Elem()
}

func (i SyntheticsGlobalVariableParseTestOptionsParserArgs) ToSyntheticsGlobalVariableParseTestOptionsParserOutput() SyntheticsGlobalVariableParseTestOptionsParserOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsParserOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableParseTestOptionsParserArgs) ToSyntheticsGlobalVariableParseTestOptionsParserOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsParserOutput)
}

func (i SyntheticsGlobalVariableParseTestOptionsParserArgs) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutput() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableParseTestOptionsParserArgs) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsParserOutput).ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(ctx)
}

// SyntheticsGlobalVariableParseTestOptionsParserPtrInput is an input type that accepts SyntheticsGlobalVariableParseTestOptionsParserArgs, SyntheticsGlobalVariableParseTestOptionsParserPtr and SyntheticsGlobalVariableParseTestOptionsParserPtrOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableParseTestOptionsParserPtrInput` via:
//
//	        SyntheticsGlobalVariableParseTestOptionsParserArgs{...}
//
//	or:
//
//	        nil
type SyntheticsGlobalVariableParseTestOptionsParserPtrInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutput() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput
	ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(context.Context) SyntheticsGlobalVariableParseTestOptionsParserPtrOutput
}

type syntheticsGlobalVariableParseTestOptionsParserPtrType SyntheticsGlobalVariableParseTestOptionsParserArgs

func SyntheticsGlobalVariableParseTestOptionsParserPtr(v *SyntheticsGlobalVariableParseTestOptionsParserArgs) SyntheticsGlobalVariableParseTestOptionsParserPtrInput {
	return (*syntheticsGlobalVariableParseTestOptionsParserPtrType)(v)
}

func (*syntheticsGlobalVariableParseTestOptionsParserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableParseTestOptionsParser)(nil)).Elem()
}

func (i *syntheticsGlobalVariableParseTestOptionsParserPtrType) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutput() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(context.Background())
}

func (i *syntheticsGlobalVariableParseTestOptionsParserPtrType) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsParserPtrOutput)
}

type SyntheticsGlobalVariableParseTestOptionsParserOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableParseTestOptionsParserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsParser)(nil)).Elem()
}

func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) ToSyntheticsGlobalVariableParseTestOptionsParserOutput() SyntheticsGlobalVariableParseTestOptionsParserOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) ToSyntheticsGlobalVariableParseTestOptionsParserOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutput() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o.ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(context.Background())
}

func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsGlobalVariableParseTestOptionsParser) *SyntheticsGlobalVariableParseTestOptionsParser {
		return &v
	}).(SyntheticsGlobalVariableParseTestOptionsParserPtrOutput)
}

// Type of parser to extract the value. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptionsParser) string { return v.Type }).(pulumi.StringOutput)
}

// Value for the parser to use, required for type `jsonPath` or `regex`.
func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptionsParser) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SyntheticsGlobalVariableParseTestOptionsParserPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableParseTestOptionsParser)(nil)).Elem()
}

func (o SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutput() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) Elem() SyntheticsGlobalVariableParseTestOptionsParserOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptionsParser) SyntheticsGlobalVariableParseTestOptionsParser {
		if v != nil {
			return *v
		}
		var ret SyntheticsGlobalVariableParseTestOptionsParser
		return ret
	}).(SyntheticsGlobalVariableParseTestOptionsParserOutput)
}

// Type of parser to extract the value. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
func (o SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptionsParser) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Value for the parser to use, required for type `jsonPath` or `regex`.
func (o SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptionsParser) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type SyntheticsPrivateLocationMetadata struct {
	// A list of role identifiers pulled from the Roles API to restrict read and write access.
	RestrictedRoles []string `pulumi:"restrictedRoles"`
}

// SyntheticsPrivateLocationMetadataInput is an input type that accepts SyntheticsPrivateLocationMetadataArgs and SyntheticsPrivateLocationMetadataOutput values.
// You can construct a concrete instance of `SyntheticsPrivateLocationMetadataInput` via:
//
//	SyntheticsPrivateLocationMetadataArgs{...}
type SyntheticsPrivateLocationMetadataInput interface {
	pulumi.Input

	ToSyntheticsPrivateLocationMetadataOutput() SyntheticsPrivateLocationMetadataOutput
	ToSyntheticsPrivateLocationMetadataOutputWithContext(context.Context) SyntheticsPrivateLocationMetadataOutput
}

type SyntheticsPrivateLocationMetadataArgs struct {
	// A list of role identifiers pulled from the Roles API to restrict read and write access.
	RestrictedRoles pulumi.StringArrayInput `pulumi:"restrictedRoles"`
}

func (SyntheticsPrivateLocationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsPrivateLocationMetadata)(nil)).Elem()
}

func (i SyntheticsPrivateLocationMetadataArgs) ToSyntheticsPrivateLocationMetadataOutput() SyntheticsPrivateLocationMetadataOutput {
	return i.ToSyntheticsPrivateLocationMetadataOutputWithContext(context.Background())
}

func (i SyntheticsPrivateLocationMetadataArgs) ToSyntheticsPrivateLocationMetadataOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsPrivateLocationMetadataOutput)
}

func (i SyntheticsPrivateLocationMetadataArgs) ToSyntheticsPrivateLocationMetadataPtrOutput() SyntheticsPrivateLocationMetadataPtrOutput {
	return i.ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(context.Background())
}

func (i SyntheticsPrivateLocationMetadataArgs) ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsPrivateLocationMetadataOutput).ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(ctx)
}

// SyntheticsPrivateLocationMetadataPtrInput is an input type that accepts SyntheticsPrivateLocationMetadataArgs, SyntheticsPrivateLocationMetadataPtr and SyntheticsPrivateLocationMetadataPtrOutput values.
// You can construct a concrete instance of `SyntheticsPrivateLocationMetadataPtrInput` via:
//
//	        SyntheticsPrivateLocationMetadataArgs{...}
//
//	or:
//
//	        nil
type SyntheticsPrivateLocationMetadataPtrInput interface {
	pulumi.Input

	ToSyntheticsPrivateLocationMetadataPtrOutput() SyntheticsPrivateLocationMetadataPtrOutput
	ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(context.Context) SyntheticsPrivateLocationMetadataPtrOutput
}

type syntheticsPrivateLocationMetadataPtrType SyntheticsPrivateLocationMetadataArgs

func SyntheticsPrivateLocationMetadataPtr(v *SyntheticsPrivateLocationMetadataArgs) SyntheticsPrivateLocationMetadataPtrInput {
	return (*syntheticsPrivateLocationMetadataPtrType)(v)
}

func (*syntheticsPrivateLocationMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsPrivateLocationMetadata)(nil)).Elem()
}

func (i *syntheticsPrivateLocationMetadataPtrType) ToSyntheticsPrivateLocationMetadataPtrOutput() SyntheticsPrivateLocationMetadataPtrOutput {
	return i.ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(context.Background())
}

func (i *syntheticsPrivateLocationMetadataPtrType) ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsPrivateLocationMetadataPtrOutput)
}

type SyntheticsPrivateLocationMetadataOutput struct{ *pulumi.OutputState }

func (SyntheticsPrivateLocationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsPrivateLocationMetadata)(nil)).Elem()
}

func (o SyntheticsPrivateLocationMetadataOutput) ToSyntheticsPrivateLocationMetadataOutput() SyntheticsPrivateLocationMetadataOutput {
	return o
}

func (o SyntheticsPrivateLocationMetadataOutput) ToSyntheticsPrivateLocationMetadataOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataOutput {
	return o
}

func (o SyntheticsPrivateLocationMetadataOutput) ToSyntheticsPrivateLocationMetadataPtrOutput() SyntheticsPrivateLocationMetadataPtrOutput {
	return o.ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(context.Background())
}

func (o SyntheticsPrivateLocationMetadataOutput) ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsPrivateLocationMetadata) *SyntheticsPrivateLocationMetadata {
		return &v
	}).(SyntheticsPrivateLocationMetadataPtrOutput)
}

// A list of role identifiers pulled from the Roles API to restrict read and write access.
func (o SyntheticsPrivateLocationMetadataOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsPrivateLocationMetadata) []string { return v.RestrictedRoles }).(pulumi.StringArrayOutput)
}

type SyntheticsPrivateLocationMetadataPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsPrivateLocationMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsPrivateLocationMetadata)(nil)).Elem()
}

func (o SyntheticsPrivateLocationMetadataPtrOutput) ToSyntheticsPrivateLocationMetadataPtrOutput() SyntheticsPrivateLocationMetadataPtrOutput {
	return o
}

func (o SyntheticsPrivateLocationMetadataPtrOutput) ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataPtrOutput {
	return o
}

func (o SyntheticsPrivateLocationMetadataPtrOutput) Elem() SyntheticsPrivateLocationMetadataOutput {
	return o.ApplyT(func(v *SyntheticsPrivateLocationMetadata) SyntheticsPrivateLocationMetadata {
		if v != nil {
			return *v
		}
		var ret SyntheticsPrivateLocationMetadata
		return ret
	}).(SyntheticsPrivateLocationMetadataOutput)
}

// A list of role identifiers pulled from the Roles API to restrict read and write access.
func (o SyntheticsPrivateLocationMetadataPtrOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsPrivateLocationMetadata) []string {
		if v == nil {
			return nil
		}
		return v.RestrictedRoles
	}).(pulumi.StringArrayOutput)
}

type SyntheticsTestApiStep struct {
	// Determines whether or not to continue with test if this step fails.
	AllowFailure *bool `pulumi:"allowFailure"`
	// Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.
	Assertions []SyntheticsTestApiStepAssertion `pulumi:"assertions"`
	// Values to parse and save as variables from the response.
	ExtractedValues []SyntheticsTestApiStepExtractedValue `pulumi:"extractedValues"`
	// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
	IsCritical *bool `pulumi:"isCritical"`
	// The name of the step.
	Name string `pulumi:"name"`
	// The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.
	RequestBasicauth *SyntheticsTestApiStepRequestBasicauth `pulumi:"requestBasicauth"`
	// Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.
	RequestClientCertificate *SyntheticsTestApiStepRequestClientCertificate `pulumi:"requestClientCertificate"`
	// The request for the api step.
	RequestDefinition *SyntheticsTestApiStepRequestDefinition `pulumi:"requestDefinition"`
	// Files to be used as part of the request in the test.
	RequestFiles []SyntheticsTestApiStepRequestFile `pulumi:"requestFiles"`
	// Header name and value map.
	RequestHeaders map[string]string `pulumi:"requestHeaders"`
	// Metadata to include when performing the gRPC request.
	RequestMetadata map[string]string `pulumi:"requestMetadata"`
	// The proxy to perform the test.
	RequestProxy *SyntheticsTestApiStepRequestProxy `pulumi:"requestProxy"`
	// Query arguments name and value map.
	RequestQuery map[string]string           `pulumi:"requestQuery"`
	Retry        *SyntheticsTestApiStepRetry `pulumi:"retry"`
	// The subtype of the Synthetic multi-step API test step. Valid values are `http`, `grpc`, `wait`. Defaults to `"http"`.
	Subtype *string `pulumi:"subtype"`
	// The time to wait in seconds. Minimum value: 0. Maximum value: 180.
	Value *int `pulumi:"value"`
}

// SyntheticsTestApiStepInput is an input type that accepts SyntheticsTestApiStepArgs and SyntheticsTestApiStepOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepInput` via:
//
//	SyntheticsTestApiStepArgs{...}
type SyntheticsTestApiStepInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepOutput() SyntheticsTestApiStepOutput
	ToSyntheticsTestApiStepOutputWithContext(context.Context) SyntheticsTestApiStepOutput
}

type SyntheticsTestApiStepArgs struct {
	// Determines whether or not to continue with test if this step fails.
	AllowFailure pulumi.BoolPtrInput `pulumi:"allowFailure"`
	// Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.
	Assertions SyntheticsTestApiStepAssertionArrayInput `pulumi:"assertions"`
	// Values to parse and save as variables from the response.
	ExtractedValues SyntheticsTestApiStepExtractedValueArrayInput `pulumi:"extractedValues"`
	// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
	IsCritical pulumi.BoolPtrInput `pulumi:"isCritical"`
	// The name of the step.
	Name pulumi.StringInput `pulumi:"name"`
	// The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.
	RequestBasicauth SyntheticsTestApiStepRequestBasicauthPtrInput `pulumi:"requestBasicauth"`
	// Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.
	RequestClientCertificate SyntheticsTestApiStepRequestClientCertificatePtrInput `pulumi:"requestClientCertificate"`
	// The request for the api step.
	RequestDefinition SyntheticsTestApiStepRequestDefinitionPtrInput `pulumi:"requestDefinition"`
	// Files to be used as part of the request in the test.
	RequestFiles SyntheticsTestApiStepRequestFileArrayInput `pulumi:"requestFiles"`
	// Header name and value map.
	RequestHeaders pulumi.StringMapInput `pulumi:"requestHeaders"`
	// Metadata to include when performing the gRPC request.
	RequestMetadata pulumi.StringMapInput `pulumi:"requestMetadata"`
	// The proxy to perform the test.
	RequestProxy SyntheticsTestApiStepRequestProxyPtrInput `pulumi:"requestProxy"`
	// Query arguments name and value map.
	RequestQuery pulumi.StringMapInput              `pulumi:"requestQuery"`
	Retry        SyntheticsTestApiStepRetryPtrInput `pulumi:"retry"`
	// The subtype of the Synthetic multi-step API test step. Valid values are `http`, `grpc`, `wait`. Defaults to `"http"`.
	Subtype pulumi.StringPtrInput `pulumi:"subtype"`
	// The time to wait in seconds. Minimum value: 0. Maximum value: 180.
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (SyntheticsTestApiStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStep)(nil)).Elem()
}

func (i SyntheticsTestApiStepArgs) ToSyntheticsTestApiStepOutput() SyntheticsTestApiStepOutput {
	return i.ToSyntheticsTestApiStepOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepArgs) ToSyntheticsTestApiStepOutputWithContext(ctx context.Context) SyntheticsTestApiStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepOutput)
}

// SyntheticsTestApiStepArrayInput is an input type that accepts SyntheticsTestApiStepArray and SyntheticsTestApiStepArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepArrayInput` via:
//
//	SyntheticsTestApiStepArray{ SyntheticsTestApiStepArgs{...} }
type SyntheticsTestApiStepArrayInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepArrayOutput() SyntheticsTestApiStepArrayOutput
	ToSyntheticsTestApiStepArrayOutputWithContext(context.Context) SyntheticsTestApiStepArrayOutput
}

type SyntheticsTestApiStepArray []SyntheticsTestApiStepInput

func (SyntheticsTestApiStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStep)(nil)).Elem()
}

func (i SyntheticsTestApiStepArray) ToSyntheticsTestApiStepArrayOutput() SyntheticsTestApiStepArrayOutput {
	return i.ToSyntheticsTestApiStepArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepArray) ToSyntheticsTestApiStepArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepArrayOutput)
}

type SyntheticsTestApiStepOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStep)(nil)).Elem()
}

func (o SyntheticsTestApiStepOutput) ToSyntheticsTestApiStepOutput() SyntheticsTestApiStepOutput {
	return o
}

func (o SyntheticsTestApiStepOutput) ToSyntheticsTestApiStepOutputWithContext(ctx context.Context) SyntheticsTestApiStepOutput {
	return o
}

// Determines whether or not to continue with test if this step fails.
func (o SyntheticsTestApiStepOutput) AllowFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *bool { return v.AllowFailure }).(pulumi.BoolPtrOutput)
}

// Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.
func (o SyntheticsTestApiStepOutput) Assertions() SyntheticsTestApiStepAssertionArrayOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) []SyntheticsTestApiStepAssertion { return v.Assertions }).(SyntheticsTestApiStepAssertionArrayOutput)
}

// Values to parse and save as variables from the response.
func (o SyntheticsTestApiStepOutput) ExtractedValues() SyntheticsTestApiStepExtractedValueArrayOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) []SyntheticsTestApiStepExtractedValue { return v.ExtractedValues }).(SyntheticsTestApiStepExtractedValueArrayOutput)
}

// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
func (o SyntheticsTestApiStepOutput) IsCritical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *bool { return v.IsCritical }).(pulumi.BoolPtrOutput)
}

// The name of the step.
func (o SyntheticsTestApiStepOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) string { return v.Name }).(pulumi.StringOutput)
}

// The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestApiStepOutput) RequestBasicauth() SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *SyntheticsTestApiStepRequestBasicauth { return v.RequestBasicauth }).(SyntheticsTestApiStepRequestBasicauthPtrOutput)
}

// Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestApiStepOutput) RequestClientCertificate() SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *SyntheticsTestApiStepRequestClientCertificate {
		return v.RequestClientCertificate
	}).(SyntheticsTestApiStepRequestClientCertificatePtrOutput)
}

// The request for the api step.
func (o SyntheticsTestApiStepOutput) RequestDefinition() SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *SyntheticsTestApiStepRequestDefinition { return v.RequestDefinition }).(SyntheticsTestApiStepRequestDefinitionPtrOutput)
}

// Files to be used as part of the request in the test.
func (o SyntheticsTestApiStepOutput) RequestFiles() SyntheticsTestApiStepRequestFileArrayOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) []SyntheticsTestApiStepRequestFile { return v.RequestFiles }).(SyntheticsTestApiStepRequestFileArrayOutput)
}

// Header name and value map.
func (o SyntheticsTestApiStepOutput) RequestHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) map[string]string { return v.RequestHeaders }).(pulumi.StringMapOutput)
}

// Metadata to include when performing the gRPC request.
func (o SyntheticsTestApiStepOutput) RequestMetadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) map[string]string { return v.RequestMetadata }).(pulumi.StringMapOutput)
}

// The proxy to perform the test.
func (o SyntheticsTestApiStepOutput) RequestProxy() SyntheticsTestApiStepRequestProxyPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *SyntheticsTestApiStepRequestProxy { return v.RequestProxy }).(SyntheticsTestApiStepRequestProxyPtrOutput)
}

// Query arguments name and value map.
func (o SyntheticsTestApiStepOutput) RequestQuery() pulumi.StringMapOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) map[string]string { return v.RequestQuery }).(pulumi.StringMapOutput)
}

func (o SyntheticsTestApiStepOutput) Retry() SyntheticsTestApiStepRetryPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *SyntheticsTestApiStepRetry { return v.Retry }).(SyntheticsTestApiStepRetryPtrOutput)
}

// The subtype of the Synthetic multi-step API test step. Valid values are `http`, `grpc`, `wait`. Defaults to `"http"`.
func (o SyntheticsTestApiStepOutput) Subtype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *string { return v.Subtype }).(pulumi.StringPtrOutput)
}

// The time to wait in seconds. Minimum value: 0. Maximum value: 180.
func (o SyntheticsTestApiStepOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type SyntheticsTestApiStepArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStep)(nil)).Elem()
}

func (o SyntheticsTestApiStepArrayOutput) ToSyntheticsTestApiStepArrayOutput() SyntheticsTestApiStepArrayOutput {
	return o
}

func (o SyntheticsTestApiStepArrayOutput) ToSyntheticsTestApiStepArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepArrayOutput {
	return o
}

func (o SyntheticsTestApiStepArrayOutput) Index(i pulumi.IntInput) SyntheticsTestApiStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestApiStep {
		return vs[0].([]SyntheticsTestApiStep)[vs[1].(int)]
	}).(SyntheticsTestApiStepOutput)
}

type SyntheticsTestApiStepAssertion struct {
	// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
	Operator string `pulumi:"operator"`
	// If assertion type is `header`, this is the header name.
	Property *string `pulumi:"property"`
	// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
	Target *string `pulumi:"target"`
	// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
	Targetjsonpath *SyntheticsTestApiStepAssertionTargetjsonpath `pulumi:"targetjsonpath"`
	// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
	Targetjsonschema *SyntheticsTestApiStepAssertionTargetjsonschema `pulumi:"targetjsonschema"`
	// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
	Targetxpath *SyntheticsTestApiStepAssertionTargetxpath `pulumi:"targetxpath"`
	// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
	TimingsScope *string `pulumi:"timingsScope"`
	// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.
	Type string `pulumi:"type"`
}

// SyntheticsTestApiStepAssertionInput is an input type that accepts SyntheticsTestApiStepAssertionArgs and SyntheticsTestApiStepAssertionOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionInput` via:
//
//	SyntheticsTestApiStepAssertionArgs{...}
type SyntheticsTestApiStepAssertionInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionOutput() SyntheticsTestApiStepAssertionOutput
	ToSyntheticsTestApiStepAssertionOutputWithContext(context.Context) SyntheticsTestApiStepAssertionOutput
}

type SyntheticsTestApiStepAssertionArgs struct {
	// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
	Operator pulumi.StringInput `pulumi:"operator"`
	// If assertion type is `header`, this is the header name.
	Property pulumi.StringPtrInput `pulumi:"property"`
	// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
	Targetjsonpath SyntheticsTestApiStepAssertionTargetjsonpathPtrInput `pulumi:"targetjsonpath"`
	// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
	Targetjsonschema SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput `pulumi:"targetjsonschema"`
	// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
	Targetxpath SyntheticsTestApiStepAssertionTargetxpathPtrInput `pulumi:"targetxpath"`
	// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
	TimingsScope pulumi.StringPtrInput `pulumi:"timingsScope"`
	// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestApiStepAssertionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertion)(nil)).Elem()
}

func (i SyntheticsTestApiStepAssertionArgs) ToSyntheticsTestApiStepAssertionOutput() SyntheticsTestApiStepAssertionOutput {
	return i.ToSyntheticsTestApiStepAssertionOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionArgs) ToSyntheticsTestApiStepAssertionOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionOutput)
}

// SyntheticsTestApiStepAssertionArrayInput is an input type that accepts SyntheticsTestApiStepAssertionArray and SyntheticsTestApiStepAssertionArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionArrayInput` via:
//
//	SyntheticsTestApiStepAssertionArray{ SyntheticsTestApiStepAssertionArgs{...} }
type SyntheticsTestApiStepAssertionArrayInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionArrayOutput() SyntheticsTestApiStepAssertionArrayOutput
	ToSyntheticsTestApiStepAssertionArrayOutputWithContext(context.Context) SyntheticsTestApiStepAssertionArrayOutput
}

type SyntheticsTestApiStepAssertionArray []SyntheticsTestApiStepAssertionInput

func (SyntheticsTestApiStepAssertionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepAssertion)(nil)).Elem()
}

func (i SyntheticsTestApiStepAssertionArray) ToSyntheticsTestApiStepAssertionArrayOutput() SyntheticsTestApiStepAssertionArrayOutput {
	return i.ToSyntheticsTestApiStepAssertionArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionArray) ToSyntheticsTestApiStepAssertionArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionArrayOutput)
}

type SyntheticsTestApiStepAssertionOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertion)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionOutput) ToSyntheticsTestApiStepAssertionOutput() SyntheticsTestApiStepAssertionOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionOutput) ToSyntheticsTestApiStepAssertionOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionOutput {
	return o
}

// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
func (o SyntheticsTestApiStepAssertionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) string { return v.Operator }).(pulumi.StringOutput)
}

// If assertion type is `header`, this is the header name.
func (o SyntheticsTestApiStepAssertionOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *string { return v.Property }).(pulumi.StringPtrOutput)
}

// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
func (o SyntheticsTestApiStepAssertionOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestApiStepAssertionOutput) Targetjsonpath() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *SyntheticsTestApiStepAssertionTargetjsonpath {
		return v.Targetjsonpath
	}).(SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput)
}

// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestApiStepAssertionOutput) Targetjsonschema() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *SyntheticsTestApiStepAssertionTargetjsonschema {
		return v.Targetjsonschema
	}).(SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput)
}

// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestApiStepAssertionOutput) Targetxpath() SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *SyntheticsTestApiStepAssertionTargetxpath {
		return v.Targetxpath
	}).(SyntheticsTestApiStepAssertionTargetxpathPtrOutput)
}

// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
func (o SyntheticsTestApiStepAssertionOutput) TimingsScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *string { return v.TimingsScope }).(pulumi.StringPtrOutput)
}

// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.
func (o SyntheticsTestApiStepAssertionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestApiStepAssertionArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepAssertion)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionArrayOutput) ToSyntheticsTestApiStepAssertionArrayOutput() SyntheticsTestApiStepAssertionArrayOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionArrayOutput) ToSyntheticsTestApiStepAssertionArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionArrayOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionArrayOutput) Index(i pulumi.IntInput) SyntheticsTestApiStepAssertionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestApiStepAssertion {
		return vs[0].([]SyntheticsTestApiStepAssertion)[vs[1].(int)]
	}).(SyntheticsTestApiStepAssertionOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonpath struct {
	// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `firstElementMatches`. Defaults to `"firstElementMatches"`.
	Elementsoperator *string `pulumi:"elementsoperator"`
	// The JSON path to assert.
	Jsonpath string `pulumi:"jsonpath"`
	// The specific operator to use on the path.
	Operator string `pulumi:"operator"`
	// Expected matching value.
	Targetvalue *string `pulumi:"targetvalue"`
}

// SyntheticsTestApiStepAssertionTargetjsonpathInput is an input type that accepts SyntheticsTestApiStepAssertionTargetjsonpathArgs and SyntheticsTestApiStepAssertionTargetjsonpathOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetjsonpathInput` via:
//
//	SyntheticsTestApiStepAssertionTargetjsonpathArgs{...}
type SyntheticsTestApiStepAssertionTargetjsonpathInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetjsonpathOutput() SyntheticsTestApiStepAssertionTargetjsonpathOutput
	ToSyntheticsTestApiStepAssertionTargetjsonpathOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetjsonpathOutput
}

type SyntheticsTestApiStepAssertionTargetjsonpathArgs struct {
	// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `firstElementMatches`. Defaults to `"firstElementMatches"`.
	Elementsoperator pulumi.StringPtrInput `pulumi:"elementsoperator"`
	// The JSON path to assert.
	Jsonpath pulumi.StringInput `pulumi:"jsonpath"`
	// The specific operator to use on the path.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Expected matching value.
	Targetvalue pulumi.StringPtrInput `pulumi:"targetvalue"`
}

func (SyntheticsTestApiStepAssertionTargetjsonpathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonpath)(nil)).Elem()
}

func (i SyntheticsTestApiStepAssertionTargetjsonpathArgs) ToSyntheticsTestApiStepAssertionTargetjsonpathOutput() SyntheticsTestApiStepAssertionTargetjsonpathOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonpathOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetjsonpathArgs) ToSyntheticsTestApiStepAssertionTargetjsonpathOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonpathOutput)
}

func (i SyntheticsTestApiStepAssertionTargetjsonpathArgs) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutput() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetjsonpathArgs) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonpathOutput).ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepAssertionTargetjsonpathPtrInput is an input type that accepts SyntheticsTestApiStepAssertionTargetjsonpathArgs, SyntheticsTestApiStepAssertionTargetjsonpathPtr and SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetjsonpathPtrInput` via:
//
//	        SyntheticsTestApiStepAssertionTargetjsonpathArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepAssertionTargetjsonpathPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutput() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput
	ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput
}

type syntheticsTestApiStepAssertionTargetjsonpathPtrType SyntheticsTestApiStepAssertionTargetjsonpathArgs

func SyntheticsTestApiStepAssertionTargetjsonpathPtr(v *SyntheticsTestApiStepAssertionTargetjsonpathArgs) SyntheticsTestApiStepAssertionTargetjsonpathPtrInput {
	return (*syntheticsTestApiStepAssertionTargetjsonpathPtrType)(v)
}

func (*syntheticsTestApiStepAssertionTargetjsonpathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetjsonpath)(nil)).Elem()
}

func (i *syntheticsTestApiStepAssertionTargetjsonpathPtrType) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutput() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepAssertionTargetjsonpathPtrType) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonpathOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetjsonpathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonpath)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathOutput() SyntheticsTestApiStepAssertionTargetjsonpathOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutput() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return o.ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepAssertionTargetjsonpath) *SyntheticsTestApiStepAssertionTargetjsonpath {
		return &v
	}).(SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput)
}

// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `firstElementMatches`. Defaults to `"firstElementMatches"`.
func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) Elementsoperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonpath) *string { return v.Elementsoperator }).(pulumi.StringPtrOutput)
}

// The JSON path to assert.
func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) Jsonpath() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonpath) string { return v.Jsonpath }).(pulumi.StringOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonpath) string { return v.Operator }).(pulumi.StringOutput)
}

// Expected matching value.
func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonpath) *string { return v.Targetvalue }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetjsonpath)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutput() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) Elem() SyntheticsTestApiStepAssertionTargetjsonpathOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonpath) SyntheticsTestApiStepAssertionTargetjsonpath {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepAssertionTargetjsonpath
		return ret
	}).(SyntheticsTestApiStepAssertionTargetjsonpathOutput)
}

// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `firstElementMatches`. Defaults to `"firstElementMatches"`.
func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) Elementsoperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return v.Elementsoperator
	}).(pulumi.StringPtrOutput)
}

// The JSON path to assert.
func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) Jsonpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return &v.Jsonpath
	}).(pulumi.StringPtrOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Expected matching value.
func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return v.Targetvalue
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonschema struct {
	// The JSON Schema to validate the body against.
	Jsonschema string `pulumi:"jsonschema"`
	// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
	Metaschema *string `pulumi:"metaschema"`
}

// SyntheticsTestApiStepAssertionTargetjsonschemaInput is an input type that accepts SyntheticsTestApiStepAssertionTargetjsonschemaArgs and SyntheticsTestApiStepAssertionTargetjsonschemaOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetjsonschemaInput` via:
//
//	SyntheticsTestApiStepAssertionTargetjsonschemaArgs{...}
type SyntheticsTestApiStepAssertionTargetjsonschemaInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetjsonschemaOutput() SyntheticsTestApiStepAssertionTargetjsonschemaOutput
	ToSyntheticsTestApiStepAssertionTargetjsonschemaOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaOutput
}

type SyntheticsTestApiStepAssertionTargetjsonschemaArgs struct {
	// The JSON Schema to validate the body against.
	Jsonschema pulumi.StringInput `pulumi:"jsonschema"`
	// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
	Metaschema pulumi.StringPtrInput `pulumi:"metaschema"`
}

func (SyntheticsTestApiStepAssertionTargetjsonschemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonschema)(nil)).Elem()
}

func (i SyntheticsTestApiStepAssertionTargetjsonschemaArgs) ToSyntheticsTestApiStepAssertionTargetjsonschemaOutput() SyntheticsTestApiStepAssertionTargetjsonschemaOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonschemaOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetjsonschemaArgs) ToSyntheticsTestApiStepAssertionTargetjsonschemaOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonschemaOutput)
}

func (i SyntheticsTestApiStepAssertionTargetjsonschemaArgs) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetjsonschemaArgs) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonschemaOutput).ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput is an input type that accepts SyntheticsTestApiStepAssertionTargetjsonschemaArgs, SyntheticsTestApiStepAssertionTargetjsonschemaPtr and SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput` via:
//
//	        SyntheticsTestApiStepAssertionTargetjsonschemaArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput
	ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput
}

type syntheticsTestApiStepAssertionTargetjsonschemaPtrType SyntheticsTestApiStepAssertionTargetjsonschemaArgs

func SyntheticsTestApiStepAssertionTargetjsonschemaPtr(v *SyntheticsTestApiStepAssertionTargetjsonschemaArgs) SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput {
	return (*syntheticsTestApiStepAssertionTargetjsonschemaPtrType)(v)
}

func (*syntheticsTestApiStepAssertionTargetjsonschemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetjsonschema)(nil)).Elem()
}

func (i *syntheticsTestApiStepAssertionTargetjsonschemaPtrType) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepAssertionTargetjsonschemaPtrType) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonschemaOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetjsonschemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonschema)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaOutput() SyntheticsTestApiStepAssertionTargetjsonschemaOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return o.ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepAssertionTargetjsonschema) *SyntheticsTestApiStepAssertionTargetjsonschema {
		return &v
	}).(SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput)
}

// The JSON Schema to validate the body against.
func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) Jsonschema() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonschema) string { return v.Jsonschema }).(pulumi.StringOutput)
}

// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) Metaschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonschema) *string { return v.Metaschema }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetjsonschema)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) Elem() SyntheticsTestApiStepAssertionTargetjsonschemaOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonschema) SyntheticsTestApiStepAssertionTargetjsonschema {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepAssertionTargetjsonschema
		return ret
	}).(SyntheticsTestApiStepAssertionTargetjsonschemaOutput)
}

// The JSON Schema to validate the body against.
func (o SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) Jsonschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonschema) *string {
		if v == nil {
			return nil
		}
		return &v.Jsonschema
	}).(pulumi.StringPtrOutput)
}

// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
func (o SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) Metaschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonschema) *string {
		if v == nil {
			return nil
		}
		return v.Metaschema
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetxpath struct {
	// The specific operator to use on the path.
	Operator string `pulumi:"operator"`
	// Expected matching value.
	Targetvalue *string `pulumi:"targetvalue"`
	// The xpath to assert.
	Xpath string `pulumi:"xpath"`
}

// SyntheticsTestApiStepAssertionTargetxpathInput is an input type that accepts SyntheticsTestApiStepAssertionTargetxpathArgs and SyntheticsTestApiStepAssertionTargetxpathOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetxpathInput` via:
//
//	SyntheticsTestApiStepAssertionTargetxpathArgs{...}
type SyntheticsTestApiStepAssertionTargetxpathInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetxpathOutput() SyntheticsTestApiStepAssertionTargetxpathOutput
	ToSyntheticsTestApiStepAssertionTargetxpathOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetxpathOutput
}

type SyntheticsTestApiStepAssertionTargetxpathArgs struct {
	// The specific operator to use on the path.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Expected matching value.
	Targetvalue pulumi.StringPtrInput `pulumi:"targetvalue"`
	// The xpath to assert.
	Xpath pulumi.StringInput `pulumi:"xpath"`
}

func (SyntheticsTestApiStepAssertionTargetxpathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetxpath)(nil)).Elem()
}

func (i SyntheticsTestApiStepAssertionTargetxpathArgs) ToSyntheticsTestApiStepAssertionTargetxpathOutput() SyntheticsTestApiStepAssertionTargetxpathOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetxpathOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetxpathArgs) ToSyntheticsTestApiStepAssertionTargetxpathOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetxpathOutput)
}

func (i SyntheticsTestApiStepAssertionTargetxpathArgs) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutput() SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetxpathArgs) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetxpathOutput).ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepAssertionTargetxpathPtrInput is an input type that accepts SyntheticsTestApiStepAssertionTargetxpathArgs, SyntheticsTestApiStepAssertionTargetxpathPtr and SyntheticsTestApiStepAssertionTargetxpathPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetxpathPtrInput` via:
//
//	        SyntheticsTestApiStepAssertionTargetxpathArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepAssertionTargetxpathPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetxpathPtrOutput() SyntheticsTestApiStepAssertionTargetxpathPtrOutput
	ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetxpathPtrOutput
}

type syntheticsTestApiStepAssertionTargetxpathPtrType SyntheticsTestApiStepAssertionTargetxpathArgs

func SyntheticsTestApiStepAssertionTargetxpathPtr(v *SyntheticsTestApiStepAssertionTargetxpathArgs) SyntheticsTestApiStepAssertionTargetxpathPtrInput {
	return (*syntheticsTestApiStepAssertionTargetxpathPtrType)(v)
}

func (*syntheticsTestApiStepAssertionTargetxpathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetxpath)(nil)).Elem()
}

func (i *syntheticsTestApiStepAssertionTargetxpathPtrType) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutput() SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepAssertionTargetxpathPtrType) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetxpathPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetxpathOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetxpathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetxpath)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetxpathOutput) ToSyntheticsTestApiStepAssertionTargetxpathOutput() SyntheticsTestApiStepAssertionTargetxpathOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetxpathOutput) ToSyntheticsTestApiStepAssertionTargetxpathOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetxpathOutput) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutput() SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return o.ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepAssertionTargetxpathOutput) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepAssertionTargetxpath) *SyntheticsTestApiStepAssertionTargetxpath {
		return &v
	}).(SyntheticsTestApiStepAssertionTargetxpathPtrOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestApiStepAssertionTargetxpathOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetxpath) string { return v.Operator }).(pulumi.StringOutput)
}

// Expected matching value.
func (o SyntheticsTestApiStepAssertionTargetxpathOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetxpath) *string { return v.Targetvalue }).(pulumi.StringPtrOutput)
}

// The xpath to assert.
func (o SyntheticsTestApiStepAssertionTargetxpathOutput) Xpath() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetxpath) string { return v.Xpath }).(pulumi.StringOutput)
}

type SyntheticsTestApiStepAssertionTargetxpathPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetxpathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetxpath)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutput() SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) Elem() SyntheticsTestApiStepAssertionTargetxpathOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetxpath) SyntheticsTestApiStepAssertionTargetxpath {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepAssertionTargetxpath
		return ret
	}).(SyntheticsTestApiStepAssertionTargetxpathOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Expected matching value.
func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return v.Targetvalue
	}).(pulumi.StringPtrOutput)
}

// The xpath to assert.
func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) Xpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return &v.Xpath
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepExtractedValue struct {
	// When type is `httpHeader`, name of the header to use to extract the value.
	Field  *string                                   `pulumi:"field"`
	Name   string                                    `pulumi:"name"`
	Parser SyntheticsTestApiStepExtractedValueParser `pulumi:"parser"`
	// Determines whether or not the extracted value will be obfuscated.
	Secure *bool `pulumi:"secure"`
	// Property of the Synthetics Test Response to use for the variable. Valid values are `httpBody`, `httpHeader`, `localVariable`.
	Type string `pulumi:"type"`
}

// SyntheticsTestApiStepExtractedValueInput is an input type that accepts SyntheticsTestApiStepExtractedValueArgs and SyntheticsTestApiStepExtractedValueOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepExtractedValueInput` via:
//
//	SyntheticsTestApiStepExtractedValueArgs{...}
type SyntheticsTestApiStepExtractedValueInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepExtractedValueOutput() SyntheticsTestApiStepExtractedValueOutput
	ToSyntheticsTestApiStepExtractedValueOutputWithContext(context.Context) SyntheticsTestApiStepExtractedValueOutput
}

type SyntheticsTestApiStepExtractedValueArgs struct {
	// When type is `httpHeader`, name of the header to use to extract the value.
	Field  pulumi.StringPtrInput                          `pulumi:"field"`
	Name   pulumi.StringInput                             `pulumi:"name"`
	Parser SyntheticsTestApiStepExtractedValueParserInput `pulumi:"parser"`
	// Determines whether or not the extracted value will be obfuscated.
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// Property of the Synthetics Test Response to use for the variable. Valid values are `httpBody`, `httpHeader`, `localVariable`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestApiStepExtractedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepExtractedValue)(nil)).Elem()
}

func (i SyntheticsTestApiStepExtractedValueArgs) ToSyntheticsTestApiStepExtractedValueOutput() SyntheticsTestApiStepExtractedValueOutput {
	return i.ToSyntheticsTestApiStepExtractedValueOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepExtractedValueArgs) ToSyntheticsTestApiStepExtractedValueOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepExtractedValueOutput)
}

// SyntheticsTestApiStepExtractedValueArrayInput is an input type that accepts SyntheticsTestApiStepExtractedValueArray and SyntheticsTestApiStepExtractedValueArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepExtractedValueArrayInput` via:
//
//	SyntheticsTestApiStepExtractedValueArray{ SyntheticsTestApiStepExtractedValueArgs{...} }
type SyntheticsTestApiStepExtractedValueArrayInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepExtractedValueArrayOutput() SyntheticsTestApiStepExtractedValueArrayOutput
	ToSyntheticsTestApiStepExtractedValueArrayOutputWithContext(context.Context) SyntheticsTestApiStepExtractedValueArrayOutput
}

type SyntheticsTestApiStepExtractedValueArray []SyntheticsTestApiStepExtractedValueInput

func (SyntheticsTestApiStepExtractedValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepExtractedValue)(nil)).Elem()
}

func (i SyntheticsTestApiStepExtractedValueArray) ToSyntheticsTestApiStepExtractedValueArrayOutput() SyntheticsTestApiStepExtractedValueArrayOutput {
	return i.ToSyntheticsTestApiStepExtractedValueArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepExtractedValueArray) ToSyntheticsTestApiStepExtractedValueArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepExtractedValueArrayOutput)
}

type SyntheticsTestApiStepExtractedValueOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepExtractedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepExtractedValue)(nil)).Elem()
}

func (o SyntheticsTestApiStepExtractedValueOutput) ToSyntheticsTestApiStepExtractedValueOutput() SyntheticsTestApiStepExtractedValueOutput {
	return o
}

func (o SyntheticsTestApiStepExtractedValueOutput) ToSyntheticsTestApiStepExtractedValueOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueOutput {
	return o
}

// When type is `httpHeader`, name of the header to use to extract the value.
func (o SyntheticsTestApiStepExtractedValueOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValue) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestApiStepExtractedValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValue) string { return v.Name }).(pulumi.StringOutput)
}

func (o SyntheticsTestApiStepExtractedValueOutput) Parser() SyntheticsTestApiStepExtractedValueParserOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValue) SyntheticsTestApiStepExtractedValueParser { return v.Parser }).(SyntheticsTestApiStepExtractedValueParserOutput)
}

// Determines whether or not the extracted value will be obfuscated.
func (o SyntheticsTestApiStepExtractedValueOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValue) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// Property of the Synthetics Test Response to use for the variable. Valid values are `httpBody`, `httpHeader`, `localVariable`.
func (o SyntheticsTestApiStepExtractedValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValue) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestApiStepExtractedValueArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepExtractedValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepExtractedValue)(nil)).Elem()
}

func (o SyntheticsTestApiStepExtractedValueArrayOutput) ToSyntheticsTestApiStepExtractedValueArrayOutput() SyntheticsTestApiStepExtractedValueArrayOutput {
	return o
}

func (o SyntheticsTestApiStepExtractedValueArrayOutput) ToSyntheticsTestApiStepExtractedValueArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueArrayOutput {
	return o
}

func (o SyntheticsTestApiStepExtractedValueArrayOutput) Index(i pulumi.IntInput) SyntheticsTestApiStepExtractedValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestApiStepExtractedValue {
		return vs[0].([]SyntheticsTestApiStepExtractedValue)[vs[1].(int)]
	}).(SyntheticsTestApiStepExtractedValueOutput)
}

type SyntheticsTestApiStepExtractedValueParser struct {
	// Type of parser for a Synthetics global variable from a synthetics test. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
	Type string `pulumi:"type"`
	// Regex or JSON path used for the parser. Not used with type `raw`.
	Value *string `pulumi:"value"`
}

// SyntheticsTestApiStepExtractedValueParserInput is an input type that accepts SyntheticsTestApiStepExtractedValueParserArgs and SyntheticsTestApiStepExtractedValueParserOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepExtractedValueParserInput` via:
//
//	SyntheticsTestApiStepExtractedValueParserArgs{...}
type SyntheticsTestApiStepExtractedValueParserInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepExtractedValueParserOutput() SyntheticsTestApiStepExtractedValueParserOutput
	ToSyntheticsTestApiStepExtractedValueParserOutputWithContext(context.Context) SyntheticsTestApiStepExtractedValueParserOutput
}

type SyntheticsTestApiStepExtractedValueParserArgs struct {
	// Type of parser for a Synthetics global variable from a synthetics test. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
	Type pulumi.StringInput `pulumi:"type"`
	// Regex or JSON path used for the parser. Not used with type `raw`.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SyntheticsTestApiStepExtractedValueParserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepExtractedValueParser)(nil)).Elem()
}

func (i SyntheticsTestApiStepExtractedValueParserArgs) ToSyntheticsTestApiStepExtractedValueParserOutput() SyntheticsTestApiStepExtractedValueParserOutput {
	return i.ToSyntheticsTestApiStepExtractedValueParserOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepExtractedValueParserArgs) ToSyntheticsTestApiStepExtractedValueParserOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueParserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepExtractedValueParserOutput)
}

type SyntheticsTestApiStepExtractedValueParserOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepExtractedValueParserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepExtractedValueParser)(nil)).Elem()
}

func (o SyntheticsTestApiStepExtractedValueParserOutput) ToSyntheticsTestApiStepExtractedValueParserOutput() SyntheticsTestApiStepExtractedValueParserOutput {
	return o
}

func (o SyntheticsTestApiStepExtractedValueParserOutput) ToSyntheticsTestApiStepExtractedValueParserOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueParserOutput {
	return o
}

// Type of parser for a Synthetics global variable from a synthetics test. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
func (o SyntheticsTestApiStepExtractedValueParserOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValueParser) string { return v.Type }).(pulumi.StringOutput)
}

// Regex or JSON path used for the parser. Not used with type `raw`.
func (o SyntheticsTestApiStepExtractedValueParserOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValueParser) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestBasicauth struct {
	// Access key for `SIGV4` authentication.
	AccessKey *string `pulumi:"accessKey"`
	// Access token url for `oauth-client` or `oauth-rop` authentication.
	AccessTokenUrl *string `pulumi:"accessTokenUrl"`
	// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Audience *string `pulumi:"audience"`
	// Client ID for `oauth-client` or `oauth-rop` authentication.
	ClientId *string `pulumi:"clientId"`
	// Client secret for `oauth-client` or `oauth-rop` authentication.
	ClientSecret *string `pulumi:"clientSecret"`
	// Domain for `ntlm` authentication.
	Domain *string `pulumi:"domain"`
	// Password for authentication.
	Password *string `pulumi:"password"`
	// Region for `SIGV4` authentication.
	Region *string `pulumi:"region"`
	// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Resource *string `pulumi:"resource"`
	// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Scope *string `pulumi:"scope"`
	// Secret key for `SIGV4` authentication.
	SecretKey *string `pulumi:"secretKey"`
	// Service name for `SIGV4` authentication.
	ServiceName *string `pulumi:"serviceName"`
	// Session token for `SIGV4` authentication.
	SessionToken *string `pulumi:"sessionToken"`
	// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
	TokenApiAuthentication *string `pulumi:"tokenApiAuthentication"`
	// Type of basic authentication to use when performing the test. Defaults to `"web"`.
	Type *string `pulumi:"type"`
	// Username for authentication.
	Username *string `pulumi:"username"`
	// Workstation for `ntlm` authentication.
	Workstation *string `pulumi:"workstation"`
}

// SyntheticsTestApiStepRequestBasicauthInput is an input type that accepts SyntheticsTestApiStepRequestBasicauthArgs and SyntheticsTestApiStepRequestBasicauthOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestBasicauthInput` via:
//
//	SyntheticsTestApiStepRequestBasicauthArgs{...}
type SyntheticsTestApiStepRequestBasicauthInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestBasicauthOutput() SyntheticsTestApiStepRequestBasicauthOutput
	ToSyntheticsTestApiStepRequestBasicauthOutputWithContext(context.Context) SyntheticsTestApiStepRequestBasicauthOutput
}

type SyntheticsTestApiStepRequestBasicauthArgs struct {
	// Access key for `SIGV4` authentication.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Access token url for `oauth-client` or `oauth-rop` authentication.
	AccessTokenUrl pulumi.StringPtrInput `pulumi:"accessTokenUrl"`
	// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// Client ID for `oauth-client` or `oauth-rop` authentication.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret for `oauth-client` or `oauth-rop` authentication.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Domain for `ntlm` authentication.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Password for authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Region for `SIGV4` authentication.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Secret key for `SIGV4` authentication.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Service name for `SIGV4` authentication.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Session token for `SIGV4` authentication.
	SessionToken pulumi.StringPtrInput `pulumi:"sessionToken"`
	// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
	TokenApiAuthentication pulumi.StringPtrInput `pulumi:"tokenApiAuthentication"`
	// Type of basic authentication to use when performing the test. Defaults to `"web"`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Username for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Workstation for `ntlm` authentication.
	Workstation pulumi.StringPtrInput `pulumi:"workstation"`
}

func (SyntheticsTestApiStepRequestBasicauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestBasicauth)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestBasicauthArgs) ToSyntheticsTestApiStepRequestBasicauthOutput() SyntheticsTestApiStepRequestBasicauthOutput {
	return i.ToSyntheticsTestApiStepRequestBasicauthOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestBasicauthArgs) ToSyntheticsTestApiStepRequestBasicauthOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestBasicauthOutput)
}

func (i SyntheticsTestApiStepRequestBasicauthArgs) ToSyntheticsTestApiStepRequestBasicauthPtrOutput() SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return i.ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestBasicauthArgs) ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestBasicauthOutput).ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestBasicauthPtrInput is an input type that accepts SyntheticsTestApiStepRequestBasicauthArgs, SyntheticsTestApiStepRequestBasicauthPtr and SyntheticsTestApiStepRequestBasicauthPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestBasicauthPtrInput` via:
//
//	        SyntheticsTestApiStepRequestBasicauthArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestBasicauthPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestBasicauthPtrOutput() SyntheticsTestApiStepRequestBasicauthPtrOutput
	ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestBasicauthPtrOutput
}

type syntheticsTestApiStepRequestBasicauthPtrType SyntheticsTestApiStepRequestBasicauthArgs

func SyntheticsTestApiStepRequestBasicauthPtr(v *SyntheticsTestApiStepRequestBasicauthArgs) SyntheticsTestApiStepRequestBasicauthPtrInput {
	return (*syntheticsTestApiStepRequestBasicauthPtrType)(v)
}

func (*syntheticsTestApiStepRequestBasicauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestBasicauth)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestBasicauthPtrType) ToSyntheticsTestApiStepRequestBasicauthPtrOutput() SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return i.ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestBasicauthPtrType) ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestBasicauthPtrOutput)
}

type SyntheticsTestApiStepRequestBasicauthOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestBasicauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestBasicauth)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestBasicauthOutput) ToSyntheticsTestApiStepRequestBasicauthOutput() SyntheticsTestApiStepRequestBasicauthOutput {
	return o
}

func (o SyntheticsTestApiStepRequestBasicauthOutput) ToSyntheticsTestApiStepRequestBasicauthOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthOutput {
	return o
}

func (o SyntheticsTestApiStepRequestBasicauthOutput) ToSyntheticsTestApiStepRequestBasicauthPtrOutput() SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return o.ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestBasicauthOutput) ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestBasicauth) *SyntheticsTestApiStepRequestBasicauth {
		return &v
	}).(SyntheticsTestApiStepRequestBasicauthPtrOutput)
}

// Access key for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Access token url for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.AccessTokenUrl }).(pulumi.StringPtrOutput)
}

// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Client ID for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Domain for `ntlm` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Password for authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Region for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Secret key for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Service name for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Session token for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) SessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.SessionToken }).(pulumi.StringPtrOutput)
}

// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
func (o SyntheticsTestApiStepRequestBasicauthOutput) TokenApiAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.TokenApiAuthentication }).(pulumi.StringPtrOutput)
}

// Type of basic authentication to use when performing the test. Defaults to `"web"`.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Username for authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Workstation for `ntlm` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Workstation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Workstation }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestBasicauthPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestBasicauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestBasicauth)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) ToSyntheticsTestApiStepRequestBasicauthPtrOutput() SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Elem() SyntheticsTestApiStepRequestBasicauthOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) SyntheticsTestApiStepRequestBasicauth {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestBasicauth
		return ret
	}).(SyntheticsTestApiStepRequestBasicauthOutput)
}

// Access key for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Access token url for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.AccessTokenUrl
	}).(pulumi.StringPtrOutput)
}

// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Client ID for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Domain for `ntlm` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Password for authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Region for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Secret key for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Service name for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Session token for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) SessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.SessionToken
	}).(pulumi.StringPtrOutput)
}

// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) TokenApiAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.TokenApiAuthentication
	}).(pulumi.StringPtrOutput)
}

// Type of basic authentication to use when performing the test. Defaults to `"web"`.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Username for authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Workstation for `ntlm` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Workstation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Workstation
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificate struct {
	Cert SyntheticsTestApiStepRequestClientCertificateCert `pulumi:"cert"`
	Key  SyntheticsTestApiStepRequestClientCertificateKey  `pulumi:"key"`
}

// SyntheticsTestApiStepRequestClientCertificateInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateArgs and SyntheticsTestApiStepRequestClientCertificateOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificateInput` via:
//
//	SyntheticsTestApiStepRequestClientCertificateArgs{...}
type SyntheticsTestApiStepRequestClientCertificateInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificateOutput() SyntheticsTestApiStepRequestClientCertificateOutput
	ToSyntheticsTestApiStepRequestClientCertificateOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificateOutput
}

type SyntheticsTestApiStepRequestClientCertificateArgs struct {
	Cert SyntheticsTestApiStepRequestClientCertificateCertInput `pulumi:"cert"`
	Key  SyntheticsTestApiStepRequestClientCertificateKeyInput  `pulumi:"key"`
}

func (SyntheticsTestApiStepRequestClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificate)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestClientCertificateArgs) ToSyntheticsTestApiStepRequestClientCertificateOutput() SyntheticsTestApiStepRequestClientCertificateOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateArgs) ToSyntheticsTestApiStepRequestClientCertificateOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateOutput)
}

func (i SyntheticsTestApiStepRequestClientCertificateArgs) ToSyntheticsTestApiStepRequestClientCertificatePtrOutput() SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateArgs) ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateOutput).ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestClientCertificatePtrInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateArgs, SyntheticsTestApiStepRequestClientCertificatePtr and SyntheticsTestApiStepRequestClientCertificatePtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificatePtrInput` via:
//
//	        SyntheticsTestApiStepRequestClientCertificateArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestClientCertificatePtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificatePtrOutput() SyntheticsTestApiStepRequestClientCertificatePtrOutput
	ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificatePtrOutput
}

type syntheticsTestApiStepRequestClientCertificatePtrType SyntheticsTestApiStepRequestClientCertificateArgs

func SyntheticsTestApiStepRequestClientCertificatePtr(v *SyntheticsTestApiStepRequestClientCertificateArgs) SyntheticsTestApiStepRequestClientCertificatePtrInput {
	return (*syntheticsTestApiStepRequestClientCertificatePtrType)(v)
}

func (*syntheticsTestApiStepRequestClientCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificate)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestClientCertificatePtrType) ToSyntheticsTestApiStepRequestClientCertificatePtrOutput() SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestClientCertificatePtrType) ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificatePtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificate)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) ToSyntheticsTestApiStepRequestClientCertificateOutput() SyntheticsTestApiStepRequestClientCertificateOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) ToSyntheticsTestApiStepRequestClientCertificateOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) ToSyntheticsTestApiStepRequestClientCertificatePtrOutput() SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return o.ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestClientCertificate) *SyntheticsTestApiStepRequestClientCertificate {
		return &v
	}).(SyntheticsTestApiStepRequestClientCertificatePtrOutput)
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) Cert() SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificate) SyntheticsTestApiStepRequestClientCertificateCert {
		return v.Cert
	}).(SyntheticsTestApiStepRequestClientCertificateCertOutput)
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) Key() SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificate) SyntheticsTestApiStepRequestClientCertificateKey {
		return v.Key
	}).(SyntheticsTestApiStepRequestClientCertificateKeyOutput)
}

type SyntheticsTestApiStepRequestClientCertificatePtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificate)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificatePtrOutput) ToSyntheticsTestApiStepRequestClientCertificatePtrOutput() SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificatePtrOutput) ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificatePtrOutput) Elem() SyntheticsTestApiStepRequestClientCertificateOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificate) SyntheticsTestApiStepRequestClientCertificate {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestClientCertificate
		return ret
	}).(SyntheticsTestApiStepRequestClientCertificateOutput)
}

func (o SyntheticsTestApiStepRequestClientCertificatePtrOutput) Cert() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificate) *SyntheticsTestApiStepRequestClientCertificateCert {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(SyntheticsTestApiStepRequestClientCertificateCertPtrOutput)
}

func (o SyntheticsTestApiStepRequestClientCertificatePtrOutput) Key() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificate) *SyntheticsTestApiStepRequestClientCertificateKey {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateCert struct {
	// Content of the certificate.
	Content string `pulumi:"content"`
	// File name for the certificate.
	Filename *string `pulumi:"filename"`
}

// SyntheticsTestApiStepRequestClientCertificateCertInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateCertArgs and SyntheticsTestApiStepRequestClientCertificateCertOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificateCertInput` via:
//
//	SyntheticsTestApiStepRequestClientCertificateCertArgs{...}
type SyntheticsTestApiStepRequestClientCertificateCertInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificateCertOutput() SyntheticsTestApiStepRequestClientCertificateCertOutput
	ToSyntheticsTestApiStepRequestClientCertificateCertOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificateCertOutput
}

type SyntheticsTestApiStepRequestClientCertificateCertArgs struct {
	// Content of the certificate.
	Content pulumi.StringInput `pulumi:"content"`
	// File name for the certificate.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (SyntheticsTestApiStepRequestClientCertificateCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateCert)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestClientCertificateCertArgs) ToSyntheticsTestApiStepRequestClientCertificateCertOutput() SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateCertOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateCertArgs) ToSyntheticsTestApiStepRequestClientCertificateCertOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateCertOutput)
}

func (i SyntheticsTestApiStepRequestClientCertificateCertArgs) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutput() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateCertArgs) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateCertOutput).ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestClientCertificateCertPtrInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateCertArgs, SyntheticsTestApiStepRequestClientCertificateCertPtr and SyntheticsTestApiStepRequestClientCertificateCertPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificateCertPtrInput` via:
//
//	        SyntheticsTestApiStepRequestClientCertificateCertArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestClientCertificateCertPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutput() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput
	ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificateCertPtrOutput
}

type syntheticsTestApiStepRequestClientCertificateCertPtrType SyntheticsTestApiStepRequestClientCertificateCertArgs

func SyntheticsTestApiStepRequestClientCertificateCertPtr(v *SyntheticsTestApiStepRequestClientCertificateCertArgs) SyntheticsTestApiStepRequestClientCertificateCertPtrInput {
	return (*syntheticsTestApiStepRequestClientCertificateCertPtrType)(v)
}

func (*syntheticsTestApiStepRequestClientCertificateCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificateCert)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestClientCertificateCertPtrType) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutput() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestClientCertificateCertPtrType) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateCertPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateCertOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificateCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateCert)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) ToSyntheticsTestApiStepRequestClientCertificateCertOutput() SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) ToSyntheticsTestApiStepRequestClientCertificateCertOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutput() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return o.ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestClientCertificateCert) *SyntheticsTestApiStepRequestClientCertificateCert {
		return &v
	}).(SyntheticsTestApiStepRequestClientCertificateCertPtrOutput)
}

// Content of the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificateCert) string { return v.Content }).(pulumi.StringOutput)
}

// File name for the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificateCert) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateCertPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificateCert)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutput() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) Elem() SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateCert) SyntheticsTestApiStepRequestClientCertificateCert {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestClientCertificateCert
		return ret
	}).(SyntheticsTestApiStepRequestClientCertificateCertOutput)
}

// Content of the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateCert) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// File name for the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateCert) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateKey struct {
	// Content of the certificate.
	Content string `pulumi:"content"`
	// File name for the certificate.
	Filename *string `pulumi:"filename"`
}

// SyntheticsTestApiStepRequestClientCertificateKeyInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateKeyArgs and SyntheticsTestApiStepRequestClientCertificateKeyOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificateKeyInput` via:
//
//	SyntheticsTestApiStepRequestClientCertificateKeyArgs{...}
type SyntheticsTestApiStepRequestClientCertificateKeyInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificateKeyOutput() SyntheticsTestApiStepRequestClientCertificateKeyOutput
	ToSyntheticsTestApiStepRequestClientCertificateKeyOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificateKeyOutput
}

type SyntheticsTestApiStepRequestClientCertificateKeyArgs struct {
	// Content of the certificate.
	Content pulumi.StringInput `pulumi:"content"`
	// File name for the certificate.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (SyntheticsTestApiStepRequestClientCertificateKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateKey)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestClientCertificateKeyArgs) ToSyntheticsTestApiStepRequestClientCertificateKeyOutput() SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateKeyOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateKeyArgs) ToSyntheticsTestApiStepRequestClientCertificateKeyOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateKeyOutput)
}

func (i SyntheticsTestApiStepRequestClientCertificateKeyArgs) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutput() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateKeyArgs) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateKeyOutput).ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestClientCertificateKeyPtrInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateKeyArgs, SyntheticsTestApiStepRequestClientCertificateKeyPtr and SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificateKeyPtrInput` via:
//
//	        SyntheticsTestApiStepRequestClientCertificateKeyArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestClientCertificateKeyPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutput() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput
	ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput
}

type syntheticsTestApiStepRequestClientCertificateKeyPtrType SyntheticsTestApiStepRequestClientCertificateKeyArgs

func SyntheticsTestApiStepRequestClientCertificateKeyPtr(v *SyntheticsTestApiStepRequestClientCertificateKeyArgs) SyntheticsTestApiStepRequestClientCertificateKeyPtrInput {
	return (*syntheticsTestApiStepRequestClientCertificateKeyPtrType)(v)
}

func (*syntheticsTestApiStepRequestClientCertificateKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificateKey)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestClientCertificateKeyPtrType) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutput() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestClientCertificateKeyPtrType) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateKeyOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificateKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateKey)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyOutput() SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutput() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return o.ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestClientCertificateKey) *SyntheticsTestApiStepRequestClientCertificateKey {
		return &v
	}).(SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput)
}

// Content of the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificateKey) string { return v.Content }).(pulumi.StringOutput)
}

// File name for the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificateKey) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificateKey)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutput() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) Elem() SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateKey) SyntheticsTestApiStepRequestClientCertificateKey {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestClientCertificateKey
		return ret
	}).(SyntheticsTestApiStepRequestClientCertificateKeyOutput)
}

// Content of the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateKey) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// File name for the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateKey) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestDefinition struct {
	// Allows loading insecure content for a request in an API test or in a multistep API test step.
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// The request body.
	Body *string `pulumi:"body"`
	// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
	BodyType *string `pulumi:"bodyType"`
	// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
	CallType *string `pulumi:"callType"`
	// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
	CertificateDomains []string `pulumi:"certificateDomains"`
	// DNS server to use for DNS tests (`subtype = "dns"`).
	DnsServer *string `pulumi:"dnsServer"`
	// DNS server port to use for DNS tests.
	DnsServerPort *int `pulumi:"dnsServerPort"`
	// Determines whether or not the API HTTP test should follow redirects.
	FollowRedirects *bool `pulumi:"followRedirects"`
	// Host name to perform the test with.
	Host *string `pulumi:"host"`
	// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
	HttpVersion *string `pulumi:"httpVersion"`
	// For UDP and websocket tests, message to send with the request.
	Message *string `pulumi:"message"`
	// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
	Method *string `pulumi:"method"`
	// Determines whether or not to save the response body.
	NoSavingResponseBody *bool `pulumi:"noSavingResponseBody"`
	// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
	NumberOfPackets *int `pulumi:"numberOfPackets"`
	// Persist cookies across redirects.
	PersistCookies *bool `pulumi:"persistCookies"`
	// The content of a proto file as a string.
	PlainProtoFile *string `pulumi:"plainProtoFile"`
	// Port to use when performing the test.
	Port *int `pulumi:"port"`
	// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
	//
	// Deprecated: Use `plainProtoFile` instead.
	ProtoJsonDescriptor *string `pulumi:"protoJsonDescriptor"`
	// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
	Servername *string `pulumi:"servername"`
	// The gRPC service on which you want to perform the gRPC call.
	Service *string `pulumi:"service"`
	// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
	ShouldTrackHops *bool `pulumi:"shouldTrackHops"`
	// Timeout in seconds for the test.
	Timeout *int `pulumi:"timeout"`
	// The URL to send the request to.
	Url *string `pulumi:"url"`
}

// SyntheticsTestApiStepRequestDefinitionInput is an input type that accepts SyntheticsTestApiStepRequestDefinitionArgs and SyntheticsTestApiStepRequestDefinitionOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestDefinitionInput` via:
//
//	SyntheticsTestApiStepRequestDefinitionArgs{...}
type SyntheticsTestApiStepRequestDefinitionInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestDefinitionOutput() SyntheticsTestApiStepRequestDefinitionOutput
	ToSyntheticsTestApiStepRequestDefinitionOutputWithContext(context.Context) SyntheticsTestApiStepRequestDefinitionOutput
}

type SyntheticsTestApiStepRequestDefinitionArgs struct {
	// Allows loading insecure content for a request in an API test or in a multistep API test step.
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// The request body.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
	BodyType pulumi.StringPtrInput `pulumi:"bodyType"`
	// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
	CallType pulumi.StringPtrInput `pulumi:"callType"`
	// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
	CertificateDomains pulumi.StringArrayInput `pulumi:"certificateDomains"`
	// DNS server to use for DNS tests (`subtype = "dns"`).
	DnsServer pulumi.StringPtrInput `pulumi:"dnsServer"`
	// DNS server port to use for DNS tests.
	DnsServerPort pulumi.IntPtrInput `pulumi:"dnsServerPort"`
	// Determines whether or not the API HTTP test should follow redirects.
	FollowRedirects pulumi.BoolPtrInput `pulumi:"followRedirects"`
	// Host name to perform the test with.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
	HttpVersion pulumi.StringPtrInput `pulumi:"httpVersion"`
	// For UDP and websocket tests, message to send with the request.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Determines whether or not to save the response body.
	NoSavingResponseBody pulumi.BoolPtrInput `pulumi:"noSavingResponseBody"`
	// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
	NumberOfPackets pulumi.IntPtrInput `pulumi:"numberOfPackets"`
	// Persist cookies across redirects.
	PersistCookies pulumi.BoolPtrInput `pulumi:"persistCookies"`
	// The content of a proto file as a string.
	PlainProtoFile pulumi.StringPtrInput `pulumi:"plainProtoFile"`
	// Port to use when performing the test.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
	//
	// Deprecated: Use `plainProtoFile` instead.
	ProtoJsonDescriptor pulumi.StringPtrInput `pulumi:"protoJsonDescriptor"`
	// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
	Servername pulumi.StringPtrInput `pulumi:"servername"`
	// The gRPC service on which you want to perform the gRPC call.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
	ShouldTrackHops pulumi.BoolPtrInput `pulumi:"shouldTrackHops"`
	// Timeout in seconds for the test.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The URL to send the request to.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SyntheticsTestApiStepRequestDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestDefinition)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestDefinitionArgs) ToSyntheticsTestApiStepRequestDefinitionOutput() SyntheticsTestApiStepRequestDefinitionOutput {
	return i.ToSyntheticsTestApiStepRequestDefinitionOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestDefinitionArgs) ToSyntheticsTestApiStepRequestDefinitionOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestDefinitionOutput)
}

func (i SyntheticsTestApiStepRequestDefinitionArgs) ToSyntheticsTestApiStepRequestDefinitionPtrOutput() SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return i.ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestDefinitionArgs) ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestDefinitionOutput).ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestDefinitionPtrInput is an input type that accepts SyntheticsTestApiStepRequestDefinitionArgs, SyntheticsTestApiStepRequestDefinitionPtr and SyntheticsTestApiStepRequestDefinitionPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestDefinitionPtrInput` via:
//
//	        SyntheticsTestApiStepRequestDefinitionArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestDefinitionPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestDefinitionPtrOutput() SyntheticsTestApiStepRequestDefinitionPtrOutput
	ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestDefinitionPtrOutput
}

type syntheticsTestApiStepRequestDefinitionPtrType SyntheticsTestApiStepRequestDefinitionArgs

func SyntheticsTestApiStepRequestDefinitionPtr(v *SyntheticsTestApiStepRequestDefinitionArgs) SyntheticsTestApiStepRequestDefinitionPtrInput {
	return (*syntheticsTestApiStepRequestDefinitionPtrType)(v)
}

func (*syntheticsTestApiStepRequestDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestDefinition)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestDefinitionPtrType) ToSyntheticsTestApiStepRequestDefinitionPtrOutput() SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return i.ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestDefinitionPtrType) ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestDefinitionPtrOutput)
}

type SyntheticsTestApiStepRequestDefinitionOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestDefinition)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestDefinitionOutput) ToSyntheticsTestApiStepRequestDefinitionOutput() SyntheticsTestApiStepRequestDefinitionOutput {
	return o
}

func (o SyntheticsTestApiStepRequestDefinitionOutput) ToSyntheticsTestApiStepRequestDefinitionOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionOutput {
	return o
}

func (o SyntheticsTestApiStepRequestDefinitionOutput) ToSyntheticsTestApiStepRequestDefinitionPtrOutput() SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return o.ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestDefinitionOutput) ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestDefinition) *SyntheticsTestApiStepRequestDefinition {
		return &v
	}).(SyntheticsTestApiStepRequestDefinitionPtrOutput)
}

// Allows loading insecure content for a request in an API test or in a multistep API test step.
func (o SyntheticsTestApiStepRequestDefinitionOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// The request body.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
func (o SyntheticsTestApiStepRequestDefinitionOutput) BodyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.BodyType }).(pulumi.StringPtrOutput)
}

// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
func (o SyntheticsTestApiStepRequestDefinitionOutput) CallType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.CallType }).(pulumi.StringPtrOutput)
}

// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
func (o SyntheticsTestApiStepRequestDefinitionOutput) CertificateDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) []string { return v.CertificateDomains }).(pulumi.StringArrayOutput)
}

// DNS server to use for DNS tests (`subtype = "dns"`).
func (o SyntheticsTestApiStepRequestDefinitionOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.DnsServer }).(pulumi.StringPtrOutput)
}

// DNS server port to use for DNS tests.
func (o SyntheticsTestApiStepRequestDefinitionOutput) DnsServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *int { return v.DnsServerPort }).(pulumi.IntPtrOutput)
}

// Determines whether or not the API HTTP test should follow redirects.
func (o SyntheticsTestApiStepRequestDefinitionOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *bool { return v.FollowRedirects }).(pulumi.BoolPtrOutput)
}

// Host name to perform the test with.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
func (o SyntheticsTestApiStepRequestDefinitionOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.HttpVersion }).(pulumi.StringPtrOutput)
}

// For UDP and websocket tests, message to send with the request.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Determines whether or not to save the response body.
func (o SyntheticsTestApiStepRequestDefinitionOutput) NoSavingResponseBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *bool { return v.NoSavingResponseBody }).(pulumi.BoolPtrOutput)
}

// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
func (o SyntheticsTestApiStepRequestDefinitionOutput) NumberOfPackets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *int { return v.NumberOfPackets }).(pulumi.IntPtrOutput)
}

// Persist cookies across redirects.
func (o SyntheticsTestApiStepRequestDefinitionOutput) PersistCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *bool { return v.PersistCookies }).(pulumi.BoolPtrOutput)
}

// The content of a proto file as a string.
func (o SyntheticsTestApiStepRequestDefinitionOutput) PlainProtoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.PlainProtoFile }).(pulumi.StringPtrOutput)
}

// Port to use when performing the test.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
//
// Deprecated: Use `plainProtoFile` instead.
func (o SyntheticsTestApiStepRequestDefinitionOutput) ProtoJsonDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.ProtoJsonDescriptor }).(pulumi.StringPtrOutput)
}

// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Servername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Servername }).(pulumi.StringPtrOutput)
}

// The gRPC service on which you want to perform the gRPC call.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
func (o SyntheticsTestApiStepRequestDefinitionOutput) ShouldTrackHops() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *bool { return v.ShouldTrackHops }).(pulumi.BoolPtrOutput)
}

// Timeout in seconds for the test.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The URL to send the request to.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestDefinitionPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestDefinition)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) ToSyntheticsTestApiStepRequestDefinitionPtrOutput() SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Elem() SyntheticsTestApiStepRequestDefinitionOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) SyntheticsTestApiStepRequestDefinition {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestDefinition
		return ret
	}).(SyntheticsTestApiStepRequestDefinitionOutput)
}

// Allows loading insecure content for a request in an API test or in a multistep API test step.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// The request body.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) BodyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.BodyType
	}).(pulumi.StringPtrOutput)
}

// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) CallType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.CallType
	}).(pulumi.StringPtrOutput)
}

// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) CertificateDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) []string {
		if v == nil {
			return nil
		}
		return v.CertificateDomains
	}).(pulumi.StringArrayOutput)
}

// DNS server to use for DNS tests (`subtype = "dns"`).
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DnsServer
	}).(pulumi.StringPtrOutput)
}

// DNS server port to use for DNS tests.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) DnsServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.DnsServerPort
	}).(pulumi.IntPtrOutput)
}

// Determines whether or not the API HTTP test should follow redirects.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.FollowRedirects
	}).(pulumi.BoolPtrOutput)
}

// Host name to perform the test with.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.HttpVersion
	}).(pulumi.StringPtrOutput)
}

// For UDP and websocket tests, message to send with the request.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Determines whether or not to save the response body.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) NoSavingResponseBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.NoSavingResponseBody
	}).(pulumi.BoolPtrOutput)
}

// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) NumberOfPackets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfPackets
	}).(pulumi.IntPtrOutput)
}

// Persist cookies across redirects.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) PersistCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.PersistCookies
	}).(pulumi.BoolPtrOutput)
}

// The content of a proto file as a string.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) PlainProtoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.PlainProtoFile
	}).(pulumi.StringPtrOutput)
}

// Port to use when performing the test.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
//
// Deprecated: Use `plainProtoFile` instead.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) ProtoJsonDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ProtoJsonDescriptor
	}).(pulumi.StringPtrOutput)
}

// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Servername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Servername
	}).(pulumi.StringPtrOutput)
}

// The gRPC service on which you want to perform the gRPC call.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) ShouldTrackHops() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldTrackHops
	}).(pulumi.BoolPtrOutput)
}

// Timeout in seconds for the test.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The URL to send the request to.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestFile struct {
	// Bucket key of the file.
	BucketKey *string `pulumi:"bucketKey"`
	// Content of the file.
	Content *string `pulumi:"content"`
	// Name of the file.
	Name string `pulumi:"name"`
	// Original name of the file.
	OriginalFileName *string `pulumi:"originalFileName"`
	// Size of the file.
	Size int `pulumi:"size"`
	// Type of the file.
	Type string `pulumi:"type"`
}

// SyntheticsTestApiStepRequestFileInput is an input type that accepts SyntheticsTestApiStepRequestFileArgs and SyntheticsTestApiStepRequestFileOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestFileInput` via:
//
//	SyntheticsTestApiStepRequestFileArgs{...}
type SyntheticsTestApiStepRequestFileInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestFileOutput() SyntheticsTestApiStepRequestFileOutput
	ToSyntheticsTestApiStepRequestFileOutputWithContext(context.Context) SyntheticsTestApiStepRequestFileOutput
}

type SyntheticsTestApiStepRequestFileArgs struct {
	// Bucket key of the file.
	BucketKey pulumi.StringPtrInput `pulumi:"bucketKey"`
	// Content of the file.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Name of the file.
	Name pulumi.StringInput `pulumi:"name"`
	// Original name of the file.
	OriginalFileName pulumi.StringPtrInput `pulumi:"originalFileName"`
	// Size of the file.
	Size pulumi.IntInput `pulumi:"size"`
	// Type of the file.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestApiStepRequestFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestFile)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestFileArgs) ToSyntheticsTestApiStepRequestFileOutput() SyntheticsTestApiStepRequestFileOutput {
	return i.ToSyntheticsTestApiStepRequestFileOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestFileArgs) ToSyntheticsTestApiStepRequestFileOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestFileOutput)
}

// SyntheticsTestApiStepRequestFileArrayInput is an input type that accepts SyntheticsTestApiStepRequestFileArray and SyntheticsTestApiStepRequestFileArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestFileArrayInput` via:
//
//	SyntheticsTestApiStepRequestFileArray{ SyntheticsTestApiStepRequestFileArgs{...} }
type SyntheticsTestApiStepRequestFileArrayInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestFileArrayOutput() SyntheticsTestApiStepRequestFileArrayOutput
	ToSyntheticsTestApiStepRequestFileArrayOutputWithContext(context.Context) SyntheticsTestApiStepRequestFileArrayOutput
}

type SyntheticsTestApiStepRequestFileArray []SyntheticsTestApiStepRequestFileInput

func (SyntheticsTestApiStepRequestFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepRequestFile)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestFileArray) ToSyntheticsTestApiStepRequestFileArrayOutput() SyntheticsTestApiStepRequestFileArrayOutput {
	return i.ToSyntheticsTestApiStepRequestFileArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestFileArray) ToSyntheticsTestApiStepRequestFileArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestFileArrayOutput)
}

type SyntheticsTestApiStepRequestFileOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestFile)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestFileOutput) ToSyntheticsTestApiStepRequestFileOutput() SyntheticsTestApiStepRequestFileOutput {
	return o
}

func (o SyntheticsTestApiStepRequestFileOutput) ToSyntheticsTestApiStepRequestFileOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestFileOutput {
	return o
}

// Bucket key of the file.
func (o SyntheticsTestApiStepRequestFileOutput) BucketKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) *string { return v.BucketKey }).(pulumi.StringPtrOutput)
}

// Content of the file.
func (o SyntheticsTestApiStepRequestFileOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Name of the file.
func (o SyntheticsTestApiStepRequestFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) string { return v.Name }).(pulumi.StringOutput)
}

// Original name of the file.
func (o SyntheticsTestApiStepRequestFileOutput) OriginalFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) *string { return v.OriginalFileName }).(pulumi.StringPtrOutput)
}

// Size of the file.
func (o SyntheticsTestApiStepRequestFileOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) int { return v.Size }).(pulumi.IntOutput)
}

// Type of the file.
func (o SyntheticsTestApiStepRequestFileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestApiStepRequestFileArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepRequestFile)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestFileArrayOutput) ToSyntheticsTestApiStepRequestFileArrayOutput() SyntheticsTestApiStepRequestFileArrayOutput {
	return o
}

func (o SyntheticsTestApiStepRequestFileArrayOutput) ToSyntheticsTestApiStepRequestFileArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestFileArrayOutput {
	return o
}

func (o SyntheticsTestApiStepRequestFileArrayOutput) Index(i pulumi.IntInput) SyntheticsTestApiStepRequestFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestApiStepRequestFile {
		return vs[0].([]SyntheticsTestApiStepRequestFile)[vs[1].(int)]
	}).(SyntheticsTestApiStepRequestFileOutput)
}

type SyntheticsTestApiStepRequestProxy struct {
	// Header name and value map.
	Headers map[string]string `pulumi:"headers"`
	// URL of the proxy to perform the test.
	Url string `pulumi:"url"`
}

// SyntheticsTestApiStepRequestProxyInput is an input type that accepts SyntheticsTestApiStepRequestProxyArgs and SyntheticsTestApiStepRequestProxyOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestProxyInput` via:
//
//	SyntheticsTestApiStepRequestProxyArgs{...}
type SyntheticsTestApiStepRequestProxyInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestProxyOutput() SyntheticsTestApiStepRequestProxyOutput
	ToSyntheticsTestApiStepRequestProxyOutputWithContext(context.Context) SyntheticsTestApiStepRequestProxyOutput
}

type SyntheticsTestApiStepRequestProxyArgs struct {
	// Header name and value map.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// URL of the proxy to perform the test.
	Url pulumi.StringInput `pulumi:"url"`
}

func (SyntheticsTestApiStepRequestProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestProxy)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestProxyArgs) ToSyntheticsTestApiStepRequestProxyOutput() SyntheticsTestApiStepRequestProxyOutput {
	return i.ToSyntheticsTestApiStepRequestProxyOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestProxyArgs) ToSyntheticsTestApiStepRequestProxyOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestProxyOutput)
}

func (i SyntheticsTestApiStepRequestProxyArgs) ToSyntheticsTestApiStepRequestProxyPtrOutput() SyntheticsTestApiStepRequestProxyPtrOutput {
	return i.ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestProxyArgs) ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestProxyOutput).ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestProxyPtrInput is an input type that accepts SyntheticsTestApiStepRequestProxyArgs, SyntheticsTestApiStepRequestProxyPtr and SyntheticsTestApiStepRequestProxyPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestProxyPtrInput` via:
//
//	        SyntheticsTestApiStepRequestProxyArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestProxyPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestProxyPtrOutput() SyntheticsTestApiStepRequestProxyPtrOutput
	ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestProxyPtrOutput
}

type syntheticsTestApiStepRequestProxyPtrType SyntheticsTestApiStepRequestProxyArgs

func SyntheticsTestApiStepRequestProxyPtr(v *SyntheticsTestApiStepRequestProxyArgs) SyntheticsTestApiStepRequestProxyPtrInput {
	return (*syntheticsTestApiStepRequestProxyPtrType)(v)
}

func (*syntheticsTestApiStepRequestProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestProxy)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestProxyPtrType) ToSyntheticsTestApiStepRequestProxyPtrOutput() SyntheticsTestApiStepRequestProxyPtrOutput {
	return i.ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestProxyPtrType) ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestProxyPtrOutput)
}

type SyntheticsTestApiStepRequestProxyOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestProxy)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestProxyOutput) ToSyntheticsTestApiStepRequestProxyOutput() SyntheticsTestApiStepRequestProxyOutput {
	return o
}

func (o SyntheticsTestApiStepRequestProxyOutput) ToSyntheticsTestApiStepRequestProxyOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyOutput {
	return o
}

func (o SyntheticsTestApiStepRequestProxyOutput) ToSyntheticsTestApiStepRequestProxyPtrOutput() SyntheticsTestApiStepRequestProxyPtrOutput {
	return o.ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestProxyOutput) ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestProxy) *SyntheticsTestApiStepRequestProxy {
		return &v
	}).(SyntheticsTestApiStepRequestProxyPtrOutput)
}

// Header name and value map.
func (o SyntheticsTestApiStepRequestProxyOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestProxy) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// URL of the proxy to perform the test.
func (o SyntheticsTestApiStepRequestProxyOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestProxy) string { return v.Url }).(pulumi.StringOutput)
}

type SyntheticsTestApiStepRequestProxyPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestProxy)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestProxyPtrOutput) ToSyntheticsTestApiStepRequestProxyPtrOutput() SyntheticsTestApiStepRequestProxyPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestProxyPtrOutput) ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestProxyPtrOutput) Elem() SyntheticsTestApiStepRequestProxyOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestProxy) SyntheticsTestApiStepRequestProxy {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestProxy
		return ret
	}).(SyntheticsTestApiStepRequestProxyOutput)
}

// Header name and value map.
func (o SyntheticsTestApiStepRequestProxyPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestProxy) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// URL of the proxy to perform the test.
func (o SyntheticsTestApiStepRequestProxyPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestProxy) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRetry struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
	Count *int `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
	Interval *int `pulumi:"interval"`
}

// SyntheticsTestApiStepRetryInput is an input type that accepts SyntheticsTestApiStepRetryArgs and SyntheticsTestApiStepRetryOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRetryInput` via:
//
//	SyntheticsTestApiStepRetryArgs{...}
type SyntheticsTestApiStepRetryInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRetryOutput() SyntheticsTestApiStepRetryOutput
	ToSyntheticsTestApiStepRetryOutputWithContext(context.Context) SyntheticsTestApiStepRetryOutput
}

type SyntheticsTestApiStepRetryArgs struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (SyntheticsTestApiStepRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRetry)(nil)).Elem()
}

func (i SyntheticsTestApiStepRetryArgs) ToSyntheticsTestApiStepRetryOutput() SyntheticsTestApiStepRetryOutput {
	return i.ToSyntheticsTestApiStepRetryOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRetryArgs) ToSyntheticsTestApiStepRetryOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRetryOutput)
}

func (i SyntheticsTestApiStepRetryArgs) ToSyntheticsTestApiStepRetryPtrOutput() SyntheticsTestApiStepRetryPtrOutput {
	return i.ToSyntheticsTestApiStepRetryPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRetryArgs) ToSyntheticsTestApiStepRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRetryOutput).ToSyntheticsTestApiStepRetryPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRetryPtrInput is an input type that accepts SyntheticsTestApiStepRetryArgs, SyntheticsTestApiStepRetryPtr and SyntheticsTestApiStepRetryPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRetryPtrInput` via:
//
//	        SyntheticsTestApiStepRetryArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRetryPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRetryPtrOutput() SyntheticsTestApiStepRetryPtrOutput
	ToSyntheticsTestApiStepRetryPtrOutputWithContext(context.Context) SyntheticsTestApiStepRetryPtrOutput
}

type syntheticsTestApiStepRetryPtrType SyntheticsTestApiStepRetryArgs

func SyntheticsTestApiStepRetryPtr(v *SyntheticsTestApiStepRetryArgs) SyntheticsTestApiStepRetryPtrInput {
	return (*syntheticsTestApiStepRetryPtrType)(v)
}

func (*syntheticsTestApiStepRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRetry)(nil)).Elem()
}

func (i *syntheticsTestApiStepRetryPtrType) ToSyntheticsTestApiStepRetryPtrOutput() SyntheticsTestApiStepRetryPtrOutput {
	return i.ToSyntheticsTestApiStepRetryPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRetryPtrType) ToSyntheticsTestApiStepRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRetryPtrOutput)
}

type SyntheticsTestApiStepRetryOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRetry)(nil)).Elem()
}

func (o SyntheticsTestApiStepRetryOutput) ToSyntheticsTestApiStepRetryOutput() SyntheticsTestApiStepRetryOutput {
	return o
}

func (o SyntheticsTestApiStepRetryOutput) ToSyntheticsTestApiStepRetryOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryOutput {
	return o
}

func (o SyntheticsTestApiStepRetryOutput) ToSyntheticsTestApiStepRetryPtrOutput() SyntheticsTestApiStepRetryPtrOutput {
	return o.ToSyntheticsTestApiStepRetryPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRetryOutput) ToSyntheticsTestApiStepRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRetry) *SyntheticsTestApiStepRetry {
		return &v
	}).(SyntheticsTestApiStepRetryPtrOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
func (o SyntheticsTestApiStepRetryOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRetry) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
func (o SyntheticsTestApiStepRetryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRetry) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type SyntheticsTestApiStepRetryPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRetry)(nil)).Elem()
}

func (o SyntheticsTestApiStepRetryPtrOutput) ToSyntheticsTestApiStepRetryPtrOutput() SyntheticsTestApiStepRetryPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRetryPtrOutput) ToSyntheticsTestApiStepRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRetryPtrOutput) Elem() SyntheticsTestApiStepRetryOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRetry) SyntheticsTestApiStepRetry {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRetry
		return ret
	}).(SyntheticsTestApiStepRetryOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
func (o SyntheticsTestApiStepRetryPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRetry) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
func (o SyntheticsTestApiStepRetryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRetry) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestAssertion struct {
	// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
	Operator string `pulumi:"operator"`
	// If assertion type is `header`, this is the header name.
	Property *string `pulumi:"property"`
	// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
	Target *string `pulumi:"target"`
	// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
	Targetjsonpath *SyntheticsTestAssertionTargetjsonpath `pulumi:"targetjsonpath"`
	// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
	Targetjsonschema *SyntheticsTestAssertionTargetjsonschema `pulumi:"targetjsonschema"`
	// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
	Targetxpath *SyntheticsTestAssertionTargetxpath `pulumi:"targetxpath"`
	// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
	TimingsScope *string `pulumi:"timingsScope"`
	// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.
	Type string `pulumi:"type"`
}

// SyntheticsTestAssertionInput is an input type that accepts SyntheticsTestAssertionArgs and SyntheticsTestAssertionOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionInput` via:
//
//	SyntheticsTestAssertionArgs{...}
type SyntheticsTestAssertionInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionOutput() SyntheticsTestAssertionOutput
	ToSyntheticsTestAssertionOutputWithContext(context.Context) SyntheticsTestAssertionOutput
}

type SyntheticsTestAssertionArgs struct {
	// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
	Operator pulumi.StringInput `pulumi:"operator"`
	// If assertion type is `header`, this is the header name.
	Property pulumi.StringPtrInput `pulumi:"property"`
	// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
	Targetjsonpath SyntheticsTestAssertionTargetjsonpathPtrInput `pulumi:"targetjsonpath"`
	// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
	Targetjsonschema SyntheticsTestAssertionTargetjsonschemaPtrInput `pulumi:"targetjsonschema"`
	// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
	Targetxpath SyntheticsTestAssertionTargetxpathPtrInput `pulumi:"targetxpath"`
	// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
	TimingsScope pulumi.StringPtrInput `pulumi:"timingsScope"`
	// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestAssertionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertion)(nil)).Elem()
}

func (i SyntheticsTestAssertionArgs) ToSyntheticsTestAssertionOutput() SyntheticsTestAssertionOutput {
	return i.ToSyntheticsTestAssertionOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionArgs) ToSyntheticsTestAssertionOutputWithContext(ctx context.Context) SyntheticsTestAssertionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionOutput)
}

// SyntheticsTestAssertionArrayInput is an input type that accepts SyntheticsTestAssertionArray and SyntheticsTestAssertionArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionArrayInput` via:
//
//	SyntheticsTestAssertionArray{ SyntheticsTestAssertionArgs{...} }
type SyntheticsTestAssertionArrayInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionArrayOutput() SyntheticsTestAssertionArrayOutput
	ToSyntheticsTestAssertionArrayOutputWithContext(context.Context) SyntheticsTestAssertionArrayOutput
}

type SyntheticsTestAssertionArray []SyntheticsTestAssertionInput

func (SyntheticsTestAssertionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestAssertion)(nil)).Elem()
}

func (i SyntheticsTestAssertionArray) ToSyntheticsTestAssertionArrayOutput() SyntheticsTestAssertionArrayOutput {
	return i.ToSyntheticsTestAssertionArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionArray) ToSyntheticsTestAssertionArrayOutputWithContext(ctx context.Context) SyntheticsTestAssertionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionArrayOutput)
}

type SyntheticsTestAssertionOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertion)(nil)).Elem()
}

func (o SyntheticsTestAssertionOutput) ToSyntheticsTestAssertionOutput() SyntheticsTestAssertionOutput {
	return o
}

func (o SyntheticsTestAssertionOutput) ToSyntheticsTestAssertionOutputWithContext(ctx context.Context) SyntheticsTestAssertionOutput {
	return o
}

// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
func (o SyntheticsTestAssertionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) string { return v.Operator }).(pulumi.StringOutput)
}

// If assertion type is `header`, this is the header name.
func (o SyntheticsTestAssertionOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *string { return v.Property }).(pulumi.StringPtrOutput)
}

// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
func (o SyntheticsTestAssertionOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestAssertionOutput) Targetjsonpath() SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *SyntheticsTestAssertionTargetjsonpath { return v.Targetjsonpath }).(SyntheticsTestAssertionTargetjsonpathPtrOutput)
}

// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestAssertionOutput) Targetjsonschema() SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *SyntheticsTestAssertionTargetjsonschema { return v.Targetjsonschema }).(SyntheticsTestAssertionTargetjsonschemaPtrOutput)
}

// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestAssertionOutput) Targetxpath() SyntheticsTestAssertionTargetxpathPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *SyntheticsTestAssertionTargetxpath { return v.Targetxpath }).(SyntheticsTestAssertionTargetxpathPtrOutput)
}

// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
func (o SyntheticsTestAssertionOutput) TimingsScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *string { return v.TimingsScope }).(pulumi.StringPtrOutput)
}

// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.
func (o SyntheticsTestAssertionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestAssertionArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestAssertion)(nil)).Elem()
}

func (o SyntheticsTestAssertionArrayOutput) ToSyntheticsTestAssertionArrayOutput() SyntheticsTestAssertionArrayOutput {
	return o
}

func (o SyntheticsTestAssertionArrayOutput) ToSyntheticsTestAssertionArrayOutputWithContext(ctx context.Context) SyntheticsTestAssertionArrayOutput {
	return o
}

func (o SyntheticsTestAssertionArrayOutput) Index(i pulumi.IntInput) SyntheticsTestAssertionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestAssertion {
		return vs[0].([]SyntheticsTestAssertion)[vs[1].(int)]
	}).(SyntheticsTestAssertionOutput)
}

type SyntheticsTestAssertionTargetjsonpath struct {
	// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `firstElementMatches`. Defaults to `"firstElementMatches"`.
	Elementsoperator *string `pulumi:"elementsoperator"`
	// The JSON path to assert.
	Jsonpath string `pulumi:"jsonpath"`
	// The specific operator to use on the path.
	Operator string `pulumi:"operator"`
	// Expected matching value.
	Targetvalue *string `pulumi:"targetvalue"`
}

// SyntheticsTestAssertionTargetjsonpathInput is an input type that accepts SyntheticsTestAssertionTargetjsonpathArgs and SyntheticsTestAssertionTargetjsonpathOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetjsonpathInput` via:
//
//	SyntheticsTestAssertionTargetjsonpathArgs{...}
type SyntheticsTestAssertionTargetjsonpathInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetjsonpathOutput() SyntheticsTestAssertionTargetjsonpathOutput
	ToSyntheticsTestAssertionTargetjsonpathOutputWithContext(context.Context) SyntheticsTestAssertionTargetjsonpathOutput
}

type SyntheticsTestAssertionTargetjsonpathArgs struct {
	// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `firstElementMatches`. Defaults to `"firstElementMatches"`.
	Elementsoperator pulumi.StringPtrInput `pulumi:"elementsoperator"`
	// The JSON path to assert.
	Jsonpath pulumi.StringInput `pulumi:"jsonpath"`
	// The specific operator to use on the path.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Expected matching value.
	Targetvalue pulumi.StringPtrInput `pulumi:"targetvalue"`
}

func (SyntheticsTestAssertionTargetjsonpathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetjsonpath)(nil)).Elem()
}

func (i SyntheticsTestAssertionTargetjsonpathArgs) ToSyntheticsTestAssertionTargetjsonpathOutput() SyntheticsTestAssertionTargetjsonpathOutput {
	return i.ToSyntheticsTestAssertionTargetjsonpathOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetjsonpathArgs) ToSyntheticsTestAssertionTargetjsonpathOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonpathOutput)
}

func (i SyntheticsTestAssertionTargetjsonpathArgs) ToSyntheticsTestAssertionTargetjsonpathPtrOutput() SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return i.ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetjsonpathArgs) ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonpathOutput).ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(ctx)
}

// SyntheticsTestAssertionTargetjsonpathPtrInput is an input type that accepts SyntheticsTestAssertionTargetjsonpathArgs, SyntheticsTestAssertionTargetjsonpathPtr and SyntheticsTestAssertionTargetjsonpathPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetjsonpathPtrInput` via:
//
//	        SyntheticsTestAssertionTargetjsonpathArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestAssertionTargetjsonpathPtrInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetjsonpathPtrOutput() SyntheticsTestAssertionTargetjsonpathPtrOutput
	ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(context.Context) SyntheticsTestAssertionTargetjsonpathPtrOutput
}

type syntheticsTestAssertionTargetjsonpathPtrType SyntheticsTestAssertionTargetjsonpathArgs

func SyntheticsTestAssertionTargetjsonpathPtr(v *SyntheticsTestAssertionTargetjsonpathArgs) SyntheticsTestAssertionTargetjsonpathPtrInput {
	return (*syntheticsTestAssertionTargetjsonpathPtrType)(v)
}

func (*syntheticsTestAssertionTargetjsonpathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetjsonpath)(nil)).Elem()
}

func (i *syntheticsTestAssertionTargetjsonpathPtrType) ToSyntheticsTestAssertionTargetjsonpathPtrOutput() SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return i.ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestAssertionTargetjsonpathPtrType) ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonpathPtrOutput)
}

type SyntheticsTestAssertionTargetjsonpathOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetjsonpathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetjsonpath)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetjsonpathOutput) ToSyntheticsTestAssertionTargetjsonpathOutput() SyntheticsTestAssertionTargetjsonpathOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonpathOutput) ToSyntheticsTestAssertionTargetjsonpathOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonpathOutput) ToSyntheticsTestAssertionTargetjsonpathPtrOutput() SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return o.ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestAssertionTargetjsonpathOutput) ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestAssertionTargetjsonpath) *SyntheticsTestAssertionTargetjsonpath {
		return &v
	}).(SyntheticsTestAssertionTargetjsonpathPtrOutput)
}

// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `firstElementMatches`. Defaults to `"firstElementMatches"`.
func (o SyntheticsTestAssertionTargetjsonpathOutput) Elementsoperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonpath) *string { return v.Elementsoperator }).(pulumi.StringPtrOutput)
}

// The JSON path to assert.
func (o SyntheticsTestAssertionTargetjsonpathOutput) Jsonpath() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonpath) string { return v.Jsonpath }).(pulumi.StringOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestAssertionTargetjsonpathOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonpath) string { return v.Operator }).(pulumi.StringOutput)
}

// Expected matching value.
func (o SyntheticsTestAssertionTargetjsonpathOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonpath) *string { return v.Targetvalue }).(pulumi.StringPtrOutput)
}

type SyntheticsTestAssertionTargetjsonpathPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetjsonpathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetjsonpath)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) ToSyntheticsTestAssertionTargetjsonpathPtrOutput() SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) Elem() SyntheticsTestAssertionTargetjsonpathOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonpath) SyntheticsTestAssertionTargetjsonpath {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestAssertionTargetjsonpath
		return ret
	}).(SyntheticsTestAssertionTargetjsonpathOutput)
}

// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `firstElementMatches`. Defaults to `"firstElementMatches"`.
func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) Elementsoperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return v.Elementsoperator
	}).(pulumi.StringPtrOutput)
}

// The JSON path to assert.
func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) Jsonpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return &v.Jsonpath
	}).(pulumi.StringPtrOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Expected matching value.
func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return v.Targetvalue
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestAssertionTargetjsonschema struct {
	// The JSON Schema to validate the body against.
	Jsonschema string `pulumi:"jsonschema"`
	// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
	Metaschema *string `pulumi:"metaschema"`
}

// SyntheticsTestAssertionTargetjsonschemaInput is an input type that accepts SyntheticsTestAssertionTargetjsonschemaArgs and SyntheticsTestAssertionTargetjsonschemaOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetjsonschemaInput` via:
//
//	SyntheticsTestAssertionTargetjsonschemaArgs{...}
type SyntheticsTestAssertionTargetjsonschemaInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetjsonschemaOutput() SyntheticsTestAssertionTargetjsonschemaOutput
	ToSyntheticsTestAssertionTargetjsonschemaOutputWithContext(context.Context) SyntheticsTestAssertionTargetjsonschemaOutput
}

type SyntheticsTestAssertionTargetjsonschemaArgs struct {
	// The JSON Schema to validate the body against.
	Jsonschema pulumi.StringInput `pulumi:"jsonschema"`
	// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
	Metaschema pulumi.StringPtrInput `pulumi:"metaschema"`
}

func (SyntheticsTestAssertionTargetjsonschemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetjsonschema)(nil)).Elem()
}

func (i SyntheticsTestAssertionTargetjsonschemaArgs) ToSyntheticsTestAssertionTargetjsonschemaOutput() SyntheticsTestAssertionTargetjsonschemaOutput {
	return i.ToSyntheticsTestAssertionTargetjsonschemaOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetjsonschemaArgs) ToSyntheticsTestAssertionTargetjsonschemaOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonschemaOutput)
}

func (i SyntheticsTestAssertionTargetjsonschemaArgs) ToSyntheticsTestAssertionTargetjsonschemaPtrOutput() SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return i.ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetjsonschemaArgs) ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonschemaOutput).ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(ctx)
}

// SyntheticsTestAssertionTargetjsonschemaPtrInput is an input type that accepts SyntheticsTestAssertionTargetjsonschemaArgs, SyntheticsTestAssertionTargetjsonschemaPtr and SyntheticsTestAssertionTargetjsonschemaPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetjsonschemaPtrInput` via:
//
//	        SyntheticsTestAssertionTargetjsonschemaArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestAssertionTargetjsonschemaPtrInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetjsonschemaPtrOutput() SyntheticsTestAssertionTargetjsonschemaPtrOutput
	ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(context.Context) SyntheticsTestAssertionTargetjsonschemaPtrOutput
}

type syntheticsTestAssertionTargetjsonschemaPtrType SyntheticsTestAssertionTargetjsonschemaArgs

func SyntheticsTestAssertionTargetjsonschemaPtr(v *SyntheticsTestAssertionTargetjsonschemaArgs) SyntheticsTestAssertionTargetjsonschemaPtrInput {
	return (*syntheticsTestAssertionTargetjsonschemaPtrType)(v)
}

func (*syntheticsTestAssertionTargetjsonschemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetjsonschema)(nil)).Elem()
}

func (i *syntheticsTestAssertionTargetjsonschemaPtrType) ToSyntheticsTestAssertionTargetjsonschemaPtrOutput() SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return i.ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestAssertionTargetjsonschemaPtrType) ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonschemaPtrOutput)
}

type SyntheticsTestAssertionTargetjsonschemaOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetjsonschemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetjsonschema)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetjsonschemaOutput) ToSyntheticsTestAssertionTargetjsonschemaOutput() SyntheticsTestAssertionTargetjsonschemaOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonschemaOutput) ToSyntheticsTestAssertionTargetjsonschemaOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonschemaOutput) ToSyntheticsTestAssertionTargetjsonschemaPtrOutput() SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return o.ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestAssertionTargetjsonschemaOutput) ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestAssertionTargetjsonschema) *SyntheticsTestAssertionTargetjsonschema {
		return &v
	}).(SyntheticsTestAssertionTargetjsonschemaPtrOutput)
}

// The JSON Schema to validate the body against.
func (o SyntheticsTestAssertionTargetjsonschemaOutput) Jsonschema() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonschema) string { return v.Jsonschema }).(pulumi.StringOutput)
}

// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
func (o SyntheticsTestAssertionTargetjsonschemaOutput) Metaschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonschema) *string { return v.Metaschema }).(pulumi.StringPtrOutput)
}

type SyntheticsTestAssertionTargetjsonschemaPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetjsonschemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetjsonschema)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetjsonschemaPtrOutput) ToSyntheticsTestAssertionTargetjsonschemaPtrOutput() SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonschemaPtrOutput) ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonschemaPtrOutput) Elem() SyntheticsTestAssertionTargetjsonschemaOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonschema) SyntheticsTestAssertionTargetjsonschema {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestAssertionTargetjsonschema
		return ret
	}).(SyntheticsTestAssertionTargetjsonschemaOutput)
}

// The JSON Schema to validate the body against.
func (o SyntheticsTestAssertionTargetjsonschemaPtrOutput) Jsonschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonschema) *string {
		if v == nil {
			return nil
		}
		return &v.Jsonschema
	}).(pulumi.StringPtrOutput)
}

// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
func (o SyntheticsTestAssertionTargetjsonschemaPtrOutput) Metaschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonschema) *string {
		if v == nil {
			return nil
		}
		return v.Metaschema
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestAssertionTargetxpath struct {
	// The specific operator to use on the path.
	Operator string `pulumi:"operator"`
	// Expected matching value.
	Targetvalue *string `pulumi:"targetvalue"`
	// The xpath to assert.
	Xpath string `pulumi:"xpath"`
}

// SyntheticsTestAssertionTargetxpathInput is an input type that accepts SyntheticsTestAssertionTargetxpathArgs and SyntheticsTestAssertionTargetxpathOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetxpathInput` via:
//
//	SyntheticsTestAssertionTargetxpathArgs{...}
type SyntheticsTestAssertionTargetxpathInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetxpathOutput() SyntheticsTestAssertionTargetxpathOutput
	ToSyntheticsTestAssertionTargetxpathOutputWithContext(context.Context) SyntheticsTestAssertionTargetxpathOutput
}

type SyntheticsTestAssertionTargetxpathArgs struct {
	// The specific operator to use on the path.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Expected matching value.
	Targetvalue pulumi.StringPtrInput `pulumi:"targetvalue"`
	// The xpath to assert.
	Xpath pulumi.StringInput `pulumi:"xpath"`
}

func (SyntheticsTestAssertionTargetxpathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetxpath)(nil)).Elem()
}

func (i SyntheticsTestAssertionTargetxpathArgs) ToSyntheticsTestAssertionTargetxpathOutput() SyntheticsTestAssertionTargetxpathOutput {
	return i.ToSyntheticsTestAssertionTargetxpathOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetxpathArgs) ToSyntheticsTestAssertionTargetxpathOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetxpathOutput)
}

func (i SyntheticsTestAssertionTargetxpathArgs) ToSyntheticsTestAssertionTargetxpathPtrOutput() SyntheticsTestAssertionTargetxpathPtrOutput {
	return i.ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetxpathArgs) ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetxpathOutput).ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(ctx)
}

// SyntheticsTestAssertionTargetxpathPtrInput is an input type that accepts SyntheticsTestAssertionTargetxpathArgs, SyntheticsTestAssertionTargetxpathPtr and SyntheticsTestAssertionTargetxpathPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetxpathPtrInput` via:
//
//	        SyntheticsTestAssertionTargetxpathArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestAssertionTargetxpathPtrInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetxpathPtrOutput() SyntheticsTestAssertionTargetxpathPtrOutput
	ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(context.Context) SyntheticsTestAssertionTargetxpathPtrOutput
}

type syntheticsTestAssertionTargetxpathPtrType SyntheticsTestAssertionTargetxpathArgs

func SyntheticsTestAssertionTargetxpathPtr(v *SyntheticsTestAssertionTargetxpathArgs) SyntheticsTestAssertionTargetxpathPtrInput {
	return (*syntheticsTestAssertionTargetxpathPtrType)(v)
}

func (*syntheticsTestAssertionTargetxpathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetxpath)(nil)).Elem()
}

func (i *syntheticsTestAssertionTargetxpathPtrType) ToSyntheticsTestAssertionTargetxpathPtrOutput() SyntheticsTestAssertionTargetxpathPtrOutput {
	return i.ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestAssertionTargetxpathPtrType) ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetxpathPtrOutput)
}

type SyntheticsTestAssertionTargetxpathOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetxpathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetxpath)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetxpathOutput) ToSyntheticsTestAssertionTargetxpathOutput() SyntheticsTestAssertionTargetxpathOutput {
	return o
}

func (o SyntheticsTestAssertionTargetxpathOutput) ToSyntheticsTestAssertionTargetxpathOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathOutput {
	return o
}

func (o SyntheticsTestAssertionTargetxpathOutput) ToSyntheticsTestAssertionTargetxpathPtrOutput() SyntheticsTestAssertionTargetxpathPtrOutput {
	return o.ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestAssertionTargetxpathOutput) ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestAssertionTargetxpath) *SyntheticsTestAssertionTargetxpath {
		return &v
	}).(SyntheticsTestAssertionTargetxpathPtrOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestAssertionTargetxpathOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetxpath) string { return v.Operator }).(pulumi.StringOutput)
}

// Expected matching value.
func (o SyntheticsTestAssertionTargetxpathOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetxpath) *string { return v.Targetvalue }).(pulumi.StringPtrOutput)
}

// The xpath to assert.
func (o SyntheticsTestAssertionTargetxpathOutput) Xpath() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetxpath) string { return v.Xpath }).(pulumi.StringOutput)
}

type SyntheticsTestAssertionTargetxpathPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetxpathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetxpath)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetxpathPtrOutput) ToSyntheticsTestAssertionTargetxpathPtrOutput() SyntheticsTestAssertionTargetxpathPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetxpathPtrOutput) ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetxpathPtrOutput) Elem() SyntheticsTestAssertionTargetxpathOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetxpath) SyntheticsTestAssertionTargetxpath {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestAssertionTargetxpath
		return ret
	}).(SyntheticsTestAssertionTargetxpathOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestAssertionTargetxpathPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Expected matching value.
func (o SyntheticsTestAssertionTargetxpathPtrOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return v.Targetvalue
	}).(pulumi.StringPtrOutput)
}

// The xpath to assert.
func (o SyntheticsTestAssertionTargetxpathPtrOutput) Xpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return &v.Xpath
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestBrowserStep struct {
	// Determines if the step should be allowed to fail.
	AllowFailure *bool `pulumi:"allowFailure"`
	// Force update of the "element" parameter for the step
	ForceElementUpdate *bool `pulumi:"forceElementUpdate"`
	// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
	IsCritical *bool `pulumi:"isCritical"`
	// Name of the step.
	Name string `pulumi:"name"`
	// Prevents saving screenshots of the step.
	NoScreenshot *bool `pulumi:"noScreenshot"`
	// Parameters for the step.
	Params SyntheticsTestBrowserStepParams `pulumi:"params"`
	// Used to override the default timeout of a step.
	Timeout *int `pulumi:"timeout"`
	// Type of the step. Valid values are `assertCurrentUrl`, `assertElementAttribute`, `assertElementContent`, `assertElementPresent`, `assertEmail`, `assertFileDownload`, `assertFromJavascript`, `assertPageContains`, `assertPageLacks`, `click`, `extractFromJavascript`, `extractVariable`, `goToEmailLink`, `goToUrl`, `goToUrlAndMeasureTti`, `hover`, `playSubTest`, `pressKey`, `refresh`, `runApiTest`, `scroll`, `selectOption`, `typeText`, `uploadFiles`, `wait`.
	Type string `pulumi:"type"`
}

// SyntheticsTestBrowserStepInput is an input type that accepts SyntheticsTestBrowserStepArgs and SyntheticsTestBrowserStepOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepInput` via:
//
//	SyntheticsTestBrowserStepArgs{...}
type SyntheticsTestBrowserStepInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepOutput() SyntheticsTestBrowserStepOutput
	ToSyntheticsTestBrowserStepOutputWithContext(context.Context) SyntheticsTestBrowserStepOutput
}

type SyntheticsTestBrowserStepArgs struct {
	// Determines if the step should be allowed to fail.
	AllowFailure pulumi.BoolPtrInput `pulumi:"allowFailure"`
	// Force update of the "element" parameter for the step
	ForceElementUpdate pulumi.BoolPtrInput `pulumi:"forceElementUpdate"`
	// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
	IsCritical pulumi.BoolPtrInput `pulumi:"isCritical"`
	// Name of the step.
	Name pulumi.StringInput `pulumi:"name"`
	// Prevents saving screenshots of the step.
	NoScreenshot pulumi.BoolPtrInput `pulumi:"noScreenshot"`
	// Parameters for the step.
	Params SyntheticsTestBrowserStepParamsInput `pulumi:"params"`
	// Used to override the default timeout of a step.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Type of the step. Valid values are `assertCurrentUrl`, `assertElementAttribute`, `assertElementContent`, `assertElementPresent`, `assertEmail`, `assertFileDownload`, `assertFromJavascript`, `assertPageContains`, `assertPageLacks`, `click`, `extractFromJavascript`, `extractVariable`, `goToEmailLink`, `goToUrl`, `goToUrlAndMeasureTti`, `hover`, `playSubTest`, `pressKey`, `refresh`, `runApiTest`, `scroll`, `selectOption`, `typeText`, `uploadFiles`, `wait`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestBrowserStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStep)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepArgs) ToSyntheticsTestBrowserStepOutput() SyntheticsTestBrowserStepOutput {
	return i.ToSyntheticsTestBrowserStepOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepArgs) ToSyntheticsTestBrowserStepOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepOutput)
}

// SyntheticsTestBrowserStepArrayInput is an input type that accepts SyntheticsTestBrowserStepArray and SyntheticsTestBrowserStepArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepArrayInput` via:
//
//	SyntheticsTestBrowserStepArray{ SyntheticsTestBrowserStepArgs{...} }
type SyntheticsTestBrowserStepArrayInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepArrayOutput() SyntheticsTestBrowserStepArrayOutput
	ToSyntheticsTestBrowserStepArrayOutputWithContext(context.Context) SyntheticsTestBrowserStepArrayOutput
}

type SyntheticsTestBrowserStepArray []SyntheticsTestBrowserStepInput

func (SyntheticsTestBrowserStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestBrowserStep)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepArray) ToSyntheticsTestBrowserStepArrayOutput() SyntheticsTestBrowserStepArrayOutput {
	return i.ToSyntheticsTestBrowserStepArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepArray) ToSyntheticsTestBrowserStepArrayOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepArrayOutput)
}

type SyntheticsTestBrowserStepOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStep)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepOutput) ToSyntheticsTestBrowserStepOutput() SyntheticsTestBrowserStepOutput {
	return o
}

func (o SyntheticsTestBrowserStepOutput) ToSyntheticsTestBrowserStepOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepOutput {
	return o
}

// Determines if the step should be allowed to fail.
func (o SyntheticsTestBrowserStepOutput) AllowFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *bool { return v.AllowFailure }).(pulumi.BoolPtrOutput)
}

// Force update of the "element" parameter for the step
func (o SyntheticsTestBrowserStepOutput) ForceElementUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *bool { return v.ForceElementUpdate }).(pulumi.BoolPtrOutput)
}

// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
func (o SyntheticsTestBrowserStepOutput) IsCritical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *bool { return v.IsCritical }).(pulumi.BoolPtrOutput)
}

// Name of the step.
func (o SyntheticsTestBrowserStepOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) string { return v.Name }).(pulumi.StringOutput)
}

// Prevents saving screenshots of the step.
func (o SyntheticsTestBrowserStepOutput) NoScreenshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *bool { return v.NoScreenshot }).(pulumi.BoolPtrOutput)
}

// Parameters for the step.
func (o SyntheticsTestBrowserStepOutput) Params() SyntheticsTestBrowserStepParamsOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) SyntheticsTestBrowserStepParams { return v.Params }).(SyntheticsTestBrowserStepParamsOutput)
}

// Used to override the default timeout of a step.
func (o SyntheticsTestBrowserStepOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Type of the step. Valid values are `assertCurrentUrl`, `assertElementAttribute`, `assertElementContent`, `assertElementPresent`, `assertEmail`, `assertFileDownload`, `assertFromJavascript`, `assertPageContains`, `assertPageLacks`, `click`, `extractFromJavascript`, `extractVariable`, `goToEmailLink`, `goToUrl`, `goToUrlAndMeasureTti`, `hover`, `playSubTest`, `pressKey`, `refresh`, `runApiTest`, `scroll`, `selectOption`, `typeText`, `uploadFiles`, `wait`.
func (o SyntheticsTestBrowserStepOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestBrowserStepArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestBrowserStep)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepArrayOutput) ToSyntheticsTestBrowserStepArrayOutput() SyntheticsTestBrowserStepArrayOutput {
	return o
}

func (o SyntheticsTestBrowserStepArrayOutput) ToSyntheticsTestBrowserStepArrayOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepArrayOutput {
	return o
}

func (o SyntheticsTestBrowserStepArrayOutput) Index(i pulumi.IntInput) SyntheticsTestBrowserStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestBrowserStep {
		return vs[0].([]SyntheticsTestBrowserStep)[vs[1].(int)]
	}).(SyntheticsTestBrowserStepOutput)
}

type SyntheticsTestBrowserStepParams struct {
	// Name of the attribute to use for an "assert attribute" step.
	Attribute *string `pulumi:"attribute"`
	// Check type to use for an assertion step. Valid values are `equals`, `notEquals`, `contains`, `notContains`, `startsWith`, `notStartsWith`, `greater`, `lower`, `greaterEquals`, `lowerEquals`, `matchRegex`, `between`, `isEmpty`, `notIsEmpty`.
	Check *string `pulumi:"check"`
	// Type of click to use for a "click" step.
	ClickType *string `pulumi:"clickType"`
	// Javascript code to use for the step.
	Code *string `pulumi:"code"`
	// Delay between each key stroke for a "type test" step.
	Delay *int `pulumi:"delay"`
	// Element to use for the step, JSON encoded string.
	Element *string `pulumi:"element"`
	// Custom user selector to use for the step.
	ElementUserLocator *SyntheticsTestBrowserStepParamsElementUserLocator `pulumi:"elementUserLocator"`
	// Details of the email for an "assert email" step, JSON encoded string.
	Email *string `pulumi:"email"`
	// JSON encoded string used for an "assert download" step. Refer to the examples for a usage example showing the schema.
	File *string `pulumi:"file"`
	// Details of the files for an "upload files" step, JSON encoded string.
	Files *string `pulumi:"files"`
	// Modifier to use for a "press key" step.
	Modifiers []string `pulumi:"modifiers"`
	// ID of the tab to play the subtest.
	PlayingTabId *string `pulumi:"playingTabId"`
	// Request for an API step.
	Request *string `pulumi:"request"`
	// ID of the Synthetics test to use as subtest.
	SubtestPublicId *string `pulumi:"subtestPublicId"`
	// Value of the step.
	Value *string `pulumi:"value"`
	// Details of the variable to extract.
	Variable *SyntheticsTestBrowserStepParamsVariable `pulumi:"variable"`
	// For "file upload" steps.
	WithClick *bool `pulumi:"withClick"`
	// X coordinates for a "scroll step".
	X *int `pulumi:"x"`
	// Y coordinates for a "scroll step".
	Y *int `pulumi:"y"`
}

// SyntheticsTestBrowserStepParamsInput is an input type that accepts SyntheticsTestBrowserStepParamsArgs and SyntheticsTestBrowserStepParamsOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsInput` via:
//
//	SyntheticsTestBrowserStepParamsArgs{...}
type SyntheticsTestBrowserStepParamsInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsOutput() SyntheticsTestBrowserStepParamsOutput
	ToSyntheticsTestBrowserStepParamsOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsOutput
}

type SyntheticsTestBrowserStepParamsArgs struct {
	// Name of the attribute to use for an "assert attribute" step.
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	// Check type to use for an assertion step. Valid values are `equals`, `notEquals`, `contains`, `notContains`, `startsWith`, `notStartsWith`, `greater`, `lower`, `greaterEquals`, `lowerEquals`, `matchRegex`, `between`, `isEmpty`, `notIsEmpty`.
	Check pulumi.StringPtrInput `pulumi:"check"`
	// Type of click to use for a "click" step.
	ClickType pulumi.StringPtrInput `pulumi:"clickType"`
	// Javascript code to use for the step.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Delay between each key stroke for a "type test" step.
	Delay pulumi.IntPtrInput `pulumi:"delay"`
	// Element to use for the step, JSON encoded string.
	Element pulumi.StringPtrInput `pulumi:"element"`
	// Custom user selector to use for the step.
	ElementUserLocator SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput `pulumi:"elementUserLocator"`
	// Details of the email for an "assert email" step, JSON encoded string.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// JSON encoded string used for an "assert download" step. Refer to the examples for a usage example showing the schema.
	File pulumi.StringPtrInput `pulumi:"file"`
	// Details of the files for an "upload files" step, JSON encoded string.
	Files pulumi.StringPtrInput `pulumi:"files"`
	// Modifier to use for a "press key" step.
	Modifiers pulumi.StringArrayInput `pulumi:"modifiers"`
	// ID of the tab to play the subtest.
	PlayingTabId pulumi.StringPtrInput `pulumi:"playingTabId"`
	// Request for an API step.
	Request pulumi.StringPtrInput `pulumi:"request"`
	// ID of the Synthetics test to use as subtest.
	SubtestPublicId pulumi.StringPtrInput `pulumi:"subtestPublicId"`
	// Value of the step.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Details of the variable to extract.
	Variable SyntheticsTestBrowserStepParamsVariablePtrInput `pulumi:"variable"`
	// For "file upload" steps.
	WithClick pulumi.BoolPtrInput `pulumi:"withClick"`
	// X coordinates for a "scroll step".
	X pulumi.IntPtrInput `pulumi:"x"`
	// Y coordinates for a "scroll step".
	Y pulumi.IntPtrInput `pulumi:"y"`
}

func (SyntheticsTestBrowserStepParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParams)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepParamsArgs) ToSyntheticsTestBrowserStepParamsOutput() SyntheticsTestBrowserStepParamsOutput {
	return i.ToSyntheticsTestBrowserStepParamsOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsArgs) ToSyntheticsTestBrowserStepParamsOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsOutput)
}

type SyntheticsTestBrowserStepParamsOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParams)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsOutput) ToSyntheticsTestBrowserStepParamsOutput() SyntheticsTestBrowserStepParamsOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsOutput) ToSyntheticsTestBrowserStepParamsOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsOutput {
	return o
}

// Name of the attribute to use for an "assert attribute" step.
func (o SyntheticsTestBrowserStepParamsOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

// Check type to use for an assertion step. Valid values are `equals`, `notEquals`, `contains`, `notContains`, `startsWith`, `notStartsWith`, `greater`, `lower`, `greaterEquals`, `lowerEquals`, `matchRegex`, `between`, `isEmpty`, `notIsEmpty`.
func (o SyntheticsTestBrowserStepParamsOutput) Check() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Check }).(pulumi.StringPtrOutput)
}

// Type of click to use for a "click" step.
func (o SyntheticsTestBrowserStepParamsOutput) ClickType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.ClickType }).(pulumi.StringPtrOutput)
}

// Javascript code to use for the step.
func (o SyntheticsTestBrowserStepParamsOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Delay between each key stroke for a "type test" step.
func (o SyntheticsTestBrowserStepParamsOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *int { return v.Delay }).(pulumi.IntPtrOutput)
}

// Element to use for the step, JSON encoded string.
func (o SyntheticsTestBrowserStepParamsOutput) Element() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Element }).(pulumi.StringPtrOutput)
}

// Custom user selector to use for the step.
func (o SyntheticsTestBrowserStepParamsOutput) ElementUserLocator() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *SyntheticsTestBrowserStepParamsElementUserLocator {
		return v.ElementUserLocator
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput)
}

// Details of the email for an "assert email" step, JSON encoded string.
func (o SyntheticsTestBrowserStepParamsOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// JSON encoded string used for an "assert download" step. Refer to the examples for a usage example showing the schema.
func (o SyntheticsTestBrowserStepParamsOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.File }).(pulumi.StringPtrOutput)
}

// Details of the files for an "upload files" step, JSON encoded string.
func (o SyntheticsTestBrowserStepParamsOutput) Files() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Files }).(pulumi.StringPtrOutput)
}

// Modifier to use for a "press key" step.
func (o SyntheticsTestBrowserStepParamsOutput) Modifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) []string { return v.Modifiers }).(pulumi.StringArrayOutput)
}

// ID of the tab to play the subtest.
func (o SyntheticsTestBrowserStepParamsOutput) PlayingTabId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.PlayingTabId }).(pulumi.StringPtrOutput)
}

// Request for an API step.
func (o SyntheticsTestBrowserStepParamsOutput) Request() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Request }).(pulumi.StringPtrOutput)
}

// ID of the Synthetics test to use as subtest.
func (o SyntheticsTestBrowserStepParamsOutput) SubtestPublicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.SubtestPublicId }).(pulumi.StringPtrOutput)
}

// Value of the step.
func (o SyntheticsTestBrowserStepParamsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Details of the variable to extract.
func (o SyntheticsTestBrowserStepParamsOutput) Variable() SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *SyntheticsTestBrowserStepParamsVariable { return v.Variable }).(SyntheticsTestBrowserStepParamsVariablePtrOutput)
}

// For "file upload" steps.
func (o SyntheticsTestBrowserStepParamsOutput) WithClick() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *bool { return v.WithClick }).(pulumi.BoolPtrOutput)
}

// X coordinates for a "scroll step".
func (o SyntheticsTestBrowserStepParamsOutput) X() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *int { return v.X }).(pulumi.IntPtrOutput)
}

// Y coordinates for a "scroll step".
func (o SyntheticsTestBrowserStepParamsOutput) Y() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *int { return v.Y }).(pulumi.IntPtrOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocator struct {
	// Defaults to `false`.
	FailTestOnCannotLocate *bool                                                  `pulumi:"failTestOnCannotLocate"`
	Value                  SyntheticsTestBrowserStepParamsElementUserLocatorValue `pulumi:"value"`
}

// SyntheticsTestBrowserStepParamsElementUserLocatorInput is an input type that accepts SyntheticsTestBrowserStepParamsElementUserLocatorArgs and SyntheticsTestBrowserStepParamsElementUserLocatorOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsElementUserLocatorInput` via:
//
//	SyntheticsTestBrowserStepParamsElementUserLocatorArgs{...}
type SyntheticsTestBrowserStepParamsElementUserLocatorInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsElementUserLocatorOutput() SyntheticsTestBrowserStepParamsElementUserLocatorOutput
	ToSyntheticsTestBrowserStepParamsElementUserLocatorOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorOutput
}

type SyntheticsTestBrowserStepParamsElementUserLocatorArgs struct {
	// Defaults to `false`.
	FailTestOnCannotLocate pulumi.BoolPtrInput                                         `pulumi:"failTestOnCannotLocate"`
	Value                  SyntheticsTestBrowserStepParamsElementUserLocatorValueInput `pulumi:"value"`
}

func (SyntheticsTestBrowserStepParamsElementUserLocatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocator)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorOutput() SyntheticsTestBrowserStepParamsElementUserLocatorOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorOutput)
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorOutput).ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(ctx)
}

// SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput is an input type that accepts SyntheticsTestBrowserStepParamsElementUserLocatorArgs, SyntheticsTestBrowserStepParamsElementUserLocatorPtr and SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput` via:
//
//	        SyntheticsTestBrowserStepParamsElementUserLocatorArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput
	ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput
}

type syntheticsTestBrowserStepParamsElementUserLocatorPtrType SyntheticsTestBrowserStepParamsElementUserLocatorArgs

func SyntheticsTestBrowserStepParamsElementUserLocatorPtr(v *SyntheticsTestBrowserStepParamsElementUserLocatorArgs) SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput {
	return (*syntheticsTestBrowserStepParamsElementUserLocatorPtrType)(v)
}

func (*syntheticsTestBrowserStepParamsElementUserLocatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsElementUserLocator)(nil)).Elem()
}

func (i *syntheticsTestBrowserStepParamsElementUserLocatorPtrType) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestBrowserStepParamsElementUserLocatorPtrType) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocatorOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsElementUserLocatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocator)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorOutput() SyntheticsTestBrowserStepParamsElementUserLocatorOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return o.ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestBrowserStepParamsElementUserLocator) *SyntheticsTestBrowserStepParamsElementUserLocator {
		return &v
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput)
}

// Defaults to `false`.
func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) FailTestOnCannotLocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsElementUserLocator) *bool { return v.FailTestOnCannotLocate }).(pulumi.BoolPtrOutput)
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) Value() SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsElementUserLocator) SyntheticsTestBrowserStepParamsElementUserLocatorValue {
		return v.Value
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsElementUserLocator)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) Elem() SyntheticsTestBrowserStepParamsElementUserLocatorOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocator) SyntheticsTestBrowserStepParamsElementUserLocator {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestBrowserStepParamsElementUserLocator
		return ret
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorOutput)
}

// Defaults to `false`.
func (o SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) FailTestOnCannotLocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocator) *bool {
		if v == nil {
			return nil
		}
		return v.FailTestOnCannotLocate
	}).(pulumi.BoolPtrOutput)
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) Value() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocator) *SyntheticsTestBrowserStepParamsElementUserLocatorValue {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocatorValue struct {
	// Defaults to `"css"`.
	Type  *string `pulumi:"type"`
	Value string  `pulumi:"value"`
}

// SyntheticsTestBrowserStepParamsElementUserLocatorValueInput is an input type that accepts SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs and SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsElementUserLocatorValueInput` via:
//
//	SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs{...}
type SyntheticsTestBrowserStepParamsElementUserLocatorValueInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput
	ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput
}

type SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs struct {
	// Defaults to `"css"`.
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput)
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput).ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(ctx)
}

// SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrInput is an input type that accepts SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs, SyntheticsTestBrowserStepParamsElementUserLocatorValuePtr and SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrInput` via:
//
//	        SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput
	ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput
}

type syntheticsTestBrowserStepParamsElementUserLocatorValuePtrType SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs

func SyntheticsTestBrowserStepParamsElementUserLocatorValuePtr(v *SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrInput {
	return (*syntheticsTestBrowserStepParamsElementUserLocatorValuePtrType)(v)
}

func (*syntheticsTestBrowserStepParamsElementUserLocatorValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (i *syntheticsTestBrowserStepParamsElementUserLocatorValuePtrType) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(context.Background())
}

func (i *syntheticsTestBrowserStepParamsElementUserLocatorValuePtrType) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return o.ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(context.Background())
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestBrowserStepParamsElementUserLocatorValue) *SyntheticsTestBrowserStepParamsElementUserLocatorValue {
		return &v
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput)
}

// Defaults to `"css"`.
func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsElementUserLocatorValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsElementUserLocatorValue) string { return v.Value }).(pulumi.StringOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) Elem() SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocatorValue) SyntheticsTestBrowserStepParamsElementUserLocatorValue {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestBrowserStepParamsElementUserLocatorValue
		return ret
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput)
}

// Defaults to `"css"`.
func (o SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocatorValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocatorValue) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestBrowserStepParamsVariable struct {
	// Example of the extracted variable. Defaults to `""`.
	Example *string `pulumi:"example"`
	// Name of the extracted variable.
	Name *string `pulumi:"name"`
}

// SyntheticsTestBrowserStepParamsVariableInput is an input type that accepts SyntheticsTestBrowserStepParamsVariableArgs and SyntheticsTestBrowserStepParamsVariableOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsVariableInput` via:
//
//	SyntheticsTestBrowserStepParamsVariableArgs{...}
type SyntheticsTestBrowserStepParamsVariableInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsVariableOutput() SyntheticsTestBrowserStepParamsVariableOutput
	ToSyntheticsTestBrowserStepParamsVariableOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsVariableOutput
}

type SyntheticsTestBrowserStepParamsVariableArgs struct {
	// Example of the extracted variable. Defaults to `""`.
	Example pulumi.StringPtrInput `pulumi:"example"`
	// Name of the extracted variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (SyntheticsTestBrowserStepParamsVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsVariable)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepParamsVariableArgs) ToSyntheticsTestBrowserStepParamsVariableOutput() SyntheticsTestBrowserStepParamsVariableOutput {
	return i.ToSyntheticsTestBrowserStepParamsVariableOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsVariableArgs) ToSyntheticsTestBrowserStepParamsVariableOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsVariableOutput)
}

func (i SyntheticsTestBrowserStepParamsVariableArgs) ToSyntheticsTestBrowserStepParamsVariablePtrOutput() SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsVariableArgs) ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsVariableOutput).ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(ctx)
}

// SyntheticsTestBrowserStepParamsVariablePtrInput is an input type that accepts SyntheticsTestBrowserStepParamsVariableArgs, SyntheticsTestBrowserStepParamsVariablePtr and SyntheticsTestBrowserStepParamsVariablePtrOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsVariablePtrInput` via:
//
//	        SyntheticsTestBrowserStepParamsVariableArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestBrowserStepParamsVariablePtrInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsVariablePtrOutput() SyntheticsTestBrowserStepParamsVariablePtrOutput
	ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsVariablePtrOutput
}

type syntheticsTestBrowserStepParamsVariablePtrType SyntheticsTestBrowserStepParamsVariableArgs

func SyntheticsTestBrowserStepParamsVariablePtr(v *SyntheticsTestBrowserStepParamsVariableArgs) SyntheticsTestBrowserStepParamsVariablePtrInput {
	return (*syntheticsTestBrowserStepParamsVariablePtrType)(v)
}

func (*syntheticsTestBrowserStepParamsVariablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsVariable)(nil)).Elem()
}

func (i *syntheticsTestBrowserStepParamsVariablePtrType) ToSyntheticsTestBrowserStepParamsVariablePtrOutput() SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(context.Background())
}

func (i *syntheticsTestBrowserStepParamsVariablePtrType) ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsVariablePtrOutput)
}

type SyntheticsTestBrowserStepParamsVariableOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsVariable)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsVariableOutput) ToSyntheticsTestBrowserStepParamsVariableOutput() SyntheticsTestBrowserStepParamsVariableOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsVariableOutput) ToSyntheticsTestBrowserStepParamsVariableOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariableOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsVariableOutput) ToSyntheticsTestBrowserStepParamsVariablePtrOutput() SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return o.ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(context.Background())
}

func (o SyntheticsTestBrowserStepParamsVariableOutput) ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestBrowserStepParamsVariable) *SyntheticsTestBrowserStepParamsVariable {
		return &v
	}).(SyntheticsTestBrowserStepParamsVariablePtrOutput)
}

// Example of the extracted variable. Defaults to `""`.
func (o SyntheticsTestBrowserStepParamsVariableOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsVariable) *string { return v.Example }).(pulumi.StringPtrOutput)
}

// Name of the extracted variable.
func (o SyntheticsTestBrowserStepParamsVariableOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsVariable) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type SyntheticsTestBrowserStepParamsVariablePtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsVariablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsVariable)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsVariablePtrOutput) ToSyntheticsTestBrowserStepParamsVariablePtrOutput() SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsVariablePtrOutput) ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsVariablePtrOutput) Elem() SyntheticsTestBrowserStepParamsVariableOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsVariable) SyntheticsTestBrowserStepParamsVariable {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestBrowserStepParamsVariable
		return ret
	}).(SyntheticsTestBrowserStepParamsVariableOutput)
}

// Example of the extracted variable. Defaults to `""`.
func (o SyntheticsTestBrowserStepParamsVariablePtrOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsVariable) *string {
		if v == nil {
			return nil
		}
		return v.Example
	}).(pulumi.StringPtrOutput)
}

// Name of the extracted variable.
func (o SyntheticsTestBrowserStepParamsVariablePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsVariable) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestBrowserVariable struct {
	// Example for the variable. Defaults to `""`.
	Example *string `pulumi:"example"`
	// ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type `global`.
	Id *string `pulumi:"id"`
	// Name of the variable.
	Name string `pulumi:"name"`
	// Pattern of the variable. Defaults to `""`.
	Pattern *string `pulumi:"pattern"`
	// Determines whether or not the browser test variable is obfuscated. Can only be used with a browser variable of type `text`
	Secure *bool `pulumi:"secure"`
	// Type of browser test variable. Valid values are `element`, `email`, `global`, `javascript`, `text`.
	Type string `pulumi:"type"`
}

// SyntheticsTestBrowserVariableInput is an input type that accepts SyntheticsTestBrowserVariableArgs and SyntheticsTestBrowserVariableOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserVariableInput` via:
//
//	SyntheticsTestBrowserVariableArgs{...}
type SyntheticsTestBrowserVariableInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserVariableOutput() SyntheticsTestBrowserVariableOutput
	ToSyntheticsTestBrowserVariableOutputWithContext(context.Context) SyntheticsTestBrowserVariableOutput
}

type SyntheticsTestBrowserVariableArgs struct {
	// Example for the variable. Defaults to `""`.
	Example pulumi.StringPtrInput `pulumi:"example"`
	// ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type `global`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the variable.
	Name pulumi.StringInput `pulumi:"name"`
	// Pattern of the variable. Defaults to `""`.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Determines whether or not the browser test variable is obfuscated. Can only be used with a browser variable of type `text`
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// Type of browser test variable. Valid values are `element`, `email`, `global`, `javascript`, `text`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestBrowserVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserVariable)(nil)).Elem()
}

func (i SyntheticsTestBrowserVariableArgs) ToSyntheticsTestBrowserVariableOutput() SyntheticsTestBrowserVariableOutput {
	return i.ToSyntheticsTestBrowserVariableOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserVariableArgs) ToSyntheticsTestBrowserVariableOutputWithContext(ctx context.Context) SyntheticsTestBrowserVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserVariableOutput)
}

// SyntheticsTestBrowserVariableArrayInput is an input type that accepts SyntheticsTestBrowserVariableArray and SyntheticsTestBrowserVariableArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserVariableArrayInput` via:
//
//	SyntheticsTestBrowserVariableArray{ SyntheticsTestBrowserVariableArgs{...} }
type SyntheticsTestBrowserVariableArrayInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserVariableArrayOutput() SyntheticsTestBrowserVariableArrayOutput
	ToSyntheticsTestBrowserVariableArrayOutputWithContext(context.Context) SyntheticsTestBrowserVariableArrayOutput
}

type SyntheticsTestBrowserVariableArray []SyntheticsTestBrowserVariableInput

func (SyntheticsTestBrowserVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestBrowserVariable)(nil)).Elem()
}

func (i SyntheticsTestBrowserVariableArray) ToSyntheticsTestBrowserVariableArrayOutput() SyntheticsTestBrowserVariableArrayOutput {
	return i.ToSyntheticsTestBrowserVariableArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserVariableArray) ToSyntheticsTestBrowserVariableArrayOutputWithContext(ctx context.Context) SyntheticsTestBrowserVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserVariableArrayOutput)
}

type SyntheticsTestBrowserVariableOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserVariable)(nil)).Elem()
}

func (o SyntheticsTestBrowserVariableOutput) ToSyntheticsTestBrowserVariableOutput() SyntheticsTestBrowserVariableOutput {
	return o
}

func (o SyntheticsTestBrowserVariableOutput) ToSyntheticsTestBrowserVariableOutputWithContext(ctx context.Context) SyntheticsTestBrowserVariableOutput {
	return o
}

// Example for the variable. Defaults to `""`.
func (o SyntheticsTestBrowserVariableOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) *string { return v.Example }).(pulumi.StringPtrOutput)
}

// ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type `global`.
func (o SyntheticsTestBrowserVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the variable.
func (o SyntheticsTestBrowserVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) string { return v.Name }).(pulumi.StringOutput)
}

// Pattern of the variable. Defaults to `""`.
func (o SyntheticsTestBrowserVariableOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Determines whether or not the browser test variable is obfuscated. Can only be used with a browser variable of type `text`
func (o SyntheticsTestBrowserVariableOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// Type of browser test variable. Valid values are `element`, `email`, `global`, `javascript`, `text`.
func (o SyntheticsTestBrowserVariableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestBrowserVariableArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestBrowserVariable)(nil)).Elem()
}

func (o SyntheticsTestBrowserVariableArrayOutput) ToSyntheticsTestBrowserVariableArrayOutput() SyntheticsTestBrowserVariableArrayOutput {
	return o
}

func (o SyntheticsTestBrowserVariableArrayOutput) ToSyntheticsTestBrowserVariableArrayOutputWithContext(ctx context.Context) SyntheticsTestBrowserVariableArrayOutput {
	return o
}

func (o SyntheticsTestBrowserVariableArrayOutput) Index(i pulumi.IntInput) SyntheticsTestBrowserVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestBrowserVariable {
		return vs[0].([]SyntheticsTestBrowserVariable)[vs[1].(int)]
	}).(SyntheticsTestBrowserVariableOutput)
}

type SyntheticsTestConfigVariable struct {
	Example *string `pulumi:"example"`
	// When type = `global`, ID of the global variable to use.
	Id *string `pulumi:"id"`
	// Name of the variable.
	Name    string  `pulumi:"name"`
	Pattern *string `pulumi:"pattern"`
	// Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
	Secure *bool `pulumi:"secure"`
	// Type of test configuration variable. Valid values are `global`, `text`.
	Type string `pulumi:"type"`
}

// SyntheticsTestConfigVariableInput is an input type that accepts SyntheticsTestConfigVariableArgs and SyntheticsTestConfigVariableOutput values.
// You can construct a concrete instance of `SyntheticsTestConfigVariableInput` via:
//
//	SyntheticsTestConfigVariableArgs{...}
type SyntheticsTestConfigVariableInput interface {
	pulumi.Input

	ToSyntheticsTestConfigVariableOutput() SyntheticsTestConfigVariableOutput
	ToSyntheticsTestConfigVariableOutputWithContext(context.Context) SyntheticsTestConfigVariableOutput
}

type SyntheticsTestConfigVariableArgs struct {
	Example pulumi.StringPtrInput `pulumi:"example"`
	// When type = `global`, ID of the global variable to use.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the variable.
	Name    pulumi.StringInput    `pulumi:"name"`
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// Type of test configuration variable. Valid values are `global`, `text`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestConfigVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestConfigVariable)(nil)).Elem()
}

func (i SyntheticsTestConfigVariableArgs) ToSyntheticsTestConfigVariableOutput() SyntheticsTestConfigVariableOutput {
	return i.ToSyntheticsTestConfigVariableOutputWithContext(context.Background())
}

func (i SyntheticsTestConfigVariableArgs) ToSyntheticsTestConfigVariableOutputWithContext(ctx context.Context) SyntheticsTestConfigVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestConfigVariableOutput)
}

// SyntheticsTestConfigVariableArrayInput is an input type that accepts SyntheticsTestConfigVariableArray and SyntheticsTestConfigVariableArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestConfigVariableArrayInput` via:
//
//	SyntheticsTestConfigVariableArray{ SyntheticsTestConfigVariableArgs{...} }
type SyntheticsTestConfigVariableArrayInput interface {
	pulumi.Input

	ToSyntheticsTestConfigVariableArrayOutput() SyntheticsTestConfigVariableArrayOutput
	ToSyntheticsTestConfigVariableArrayOutputWithContext(context.Context) SyntheticsTestConfigVariableArrayOutput
}

type SyntheticsTestConfigVariableArray []SyntheticsTestConfigVariableInput

func (SyntheticsTestConfigVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestConfigVariable)(nil)).Elem()
}

func (i SyntheticsTestConfigVariableArray) ToSyntheticsTestConfigVariableArrayOutput() SyntheticsTestConfigVariableArrayOutput {
	return i.ToSyntheticsTestConfigVariableArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestConfigVariableArray) ToSyntheticsTestConfigVariableArrayOutputWithContext(ctx context.Context) SyntheticsTestConfigVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestConfigVariableArrayOutput)
}

type SyntheticsTestConfigVariableOutput struct{ *pulumi.OutputState }

func (SyntheticsTestConfigVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestConfigVariable)(nil)).Elem()
}

func (o SyntheticsTestConfigVariableOutput) ToSyntheticsTestConfigVariableOutput() SyntheticsTestConfigVariableOutput {
	return o
}

func (o SyntheticsTestConfigVariableOutput) ToSyntheticsTestConfigVariableOutputWithContext(ctx context.Context) SyntheticsTestConfigVariableOutput {
	return o
}

func (o SyntheticsTestConfigVariableOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) *string { return v.Example }).(pulumi.StringPtrOutput)
}

// When type = `global`, ID of the global variable to use.
func (o SyntheticsTestConfigVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the variable.
func (o SyntheticsTestConfigVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) string { return v.Name }).(pulumi.StringOutput)
}

func (o SyntheticsTestConfigVariableOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
func (o SyntheticsTestConfigVariableOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// Type of test configuration variable. Valid values are `global`, `text`.
func (o SyntheticsTestConfigVariableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestConfigVariableArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestConfigVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestConfigVariable)(nil)).Elem()
}

func (o SyntheticsTestConfigVariableArrayOutput) ToSyntheticsTestConfigVariableArrayOutput() SyntheticsTestConfigVariableArrayOutput {
	return o
}

func (o SyntheticsTestConfigVariableArrayOutput) ToSyntheticsTestConfigVariableArrayOutputWithContext(ctx context.Context) SyntheticsTestConfigVariableArrayOutput {
	return o
}

func (o SyntheticsTestConfigVariableArrayOutput) Index(i pulumi.IntInput) SyntheticsTestConfigVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestConfigVariable {
		return vs[0].([]SyntheticsTestConfigVariable)[vs[1].(int)]
	}).(SyntheticsTestConfigVariableOutput)
}

type SyntheticsTestOptionsList struct {
	// For SSL test, whether or not the test should allow self signed certificates.
	AcceptSelfSigned *bool `pulumi:"acceptSelfSigned"`
	// Allows loading insecure content for a request in an API test or in a multistep API test step.
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// For SSL test, whether or not the test should fail on revoked certificate in stapled OCSP.
	CheckCertificateRevocation *bool `pulumi:"checkCertificateRevocation"`
	// CI/CD options for a Synthetic test.
	Ci *SyntheticsTestOptionsListCi `pulumi:"ci"`
	// Disable Cross-Origin Resource Sharing for browser tests.
	DisableCors *bool `pulumi:"disableCors"`
	// Disable Content Security Policy for browser tests.
	DisableCsp *bool `pulumi:"disableCsp"`
	// Determines whether or not the API HTTP test should follow redirects.
	FollowRedirects *bool `pulumi:"followRedirects"`
	// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
	HttpVersion *string `pulumi:"httpVersion"`
	// Ignore server certificate error for browser tests.
	IgnoreServerCertificateError *bool `pulumi:"ignoreServerCertificateError"`
	// Timeout before declaring the initial step as failed (in seconds) for browser tests.
	InitialNavigationTimeout *int `pulumi:"initialNavigationTimeout"`
	// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
	MinFailureDuration *int `pulumi:"minFailureDuration"`
	// Minimum number of locations in failure required to trigger an alert. Defaults to `1`.
	MinLocationFailed *int `pulumi:"minLocationFailed"`
	// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
	MonitorName     *string                                  `pulumi:"monitorName"`
	MonitorOptions  *SyntheticsTestOptionsListMonitorOptions `pulumi:"monitorOptions"`
	MonitorPriority *int                                     `pulumi:"monitorPriority"`
	// Prevents saving screenshots of the steps.
	NoScreenshot *bool `pulumi:"noScreenshot"`
	// A list of role identifiers pulled from the Roles API to restrict read and write access.
	RestrictedRoles []string                        `pulumi:"restrictedRoles"`
	Retry           *SyntheticsTestOptionsListRetry `pulumi:"retry"`
	// The RUM data collection settings for the Synthetic browser test.
	RumSettings *SyntheticsTestOptionsListRumSettings `pulumi:"rumSettings"`
	// Object containing timeframes and timezone used for advanced scheduling.
	Scheduling *SyntheticsTestOptionsListScheduling `pulumi:"scheduling"`
	// How often the test should run (in seconds).
	TickEvery int `pulumi:"tickEvery"`
}

// SyntheticsTestOptionsListInput is an input type that accepts SyntheticsTestOptionsListArgs and SyntheticsTestOptionsListOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListInput` via:
//
//	SyntheticsTestOptionsListArgs{...}
type SyntheticsTestOptionsListInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListOutput() SyntheticsTestOptionsListOutput
	ToSyntheticsTestOptionsListOutputWithContext(context.Context) SyntheticsTestOptionsListOutput
}

type SyntheticsTestOptionsListArgs struct {
	// For SSL test, whether or not the test should allow self signed certificates.
	AcceptSelfSigned pulumi.BoolPtrInput `pulumi:"acceptSelfSigned"`
	// Allows loading insecure content for a request in an API test or in a multistep API test step.
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// For SSL test, whether or not the test should fail on revoked certificate in stapled OCSP.
	CheckCertificateRevocation pulumi.BoolPtrInput `pulumi:"checkCertificateRevocation"`
	// CI/CD options for a Synthetic test.
	Ci SyntheticsTestOptionsListCiPtrInput `pulumi:"ci"`
	// Disable Cross-Origin Resource Sharing for browser tests.
	DisableCors pulumi.BoolPtrInput `pulumi:"disableCors"`
	// Disable Content Security Policy for browser tests.
	DisableCsp pulumi.BoolPtrInput `pulumi:"disableCsp"`
	// Determines whether or not the API HTTP test should follow redirects.
	FollowRedirects pulumi.BoolPtrInput `pulumi:"followRedirects"`
	// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
	HttpVersion pulumi.StringPtrInput `pulumi:"httpVersion"`
	// Ignore server certificate error for browser tests.
	IgnoreServerCertificateError pulumi.BoolPtrInput `pulumi:"ignoreServerCertificateError"`
	// Timeout before declaring the initial step as failed (in seconds) for browser tests.
	InitialNavigationTimeout pulumi.IntPtrInput `pulumi:"initialNavigationTimeout"`
	// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
	MinFailureDuration pulumi.IntPtrInput `pulumi:"minFailureDuration"`
	// Minimum number of locations in failure required to trigger an alert. Defaults to `1`.
	MinLocationFailed pulumi.IntPtrInput `pulumi:"minLocationFailed"`
	// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
	MonitorName     pulumi.StringPtrInput                           `pulumi:"monitorName"`
	MonitorOptions  SyntheticsTestOptionsListMonitorOptionsPtrInput `pulumi:"monitorOptions"`
	MonitorPriority pulumi.IntPtrInput                              `pulumi:"monitorPriority"`
	// Prevents saving screenshots of the steps.
	NoScreenshot pulumi.BoolPtrInput `pulumi:"noScreenshot"`
	// A list of role identifiers pulled from the Roles API to restrict read and write access.
	RestrictedRoles pulumi.StringArrayInput                `pulumi:"restrictedRoles"`
	Retry           SyntheticsTestOptionsListRetryPtrInput `pulumi:"retry"`
	// The RUM data collection settings for the Synthetic browser test.
	RumSettings SyntheticsTestOptionsListRumSettingsPtrInput `pulumi:"rumSettings"`
	// Object containing timeframes and timezone used for advanced scheduling.
	Scheduling SyntheticsTestOptionsListSchedulingPtrInput `pulumi:"scheduling"`
	// How often the test should run (in seconds).
	TickEvery pulumi.IntInput `pulumi:"tickEvery"`
}

func (SyntheticsTestOptionsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsList)(nil)).Elem()
}

func (i SyntheticsTestOptionsListArgs) ToSyntheticsTestOptionsListOutput() SyntheticsTestOptionsListOutput {
	return i.ToSyntheticsTestOptionsListOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListArgs) ToSyntheticsTestOptionsListOutputWithContext(ctx context.Context) SyntheticsTestOptionsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListOutput)
}

func (i SyntheticsTestOptionsListArgs) ToSyntheticsTestOptionsListPtrOutput() SyntheticsTestOptionsListPtrOutput {
	return i.ToSyntheticsTestOptionsListPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListArgs) ToSyntheticsTestOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListOutput).ToSyntheticsTestOptionsListPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListPtrInput is an input type that accepts SyntheticsTestOptionsListArgs, SyntheticsTestOptionsListPtr and SyntheticsTestOptionsListPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListPtrInput` via:
//
//	        SyntheticsTestOptionsListArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListPtrOutput() SyntheticsTestOptionsListPtrOutput
	ToSyntheticsTestOptionsListPtrOutputWithContext(context.Context) SyntheticsTestOptionsListPtrOutput
}

type syntheticsTestOptionsListPtrType SyntheticsTestOptionsListArgs

func SyntheticsTestOptionsListPtr(v *SyntheticsTestOptionsListArgs) SyntheticsTestOptionsListPtrInput {
	return (*syntheticsTestOptionsListPtrType)(v)
}

func (*syntheticsTestOptionsListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsList)(nil)).Elem()
}

func (i *syntheticsTestOptionsListPtrType) ToSyntheticsTestOptionsListPtrOutput() SyntheticsTestOptionsListPtrOutput {
	return i.ToSyntheticsTestOptionsListPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListPtrType) ToSyntheticsTestOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListPtrOutput)
}

type SyntheticsTestOptionsListOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsList)(nil)).Elem()
}

func (o SyntheticsTestOptionsListOutput) ToSyntheticsTestOptionsListOutput() SyntheticsTestOptionsListOutput {
	return o
}

func (o SyntheticsTestOptionsListOutput) ToSyntheticsTestOptionsListOutputWithContext(ctx context.Context) SyntheticsTestOptionsListOutput {
	return o
}

func (o SyntheticsTestOptionsListOutput) ToSyntheticsTestOptionsListPtrOutput() SyntheticsTestOptionsListPtrOutput {
	return o.ToSyntheticsTestOptionsListPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListOutput) ToSyntheticsTestOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsList) *SyntheticsTestOptionsList {
		return &v
	}).(SyntheticsTestOptionsListPtrOutput)
}

// For SSL test, whether or not the test should allow self signed certificates.
func (o SyntheticsTestOptionsListOutput) AcceptSelfSigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.AcceptSelfSigned }).(pulumi.BoolPtrOutput)
}

// Allows loading insecure content for a request in an API test or in a multistep API test step.
func (o SyntheticsTestOptionsListOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// For SSL test, whether or not the test should fail on revoked certificate in stapled OCSP.
func (o SyntheticsTestOptionsListOutput) CheckCertificateRevocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.CheckCertificateRevocation }).(pulumi.BoolPtrOutput)
}

// CI/CD options for a Synthetic test.
func (o SyntheticsTestOptionsListOutput) Ci() SyntheticsTestOptionsListCiPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *SyntheticsTestOptionsListCi { return v.Ci }).(SyntheticsTestOptionsListCiPtrOutput)
}

// Disable Cross-Origin Resource Sharing for browser tests.
func (o SyntheticsTestOptionsListOutput) DisableCors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.DisableCors }).(pulumi.BoolPtrOutput)
}

// Disable Content Security Policy for browser tests.
func (o SyntheticsTestOptionsListOutput) DisableCsp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.DisableCsp }).(pulumi.BoolPtrOutput)
}

// Determines whether or not the API HTTP test should follow redirects.
func (o SyntheticsTestOptionsListOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.FollowRedirects }).(pulumi.BoolPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
func (o SyntheticsTestOptionsListOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *string { return v.HttpVersion }).(pulumi.StringPtrOutput)
}

// Ignore server certificate error for browser tests.
func (o SyntheticsTestOptionsListOutput) IgnoreServerCertificateError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.IgnoreServerCertificateError }).(pulumi.BoolPtrOutput)
}

// Timeout before declaring the initial step as failed (in seconds) for browser tests.
func (o SyntheticsTestOptionsListOutput) InitialNavigationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *int { return v.InitialNavigationTimeout }).(pulumi.IntPtrOutput)
}

// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
func (o SyntheticsTestOptionsListOutput) MinFailureDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *int { return v.MinFailureDuration }).(pulumi.IntPtrOutput)
}

// Minimum number of locations in failure required to trigger an alert. Defaults to `1`.
func (o SyntheticsTestOptionsListOutput) MinLocationFailed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *int { return v.MinLocationFailed }).(pulumi.IntPtrOutput)
}

// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
func (o SyntheticsTestOptionsListOutput) MonitorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *string { return v.MonitorName }).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestOptionsListOutput) MonitorOptions() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *SyntheticsTestOptionsListMonitorOptions { return v.MonitorOptions }).(SyntheticsTestOptionsListMonitorOptionsPtrOutput)
}

func (o SyntheticsTestOptionsListOutput) MonitorPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *int { return v.MonitorPriority }).(pulumi.IntPtrOutput)
}

// Prevents saving screenshots of the steps.
func (o SyntheticsTestOptionsListOutput) NoScreenshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.NoScreenshot }).(pulumi.BoolPtrOutput)
}

// A list of role identifiers pulled from the Roles API to restrict read and write access.
func (o SyntheticsTestOptionsListOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) []string { return v.RestrictedRoles }).(pulumi.StringArrayOutput)
}

func (o SyntheticsTestOptionsListOutput) Retry() SyntheticsTestOptionsListRetryPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *SyntheticsTestOptionsListRetry { return v.Retry }).(SyntheticsTestOptionsListRetryPtrOutput)
}

// The RUM data collection settings for the Synthetic browser test.
func (o SyntheticsTestOptionsListOutput) RumSettings() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *SyntheticsTestOptionsListRumSettings { return v.RumSettings }).(SyntheticsTestOptionsListRumSettingsPtrOutput)
}

// Object containing timeframes and timezone used for advanced scheduling.
func (o SyntheticsTestOptionsListOutput) Scheduling() SyntheticsTestOptionsListSchedulingPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *SyntheticsTestOptionsListScheduling { return v.Scheduling }).(SyntheticsTestOptionsListSchedulingPtrOutput)
}

// How often the test should run (in seconds).
func (o SyntheticsTestOptionsListOutput) TickEvery() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) int { return v.TickEvery }).(pulumi.IntOutput)
}

type SyntheticsTestOptionsListPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsList)(nil)).Elem()
}

func (o SyntheticsTestOptionsListPtrOutput) ToSyntheticsTestOptionsListPtrOutput() SyntheticsTestOptionsListPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListPtrOutput) ToSyntheticsTestOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListPtrOutput) Elem() SyntheticsTestOptionsListOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) SyntheticsTestOptionsList {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsList
		return ret
	}).(SyntheticsTestOptionsListOutput)
}

// For SSL test, whether or not the test should allow self signed certificates.
func (o SyntheticsTestOptionsListPtrOutput) AcceptSelfSigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.AcceptSelfSigned
	}).(pulumi.BoolPtrOutput)
}

// Allows loading insecure content for a request in an API test or in a multistep API test step.
func (o SyntheticsTestOptionsListPtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// For SSL test, whether or not the test should fail on revoked certificate in stapled OCSP.
func (o SyntheticsTestOptionsListPtrOutput) CheckCertificateRevocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.CheckCertificateRevocation
	}).(pulumi.BoolPtrOutput)
}

// CI/CD options for a Synthetic test.
func (o SyntheticsTestOptionsListPtrOutput) Ci() SyntheticsTestOptionsListCiPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *SyntheticsTestOptionsListCi {
		if v == nil {
			return nil
		}
		return v.Ci
	}).(SyntheticsTestOptionsListCiPtrOutput)
}

// Disable Cross-Origin Resource Sharing for browser tests.
func (o SyntheticsTestOptionsListPtrOutput) DisableCors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.DisableCors
	}).(pulumi.BoolPtrOutput)
}

// Disable Content Security Policy for browser tests.
func (o SyntheticsTestOptionsListPtrOutput) DisableCsp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.DisableCsp
	}).(pulumi.BoolPtrOutput)
}

// Determines whether or not the API HTTP test should follow redirects.
func (o SyntheticsTestOptionsListPtrOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.FollowRedirects
	}).(pulumi.BoolPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
func (o SyntheticsTestOptionsListPtrOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *string {
		if v == nil {
			return nil
		}
		return v.HttpVersion
	}).(pulumi.StringPtrOutput)
}

// Ignore server certificate error for browser tests.
func (o SyntheticsTestOptionsListPtrOutput) IgnoreServerCertificateError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreServerCertificateError
	}).(pulumi.BoolPtrOutput)
}

// Timeout before declaring the initial step as failed (in seconds) for browser tests.
func (o SyntheticsTestOptionsListPtrOutput) InitialNavigationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.InitialNavigationTimeout
	}).(pulumi.IntPtrOutput)
}

// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
func (o SyntheticsTestOptionsListPtrOutput) MinFailureDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.MinFailureDuration
	}).(pulumi.IntPtrOutput)
}

// Minimum number of locations in failure required to trigger an alert. Defaults to `1`.
func (o SyntheticsTestOptionsListPtrOutput) MinLocationFailed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.MinLocationFailed
	}).(pulumi.IntPtrOutput)
}

// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
func (o SyntheticsTestOptionsListPtrOutput) MonitorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *string {
		if v == nil {
			return nil
		}
		return v.MonitorName
	}).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestOptionsListPtrOutput) MonitorOptions() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *SyntheticsTestOptionsListMonitorOptions {
		if v == nil {
			return nil
		}
		return v.MonitorOptions
	}).(SyntheticsTestOptionsListMonitorOptionsPtrOutput)
}

func (o SyntheticsTestOptionsListPtrOutput) MonitorPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.MonitorPriority
	}).(pulumi.IntPtrOutput)
}

// Prevents saving screenshots of the steps.
func (o SyntheticsTestOptionsListPtrOutput) NoScreenshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.NoScreenshot
	}).(pulumi.BoolPtrOutput)
}

// A list of role identifiers pulled from the Roles API to restrict read and write access.
func (o SyntheticsTestOptionsListPtrOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) []string {
		if v == nil {
			return nil
		}
		return v.RestrictedRoles
	}).(pulumi.StringArrayOutput)
}

func (o SyntheticsTestOptionsListPtrOutput) Retry() SyntheticsTestOptionsListRetryPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *SyntheticsTestOptionsListRetry {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(SyntheticsTestOptionsListRetryPtrOutput)
}

// The RUM data collection settings for the Synthetic browser test.
func (o SyntheticsTestOptionsListPtrOutput) RumSettings() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *SyntheticsTestOptionsListRumSettings {
		if v == nil {
			return nil
		}
		return v.RumSettings
	}).(SyntheticsTestOptionsListRumSettingsPtrOutput)
}

// Object containing timeframes and timezone used for advanced scheduling.
func (o SyntheticsTestOptionsListPtrOutput) Scheduling() SyntheticsTestOptionsListSchedulingPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *SyntheticsTestOptionsListScheduling {
		if v == nil {
			return nil
		}
		return v.Scheduling
	}).(SyntheticsTestOptionsListSchedulingPtrOutput)
}

// How often the test should run (in seconds).
func (o SyntheticsTestOptionsListPtrOutput) TickEvery() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *int {
		if v == nil {
			return nil
		}
		return &v.TickEvery
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListCi struct {
	// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
	ExecutionRule *string `pulumi:"executionRule"`
}

// SyntheticsTestOptionsListCiInput is an input type that accepts SyntheticsTestOptionsListCiArgs and SyntheticsTestOptionsListCiOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListCiInput` via:
//
//	SyntheticsTestOptionsListCiArgs{...}
type SyntheticsTestOptionsListCiInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListCiOutput() SyntheticsTestOptionsListCiOutput
	ToSyntheticsTestOptionsListCiOutputWithContext(context.Context) SyntheticsTestOptionsListCiOutput
}

type SyntheticsTestOptionsListCiArgs struct {
	// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
	ExecutionRule pulumi.StringPtrInput `pulumi:"executionRule"`
}

func (SyntheticsTestOptionsListCiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListCi)(nil)).Elem()
}

func (i SyntheticsTestOptionsListCiArgs) ToSyntheticsTestOptionsListCiOutput() SyntheticsTestOptionsListCiOutput {
	return i.ToSyntheticsTestOptionsListCiOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListCiArgs) ToSyntheticsTestOptionsListCiOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListCiOutput)
}

func (i SyntheticsTestOptionsListCiArgs) ToSyntheticsTestOptionsListCiPtrOutput() SyntheticsTestOptionsListCiPtrOutput {
	return i.ToSyntheticsTestOptionsListCiPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListCiArgs) ToSyntheticsTestOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListCiOutput).ToSyntheticsTestOptionsListCiPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListCiPtrInput is an input type that accepts SyntheticsTestOptionsListCiArgs, SyntheticsTestOptionsListCiPtr and SyntheticsTestOptionsListCiPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListCiPtrInput` via:
//
//	        SyntheticsTestOptionsListCiArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListCiPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListCiPtrOutput() SyntheticsTestOptionsListCiPtrOutput
	ToSyntheticsTestOptionsListCiPtrOutputWithContext(context.Context) SyntheticsTestOptionsListCiPtrOutput
}

type syntheticsTestOptionsListCiPtrType SyntheticsTestOptionsListCiArgs

func SyntheticsTestOptionsListCiPtr(v *SyntheticsTestOptionsListCiArgs) SyntheticsTestOptionsListCiPtrInput {
	return (*syntheticsTestOptionsListCiPtrType)(v)
}

func (*syntheticsTestOptionsListCiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListCi)(nil)).Elem()
}

func (i *syntheticsTestOptionsListCiPtrType) ToSyntheticsTestOptionsListCiPtrOutput() SyntheticsTestOptionsListCiPtrOutput {
	return i.ToSyntheticsTestOptionsListCiPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListCiPtrType) ToSyntheticsTestOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListCiPtrOutput)
}

type SyntheticsTestOptionsListCiOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListCiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListCi)(nil)).Elem()
}

func (o SyntheticsTestOptionsListCiOutput) ToSyntheticsTestOptionsListCiOutput() SyntheticsTestOptionsListCiOutput {
	return o
}

func (o SyntheticsTestOptionsListCiOutput) ToSyntheticsTestOptionsListCiOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiOutput {
	return o
}

func (o SyntheticsTestOptionsListCiOutput) ToSyntheticsTestOptionsListCiPtrOutput() SyntheticsTestOptionsListCiPtrOutput {
	return o.ToSyntheticsTestOptionsListCiPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListCiOutput) ToSyntheticsTestOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListCi) *SyntheticsTestOptionsListCi {
		return &v
	}).(SyntheticsTestOptionsListCiPtrOutput)
}

// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
func (o SyntheticsTestOptionsListCiOutput) ExecutionRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListCi) *string { return v.ExecutionRule }).(pulumi.StringPtrOutput)
}

type SyntheticsTestOptionsListCiPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListCiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListCi)(nil)).Elem()
}

func (o SyntheticsTestOptionsListCiPtrOutput) ToSyntheticsTestOptionsListCiPtrOutput() SyntheticsTestOptionsListCiPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListCiPtrOutput) ToSyntheticsTestOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListCiPtrOutput) Elem() SyntheticsTestOptionsListCiOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListCi) SyntheticsTestOptionsListCi {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListCi
		return ret
	}).(SyntheticsTestOptionsListCiOutput)
}

// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
func (o SyntheticsTestOptionsListCiPtrOutput) ExecutionRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListCi) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionRule
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestOptionsListMonitorOptions struct {
	// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
	RenotifyInterval *int `pulumi:"renotifyInterval"`
}

// SyntheticsTestOptionsListMonitorOptionsInput is an input type that accepts SyntheticsTestOptionsListMonitorOptionsArgs and SyntheticsTestOptionsListMonitorOptionsOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListMonitorOptionsInput` via:
//
//	SyntheticsTestOptionsListMonitorOptionsArgs{...}
type SyntheticsTestOptionsListMonitorOptionsInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListMonitorOptionsOutput() SyntheticsTestOptionsListMonitorOptionsOutput
	ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(context.Context) SyntheticsTestOptionsListMonitorOptionsOutput
}

type SyntheticsTestOptionsListMonitorOptionsArgs struct {
	// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
	RenotifyInterval pulumi.IntPtrInput `pulumi:"renotifyInterval"`
}

func (SyntheticsTestOptionsListMonitorOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsOutput() SyntheticsTestOptionsListMonitorOptionsOutput {
	return i.ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListMonitorOptionsOutput)
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return i.ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListMonitorOptionsOutput).ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListMonitorOptionsPtrInput is an input type that accepts SyntheticsTestOptionsListMonitorOptionsArgs, SyntheticsTestOptionsListMonitorOptionsPtr and SyntheticsTestOptionsListMonitorOptionsPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListMonitorOptionsPtrInput` via:
//
//	        SyntheticsTestOptionsListMonitorOptionsArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListMonitorOptionsPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput
	ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput
}

type syntheticsTestOptionsListMonitorOptionsPtrType SyntheticsTestOptionsListMonitorOptionsArgs

func SyntheticsTestOptionsListMonitorOptionsPtr(v *SyntheticsTestOptionsListMonitorOptionsArgs) SyntheticsTestOptionsListMonitorOptionsPtrInput {
	return (*syntheticsTestOptionsListMonitorOptionsPtrType)(v)
}

func (*syntheticsTestOptionsListMonitorOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (i *syntheticsTestOptionsListMonitorOptionsPtrType) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return i.ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListMonitorOptionsPtrType) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListMonitorOptionsPtrOutput)
}

type SyntheticsTestOptionsListMonitorOptionsOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListMonitorOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsOutput() SyntheticsTestOptionsListMonitorOptionsOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o.ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListMonitorOptions) *SyntheticsTestOptionsListMonitorOptions {
		return &v
	}).(SyntheticsTestOptionsListMonitorOptionsPtrOutput)
}

// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
func (o SyntheticsTestOptionsListMonitorOptionsOutput) RenotifyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListMonitorOptions) *int { return v.RenotifyInterval }).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListMonitorOptionsPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListMonitorOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) Elem() SyntheticsTestOptionsListMonitorOptionsOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListMonitorOptions) SyntheticsTestOptionsListMonitorOptions {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListMonitorOptions
		return ret
	}).(SyntheticsTestOptionsListMonitorOptionsOutput)
}

// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) RenotifyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListMonitorOptions) *int {
		if v == nil {
			return nil
		}
		return v.RenotifyInterval
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListRetry struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
	Count *int `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
	Interval *int `pulumi:"interval"`
}

// SyntheticsTestOptionsListRetryInput is an input type that accepts SyntheticsTestOptionsListRetryArgs and SyntheticsTestOptionsListRetryOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRetryInput` via:
//
//	SyntheticsTestOptionsListRetryArgs{...}
type SyntheticsTestOptionsListRetryInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRetryOutput() SyntheticsTestOptionsListRetryOutput
	ToSyntheticsTestOptionsListRetryOutputWithContext(context.Context) SyntheticsTestOptionsListRetryOutput
}

type SyntheticsTestOptionsListRetryArgs struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (SyntheticsTestOptionsListRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryOutput() SyntheticsTestOptionsListRetryOutput {
	return i.ToSyntheticsTestOptionsListRetryOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRetryOutput)
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return i.ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRetryOutput).ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListRetryPtrInput is an input type that accepts SyntheticsTestOptionsListRetryArgs, SyntheticsTestOptionsListRetryPtr and SyntheticsTestOptionsListRetryPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRetryPtrInput` via:
//
//	        SyntheticsTestOptionsListRetryArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListRetryPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput
	ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Context) SyntheticsTestOptionsListRetryPtrOutput
}

type syntheticsTestOptionsListRetryPtrType SyntheticsTestOptionsListRetryArgs

func SyntheticsTestOptionsListRetryPtr(v *SyntheticsTestOptionsListRetryArgs) SyntheticsTestOptionsListRetryPtrInput {
	return (*syntheticsTestOptionsListRetryPtrType)(v)
}

func (*syntheticsTestOptionsListRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (i *syntheticsTestOptionsListRetryPtrType) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return i.ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListRetryPtrType) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRetryPtrOutput)
}

type SyntheticsTestOptionsListRetryOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryOutput() SyntheticsTestOptionsListRetryOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return o.ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListRetry) *SyntheticsTestOptionsListRetry {
		return &v
	}).(SyntheticsTestOptionsListRetryPtrOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
func (o SyntheticsTestOptionsListRetryOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRetry) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
func (o SyntheticsTestOptionsListRetryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRetry) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListRetryPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRetryPtrOutput) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryPtrOutput) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryPtrOutput) Elem() SyntheticsTestOptionsListRetryOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRetry) SyntheticsTestOptionsListRetry {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListRetry
		return ret
	}).(SyntheticsTestOptionsListRetryOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Defaults to `0`.
func (o SyntheticsTestOptionsListRetryPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRetry) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Defaults to `300`.
func (o SyntheticsTestOptionsListRetryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRetry) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListRumSettings struct {
	// RUM application ID used to collect RUM data for the browser test.
	ApplicationId *string `pulumi:"applicationId"`
	// RUM application API key ID used to collect RUM data for the browser test.
	ClientTokenId *int `pulumi:"clientTokenId"`
	// Determines whether RUM data is collected during test runs.
	IsEnabled bool `pulumi:"isEnabled"`
}

// SyntheticsTestOptionsListRumSettingsInput is an input type that accepts SyntheticsTestOptionsListRumSettingsArgs and SyntheticsTestOptionsListRumSettingsOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRumSettingsInput` via:
//
//	SyntheticsTestOptionsListRumSettingsArgs{...}
type SyntheticsTestOptionsListRumSettingsInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRumSettingsOutput() SyntheticsTestOptionsListRumSettingsOutput
	ToSyntheticsTestOptionsListRumSettingsOutputWithContext(context.Context) SyntheticsTestOptionsListRumSettingsOutput
}

type SyntheticsTestOptionsListRumSettingsArgs struct {
	// RUM application ID used to collect RUM data for the browser test.
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	// RUM application API key ID used to collect RUM data for the browser test.
	ClientTokenId pulumi.IntPtrInput `pulumi:"clientTokenId"`
	// Determines whether RUM data is collected during test runs.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (SyntheticsTestOptionsListRumSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsOutput() SyntheticsTestOptionsListRumSettingsOutput {
	return i.ToSyntheticsTestOptionsListRumSettingsOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRumSettingsOutput)
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return i.ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRumSettingsOutput).ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListRumSettingsPtrInput is an input type that accepts SyntheticsTestOptionsListRumSettingsArgs, SyntheticsTestOptionsListRumSettingsPtr and SyntheticsTestOptionsListRumSettingsPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRumSettingsPtrInput` via:
//
//	        SyntheticsTestOptionsListRumSettingsArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListRumSettingsPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput
	ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput
}

type syntheticsTestOptionsListRumSettingsPtrType SyntheticsTestOptionsListRumSettingsArgs

func SyntheticsTestOptionsListRumSettingsPtr(v *SyntheticsTestOptionsListRumSettingsArgs) SyntheticsTestOptionsListRumSettingsPtrInput {
	return (*syntheticsTestOptionsListRumSettingsPtrType)(v)
}

func (*syntheticsTestOptionsListRumSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (i *syntheticsTestOptionsListRumSettingsPtrType) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return i.ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListRumSettingsPtrType) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRumSettingsPtrOutput)
}

type SyntheticsTestOptionsListRumSettingsOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRumSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsOutput() SyntheticsTestOptionsListRumSettingsOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o.ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListRumSettings) *SyntheticsTestOptionsListRumSettings {
		return &v
	}).(SyntheticsTestOptionsListRumSettingsPtrOutput)
}

// RUM application ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRumSettings) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// RUM application API key ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsOutput) ClientTokenId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRumSettings) *int { return v.ClientTokenId }).(pulumi.IntPtrOutput)
}

// Determines whether RUM data is collected during test runs.
func (o SyntheticsTestOptionsListRumSettingsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRumSettings) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type SyntheticsTestOptionsListRumSettingsPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRumSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsPtrOutput) Elem() SyntheticsTestOptionsListRumSettingsOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) SyntheticsTestOptionsListRumSettings {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListRumSettings
		return ret
	}).(SyntheticsTestOptionsListRumSettingsOutput)
}

// RUM application ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// RUM application API key ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ClientTokenId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) *int {
		if v == nil {
			return nil
		}
		return v.ClientTokenId
	}).(pulumi.IntPtrOutput)
}

// Determines whether RUM data is collected during test runs.
func (o SyntheticsTestOptionsListRumSettingsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

type SyntheticsTestOptionsListScheduling struct {
	// Array containing objects describing the scheduling pattern to apply to each day.
	Timeframes []SyntheticsTestOptionsListSchedulingTimeframe `pulumi:"timeframes"`
	// Timezone in which the timeframe is based.
	Timezone string `pulumi:"timezone"`
}

// SyntheticsTestOptionsListSchedulingInput is an input type that accepts SyntheticsTestOptionsListSchedulingArgs and SyntheticsTestOptionsListSchedulingOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingInput` via:
//
//	SyntheticsTestOptionsListSchedulingArgs{...}
type SyntheticsTestOptionsListSchedulingInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingOutput() SyntheticsTestOptionsListSchedulingOutput
	ToSyntheticsTestOptionsListSchedulingOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingOutput
}

type SyntheticsTestOptionsListSchedulingArgs struct {
	// Array containing objects describing the scheduling pattern to apply to each day.
	Timeframes SyntheticsTestOptionsListSchedulingTimeframeArrayInput `pulumi:"timeframes"`
	// Timezone in which the timeframe is based.
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (SyntheticsTestOptionsListSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingOutput() SyntheticsTestOptionsListSchedulingOutput {
	return i.ToSyntheticsTestOptionsListSchedulingOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingOutput)
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return i.ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingOutput).ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListSchedulingPtrInput is an input type that accepts SyntheticsTestOptionsListSchedulingArgs, SyntheticsTestOptionsListSchedulingPtr and SyntheticsTestOptionsListSchedulingPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingPtrInput` via:
//
//	        SyntheticsTestOptionsListSchedulingArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListSchedulingPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput
	ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingPtrOutput
}

type syntheticsTestOptionsListSchedulingPtrType SyntheticsTestOptionsListSchedulingArgs

func SyntheticsTestOptionsListSchedulingPtr(v *SyntheticsTestOptionsListSchedulingArgs) SyntheticsTestOptionsListSchedulingPtrInput {
	return (*syntheticsTestOptionsListSchedulingPtrType)(v)
}

func (*syntheticsTestOptionsListSchedulingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (i *syntheticsTestOptionsListSchedulingPtrType) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return i.ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListSchedulingPtrType) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingPtrOutput)
}

type SyntheticsTestOptionsListSchedulingOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingOutput() SyntheticsTestOptionsListSchedulingOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return o.ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListScheduling) *SyntheticsTestOptionsListScheduling {
		return &v
	}).(SyntheticsTestOptionsListSchedulingPtrOutput)
}

// Array containing objects describing the scheduling pattern to apply to each day.
func (o SyntheticsTestOptionsListSchedulingOutput) Timeframes() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListScheduling) []SyntheticsTestOptionsListSchedulingTimeframe {
		return v.Timeframes
	}).(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput)
}

// Timezone in which the timeframe is based.
func (o SyntheticsTestOptionsListSchedulingOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListScheduling) string { return v.Timezone }).(pulumi.StringOutput)
}

type SyntheticsTestOptionsListSchedulingPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingPtrOutput) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingPtrOutput) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingPtrOutput) Elem() SyntheticsTestOptionsListSchedulingOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListScheduling) SyntheticsTestOptionsListScheduling {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListScheduling
		return ret
	}).(SyntheticsTestOptionsListSchedulingOutput)
}

// Array containing objects describing the scheduling pattern to apply to each day.
func (o SyntheticsTestOptionsListSchedulingPtrOutput) Timeframes() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListScheduling) []SyntheticsTestOptionsListSchedulingTimeframe {
		if v == nil {
			return nil
		}
		return v.Timeframes
	}).(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput)
}

// Timezone in which the timeframe is based.
func (o SyntheticsTestOptionsListSchedulingPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListScheduling) *string {
		if v == nil {
			return nil
		}
		return &v.Timezone
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestOptionsListSchedulingTimeframe struct {
	// Number representing the day of the week
	Day int `pulumi:"day"`
	// The hour of the day on which scheduling starts.
	From string `pulumi:"from"`
	// The hour of the day on which scheduling ends.
	To string `pulumi:"to"`
}

// SyntheticsTestOptionsListSchedulingTimeframeInput is an input type that accepts SyntheticsTestOptionsListSchedulingTimeframeArgs and SyntheticsTestOptionsListSchedulingTimeframeOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingTimeframeInput` via:
//
//	SyntheticsTestOptionsListSchedulingTimeframeArgs{...}
type SyntheticsTestOptionsListSchedulingTimeframeInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingTimeframeOutput() SyntheticsTestOptionsListSchedulingTimeframeOutput
	ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingTimeframeOutput
}

type SyntheticsTestOptionsListSchedulingTimeframeArgs struct {
	// Number representing the day of the week
	Day pulumi.IntInput `pulumi:"day"`
	// The hour of the day on which scheduling starts.
	From pulumi.StringInput `pulumi:"from"`
	// The hour of the day on which scheduling ends.
	To pulumi.StringInput `pulumi:"to"`
}

func (SyntheticsTestOptionsListSchedulingTimeframeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArgs) ToSyntheticsTestOptionsListSchedulingTimeframeOutput() SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return i.ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArgs) ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingTimeframeOutput)
}

// SyntheticsTestOptionsListSchedulingTimeframeArrayInput is an input type that accepts SyntheticsTestOptionsListSchedulingTimeframeArray and SyntheticsTestOptionsListSchedulingTimeframeArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingTimeframeArrayInput` via:
//
//	SyntheticsTestOptionsListSchedulingTimeframeArray{ SyntheticsTestOptionsListSchedulingTimeframeArgs{...} }
type SyntheticsTestOptionsListSchedulingTimeframeArrayInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput
	ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingTimeframeArrayOutput
}

type SyntheticsTestOptionsListSchedulingTimeframeArray []SyntheticsTestOptionsListSchedulingTimeframeInput

func (SyntheticsTestOptionsListSchedulingTimeframeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArray) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return i.ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArray) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput)
}

type SyntheticsTestOptionsListSchedulingTimeframeOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingTimeframeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) ToSyntheticsTestOptionsListSchedulingTimeframeOutput() SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return o
}

// Number representing the day of the week
func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListSchedulingTimeframe) int { return v.Day }).(pulumi.IntOutput)
}

// The hour of the day on which scheduling starts.
func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListSchedulingTimeframe) string { return v.From }).(pulumi.StringOutput)
}

// The hour of the day on which scheduling ends.
func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) To() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListSchedulingTimeframe) string { return v.To }).(pulumi.StringOutput)
}

type SyntheticsTestOptionsListSchedulingTimeframeArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) Index(i pulumi.IntInput) SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestOptionsListSchedulingTimeframe {
		return vs[0].([]SyntheticsTestOptionsListSchedulingTimeframe)[vs[1].(int)]
	}).(SyntheticsTestOptionsListSchedulingTimeframeOutput)
}

type SyntheticsTestRequestBasicauth struct {
	// Access key for `SIGV4` authentication.
	AccessKey *string `pulumi:"accessKey"`
	// Access token url for `oauth-client` or `oauth-rop` authentication.
	AccessTokenUrl *string `pulumi:"accessTokenUrl"`
	// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Audience *string `pulumi:"audience"`
	// Client ID for `oauth-client` or `oauth-rop` authentication.
	ClientId *string `pulumi:"clientId"`
	// Client secret for `oauth-client` or `oauth-rop` authentication.
	ClientSecret *string `pulumi:"clientSecret"`
	// Domain for `ntlm` authentication.
	Domain *string `pulumi:"domain"`
	// Password for authentication.
	Password *string `pulumi:"password"`
	// Region for `SIGV4` authentication.
	Region *string `pulumi:"region"`
	// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Resource *string `pulumi:"resource"`
	// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Scope *string `pulumi:"scope"`
	// Secret key for `SIGV4` authentication.
	SecretKey *string `pulumi:"secretKey"`
	// Service name for `SIGV4` authentication.
	ServiceName *string `pulumi:"serviceName"`
	// Session token for `SIGV4` authentication.
	SessionToken *string `pulumi:"sessionToken"`
	// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
	TokenApiAuthentication *string `pulumi:"tokenApiAuthentication"`
	// Type of basic authentication to use when performing the test. Defaults to `"web"`.
	Type *string `pulumi:"type"`
	// Username for authentication.
	Username *string `pulumi:"username"`
	// Workstation for `ntlm` authentication.
	Workstation *string `pulumi:"workstation"`
}

// SyntheticsTestRequestBasicauthInput is an input type that accepts SyntheticsTestRequestBasicauthArgs and SyntheticsTestRequestBasicauthOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestBasicauthInput` via:
//
//	SyntheticsTestRequestBasicauthArgs{...}
type SyntheticsTestRequestBasicauthInput interface {
	pulumi.Input

	ToSyntheticsTestRequestBasicauthOutput() SyntheticsTestRequestBasicauthOutput
	ToSyntheticsTestRequestBasicauthOutputWithContext(context.Context) SyntheticsTestRequestBasicauthOutput
}

type SyntheticsTestRequestBasicauthArgs struct {
	// Access key for `SIGV4` authentication.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Access token url for `oauth-client` or `oauth-rop` authentication.
	AccessTokenUrl pulumi.StringPtrInput `pulumi:"accessTokenUrl"`
	// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// Client ID for `oauth-client` or `oauth-rop` authentication.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret for `oauth-client` or `oauth-rop` authentication.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Domain for `ntlm` authentication.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Password for authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Region for `SIGV4` authentication.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Secret key for `SIGV4` authentication.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Service name for `SIGV4` authentication.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Session token for `SIGV4` authentication.
	SessionToken pulumi.StringPtrInput `pulumi:"sessionToken"`
	// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
	TokenApiAuthentication pulumi.StringPtrInput `pulumi:"tokenApiAuthentication"`
	// Type of basic authentication to use when performing the test. Defaults to `"web"`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Username for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Workstation for `ntlm` authentication.
	Workstation pulumi.StringPtrInput `pulumi:"workstation"`
}

func (SyntheticsTestRequestBasicauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthOutput() SyntheticsTestRequestBasicauthOutput {
	return i.ToSyntheticsTestRequestBasicauthOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestBasicauthOutput)
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return i.ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestBasicauthOutput).ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestBasicauthPtrInput is an input type that accepts SyntheticsTestRequestBasicauthArgs, SyntheticsTestRequestBasicauthPtr and SyntheticsTestRequestBasicauthPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestBasicauthPtrInput` via:
//
//	        SyntheticsTestRequestBasicauthArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestBasicauthPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput
	ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Context) SyntheticsTestRequestBasicauthPtrOutput
}

type syntheticsTestRequestBasicauthPtrType SyntheticsTestRequestBasicauthArgs

func SyntheticsTestRequestBasicauthPtr(v *SyntheticsTestRequestBasicauthArgs) SyntheticsTestRequestBasicauthPtrInput {
	return (*syntheticsTestRequestBasicauthPtrType)(v)
}

func (*syntheticsTestRequestBasicauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (i *syntheticsTestRequestBasicauthPtrType) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return i.ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestBasicauthPtrType) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestBasicauthPtrOutput)
}

type SyntheticsTestRequestBasicauthOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestBasicauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthOutput() SyntheticsTestRequestBasicauthOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return o.ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestBasicauth) *SyntheticsTestRequestBasicauth {
		return &v
	}).(SyntheticsTestRequestBasicauthPtrOutput)
}

// Access key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Access token url for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.AccessTokenUrl }).(pulumi.StringPtrOutput)
}

// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Client ID for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Domain for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Password for authentication.
func (o SyntheticsTestRequestBasicauthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Region for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Secret key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Service name for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Session token for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) SessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.SessionToken }).(pulumi.StringPtrOutput)
}

// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
func (o SyntheticsTestRequestBasicauthOutput) TokenApiAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.TokenApiAuthentication }).(pulumi.StringPtrOutput)
}

// Type of basic authentication to use when performing the test. Defaults to `"web"`.
func (o SyntheticsTestRequestBasicauthOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Username for authentication.
func (o SyntheticsTestRequestBasicauthOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Workstation for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthOutput) Workstation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Workstation }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestBasicauthPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestBasicauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (o SyntheticsTestRequestBasicauthPtrOutput) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthPtrOutput) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthPtrOutput) Elem() SyntheticsTestRequestBasicauthOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) SyntheticsTestRequestBasicauth {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestBasicauth
		return ret
	}).(SyntheticsTestRequestBasicauthOutput)
}

// Access key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Access token url for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.AccessTokenUrl
	}).(pulumi.StringPtrOutput)
}

// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Client ID for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Domain for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Password for authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Region for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Secret key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Service name for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Session token for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) SessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.SessionToken
	}).(pulumi.StringPtrOutput)
}

// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
func (o SyntheticsTestRequestBasicauthPtrOutput) TokenApiAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.TokenApiAuthentication
	}).(pulumi.StringPtrOutput)
}

// Type of basic authentication to use when performing the test. Defaults to `"web"`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Username for authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Workstation for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Workstation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Workstation
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificate struct {
	Cert SyntheticsTestRequestClientCertificateCert `pulumi:"cert"`
	Key  SyntheticsTestRequestClientCertificateKey  `pulumi:"key"`
}

// SyntheticsTestRequestClientCertificateInput is an input type that accepts SyntheticsTestRequestClientCertificateArgs and SyntheticsTestRequestClientCertificateOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateInput` via:
//
//	SyntheticsTestRequestClientCertificateArgs{...}
type SyntheticsTestRequestClientCertificateInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateOutput() SyntheticsTestRequestClientCertificateOutput
	ToSyntheticsTestRequestClientCertificateOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateOutput
}

type SyntheticsTestRequestClientCertificateArgs struct {
	Cert SyntheticsTestRequestClientCertificateCertInput `pulumi:"cert"`
	Key  SyntheticsTestRequestClientCertificateKeyInput  `pulumi:"key"`
}

func (SyntheticsTestRequestClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificateOutput() SyntheticsTestRequestClientCertificateOutput {
	return i.ToSyntheticsTestRequestClientCertificateOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificateOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateOutput)
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return i.ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateOutput).ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx)
}

// SyntheticsTestRequestClientCertificatePtrInput is an input type that accepts SyntheticsTestRequestClientCertificateArgs, SyntheticsTestRequestClientCertificatePtr and SyntheticsTestRequestClientCertificatePtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificatePtrInput` via:
//
//	        SyntheticsTestRequestClientCertificateArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestClientCertificatePtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput
	ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Context) SyntheticsTestRequestClientCertificatePtrOutput
}

type syntheticsTestRequestClientCertificatePtrType SyntheticsTestRequestClientCertificateArgs

func SyntheticsTestRequestClientCertificatePtr(v *SyntheticsTestRequestClientCertificateArgs) SyntheticsTestRequestClientCertificatePtrInput {
	return (*syntheticsTestRequestClientCertificatePtrType)(v)
}

func (*syntheticsTestRequestClientCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (i *syntheticsTestRequestClientCertificatePtrType) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return i.ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestClientCertificatePtrType) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificatePtrOutput)
}

type SyntheticsTestRequestClientCertificateOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificateOutput() SyntheticsTestRequestClientCertificateOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificateOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return o.ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestClientCertificate) *SyntheticsTestRequestClientCertificate {
		return &v
	}).(SyntheticsTestRequestClientCertificatePtrOutput)
}

func (o SyntheticsTestRequestClientCertificateOutput) Cert() SyntheticsTestRequestClientCertificateCertOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificate) SyntheticsTestRequestClientCertificateCert {
		return v.Cert
	}).(SyntheticsTestRequestClientCertificateCertOutput)
}

func (o SyntheticsTestRequestClientCertificateOutput) Key() SyntheticsTestRequestClientCertificateKeyOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificate) SyntheticsTestRequestClientCertificateKey { return v.Key }).(SyntheticsTestRequestClientCertificateKeyOutput)
}

type SyntheticsTestRequestClientCertificatePtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) Elem() SyntheticsTestRequestClientCertificateOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificate) SyntheticsTestRequestClientCertificate {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestClientCertificate
		return ret
	}).(SyntheticsTestRequestClientCertificateOutput)
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) Cert() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificate) *SyntheticsTestRequestClientCertificateCert {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(SyntheticsTestRequestClientCertificateCertPtrOutput)
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) Key() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificate) *SyntheticsTestRequestClientCertificateKey {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(SyntheticsTestRequestClientCertificateKeyPtrOutput)
}

type SyntheticsTestRequestClientCertificateCert struct {
	// Content of the certificate.
	Content string `pulumi:"content"`
	// File name for the certificate.
	Filename *string `pulumi:"filename"`
}

// SyntheticsTestRequestClientCertificateCertInput is an input type that accepts SyntheticsTestRequestClientCertificateCertArgs and SyntheticsTestRequestClientCertificateCertOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateCertInput` via:
//
//	SyntheticsTestRequestClientCertificateCertArgs{...}
type SyntheticsTestRequestClientCertificateCertInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateCertOutput() SyntheticsTestRequestClientCertificateCertOutput
	ToSyntheticsTestRequestClientCertificateCertOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateCertOutput
}

type SyntheticsTestRequestClientCertificateCertArgs struct {
	// Content of the certificate.
	Content pulumi.StringInput `pulumi:"content"`
	// File name for the certificate.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (SyntheticsTestRequestClientCertificateCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertOutput() SyntheticsTestRequestClientCertificateCertOutput {
	return i.ToSyntheticsTestRequestClientCertificateCertOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateCertOutput)
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateCertOutput).ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestClientCertificateCertPtrInput is an input type that accepts SyntheticsTestRequestClientCertificateCertArgs, SyntheticsTestRequestClientCertificateCertPtr and SyntheticsTestRequestClientCertificateCertPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateCertPtrInput` via:
//
//	        SyntheticsTestRequestClientCertificateCertArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestClientCertificateCertPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput
	ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput
}

type syntheticsTestRequestClientCertificateCertPtrType SyntheticsTestRequestClientCertificateCertArgs

func SyntheticsTestRequestClientCertificateCertPtr(v *SyntheticsTestRequestClientCertificateCertArgs) SyntheticsTestRequestClientCertificateCertPtrInput {
	return (*syntheticsTestRequestClientCertificateCertPtrType)(v)
}

func (*syntheticsTestRequestClientCertificateCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (i *syntheticsTestRequestClientCertificateCertPtrType) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestClientCertificateCertPtrType) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateCertPtrOutput)
}

type SyntheticsTestRequestClientCertificateCertOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertOutput() SyntheticsTestRequestClientCertificateCertOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o.ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestClientCertificateCert) *SyntheticsTestRequestClientCertificateCert {
		return &v
	}).(SyntheticsTestRequestClientCertificateCertPtrOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateCertOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateCert) string { return v.Content }).(pulumi.StringOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateCertOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateCert) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificateCertPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateCertPtrOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertPtrOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertPtrOutput) Elem() SyntheticsTestRequestClientCertificateCertOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateCert) SyntheticsTestRequestClientCertificateCert {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestClientCertificateCert
		return ret
	}).(SyntheticsTestRequestClientCertificateCertOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateCertPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateCert) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateCertPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateCert) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificateKey struct {
	// Content of the certificate.
	Content string `pulumi:"content"`
	// File name for the certificate.
	Filename *string `pulumi:"filename"`
}

// SyntheticsTestRequestClientCertificateKeyInput is an input type that accepts SyntheticsTestRequestClientCertificateKeyArgs and SyntheticsTestRequestClientCertificateKeyOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateKeyInput` via:
//
//	SyntheticsTestRequestClientCertificateKeyArgs{...}
type SyntheticsTestRequestClientCertificateKeyInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateKeyOutput() SyntheticsTestRequestClientCertificateKeyOutput
	ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateKeyOutput
}

type SyntheticsTestRequestClientCertificateKeyArgs struct {
	// Content of the certificate.
	Content pulumi.StringInput `pulumi:"content"`
	// File name for the certificate.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (SyntheticsTestRequestClientCertificateKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyOutput() SyntheticsTestRequestClientCertificateKeyOutput {
	return i.ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateKeyOutput)
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateKeyOutput).ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestClientCertificateKeyPtrInput is an input type that accepts SyntheticsTestRequestClientCertificateKeyArgs, SyntheticsTestRequestClientCertificateKeyPtr and SyntheticsTestRequestClientCertificateKeyPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateKeyPtrInput` via:
//
//	        SyntheticsTestRequestClientCertificateKeyArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestClientCertificateKeyPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput
	ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput
}

type syntheticsTestRequestClientCertificateKeyPtrType SyntheticsTestRequestClientCertificateKeyArgs

func SyntheticsTestRequestClientCertificateKeyPtr(v *SyntheticsTestRequestClientCertificateKeyArgs) SyntheticsTestRequestClientCertificateKeyPtrInput {
	return (*syntheticsTestRequestClientCertificateKeyPtrType)(v)
}

func (*syntheticsTestRequestClientCertificateKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (i *syntheticsTestRequestClientCertificateKeyPtrType) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestClientCertificateKeyPtrType) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateKeyPtrOutput)
}

type SyntheticsTestRequestClientCertificateKeyOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyOutput() SyntheticsTestRequestClientCertificateKeyOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o.ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestClientCertificateKey) *SyntheticsTestRequestClientCertificateKey {
		return &v
	}).(SyntheticsTestRequestClientCertificateKeyPtrOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateKeyOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateKey) string { return v.Content }).(pulumi.StringOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateKeyOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateKey) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificateKeyPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) Elem() SyntheticsTestRequestClientCertificateKeyOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateKey) SyntheticsTestRequestClientCertificateKey {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestClientCertificateKey
		return ret
	}).(SyntheticsTestRequestClientCertificateKeyOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateKey) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateKey) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestDefinition struct {
	// The request body.
	Body *string `pulumi:"body"`
	// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
	BodyType *string `pulumi:"bodyType"`
	// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
	CallType *string `pulumi:"callType"`
	// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
	CertificateDomains []string `pulumi:"certificateDomains"`
	// DNS server to use for DNS tests (`subtype = "dns"`).
	DnsServer *string `pulumi:"dnsServer"`
	// DNS server port to use for DNS tests.
	DnsServerPort *int `pulumi:"dnsServerPort"`
	// Host name to perform the test with.
	Host *string `pulumi:"host"`
	// HTTP version to use for an HTTP request in an API test or step. **Deprecated.** Use `httpVersion` in the `optionsList` field instead.
	//
	// Deprecated: Use `httpVersion` in the `optionsList` field instead.
	HttpVersion *string `pulumi:"httpVersion"`
	// For UDP and websocket tests, message to send with the request.
	Message *string `pulumi:"message"`
	// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
	Method *string `pulumi:"method"`
	// Determines whether or not to save the response body.
	NoSavingResponseBody *bool `pulumi:"noSavingResponseBody"`
	// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
	NumberOfPackets *int `pulumi:"numberOfPackets"`
	// Persist cookies across redirects.
	PersistCookies *bool `pulumi:"persistCookies"`
	// The content of a proto file as a string.
	PlainProtoFile *string `pulumi:"plainProtoFile"`
	// Port to use when performing the test.
	Port *int `pulumi:"port"`
	// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
	//
	// Deprecated: Use `plainProtoFile` instead.
	ProtoJsonDescriptor *string `pulumi:"protoJsonDescriptor"`
	// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
	Servername *string `pulumi:"servername"`
	// The gRPC service on which you want to perform the gRPC call.
	Service *string `pulumi:"service"`
	// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
	ShouldTrackHops *bool `pulumi:"shouldTrackHops"`
	// Timeout in seconds for the test.
	Timeout *int `pulumi:"timeout"`
	// The URL to send the request to.
	Url *string `pulumi:"url"`
}

// SyntheticsTestRequestDefinitionInput is an input type that accepts SyntheticsTestRequestDefinitionArgs and SyntheticsTestRequestDefinitionOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestDefinitionInput` via:
//
//	SyntheticsTestRequestDefinitionArgs{...}
type SyntheticsTestRequestDefinitionInput interface {
	pulumi.Input

	ToSyntheticsTestRequestDefinitionOutput() SyntheticsTestRequestDefinitionOutput
	ToSyntheticsTestRequestDefinitionOutputWithContext(context.Context) SyntheticsTestRequestDefinitionOutput
}

type SyntheticsTestRequestDefinitionArgs struct {
	// The request body.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
	BodyType pulumi.StringPtrInput `pulumi:"bodyType"`
	// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
	CallType pulumi.StringPtrInput `pulumi:"callType"`
	// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
	CertificateDomains pulumi.StringArrayInput `pulumi:"certificateDomains"`
	// DNS server to use for DNS tests (`subtype = "dns"`).
	DnsServer pulumi.StringPtrInput `pulumi:"dnsServer"`
	// DNS server port to use for DNS tests.
	DnsServerPort pulumi.IntPtrInput `pulumi:"dnsServerPort"`
	// Host name to perform the test with.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// HTTP version to use for an HTTP request in an API test or step. **Deprecated.** Use `httpVersion` in the `optionsList` field instead.
	//
	// Deprecated: Use `httpVersion` in the `optionsList` field instead.
	HttpVersion pulumi.StringPtrInput `pulumi:"httpVersion"`
	// For UDP and websocket tests, message to send with the request.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Determines whether or not to save the response body.
	NoSavingResponseBody pulumi.BoolPtrInput `pulumi:"noSavingResponseBody"`
	// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
	NumberOfPackets pulumi.IntPtrInput `pulumi:"numberOfPackets"`
	// Persist cookies across redirects.
	PersistCookies pulumi.BoolPtrInput `pulumi:"persistCookies"`
	// The content of a proto file as a string.
	PlainProtoFile pulumi.StringPtrInput `pulumi:"plainProtoFile"`
	// Port to use when performing the test.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
	//
	// Deprecated: Use `plainProtoFile` instead.
	ProtoJsonDescriptor pulumi.StringPtrInput `pulumi:"protoJsonDescriptor"`
	// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
	Servername pulumi.StringPtrInput `pulumi:"servername"`
	// The gRPC service on which you want to perform the gRPC call.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
	ShouldTrackHops pulumi.BoolPtrInput `pulumi:"shouldTrackHops"`
	// Timeout in seconds for the test.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The URL to send the request to.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SyntheticsTestRequestDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionOutput() SyntheticsTestRequestDefinitionOutput {
	return i.ToSyntheticsTestRequestDefinitionOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestDefinitionOutput)
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return i.ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestDefinitionOutput).ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestDefinitionPtrInput is an input type that accepts SyntheticsTestRequestDefinitionArgs, SyntheticsTestRequestDefinitionPtr and SyntheticsTestRequestDefinitionPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestDefinitionPtrInput` via:
//
//	        SyntheticsTestRequestDefinitionArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestDefinitionPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput
	ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Context) SyntheticsTestRequestDefinitionPtrOutput
}

type syntheticsTestRequestDefinitionPtrType SyntheticsTestRequestDefinitionArgs

func SyntheticsTestRequestDefinitionPtr(v *SyntheticsTestRequestDefinitionArgs) SyntheticsTestRequestDefinitionPtrInput {
	return (*syntheticsTestRequestDefinitionPtrType)(v)
}

func (*syntheticsTestRequestDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (i *syntheticsTestRequestDefinitionPtrType) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return i.ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestDefinitionPtrType) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestDefinitionPtrOutput)
}

type SyntheticsTestRequestDefinitionOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionOutput() SyntheticsTestRequestDefinitionOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return o.ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestDefinition) *SyntheticsTestRequestDefinition {
		return &v
	}).(SyntheticsTestRequestDefinitionPtrOutput)
}

// The request body.
func (o SyntheticsTestRequestDefinitionOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
func (o SyntheticsTestRequestDefinitionOutput) BodyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.BodyType }).(pulumi.StringPtrOutput)
}

// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
func (o SyntheticsTestRequestDefinitionOutput) CallType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.CallType }).(pulumi.StringPtrOutput)
}

// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
func (o SyntheticsTestRequestDefinitionOutput) CertificateDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) []string { return v.CertificateDomains }).(pulumi.StringArrayOutput)
}

// DNS server to use for DNS tests (`subtype = "dns"`).
func (o SyntheticsTestRequestDefinitionOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.DnsServer }).(pulumi.StringPtrOutput)
}

// DNS server port to use for DNS tests.
func (o SyntheticsTestRequestDefinitionOutput) DnsServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *int { return v.DnsServerPort }).(pulumi.IntPtrOutput)
}

// Host name to perform the test with.
func (o SyntheticsTestRequestDefinitionOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. **Deprecated.** Use `httpVersion` in the `optionsList` field instead.
//
// Deprecated: Use `httpVersion` in the `optionsList` field instead.
func (o SyntheticsTestRequestDefinitionOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.HttpVersion }).(pulumi.StringPtrOutput)
}

// For UDP and websocket tests, message to send with the request.
func (o SyntheticsTestRequestDefinitionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
func (o SyntheticsTestRequestDefinitionOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Determines whether or not to save the response body.
func (o SyntheticsTestRequestDefinitionOutput) NoSavingResponseBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *bool { return v.NoSavingResponseBody }).(pulumi.BoolPtrOutput)
}

// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
func (o SyntheticsTestRequestDefinitionOutput) NumberOfPackets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *int { return v.NumberOfPackets }).(pulumi.IntPtrOutput)
}

// Persist cookies across redirects.
func (o SyntheticsTestRequestDefinitionOutput) PersistCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *bool { return v.PersistCookies }).(pulumi.BoolPtrOutput)
}

// The content of a proto file as a string.
func (o SyntheticsTestRequestDefinitionOutput) PlainProtoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.PlainProtoFile }).(pulumi.StringPtrOutput)
}

// Port to use when performing the test.
func (o SyntheticsTestRequestDefinitionOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
//
// Deprecated: Use `plainProtoFile` instead.
func (o SyntheticsTestRequestDefinitionOutput) ProtoJsonDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.ProtoJsonDescriptor }).(pulumi.StringPtrOutput)
}

// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
func (o SyntheticsTestRequestDefinitionOutput) Servername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Servername }).(pulumi.StringPtrOutput)
}

// The gRPC service on which you want to perform the gRPC call.
func (o SyntheticsTestRequestDefinitionOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
func (o SyntheticsTestRequestDefinitionOutput) ShouldTrackHops() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *bool { return v.ShouldTrackHops }).(pulumi.BoolPtrOutput)
}

// Timeout in seconds for the test.
func (o SyntheticsTestRequestDefinitionOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The URL to send the request to.
func (o SyntheticsTestRequestDefinitionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestDefinitionPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (o SyntheticsTestRequestDefinitionPtrOutput) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionPtrOutput) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionPtrOutput) Elem() SyntheticsTestRequestDefinitionOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) SyntheticsTestRequestDefinition {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestDefinition
		return ret
	}).(SyntheticsTestRequestDefinitionOutput)
}

// The request body.
func (o SyntheticsTestRequestDefinitionPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
func (o SyntheticsTestRequestDefinitionPtrOutput) BodyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.BodyType
	}).(pulumi.StringPtrOutput)
}

// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
func (o SyntheticsTestRequestDefinitionPtrOutput) CallType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.CallType
	}).(pulumi.StringPtrOutput)
}

// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
func (o SyntheticsTestRequestDefinitionPtrOutput) CertificateDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) []string {
		if v == nil {
			return nil
		}
		return v.CertificateDomains
	}).(pulumi.StringArrayOutput)
}

// DNS server to use for DNS tests (`subtype = "dns"`).
func (o SyntheticsTestRequestDefinitionPtrOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DnsServer
	}).(pulumi.StringPtrOutput)
}

// DNS server port to use for DNS tests.
func (o SyntheticsTestRequestDefinitionPtrOutput) DnsServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.DnsServerPort
	}).(pulumi.IntPtrOutput)
}

// Host name to perform the test with.
func (o SyntheticsTestRequestDefinitionPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. **Deprecated.** Use `httpVersion` in the `optionsList` field instead.
//
// Deprecated: Use `httpVersion` in the `optionsList` field instead.
func (o SyntheticsTestRequestDefinitionPtrOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.HttpVersion
	}).(pulumi.StringPtrOutput)
}

// For UDP and websocket tests, message to send with the request.
func (o SyntheticsTestRequestDefinitionPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
func (o SyntheticsTestRequestDefinitionPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Determines whether or not to save the response body.
func (o SyntheticsTestRequestDefinitionPtrOutput) NoSavingResponseBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.NoSavingResponseBody
	}).(pulumi.BoolPtrOutput)
}

// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
func (o SyntheticsTestRequestDefinitionPtrOutput) NumberOfPackets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfPackets
	}).(pulumi.IntPtrOutput)
}

// Persist cookies across redirects.
func (o SyntheticsTestRequestDefinitionPtrOutput) PersistCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.PersistCookies
	}).(pulumi.BoolPtrOutput)
}

// The content of a proto file as a string.
func (o SyntheticsTestRequestDefinitionPtrOutput) PlainProtoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.PlainProtoFile
	}).(pulumi.StringPtrOutput)
}

// Port to use when performing the test.
func (o SyntheticsTestRequestDefinitionPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
//
// Deprecated: Use `plainProtoFile` instead.
func (o SyntheticsTestRequestDefinitionPtrOutput) ProtoJsonDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ProtoJsonDescriptor
	}).(pulumi.StringPtrOutput)
}

// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
func (o SyntheticsTestRequestDefinitionPtrOutput) Servername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Servername
	}).(pulumi.StringPtrOutput)
}

// The gRPC service on which you want to perform the gRPC call.
func (o SyntheticsTestRequestDefinitionPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
func (o SyntheticsTestRequestDefinitionPtrOutput) ShouldTrackHops() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldTrackHops
	}).(pulumi.BoolPtrOutput)
}

// Timeout in seconds for the test.
func (o SyntheticsTestRequestDefinitionPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The URL to send the request to.
func (o SyntheticsTestRequestDefinitionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestFile struct {
	// Bucket key of the file.
	BucketKey *string `pulumi:"bucketKey"`
	// Content of the file.
	Content *string `pulumi:"content"`
	// Name of the file.
	Name string `pulumi:"name"`
	// Original name of the file.
	OriginalFileName *string `pulumi:"originalFileName"`
	// Size of the file.
	Size int `pulumi:"size"`
	// Type of the file.
	Type string `pulumi:"type"`
}

// SyntheticsTestRequestFileInput is an input type that accepts SyntheticsTestRequestFileArgs and SyntheticsTestRequestFileOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestFileInput` via:
//
//	SyntheticsTestRequestFileArgs{...}
type SyntheticsTestRequestFileInput interface {
	pulumi.Input

	ToSyntheticsTestRequestFileOutput() SyntheticsTestRequestFileOutput
	ToSyntheticsTestRequestFileOutputWithContext(context.Context) SyntheticsTestRequestFileOutput
}

type SyntheticsTestRequestFileArgs struct {
	// Bucket key of the file.
	BucketKey pulumi.StringPtrInput `pulumi:"bucketKey"`
	// Content of the file.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Name of the file.
	Name pulumi.StringInput `pulumi:"name"`
	// Original name of the file.
	OriginalFileName pulumi.StringPtrInput `pulumi:"originalFileName"`
	// Size of the file.
	Size pulumi.IntInput `pulumi:"size"`
	// Type of the file.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestRequestFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestFile)(nil)).Elem()
}

func (i SyntheticsTestRequestFileArgs) ToSyntheticsTestRequestFileOutput() SyntheticsTestRequestFileOutput {
	return i.ToSyntheticsTestRequestFileOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestFileArgs) ToSyntheticsTestRequestFileOutputWithContext(ctx context.Context) SyntheticsTestRequestFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestFileOutput)
}

// SyntheticsTestRequestFileArrayInput is an input type that accepts SyntheticsTestRequestFileArray and SyntheticsTestRequestFileArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestFileArrayInput` via:
//
//	SyntheticsTestRequestFileArray{ SyntheticsTestRequestFileArgs{...} }
type SyntheticsTestRequestFileArrayInput interface {
	pulumi.Input

	ToSyntheticsTestRequestFileArrayOutput() SyntheticsTestRequestFileArrayOutput
	ToSyntheticsTestRequestFileArrayOutputWithContext(context.Context) SyntheticsTestRequestFileArrayOutput
}

type SyntheticsTestRequestFileArray []SyntheticsTestRequestFileInput

func (SyntheticsTestRequestFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestRequestFile)(nil)).Elem()
}

func (i SyntheticsTestRequestFileArray) ToSyntheticsTestRequestFileArrayOutput() SyntheticsTestRequestFileArrayOutput {
	return i.ToSyntheticsTestRequestFileArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestFileArray) ToSyntheticsTestRequestFileArrayOutputWithContext(ctx context.Context) SyntheticsTestRequestFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestFileArrayOutput)
}

type SyntheticsTestRequestFileOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestFile)(nil)).Elem()
}

func (o SyntheticsTestRequestFileOutput) ToSyntheticsTestRequestFileOutput() SyntheticsTestRequestFileOutput {
	return o
}

func (o SyntheticsTestRequestFileOutput) ToSyntheticsTestRequestFileOutputWithContext(ctx context.Context) SyntheticsTestRequestFileOutput {
	return o
}

// Bucket key of the file.
func (o SyntheticsTestRequestFileOutput) BucketKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) *string { return v.BucketKey }).(pulumi.StringPtrOutput)
}

// Content of the file.
func (o SyntheticsTestRequestFileOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Name of the file.
func (o SyntheticsTestRequestFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) string { return v.Name }).(pulumi.StringOutput)
}

// Original name of the file.
func (o SyntheticsTestRequestFileOutput) OriginalFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) *string { return v.OriginalFileName }).(pulumi.StringPtrOutput)
}

// Size of the file.
func (o SyntheticsTestRequestFileOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) int { return v.Size }).(pulumi.IntOutput)
}

// Type of the file.
func (o SyntheticsTestRequestFileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestRequestFileArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestRequestFile)(nil)).Elem()
}

func (o SyntheticsTestRequestFileArrayOutput) ToSyntheticsTestRequestFileArrayOutput() SyntheticsTestRequestFileArrayOutput {
	return o
}

func (o SyntheticsTestRequestFileArrayOutput) ToSyntheticsTestRequestFileArrayOutputWithContext(ctx context.Context) SyntheticsTestRequestFileArrayOutput {
	return o
}

func (o SyntheticsTestRequestFileArrayOutput) Index(i pulumi.IntInput) SyntheticsTestRequestFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestRequestFile {
		return vs[0].([]SyntheticsTestRequestFile)[vs[1].(int)]
	}).(SyntheticsTestRequestFileOutput)
}

type SyntheticsTestRequestProxy struct {
	// Header name and value map.
	Headers map[string]string `pulumi:"headers"`
	// URL of the proxy to perform the test.
	Url string `pulumi:"url"`
}

// SyntheticsTestRequestProxyInput is an input type that accepts SyntheticsTestRequestProxyArgs and SyntheticsTestRequestProxyOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestProxyInput` via:
//
//	SyntheticsTestRequestProxyArgs{...}
type SyntheticsTestRequestProxyInput interface {
	pulumi.Input

	ToSyntheticsTestRequestProxyOutput() SyntheticsTestRequestProxyOutput
	ToSyntheticsTestRequestProxyOutputWithContext(context.Context) SyntheticsTestRequestProxyOutput
}

type SyntheticsTestRequestProxyArgs struct {
	// Header name and value map.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// URL of the proxy to perform the test.
	Url pulumi.StringInput `pulumi:"url"`
}

func (SyntheticsTestRequestProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestProxy)(nil)).Elem()
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyOutput() SyntheticsTestRequestProxyOutput {
	return i.ToSyntheticsTestRequestProxyOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestProxyOutput)
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return i.ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestProxyOutput).ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestProxyPtrInput is an input type that accepts SyntheticsTestRequestProxyArgs, SyntheticsTestRequestProxyPtr and SyntheticsTestRequestProxyPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestProxyPtrInput` via:
//
//	        SyntheticsTestRequestProxyArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestProxyPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput
	ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Context) SyntheticsTestRequestProxyPtrOutput
}

type syntheticsTestRequestProxyPtrType SyntheticsTestRequestProxyArgs

func SyntheticsTestRequestProxyPtr(v *SyntheticsTestRequestProxyArgs) SyntheticsTestRequestProxyPtrInput {
	return (*syntheticsTestRequestProxyPtrType)(v)
}

func (*syntheticsTestRequestProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestProxy)(nil)).Elem()
}

func (i *syntheticsTestRequestProxyPtrType) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return i.ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestProxyPtrType) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestProxyPtrOutput)
}

type SyntheticsTestRequestProxyOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestProxy)(nil)).Elem()
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyOutput() SyntheticsTestRequestProxyOutput {
	return o
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyOutput {
	return o
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return o.ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestProxy) *SyntheticsTestRequestProxy {
		return &v
	}).(SyntheticsTestRequestProxyPtrOutput)
}

// Header name and value map.
func (o SyntheticsTestRequestProxyOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v SyntheticsTestRequestProxy) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// URL of the proxy to perform the test.
func (o SyntheticsTestRequestProxyOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestProxy) string { return v.Url }).(pulumi.StringOutput)
}

type SyntheticsTestRequestProxyPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestProxy)(nil)).Elem()
}

func (o SyntheticsTestRequestProxyPtrOutput) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return o
}

func (o SyntheticsTestRequestProxyPtrOutput) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return o
}

func (o SyntheticsTestRequestProxyPtrOutput) Elem() SyntheticsTestRequestProxyOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestProxy) SyntheticsTestRequestProxy {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestProxy
		return ret
	}).(SyntheticsTestRequestProxyOutput)
}

// Header name and value map.
func (o SyntheticsTestRequestProxyPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestProxy) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// URL of the proxy to perform the test.
func (o SyntheticsTestRequestProxyPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestProxy) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type GetCloudWorkloadSecurityAgentRulesAgentRule struct {
	// The description of the Agent rule.
	Description string `pulumi:"description"`
	// Whether the Agent rule is enabled.
	Enabled bool `pulumi:"enabled"`
	// The SECL expression of the Agent rule.
	Expression string `pulumi:"expression"`
	// The id of the Agent rule.
	Id string `pulumi:"id"`
	// The name of the Agent rule.
	Name string `pulumi:"name"`
}

// GetCloudWorkloadSecurityAgentRulesAgentRuleInput is an input type that accepts GetCloudWorkloadSecurityAgentRulesAgentRuleArgs and GetCloudWorkloadSecurityAgentRulesAgentRuleOutput values.
// You can construct a concrete instance of `GetCloudWorkloadSecurityAgentRulesAgentRuleInput` via:
//
//	GetCloudWorkloadSecurityAgentRulesAgentRuleArgs{...}
type GetCloudWorkloadSecurityAgentRulesAgentRuleInput interface {
	pulumi.Input

	ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleOutput
	ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleArgs struct {
	// The description of the Agent rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether the Agent rule is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The SECL expression of the Agent rule.
	Expression pulumi.StringInput `pulumi:"expression"`
	// The id of the Agent rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Agent rule.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCloudWorkloadSecurityAgentRulesAgentRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArgs) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return i.ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(context.Background())
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArgs) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudWorkloadSecurityAgentRulesAgentRuleOutput)
}

// GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput is an input type that accepts GetCloudWorkloadSecurityAgentRulesAgentRuleArray and GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput values.
// You can construct a concrete instance of `GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput` via:
//
//	GetCloudWorkloadSecurityAgentRulesAgentRuleArray{ GetCloudWorkloadSecurityAgentRulesAgentRuleArgs{...} }
type GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput interface {
	pulumi.Input

	ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput
	ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleArray []GetCloudWorkloadSecurityAgentRulesAgentRuleInput

func (GetCloudWorkloadSecurityAgentRulesAgentRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArray) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return i.ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(context.Background())
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArray) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput)
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleOutput struct{ *pulumi.OutputState }

func (GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return o
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return o
}

// The description of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Description }).(pulumi.StringOutput)
}

// Whether the Agent rule is enabled.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The SECL expression of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Expression }).(pulumi.StringOutput)
}

// The id of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) Index(i pulumi.IntInput) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudWorkloadSecurityAgentRulesAgentRule {
		return vs[0].([]GetCloudWorkloadSecurityAgentRulesAgentRule)[vs[1].(int)]
	}).(GetCloudWorkloadSecurityAgentRulesAgentRuleOutput)
}

type GetCsmThreatsAgentRulesAgentRule struct {
	Description string `pulumi:"description"`
	Enabled     bool   `pulumi:"enabled"`
	Expression  string `pulumi:"expression"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
}

// GetCsmThreatsAgentRulesAgentRuleInput is an input type that accepts GetCsmThreatsAgentRulesAgentRuleArgs and GetCsmThreatsAgentRulesAgentRuleOutput values.
// You can construct a concrete instance of `GetCsmThreatsAgentRulesAgentRuleInput` via:
//
//	GetCsmThreatsAgentRulesAgentRuleArgs{...}
type GetCsmThreatsAgentRulesAgentRuleInput interface {
	pulumi.Input

	ToGetCsmThreatsAgentRulesAgentRuleOutput() GetCsmThreatsAgentRulesAgentRuleOutput
	ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(context.Context) GetCsmThreatsAgentRulesAgentRuleOutput
}

type GetCsmThreatsAgentRulesAgentRuleArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Enabled     pulumi.BoolInput   `pulumi:"enabled"`
	Expression  pulumi.StringInput `pulumi:"expression"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
}

func (GetCsmThreatsAgentRulesAgentRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCsmThreatsAgentRulesAgentRuleArgs) ToGetCsmThreatsAgentRulesAgentRuleOutput() GetCsmThreatsAgentRulesAgentRuleOutput {
	return i.ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(context.Background())
}

func (i GetCsmThreatsAgentRulesAgentRuleArgs) ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsmThreatsAgentRulesAgentRuleOutput)
}

// GetCsmThreatsAgentRulesAgentRuleArrayInput is an input type that accepts GetCsmThreatsAgentRulesAgentRuleArray and GetCsmThreatsAgentRulesAgentRuleArrayOutput values.
// You can construct a concrete instance of `GetCsmThreatsAgentRulesAgentRuleArrayInput` via:
//
//	GetCsmThreatsAgentRulesAgentRuleArray{ GetCsmThreatsAgentRulesAgentRuleArgs{...} }
type GetCsmThreatsAgentRulesAgentRuleArrayInput interface {
	pulumi.Input

	ToGetCsmThreatsAgentRulesAgentRuleArrayOutput() GetCsmThreatsAgentRulesAgentRuleArrayOutput
	ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(context.Context) GetCsmThreatsAgentRulesAgentRuleArrayOutput
}

type GetCsmThreatsAgentRulesAgentRuleArray []GetCsmThreatsAgentRulesAgentRuleInput

func (GetCsmThreatsAgentRulesAgentRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCsmThreatsAgentRulesAgentRuleArray) ToGetCsmThreatsAgentRulesAgentRuleArrayOutput() GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return i.ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(context.Background())
}

func (i GetCsmThreatsAgentRulesAgentRuleArray) ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsmThreatsAgentRulesAgentRuleArrayOutput)
}

type GetCsmThreatsAgentRulesAgentRuleOutput struct{ *pulumi.OutputState }

func (GetCsmThreatsAgentRulesAgentRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) ToGetCsmThreatsAgentRulesAgentRuleOutput() GetCsmThreatsAgentRulesAgentRuleOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Expression }).(pulumi.StringOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetCsmThreatsAgentRulesAgentRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCsmThreatsAgentRulesAgentRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCsmThreatsAgentRulesAgentRuleArrayOutput) ToGetCsmThreatsAgentRulesAgentRuleArrayOutput() GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleArrayOutput) ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleArrayOutput) Index(i pulumi.IntInput) GetCsmThreatsAgentRulesAgentRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCsmThreatsAgentRulesAgentRule {
		return vs[0].([]GetCsmThreatsAgentRulesAgentRule)[vs[1].(int)]
	}).(GetCsmThreatsAgentRulesAgentRuleOutput)
}

type GetHostsHostList struct {
	Aliases          []string                `pulumi:"aliases"`
	Apps             []string                `pulumi:"apps"`
	AwsName          string                  `pulumi:"awsName"`
	HostName         string                  `pulumi:"hostName"`
	Id               int                     `pulumi:"id"`
	IsMuted          bool                    `pulumi:"isMuted"`
	LastReportedTime int                     `pulumi:"lastReportedTime"`
	Meta             GetHostsHostListMeta    `pulumi:"meta"`
	Metrics          GetHostsHostListMetrics `pulumi:"metrics"`
	MuteTimeout      int                     `pulumi:"muteTimeout"`
	Name             string                  `pulumi:"name"`
	Sources          []string                `pulumi:"sources"`
	TagsBySource     map[string][]string     `pulumi:"tagsBySource"`
	Up               bool                    `pulumi:"up"`
}

// GetHostsHostListInput is an input type that accepts GetHostsHostListArgs and GetHostsHostListOutput values.
// You can construct a concrete instance of `GetHostsHostListInput` via:
//
//	GetHostsHostListArgs{...}
type GetHostsHostListInput interface {
	pulumi.Input

	ToGetHostsHostListOutput() GetHostsHostListOutput
	ToGetHostsHostListOutputWithContext(context.Context) GetHostsHostListOutput
}

type GetHostsHostListArgs struct {
	Aliases          pulumi.StringArrayInput      `pulumi:"aliases"`
	Apps             pulumi.StringArrayInput      `pulumi:"apps"`
	AwsName          pulumi.StringInput           `pulumi:"awsName"`
	HostName         pulumi.StringInput           `pulumi:"hostName"`
	Id               pulumi.IntInput              `pulumi:"id"`
	IsMuted          pulumi.BoolInput             `pulumi:"isMuted"`
	LastReportedTime pulumi.IntInput              `pulumi:"lastReportedTime"`
	Meta             GetHostsHostListMetaInput    `pulumi:"meta"`
	Metrics          GetHostsHostListMetricsInput `pulumi:"metrics"`
	MuteTimeout      pulumi.IntInput              `pulumi:"muteTimeout"`
	Name             pulumi.StringInput           `pulumi:"name"`
	Sources          pulumi.StringArrayInput      `pulumi:"sources"`
	TagsBySource     pulumi.StringArrayMapInput   `pulumi:"tagsBySource"`
	Up               pulumi.BoolInput             `pulumi:"up"`
}

func (GetHostsHostListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostList)(nil)).Elem()
}

func (i GetHostsHostListArgs) ToGetHostsHostListOutput() GetHostsHostListOutput {
	return i.ToGetHostsHostListOutputWithContext(context.Background())
}

func (i GetHostsHostListArgs) ToGetHostsHostListOutputWithContext(ctx context.Context) GetHostsHostListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListOutput)
}

// GetHostsHostListArrayInput is an input type that accepts GetHostsHostListArray and GetHostsHostListArrayOutput values.
// You can construct a concrete instance of `GetHostsHostListArrayInput` via:
//
//	GetHostsHostListArray{ GetHostsHostListArgs{...} }
type GetHostsHostListArrayInput interface {
	pulumi.Input

	ToGetHostsHostListArrayOutput() GetHostsHostListArrayOutput
	ToGetHostsHostListArrayOutputWithContext(context.Context) GetHostsHostListArrayOutput
}

type GetHostsHostListArray []GetHostsHostListInput

func (GetHostsHostListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHostList)(nil)).Elem()
}

func (i GetHostsHostListArray) ToGetHostsHostListArrayOutput() GetHostsHostListArrayOutput {
	return i.ToGetHostsHostListArrayOutputWithContext(context.Background())
}

func (i GetHostsHostListArray) ToGetHostsHostListArrayOutputWithContext(ctx context.Context) GetHostsHostListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListArrayOutput)
}

type GetHostsHostListOutput struct{ *pulumi.OutputState }

func (GetHostsHostListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostList)(nil)).Elem()
}

func (o GetHostsHostListOutput) ToGetHostsHostListOutput() GetHostsHostListOutput {
	return o
}

func (o GetHostsHostListOutput) ToGetHostsHostListOutputWithContext(ctx context.Context) GetHostsHostListOutput {
	return o
}

func (o GetHostsHostListOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostsHostList) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

func (o GetHostsHostListOutput) Apps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostsHostList) []string { return v.Apps }).(pulumi.StringArrayOutput)
}

func (o GetHostsHostListOutput) AwsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostList) string { return v.AwsName }).(pulumi.StringOutput)
}

func (o GetHostsHostListOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostList) string { return v.HostName }).(pulumi.StringOutput)
}

func (o GetHostsHostListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostList) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetHostsHostListOutput) IsMuted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostsHostList) bool { return v.IsMuted }).(pulumi.BoolOutput)
}

func (o GetHostsHostListOutput) LastReportedTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostList) int { return v.LastReportedTime }).(pulumi.IntOutput)
}

func (o GetHostsHostListOutput) Meta() GetHostsHostListMetaOutput {
	return o.ApplyT(func(v GetHostsHostList) GetHostsHostListMeta { return v.Meta }).(GetHostsHostListMetaOutput)
}

func (o GetHostsHostListOutput) Metrics() GetHostsHostListMetricsOutput {
	return o.ApplyT(func(v GetHostsHostList) GetHostsHostListMetrics { return v.Metrics }).(GetHostsHostListMetricsOutput)
}

func (o GetHostsHostListOutput) MuteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostList) int { return v.MuteTimeout }).(pulumi.IntOutput)
}

func (o GetHostsHostListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostList) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetHostsHostListOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostsHostList) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

func (o GetHostsHostListOutput) TagsBySource() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetHostsHostList) map[string][]string { return v.TagsBySource }).(pulumi.StringArrayMapOutput)
}

func (o GetHostsHostListOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostsHostList) bool { return v.Up }).(pulumi.BoolOutput)
}

type GetHostsHostListArrayOutput struct{ *pulumi.OutputState }

func (GetHostsHostListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHostList)(nil)).Elem()
}

func (o GetHostsHostListArrayOutput) ToGetHostsHostListArrayOutput() GetHostsHostListArrayOutput {
	return o
}

func (o GetHostsHostListArrayOutput) ToGetHostsHostListArrayOutputWithContext(ctx context.Context) GetHostsHostListArrayOutput {
	return o
}

func (o GetHostsHostListArrayOutput) Index(i pulumi.IntInput) GetHostsHostListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostsHostList {
		return vs[0].([]GetHostsHostList)[vs[1].(int)]
	}).(GetHostsHostListOutput)
}

type GetHostsHostListMeta struct {
	AgentVersion   string `pulumi:"agentVersion"`
	CpuCores       int    `pulumi:"cpuCores"`
	Gohai          string `pulumi:"gohai"`
	Machine        string `pulumi:"machine"`
	Platform       string `pulumi:"platform"`
	Processor      string `pulumi:"processor"`
	PythonVersion  string `pulumi:"pythonVersion"`
	SocketFqdn     string `pulumi:"socketFqdn"`
	SocketHostname string `pulumi:"socketHostname"`
}

// GetHostsHostListMetaInput is an input type that accepts GetHostsHostListMetaArgs and GetHostsHostListMetaOutput values.
// You can construct a concrete instance of `GetHostsHostListMetaInput` via:
//
//	GetHostsHostListMetaArgs{...}
type GetHostsHostListMetaInput interface {
	pulumi.Input

	ToGetHostsHostListMetaOutput() GetHostsHostListMetaOutput
	ToGetHostsHostListMetaOutputWithContext(context.Context) GetHostsHostListMetaOutput
}

type GetHostsHostListMetaArgs struct {
	AgentVersion   pulumi.StringInput `pulumi:"agentVersion"`
	CpuCores       pulumi.IntInput    `pulumi:"cpuCores"`
	Gohai          pulumi.StringInput `pulumi:"gohai"`
	Machine        pulumi.StringInput `pulumi:"machine"`
	Platform       pulumi.StringInput `pulumi:"platform"`
	Processor      pulumi.StringInput `pulumi:"processor"`
	PythonVersion  pulumi.StringInput `pulumi:"pythonVersion"`
	SocketFqdn     pulumi.StringInput `pulumi:"socketFqdn"`
	SocketHostname pulumi.StringInput `pulumi:"socketHostname"`
}

func (GetHostsHostListMetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMeta)(nil)).Elem()
}

func (i GetHostsHostListMetaArgs) ToGetHostsHostListMetaOutput() GetHostsHostListMetaOutput {
	return i.ToGetHostsHostListMetaOutputWithContext(context.Background())
}

func (i GetHostsHostListMetaArgs) ToGetHostsHostListMetaOutputWithContext(ctx context.Context) GetHostsHostListMetaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListMetaOutput)
}

type GetHostsHostListMetaOutput struct{ *pulumi.OutputState }

func (GetHostsHostListMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMeta)(nil)).Elem()
}

func (o GetHostsHostListMetaOutput) ToGetHostsHostListMetaOutput() GetHostsHostListMetaOutput {
	return o
}

func (o GetHostsHostListMetaOutput) ToGetHostsHostListMetaOutputWithContext(ctx context.Context) GetHostsHostListMetaOutput {
	return o
}

func (o GetHostsHostListMetaOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.AgentVersion }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) int { return v.CpuCores }).(pulumi.IntOutput)
}

func (o GetHostsHostListMetaOutput) Gohai() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Gohai }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) Machine() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Machine }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Platform }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) Processor() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Processor }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) PythonVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.PythonVersion }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) SocketFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.SocketFqdn }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) SocketHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.SocketHostname }).(pulumi.StringOutput)
}

type GetHostsHostListMetrics struct {
	Cpu    float64 `pulumi:"cpu"`
	Iowait float64 `pulumi:"iowait"`
	Load   float64 `pulumi:"load"`
}

// GetHostsHostListMetricsInput is an input type that accepts GetHostsHostListMetricsArgs and GetHostsHostListMetricsOutput values.
// You can construct a concrete instance of `GetHostsHostListMetricsInput` via:
//
//	GetHostsHostListMetricsArgs{...}
type GetHostsHostListMetricsInput interface {
	pulumi.Input

	ToGetHostsHostListMetricsOutput() GetHostsHostListMetricsOutput
	ToGetHostsHostListMetricsOutputWithContext(context.Context) GetHostsHostListMetricsOutput
}

type GetHostsHostListMetricsArgs struct {
	Cpu    pulumi.Float64Input `pulumi:"cpu"`
	Iowait pulumi.Float64Input `pulumi:"iowait"`
	Load   pulumi.Float64Input `pulumi:"load"`
}

func (GetHostsHostListMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMetrics)(nil)).Elem()
}

func (i GetHostsHostListMetricsArgs) ToGetHostsHostListMetricsOutput() GetHostsHostListMetricsOutput {
	return i.ToGetHostsHostListMetricsOutputWithContext(context.Background())
}

func (i GetHostsHostListMetricsArgs) ToGetHostsHostListMetricsOutputWithContext(ctx context.Context) GetHostsHostListMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListMetricsOutput)
}

type GetHostsHostListMetricsOutput struct{ *pulumi.OutputState }

func (GetHostsHostListMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMetrics)(nil)).Elem()
}

func (o GetHostsHostListMetricsOutput) ToGetHostsHostListMetricsOutput() GetHostsHostListMetricsOutput {
	return o
}

func (o GetHostsHostListMetricsOutput) ToGetHostsHostListMetricsOutputWithContext(ctx context.Context) GetHostsHostListMetricsOutput {
	return o
}

func (o GetHostsHostListMetricsOutput) Cpu() pulumi.Float64Output {
	return o.ApplyT(func(v GetHostsHostListMetrics) float64 { return v.Cpu }).(pulumi.Float64Output)
}

func (o GetHostsHostListMetricsOutput) Iowait() pulumi.Float64Output {
	return o.ApplyT(func(v GetHostsHostListMetrics) float64 { return v.Iowait }).(pulumi.Float64Output)
}

func (o GetHostsHostListMetricsOutput) Load() pulumi.Float64Output {
	return o.ApplyT(func(v GetHostsHostListMetrics) float64 { return v.Load }).(pulumi.Float64Output)
}

type GetLogsIndexesLogsIndex struct {
	// The number of log events you can send in this index per day before you are rate-limited.
	DailyLimit int `pulumi:"dailyLimit"`
	// Object containing options to override the default daily limit reset time.
	DailyLimitResets []GetLogsIndexesLogsIndexDailyLimitReset `pulumi:"dailyLimitResets"`
	// The percentage threshold of the daily quota at which a Datadog warning event is generated.
	DailyLimitWarningThresholdPercentage float64 `pulumi:"dailyLimitWarningThresholdPercentage"`
	// List of exclusion filters.
	ExclusionFilters []GetLogsIndexesLogsIndexExclusionFilter `pulumi:"exclusionFilters"`
	// Logs filter
	Filters []GetLogsIndexesLogsIndexFilter `pulumi:"filters"`
	// The name of the index.
	Name string `pulumi:"name"`
	// The number of days before logs are deleted from this index.
	RetentionDays int `pulumi:"retentionDays"`
}

// GetLogsIndexesLogsIndexInput is an input type that accepts GetLogsIndexesLogsIndexArgs and GetLogsIndexesLogsIndexOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexInput` via:
//
//	GetLogsIndexesLogsIndexArgs{...}
type GetLogsIndexesLogsIndexInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexOutput() GetLogsIndexesLogsIndexOutput
	ToGetLogsIndexesLogsIndexOutputWithContext(context.Context) GetLogsIndexesLogsIndexOutput
}

type GetLogsIndexesLogsIndexArgs struct {
	// The number of log events you can send in this index per day before you are rate-limited.
	DailyLimit pulumi.IntInput `pulumi:"dailyLimit"`
	// Object containing options to override the default daily limit reset time.
	DailyLimitResets GetLogsIndexesLogsIndexDailyLimitResetArrayInput `pulumi:"dailyLimitResets"`
	// The percentage threshold of the daily quota at which a Datadog warning event is generated.
	DailyLimitWarningThresholdPercentage pulumi.Float64Input `pulumi:"dailyLimitWarningThresholdPercentage"`
	// List of exclusion filters.
	ExclusionFilters GetLogsIndexesLogsIndexExclusionFilterArrayInput `pulumi:"exclusionFilters"`
	// Logs filter
	Filters GetLogsIndexesLogsIndexFilterArrayInput `pulumi:"filters"`
	// The name of the index.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of days before logs are deleted from this index.
	RetentionDays pulumi.IntInput `pulumi:"retentionDays"`
}

func (GetLogsIndexesLogsIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexArgs) ToGetLogsIndexesLogsIndexOutput() GetLogsIndexesLogsIndexOutput {
	return i.ToGetLogsIndexesLogsIndexOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexArgs) ToGetLogsIndexesLogsIndexOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexOutput)
}

// GetLogsIndexesLogsIndexArrayInput is an input type that accepts GetLogsIndexesLogsIndexArray and GetLogsIndexesLogsIndexArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexArrayInput` via:
//
//	GetLogsIndexesLogsIndexArray{ GetLogsIndexesLogsIndexArgs{...} }
type GetLogsIndexesLogsIndexArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexArrayOutput() GetLogsIndexesLogsIndexArrayOutput
	ToGetLogsIndexesLogsIndexArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexArrayOutput
}

type GetLogsIndexesLogsIndexArray []GetLogsIndexesLogsIndexInput

func (GetLogsIndexesLogsIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexArray) ToGetLogsIndexesLogsIndexArrayOutput() GetLogsIndexesLogsIndexArrayOutput {
	return i.ToGetLogsIndexesLogsIndexArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexArray) ToGetLogsIndexesLogsIndexArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexArrayOutput)
}

type GetLogsIndexesLogsIndexOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexOutput) ToGetLogsIndexesLogsIndexOutput() GetLogsIndexesLogsIndexOutput {
	return o
}

func (o GetLogsIndexesLogsIndexOutput) ToGetLogsIndexesLogsIndexOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexOutput {
	return o
}

// The number of log events you can send in this index per day before you are rate-limited.
func (o GetLogsIndexesLogsIndexOutput) DailyLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) int { return v.DailyLimit }).(pulumi.IntOutput)
}

// Object containing options to override the default daily limit reset time.
func (o GetLogsIndexesLogsIndexOutput) DailyLimitResets() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) []GetLogsIndexesLogsIndexDailyLimitReset { return v.DailyLimitResets }).(GetLogsIndexesLogsIndexDailyLimitResetArrayOutput)
}

// The percentage threshold of the daily quota at which a Datadog warning event is generated.
func (o GetLogsIndexesLogsIndexOutput) DailyLimitWarningThresholdPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) float64 { return v.DailyLimitWarningThresholdPercentage }).(pulumi.Float64Output)
}

// List of exclusion filters.
func (o GetLogsIndexesLogsIndexOutput) ExclusionFilters() GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) []GetLogsIndexesLogsIndexExclusionFilter { return v.ExclusionFilters }).(GetLogsIndexesLogsIndexExclusionFilterArrayOutput)
}

// Logs filter
func (o GetLogsIndexesLogsIndexOutput) Filters() GetLogsIndexesLogsIndexFilterArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) []GetLogsIndexesLogsIndexFilter { return v.Filters }).(GetLogsIndexesLogsIndexFilterArrayOutput)
}

// The name of the index.
func (o GetLogsIndexesLogsIndexOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) string { return v.Name }).(pulumi.StringOutput)
}

// The number of days before logs are deleted from this index.
func (o GetLogsIndexesLogsIndexOutput) RetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) int { return v.RetentionDays }).(pulumi.IntOutput)
}

type GetLogsIndexesLogsIndexArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexArrayOutput) ToGetLogsIndexesLogsIndexArrayOutput() GetLogsIndexesLogsIndexArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexArrayOutput) ToGetLogsIndexesLogsIndexArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndex {
		return vs[0].([]GetLogsIndexesLogsIndex)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexOutput)
}

type GetLogsIndexesLogsIndexDailyLimitReset struct {
	// String in `HH:00` format representing the time of day the daily limit should be reset. The hours between 00 and 23 (inclusive).
	ResetTime string `pulumi:"resetTime"`
	// String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours between -12 and +14 (inclusive).
	ResetUtcOffset string `pulumi:"resetUtcOffset"`
}

// GetLogsIndexesLogsIndexDailyLimitResetInput is an input type that accepts GetLogsIndexesLogsIndexDailyLimitResetArgs and GetLogsIndexesLogsIndexDailyLimitResetOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexDailyLimitResetInput` via:
//
//	GetLogsIndexesLogsIndexDailyLimitResetArgs{...}
type GetLogsIndexesLogsIndexDailyLimitResetInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexDailyLimitResetOutput() GetLogsIndexesLogsIndexDailyLimitResetOutput
	ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(context.Context) GetLogsIndexesLogsIndexDailyLimitResetOutput
}

type GetLogsIndexesLogsIndexDailyLimitResetArgs struct {
	// String in `HH:00` format representing the time of day the daily limit should be reset. The hours between 00 and 23 (inclusive).
	ResetTime pulumi.StringInput `pulumi:"resetTime"`
	// String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours between -12 and +14 (inclusive).
	ResetUtcOffset pulumi.StringInput `pulumi:"resetUtcOffset"`
}

func (GetLogsIndexesLogsIndexDailyLimitResetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArgs) ToGetLogsIndexesLogsIndexDailyLimitResetOutput() GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return i.ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArgs) ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexDailyLimitResetOutput)
}

// GetLogsIndexesLogsIndexDailyLimitResetArrayInput is an input type that accepts GetLogsIndexesLogsIndexDailyLimitResetArray and GetLogsIndexesLogsIndexDailyLimitResetArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexDailyLimitResetArrayInput` via:
//
//	GetLogsIndexesLogsIndexDailyLimitResetArray{ GetLogsIndexesLogsIndexDailyLimitResetArgs{...} }
type GetLogsIndexesLogsIndexDailyLimitResetArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutput() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput
	ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexDailyLimitResetArrayOutput
}

type GetLogsIndexesLogsIndexDailyLimitResetArray []GetLogsIndexesLogsIndexDailyLimitResetInput

func (GetLogsIndexesLogsIndexDailyLimitResetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArray) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutput() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return i.ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArray) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexDailyLimitResetArrayOutput)
}

type GetLogsIndexesLogsIndexDailyLimitResetOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexDailyLimitResetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ToGetLogsIndexesLogsIndexDailyLimitResetOutput() GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return o
}

func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return o
}

// String in `HH:00` format representing the time of day the daily limit should be reset. The hours between 00 and 23 (inclusive).
func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ResetTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexDailyLimitReset) string { return v.ResetTime }).(pulumi.StringOutput)
}

// String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours between -12 and +14 (inclusive).
func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ResetUtcOffset() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexDailyLimitReset) string { return v.ResetUtcOffset }).(pulumi.StringOutput)
}

type GetLogsIndexesLogsIndexDailyLimitResetArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutput() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexDailyLimitReset {
		return vs[0].([]GetLogsIndexesLogsIndexDailyLimitReset)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexDailyLimitResetOutput)
}

type GetLogsIndexesLogsIndexExclusionFilter struct {
	Filters []GetLogsIndexesLogsIndexExclusionFilterFilter `pulumi:"filters"`
	// A boolean stating if the exclusion is active or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the exclusion filter.
	Name string `pulumi:"name"`
}

// GetLogsIndexesLogsIndexExclusionFilterInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterArgs and GetLogsIndexesLogsIndexExclusionFilterOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterArgs{...}
type GetLogsIndexesLogsIndexExclusionFilterInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterOutput() GetLogsIndexesLogsIndexExclusionFilterOutput
	ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterOutput
}

type GetLogsIndexesLogsIndexExclusionFilterArgs struct {
	Filters GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput `pulumi:"filters"`
	// A boolean stating if the exclusion is active or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the exclusion filter.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLogsIndexesLogsIndexExclusionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterOutput() GetLogsIndexesLogsIndexExclusionFilterOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterOutput)
}

// GetLogsIndexesLogsIndexExclusionFilterArrayInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterArray and GetLogsIndexesLogsIndexExclusionFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterArrayInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterArray{ GetLogsIndexesLogsIndexExclusionFilterArgs{...} }
type GetLogsIndexesLogsIndexExclusionFilterArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterArrayOutput
	ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterArrayOutput
}

type GetLogsIndexesLogsIndexExclusionFilterArray []GetLogsIndexesLogsIndexExclusionFilterInput

func (GetLogsIndexesLogsIndexExclusionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterArrayOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterOutput() GetLogsIndexesLogsIndexExclusionFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterOutput) Filters() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilter) []GetLogsIndexesLogsIndexExclusionFilterFilter {
		return v.Filters
	}).(GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput)
}

// A boolean stating if the exclusion is active or not.
func (o GetLogsIndexesLogsIndexExclusionFilterOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilter) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the exclusion filter.
func (o GetLogsIndexesLogsIndexExclusionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilter) string { return v.Name }).(pulumi.StringOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexExclusionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexExclusionFilter {
		return vs[0].([]GetLogsIndexesLogsIndexExclusionFilter)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexExclusionFilterOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterFilter struct {
	// Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.
	Query string `pulumi:"query"`
	// The fraction of logs excluded by the exclusion filter, when active.
	SampleRate float64 `pulumi:"sampleRate"`
}

// GetLogsIndexesLogsIndexExclusionFilterFilterInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterFilterArgs and GetLogsIndexesLogsIndexExclusionFilterFilterOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterFilterInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterFilterArgs{...}
type GetLogsIndexesLogsIndexExclusionFilterFilterInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterFilterOutput() GetLogsIndexesLogsIndexExclusionFilterFilterOutput
	ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterOutput
}

type GetLogsIndexesLogsIndexExclusionFilterFilterArgs struct {
	// Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.
	Query pulumi.StringInput `pulumi:"query"`
	// The fraction of logs excluded by the exclusion filter, when active.
	SampleRate pulumi.Float64Input `pulumi:"sampleRate"`
}

func (GetLogsIndexesLogsIndexExclusionFilterFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutput() GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterFilterOutput)
}

// GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterFilterArray and GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterFilterArray{ GetLogsIndexesLogsIndexExclusionFilterFilterArgs{...} }
type GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput
	ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput
}

type GetLogsIndexesLogsIndexExclusionFilterFilterArray []GetLogsIndexesLogsIndexExclusionFilterFilterInput

func (GetLogsIndexesLogsIndexExclusionFilterFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterFilterOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutput() GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return o
}

// Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.
func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilterFilter) string { return v.Query }).(pulumi.StringOutput)
}

// The fraction of logs excluded by the exclusion filter, when active.
func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) SampleRate() pulumi.Float64Output {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilterFilter) float64 { return v.SampleRate }).(pulumi.Float64Output)
}

type GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexExclusionFilterFilter {
		return vs[0].([]GetLogsIndexesLogsIndexExclusionFilterFilter)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexExclusionFilterFilterOutput)
}

type GetLogsIndexesLogsIndexFilter struct {
	// Logs filter criteria. Only logs matching this filter criteria are considered for this index.
	Query string `pulumi:"query"`
}

// GetLogsIndexesLogsIndexFilterInput is an input type that accepts GetLogsIndexesLogsIndexFilterArgs and GetLogsIndexesLogsIndexFilterOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexFilterInput` via:
//
//	GetLogsIndexesLogsIndexFilterArgs{...}
type GetLogsIndexesLogsIndexFilterInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexFilterOutput() GetLogsIndexesLogsIndexFilterOutput
	ToGetLogsIndexesLogsIndexFilterOutputWithContext(context.Context) GetLogsIndexesLogsIndexFilterOutput
}

type GetLogsIndexesLogsIndexFilterArgs struct {
	// Logs filter criteria. Only logs matching this filter criteria are considered for this index.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetLogsIndexesLogsIndexFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexFilterArgs) ToGetLogsIndexesLogsIndexFilterOutput() GetLogsIndexesLogsIndexFilterOutput {
	return i.ToGetLogsIndexesLogsIndexFilterOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexFilterArgs) ToGetLogsIndexesLogsIndexFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexFilterOutput)
}

// GetLogsIndexesLogsIndexFilterArrayInput is an input type that accepts GetLogsIndexesLogsIndexFilterArray and GetLogsIndexesLogsIndexFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexFilterArrayInput` via:
//
//	GetLogsIndexesLogsIndexFilterArray{ GetLogsIndexesLogsIndexFilterArgs{...} }
type GetLogsIndexesLogsIndexFilterArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexFilterArrayOutput() GetLogsIndexesLogsIndexFilterArrayOutput
	ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexFilterArrayOutput
}

type GetLogsIndexesLogsIndexFilterArray []GetLogsIndexesLogsIndexFilterInput

func (GetLogsIndexesLogsIndexFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexFilterArray) ToGetLogsIndexesLogsIndexFilterArrayOutput() GetLogsIndexesLogsIndexFilterArrayOutput {
	return i.ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexFilterArray) ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexFilterArrayOutput)
}

type GetLogsIndexesLogsIndexFilterOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexFilterOutput) ToGetLogsIndexesLogsIndexFilterOutput() GetLogsIndexesLogsIndexFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexFilterOutput) ToGetLogsIndexesLogsIndexFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterOutput {
	return o
}

// Logs filter criteria. Only logs matching this filter criteria are considered for this index.
func (o GetLogsIndexesLogsIndexFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetLogsIndexesLogsIndexFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexFilterArrayOutput) ToGetLogsIndexesLogsIndexFilterArrayOutput() GetLogsIndexesLogsIndexFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexFilterArrayOutput) ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexFilterArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexFilter {
		return vs[0].([]GetLogsIndexesLogsIndexFilter)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexFilterOutput)
}

type GetLogsPipelinesLogsPipeline struct {
	// Pipelines filter
	Filters []GetLogsPipelinesLogsPipelineFilter `pulumi:"filters"`
	// ID of the pipeline
	Id string `pulumi:"id"`
	// Whether or not the pipeline is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether or not the pipeline can be edited.
	IsReadOnly bool `pulumi:"isReadOnly"`
	// The name of the pipeline.
	Name string `pulumi:"name"`
	// Whether or not the pipeline can be edited.
	Type string `pulumi:"type"`
}

// GetLogsPipelinesLogsPipelineInput is an input type that accepts GetLogsPipelinesLogsPipelineArgs and GetLogsPipelinesLogsPipelineOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineInput` via:
//
//	GetLogsPipelinesLogsPipelineArgs{...}
type GetLogsPipelinesLogsPipelineInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineOutput() GetLogsPipelinesLogsPipelineOutput
	ToGetLogsPipelinesLogsPipelineOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineOutput
}

type GetLogsPipelinesLogsPipelineArgs struct {
	// Pipelines filter
	Filters GetLogsPipelinesLogsPipelineFilterArrayInput `pulumi:"filters"`
	// ID of the pipeline
	Id pulumi.StringInput `pulumi:"id"`
	// Whether or not the pipeline is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether or not the pipeline can be edited.
	IsReadOnly pulumi.BoolInput `pulumi:"isReadOnly"`
	// The name of the pipeline.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether or not the pipeline can be edited.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLogsPipelinesLogsPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineArgs) ToGetLogsPipelinesLogsPipelineOutput() GetLogsPipelinesLogsPipelineOutput {
	return i.ToGetLogsPipelinesLogsPipelineOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineArgs) ToGetLogsPipelinesLogsPipelineOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineOutput)
}

// GetLogsPipelinesLogsPipelineArrayInput is an input type that accepts GetLogsPipelinesLogsPipelineArray and GetLogsPipelinesLogsPipelineArrayOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineArrayInput` via:
//
//	GetLogsPipelinesLogsPipelineArray{ GetLogsPipelinesLogsPipelineArgs{...} }
type GetLogsPipelinesLogsPipelineArrayInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineArrayOutput() GetLogsPipelinesLogsPipelineArrayOutput
	ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineArrayOutput
}

type GetLogsPipelinesLogsPipelineArray []GetLogsPipelinesLogsPipelineInput

func (GetLogsPipelinesLogsPipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineArray) ToGetLogsPipelinesLogsPipelineArrayOutput() GetLogsPipelinesLogsPipelineArrayOutput {
	return i.ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineArray) ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineArrayOutput)
}

type GetLogsPipelinesLogsPipelineOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineOutput) ToGetLogsPipelinesLogsPipelineOutput() GetLogsPipelinesLogsPipelineOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineOutput) ToGetLogsPipelinesLogsPipelineOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineOutput {
	return o
}

// Pipelines filter
func (o GetLogsPipelinesLogsPipelineOutput) Filters() GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) []GetLogsPipelinesLogsPipelineFilter { return v.Filters }).(GetLogsPipelinesLogsPipelineFilterArrayOutput)
}

// ID of the pipeline
func (o GetLogsPipelinesLogsPipelineOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) string { return v.Id }).(pulumi.StringOutput)
}

// Whether or not the pipeline is enabled.
func (o GetLogsPipelinesLogsPipelineOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether or not the pipeline can be edited.
func (o GetLogsPipelinesLogsPipelineOutput) IsReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) bool { return v.IsReadOnly }).(pulumi.BoolOutput)
}

// The name of the pipeline.
func (o GetLogsPipelinesLogsPipelineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) string { return v.Name }).(pulumi.StringOutput)
}

// Whether or not the pipeline can be edited.
func (o GetLogsPipelinesLogsPipelineOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) string { return v.Type }).(pulumi.StringOutput)
}

type GetLogsPipelinesLogsPipelineArrayOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineArrayOutput) ToGetLogsPipelinesLogsPipelineArrayOutput() GetLogsPipelinesLogsPipelineArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineArrayOutput) ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineArrayOutput) Index(i pulumi.IntInput) GetLogsPipelinesLogsPipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsPipelinesLogsPipeline {
		return vs[0].([]GetLogsPipelinesLogsPipeline)[vs[1].(int)]
	}).(GetLogsPipelinesLogsPipelineOutput)
}

type GetLogsPipelinesLogsPipelineFilter struct {
	// Pipeline filter criteria.
	Query string `pulumi:"query"`
}

// GetLogsPipelinesLogsPipelineFilterInput is an input type that accepts GetLogsPipelinesLogsPipelineFilterArgs and GetLogsPipelinesLogsPipelineFilterOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineFilterInput` via:
//
//	GetLogsPipelinesLogsPipelineFilterArgs{...}
type GetLogsPipelinesLogsPipelineFilterInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineFilterOutput() GetLogsPipelinesLogsPipelineFilterOutput
	ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineFilterOutput
}

type GetLogsPipelinesLogsPipelineFilterArgs struct {
	// Pipeline filter criteria.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetLogsPipelinesLogsPipelineFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineFilterArgs) ToGetLogsPipelinesLogsPipelineFilterOutput() GetLogsPipelinesLogsPipelineFilterOutput {
	return i.ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineFilterArgs) ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineFilterOutput)
}

// GetLogsPipelinesLogsPipelineFilterArrayInput is an input type that accepts GetLogsPipelinesLogsPipelineFilterArray and GetLogsPipelinesLogsPipelineFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineFilterArrayInput` via:
//
//	GetLogsPipelinesLogsPipelineFilterArray{ GetLogsPipelinesLogsPipelineFilterArgs{...} }
type GetLogsPipelinesLogsPipelineFilterArrayInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineFilterArrayOutput() GetLogsPipelinesLogsPipelineFilterArrayOutput
	ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineFilterArrayOutput
}

type GetLogsPipelinesLogsPipelineFilterArray []GetLogsPipelinesLogsPipelineFilterInput

func (GetLogsPipelinesLogsPipelineFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineFilterArray) ToGetLogsPipelinesLogsPipelineFilterArrayOutput() GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return i.ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineFilterArray) ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineFilterArrayOutput)
}

type GetLogsPipelinesLogsPipelineFilterOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineFilterOutput) ToGetLogsPipelinesLogsPipelineFilterOutput() GetLogsPipelinesLogsPipelineFilterOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineFilterOutput) ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterOutput {
	return o
}

// Pipeline filter criteria.
func (o GetLogsPipelinesLogsPipelineFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipelineFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetLogsPipelinesLogsPipelineFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineFilterArrayOutput) ToGetLogsPipelinesLogsPipelineFilterArrayOutput() GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineFilterArrayOutput) ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineFilterArrayOutput) Index(i pulumi.IntInput) GetLogsPipelinesLogsPipelineFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsPipelinesLogsPipelineFilter {
		return vs[0].([]GetLogsPipelinesLogsPipelineFilter)[vs[1].(int)]
	}).(GetLogsPipelinesLogsPipelineFilterOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicy struct {
	// ID of the monitor config policy
	Id string `pulumi:"id"`
	// The monitor config policy type
	PolicyType string `pulumi:"policyType"`
	// Config for a tag policy. Only set if `policyType` is `tag`.
	TagPolicy GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy `pulumi:"tagPolicy"`
}

// GetMonitorConfigPoliciesMonitorConfigPolicyInput is an input type that accepts GetMonitorConfigPoliciesMonitorConfigPolicyArgs and GetMonitorConfigPoliciesMonitorConfigPolicyOutput values.
// You can construct a concrete instance of `GetMonitorConfigPoliciesMonitorConfigPolicyInput` via:
//
//	GetMonitorConfigPoliciesMonitorConfigPolicyArgs{...}
type GetMonitorConfigPoliciesMonitorConfigPolicyInput interface {
	pulumi.Input

	ToGetMonitorConfigPoliciesMonitorConfigPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyOutput
	ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyOutput
}

type GetMonitorConfigPoliciesMonitorConfigPolicyArgs struct {
	// ID of the monitor config policy
	Id pulumi.StringInput `pulumi:"id"`
	// The monitor config policy type
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Config for a tag policy. Only set if `policyType` is `tag`.
	TagPolicy GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput `pulumi:"tagPolicy"`
}

func (GetMonitorConfigPoliciesMonitorConfigPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return i.ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(context.Background())
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigPoliciesMonitorConfigPolicyOutput)
}

// GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput is an input type that accepts GetMonitorConfigPoliciesMonitorConfigPolicyArray and GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput` via:
//
//	GetMonitorConfigPoliciesMonitorConfigPolicyArray{ GetMonitorConfigPoliciesMonitorConfigPolicyArgs{...} }
type GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput() GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput
	ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput
}

type GetMonitorConfigPoliciesMonitorConfigPolicyArray []GetMonitorConfigPoliciesMonitorConfigPolicyInput

func (GetMonitorConfigPoliciesMonitorConfigPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArray) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput() GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return i.ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArray) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigPoliciesMonitorConfigPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return o
}

// ID of the monitor config policy
func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The monitor config policy type
func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Config for a tag policy. Only set if `policyType` is `tag`.
func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) TagPolicy() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicy) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy {
		return v.TagPolicy
	}).(GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput() GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigPoliciesMonitorConfigPolicy {
		return vs[0].([]GetMonitorConfigPoliciesMonitorConfigPolicy)[vs[1].(int)]
	}).(GetMonitorConfigPoliciesMonitorConfigPolicyOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy struct {
	// The key of the tag
	TagKey string `pulumi:"tagKey"`
	// If a tag key is required for monitor creation
	TagKeyRequired bool `pulumi:"tagKeyRequired"`
	// Valid values for the tag
	ValidTagValues []string `pulumi:"validTagValues"`
}

// GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput is an input type that accepts GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs and GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput values.
// You can construct a concrete instance of `GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput` via:
//
//	GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs{...}
type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput interface {
	pulumi.Input

	ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput
	ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput
}

type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs struct {
	// The key of the tag
	TagKey pulumi.StringInput `pulumi:"tagKey"`
	// If a tag key is required for monitor creation
	TagKeyRequired pulumi.BoolInput `pulumi:"tagKeyRequired"`
	// Valid values for the tag
	ValidTagValues pulumi.StringArrayInput `pulumi:"validTagValues"`
}

func (GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy)(nil)).Elem()
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return i.ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(context.Background())
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy)(nil)).Elem()
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return o
}

// The key of the tag
func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy) string { return v.TagKey }).(pulumi.StringOutput)
}

// If a tag key is required for monitor creation
func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) TagKeyRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy) bool { return v.TagKeyRequired }).(pulumi.BoolOutput)
}

// Valid values for the tag
func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ValidTagValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy) []string { return v.ValidTagValues }).(pulumi.StringArrayOutput)
}

type GetMonitorMonitorThreshold struct {
	Critical         string `pulumi:"critical"`
	CriticalRecovery string `pulumi:"criticalRecovery"`
	Ok               string `pulumi:"ok"`
	Unknown          string `pulumi:"unknown"`
	Warning          string `pulumi:"warning"`
	WarningRecovery  string `pulumi:"warningRecovery"`
}

// GetMonitorMonitorThresholdInput is an input type that accepts GetMonitorMonitorThresholdArgs and GetMonitorMonitorThresholdOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdInput` via:
//
//	GetMonitorMonitorThresholdArgs{...}
type GetMonitorMonitorThresholdInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdOutput() GetMonitorMonitorThresholdOutput
	ToGetMonitorMonitorThresholdOutputWithContext(context.Context) GetMonitorMonitorThresholdOutput
}

type GetMonitorMonitorThresholdArgs struct {
	Critical         pulumi.StringInput `pulumi:"critical"`
	CriticalRecovery pulumi.StringInput `pulumi:"criticalRecovery"`
	Ok               pulumi.StringInput `pulumi:"ok"`
	Unknown          pulumi.StringInput `pulumi:"unknown"`
	Warning          pulumi.StringInput `pulumi:"warning"`
	WarningRecovery  pulumi.StringInput `pulumi:"warningRecovery"`
}

func (GetMonitorMonitorThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThreshold)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdArgs) ToGetMonitorMonitorThresholdOutput() GetMonitorMonitorThresholdOutput {
	return i.ToGetMonitorMonitorThresholdOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdArgs) ToGetMonitorMonitorThresholdOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdOutput)
}

// GetMonitorMonitorThresholdArrayInput is an input type that accepts GetMonitorMonitorThresholdArray and GetMonitorMonitorThresholdArrayOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdArrayInput` via:
//
//	GetMonitorMonitorThresholdArray{ GetMonitorMonitorThresholdArgs{...} }
type GetMonitorMonitorThresholdArrayInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdArrayOutput() GetMonitorMonitorThresholdArrayOutput
	ToGetMonitorMonitorThresholdArrayOutputWithContext(context.Context) GetMonitorMonitorThresholdArrayOutput
}

type GetMonitorMonitorThresholdArray []GetMonitorMonitorThresholdInput

func (GetMonitorMonitorThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThreshold)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdArray) ToGetMonitorMonitorThresholdArrayOutput() GetMonitorMonitorThresholdArrayOutput {
	return i.ToGetMonitorMonitorThresholdArrayOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdArray) ToGetMonitorMonitorThresholdArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdArrayOutput)
}

type GetMonitorMonitorThresholdOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThreshold)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdOutput) ToGetMonitorMonitorThresholdOutput() GetMonitorMonitorThresholdOutput {
	return o
}

func (o GetMonitorMonitorThresholdOutput) ToGetMonitorMonitorThresholdOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdOutput {
	return o
}

func (o GetMonitorMonitorThresholdOutput) Critical() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Critical }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) CriticalRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.CriticalRecovery }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) Ok() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Ok }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) Unknown() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Unknown }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) Warning() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Warning }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) WarningRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.WarningRecovery }).(pulumi.StringOutput)
}

type GetMonitorMonitorThresholdArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThreshold)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdArrayOutput) ToGetMonitorMonitorThresholdArrayOutput() GetMonitorMonitorThresholdArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdArrayOutput) ToGetMonitorMonitorThresholdArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdArrayOutput) Index(i pulumi.IntInput) GetMonitorMonitorThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorMonitorThreshold {
		return vs[0].([]GetMonitorMonitorThreshold)[vs[1].(int)]
	}).(GetMonitorMonitorThresholdOutput)
}

type GetMonitorMonitorThresholdWindow struct {
	RecoveryWindow string `pulumi:"recoveryWindow"`
	TriggerWindow  string `pulumi:"triggerWindow"`
}

// GetMonitorMonitorThresholdWindowInput is an input type that accepts GetMonitorMonitorThresholdWindowArgs and GetMonitorMonitorThresholdWindowOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdWindowInput` via:
//
//	GetMonitorMonitorThresholdWindowArgs{...}
type GetMonitorMonitorThresholdWindowInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdWindowOutput() GetMonitorMonitorThresholdWindowOutput
	ToGetMonitorMonitorThresholdWindowOutputWithContext(context.Context) GetMonitorMonitorThresholdWindowOutput
}

type GetMonitorMonitorThresholdWindowArgs struct {
	RecoveryWindow pulumi.StringInput `pulumi:"recoveryWindow"`
	TriggerWindow  pulumi.StringInput `pulumi:"triggerWindow"`
}

func (GetMonitorMonitorThresholdWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdWindowArgs) ToGetMonitorMonitorThresholdWindowOutput() GetMonitorMonitorThresholdWindowOutput {
	return i.ToGetMonitorMonitorThresholdWindowOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdWindowArgs) ToGetMonitorMonitorThresholdWindowOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdWindowOutput)
}

// GetMonitorMonitorThresholdWindowArrayInput is an input type that accepts GetMonitorMonitorThresholdWindowArray and GetMonitorMonitorThresholdWindowArrayOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdWindowArrayInput` via:
//
//	GetMonitorMonitorThresholdWindowArray{ GetMonitorMonitorThresholdWindowArgs{...} }
type GetMonitorMonitorThresholdWindowArrayInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdWindowArrayOutput() GetMonitorMonitorThresholdWindowArrayOutput
	ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(context.Context) GetMonitorMonitorThresholdWindowArrayOutput
}

type GetMonitorMonitorThresholdWindowArray []GetMonitorMonitorThresholdWindowInput

func (GetMonitorMonitorThresholdWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdWindowArray) ToGetMonitorMonitorThresholdWindowArrayOutput() GetMonitorMonitorThresholdWindowArrayOutput {
	return i.ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdWindowArray) ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdWindowArrayOutput)
}

type GetMonitorMonitorThresholdWindowOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdWindowOutput) ToGetMonitorMonitorThresholdWindowOutput() GetMonitorMonitorThresholdWindowOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowOutput) ToGetMonitorMonitorThresholdWindowOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowOutput) RecoveryWindow() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThresholdWindow) string { return v.RecoveryWindow }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdWindowOutput) TriggerWindow() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThresholdWindow) string { return v.TriggerWindow }).(pulumi.StringOutput)
}

type GetMonitorMonitorThresholdWindowArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdWindowArrayOutput) ToGetMonitorMonitorThresholdWindowArrayOutput() GetMonitorMonitorThresholdWindowArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowArrayOutput) ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowArrayOutput) Index(i pulumi.IntInput) GetMonitorMonitorThresholdWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorMonitorThresholdWindow {
		return vs[0].([]GetMonitorMonitorThresholdWindow)[vs[1].(int)]
	}).(GetMonitorMonitorThresholdWindowOutput)
}

type GetMonitorSchedulingOption struct {
	// Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
	CustomSchedules []GetMonitorSchedulingOptionCustomSchedule `pulumi:"customSchedules"`
	// Configuration options for the evaluation window. If `hourStarts` is set, no other fields may be set. Otherwise, `dayStarts` and `monthStarts` must be set together.
	EvaluationWindows []GetMonitorSchedulingOptionEvaluationWindow `pulumi:"evaluationWindows"`
}

// GetMonitorSchedulingOptionInput is an input type that accepts GetMonitorSchedulingOptionArgs and GetMonitorSchedulingOptionOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionInput` via:
//
//	GetMonitorSchedulingOptionArgs{...}
type GetMonitorSchedulingOptionInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionOutput() GetMonitorSchedulingOptionOutput
	ToGetMonitorSchedulingOptionOutputWithContext(context.Context) GetMonitorSchedulingOptionOutput
}

type GetMonitorSchedulingOptionArgs struct {
	// Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
	CustomSchedules GetMonitorSchedulingOptionCustomScheduleArrayInput `pulumi:"customSchedules"`
	// Configuration options for the evaluation window. If `hourStarts` is set, no other fields may be set. Otherwise, `dayStarts` and `monthStarts` must be set together.
	EvaluationWindows GetMonitorSchedulingOptionEvaluationWindowArrayInput `pulumi:"evaluationWindows"`
}

func (GetMonitorSchedulingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOption)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionArgs) ToGetMonitorSchedulingOptionOutput() GetMonitorSchedulingOptionOutput {
	return i.ToGetMonitorSchedulingOptionOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionArgs) ToGetMonitorSchedulingOptionOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionOutput)
}

// GetMonitorSchedulingOptionArrayInput is an input type that accepts GetMonitorSchedulingOptionArray and GetMonitorSchedulingOptionArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionArrayInput` via:
//
//	GetMonitorSchedulingOptionArray{ GetMonitorSchedulingOptionArgs{...} }
type GetMonitorSchedulingOptionArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionArrayOutput() GetMonitorSchedulingOptionArrayOutput
	ToGetMonitorSchedulingOptionArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionArrayOutput
}

type GetMonitorSchedulingOptionArray []GetMonitorSchedulingOptionInput

func (GetMonitorSchedulingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOption)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionArray) ToGetMonitorSchedulingOptionArrayOutput() GetMonitorSchedulingOptionArrayOutput {
	return i.ToGetMonitorSchedulingOptionArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionArray) ToGetMonitorSchedulingOptionArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionArrayOutput)
}

type GetMonitorSchedulingOptionOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOption)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionOutput) ToGetMonitorSchedulingOptionOutput() GetMonitorSchedulingOptionOutput {
	return o
}

func (o GetMonitorSchedulingOptionOutput) ToGetMonitorSchedulingOptionOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionOutput {
	return o
}

// Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
func (o GetMonitorSchedulingOptionOutput) CustomSchedules() GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOption) []GetMonitorSchedulingOptionCustomSchedule {
		return v.CustomSchedules
	}).(GetMonitorSchedulingOptionCustomScheduleArrayOutput)
}

// Configuration options for the evaluation window. If `hourStarts` is set, no other fields may be set. Otherwise, `dayStarts` and `monthStarts` must be set together.
func (o GetMonitorSchedulingOptionOutput) EvaluationWindows() GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOption) []GetMonitorSchedulingOptionEvaluationWindow {
		return v.EvaluationWindows
	}).(GetMonitorSchedulingOptionEvaluationWindowArrayOutput)
}

type GetMonitorSchedulingOptionArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOption)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionArrayOutput) ToGetMonitorSchedulingOptionArrayOutput() GetMonitorSchedulingOptionArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionArrayOutput) ToGetMonitorSchedulingOptionArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOption {
		return vs[0].([]GetMonitorSchedulingOption)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionOutput)
}

type GetMonitorSchedulingOptionCustomSchedule struct {
	// A list of recurrence definitions. Length must be 1.
	Recurrences []GetMonitorSchedulingOptionCustomScheduleRecurrence `pulumi:"recurrences"`
}

// GetMonitorSchedulingOptionCustomScheduleInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleArgs and GetMonitorSchedulingOptionCustomScheduleOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleArgs{...}
type GetMonitorSchedulingOptionCustomScheduleInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleOutput() GetMonitorSchedulingOptionCustomScheduleOutput
	ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleOutput
}

type GetMonitorSchedulingOptionCustomScheduleArgs struct {
	// A list of recurrence definitions. Length must be 1.
	Recurrences GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput `pulumi:"recurrences"`
}

func (GetMonitorSchedulingOptionCustomScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleArgs) ToGetMonitorSchedulingOptionCustomScheduleOutput() GetMonitorSchedulingOptionCustomScheduleOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleArgs) ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleOutput)
}

// GetMonitorSchedulingOptionCustomScheduleArrayInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleArray and GetMonitorSchedulingOptionCustomScheduleArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleArrayInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleArray{ GetMonitorSchedulingOptionCustomScheduleArgs{...} }
type GetMonitorSchedulingOptionCustomScheduleArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleArrayOutput() GetMonitorSchedulingOptionCustomScheduleArrayOutput
	ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleArrayOutput
}

type GetMonitorSchedulingOptionCustomScheduleArray []GetMonitorSchedulingOptionCustomScheduleInput

func (GetMonitorSchedulingOptionCustomScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleArray) ToGetMonitorSchedulingOptionCustomScheduleArrayOutput() GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleArray) ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleArrayOutput)
}

type GetMonitorSchedulingOptionCustomScheduleOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleOutput) ToGetMonitorSchedulingOptionCustomScheduleOutput() GetMonitorSchedulingOptionCustomScheduleOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleOutput) ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleOutput {
	return o
}

// A list of recurrence definitions. Length must be 1.
func (o GetMonitorSchedulingOptionCustomScheduleOutput) Recurrences() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomSchedule) []GetMonitorSchedulingOptionCustomScheduleRecurrence {
		return v.Recurrences
	}).(GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput)
}

type GetMonitorSchedulingOptionCustomScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleArrayOutput() GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionCustomScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOptionCustomSchedule {
		return vs[0].([]GetMonitorSchedulingOptionCustomSchedule)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionCustomScheduleOutput)
}

type GetMonitorSchedulingOptionCustomScheduleRecurrence struct {
	// Must be a valid rrule. See api docs for supported fields
	Rrule string `pulumi:"rrule"`
	// Time to start recurrence cycle. Similar to DTSTART. Expected format 'YYYY-MM-DDThh:mm:ss'
	Start string `pulumi:"start"`
	// 'tz database' format. ex: 'America/New_York' or UTC
	Timezone string `pulumi:"timezone"`
}

// GetMonitorSchedulingOptionCustomScheduleRecurrenceInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs and GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleRecurrenceInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs{...}
type GetMonitorSchedulingOptionCustomScheduleRecurrenceInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput
	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs struct {
	// Must be a valid rrule. See api docs for supported fields
	Rrule pulumi.StringInput `pulumi:"rrule"`
	// Time to start recurrence cycle. Similar to DTSTART. Expected format 'YYYY-MM-DDThh:mm:ss'
	Start pulumi.StringInput `pulumi:"start"`
	// 'tz database' format. ex: 'America/New_York' or UTC
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput)
}

// GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleRecurrenceArray and GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleRecurrenceArray{ GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs{...} }
type GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput
	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceArray []GetMonitorSchedulingOptionCustomScheduleRecurrenceInput

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArray) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArray) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput)
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return o
}

// Must be a valid rrule. See api docs for supported fields
func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) Rrule() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomScheduleRecurrence) string { return v.Rrule }).(pulumi.StringOutput)
}

// Time to start recurrence cycle. Similar to DTSTART. Expected format 'YYYY-MM-DDThh:mm:ss'
func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomScheduleRecurrence) string { return v.Start }).(pulumi.StringOutput)
}

// 'tz database' format. ex: 'America/New_York' or UTC
func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomScheduleRecurrence) string { return v.Timezone }).(pulumi.StringOutput)
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOptionCustomScheduleRecurrence {
		return vs[0].([]GetMonitorSchedulingOptionCustomScheduleRecurrence)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput)
}

type GetMonitorSchedulingOptionEvaluationWindow struct {
	// The time of the day at which a one day cumulative evaluation window starts. Must be defined in UTC time in `HH:mm` format.
	DayStarts string `pulumi:"dayStarts"`
	// The minute of the hour at which a one hour cumulative evaluation window starts. Must be between 0 and 59.
	HourStarts int `pulumi:"hourStarts"`
	// The day of the month at which a one month cumulative evaluation window starts. Must be a value of 1.
	MonthStarts int `pulumi:"monthStarts"`
}

// GetMonitorSchedulingOptionEvaluationWindowInput is an input type that accepts GetMonitorSchedulingOptionEvaluationWindowArgs and GetMonitorSchedulingOptionEvaluationWindowOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionEvaluationWindowInput` via:
//
//	GetMonitorSchedulingOptionEvaluationWindowArgs{...}
type GetMonitorSchedulingOptionEvaluationWindowInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionEvaluationWindowOutput() GetMonitorSchedulingOptionEvaluationWindowOutput
	ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(context.Context) GetMonitorSchedulingOptionEvaluationWindowOutput
}

type GetMonitorSchedulingOptionEvaluationWindowArgs struct {
	// The time of the day at which a one day cumulative evaluation window starts. Must be defined in UTC time in `HH:mm` format.
	DayStarts pulumi.StringInput `pulumi:"dayStarts"`
	// The minute of the hour at which a one hour cumulative evaluation window starts. Must be between 0 and 59.
	HourStarts pulumi.IntInput `pulumi:"hourStarts"`
	// The day of the month at which a one month cumulative evaluation window starts. Must be a value of 1.
	MonthStarts pulumi.IntInput `pulumi:"monthStarts"`
}

func (GetMonitorSchedulingOptionEvaluationWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionEvaluationWindowArgs) ToGetMonitorSchedulingOptionEvaluationWindowOutput() GetMonitorSchedulingOptionEvaluationWindowOutput {
	return i.ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionEvaluationWindowArgs) ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionEvaluationWindowOutput)
}

// GetMonitorSchedulingOptionEvaluationWindowArrayInput is an input type that accepts GetMonitorSchedulingOptionEvaluationWindowArray and GetMonitorSchedulingOptionEvaluationWindowArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionEvaluationWindowArrayInput` via:
//
//	GetMonitorSchedulingOptionEvaluationWindowArray{ GetMonitorSchedulingOptionEvaluationWindowArgs{...} }
type GetMonitorSchedulingOptionEvaluationWindowArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionEvaluationWindowArrayOutput() GetMonitorSchedulingOptionEvaluationWindowArrayOutput
	ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionEvaluationWindowArrayOutput
}

type GetMonitorSchedulingOptionEvaluationWindowArray []GetMonitorSchedulingOptionEvaluationWindowInput

func (GetMonitorSchedulingOptionEvaluationWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionEvaluationWindowArray) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutput() GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return i.ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionEvaluationWindowArray) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionEvaluationWindowArrayOutput)
}

type GetMonitorSchedulingOptionEvaluationWindowOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionEvaluationWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionEvaluationWindowOutput) ToGetMonitorSchedulingOptionEvaluationWindowOutput() GetMonitorSchedulingOptionEvaluationWindowOutput {
	return o
}

func (o GetMonitorSchedulingOptionEvaluationWindowOutput) ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowOutput {
	return o
}

// The time of the day at which a one day cumulative evaluation window starts. Must be defined in UTC time in `HH:mm` format.
func (o GetMonitorSchedulingOptionEvaluationWindowOutput) DayStarts() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionEvaluationWindow) string { return v.DayStarts }).(pulumi.StringOutput)
}

// The minute of the hour at which a one hour cumulative evaluation window starts. Must be between 0 and 59.
func (o GetMonitorSchedulingOptionEvaluationWindowOutput) HourStarts() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionEvaluationWindow) int { return v.HourStarts }).(pulumi.IntOutput)
}

// The day of the month at which a one month cumulative evaluation window starts. Must be a value of 1.
func (o GetMonitorSchedulingOptionEvaluationWindowOutput) MonthStarts() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionEvaluationWindow) int { return v.MonthStarts }).(pulumi.IntOutput)
}

type GetMonitorSchedulingOptionEvaluationWindowArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionEvaluationWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionEvaluationWindowArrayOutput) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutput() GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionEvaluationWindowArrayOutput) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionEvaluationWindowArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionEvaluationWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOptionEvaluationWindow {
		return vs[0].([]GetMonitorSchedulingOptionEvaluationWindow)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionEvaluationWindowOutput)
}

type GetMonitorsMonitor struct {
	// ID of the monitor
	Id int `pulumi:"id"`
	// Name of the monitor
	Name string `pulumi:"name"`
	// Type of the monitor.
	Type string `pulumi:"type"`
}

// GetMonitorsMonitorInput is an input type that accepts GetMonitorsMonitorArgs and GetMonitorsMonitorOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorInput` via:
//
//	GetMonitorsMonitorArgs{...}
type GetMonitorsMonitorInput interface {
	pulumi.Input

	ToGetMonitorsMonitorOutput() GetMonitorsMonitorOutput
	ToGetMonitorsMonitorOutputWithContext(context.Context) GetMonitorsMonitorOutput
}

type GetMonitorsMonitorArgs struct {
	// ID of the monitor
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the monitor
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the monitor.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMonitorsMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitor)(nil)).Elem()
}

func (i GetMonitorsMonitorArgs) ToGetMonitorsMonitorOutput() GetMonitorsMonitorOutput {
	return i.ToGetMonitorsMonitorOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorArgs) ToGetMonitorsMonitorOutputWithContext(ctx context.Context) GetMonitorsMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorOutput)
}

// GetMonitorsMonitorArrayInput is an input type that accepts GetMonitorsMonitorArray and GetMonitorsMonitorArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorArrayInput` via:
//
//	GetMonitorsMonitorArray{ GetMonitorsMonitorArgs{...} }
type GetMonitorsMonitorArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorArrayOutput() GetMonitorsMonitorArrayOutput
	ToGetMonitorsMonitorArrayOutputWithContext(context.Context) GetMonitorsMonitorArrayOutput
}

type GetMonitorsMonitorArray []GetMonitorsMonitorInput

func (GetMonitorsMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitor)(nil)).Elem()
}

func (i GetMonitorsMonitorArray) ToGetMonitorsMonitorArrayOutput() GetMonitorsMonitorArrayOutput {
	return i.ToGetMonitorsMonitorArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorArray) ToGetMonitorsMonitorArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorArrayOutput)
}

type GetMonitorsMonitorOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitor)(nil)).Elem()
}

func (o GetMonitorsMonitorOutput) ToGetMonitorsMonitorOutput() GetMonitorsMonitorOutput {
	return o
}

func (o GetMonitorsMonitorOutput) ToGetMonitorsMonitorOutputWithContext(ctx context.Context) GetMonitorsMonitorOutput {
	return o
}

// ID of the monitor
func (o GetMonitorsMonitorOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitor) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the monitor
func (o GetMonitorsMonitorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitor) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the monitor.
func (o GetMonitorsMonitorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitor) string { return v.Type }).(pulumi.StringOutput)
}

type GetMonitorsMonitorArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitor)(nil)).Elem()
}

func (o GetMonitorsMonitorArrayOutput) ToGetMonitorsMonitorArrayOutput() GetMonitorsMonitorArrayOutput {
	return o
}

func (o GetMonitorsMonitorArrayOutput) ToGetMonitorsMonitorArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorArrayOutput {
	return o
}

func (o GetMonitorsMonitorArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitor {
		return vs[0].([]GetMonitorsMonitor)[vs[1].(int)]
	}).(GetMonitorsMonitorOutput)
}

type GetRoleUsersRoleUser struct {
	RoleId string `pulumi:"roleId"`
	UserId string `pulumi:"userId"`
}

// GetRoleUsersRoleUserInput is an input type that accepts GetRoleUsersRoleUserArgs and GetRoleUsersRoleUserOutput values.
// You can construct a concrete instance of `GetRoleUsersRoleUserInput` via:
//
//	GetRoleUsersRoleUserArgs{...}
type GetRoleUsersRoleUserInput interface {
	pulumi.Input

	ToGetRoleUsersRoleUserOutput() GetRoleUsersRoleUserOutput
	ToGetRoleUsersRoleUserOutputWithContext(context.Context) GetRoleUsersRoleUserOutput
}

type GetRoleUsersRoleUserArgs struct {
	RoleId pulumi.StringInput `pulumi:"roleId"`
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetRoleUsersRoleUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleUsersRoleUser)(nil)).Elem()
}

func (i GetRoleUsersRoleUserArgs) ToGetRoleUsersRoleUserOutput() GetRoleUsersRoleUserOutput {
	return i.ToGetRoleUsersRoleUserOutputWithContext(context.Background())
}

func (i GetRoleUsersRoleUserArgs) ToGetRoleUsersRoleUserOutputWithContext(ctx context.Context) GetRoleUsersRoleUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleUsersRoleUserOutput)
}

// GetRoleUsersRoleUserArrayInput is an input type that accepts GetRoleUsersRoleUserArray and GetRoleUsersRoleUserArrayOutput values.
// You can construct a concrete instance of `GetRoleUsersRoleUserArrayInput` via:
//
//	GetRoleUsersRoleUserArray{ GetRoleUsersRoleUserArgs{...} }
type GetRoleUsersRoleUserArrayInput interface {
	pulumi.Input

	ToGetRoleUsersRoleUserArrayOutput() GetRoleUsersRoleUserArrayOutput
	ToGetRoleUsersRoleUserArrayOutputWithContext(context.Context) GetRoleUsersRoleUserArrayOutput
}

type GetRoleUsersRoleUserArray []GetRoleUsersRoleUserInput

func (GetRoleUsersRoleUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleUsersRoleUser)(nil)).Elem()
}

func (i GetRoleUsersRoleUserArray) ToGetRoleUsersRoleUserArrayOutput() GetRoleUsersRoleUserArrayOutput {
	return i.ToGetRoleUsersRoleUserArrayOutputWithContext(context.Background())
}

func (i GetRoleUsersRoleUserArray) ToGetRoleUsersRoleUserArrayOutputWithContext(ctx context.Context) GetRoleUsersRoleUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleUsersRoleUserArrayOutput)
}

type GetRoleUsersRoleUserOutput struct{ *pulumi.OutputState }

func (GetRoleUsersRoleUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleUsersRoleUser)(nil)).Elem()
}

func (o GetRoleUsersRoleUserOutput) ToGetRoleUsersRoleUserOutput() GetRoleUsersRoleUserOutput {
	return o
}

func (o GetRoleUsersRoleUserOutput) ToGetRoleUsersRoleUserOutputWithContext(ctx context.Context) GetRoleUsersRoleUserOutput {
	return o
}

func (o GetRoleUsersRoleUserOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleUsersRoleUser) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o GetRoleUsersRoleUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleUsersRoleUser) string { return v.UserId }).(pulumi.StringOutput)
}

type GetRoleUsersRoleUserArrayOutput struct{ *pulumi.OutputState }

func (GetRoleUsersRoleUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleUsersRoleUser)(nil)).Elem()
}

func (o GetRoleUsersRoleUserArrayOutput) ToGetRoleUsersRoleUserArrayOutput() GetRoleUsersRoleUserArrayOutput {
	return o
}

func (o GetRoleUsersRoleUserArrayOutput) ToGetRoleUsersRoleUserArrayOutputWithContext(ctx context.Context) GetRoleUsersRoleUserArrayOutput {
	return o
}

func (o GetRoleUsersRoleUserArrayOutput) Index(i pulumi.IntInput) GetRoleUsersRoleUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoleUsersRoleUser {
		return vs[0].([]GetRoleUsersRoleUser)[vs[1].(int)]
	}).(GetRoleUsersRoleUserOutput)
}

type GetRolesRole struct {
	// ID of the Datadog role
	Id string `pulumi:"id"`
	// Name of the Datadog role
	Name string `pulumi:"name"`
	// Number of users that have this role.
	UserCount int `pulumi:"userCount"`
}

// GetRolesRoleInput is an input type that accepts GetRolesRoleArgs and GetRolesRoleOutput values.
// You can construct a concrete instance of `GetRolesRoleInput` via:
//
//	GetRolesRoleArgs{...}
type GetRolesRoleInput interface {
	pulumi.Input

	ToGetRolesRoleOutput() GetRolesRoleOutput
	ToGetRolesRoleOutputWithContext(context.Context) GetRolesRoleOutput
}

type GetRolesRoleArgs struct {
	// ID of the Datadog role
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the Datadog role
	Name pulumi.StringInput `pulumi:"name"`
	// Number of users that have this role.
	UserCount pulumi.IntInput `pulumi:"userCount"`
}

func (GetRolesRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesRole)(nil)).Elem()
}

func (i GetRolesRoleArgs) ToGetRolesRoleOutput() GetRolesRoleOutput {
	return i.ToGetRolesRoleOutputWithContext(context.Background())
}

func (i GetRolesRoleArgs) ToGetRolesRoleOutputWithContext(ctx context.Context) GetRolesRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesRoleOutput)
}

// GetRolesRoleArrayInput is an input type that accepts GetRolesRoleArray and GetRolesRoleArrayOutput values.
// You can construct a concrete instance of `GetRolesRoleArrayInput` via:
//
//	GetRolesRoleArray{ GetRolesRoleArgs{...} }
type GetRolesRoleArrayInput interface {
	pulumi.Input

	ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput
	ToGetRolesRoleArrayOutputWithContext(context.Context) GetRolesRoleArrayOutput
}

type GetRolesRoleArray []GetRolesRoleInput

func (GetRolesRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesRole)(nil)).Elem()
}

func (i GetRolesRoleArray) ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput {
	return i.ToGetRolesRoleArrayOutputWithContext(context.Background())
}

func (i GetRolesRoleArray) ToGetRolesRoleArrayOutputWithContext(ctx context.Context) GetRolesRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesRoleArrayOutput)
}

type GetRolesRoleOutput struct{ *pulumi.OutputState }

func (GetRolesRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesRole)(nil)).Elem()
}

func (o GetRolesRoleOutput) ToGetRolesRoleOutput() GetRolesRoleOutput {
	return o
}

func (o GetRolesRoleOutput) ToGetRolesRoleOutputWithContext(ctx context.Context) GetRolesRoleOutput {
	return o
}

// ID of the Datadog role
func (o GetRolesRoleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Datadog role
func (o GetRolesRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.Name }).(pulumi.StringOutput)
}

// Number of users that have this role.
func (o GetRolesRoleOutput) UserCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRolesRole) int { return v.UserCount }).(pulumi.IntOutput)
}

type GetRolesRoleArrayOutput struct{ *pulumi.OutputState }

func (GetRolesRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesRole)(nil)).Elem()
}

func (o GetRolesRoleArrayOutput) ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput {
	return o
}

func (o GetRolesRoleArrayOutput) ToGetRolesRoleArrayOutputWithContext(ctx context.Context) GetRolesRoleArrayOutput {
	return o
}

func (o GetRolesRoleArrayOutput) Index(i pulumi.IntInput) GetRolesRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRolesRole {
		return vs[0].([]GetRolesRole)[vs[1].(int)]
	}).(GetRolesRoleOutput)
}

type GetSecurityMonitoringFiltersFilter struct {
	// Exclusion filters to exclude some logs from the security filter.
	ExclusionFilters []GetSecurityMonitoringFiltersFilterExclusionFilter `pulumi:"exclusionFilters"`
	// The filtered data type.
	FilteredDataType *string `pulumi:"filteredDataType"`
	// Whether the security filter is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the security filter.
	Name string `pulumi:"name"`
	// The query of the security filter.
	Query string `pulumi:"query"`
	// The version of the security filter.
	Version int `pulumi:"version"`
}

// GetSecurityMonitoringFiltersFilterInput is an input type that accepts GetSecurityMonitoringFiltersFilterArgs and GetSecurityMonitoringFiltersFilterOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterInput` via:
//
//	GetSecurityMonitoringFiltersFilterArgs{...}
type GetSecurityMonitoringFiltersFilterInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterOutput() GetSecurityMonitoringFiltersFilterOutput
	ToGetSecurityMonitoringFiltersFilterOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterOutput
}

type GetSecurityMonitoringFiltersFilterArgs struct {
	// Exclusion filters to exclude some logs from the security filter.
	ExclusionFilters GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput `pulumi:"exclusionFilters"`
	// The filtered data type.
	FilteredDataType pulumi.StringPtrInput `pulumi:"filteredDataType"`
	// Whether the security filter is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the security filter.
	Name pulumi.StringInput `pulumi:"name"`
	// The query of the security filter.
	Query pulumi.StringInput `pulumi:"query"`
	// The version of the security filter.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetSecurityMonitoringFiltersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterArgs) ToGetSecurityMonitoringFiltersFilterOutput() GetSecurityMonitoringFiltersFilterOutput {
	return i.ToGetSecurityMonitoringFiltersFilterOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterArgs) ToGetSecurityMonitoringFiltersFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterOutput)
}

// GetSecurityMonitoringFiltersFilterArrayInput is an input type that accepts GetSecurityMonitoringFiltersFilterArray and GetSecurityMonitoringFiltersFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterArrayInput` via:
//
//	GetSecurityMonitoringFiltersFilterArray{ GetSecurityMonitoringFiltersFilterArgs{...} }
type GetSecurityMonitoringFiltersFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterArrayOutput() GetSecurityMonitoringFiltersFilterArrayOutput
	ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterArrayOutput
}

type GetSecurityMonitoringFiltersFilterArray []GetSecurityMonitoringFiltersFilterInput

func (GetSecurityMonitoringFiltersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterArray) ToGetSecurityMonitoringFiltersFilterArrayOutput() GetSecurityMonitoringFiltersFilterArrayOutput {
	return i.ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterArray) ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterArrayOutput)
}

type GetSecurityMonitoringFiltersFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterOutput) ToGetSecurityMonitoringFiltersFilterOutput() GetSecurityMonitoringFiltersFilterOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterOutput) ToGetSecurityMonitoringFiltersFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterOutput {
	return o
}

// Exclusion filters to exclude some logs from the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) ExclusionFilters() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) []GetSecurityMonitoringFiltersFilterExclusionFilter {
		return v.ExclusionFilters
	}).(GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput)
}

// The filtered data type.
func (o GetSecurityMonitoringFiltersFilterOutput) FilteredDataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) *string { return v.FilteredDataType }).(pulumi.StringPtrOutput)
}

// Whether the security filter is enabled.
func (o GetSecurityMonitoringFiltersFilterOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) string { return v.Name }).(pulumi.StringOutput)
}

// The query of the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) string { return v.Query }).(pulumi.StringOutput)
}

// The version of the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) int { return v.Version }).(pulumi.IntOutput)
}

type GetSecurityMonitoringFiltersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterArrayOutput() GetSecurityMonitoringFiltersFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringFiltersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringFiltersFilter {
		return vs[0].([]GetSecurityMonitoringFiltersFilter)[vs[1].(int)]
	}).(GetSecurityMonitoringFiltersFilterOutput)
}

type GetSecurityMonitoringFiltersFilterExclusionFilter struct {
	// Exclusion filter name.
	Name string `pulumi:"name"`
	// Exclusion filter query. Logs that match this query are excluded from the security filter.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringFiltersFilterExclusionFilterInput is an input type that accepts GetSecurityMonitoringFiltersFilterExclusionFilterArgs and GetSecurityMonitoringFiltersFilterExclusionFilterOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterExclusionFilterInput` via:
//
//	GetSecurityMonitoringFiltersFilterExclusionFilterArgs{...}
type GetSecurityMonitoringFiltersFilterExclusionFilterInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterExclusionFilterOutput() GetSecurityMonitoringFiltersFilterExclusionFilterOutput
	ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterOutput
}

type GetSecurityMonitoringFiltersFilterExclusionFilterArgs struct {
	// Exclusion filter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Exclusion filter query. Logs that match this query are excluded from the security filter.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringFiltersFilterExclusionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArgs) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutput() GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return i.ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArgs) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterExclusionFilterOutput)
}

// GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput is an input type that accepts GetSecurityMonitoringFiltersFilterExclusionFilterArray and GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput` via:
//
//	GetSecurityMonitoringFiltersFilterExclusionFilterArray{ GetSecurityMonitoringFiltersFilterExclusionFilterArgs{...} }
type GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput
	ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput
}

type GetSecurityMonitoringFiltersFilterExclusionFilterArray []GetSecurityMonitoringFiltersFilterExclusionFilterInput

func (GetSecurityMonitoringFiltersFilterExclusionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArray) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return i.ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArray) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput)
}

type GetSecurityMonitoringFiltersFilterExclusionFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterExclusionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutput() GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return o
}

// Exclusion filter name.
func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilterExclusionFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Exclusion filter query. Logs that match this query are excluded from the security filter.
func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilterExclusionFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringFiltersFilterExclusionFilter {
		return vs[0].([]GetSecurityMonitoringFiltersFilterExclusionFilter)[vs[1].(int)]
	}).(GetSecurityMonitoringFiltersFilterExclusionFilterOutput)
}

type GetSecurityMonitoringRulesRule struct {
	// Cases for generating signals.
	Cases []GetSecurityMonitoringRulesRuleCase `pulumi:"cases"`
	// Whether the rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.
	Filters []GetSecurityMonitoringRulesRuleFilter `pulumi:"filters"`
	// Whether the notifications include the triggering group-by values in their title.
	HasExtendedTitle *bool `pulumi:"hasExtendedTitle"`
	// Message for generated signals.
	Message string `pulumi:"message"`
	// The name of the rule.
	Name string `pulumi:"name"`
	// Options on rules.
	Options *GetSecurityMonitoringRulesRuleOptions `pulumi:"options"`
	// Queries for selecting logs which are part of the rule.
	Queries []GetSecurityMonitoringRulesRuleQuery `pulumi:"queries"`
	// Queries for selecting logs which are part of the rule.
	SignalQueries []GetSecurityMonitoringRulesRuleSignalQuery `pulumi:"signalQueries"`
	// Tags for generated signals.
	Tags []string `pulumi:"tags"`
	// Cases for generating signals for third-party rules. Only required and accepted for third-party rules
	ThirdPartyCases []GetSecurityMonitoringRulesRuleThirdPartyCase `pulumi:"thirdPartyCases"`
	// The rule type.
	Type *string `pulumi:"type"`
}

// GetSecurityMonitoringRulesRuleInput is an input type that accepts GetSecurityMonitoringRulesRuleArgs and GetSecurityMonitoringRulesRuleOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleInput` via:
//
//	GetSecurityMonitoringRulesRuleArgs{...}
type GetSecurityMonitoringRulesRuleInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOutput() GetSecurityMonitoringRulesRuleOutput
	ToGetSecurityMonitoringRulesRuleOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOutput
}

type GetSecurityMonitoringRulesRuleArgs struct {
	// Cases for generating signals.
	Cases GetSecurityMonitoringRulesRuleCaseArrayInput `pulumi:"cases"`
	// Whether the rule is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.
	Filters GetSecurityMonitoringRulesRuleFilterArrayInput `pulumi:"filters"`
	// Whether the notifications include the triggering group-by values in their title.
	HasExtendedTitle pulumi.BoolPtrInput `pulumi:"hasExtendedTitle"`
	// Message for generated signals.
	Message pulumi.StringInput `pulumi:"message"`
	// The name of the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Options on rules.
	Options GetSecurityMonitoringRulesRuleOptionsPtrInput `pulumi:"options"`
	// Queries for selecting logs which are part of the rule.
	Queries GetSecurityMonitoringRulesRuleQueryArrayInput `pulumi:"queries"`
	// Queries for selecting logs which are part of the rule.
	SignalQueries GetSecurityMonitoringRulesRuleSignalQueryArrayInput `pulumi:"signalQueries"`
	// Tags for generated signals.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Cases for generating signals for third-party rules. Only required and accepted for third-party rules
	ThirdPartyCases GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput `pulumi:"thirdPartyCases"`
	// The rule type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSecurityMonitoringRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleArgs) ToGetSecurityMonitoringRulesRuleOutput() GetSecurityMonitoringRulesRuleOutput {
	return i.ToGetSecurityMonitoringRulesRuleOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleArgs) ToGetSecurityMonitoringRulesRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOutput)
}

// GetSecurityMonitoringRulesRuleArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleArray and GetSecurityMonitoringRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleArray{ GetSecurityMonitoringRulesRuleArgs{...} }
type GetSecurityMonitoringRulesRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleArrayOutput() GetSecurityMonitoringRulesRuleArrayOutput
	ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleArrayOutput
}

type GetSecurityMonitoringRulesRuleArray []GetSecurityMonitoringRulesRuleInput

func (GetSecurityMonitoringRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleArray) ToGetSecurityMonitoringRulesRuleArrayOutput() GetSecurityMonitoringRulesRuleArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleArray) ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleArrayOutput)
}

type GetSecurityMonitoringRulesRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOutput) ToGetSecurityMonitoringRulesRuleOutput() GetSecurityMonitoringRulesRuleOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOutput) ToGetSecurityMonitoringRulesRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOutput {
	return o
}

// Cases for generating signals.
func (o GetSecurityMonitoringRulesRuleOutput) Cases() GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleCase { return v.Cases }).(GetSecurityMonitoringRulesRuleCaseArrayOutput)
}

// Whether the rule is enabled.
func (o GetSecurityMonitoringRulesRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.
func (o GetSecurityMonitoringRulesRuleOutput) Filters() GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleFilter { return v.Filters }).(GetSecurityMonitoringRulesRuleFilterArrayOutput)
}

// Whether the notifications include the triggering group-by values in their title.
func (o GetSecurityMonitoringRulesRuleOutput) HasExtendedTitle() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *bool { return v.HasExtendedTitle }).(pulumi.BoolPtrOutput)
}

// Message for generated signals.
func (o GetSecurityMonitoringRulesRuleOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) string { return v.Message }).(pulumi.StringOutput)
}

// The name of the rule.
func (o GetSecurityMonitoringRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

// Options on rules.
func (o GetSecurityMonitoringRulesRuleOutput) Options() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *GetSecurityMonitoringRulesRuleOptions { return v.Options }).(GetSecurityMonitoringRulesRuleOptionsPtrOutput)
}

// Queries for selecting logs which are part of the rule.
func (o GetSecurityMonitoringRulesRuleOutput) Queries() GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleQuery { return v.Queries }).(GetSecurityMonitoringRulesRuleQueryArrayOutput)
}

// Queries for selecting logs which are part of the rule.
func (o GetSecurityMonitoringRulesRuleOutput) SignalQueries() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleSignalQuery {
		return v.SignalQueries
	}).(GetSecurityMonitoringRulesRuleSignalQueryArrayOutput)
}

// Tags for generated signals.
func (o GetSecurityMonitoringRulesRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Cases for generating signals for third-party rules. Only required and accepted for third-party rules
func (o GetSecurityMonitoringRulesRuleOutput) ThirdPartyCases() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleThirdPartyCase {
		return v.ThirdPartyCases
	}).(GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput)
}

// The rule type.
func (o GetSecurityMonitoringRulesRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetSecurityMonitoringRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleArrayOutput) ToGetSecurityMonitoringRulesRuleArrayOutput() GetSecurityMonitoringRulesRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleArrayOutput) ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRule {
		return vs[0].([]GetSecurityMonitoringRulesRule)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleOutput)
}

type GetSecurityMonitoringRulesRuleCase struct {
	// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
	Condition *string `pulumi:"condition"`
	// Name of the case.
	Name *string `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications []string `pulumi:"notifications"`
	// Severity of the Security Signal.
	Status string `pulumi:"status"`
}

// GetSecurityMonitoringRulesRuleCaseInput is an input type that accepts GetSecurityMonitoringRulesRuleCaseArgs and GetSecurityMonitoringRulesRuleCaseOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleCaseInput` via:
//
//	GetSecurityMonitoringRulesRuleCaseArgs{...}
type GetSecurityMonitoringRulesRuleCaseInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleCaseOutput() GetSecurityMonitoringRulesRuleCaseOutput
	ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleCaseOutput
}

type GetSecurityMonitoringRulesRuleCaseArgs struct {
	// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// Name of the case.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications pulumi.StringArrayInput `pulumi:"notifications"`
	// Severity of the Security Signal.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSecurityMonitoringRulesRuleCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleCaseArgs) ToGetSecurityMonitoringRulesRuleCaseOutput() GetSecurityMonitoringRulesRuleCaseOutput {
	return i.ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleCaseArgs) ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleCaseOutput)
}

// GetSecurityMonitoringRulesRuleCaseArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleCaseArray and GetSecurityMonitoringRulesRuleCaseArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleCaseArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleCaseArray{ GetSecurityMonitoringRulesRuleCaseArgs{...} }
type GetSecurityMonitoringRulesRuleCaseArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleCaseArrayOutput() GetSecurityMonitoringRulesRuleCaseArrayOutput
	ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleCaseArrayOutput
}

type GetSecurityMonitoringRulesRuleCaseArray []GetSecurityMonitoringRulesRuleCaseInput

func (GetSecurityMonitoringRulesRuleCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleCaseArray) ToGetSecurityMonitoringRulesRuleCaseArrayOutput() GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleCaseArray) ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleCaseArrayOutput)
}

type GetSecurityMonitoringRulesRuleCaseOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleCaseOutput) ToGetSecurityMonitoringRulesRuleCaseOutput() GetSecurityMonitoringRulesRuleCaseOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseOutput) ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseOutput {
	return o
}

// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Name of the case.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notification targets for each rule case.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) []string { return v.Notifications }).(pulumi.StringArrayOutput)
}

// Severity of the Security Signal.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) string { return v.Status }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleCaseArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleCaseArrayOutput) ToGetSecurityMonitoringRulesRuleCaseArrayOutput() GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseArrayOutput) ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleCase {
		return vs[0].([]GetSecurityMonitoringRulesRuleCase)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleCaseOutput)
}

type GetSecurityMonitoringRulesRuleFilter struct {
	// The type of filtering action.
	Action string `pulumi:"action"`
	// Query for selecting logs to apply the filtering action.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringRulesRuleFilterInput is an input type that accepts GetSecurityMonitoringRulesRuleFilterArgs and GetSecurityMonitoringRulesRuleFilterOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleFilterInput` via:
//
//	GetSecurityMonitoringRulesRuleFilterArgs{...}
type GetSecurityMonitoringRulesRuleFilterInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleFilterOutput() GetSecurityMonitoringRulesRuleFilterOutput
	ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleFilterOutput
}

type GetSecurityMonitoringRulesRuleFilterArgs struct {
	// The type of filtering action.
	Action pulumi.StringInput `pulumi:"action"`
	// Query for selecting logs to apply the filtering action.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringRulesRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleFilterArgs) ToGetSecurityMonitoringRulesRuleFilterOutput() GetSecurityMonitoringRulesRuleFilterOutput {
	return i.ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleFilterArgs) ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleFilterOutput)
}

// GetSecurityMonitoringRulesRuleFilterArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleFilterArray and GetSecurityMonitoringRulesRuleFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleFilterArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleFilterArray{ GetSecurityMonitoringRulesRuleFilterArgs{...} }
type GetSecurityMonitoringRulesRuleFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleFilterArrayOutput() GetSecurityMonitoringRulesRuleFilterArrayOutput
	ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleFilterArrayOutput
}

type GetSecurityMonitoringRulesRuleFilterArray []GetSecurityMonitoringRulesRuleFilterInput

func (GetSecurityMonitoringRulesRuleFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleFilterArray) ToGetSecurityMonitoringRulesRuleFilterArrayOutput() GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleFilterArray) ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleFilterArrayOutput)
}

type GetSecurityMonitoringRulesRuleFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleFilterOutput) ToGetSecurityMonitoringRulesRuleFilterOutput() GetSecurityMonitoringRulesRuleFilterOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleFilterOutput) ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterOutput {
	return o
}

// The type of filtering action.
func (o GetSecurityMonitoringRulesRuleFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleFilter) string { return v.Action }).(pulumi.StringOutput)
}

// Query for selecting logs to apply the filtering action.
func (o GetSecurityMonitoringRulesRuleFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleFilterArrayOutput) ToGetSecurityMonitoringRulesRuleFilterArrayOutput() GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleFilterArrayOutput) ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleFilter {
		return vs[0].([]GetSecurityMonitoringRulesRuleFilter)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleFilterOutput)
}

type GetSecurityMonitoringRulesRuleOptions struct {
	// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
	DecreaseCriticalityBasedOnEnv *bool `pulumi:"decreaseCriticalityBasedOnEnv"`
	// The detection method.
	DetectionMethod *string `pulumi:"detectionMethod"`
	// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
	EvaluationWindow *int `pulumi:"evaluationWindow"`
	// Options for rules using the impossible travel detection method.
	ImpossibleTravelOptions *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions `pulumi:"impossibleTravelOptions"`
	// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
	KeepAlive *int `pulumi:"keepAlive"`
	// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
	MaxSignalDuration *int `pulumi:"maxSignalDuration"`
	// New value rules specific options.
	NewValueOptions *GetSecurityMonitoringRulesRuleOptionsNewValueOptions `pulumi:"newValueOptions"`
	// Options for rules using the third-party detection method.
	ThirdPartyRuleOptions *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions `pulumi:"thirdPartyRuleOptions"`
}

// GetSecurityMonitoringRulesRuleOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsArgs and GetSecurityMonitoringRulesRuleOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsArgs struct {
	// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
	DecreaseCriticalityBasedOnEnv pulumi.BoolPtrInput `pulumi:"decreaseCriticalityBasedOnEnv"`
	// The detection method.
	DetectionMethod pulumi.StringPtrInput `pulumi:"detectionMethod"`
	// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
	EvaluationWindow pulumi.IntPtrInput `pulumi:"evaluationWindow"`
	// Options for rules using the impossible travel detection method.
	ImpossibleTravelOptions GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput `pulumi:"impossibleTravelOptions"`
	// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
	KeepAlive pulumi.IntPtrInput `pulumi:"keepAlive"`
	// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
	MaxSignalDuration pulumi.IntPtrInput `pulumi:"maxSignalDuration"`
	// New value rules specific options.
	NewValueOptions GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput `pulumi:"newValueOptions"`
	// Options for rules using the third-party detection method.
	ThirdPartyRuleOptions GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput `pulumi:"thirdPartyRuleOptions"`
}

func (GetSecurityMonitoringRulesRuleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsArgs, GetSecurityMonitoringRulesRuleOptionsPtr and GetSecurityMonitoringRulesRuleOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsPtrType GetSecurityMonitoringRulesRuleOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsArgs) GetSecurityMonitoringRulesRuleOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsPtrOutput)
}

// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) DecreaseCriticalityBasedOnEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *bool { return v.DecreaseCriticalityBasedOnEnv }).(pulumi.BoolPtrOutput)
}

// The detection method.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) DetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *string { return v.DetectionMethod }).(pulumi.StringPtrOutput)
}

// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) EvaluationWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *int { return v.EvaluationWindow }).(pulumi.IntPtrOutput)
}

// Options for rules using the impossible travel detection method.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) ImpossibleTravelOptions() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		return v.ImpossibleTravelOptions
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
func (o GetSecurityMonitoringRulesRuleOptionsOutput) KeepAlive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *int { return v.KeepAlive }).(pulumi.IntPtrOutput)
}

// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) MaxSignalDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *int { return v.MaxSignalDuration }).(pulumi.IntPtrOutput)
}

// New value rules specific options.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) NewValueOptions() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		return v.NewValueOptions
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

// Options for rules using the third-party detection method.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) ThirdPartyRuleOptions() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		return v.ThirdPartyRuleOptions
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) GetSecurityMonitoringRulesRuleOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsOutput)
}

// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) DecreaseCriticalityBasedOnEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DecreaseCriticalityBasedOnEnv
	}).(pulumi.BoolPtrOutput)
}

// The detection method.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) DetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMethod
	}).(pulumi.StringPtrOutput)
}

// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) EvaluationWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationWindow
	}).(pulumi.IntPtrOutput)
}

// Options for rules using the impossible travel detection method.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ImpossibleTravelOptions() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		if v == nil {
			return nil
		}
		return v.ImpossibleTravelOptions
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) KeepAlive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.KeepAlive
	}).(pulumi.IntPtrOutput)
}

// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) MaxSignalDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.MaxSignalDuration
	}).(pulumi.IntPtrOutput)
}

// New value rules specific options.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) NewValueOptions() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		if v == nil {
			return nil
		}
		return v.NewValueOptions
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

// Options for rules using the third-party detection method.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ThirdPartyRuleOptions() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		if v == nil {
			return nil
		}
		return v.ThirdPartyRuleOptions
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions struct {
	// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
	BaselineUserLocations *bool `pulumi:"baselineUserLocations"`
}

// GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs and GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs struct {
	// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
	BaselineUserLocations pulumi.BoolPtrInput `pulumi:"baselineUserLocations"`
}

func (GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs, GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtr and GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) BaselineUserLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) *bool {
		return v.BaselineUserLocations
	}).(pulumi.BoolPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput)
}

// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) BaselineUserLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) *bool {
		if v == nil {
			return nil
		}
		return v.BaselineUserLocations
	}).(pulumi.BoolPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptions struct {
	// The duration in days after which a learned value is forgotten.
	ForgetAfter int `pulumi:"forgetAfter"`
	// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
	LearningDuration *int `pulumi:"learningDuration"`
	// The learning method used to determine when signals should be generated for values that weren't learned.
	LearningMethod *string `pulumi:"learningMethod"`
	// A number of occurrences after which signals are generated for values that weren't learned.
	LearningThreshold *int `pulumi:"learningThreshold"`
}

// GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs and GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs struct {
	// The duration in days after which a learned value is forgotten.
	ForgetAfter pulumi.IntInput `pulumi:"forgetAfter"`
	// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
	LearningDuration pulumi.IntPtrInput `pulumi:"learningDuration"`
	// The learning method used to determine when signals should be generated for values that weren't learned.
	LearningMethod pulumi.StringPtrInput `pulumi:"learningMethod"`
	// A number of occurrences after which signals are generated for values that weren't learned.
	LearningThreshold pulumi.IntPtrInput `pulumi:"learningThreshold"`
}

func (GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs, GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtr and GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

// The duration in days after which a learned value is forgotten.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ForgetAfter() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) int { return v.ForgetAfter }).(pulumi.IntOutput)
}

// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) LearningDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int { return v.LearningDuration }).(pulumi.IntPtrOutput)
}

// The learning method used to determine when signals should be generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) LearningMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *string { return v.LearningMethod }).(pulumi.StringPtrOutput)
}

// A number of occurrences after which signals are generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) LearningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int { return v.LearningThreshold }).(pulumi.IntPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptionsNewValueOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput)
}

// The duration in days after which a learned value is forgotten.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ForgetAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return &v.ForgetAfter
	}).(pulumi.IntPtrOutput)
}

// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) LearningDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return v.LearningDuration
	}).(pulumi.IntPtrOutput)
}

// The learning method used to determine when signals should be generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) LearningMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *string {
		if v == nil {
			return nil
		}
		return v.LearningMethod
	}).(pulumi.StringPtrOutput)
}

// A number of occurrences after which signals are generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) LearningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return v.LearningThreshold
	}).(pulumi.IntPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions struct {
	// Notification targets for the default rule case, when none of the third-party cases match.
	DefaultNotifications []string `pulumi:"defaultNotifications"`
	// Severity of the default rule case, when none of the third-party cases match.
	DefaultStatus string `pulumi:"defaultStatus"`
	// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
	RootQueries []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery `pulumi:"rootQueries"`
	// A template for the signal title; if omitted, the title is generated based on the case name.
	SignalTitleTemplate *string `pulumi:"signalTitleTemplate"`
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs struct {
	// Notification targets for the default rule case, when none of the third-party cases match.
	DefaultNotifications pulumi.StringArrayInput `pulumi:"defaultNotifications"`
	// Severity of the default rule case, when none of the third-party cases match.
	DefaultStatus pulumi.StringInput `pulumi:"defaultStatus"`
	// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
	RootQueries GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput `pulumi:"rootQueries"`
	// A template for the signal title; if omitted, the title is generated based on the case name.
	SignalTitleTemplate pulumi.StringPtrInput `pulumi:"signalTitleTemplate"`
}

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs, GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtr and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

// Notification targets for the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) DefaultNotifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []string {
		return v.DefaultNotifications
	}).(pulumi.StringArrayOutput)
}

// Severity of the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) DefaultStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) string { return v.DefaultStatus }).(pulumi.StringOutput)
}

// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) RootQueries() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery {
		return v.RootQueries
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

// A template for the signal title; if omitted, the title is generated based on the case name.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) SignalTitleTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *string {
		return v.SignalTitleTemplate
	}).(pulumi.StringPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput)
}

// Notification targets for the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) DefaultNotifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []string {
		if v == nil {
			return nil
		}
		return v.DefaultNotifications
	}).(pulumi.StringArrayOutput)
}

// Severity of the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) DefaultStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultStatus
	}).(pulumi.StringPtrOutput)
}

// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) RootQueries() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery {
		if v == nil {
			return nil
		}
		return v.RootQueries
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

// A template for the signal title; if omitted, the title is generated based on the case name.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) SignalTitleTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignalTitleTemplate
	}).(pulumi.StringPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery struct {
	// Fields to group by. If empty, each log triggers a signal.
	GroupByFields []string `pulumi:"groupByFields"`
	// Query to filter logs.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs{...}
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs struct {
	// Fields to group by. If empty, each log triggers a signal.
	GroupByFields pulumi.StringArrayInput `pulumi:"groupByFields"`
	// Query to filter logs.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput)
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray{ GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs{...} }
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return o
}

// Fields to group by. If empty, each log triggers a signal.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) GroupByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery) []string {
		return v.GroupByFields
	}).(pulumi.StringArrayOutput)
}

// Query to filter logs.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery {
		return vs[0].([]GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput)
}

type GetSecurityMonitoringRulesRuleQuery struct {
	// **Deprecated**. It won't be applied anymore.
	//
	// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
	AgentRules []GetSecurityMonitoringRulesRuleQueryAgentRule `pulumi:"agentRules"`
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation *string `pulumi:"aggregation"`
	// Field for which the cardinality is measured. Sent as an array.
	DistinctFields []string `pulumi:"distinctFields"`
	// Fields to group by.
	GroupByFields []string `pulumi:"groupByFields"`
	// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations.
	//
	// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
	Metric *string `pulumi:"metric"`
	// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
	Metrics []string `pulumi:"metrics"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name *string `pulumi:"name"`
	// Query to run on logs.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringRulesRuleQueryInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryArgs and GetSecurityMonitoringRulesRuleQueryOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryArgs{...}
type GetSecurityMonitoringRulesRuleQueryInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryOutput() GetSecurityMonitoringRulesRuleQueryOutput
	ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryOutput
}

type GetSecurityMonitoringRulesRuleQueryArgs struct {
	// **Deprecated**. It won't be applied anymore.
	//
	// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
	AgentRules GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput `pulumi:"agentRules"`
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Field for which the cardinality is measured. Sent as an array.
	DistinctFields pulumi.StringArrayInput `pulumi:"distinctFields"`
	// Fields to group by.
	GroupByFields pulumi.StringArrayInput `pulumi:"groupByFields"`
	// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations.
	//
	// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
	Metrics pulumi.StringArrayInput `pulumi:"metrics"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Query to run on logs.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringRulesRuleQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryArgs) ToGetSecurityMonitoringRulesRuleQueryOutput() GetSecurityMonitoringRulesRuleQueryOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryArgs) ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryOutput)
}

// GetSecurityMonitoringRulesRuleQueryArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryArray and GetSecurityMonitoringRulesRuleQueryArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryArray{ GetSecurityMonitoringRulesRuleQueryArgs{...} }
type GetSecurityMonitoringRulesRuleQueryArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryArrayOutput() GetSecurityMonitoringRulesRuleQueryArrayOutput
	ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryArrayOutput
}

type GetSecurityMonitoringRulesRuleQueryArray []GetSecurityMonitoringRulesRuleQueryInput

func (GetSecurityMonitoringRulesRuleQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryArray) ToGetSecurityMonitoringRulesRuleQueryArrayOutput() GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryArray) ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryArrayOutput)
}

type GetSecurityMonitoringRulesRuleQueryOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryOutput) ToGetSecurityMonitoringRulesRuleQueryOutput() GetSecurityMonitoringRulesRuleQueryOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryOutput) ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryOutput {
	return o
}

// **Deprecated**. It won't be applied anymore.
//
// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
func (o GetSecurityMonitoringRulesRuleQueryOutput) AgentRules() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []GetSecurityMonitoringRulesRuleQueryAgentRule {
		return v.AgentRules
	}).(GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput)
}

// The aggregation type. For Signal Correlation rules, it must be event_count.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Field for which the cardinality is measured. Sent as an array.
func (o GetSecurityMonitoringRulesRuleQueryOutput) DistinctFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []string { return v.DistinctFields }).(pulumi.StringArrayOutput)
}

// Fields to group by.
func (o GetSecurityMonitoringRulesRuleQueryOutput) GroupByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []string { return v.GroupByFields }).(pulumi.StringArrayOutput)
}

// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations.
//
// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Metrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []string { return v.Metrics }).(pulumi.StringArrayOutput)
}

// Name of the query. Not compatible with `newValue` aggregations.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Query to run on logs.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryArrayOutput) ToGetSecurityMonitoringRulesRuleQueryArrayOutput() GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryArrayOutput) ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleQuery {
		return vs[0].([]GetSecurityMonitoringRulesRuleQuery)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleQueryOutput)
}

type GetSecurityMonitoringRulesRuleQueryAgentRule struct {
	// **Deprecated**. It won't be applied anymore.
	AgentRuleId string `pulumi:"agentRuleId"`
	// **Deprecated**. It won't be applied anymore.
	Expression string `pulumi:"expression"`
}

// GetSecurityMonitoringRulesRuleQueryAgentRuleInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryAgentRuleArgs and GetSecurityMonitoringRulesRuleQueryAgentRuleOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryAgentRuleInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryAgentRuleArgs{...}
type GetSecurityMonitoringRulesRuleQueryAgentRuleInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleOutput
	ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleArgs struct {
	// **Deprecated**. It won't be applied anymore.
	AgentRuleId pulumi.StringInput `pulumi:"agentRuleId"`
	// **Deprecated**. It won't be applied anymore.
	Expression pulumi.StringInput `pulumi:"expression"`
}

func (GetSecurityMonitoringRulesRuleQueryAgentRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArgs) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArgs) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryAgentRuleOutput)
}

// GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryAgentRuleArray and GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryAgentRuleArray{ GetSecurityMonitoringRulesRuleQueryAgentRuleArgs{...} }
type GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput
	ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleArray []GetSecurityMonitoringRulesRuleQueryAgentRuleInput

func (GetSecurityMonitoringRulesRuleQueryAgentRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArray) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArray) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput)
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return o
}

// **Deprecated**. It won't be applied anymore.
func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) AgentRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQueryAgentRule) string { return v.AgentRuleId }).(pulumi.StringOutput)
}

// **Deprecated**. It won't be applied anymore.
func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQueryAgentRule) string { return v.Expression }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleQueryAgentRule {
		return vs[0].([]GetSecurityMonitoringRulesRuleQueryAgentRule)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleQueryAgentRuleOutput)
}

type GetSecurityMonitoringRulesRuleSignalQuery struct {
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation *string `pulumi:"aggregation"`
	// Fields to correlate by.
	CorrelatedByFields []string `pulumi:"correlatedByFields"`
	// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule.
	CorrelatedQueryIndex *string `pulumi:"correlatedQueryIndex"`
	// Default Rule ID of the signal to correlate. This value is READ-ONLY.
	DefaultRuleId *string `pulumi:"defaultRuleId"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name *string `pulumi:"name"`
	// Rule ID of the signal to correlate.
	RuleId string `pulumi:"ruleId"`
}

// GetSecurityMonitoringRulesRuleSignalQueryInput is an input type that accepts GetSecurityMonitoringRulesRuleSignalQueryArgs and GetSecurityMonitoringRulesRuleSignalQueryOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleSignalQueryInput` via:
//
//	GetSecurityMonitoringRulesRuleSignalQueryArgs{...}
type GetSecurityMonitoringRulesRuleSignalQueryInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleSignalQueryOutput() GetSecurityMonitoringRulesRuleSignalQueryOutput
	ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleSignalQueryOutput
}

type GetSecurityMonitoringRulesRuleSignalQueryArgs struct {
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Fields to correlate by.
	CorrelatedByFields pulumi.StringArrayInput `pulumi:"correlatedByFields"`
	// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule.
	CorrelatedQueryIndex pulumi.StringPtrInput `pulumi:"correlatedQueryIndex"`
	// Default Rule ID of the signal to correlate. This value is READ-ONLY.
	DefaultRuleId pulumi.StringPtrInput `pulumi:"defaultRuleId"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule ID of the signal to correlate.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (GetSecurityMonitoringRulesRuleSignalQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArgs) ToGetSecurityMonitoringRulesRuleSignalQueryOutput() GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return i.ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArgs) ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleSignalQueryOutput)
}

// GetSecurityMonitoringRulesRuleSignalQueryArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleSignalQueryArray and GetSecurityMonitoringRulesRuleSignalQueryArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleSignalQueryArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleSignalQueryArray{ GetSecurityMonitoringRulesRuleSignalQueryArgs{...} }
type GetSecurityMonitoringRulesRuleSignalQueryArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutput() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput
	ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleSignalQueryArrayOutput
}

type GetSecurityMonitoringRulesRuleSignalQueryArray []GetSecurityMonitoringRulesRuleSignalQueryInput

func (GetSecurityMonitoringRulesRuleSignalQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArray) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutput() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArray) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleSignalQueryArrayOutput)
}

type GetSecurityMonitoringRulesRuleSignalQueryOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleSignalQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) ToGetSecurityMonitoringRulesRuleSignalQueryOutput() GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return o
}

// The aggregation type. For Signal Correlation rules, it must be event_count.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Fields to correlate by.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) CorrelatedByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) []string { return v.CorrelatedByFields }).(pulumi.StringArrayOutput)
}

// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) CorrelatedQueryIndex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.CorrelatedQueryIndex }).(pulumi.StringPtrOutput)
}

// Default Rule ID of the signal to correlate. This value is READ-ONLY.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) DefaultRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.DefaultRuleId }).(pulumi.StringPtrOutput)
}

// Name of the query. Not compatible with `newValue` aggregations.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule ID of the signal to correlate.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) string { return v.RuleId }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleSignalQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutput() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleSignalQuery {
		return vs[0].([]GetSecurityMonitoringRulesRuleSignalQuery)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleSignalQueryOutput)
}

type GetSecurityMonitoringRulesRuleThirdPartyCase struct {
	// Name of the case.
	Name *string `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications []string `pulumi:"notifications"`
	// A query to associate a third-party event to this case.
	Query *string `pulumi:"query"`
	// Severity of the Security Signal.
	Status string `pulumi:"status"`
}

// GetSecurityMonitoringRulesRuleThirdPartyCaseInput is an input type that accepts GetSecurityMonitoringRulesRuleThirdPartyCaseArgs and GetSecurityMonitoringRulesRuleThirdPartyCaseOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleThirdPartyCaseInput` via:
//
//	GetSecurityMonitoringRulesRuleThirdPartyCaseArgs{...}
type GetSecurityMonitoringRulesRuleThirdPartyCaseInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseOutput
	ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseArgs struct {
	// Name of the case.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications pulumi.StringArrayInput `pulumi:"notifications"`
	// A query to associate a third-party event to this case.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Severity of the Security Signal.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSecurityMonitoringRulesRuleThirdPartyCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArgs) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return i.ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArgs) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleThirdPartyCaseOutput)
}

// GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleThirdPartyCaseArray and GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleThirdPartyCaseArray{ GetSecurityMonitoringRulesRuleThirdPartyCaseArgs{...} }
type GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput
	ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseArray []GetSecurityMonitoringRulesRuleThirdPartyCaseInput

func (GetSecurityMonitoringRulesRuleThirdPartyCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArray) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArray) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput)
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return o
}

// Name of the case.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notification targets for each rule case.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) []string { return v.Notifications }).(pulumi.StringArrayOutput)
}

// A query to associate a third-party event to this case.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Severity of the Security Signal.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) string { return v.Status }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleThirdPartyCase {
		return vs[0].([]GetSecurityMonitoringRulesRuleThirdPartyCase)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleThirdPartyCaseOutput)
}

type GetSecurityMonitoringSuppressionsSuppression struct {
	DataExclusionQuery string `pulumi:"dataExclusionQuery"`
	Description        string `pulumi:"description"`
	Enabled            bool   `pulumi:"enabled"`
	ExpirationDate     string `pulumi:"expirationDate"`
	Id                 string `pulumi:"id"`
	Name               string `pulumi:"name"`
	RuleQuery          string `pulumi:"ruleQuery"`
	SuppressionQuery   string `pulumi:"suppressionQuery"`
}

// GetSecurityMonitoringSuppressionsSuppressionInput is an input type that accepts GetSecurityMonitoringSuppressionsSuppressionArgs and GetSecurityMonitoringSuppressionsSuppressionOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringSuppressionsSuppressionInput` via:
//
//	GetSecurityMonitoringSuppressionsSuppressionArgs{...}
type GetSecurityMonitoringSuppressionsSuppressionInput interface {
	pulumi.Input

	ToGetSecurityMonitoringSuppressionsSuppressionOutput() GetSecurityMonitoringSuppressionsSuppressionOutput
	ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(context.Context) GetSecurityMonitoringSuppressionsSuppressionOutput
}

type GetSecurityMonitoringSuppressionsSuppressionArgs struct {
	DataExclusionQuery pulumi.StringInput `pulumi:"dataExclusionQuery"`
	Description        pulumi.StringInput `pulumi:"description"`
	Enabled            pulumi.BoolInput   `pulumi:"enabled"`
	ExpirationDate     pulumi.StringInput `pulumi:"expirationDate"`
	Id                 pulumi.StringInput `pulumi:"id"`
	Name               pulumi.StringInput `pulumi:"name"`
	RuleQuery          pulumi.StringInput `pulumi:"ruleQuery"`
	SuppressionQuery   pulumi.StringInput `pulumi:"suppressionQuery"`
}

func (GetSecurityMonitoringSuppressionsSuppressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (i GetSecurityMonitoringSuppressionsSuppressionArgs) ToGetSecurityMonitoringSuppressionsSuppressionOutput() GetSecurityMonitoringSuppressionsSuppressionOutput {
	return i.ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringSuppressionsSuppressionArgs) ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringSuppressionsSuppressionOutput)
}

// GetSecurityMonitoringSuppressionsSuppressionArrayInput is an input type that accepts GetSecurityMonitoringSuppressionsSuppressionArray and GetSecurityMonitoringSuppressionsSuppressionArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringSuppressionsSuppressionArrayInput` via:
//
//	GetSecurityMonitoringSuppressionsSuppressionArray{ GetSecurityMonitoringSuppressionsSuppressionArgs{...} }
type GetSecurityMonitoringSuppressionsSuppressionArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringSuppressionsSuppressionArrayOutput() GetSecurityMonitoringSuppressionsSuppressionArrayOutput
	ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(context.Context) GetSecurityMonitoringSuppressionsSuppressionArrayOutput
}

type GetSecurityMonitoringSuppressionsSuppressionArray []GetSecurityMonitoringSuppressionsSuppressionInput

func (GetSecurityMonitoringSuppressionsSuppressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (i GetSecurityMonitoringSuppressionsSuppressionArray) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutput() GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return i.ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringSuppressionsSuppressionArray) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringSuppressionsSuppressionArrayOutput)
}

type GetSecurityMonitoringSuppressionsSuppressionOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringSuppressionsSuppressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) ToGetSecurityMonitoringSuppressionsSuppressionOutput() GetSecurityMonitoringSuppressionsSuppressionOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) DataExclusionQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.DataExclusionQuery }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) RuleQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.RuleQuery }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) SuppressionQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.SuppressionQuery }).(pulumi.StringOutput)
}

type GetSecurityMonitoringSuppressionsSuppressionArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringSuppressionsSuppressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (o GetSecurityMonitoringSuppressionsSuppressionArrayOutput) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutput() GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionArrayOutput) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringSuppressionsSuppressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringSuppressionsSuppression {
		return vs[0].([]GetSecurityMonitoringSuppressionsSuppression)[vs[1].(int)]
	}).(GetSecurityMonitoringSuppressionsSuppressionOutput)
}

type GetServiceLevelObjectiveQuery struct {
	// The sum of the `total` events.
	Denominator string `pulumi:"denominator"`
	// The sum of all the `good` events.
	Numerator string `pulumi:"numerator"`
}

// GetServiceLevelObjectiveQueryInput is an input type that accepts GetServiceLevelObjectiveQueryArgs and GetServiceLevelObjectiveQueryOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectiveQueryInput` via:
//
//	GetServiceLevelObjectiveQueryArgs{...}
type GetServiceLevelObjectiveQueryInput interface {
	pulumi.Input

	ToGetServiceLevelObjectiveQueryOutput() GetServiceLevelObjectiveQueryOutput
	ToGetServiceLevelObjectiveQueryOutputWithContext(context.Context) GetServiceLevelObjectiveQueryOutput
}

type GetServiceLevelObjectiveQueryArgs struct {
	// The sum of the `total` events.
	Denominator pulumi.StringInput `pulumi:"denominator"`
	// The sum of all the `good` events.
	Numerator pulumi.StringInput `pulumi:"numerator"`
}

func (GetServiceLevelObjectiveQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (i GetServiceLevelObjectiveQueryArgs) ToGetServiceLevelObjectiveQueryOutput() GetServiceLevelObjectiveQueryOutput {
	return i.ToGetServiceLevelObjectiveQueryOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectiveQueryArgs) ToGetServiceLevelObjectiveQueryOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectiveQueryOutput)
}

// GetServiceLevelObjectiveQueryArrayInput is an input type that accepts GetServiceLevelObjectiveQueryArray and GetServiceLevelObjectiveQueryArrayOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectiveQueryArrayInput` via:
//
//	GetServiceLevelObjectiveQueryArray{ GetServiceLevelObjectiveQueryArgs{...} }
type GetServiceLevelObjectiveQueryArrayInput interface {
	pulumi.Input

	ToGetServiceLevelObjectiveQueryArrayOutput() GetServiceLevelObjectiveQueryArrayOutput
	ToGetServiceLevelObjectiveQueryArrayOutputWithContext(context.Context) GetServiceLevelObjectiveQueryArrayOutput
}

type GetServiceLevelObjectiveQueryArray []GetServiceLevelObjectiveQueryInput

func (GetServiceLevelObjectiveQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (i GetServiceLevelObjectiveQueryArray) ToGetServiceLevelObjectiveQueryArrayOutput() GetServiceLevelObjectiveQueryArrayOutput {
	return i.ToGetServiceLevelObjectiveQueryArrayOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectiveQueryArray) ToGetServiceLevelObjectiveQueryArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectiveQueryArrayOutput)
}

type GetServiceLevelObjectiveQueryOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectiveQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (o GetServiceLevelObjectiveQueryOutput) ToGetServiceLevelObjectiveQueryOutput() GetServiceLevelObjectiveQueryOutput {
	return o
}

func (o GetServiceLevelObjectiveQueryOutput) ToGetServiceLevelObjectiveQueryOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryOutput {
	return o
}

// The sum of the `total` events.
func (o GetServiceLevelObjectiveQueryOutput) Denominator() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectiveQuery) string { return v.Denominator }).(pulumi.StringOutput)
}

// The sum of all the `good` events.
func (o GetServiceLevelObjectiveQueryOutput) Numerator() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectiveQuery) string { return v.Numerator }).(pulumi.StringOutput)
}

type GetServiceLevelObjectiveQueryArrayOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectiveQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (o GetServiceLevelObjectiveQueryArrayOutput) ToGetServiceLevelObjectiveQueryArrayOutput() GetServiceLevelObjectiveQueryArrayOutput {
	return o
}

func (o GetServiceLevelObjectiveQueryArrayOutput) ToGetServiceLevelObjectiveQueryArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryArrayOutput {
	return o
}

func (o GetServiceLevelObjectiveQueryArrayOutput) Index(i pulumi.IntInput) GetServiceLevelObjectiveQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceLevelObjectiveQuery {
		return vs[0].([]GetServiceLevelObjectiveQuery)[vs[1].(int)]
	}).(GetServiceLevelObjectiveQueryOutput)
}

type GetServiceLevelObjectivesSlo struct {
	// ID of the Datadog service level objective
	Id string `pulumi:"id"`
	// Name of the Datadog service level objective
	Name string `pulumi:"name"`
	// The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.
	Type string `pulumi:"type"`
}

// GetServiceLevelObjectivesSloInput is an input type that accepts GetServiceLevelObjectivesSloArgs and GetServiceLevelObjectivesSloOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectivesSloInput` via:
//
//	GetServiceLevelObjectivesSloArgs{...}
type GetServiceLevelObjectivesSloInput interface {
	pulumi.Input

	ToGetServiceLevelObjectivesSloOutput() GetServiceLevelObjectivesSloOutput
	ToGetServiceLevelObjectivesSloOutputWithContext(context.Context) GetServiceLevelObjectivesSloOutput
}

type GetServiceLevelObjectivesSloArgs struct {
	// ID of the Datadog service level objective
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the Datadog service level objective
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServiceLevelObjectivesSloArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (i GetServiceLevelObjectivesSloArgs) ToGetServiceLevelObjectivesSloOutput() GetServiceLevelObjectivesSloOutput {
	return i.ToGetServiceLevelObjectivesSloOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectivesSloArgs) ToGetServiceLevelObjectivesSloOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectivesSloOutput)
}

// GetServiceLevelObjectivesSloArrayInput is an input type that accepts GetServiceLevelObjectivesSloArray and GetServiceLevelObjectivesSloArrayOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectivesSloArrayInput` via:
//
//	GetServiceLevelObjectivesSloArray{ GetServiceLevelObjectivesSloArgs{...} }
type GetServiceLevelObjectivesSloArrayInput interface {
	pulumi.Input

	ToGetServiceLevelObjectivesSloArrayOutput() GetServiceLevelObjectivesSloArrayOutput
	ToGetServiceLevelObjectivesSloArrayOutputWithContext(context.Context) GetServiceLevelObjectivesSloArrayOutput
}

type GetServiceLevelObjectivesSloArray []GetServiceLevelObjectivesSloInput

func (GetServiceLevelObjectivesSloArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (i GetServiceLevelObjectivesSloArray) ToGetServiceLevelObjectivesSloArrayOutput() GetServiceLevelObjectivesSloArrayOutput {
	return i.ToGetServiceLevelObjectivesSloArrayOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectivesSloArray) ToGetServiceLevelObjectivesSloArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectivesSloArrayOutput)
}

type GetServiceLevelObjectivesSloOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectivesSloOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (o GetServiceLevelObjectivesSloOutput) ToGetServiceLevelObjectivesSloOutput() GetServiceLevelObjectivesSloOutput {
	return o
}

func (o GetServiceLevelObjectivesSloOutput) ToGetServiceLevelObjectivesSloOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloOutput {
	return o
}

// ID of the Datadog service level objective
func (o GetServiceLevelObjectivesSloOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectivesSlo) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Datadog service level objective
func (o GetServiceLevelObjectivesSloOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectivesSlo) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.
func (o GetServiceLevelObjectivesSloOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectivesSlo) string { return v.Type }).(pulumi.StringOutput)
}

type GetServiceLevelObjectivesSloArrayOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectivesSloArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (o GetServiceLevelObjectivesSloArrayOutput) ToGetServiceLevelObjectivesSloArrayOutput() GetServiceLevelObjectivesSloArrayOutput {
	return o
}

func (o GetServiceLevelObjectivesSloArrayOutput) ToGetServiceLevelObjectivesSloArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloArrayOutput {
	return o
}

func (o GetServiceLevelObjectivesSloArrayOutput) Index(i pulumi.IntInput) GetServiceLevelObjectivesSloOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceLevelObjectivesSlo {
		return vs[0].([]GetServiceLevelObjectivesSlo)[vs[1].(int)]
	}).(GetServiceLevelObjectivesSloOutput)
}

type GetTeamMembershipsTeamMembership struct {
	Id     string `pulumi:"id"`
	Role   string `pulumi:"role"`
	TeamId string `pulumi:"teamId"`
	UserId string `pulumi:"userId"`
}

// GetTeamMembershipsTeamMembershipInput is an input type that accepts GetTeamMembershipsTeamMembershipArgs and GetTeamMembershipsTeamMembershipOutput values.
// You can construct a concrete instance of `GetTeamMembershipsTeamMembershipInput` via:
//
//	GetTeamMembershipsTeamMembershipArgs{...}
type GetTeamMembershipsTeamMembershipInput interface {
	pulumi.Input

	ToGetTeamMembershipsTeamMembershipOutput() GetTeamMembershipsTeamMembershipOutput
	ToGetTeamMembershipsTeamMembershipOutputWithContext(context.Context) GetTeamMembershipsTeamMembershipOutput
}

type GetTeamMembershipsTeamMembershipArgs struct {
	Id     pulumi.StringInput `pulumi:"id"`
	Role   pulumi.StringInput `pulumi:"role"`
	TeamId pulumi.StringInput `pulumi:"teamId"`
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetTeamMembershipsTeamMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (i GetTeamMembershipsTeamMembershipArgs) ToGetTeamMembershipsTeamMembershipOutput() GetTeamMembershipsTeamMembershipOutput {
	return i.ToGetTeamMembershipsTeamMembershipOutputWithContext(context.Background())
}

func (i GetTeamMembershipsTeamMembershipArgs) ToGetTeamMembershipsTeamMembershipOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamMembershipsTeamMembershipOutput)
}

// GetTeamMembershipsTeamMembershipArrayInput is an input type that accepts GetTeamMembershipsTeamMembershipArray and GetTeamMembershipsTeamMembershipArrayOutput values.
// You can construct a concrete instance of `GetTeamMembershipsTeamMembershipArrayInput` via:
//
//	GetTeamMembershipsTeamMembershipArray{ GetTeamMembershipsTeamMembershipArgs{...} }
type GetTeamMembershipsTeamMembershipArrayInput interface {
	pulumi.Input

	ToGetTeamMembershipsTeamMembershipArrayOutput() GetTeamMembershipsTeamMembershipArrayOutput
	ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(context.Context) GetTeamMembershipsTeamMembershipArrayOutput
}

type GetTeamMembershipsTeamMembershipArray []GetTeamMembershipsTeamMembershipInput

func (GetTeamMembershipsTeamMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (i GetTeamMembershipsTeamMembershipArray) ToGetTeamMembershipsTeamMembershipArrayOutput() GetTeamMembershipsTeamMembershipArrayOutput {
	return i.ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(context.Background())
}

func (i GetTeamMembershipsTeamMembershipArray) ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamMembershipsTeamMembershipArrayOutput)
}

type GetTeamMembershipsTeamMembershipOutput struct{ *pulumi.OutputState }

func (GetTeamMembershipsTeamMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (o GetTeamMembershipsTeamMembershipOutput) ToGetTeamMembershipsTeamMembershipOutput() GetTeamMembershipsTeamMembershipOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipOutput) ToGetTeamMembershipsTeamMembershipOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTeamMembershipsTeamMembershipOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.Role }).(pulumi.StringOutput)
}

func (o GetTeamMembershipsTeamMembershipOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.TeamId }).(pulumi.StringOutput)
}

func (o GetTeamMembershipsTeamMembershipOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.UserId }).(pulumi.StringOutput)
}

type GetTeamMembershipsTeamMembershipArrayOutput struct{ *pulumi.OutputState }

func (GetTeamMembershipsTeamMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (o GetTeamMembershipsTeamMembershipArrayOutput) ToGetTeamMembershipsTeamMembershipArrayOutput() GetTeamMembershipsTeamMembershipArrayOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipArrayOutput) ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipArrayOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipArrayOutput) Index(i pulumi.IntInput) GetTeamMembershipsTeamMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTeamMembershipsTeamMembership {
		return vs[0].([]GetTeamMembershipsTeamMembership)[vs[1].(int)]
	}).(GetTeamMembershipsTeamMembershipOutput)
}

type GetUsersUser struct {
	Email string `pulumi:"email"`
	Id    string `pulumi:"id"`
	Name  string `pulumi:"name"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//	GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	Email pulumi.StringInput `pulumi:"email"`
	Id    pulumi.StringInput `pulumi:"id"`
	Name  pulumi.StringInput `pulumi:"name"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//	GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Name }).(pulumi.StringOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSlicePtrInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveThresholdInput)(nil)).Elem(), ServiceLevelObjectiveThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveThresholdArrayInput)(nil)).Elem(), ServiceLevelObjectiveThresholdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricComputeInput)(nil)).Elem(), SpansMetricComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricComputePtrInput)(nil)).Elem(), SpansMetricComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricFilterInput)(nil)).Elem(), SpansMetricFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricFilterPtrInput)(nil)).Elem(), SpansMetricFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricGroupByInput)(nil)).Elem(), SpansMetricGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricGroupByArrayInput)(nil)).Elem(), SpansMetricGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableOptionsInput)(nil)).Elem(), SyntheticsGlobalVariableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableOptionsPtrInput)(nil)).Elem(), SyntheticsGlobalVariableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableOptionsTotpParametersInput)(nil)).Elem(), SyntheticsGlobalVariableOptionsTotpParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableOptionsTotpParametersPtrInput)(nil)).Elem(), SyntheticsGlobalVariableOptionsTotpParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsInput)(nil)).Elem(), SyntheticsGlobalVariableParseTestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsPtrInput)(nil)).Elem(), SyntheticsGlobalVariableParseTestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsParserInput)(nil)).Elem(), SyntheticsGlobalVariableParseTestOptionsParserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsParserPtrInput)(nil)).Elem(), SyntheticsGlobalVariableParseTestOptionsParserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsPrivateLocationMetadataInput)(nil)).Elem(), SyntheticsPrivateLocationMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsPrivateLocationMetadataPtrInput)(nil)).Elem(), SyntheticsPrivateLocationMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepInput)(nil)).Elem(), SyntheticsTestApiStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepArrayInput)(nil)).Elem(), SyntheticsTestApiStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionInput)(nil)).Elem(), SyntheticsTestApiStepAssertionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionArrayInput)(nil)).Elem(), SyntheticsTestApiStepAssertionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonpathInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetjsonpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonpathPtrInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetjsonpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonschemaInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetjsonschemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetjsonschemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetxpathInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetxpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetxpathPtrInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetxpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepExtractedValueInput)(nil)).Elem(), SyntheticsTestApiStepExtractedValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepExtractedValueArrayInput)(nil)).Elem(), SyntheticsTestApiStepExtractedValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepExtractedValueParserInput)(nil)).Elem(), SyntheticsTestApiStepExtractedValueParserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestBasicauthInput)(nil)).Elem(), SyntheticsTestApiStepRequestBasicauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestBasicauthPtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestBasicauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificatePtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateCertInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateCertPtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateKeyInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateKeyPtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestDefinitionInput)(nil)).Elem(), SyntheticsTestApiStepRequestDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestDefinitionPtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestFileInput)(nil)).Elem(), SyntheticsTestApiStepRequestFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestFileArrayInput)(nil)).Elem(), SyntheticsTestApiStepRequestFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestProxyInput)(nil)).Elem(), SyntheticsTestApiStepRequestProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestProxyPtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRetryInput)(nil)).Elem(), SyntheticsTestApiStepRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRetryPtrInput)(nil)).Elem(), SyntheticsTestApiStepRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionInput)(nil)).Elem(), SyntheticsTestAssertionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionArrayInput)(nil)).Elem(), SyntheticsTestAssertionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetjsonpathInput)(nil)).Elem(), SyntheticsTestAssertionTargetjsonpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetjsonpathPtrInput)(nil)).Elem(), SyntheticsTestAssertionTargetjsonpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetjsonschemaInput)(nil)).Elem(), SyntheticsTestAssertionTargetjsonschemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetjsonschemaPtrInput)(nil)).Elem(), SyntheticsTestAssertionTargetjsonschemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetxpathInput)(nil)).Elem(), SyntheticsTestAssertionTargetxpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetxpathPtrInput)(nil)).Elem(), SyntheticsTestAssertionTargetxpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepInput)(nil)).Elem(), SyntheticsTestBrowserStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepArrayInput)(nil)).Elem(), SyntheticsTestBrowserStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsElementUserLocatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsElementUserLocatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorValueInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsVariableInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsVariablePtrInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserVariableInput)(nil)).Elem(), SyntheticsTestBrowserVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserVariableArrayInput)(nil)).Elem(), SyntheticsTestBrowserVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestConfigVariableInput)(nil)).Elem(), SyntheticsTestConfigVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestConfigVariableArrayInput)(nil)).Elem(), SyntheticsTestConfigVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListInput)(nil)).Elem(), SyntheticsTestOptionsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListPtrInput)(nil)).Elem(), SyntheticsTestOptionsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListCiInput)(nil)).Elem(), SyntheticsTestOptionsListCiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListCiPtrInput)(nil)).Elem(), SyntheticsTestOptionsListCiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptionsInput)(nil)).Elem(), SyntheticsTestOptionsListMonitorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptionsPtrInput)(nil)).Elem(), SyntheticsTestOptionsListMonitorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRetryInput)(nil)).Elem(), SyntheticsTestOptionsListRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRetryPtrInput)(nil)).Elem(), SyntheticsTestOptionsListRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRumSettingsInput)(nil)).Elem(), SyntheticsTestOptionsListRumSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRumSettingsPtrInput)(nil)).Elem(), SyntheticsTestOptionsListRumSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingPtrInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframeInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingTimeframeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframeArrayInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingTimeframeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestBasicauthInput)(nil)).Elem(), SyntheticsTestRequestBasicauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestBasicauthPtrInput)(nil)).Elem(), SyntheticsTestRequestBasicauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificatePtrInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateCertInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateCertPtrInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateKeyInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateKeyPtrInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestDefinitionInput)(nil)).Elem(), SyntheticsTestRequestDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestDefinitionPtrInput)(nil)).Elem(), SyntheticsTestRequestDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestFileInput)(nil)).Elem(), SyntheticsTestRequestFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestFileArrayInput)(nil)).Elem(), SyntheticsTestRequestFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestProxyInput)(nil)).Elem(), SyntheticsTestRequestProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestProxyPtrInput)(nil)).Elem(), SyntheticsTestRequestProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRuleInput)(nil)).Elem(), GetCloudWorkloadSecurityAgentRulesAgentRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput)(nil)).Elem(), GetCloudWorkloadSecurityAgentRulesAgentRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRuleInput)(nil)).Elem(), GetCsmThreatsAgentRulesAgentRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRuleArrayInput)(nil)).Elem(), GetCsmThreatsAgentRulesAgentRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListInput)(nil)).Elem(), GetHostsHostListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListArrayInput)(nil)).Elem(), GetHostsHostListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListMetaInput)(nil)).Elem(), GetHostsHostListMetaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListMetricsInput)(nil)).Elem(), GetHostsHostListMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexInput)(nil)).Elem(), GetLogsIndexesLogsIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitResetInput)(nil)).Elem(), GetLogsIndexesLogsIndexDailyLimitResetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitResetArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexDailyLimitResetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilterInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexFilterInput)(nil)).Elem(), GetLogsIndexesLogsIndexFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexFilterArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineArrayInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilterInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilterArrayInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyInput)(nil)).Elem(), GetMonitorConfigPoliciesMonitorConfigPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput)(nil)).Elem(), GetMonitorConfigPoliciesMonitorConfigPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput)(nil)).Elem(), GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdInput)(nil)).Elem(), GetMonitorMonitorThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdArrayInput)(nil)).Elem(), GetMonitorMonitorThresholdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdWindowInput)(nil)).Elem(), GetMonitorMonitorThresholdWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdWindowArrayInput)(nil)).Elem(), GetMonitorMonitorThresholdWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionInput)(nil)).Elem(), GetMonitorSchedulingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrenceInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleRecurrenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindowInput)(nil)).Elem(), GetMonitorSchedulingOptionEvaluationWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindowArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionEvaluationWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorInput)(nil)).Elem(), GetMonitorsMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorArrayInput)(nil)).Elem(), GetMonitorsMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoleUsersRoleUserInput)(nil)).Elem(), GetRoleUsersRoleUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoleUsersRoleUserArrayInput)(nil)).Elem(), GetRoleUsersRoleUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesRoleInput)(nil)).Elem(), GetRolesRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesRoleArrayInput)(nil)).Elem(), GetRolesRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterArrayInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilterInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterExclusionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterExclusionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilterInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilterArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRuleInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryAgentRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryAgentRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQueryInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleSignalQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQueryArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleSignalQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCaseInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleThirdPartyCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleThirdPartyCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppressionInput)(nil)).Elem(), GetSecurityMonitoringSuppressionsSuppressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppressionArrayInput)(nil)).Elem(), GetSecurityMonitoringSuppressionsSuppressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectiveQueryInput)(nil)).Elem(), GetServiceLevelObjectiveQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectiveQueryArrayInput)(nil)).Elem(), GetServiceLevelObjectiveQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectivesSloInput)(nil)).Elem(), GetServiceLevelObjectivesSloArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectivesSloArrayInput)(nil)).Elem(), GetServiceLevelObjectivesSloArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamMembershipsTeamMembershipInput)(nil)).Elem(), GetTeamMembershipsTeamMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamMembershipsTeamMembershipArrayInput)(nil)).Elem(), GetTeamMembershipsTeamMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveThresholdOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveThresholdArrayOutput{})
	pulumi.RegisterOutputType(SpansMetricComputeOutput{})
	pulumi.RegisterOutputType(SpansMetricComputePtrOutput{})
	pulumi.RegisterOutputType(SpansMetricFilterOutput{})
	pulumi.RegisterOutputType(SpansMetricFilterPtrOutput{})
	pulumi.RegisterOutputType(SpansMetricGroupByOutput{})
	pulumi.RegisterOutputType(SpansMetricGroupByArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableOptionsOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableOptionsPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableOptionsTotpParametersOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableOptionsTotpParametersPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableParseTestOptionsOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableParseTestOptionsPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableParseTestOptionsParserOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableParseTestOptionsParserPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsPrivateLocationMetadataOutput{})
	pulumi.RegisterOutputType(SyntheticsPrivateLocationMetadataPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetjsonpathOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetjsonschemaOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetxpathOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetxpathPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepExtractedValueOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepExtractedValueArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepExtractedValueParserOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestBasicauthOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestBasicauthPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificateOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificatePtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificateCertOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificateCertPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificateKeyOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestDefinitionOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestDefinitionPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestFileOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestFileArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestProxyOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestProxyPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRetryOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRetryPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetjsonpathOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetjsonpathPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetjsonschemaOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetjsonschemaPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetxpathOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetxpathPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsElementUserLocatorOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsVariableOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsVariablePtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserVariableOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserVariableArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestConfigVariableOutput{})
	pulumi.RegisterOutputType(SyntheticsTestConfigVariableArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListCiOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListCiPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListMonitorOptionsOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListMonitorOptionsPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRetryOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRetryPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRumSettingsOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRumSettingsPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingTimeframeOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestBasicauthOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestBasicauthPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificatePtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateCertOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateCertPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateKeyOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateKeyPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestDefinitionOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestDefinitionPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestFileOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestFileArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestProxyOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestProxyPtrOutput{})
	pulumi.RegisterOutputType(GetCloudWorkloadSecurityAgentRulesAgentRuleOutput{})
	pulumi.RegisterOutputType(GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput{})
	pulumi.RegisterOutputType(GetCsmThreatsAgentRulesAgentRuleOutput{})
	pulumi.RegisterOutputType(GetCsmThreatsAgentRulesAgentRuleArrayOutput{})
	pulumi.RegisterOutputType(GetHostsHostListOutput{})
	pulumi.RegisterOutputType(GetHostsHostListArrayOutput{})
	pulumi.RegisterOutputType(GetHostsHostListMetaOutput{})
	pulumi.RegisterOutputType(GetHostsHostListMetricsOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexDailyLimitResetOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexDailyLimitResetArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterFilterOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexFilterOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineArrayOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineFilterOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigPoliciesMonitorConfigPolicyOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdWindowOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdWindowArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionEvaluationWindowOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionEvaluationWindowArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorArrayOutput{})
	pulumi.RegisterOutputType(GetRoleUsersRoleUserOutput{})
	pulumi.RegisterOutputType(GetRoleUsersRoleUserArrayOutput{})
	pulumi.RegisterOutputType(GetRolesRoleOutput{})
	pulumi.RegisterOutputType(GetRolesRoleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterExclusionFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleCaseOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleCaseArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryAgentRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleSignalQueryOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleSignalQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleThirdPartyCaseOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringSuppressionsSuppressionOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringSuppressionsSuppressionArrayOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectiveQueryOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectiveQueryArrayOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectivesSloOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectivesSloArrayOutput{})
	pulumi.RegisterOutputType(GetTeamMembershipsTeamMembershipOutput{})
	pulumi.RegisterOutputType(GetTeamMembershipsTeamMembershipArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
}
