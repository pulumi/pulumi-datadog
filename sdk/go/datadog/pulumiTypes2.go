// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies []PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy `pulumi:"groupBies"`
	// The name of the index to query.
	Index string `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes []PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery *string `pulumi:"searchQuery"`
}

// PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrInput `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayInput `pulumi:"groupBies"`
	// The name of the index to query.
	Index pulumi.StringInput `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayInput `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery pulumi.StringPtrInput `pulumi:"searchQuery"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) *PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput) ComputeQuery() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery {
		return v.ComputeQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput) GroupBies() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) []PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy {
		return v.GroupBies
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) string { return v.Index }).(pulumi.StringOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput) MultiComputes() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) []PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute {
		return v.MultiComputes
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) *string { return v.SearchQuery }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput) ComputeQuery() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery {
		if v == nil {
			return nil
		}
		return v.ComputeQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput) GroupBies() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) []PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput) MultiComputes() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) []PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute {
		if v == nil {
			return nil
		}
		return v.MultiComputes
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQuery) *string {
		if v == nil {
			return nil
		}
		return v.SearchQuery
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery) *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery) string {
		return v.Aggregation
	}).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQuery) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy struct {
	// The facet name.
	Facet *string `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit *int `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery `pulumi:"sortQuery"`
}

// PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArgs and PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArgs struct {
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrInput `pulumi:"sortQuery"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput)
}

// PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArray and PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArray{ PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArgs{...} }
type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArray []PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByInput

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArray) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArray) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput {
	return o
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// The maximum number of items in the group.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// A list of exactly one element describing the sort query to use.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput) SortQuery() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy) *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery {
		return v.SortQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy {
		return vs[0].([]PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBy)[vs[1].(int)]
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order string `pulumi:"order"`
}

// PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order pulumi.StringInput `pulumi:"order"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery) *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery) string {
		return v.Aggregation
	}).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery) string { return v.Order }).(pulumi.StringOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArgs and PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArgs) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput)
}

// PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArray and PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArray{ PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArgs{...} }
type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArray []PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeInput

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArray) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArray) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput {
	return o
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute) string {
		return v.Aggregation
	}).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute {
		return vs[0].([]PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiCompute)[vs[1].(int)]
	}).(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestProcessQuery struct {
	// A list of processes.
	FilterBies []string `pulumi:"filterBies"`
	// The max number of items in the filter list.
	Limit *int `pulumi:"limit"`
	// Your chosen metric.
	Metric string `pulumi:"metric"`
	// Your chosen search term.
	SearchBy *string `pulumi:"searchBy"`
}

// PowerpackWidgetTimeseriesDefinitionRequestProcessQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestProcessQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestProcessQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs struct {
	// A list of processes.
	FilterBies pulumi.StringArrayInput `pulumi:"filterBies"`
	// The max number of items in the filter list.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Your chosen metric.
	Metric pulumi.StringInput `pulumi:"metric"`
	// Your chosen search term.
	SearchBy pulumi.StringPtrInput `pulumi:"searchBy"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestProcessQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestProcessQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestProcessQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestProcessQuery) *PowerpackWidgetTimeseriesDefinitionRequestProcessQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput)
}

// A list of processes.
func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput) FilterBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestProcessQuery) []string { return v.FilterBies }).(pulumi.StringArrayOutput)
}

// The max number of items in the filter list.
func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestProcessQuery) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// Your chosen metric.
func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestProcessQuery) string { return v.Metric }).(pulumi.StringOutput)
}

// Your chosen search term.
func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput) SearchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestProcessQuery) *string { return v.SearchBy }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestProcessQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestProcessQuery) PowerpackWidgetTimeseriesDefinitionRequestProcessQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestProcessQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput)
}

// A list of processes.
func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput) FilterBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestProcessQuery) []string {
		if v == nil {
			return nil
		}
		return v.FilterBies
	}).(pulumi.StringArrayOutput)
}

// The max number of items in the filter list.
func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestProcessQuery) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

// Your chosen metric.
func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestProcessQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Metric
	}).(pulumi.StringPtrOutput)
}

// Your chosen search term.
func (o PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput) SearchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.SearchBy
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQuery struct {
	// The APM Dependency Stats query using formulas and functions.
	ApmDependencyStatsQuery *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery `pulumi:"apmDependencyStatsQuery"`
	// The APM Resource Stats query using formulas and functions.
	ApmResourceStatsQuery *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery `pulumi:"apmResourceStatsQuery"`
	// The Cloud Cost query using formulas and functions.
	CloudCostQuery *PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery `pulumi:"cloudCostQuery"`
	// A timeseries formula and functions events query.
	EventQuery *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery `pulumi:"eventQuery"`
	// A timeseries formula and functions metrics query.
	MetricQuery *PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery `pulumi:"metricQuery"`
	// The process query using formulas and functions.
	ProcessQuery *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery `pulumi:"processQuery"`
	// The SLO query using formulas and functions.
	SloQuery *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery `pulumi:"sloQuery"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryArgs struct {
	// The APM Dependency Stats query using formulas and functions.
	ApmDependencyStatsQuery PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrInput `pulumi:"apmDependencyStatsQuery"`
	// The APM Resource Stats query using formulas and functions.
	ApmResourceStatsQuery PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrInput `pulumi:"apmResourceStatsQuery"`
	// The Cloud Cost query using formulas and functions.
	CloudCostQuery PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrInput `pulumi:"cloudCostQuery"`
	// A timeseries formula and functions events query.
	EventQuery PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrInput `pulumi:"eventQuery"`
	// A timeseries formula and functions metrics query.
	MetricQuery PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrInput `pulumi:"metricQuery"`
	// The process query using formulas and functions.
	ProcessQuery PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrInput `pulumi:"processQuery"`
	// The SLO query using formulas and functions.
	SloQuery PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrInput `pulumi:"sloQuery"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryOutput)
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryArrayInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryArray and PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryArrayInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryArray{ PowerpackWidgetTimeseriesDefinitionRequestQueryArgs{...} }
type PowerpackWidgetTimeseriesDefinitionRequestQueryArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryArray []PowerpackWidgetTimeseriesDefinitionRequestQueryInput

func (PowerpackWidgetTimeseriesDefinitionRequestQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryArray) ToPowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryArray) ToPowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryOutput {
	return o
}

// The APM Dependency Stats query using formulas and functions.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryOutput) ApmDependencyStatsQuery() PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery {
		return v.ApmDependencyStatsQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput)
}

// The APM Resource Stats query using formulas and functions.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryOutput) ApmResourceStatsQuery() PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery {
		return v.ApmResourceStatsQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput)
}

// The Cloud Cost query using formulas and functions.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryOutput) CloudCostQuery() PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery {
		return v.CloudCostQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput)
}

// A timeseries formula and functions events query.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryOutput) EventQuery() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery {
		return v.EventQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput)
}

// A timeseries formula and functions metrics query.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryOutput) MetricQuery() PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery {
		return v.MetricQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput)
}

// The process query using formulas and functions.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryOutput) ProcessQuery() PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery {
		return v.ProcessQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput)
}

// The SLO query using formulas and functions.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryOutput) SloQuery() PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuery) *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery {
		return v.SloQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTimeseriesDefinitionRequestQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTimeseriesDefinitionRequestQuery {
		return vs[0].([]PowerpackWidgetTimeseriesDefinitionRequestQuery)[vs[1].(int)]
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
	DataSource string `pulumi:"dataSource"`
	// APM environment.
	Env string `pulumi:"env"`
	// Determines whether stats for upstream or downstream dependencies should be queried.
	IsUpstream *bool `pulumi:"isUpstream"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// Name of operation on service.
	OperationName string `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName *string `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue *string `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName string `pulumi:"resourceName"`
	// APM service.
	Service string `pulumi:"service"`
	// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
	Stat string `pulumi:"stat"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// APM environment.
	Env pulumi.StringInput `pulumi:"env"`
	// Determines whether stats for upstream or downstream dependencies should be queried.
	IsUpstream pulumi.BoolPtrInput `pulumi:"isUpstream"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of operation on service.
	OperationName pulumi.StringInput `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName pulumi.StringPtrInput `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue pulumi.StringPtrInput `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// APM service.
	Service pulumi.StringInput `pulumi:"service"`
	// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
	Stat pulumi.StringInput `pulumi:"stat"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) string {
		return v.DataSource
	}).(pulumi.StringOutput)
}

// APM environment.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) Env() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) string { return v.Env }).(pulumi.StringOutput)
}

// Determines whether stats for upstream or downstream dependencies should be queried.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) IsUpstream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *bool {
		return v.IsUpstream
	}).(pulumi.BoolPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) string { return v.Name }).(pulumi.StringOutput)
}

// Name of operation on service.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) OperationName() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) string {
		return v.OperationName
	}).(pulumi.StringOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) string {
		return v.ResourceName
	}).(pulumi.StringOutput)
}

// APM service.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) string {
		return v.Service
	}).(pulumi.StringOutput)
}

// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput) Stat() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) string { return v.Stat }).(pulumi.StringOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// APM environment.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Env() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(pulumi.StringPtrOutput)
}

// Determines whether stats for upstream or downstream dependencies should be queried.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) IsUpstream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpstream
	}).(pulumi.BoolPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of operation on service.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.OperationName
	}).(pulumi.StringPtrOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// APM service.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Stat
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
	DataSource string `pulumi:"dataSource"`
	// APM environment.
	Env string `pulumi:"env"`
	// Array of fields to group results by.
	GroupBies []string `pulumi:"groupBies"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// Name of operation on service.
	OperationName *string `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName *string `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue *string `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName *string `pulumi:"resourceName"`
	// APM service.
	Service string `pulumi:"service"`
	// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
	Stat string `pulumi:"stat"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// APM environment.
	Env pulumi.StringInput `pulumi:"env"`
	// Array of fields to group results by.
	GroupBies pulumi.StringArrayInput `pulumi:"groupBies"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of operation on service.
	OperationName pulumi.StringPtrInput `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName pulumi.StringPtrInput `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue pulumi.StringPtrInput `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// APM service.
	Service pulumi.StringInput `pulumi:"service"`
	// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
	Stat pulumi.StringInput `pulumi:"stat"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) string {
		return v.DataSource
	}).(pulumi.StringOutput)
}

// APM environment.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) Env() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) string { return v.Env }).(pulumi.StringOutput)
}

// Array of fields to group results by.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) []string {
		return v.GroupBies
	}).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) string { return v.Name }).(pulumi.StringOutput)
}

// Name of operation on service.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.OperationName
	}).(pulumi.StringPtrOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// APM service.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) string { return v.Service }).(pulumi.StringOutput)
}

// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput) Stat() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) string { return v.Stat }).(pulumi.StringOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// APM environment.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Env() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(pulumi.StringPtrOutput)
}

// Array of fields to group results by.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) []string {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of operation on service.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.OperationName
	}).(pulumi.StringPtrOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// APM service.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Stat
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery struct {
	// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
	Aggregator *string `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for cloud cost queries. Valid values are `cloudCost`.
	DataSource string `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name string `pulumi:"name"`
	// The cloud cost query definition.
	Query string `pulumi:"query"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs struct {
	// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
	Aggregator pulumi.StringPtrInput `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for cloud cost queries. Valid values are `cloudCost`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The cloud cost query definition.
	Query pulumi.StringInput `pulumi:"query"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput)
}

// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) *string { return v.Aggregator }).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for cloud cost queries. Valid values are `cloudCost`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The cloud cost query definition.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) string { return v.Query }).(pulumi.StringOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput)
}

// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return v.Aggregator
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for cloud cost queries. Valid values are `cloudCost`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The cloud cost query definition.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery struct {
	// The compute options.
	Computes []PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute `pulumi:"computes"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
	DataSource string `pulumi:"dataSource"`
	// Group by options.
	GroupBies []PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy `pulumi:"groupBies"`
	// An array of index names to query in the stream.
	Indexes []string `pulumi:"indexes"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// The search options.
	Search *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch `pulumi:"search"`
	// Storage location (private beta).
	Storage *string `pulumi:"storage"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs struct {
	// The compute options.
	Computes PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayInput `pulumi:"computes"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Group by options.
	GroupBies PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayInput `pulumi:"groupBies"`
	// An array of index names to query in the stream.
	Indexes pulumi.StringArrayInput `pulumi:"indexes"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The search options.
	Search PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrInput `pulumi:"search"`
	// Storage location (private beta).
	Storage pulumi.StringPtrInput `pulumi:"storage"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput)
}

// The compute options.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) Computes() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) []PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute {
		return v.Computes
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// Group by options.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) GroupBies() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) []PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy {
		return v.GroupBies
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput)
}

// An array of index names to query in the stream.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) Indexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) []string { return v.Indexes }).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The search options.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) Search() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch {
		return v.Search
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput)
}

// Storage location (private beta).
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput) Storage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) *string { return v.Storage }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput)
}

// The compute options.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) Computes() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) []PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute {
		if v == nil {
			return nil
		}
		return v.Computes
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Group by options.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) GroupBies() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) []PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput)
}

// An array of index names to query in the stream.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) Indexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) []string {
		if v == nil {
			return nil
		}
		return v.Indexes
	}).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The search options.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) Search() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch {
		if v == nil {
			return nil
		}
		return v.Search
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput)
}

// Storage location (private beta).
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput) Storage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return v.Storage
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute struct {
	// The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation string `pulumi:"aggregation"`
	// A time interval in milliseconds.
	Interval *int `pulumi:"interval"`
	// The measurable attribute to compute.
	Metric *string `pulumi:"metric"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArgs and PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArgs struct {
	// The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// A time interval in milliseconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The measurable attribute to compute.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput)
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArray and PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArray{ PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArgs{...} }
type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArray []PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeInput

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArray) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArray) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput {
	return o
}

// The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute) string { return v.Aggregation }).(pulumi.StringOutput)
}

// A time interval in milliseconds.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The measurable attribute to compute.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute {
		return vs[0].([]PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryCompute)[vs[1].(int)]
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy struct {
	// The event facet.
	Facet string `pulumi:"facet"`
	// The number of groups to return.
	Limit *int `pulumi:"limit"`
	// The options for sorting group by results.
	Sort *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort `pulumi:"sort"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArgs and PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArgs struct {
	// The event facet.
	Facet pulumi.StringInput `pulumi:"facet"`
	// The number of groups to return.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// The options for sorting group by results.
	Sort PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrInput `pulumi:"sort"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput)
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArray and PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArray{ PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArgs{...} }
type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArray []PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByInput

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArray) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArray) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput {
	return o
}

// The event facet.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput) Facet() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy) string { return v.Facet }).(pulumi.StringOutput)
}

// The number of groups to return.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// The options for sorting group by results.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput) Sort() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy) *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort {
		return v.Sort
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy {
		return vs[0].([]PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBy)[vs[1].(int)]
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort struct {
	// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation string `pulumi:"aggregation"`
	// The metric used for sorting group by results.
	Metric *string `pulumi:"metric"`
	// Direction of sort. Valid values are `asc`, `desc`.
	Order *string `pulumi:"order"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs and PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs struct {
	// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The metric used for sorting group by results.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Direction of sort. Valid values are `asc`, `desc`.
	Order pulumi.StringPtrInput `pulumi:"order"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput).ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs, PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtr and PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrType PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs

func PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtr(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort) *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput)
}

// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort) string {
		return v.Aggregation
	}).(pulumi.StringOutput)
}

// The metric used for sorting group by results.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Direction of sort. Valid values are `asc`, `desc`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort) *string { return v.Order }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput)
}

// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The metric used for sorting group by results.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort) *string {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(pulumi.StringPtrOutput)
}

// Direction of sort. Valid values are `asc`, `desc`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySort) *string {
		if v == nil {
			return nil
		}
		return v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch struct {
	// The events search string.
	Query string `pulumi:"query"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs and PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs struct {
	// The events search string.
	Query pulumi.StringInput `pulumi:"query"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput).ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs, PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtr and PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrType PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs

func PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtr(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch) *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput)
}

// The events search string.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch) string { return v.Query }).(pulumi.StringOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch) PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput)
}

// The events search string.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearch) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator *string `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for metrics queries. Defaults to `"metrics"`.
	DataSource *string `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name string `pulumi:"name"`
	// The metrics query definition.
	Query string `pulumi:"query"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator pulumi.StringPtrInput `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for metrics queries. Defaults to `"metrics"`.
	DataSource pulumi.StringPtrInput `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The metrics query definition.
	Query pulumi.StringInput `pulumi:"query"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) *string { return v.Aggregator }).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for metrics queries. Defaults to `"metrics"`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) *string { return v.DataSource }).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The metrics query definition.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) string { return v.Query }).(pulumi.StringOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return v.Aggregator
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for metrics queries. Defaults to `"metrics"`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The metrics query definition.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator *string `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for process queries. Valid values are `process`, `container`.
	DataSource string `pulumi:"dataSource"`
	// Whether to normalize the CPU percentages.
	IsNormalizedCpu *bool `pulumi:"isNormalizedCpu"`
	// The number of hits to return.
	Limit *int `pulumi:"limit"`
	// The process metric name.
	Metric string `pulumi:"metric"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
	Sort *string `pulumi:"sort"`
	// An array of tags to filter by.
	TagFilters []string `pulumi:"tagFilters"`
	// The text to use as a filter.
	TextFilter *string `pulumi:"textFilter"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator pulumi.StringPtrInput `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for process queries. Valid values are `process`, `container`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Whether to normalize the CPU percentages.
	IsNormalizedCpu pulumi.BoolPtrInput `pulumi:"isNormalizedCpu"`
	// The number of hits to return.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// The process metric name.
	Metric pulumi.StringInput `pulumi:"metric"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
	Sort pulumi.StringPtrInput `pulumi:"sort"`
	// An array of tags to filter by.
	TagFilters pulumi.StringArrayInput `pulumi:"tagFilters"`
	// The text to use as a filter.
	TextFilter pulumi.StringPtrInput `pulumi:"textFilter"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *string { return v.Aggregator }).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for process queries. Valid values are `process`, `container`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// Whether to normalize the CPU percentages.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) IsNormalizedCpu() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *bool { return v.IsNormalizedCpu }).(pulumi.BoolPtrOutput)
}

// The number of hits to return.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// The process metric name.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) string { return v.Metric }).(pulumi.StringOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) Sort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *string { return v.Sort }).(pulumi.StringPtrOutput)
}

// An array of tags to filter by.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) []string { return v.TagFilters }).(pulumi.StringArrayOutput)
}

// The text to use as a filter.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput) TextFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *string { return v.TextFilter }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.Aggregator
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for process queries. Valid values are `process`, `container`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Whether to normalize the CPU percentages.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) IsNormalizedCpu() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *bool {
		if v == nil {
			return nil
		}
		return v.IsNormalizedCpu
	}).(pulumi.BoolPtrOutput)
}

// The number of hits to return.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

// The process metric name.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Metric
	}).(pulumi.StringPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) Sort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.Sort
	}).(pulumi.StringPtrOutput)
}

// An array of tags to filter by.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) []string {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(pulumi.StringArrayOutput)
}

// The text to use as a filter.
func (o PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput) TextFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.TextFilter
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery struct {
	// Additional filters applied to the SLO query.
	AdditionalQueryFilters *string `pulumi:"additionalQueryFilters"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for SLO queries. Valid values are `slo`.
	DataSource string `pulumi:"dataSource"`
	// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
	GroupMode *string `pulumi:"groupMode"`
	// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
	Measure string `pulumi:"measure"`
	// The name of query for use in formulas.
	Name *string `pulumi:"name"`
	// ID of an SLO to query.
	SloId string `pulumi:"sloId"`
	// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
	SloQueryType *string `pulumi:"sloQueryType"`
}

// PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs struct {
	// Additional filters applied to the SLO query.
	AdditionalQueryFilters pulumi.StringPtrInput `pulumi:"additionalQueryFilters"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for SLO queries. Valid values are `slo`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
	GroupMode pulumi.StringPtrInput `pulumi:"groupMode"`
	// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
	Measure pulumi.StringInput `pulumi:"measure"`
	// The name of query for use in formulas.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// ID of an SLO to query.
	SloId pulumi.StringInput `pulumi:"sloId"`
	// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
	SloQueryType pulumi.StringPtrInput `pulumi:"sloQueryType"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput)
}

// Additional filters applied to the SLO query.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) AdditionalQueryFilters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string {
		return v.AdditionalQueryFilters
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for SLO queries. Valid values are `slo`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) GroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string { return v.GroupMode }).(pulumi.StringPtrOutput)
}

// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) Measure() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) string { return v.Measure }).(pulumi.StringOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ID of an SLO to query.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) SloId() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) string { return v.SloId }).(pulumi.StringOutput)
}

// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput) SloQueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string { return v.SloQueryType }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput)
}

// Additional filters applied to the SLO query.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) AdditionalQueryFilters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalQueryFilters
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for SLO queries. Valid values are `slo`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) GroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.GroupMode
	}).(pulumi.StringPtrOutput)
}

// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) Measure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Measure
	}).(pulumi.StringPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ID of an SLO to query.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) SloId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return &v.SloId
	}).(pulumi.StringPtrOutput)
}

// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
func (o PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput) SloQueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.SloQueryType
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQuery struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery *PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies []PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy `pulumi:"groupBies"`
	// The name of the index to query.
	Index string `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes []PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery *string `pulumi:"searchQuery"`
}

// PowerpackWidgetTimeseriesDefinitionRequestRumQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestRumQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestRumQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrInput `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayInput `pulumi:"groupBies"`
	// The name of the index to query.
	Index pulumi.StringInput `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayInput `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery pulumi.StringPtrInput `pulumi:"searchQuery"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestRumQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestRumQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestRumQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestRumQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestRumQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestRumQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestRumQuery) *PowerpackWidgetTimeseriesDefinitionRequestRumQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput) ComputeQuery() PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQuery) *PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery {
		return v.ComputeQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput) GroupBies() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQuery) []PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy {
		return v.GroupBies
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQuery) string { return v.Index }).(pulumi.StringOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput) MultiComputes() PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQuery) []PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute {
		return v.MultiComputes
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQuery) *string { return v.SearchQuery }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestRumQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQuery) PowerpackWidgetTimeseriesDefinitionRequestRumQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestRumQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput) ComputeQuery() PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQuery) *PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery {
		if v == nil {
			return nil
		}
		return v.ComputeQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput) GroupBies() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQuery) []PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput) MultiComputes() PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQuery) []PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute {
		if v == nil {
			return nil
		}
		return v.MultiComputes
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQuery) *string {
		if v == nil {
			return nil
		}
		return v.SearchQuery
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery) *PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery) PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQuery) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy struct {
	// The facet name.
	Facet *string `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit *int `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery *PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery `pulumi:"sortQuery"`
}

// PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArgs and PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArgs struct {
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrInput `pulumi:"sortQuery"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput)
}

// PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArray and PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArray{ PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArgs{...} }
type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArray []PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByInput

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArray) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArray) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput {
	return o
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// The maximum number of items in the group.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// A list of exactly one element describing the sort query to use.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput) SortQuery() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy) *PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery {
		return v.SortQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy {
		return vs[0].([]PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBy)[vs[1].(int)]
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order string `pulumi:"order"`
}

// PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order pulumi.StringInput `pulumi:"order"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery) *PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery) string {
		return v.Aggregation
	}).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery) string { return v.Order }).(pulumi.StringOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery) PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArgs and PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArgs) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput)
}

// PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArray and PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArray{ PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArgs{...} }
type PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArray []PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeInput

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArray) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArray) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput {
	return o
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute {
		return vs[0].([]PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiCompute)[vs[1].(int)]
	}).(PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies []PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy `pulumi:"groupBies"`
	// The name of the index to query.
	Index string `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes []PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery *string `pulumi:"searchQuery"`
}

// PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrInput `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayInput `pulumi:"groupBies"`
	// The name of the index to query.
	Index pulumi.StringInput `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayInput `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery pulumi.StringPtrInput `pulumi:"searchQuery"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) *PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput) ComputeQuery() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery {
		return v.ComputeQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput) GroupBies() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) []PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy {
		return v.GroupBies
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) string { return v.Index }).(pulumi.StringOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput) MultiComputes() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) []PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute {
		return v.MultiComputes
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) *string { return v.SearchQuery }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput) ComputeQuery() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery {
		if v == nil {
			return nil
		}
		return v.ComputeQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput) GroupBies() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) []PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput) MultiComputes() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) []PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute {
		if v == nil {
			return nil
		}
		return v.MultiComputes
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQuery) *string {
		if v == nil {
			return nil
		}
		return v.SearchQuery
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery) *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery) string {
		return v.Aggregation
	}).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQuery) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy struct {
	// The facet name.
	Facet *string `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit *int `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery `pulumi:"sortQuery"`
}

// PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArgs and PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArgs struct {
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrInput `pulumi:"sortQuery"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput)
}

// PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArray and PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArray{ PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArgs{...} }
type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArray []PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByInput

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArray) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArray) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput {
	return o
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// The maximum number of items in the group.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// A list of exactly one element describing the sort query to use.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput) SortQuery() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy) *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery {
		return v.SortQuery
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy {
		return vs[0].([]PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBy)[vs[1].(int)]
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order string `pulumi:"order"`
}

// PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs and PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order pulumi.StringInput `pulumi:"order"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput).ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs, PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtr and PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrType PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs

func PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtr(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrType) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery) *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery) string {
		return v.Aggregation
	}).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery) *string {
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery) string { return v.Order }).(pulumi.StringOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArgs and PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArgs) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput)
}

// PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArray and PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArray{ PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArgs{...} }
type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArray []PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeInput

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArray) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArray) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput {
	return o
}

// The aggregation method.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute) string {
		return v.Aggregation
	}).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput() PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput) ToPowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute {
		return vs[0].([]PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiCompute)[vs[1].(int)]
	}).(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestStyle struct {
	// The type of lines displayed. Valid values are `dashed`, `dotted`, `solid`.
	LineType *string `pulumi:"lineType"`
	// The width of line displayed. Valid values are `normal`, `thick`, `thin`.
	LineWidth *string `pulumi:"lineWidth"`
	// A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.
	Palette *string `pulumi:"palette"`
}

// PowerpackWidgetTimeseriesDefinitionRequestStyleInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestStyleArgs and PowerpackWidgetTimeseriesDefinitionRequestStyleOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestStyleInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRequestStyleArgs{...}
type PowerpackWidgetTimeseriesDefinitionRequestStyleInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestStyleOutput() PowerpackWidgetTimeseriesDefinitionRequestStyleOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestStyleOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestStyleOutput
}

type PowerpackWidgetTimeseriesDefinitionRequestStyleArgs struct {
	// The type of lines displayed. Valid values are `dashed`, `dotted`, `solid`.
	LineType pulumi.StringPtrInput `pulumi:"lineType"`
	// The width of line displayed. Valid values are `normal`, `thick`, `thin`.
	LineWidth pulumi.StringPtrInput `pulumi:"lineWidth"`
	// A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.
	Palette pulumi.StringPtrInput `pulumi:"palette"`
}

func (PowerpackWidgetTimeseriesDefinitionRequestStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestStyle)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRequestStyleArgs) ToPowerpackWidgetTimeseriesDefinitionRequestStyleOutput() PowerpackWidgetTimeseriesDefinitionRequestStyleOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestStyleOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestStyleArgs) ToPowerpackWidgetTimeseriesDefinitionRequestStyleOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestStyleOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRequestStyleArgs) ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput() PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRequestStyleArgs) ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestStyleOutput).ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRequestStylePtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRequestStyleArgs, PowerpackWidgetTimeseriesDefinitionRequestStylePtr and PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRequestStylePtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRequestStyleArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRequestStylePtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput() PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput
}

type powerpackWidgetTimeseriesDefinitionRequestStylePtrType PowerpackWidgetTimeseriesDefinitionRequestStyleArgs

func PowerpackWidgetTimeseriesDefinitionRequestStylePtr(v *PowerpackWidgetTimeseriesDefinitionRequestStyleArgs) PowerpackWidgetTimeseriesDefinitionRequestStylePtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRequestStylePtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRequestStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestStyle)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRequestStylePtrType) ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput() PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRequestStylePtrType) ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestStyleOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestStyle)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestStyleOutput) ToPowerpackWidgetTimeseriesDefinitionRequestStyleOutput() PowerpackWidgetTimeseriesDefinitionRequestStyleOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestStyleOutput) ToPowerpackWidgetTimeseriesDefinitionRequestStyleOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestStyleOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestStyleOutput) ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput() PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRequestStyleOutput) ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRequestStyle) *PowerpackWidgetTimeseriesDefinitionRequestStyle {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput)
}

// The type of lines displayed. Valid values are `dashed`, `dotted`, `solid`.
func (o PowerpackWidgetTimeseriesDefinitionRequestStyleOutput) LineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestStyle) *string { return v.LineType }).(pulumi.StringPtrOutput)
}

// The width of line displayed. Valid values are `normal`, `thick`, `thin`.
func (o PowerpackWidgetTimeseriesDefinitionRequestStyleOutput) LineWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestStyle) *string { return v.LineWidth }).(pulumi.StringPtrOutput)
}

// A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.
func (o PowerpackWidgetTimeseriesDefinitionRequestStyleOutput) Palette() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRequestStyle) *string { return v.Palette }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRequestStyle)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput() PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput) ToPowerpackWidgetTimeseriesDefinitionRequestStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRequestStyleOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestStyle) PowerpackWidgetTimeseriesDefinitionRequestStyle {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRequestStyle
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRequestStyleOutput)
}

// The type of lines displayed. Valid values are `dashed`, `dotted`, `solid`.
func (o PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput) LineType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestStyle) *string {
		if v == nil {
			return nil
		}
		return v.LineType
	}).(pulumi.StringPtrOutput)
}

// The width of line displayed. Valid values are `normal`, `thick`, `thin`.
func (o PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput) LineWidth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestStyle) *string {
		if v == nil {
			return nil
		}
		return v.LineWidth
	}).(pulumi.StringPtrOutput)
}

// A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.
func (o PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput) Palette() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRequestStyle) *string {
		if v == nil {
			return nil
		}
		return v.Palette
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRightYaxis struct {
	// Always include zero or fit the axis to the data range.
	IncludeZero *bool `pulumi:"includeZero"`
	// The label of the axis to display on the graph.
	Label *string `pulumi:"label"`
	// Specify the maximum value to show on the Y-axis.
	Max *string `pulumi:"max"`
	// Specify the minimum value to show on the Y-axis.
	Min *string `pulumi:"min"`
	// Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.
	Scale *string `pulumi:"scale"`
}

// PowerpackWidgetTimeseriesDefinitionRightYaxisInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRightYaxisArgs and PowerpackWidgetTimeseriesDefinitionRightYaxisOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRightYaxisInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionRightYaxisArgs{...}
type PowerpackWidgetTimeseriesDefinitionRightYaxisInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRightYaxisOutput() PowerpackWidgetTimeseriesDefinitionRightYaxisOutput
	ToPowerpackWidgetTimeseriesDefinitionRightYaxisOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRightYaxisOutput
}

type PowerpackWidgetTimeseriesDefinitionRightYaxisArgs struct {
	// Always include zero or fit the axis to the data range.
	IncludeZero pulumi.BoolPtrInput `pulumi:"includeZero"`
	// The label of the axis to display on the graph.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Specify the maximum value to show on the Y-axis.
	Max pulumi.StringPtrInput `pulumi:"max"`
	// Specify the minimum value to show on the Y-axis.
	Min pulumi.StringPtrInput `pulumi:"min"`
	// Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.
	Scale pulumi.StringPtrInput `pulumi:"scale"`
}

func (PowerpackWidgetTimeseriesDefinitionRightYaxisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRightYaxis)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionRightYaxisArgs) ToPowerpackWidgetTimeseriesDefinitionRightYaxisOutput() PowerpackWidgetTimeseriesDefinitionRightYaxisOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRightYaxisOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRightYaxisArgs) ToPowerpackWidgetTimeseriesDefinitionRightYaxisOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRightYaxisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRightYaxisOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionRightYaxisArgs) ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput() PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionRightYaxisArgs) ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRightYaxisOutput).ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionRightYaxisPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionRightYaxisArgs, PowerpackWidgetTimeseriesDefinitionRightYaxisPtr and PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionRightYaxisPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionRightYaxisArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionRightYaxisPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput() PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput
}

type powerpackWidgetTimeseriesDefinitionRightYaxisPtrType PowerpackWidgetTimeseriesDefinitionRightYaxisArgs

func PowerpackWidgetTimeseriesDefinitionRightYaxisPtr(v *PowerpackWidgetTimeseriesDefinitionRightYaxisArgs) PowerpackWidgetTimeseriesDefinitionRightYaxisPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionRightYaxisPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionRightYaxisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRightYaxis)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionRightYaxisPtrType) ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput() PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionRightYaxisPtrType) ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRightYaxisOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRightYaxisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRightYaxis)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRightYaxisOutput) ToPowerpackWidgetTimeseriesDefinitionRightYaxisOutput() PowerpackWidgetTimeseriesDefinitionRightYaxisOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRightYaxisOutput) ToPowerpackWidgetTimeseriesDefinitionRightYaxisOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRightYaxisOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRightYaxisOutput) ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput() PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionRightYaxisOutput) ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionRightYaxis) *PowerpackWidgetTimeseriesDefinitionRightYaxis {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput)
}

// Always include zero or fit the axis to the data range.
func (o PowerpackWidgetTimeseriesDefinitionRightYaxisOutput) IncludeZero() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRightYaxis) *bool { return v.IncludeZero }).(pulumi.BoolPtrOutput)
}

// The label of the axis to display on the graph.
func (o PowerpackWidgetTimeseriesDefinitionRightYaxisOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRightYaxis) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Specify the maximum value to show on the Y-axis.
func (o PowerpackWidgetTimeseriesDefinitionRightYaxisOutput) Max() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRightYaxis) *string { return v.Max }).(pulumi.StringPtrOutput)
}

// Specify the minimum value to show on the Y-axis.
func (o PowerpackWidgetTimeseriesDefinitionRightYaxisOutput) Min() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRightYaxis) *string { return v.Min }).(pulumi.StringPtrOutput)
}

// Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.
func (o PowerpackWidgetTimeseriesDefinitionRightYaxisOutput) Scale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionRightYaxis) *string { return v.Scale }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionRightYaxis)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput() PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput) ToPowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionRightYaxisOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRightYaxis) PowerpackWidgetTimeseriesDefinitionRightYaxis {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionRightYaxis
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionRightYaxisOutput)
}

// Always include zero or fit the axis to the data range.
func (o PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput) IncludeZero() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRightYaxis) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeZero
	}).(pulumi.BoolPtrOutput)
}

// The label of the axis to display on the graph.
func (o PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRightYaxis) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

// Specify the maximum value to show on the Y-axis.
func (o PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput) Max() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRightYaxis) *string {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.StringPtrOutput)
}

// Specify the minimum value to show on the Y-axis.
func (o PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput) Min() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRightYaxis) *string {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.StringPtrOutput)
}

// Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.
func (o PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput) Scale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionRightYaxis) *string {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionYaxis struct {
	// Always include zero or fit the axis to the data range.
	IncludeZero *bool `pulumi:"includeZero"`
	// The label of the axis to display on the graph.
	Label *string `pulumi:"label"`
	// Specify the maximum value to show on the Y-axis.
	Max *string `pulumi:"max"`
	// Specify the minimum value to show on the Y-axis.
	Min *string `pulumi:"min"`
	// Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.
	Scale *string `pulumi:"scale"`
}

// PowerpackWidgetTimeseriesDefinitionYaxisInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionYaxisArgs and PowerpackWidgetTimeseriesDefinitionYaxisOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionYaxisInput` via:
//
//	PowerpackWidgetTimeseriesDefinitionYaxisArgs{...}
type PowerpackWidgetTimeseriesDefinitionYaxisInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionYaxisOutput() PowerpackWidgetTimeseriesDefinitionYaxisOutput
	ToPowerpackWidgetTimeseriesDefinitionYaxisOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionYaxisOutput
}

type PowerpackWidgetTimeseriesDefinitionYaxisArgs struct {
	// Always include zero or fit the axis to the data range.
	IncludeZero pulumi.BoolPtrInput `pulumi:"includeZero"`
	// The label of the axis to display on the graph.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Specify the maximum value to show on the Y-axis.
	Max pulumi.StringPtrInput `pulumi:"max"`
	// Specify the minimum value to show on the Y-axis.
	Min pulumi.StringPtrInput `pulumi:"min"`
	// Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.
	Scale pulumi.StringPtrInput `pulumi:"scale"`
}

func (PowerpackWidgetTimeseriesDefinitionYaxisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionYaxis)(nil)).Elem()
}

func (i PowerpackWidgetTimeseriesDefinitionYaxisArgs) ToPowerpackWidgetTimeseriesDefinitionYaxisOutput() PowerpackWidgetTimeseriesDefinitionYaxisOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionYaxisOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionYaxisArgs) ToPowerpackWidgetTimeseriesDefinitionYaxisOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionYaxisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionYaxisOutput)
}

func (i PowerpackWidgetTimeseriesDefinitionYaxisArgs) ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutput() PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTimeseriesDefinitionYaxisArgs) ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionYaxisOutput).ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutputWithContext(ctx)
}

// PowerpackWidgetTimeseriesDefinitionYaxisPtrInput is an input type that accepts PowerpackWidgetTimeseriesDefinitionYaxisArgs, PowerpackWidgetTimeseriesDefinitionYaxisPtr and PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTimeseriesDefinitionYaxisPtrInput` via:
//
//	        PowerpackWidgetTimeseriesDefinitionYaxisArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTimeseriesDefinitionYaxisPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutput() PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput
	ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutputWithContext(context.Context) PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput
}

type powerpackWidgetTimeseriesDefinitionYaxisPtrType PowerpackWidgetTimeseriesDefinitionYaxisArgs

func PowerpackWidgetTimeseriesDefinitionYaxisPtr(v *PowerpackWidgetTimeseriesDefinitionYaxisArgs) PowerpackWidgetTimeseriesDefinitionYaxisPtrInput {
	return (*powerpackWidgetTimeseriesDefinitionYaxisPtrType)(v)
}

func (*powerpackWidgetTimeseriesDefinitionYaxisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionYaxis)(nil)).Elem()
}

func (i *powerpackWidgetTimeseriesDefinitionYaxisPtrType) ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutput() PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput {
	return i.ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTimeseriesDefinitionYaxisPtrType) ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionYaxisOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionYaxisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionYaxis)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionYaxisOutput) ToPowerpackWidgetTimeseriesDefinitionYaxisOutput() PowerpackWidgetTimeseriesDefinitionYaxisOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionYaxisOutput) ToPowerpackWidgetTimeseriesDefinitionYaxisOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionYaxisOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionYaxisOutput) ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutput() PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput {
	return o.ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTimeseriesDefinitionYaxisOutput) ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTimeseriesDefinitionYaxis) *PowerpackWidgetTimeseriesDefinitionYaxis {
		return &v
	}).(PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput)
}

// Always include zero or fit the axis to the data range.
func (o PowerpackWidgetTimeseriesDefinitionYaxisOutput) IncludeZero() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionYaxis) *bool { return v.IncludeZero }).(pulumi.BoolPtrOutput)
}

// The label of the axis to display on the graph.
func (o PowerpackWidgetTimeseriesDefinitionYaxisOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionYaxis) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Specify the maximum value to show on the Y-axis.
func (o PowerpackWidgetTimeseriesDefinitionYaxisOutput) Max() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionYaxis) *string { return v.Max }).(pulumi.StringPtrOutput)
}

// Specify the minimum value to show on the Y-axis.
func (o PowerpackWidgetTimeseriesDefinitionYaxisOutput) Min() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionYaxis) *string { return v.Min }).(pulumi.StringPtrOutput)
}

// Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.
func (o PowerpackWidgetTimeseriesDefinitionYaxisOutput) Scale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTimeseriesDefinitionYaxis) *string { return v.Scale }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTimeseriesDefinitionYaxis)(nil)).Elem()
}

func (o PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput) ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutput() PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput) ToPowerpackWidgetTimeseriesDefinitionYaxisPtrOutputWithContext(ctx context.Context) PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput {
	return o
}

func (o PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput) Elem() PowerpackWidgetTimeseriesDefinitionYaxisOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionYaxis) PowerpackWidgetTimeseriesDefinitionYaxis {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTimeseriesDefinitionYaxis
		return ret
	}).(PowerpackWidgetTimeseriesDefinitionYaxisOutput)
}

// Always include zero or fit the axis to the data range.
func (o PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput) IncludeZero() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionYaxis) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeZero
	}).(pulumi.BoolPtrOutput)
}

// The label of the axis to display on the graph.
func (o PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionYaxis) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

// Specify the maximum value to show on the Y-axis.
func (o PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput) Max() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionYaxis) *string {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.StringPtrOutput)
}

// Specify the minimum value to show on the Y-axis.
func (o PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput) Min() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionYaxis) *string {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.StringPtrOutput)
}

// Specify the scale type, options: `linear`, `log`, `pow`, `sqrt`.
func (o PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput) Scale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTimeseriesDefinitionYaxis) *string {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinition struct {
	// A nested block describing a custom link. Multiple `customLink` blocks are allowed using the structure below.
	CustomLinks []PowerpackWidgetToplistDefinitionCustomLink `pulumi:"customLinks"`
	// The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `weekToDate`, `monthToDate`, `1y`, `alert`.
	LiveSpan *string `pulumi:"liveSpan"`
	// A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apmQuery`, `logQuery`, `rumQuery`, `securityQuery` or `processQuery` is required within the `request` block).
	Requests []PowerpackWidgetToplistDefinitionRequest `pulumi:"requests"`
	// The style of the widget
	Styles []PowerpackWidgetToplistDefinitionStyle `pulumi:"styles"`
	// The title of the widget.
	Title *string `pulumi:"title"`
	// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
	TitleAlign *string `pulumi:"titleAlign"`
	// The size of the widget's title (defaults to 16).
	TitleSize *string `pulumi:"titleSize"`
}

// PowerpackWidgetToplistDefinitionInput is an input type that accepts PowerpackWidgetToplistDefinitionArgs and PowerpackWidgetToplistDefinitionOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionInput` via:
//
//	PowerpackWidgetToplistDefinitionArgs{...}
type PowerpackWidgetToplistDefinitionInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionOutput() PowerpackWidgetToplistDefinitionOutput
	ToPowerpackWidgetToplistDefinitionOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionOutput
}

type PowerpackWidgetToplistDefinitionArgs struct {
	// A nested block describing a custom link. Multiple `customLink` blocks are allowed using the structure below.
	CustomLinks PowerpackWidgetToplistDefinitionCustomLinkArrayInput `pulumi:"customLinks"`
	// The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `weekToDate`, `monthToDate`, `1y`, `alert`.
	LiveSpan pulumi.StringPtrInput `pulumi:"liveSpan"`
	// A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apmQuery`, `logQuery`, `rumQuery`, `securityQuery` or `processQuery` is required within the `request` block).
	Requests PowerpackWidgetToplistDefinitionRequestArrayInput `pulumi:"requests"`
	// The style of the widget
	Styles PowerpackWidgetToplistDefinitionStyleArrayInput `pulumi:"styles"`
	// The title of the widget.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
	TitleAlign pulumi.StringPtrInput `pulumi:"titleAlign"`
	// The size of the widget's title (defaults to 16).
	TitleSize pulumi.StringPtrInput `pulumi:"titleSize"`
}

func (PowerpackWidgetToplistDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinition)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionArgs) ToPowerpackWidgetToplistDefinitionOutput() PowerpackWidgetToplistDefinitionOutput {
	return i.ToPowerpackWidgetToplistDefinitionOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionArgs) ToPowerpackWidgetToplistDefinitionOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionOutput)
}

func (i PowerpackWidgetToplistDefinitionArgs) ToPowerpackWidgetToplistDefinitionPtrOutput() PowerpackWidgetToplistDefinitionPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionArgs) ToPowerpackWidgetToplistDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionOutput).ToPowerpackWidgetToplistDefinitionPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionArgs, PowerpackWidgetToplistDefinitionPtr and PowerpackWidgetToplistDefinitionPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionPtrOutput() PowerpackWidgetToplistDefinitionPtrOutput
	ToPowerpackWidgetToplistDefinitionPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionPtrOutput
}

type powerpackWidgetToplistDefinitionPtrType PowerpackWidgetToplistDefinitionArgs

func PowerpackWidgetToplistDefinitionPtr(v *PowerpackWidgetToplistDefinitionArgs) PowerpackWidgetToplistDefinitionPtrInput {
	return (*powerpackWidgetToplistDefinitionPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinition)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionPtrType) ToPowerpackWidgetToplistDefinitionPtrOutput() PowerpackWidgetToplistDefinitionPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionPtrType) ToPowerpackWidgetToplistDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionPtrOutput)
}

type PowerpackWidgetToplistDefinitionOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinition)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionOutput) ToPowerpackWidgetToplistDefinitionOutput() PowerpackWidgetToplistDefinitionOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionOutput) ToPowerpackWidgetToplistDefinitionOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionOutput) ToPowerpackWidgetToplistDefinitionPtrOutput() PowerpackWidgetToplistDefinitionPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionOutput) ToPowerpackWidgetToplistDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinition) *PowerpackWidgetToplistDefinition {
		return &v
	}).(PowerpackWidgetToplistDefinitionPtrOutput)
}

// A nested block describing a custom link. Multiple `customLink` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionOutput) CustomLinks() PowerpackWidgetToplistDefinitionCustomLinkArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinition) []PowerpackWidgetToplistDefinitionCustomLink {
		return v.CustomLinks
	}).(PowerpackWidgetToplistDefinitionCustomLinkArrayOutput)
}

// The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `weekToDate`, `monthToDate`, `1y`, `alert`.
func (o PowerpackWidgetToplistDefinitionOutput) LiveSpan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinition) *string { return v.LiveSpan }).(pulumi.StringPtrOutput)
}

// A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apmQuery`, `logQuery`, `rumQuery`, `securityQuery` or `processQuery` is required within the `request` block).
func (o PowerpackWidgetToplistDefinitionOutput) Requests() PowerpackWidgetToplistDefinitionRequestArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinition) []PowerpackWidgetToplistDefinitionRequest { return v.Requests }).(PowerpackWidgetToplistDefinitionRequestArrayOutput)
}

// The style of the widget
func (o PowerpackWidgetToplistDefinitionOutput) Styles() PowerpackWidgetToplistDefinitionStyleArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinition) []PowerpackWidgetToplistDefinitionStyle { return v.Styles }).(PowerpackWidgetToplistDefinitionStyleArrayOutput)
}

// The title of the widget.
func (o PowerpackWidgetToplistDefinitionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinition) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
func (o PowerpackWidgetToplistDefinitionOutput) TitleAlign() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinition) *string { return v.TitleAlign }).(pulumi.StringPtrOutput)
}

// The size of the widget's title (defaults to 16).
func (o PowerpackWidgetToplistDefinitionOutput) TitleSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinition) *string { return v.TitleSize }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinition)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionPtrOutput) ToPowerpackWidgetToplistDefinitionPtrOutput() PowerpackWidgetToplistDefinitionPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionPtrOutput) ToPowerpackWidgetToplistDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionPtrOutput) Elem() PowerpackWidgetToplistDefinitionOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinition) PowerpackWidgetToplistDefinition {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinition
		return ret
	}).(PowerpackWidgetToplistDefinitionOutput)
}

// A nested block describing a custom link. Multiple `customLink` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionPtrOutput) CustomLinks() PowerpackWidgetToplistDefinitionCustomLinkArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinition) []PowerpackWidgetToplistDefinitionCustomLink {
		if v == nil {
			return nil
		}
		return v.CustomLinks
	}).(PowerpackWidgetToplistDefinitionCustomLinkArrayOutput)
}

// The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `weekToDate`, `monthToDate`, `1y`, `alert`.
func (o PowerpackWidgetToplistDefinitionPtrOutput) LiveSpan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinition) *string {
		if v == nil {
			return nil
		}
		return v.LiveSpan
	}).(pulumi.StringPtrOutput)
}

// A nested block describing the request to use when displaying the widget. Multiple `request` blocks are allowed using the structure below (exactly one of `q`, `apmQuery`, `logQuery`, `rumQuery`, `securityQuery` or `processQuery` is required within the `request` block).
func (o PowerpackWidgetToplistDefinitionPtrOutput) Requests() PowerpackWidgetToplistDefinitionRequestArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinition) []PowerpackWidgetToplistDefinitionRequest {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(PowerpackWidgetToplistDefinitionRequestArrayOutput)
}

// The style of the widget
func (o PowerpackWidgetToplistDefinitionPtrOutput) Styles() PowerpackWidgetToplistDefinitionStyleArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinition) []PowerpackWidgetToplistDefinitionStyle {
		if v == nil {
			return nil
		}
		return v.Styles
	}).(PowerpackWidgetToplistDefinitionStyleArrayOutput)
}

// The title of the widget.
func (o PowerpackWidgetToplistDefinitionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
func (o PowerpackWidgetToplistDefinitionPtrOutput) TitleAlign() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinition) *string {
		if v == nil {
			return nil
		}
		return v.TitleAlign
	}).(pulumi.StringPtrOutput)
}

// The size of the widget's title (defaults to 16).
func (o PowerpackWidgetToplistDefinitionPtrOutput) TitleSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinition) *string {
		if v == nil {
			return nil
		}
		return v.TitleSize
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionCustomLink struct {
	// The flag for toggling context menu link visibility.
	IsHidden *bool `pulumi:"isHidden"`
	// The label for the custom link URL.
	Label *string `pulumi:"label"`
	// The URL of the custom link.
	Link *string `pulumi:"link"`
	// The label ID that refers to a context menu link item. When `overrideLabel` is provided, the client request omits the label field.
	OverrideLabel *string `pulumi:"overrideLabel"`
}

// PowerpackWidgetToplistDefinitionCustomLinkInput is an input type that accepts PowerpackWidgetToplistDefinitionCustomLinkArgs and PowerpackWidgetToplistDefinitionCustomLinkOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionCustomLinkInput` via:
//
//	PowerpackWidgetToplistDefinitionCustomLinkArgs{...}
type PowerpackWidgetToplistDefinitionCustomLinkInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionCustomLinkOutput() PowerpackWidgetToplistDefinitionCustomLinkOutput
	ToPowerpackWidgetToplistDefinitionCustomLinkOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionCustomLinkOutput
}

type PowerpackWidgetToplistDefinitionCustomLinkArgs struct {
	// The flag for toggling context menu link visibility.
	IsHidden pulumi.BoolPtrInput `pulumi:"isHidden"`
	// The label for the custom link URL.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The URL of the custom link.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// The label ID that refers to a context menu link item. When `overrideLabel` is provided, the client request omits the label field.
	OverrideLabel pulumi.StringPtrInput `pulumi:"overrideLabel"`
}

func (PowerpackWidgetToplistDefinitionCustomLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionCustomLink)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionCustomLinkArgs) ToPowerpackWidgetToplistDefinitionCustomLinkOutput() PowerpackWidgetToplistDefinitionCustomLinkOutput {
	return i.ToPowerpackWidgetToplistDefinitionCustomLinkOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionCustomLinkArgs) ToPowerpackWidgetToplistDefinitionCustomLinkOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionCustomLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionCustomLinkOutput)
}

// PowerpackWidgetToplistDefinitionCustomLinkArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionCustomLinkArray and PowerpackWidgetToplistDefinitionCustomLinkArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionCustomLinkArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionCustomLinkArray{ PowerpackWidgetToplistDefinitionCustomLinkArgs{...} }
type PowerpackWidgetToplistDefinitionCustomLinkArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionCustomLinkArrayOutput() PowerpackWidgetToplistDefinitionCustomLinkArrayOutput
	ToPowerpackWidgetToplistDefinitionCustomLinkArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionCustomLinkArrayOutput
}

type PowerpackWidgetToplistDefinitionCustomLinkArray []PowerpackWidgetToplistDefinitionCustomLinkInput

func (PowerpackWidgetToplistDefinitionCustomLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionCustomLink)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionCustomLinkArray) ToPowerpackWidgetToplistDefinitionCustomLinkArrayOutput() PowerpackWidgetToplistDefinitionCustomLinkArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionCustomLinkArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionCustomLinkArray) ToPowerpackWidgetToplistDefinitionCustomLinkArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionCustomLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionCustomLinkArrayOutput)
}

type PowerpackWidgetToplistDefinitionCustomLinkOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionCustomLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionCustomLink)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionCustomLinkOutput) ToPowerpackWidgetToplistDefinitionCustomLinkOutput() PowerpackWidgetToplistDefinitionCustomLinkOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionCustomLinkOutput) ToPowerpackWidgetToplistDefinitionCustomLinkOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionCustomLinkOutput {
	return o
}

// The flag for toggling context menu link visibility.
func (o PowerpackWidgetToplistDefinitionCustomLinkOutput) IsHidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionCustomLink) *bool { return v.IsHidden }).(pulumi.BoolPtrOutput)
}

// The label for the custom link URL.
func (o PowerpackWidgetToplistDefinitionCustomLinkOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionCustomLink) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The URL of the custom link.
func (o PowerpackWidgetToplistDefinitionCustomLinkOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionCustomLink) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// The label ID that refers to a context menu link item. When `overrideLabel` is provided, the client request omits the label field.
func (o PowerpackWidgetToplistDefinitionCustomLinkOutput) OverrideLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionCustomLink) *string { return v.OverrideLabel }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionCustomLinkArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionCustomLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionCustomLink)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionCustomLinkArrayOutput) ToPowerpackWidgetToplistDefinitionCustomLinkArrayOutput() PowerpackWidgetToplistDefinitionCustomLinkArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionCustomLinkArrayOutput) ToPowerpackWidgetToplistDefinitionCustomLinkArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionCustomLinkArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionCustomLinkArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionCustomLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionCustomLink {
		return vs[0].([]PowerpackWidgetToplistDefinitionCustomLink)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionCustomLinkOutput)
}

type PowerpackWidgetToplistDefinitionRequest struct {
	// The query to use for this widget.
	ApmQuery *PowerpackWidgetToplistDefinitionRequestApmQuery `pulumi:"apmQuery"`
	// The query to use for this widget.
	AuditQuery *PowerpackWidgetToplistDefinitionRequestAuditQuery `pulumi:"auditQuery"`
	// Conditional formats allow you to set the color of your widget content or background, depending on a rule applied to your data. Multiple `conditionalFormats` blocks are allowed using the structure below.
	ConditionalFormats []PowerpackWidgetToplistDefinitionRequestConditionalFormat `pulumi:"conditionalFormats"`
	Formulas           []PowerpackWidgetToplistDefinitionRequestFormula           `pulumi:"formulas"`
	// The query to use for this widget.
	LogQuery *PowerpackWidgetToplistDefinitionRequestLogQuery `pulumi:"logQuery"`
	// The process query to use in the widget. The structure of this block is described below.
	ProcessQuery *PowerpackWidgetToplistDefinitionRequestProcessQuery `pulumi:"processQuery"`
	// The metric query to use for this widget.
	Q       *string                                        `pulumi:"q"`
	Queries []PowerpackWidgetToplistDefinitionRequestQuery `pulumi:"queries"`
	// The query to use for this widget.
	RumQuery *PowerpackWidgetToplistDefinitionRequestRumQuery `pulumi:"rumQuery"`
	// The query to use for this widget.
	SecurityQuery *PowerpackWidgetToplistDefinitionRequestSecurityQuery `pulumi:"securityQuery"`
	// Define request for the widget's style.
	Style *PowerpackWidgetToplistDefinitionRequestStyle `pulumi:"style"`
}

// PowerpackWidgetToplistDefinitionRequestInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestArgs and PowerpackWidgetToplistDefinitionRequestOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestArgs{...}
type PowerpackWidgetToplistDefinitionRequestInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestOutput() PowerpackWidgetToplistDefinitionRequestOutput
	ToPowerpackWidgetToplistDefinitionRequestOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestOutput
}

type PowerpackWidgetToplistDefinitionRequestArgs struct {
	// The query to use for this widget.
	ApmQuery PowerpackWidgetToplistDefinitionRequestApmQueryPtrInput `pulumi:"apmQuery"`
	// The query to use for this widget.
	AuditQuery PowerpackWidgetToplistDefinitionRequestAuditQueryPtrInput `pulumi:"auditQuery"`
	// Conditional formats allow you to set the color of your widget content or background, depending on a rule applied to your data. Multiple `conditionalFormats` blocks are allowed using the structure below.
	ConditionalFormats PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayInput `pulumi:"conditionalFormats"`
	Formulas           PowerpackWidgetToplistDefinitionRequestFormulaArrayInput           `pulumi:"formulas"`
	// The query to use for this widget.
	LogQuery PowerpackWidgetToplistDefinitionRequestLogQueryPtrInput `pulumi:"logQuery"`
	// The process query to use in the widget. The structure of this block is described below.
	ProcessQuery PowerpackWidgetToplistDefinitionRequestProcessQueryPtrInput `pulumi:"processQuery"`
	// The metric query to use for this widget.
	Q       pulumi.StringPtrInput                                  `pulumi:"q"`
	Queries PowerpackWidgetToplistDefinitionRequestQueryArrayInput `pulumi:"queries"`
	// The query to use for this widget.
	RumQuery PowerpackWidgetToplistDefinitionRequestRumQueryPtrInput `pulumi:"rumQuery"`
	// The query to use for this widget.
	SecurityQuery PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrInput `pulumi:"securityQuery"`
	// Define request for the widget's style.
	Style PowerpackWidgetToplistDefinitionRequestStylePtrInput `pulumi:"style"`
}

func (PowerpackWidgetToplistDefinitionRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequest)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestArgs) ToPowerpackWidgetToplistDefinitionRequestOutput() PowerpackWidgetToplistDefinitionRequestOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestArgs) ToPowerpackWidgetToplistDefinitionRequestOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestOutput)
}

// PowerpackWidgetToplistDefinitionRequestArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestArray and PowerpackWidgetToplistDefinitionRequestArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestArray{ PowerpackWidgetToplistDefinitionRequestArgs{...} }
type PowerpackWidgetToplistDefinitionRequestArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestArrayOutput() PowerpackWidgetToplistDefinitionRequestArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestArray []PowerpackWidgetToplistDefinitionRequestInput

func (PowerpackWidgetToplistDefinitionRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequest)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestArray) ToPowerpackWidgetToplistDefinitionRequestArrayOutput() PowerpackWidgetToplistDefinitionRequestArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestArray) ToPowerpackWidgetToplistDefinitionRequestArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequest)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestOutput) ToPowerpackWidgetToplistDefinitionRequestOutput() PowerpackWidgetToplistDefinitionRequestOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestOutput) ToPowerpackWidgetToplistDefinitionRequestOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestOutput {
	return o
}

// The query to use for this widget.
func (o PowerpackWidgetToplistDefinitionRequestOutput) ApmQuery() PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequest) *PowerpackWidgetToplistDefinitionRequestApmQuery {
		return v.ApmQuery
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput)
}

// The query to use for this widget.
func (o PowerpackWidgetToplistDefinitionRequestOutput) AuditQuery() PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequest) *PowerpackWidgetToplistDefinitionRequestAuditQuery {
		return v.AuditQuery
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput)
}

// Conditional formats allow you to set the color of your widget content or background, depending on a rule applied to your data. Multiple `conditionalFormats` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestOutput) ConditionalFormats() PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequest) []PowerpackWidgetToplistDefinitionRequestConditionalFormat {
		return v.ConditionalFormats
	}).(PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput)
}

func (o PowerpackWidgetToplistDefinitionRequestOutput) Formulas() PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequest) []PowerpackWidgetToplistDefinitionRequestFormula {
		return v.Formulas
	}).(PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput)
}

// The query to use for this widget.
func (o PowerpackWidgetToplistDefinitionRequestOutput) LogQuery() PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequest) *PowerpackWidgetToplistDefinitionRequestLogQuery {
		return v.LogQuery
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput)
}

// The process query to use in the widget. The structure of this block is described below.
func (o PowerpackWidgetToplistDefinitionRequestOutput) ProcessQuery() PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequest) *PowerpackWidgetToplistDefinitionRequestProcessQuery {
		return v.ProcessQuery
	}).(PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput)
}

// The metric query to use for this widget.
func (o PowerpackWidgetToplistDefinitionRequestOutput) Q() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequest) *string { return v.Q }).(pulumi.StringPtrOutput)
}

func (o PowerpackWidgetToplistDefinitionRequestOutput) Queries() PowerpackWidgetToplistDefinitionRequestQueryArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequest) []PowerpackWidgetToplistDefinitionRequestQuery {
		return v.Queries
	}).(PowerpackWidgetToplistDefinitionRequestQueryArrayOutput)
}

// The query to use for this widget.
func (o PowerpackWidgetToplistDefinitionRequestOutput) RumQuery() PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequest) *PowerpackWidgetToplistDefinitionRequestRumQuery {
		return v.RumQuery
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput)
}

// The query to use for this widget.
func (o PowerpackWidgetToplistDefinitionRequestOutput) SecurityQuery() PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequest) *PowerpackWidgetToplistDefinitionRequestSecurityQuery {
		return v.SecurityQuery
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput)
}

// Define request for the widget's style.
func (o PowerpackWidgetToplistDefinitionRequestOutput) Style() PowerpackWidgetToplistDefinitionRequestStylePtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequest) *PowerpackWidgetToplistDefinitionRequestStyle {
		return v.Style
	}).(PowerpackWidgetToplistDefinitionRequestStylePtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequest)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestArrayOutput) ToPowerpackWidgetToplistDefinitionRequestArrayOutput() PowerpackWidgetToplistDefinitionRequestArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestArrayOutput) ToPowerpackWidgetToplistDefinitionRequestArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequest {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequest)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQuery struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery *PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies []PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy `pulumi:"groupBies"`
	// The name of the index to query.
	Index string `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes []PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery *string `pulumi:"searchQuery"`
}

// PowerpackWidgetToplistDefinitionRequestApmQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestApmQueryArgs and PowerpackWidgetToplistDefinitionRequestApmQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestApmQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestApmQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestApmQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestApmQueryOutput() PowerpackWidgetToplistDefinitionRequestApmQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestApmQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestApmQueryArgs struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrInput `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayInput `pulumi:"groupBies"`
	// The name of the index to query.
	Index pulumi.StringInput `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayInput `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery pulumi.StringPtrInput `pulumi:"searchQuery"`
}

func (PowerpackWidgetToplistDefinitionRequestApmQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryOutput() PowerpackWidgetToplistDefinitionRequestApmQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryOutput).ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestApmQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestApmQueryArgs, PowerpackWidgetToplistDefinitionRequestApmQueryPtr and PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestApmQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestApmQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestApmQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestApmQueryPtrType PowerpackWidgetToplistDefinitionRequestApmQueryArgs

func PowerpackWidgetToplistDefinitionRequestApmQueryPtr(v *PowerpackWidgetToplistDefinitionRequestApmQueryArgs) PowerpackWidgetToplistDefinitionRequestApmQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestApmQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestApmQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestApmQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestApmQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestApmQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestApmQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryOutput() PowerpackWidgetToplistDefinitionRequestApmQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestApmQuery) *PowerpackWidgetToplistDefinitionRequestApmQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryOutput) ComputeQuery() PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQuery) *PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery {
		return v.ComputeQuery
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQuery) []PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy {
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQuery) string { return v.Index }).(pulumi.StringOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryOutput) MultiComputes() PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQuery) []PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute {
		return v.MultiComputes
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQuery) *string { return v.SearchQuery }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestApmQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestApmQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQuery) PowerpackWidgetToplistDefinitionRequestApmQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestApmQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput) ComputeQuery() PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQuery) *PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery {
		if v == nil {
			return nil
		}
		return v.ComputeQuery
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQuery) []PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput) MultiComputes() PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQuery) []PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute {
		if v == nil {
			return nil
		}
		return v.MultiComputes
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQuery) *string {
		if v == nil {
			return nil
		}
		return v.SearchQuery
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs and PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput).ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs, PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtr and PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrType PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs

func PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtr(v *PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs) PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery) *PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery) PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQueryComputeQuery) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy struct {
	// The facet name.
	Facet *string `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit *int `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery *PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery `pulumi:"sortQuery"`
}

// PowerpackWidgetToplistDefinitionRequestApmQueryGroupByInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArgs and PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestApmQueryGroupByInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArgs{...}
type PowerpackWidgetToplistDefinitionRequestApmQueryGroupByInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput
	ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput
}

type PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArgs struct {
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrInput `pulumi:"sortQuery"`
}

func (PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput)
}

// PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArray and PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArray{ PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArgs{...} }
type PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArray []PowerpackWidgetToplistDefinitionRequestApmQueryGroupByInput

func (PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput {
	return o
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// The maximum number of items in the group.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// A list of exactly one element describing the sort query to use.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput) SortQuery() PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy) *PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery {
		return v.SortQuery
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestApmQueryGroupBy)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order string `pulumi:"order"`
}

// PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs and PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order pulumi.StringInput `pulumi:"order"`
}

func (PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput).ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs, PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtr and PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrType PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs

func PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtr(v *PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs) PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery) *PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery) string { return v.Order }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery) PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArgs and PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArgs{...}
type PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput
	ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput
}

type PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArgs) ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput)
}

// PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArray and PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArray{ PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArgs{...} }
type PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArray []PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeInput

func (PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArray) ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArray) ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput {
	return o
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestApmQueryMultiCompute)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQuery struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery *PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies []PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy `pulumi:"groupBies"`
	// The name of the index to query.
	Index string `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes []PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery *string `pulumi:"searchQuery"`
}

// PowerpackWidgetToplistDefinitionRequestAuditQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestAuditQueryArgs and PowerpackWidgetToplistDefinitionRequestAuditQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestAuditQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestAuditQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestAuditQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestAuditQueryOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestAuditQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryArgs struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrInput `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayInput `pulumi:"groupBies"`
	// The name of the index to query.
	Index pulumi.StringInput `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayInput `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery pulumi.StringPtrInput `pulumi:"searchQuery"`
}

func (PowerpackWidgetToplistDefinitionRequestAuditQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryOutput).ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestAuditQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestAuditQueryArgs, PowerpackWidgetToplistDefinitionRequestAuditQueryPtr and PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestAuditQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestAuditQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestAuditQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestAuditQueryPtrType PowerpackWidgetToplistDefinitionRequestAuditQueryArgs

func PowerpackWidgetToplistDefinitionRequestAuditQueryPtr(v *PowerpackWidgetToplistDefinitionRequestAuditQueryArgs) PowerpackWidgetToplistDefinitionRequestAuditQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestAuditQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestAuditQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestAuditQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestAuditQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestAuditQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestAuditQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestAuditQuery) *PowerpackWidgetToplistDefinitionRequestAuditQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryOutput) ComputeQuery() PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQuery) *PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery {
		return v.ComputeQuery
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQuery) []PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy {
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQuery) string { return v.Index }).(pulumi.StringOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryOutput) MultiComputes() PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQuery) []PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute {
		return v.MultiComputes
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQuery) *string { return v.SearchQuery }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestAuditQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestAuditQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQuery) PowerpackWidgetToplistDefinitionRequestAuditQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestAuditQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput) ComputeQuery() PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQuery) *PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery {
		if v == nil {
			return nil
		}
		return v.ComputeQuery
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQuery) []PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput) MultiComputes() PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQuery) []PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute {
		if v == nil {
			return nil
		}
		return v.MultiComputes
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQuery) *string {
		if v == nil {
			return nil
		}
		return v.SearchQuery
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs and PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput).ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs, PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtr and PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrType PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs

func PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtr(v *PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs) PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery) *PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery) PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQuery) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy struct {
	// The facet name.
	Facet *string `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit *int `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery *PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery `pulumi:"sortQuery"`
}

// PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArgs and PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArgs{...}
type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput
	ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArgs struct {
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrInput `pulumi:"sortQuery"`
}

func (PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput)
}

// PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArray and PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArray{ PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArgs{...} }
type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArray []PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByInput

func (PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput {
	return o
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// The maximum number of items in the group.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// A list of exactly one element describing the sort query to use.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput) SortQuery() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy) *PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery {
		return v.SortQuery
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBy)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order string `pulumi:"order"`
}

// PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs and PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order pulumi.StringInput `pulumi:"order"`
}

func (PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput).ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs, PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtr and PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrType PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs

func PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtr(v *PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery) *PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery) string { return v.Order }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery) PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArgs and PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArgs{...}
type PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput
	ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArgs) ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput)
}

// PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArray and PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArray{ PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArgs{...} }
type PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArray []PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeInput

func (PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArray) ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArray) ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput {
	return o
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestAuditQueryMultiCompute)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput)
}

type PowerpackWidgetToplistDefinitionRequestConditionalFormat struct {
	// The comparator to use. Valid values are `=`, `>`, `>=`, `<`, `<=`.
	Comparator string `pulumi:"comparator"`
	// The color palette to apply to the background, same values available as palette.
	CustomBgColor *string `pulumi:"customBgColor"`
	// The color palette to apply to the foreground, same values available as palette.
	CustomFgColor *string `pulumi:"customFgColor"`
	// Setting this to True hides values.
	HideValue *bool `pulumi:"hideValue"`
	// Displays an image as the background.
	ImageUrl *string `pulumi:"imageUrl"`
	// The metric from the request to correlate with this conditional format.
	Metric *string `pulumi:"metric"`
	// The color palette to apply. Valid values are `blue`, `customBg`, `customImage`, `customText`, `grayOnWhite`, `grey`, `green`, `orange`, `red`, `redOnWhite`, `whiteOnGray`, `whiteOnGreen`, `greenOnWhite`, `whiteOnRed`, `whiteOnYellow`, `yellowOnWhite`, `blackOnLightYellow`, `blackOnLightGreen`, `blackOnLightRed`.
	Palette string `pulumi:"palette"`
	// Defines the displayed timeframe.
	Timeframe *string `pulumi:"timeframe"`
	// A value for the comparator.
	Value float64 `pulumi:"value"`
}

// PowerpackWidgetToplistDefinitionRequestConditionalFormatInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestConditionalFormatArgs and PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestConditionalFormatInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestConditionalFormatArgs{...}
type PowerpackWidgetToplistDefinitionRequestConditionalFormatInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestConditionalFormatOutput() PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput
	ToPowerpackWidgetToplistDefinitionRequestConditionalFormatOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput
}

type PowerpackWidgetToplistDefinitionRequestConditionalFormatArgs struct {
	// The comparator to use. Valid values are `=`, `>`, `>=`, `<`, `<=`.
	Comparator pulumi.StringInput `pulumi:"comparator"`
	// The color palette to apply to the background, same values available as palette.
	CustomBgColor pulumi.StringPtrInput `pulumi:"customBgColor"`
	// The color palette to apply to the foreground, same values available as palette.
	CustomFgColor pulumi.StringPtrInput `pulumi:"customFgColor"`
	// Setting this to True hides values.
	HideValue pulumi.BoolPtrInput `pulumi:"hideValue"`
	// Displays an image as the background.
	ImageUrl pulumi.StringPtrInput `pulumi:"imageUrl"`
	// The metric from the request to correlate with this conditional format.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// The color palette to apply. Valid values are `blue`, `customBg`, `customImage`, `customText`, `grayOnWhite`, `grey`, `green`, `orange`, `red`, `redOnWhite`, `whiteOnGray`, `whiteOnGreen`, `greenOnWhite`, `whiteOnRed`, `whiteOnYellow`, `yellowOnWhite`, `blackOnLightYellow`, `blackOnLightGreen`, `blackOnLightRed`.
	Palette pulumi.StringInput `pulumi:"palette"`
	// Defines the displayed timeframe.
	Timeframe pulumi.StringPtrInput `pulumi:"timeframe"`
	// A value for the comparator.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (PowerpackWidgetToplistDefinitionRequestConditionalFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestConditionalFormat)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestConditionalFormatArgs) ToPowerpackWidgetToplistDefinitionRequestConditionalFormatOutput() PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestConditionalFormatOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestConditionalFormatArgs) ToPowerpackWidgetToplistDefinitionRequestConditionalFormatOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput)
}

// PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestConditionalFormatArray and PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestConditionalFormatArray{ PowerpackWidgetToplistDefinitionRequestConditionalFormatArgs{...} }
type PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput() PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestConditionalFormatArray []PowerpackWidgetToplistDefinitionRequestConditionalFormatInput

func (PowerpackWidgetToplistDefinitionRequestConditionalFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestConditionalFormat)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestConditionalFormatArray) ToPowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput() PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestConditionalFormatArray) ToPowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestConditionalFormat)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) ToPowerpackWidgetToplistDefinitionRequestConditionalFormatOutput() PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) ToPowerpackWidgetToplistDefinitionRequestConditionalFormatOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput {
	return o
}

// The comparator to use. Valid values are `=`, `>`, `>=`, `<`, `<=`.
func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) Comparator() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestConditionalFormat) string { return v.Comparator }).(pulumi.StringOutput)
}

// The color palette to apply to the background, same values available as palette.
func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) CustomBgColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestConditionalFormat) *string { return v.CustomBgColor }).(pulumi.StringPtrOutput)
}

// The color palette to apply to the foreground, same values available as palette.
func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) CustomFgColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestConditionalFormat) *string { return v.CustomFgColor }).(pulumi.StringPtrOutput)
}

// Setting this to True hides values.
func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) HideValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestConditionalFormat) *bool { return v.HideValue }).(pulumi.BoolPtrOutput)
}

// Displays an image as the background.
func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) ImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestConditionalFormat) *string { return v.ImageUrl }).(pulumi.StringPtrOutput)
}

// The metric from the request to correlate with this conditional format.
func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestConditionalFormat) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// The color palette to apply. Valid values are `blue`, `customBg`, `customImage`, `customText`, `grayOnWhite`, `grey`, `green`, `orange`, `red`, `redOnWhite`, `whiteOnGray`, `whiteOnGreen`, `greenOnWhite`, `whiteOnRed`, `whiteOnYellow`, `yellowOnWhite`, `blackOnLightYellow`, `blackOnLightGreen`, `blackOnLightRed`.
func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) Palette() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestConditionalFormat) string { return v.Palette }).(pulumi.StringOutput)
}

// Defines the displayed timeframe.
func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) Timeframe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestConditionalFormat) *string { return v.Timeframe }).(pulumi.StringPtrOutput)
}

// A value for the comparator.
func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestConditionalFormat) float64 { return v.Value }).(pulumi.Float64Output)
}

type PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestConditionalFormat)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput) ToPowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput() PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput) ToPowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestConditionalFormat {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestConditionalFormat)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormula struct {
	// An expression alias.
	Alias *string `pulumi:"alias"`
	// A list of display modes for each table cell. Valid values are `number`, `bar`, `trend`.
	CellDisplayMode *string `pulumi:"cellDisplayMode"`
	// Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditionalFormats` blocks are allowed using the structure below.
	ConditionalFormats []PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat `pulumi:"conditionalFormats"`
	// A string expression built from queries, formulas, and functions.
	FormulaExpression string `pulumi:"formulaExpression"`
	// The options for limiting results returned.
	Limit *PowerpackWidgetToplistDefinitionRequestFormulaLimit `pulumi:"limit"`
	// Number formatting options for the formula.
	NumberFormat *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat `pulumi:"numberFormat"`
	// Styling options for widget formulas.
	Style *PowerpackWidgetToplistDefinitionRequestFormulaStyle `pulumi:"style"`
}

// PowerpackWidgetToplistDefinitionRequestFormulaInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaArgs and PowerpackWidgetToplistDefinitionRequestFormulaOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestFormulaArgs{...}
type PowerpackWidgetToplistDefinitionRequestFormulaInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaOutput() PowerpackWidgetToplistDefinitionRequestFormulaOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaOutput
}

type PowerpackWidgetToplistDefinitionRequestFormulaArgs struct {
	// An expression alias.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// A list of display modes for each table cell. Valid values are `number`, `bar`, `trend`.
	CellDisplayMode pulumi.StringPtrInput `pulumi:"cellDisplayMode"`
	// Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditionalFormats` blocks are allowed using the structure below.
	ConditionalFormats PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayInput `pulumi:"conditionalFormats"`
	// A string expression built from queries, formulas, and functions.
	FormulaExpression pulumi.StringInput `pulumi:"formulaExpression"`
	// The options for limiting results returned.
	Limit PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrInput `pulumi:"limit"`
	// Number formatting options for the formula.
	NumberFormat PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrInput `pulumi:"numberFormat"`
	// Styling options for widget formulas.
	Style PowerpackWidgetToplistDefinitionRequestFormulaStylePtrInput `pulumi:"style"`
}

func (PowerpackWidgetToplistDefinitionRequestFormulaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormula)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaOutput() PowerpackWidgetToplistDefinitionRequestFormulaOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaOutput)
}

// PowerpackWidgetToplistDefinitionRequestFormulaArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaArray and PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestFormulaArray{ PowerpackWidgetToplistDefinitionRequestFormulaArgs{...} }
type PowerpackWidgetToplistDefinitionRequestFormulaArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaArrayOutput() PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestFormulaArray []PowerpackWidgetToplistDefinitionRequestFormulaInput

func (PowerpackWidgetToplistDefinitionRequestFormulaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestFormula)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaArray) ToPowerpackWidgetToplistDefinitionRequestFormulaArrayOutput() PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaArray) ToPowerpackWidgetToplistDefinitionRequestFormulaArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormula)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaOutput() PowerpackWidgetToplistDefinitionRequestFormulaOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaOutput {
	return o
}

// An expression alias.
func (o PowerpackWidgetToplistDefinitionRequestFormulaOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormula) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// A list of display modes for each table cell. Valid values are `number`, `bar`, `trend`.
func (o PowerpackWidgetToplistDefinitionRequestFormulaOutput) CellDisplayMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormula) *string { return v.CellDisplayMode }).(pulumi.StringPtrOutput)
}

// Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditionalFormats` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestFormulaOutput) ConditionalFormats() PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormula) []PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat {
		return v.ConditionalFormats
	}).(PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput)
}

// A string expression built from queries, formulas, and functions.
func (o PowerpackWidgetToplistDefinitionRequestFormulaOutput) FormulaExpression() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormula) string { return v.FormulaExpression }).(pulumi.StringOutput)
}

// The options for limiting results returned.
func (o PowerpackWidgetToplistDefinitionRequestFormulaOutput) Limit() PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormula) *PowerpackWidgetToplistDefinitionRequestFormulaLimit {
		return v.Limit
	}).(PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput)
}

// Number formatting options for the formula.
func (o PowerpackWidgetToplistDefinitionRequestFormulaOutput) NumberFormat() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormula) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat {
		return v.NumberFormat
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput)
}

// Styling options for widget formulas.
func (o PowerpackWidgetToplistDefinitionRequestFormulaOutput) Style() PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormula) *PowerpackWidgetToplistDefinitionRequestFormulaStyle {
		return v.Style
	}).(PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestFormula)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaArrayOutput() PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestFormulaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestFormula {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestFormula)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestFormulaOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat struct {
	// The comparator to use. Valid values are `=`, `>`, `>=`, `<`, `<=`.
	Comparator string `pulumi:"comparator"`
	// The color palette to apply to the background, same values available as palette.
	CustomBgColor *string `pulumi:"customBgColor"`
	// The color palette to apply to the foreground, same values available as palette.
	CustomFgColor *string `pulumi:"customFgColor"`
	// Setting this to True hides values.
	HideValue *bool `pulumi:"hideValue"`
	// Displays an image as the background.
	ImageUrl *string `pulumi:"imageUrl"`
	// The metric from the request to correlate with this conditional format.
	Metric *string `pulumi:"metric"`
	// The color palette to apply. Valid values are `blue`, `customBg`, `customImage`, `customText`, `grayOnWhite`, `grey`, `green`, `orange`, `red`, `redOnWhite`, `whiteOnGray`, `whiteOnGreen`, `greenOnWhite`, `whiteOnRed`, `whiteOnYellow`, `yellowOnWhite`, `blackOnLightYellow`, `blackOnLightGreen`, `blackOnLightRed`.
	Palette string `pulumi:"palette"`
	// Defines the displayed timeframe.
	Timeframe *string `pulumi:"timeframe"`
	// A value for the comparator.
	Value float64 `pulumi:"value"`
}

// PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArgs and PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArgs{...}
type PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput() PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput
}

type PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArgs struct {
	// The comparator to use. Valid values are `=`, `>`, `>=`, `<`, `<=`.
	Comparator pulumi.StringInput `pulumi:"comparator"`
	// The color palette to apply to the background, same values available as palette.
	CustomBgColor pulumi.StringPtrInput `pulumi:"customBgColor"`
	// The color palette to apply to the foreground, same values available as palette.
	CustomFgColor pulumi.StringPtrInput `pulumi:"customFgColor"`
	// Setting this to True hides values.
	HideValue pulumi.BoolPtrInput `pulumi:"hideValue"`
	// Displays an image as the background.
	ImageUrl pulumi.StringPtrInput `pulumi:"imageUrl"`
	// The metric from the request to correlate with this conditional format.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// The color palette to apply. Valid values are `blue`, `customBg`, `customImage`, `customText`, `grayOnWhite`, `grey`, `green`, `orange`, `red`, `redOnWhite`, `whiteOnGray`, `whiteOnGreen`, `greenOnWhite`, `whiteOnRed`, `whiteOnYellow`, `yellowOnWhite`, `blackOnLightYellow`, `blackOnLightGreen`, `blackOnLightRed`.
	Palette pulumi.StringInput `pulumi:"palette"`
	// Defines the displayed timeframe.
	Timeframe pulumi.StringPtrInput `pulumi:"timeframe"`
	// A value for the comparator.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput() PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput)
}

// PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArray and PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArray{ PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArgs{...} }
type PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput() PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArray []PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatInput

func (PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArray) ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput() PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArray) ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput() PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput {
	return o
}

// The comparator to use. Valid values are `=`, `>`, `>=`, `<`, `<=`.
func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) Comparator() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat) string { return v.Comparator }).(pulumi.StringOutput)
}

// The color palette to apply to the background, same values available as palette.
func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) CustomBgColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat) *string {
		return v.CustomBgColor
	}).(pulumi.StringPtrOutput)
}

// The color palette to apply to the foreground, same values available as palette.
func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) CustomFgColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat) *string {
		return v.CustomFgColor
	}).(pulumi.StringPtrOutput)
}

// Setting this to True hides values.
func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) HideValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat) *bool { return v.HideValue }).(pulumi.BoolPtrOutput)
}

// Displays an image as the background.
func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) ImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat) *string { return v.ImageUrl }).(pulumi.StringPtrOutput)
}

// The metric from the request to correlate with this conditional format.
func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// The color palette to apply. Valid values are `blue`, `customBg`, `customImage`, `customText`, `grayOnWhite`, `grey`, `green`, `orange`, `red`, `redOnWhite`, `whiteOnGray`, `whiteOnGreen`, `greenOnWhite`, `whiteOnRed`, `whiteOnYellow`, `yellowOnWhite`, `blackOnLightYellow`, `blackOnLightGreen`, `blackOnLightRed`.
func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) Palette() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat) string { return v.Palette }).(pulumi.StringOutput)
}

// Defines the displayed timeframe.
func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) Timeframe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat) *string { return v.Timeframe }).(pulumi.StringPtrOutput)
}

// A value for the comparator.
func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat) float64 { return v.Value }).(pulumi.Float64Output)
}

type PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput() PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormat)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaLimit struct {
	// The number of results to return.
	Count *int `pulumi:"count"`
	// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
	Order *string `pulumi:"order"`
}

// PowerpackWidgetToplistDefinitionRequestFormulaLimitInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs and PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaLimitInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs{...}
type PowerpackWidgetToplistDefinitionRequestFormulaLimitInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaLimitOutput() PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaLimitOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput
}

type PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs struct {
	// The number of results to return.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
	Order pulumi.StringPtrInput `pulumi:"order"`
}

func (PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaLimit)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitOutput() PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaLimitOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput).ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs, PowerpackWidgetToplistDefinitionRequestFormulaLimitPtr and PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput
}

type powerpackWidgetToplistDefinitionRequestFormulaLimitPtrType PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs

func PowerpackWidgetToplistDefinitionRequestFormulaLimitPtr(v *PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs) PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestFormulaLimitPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestFormulaLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaLimit)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaLimitPtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaLimitPtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaLimit)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitOutput() PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestFormulaLimit) *PowerpackWidgetToplistDefinitionRequestFormulaLimit {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput)
}

// The number of results to return.
func (o PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaLimit) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
func (o PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaLimit) *string { return v.Order }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaLimit)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaLimit) PowerpackWidgetToplistDefinitionRequestFormulaLimit {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestFormulaLimit
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput)
}

// The number of results to return.
func (o PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaLimit) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
func (o PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaLimit) *string {
		if v == nil {
			return nil
		}
		return v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat struct {
	// Unit of the number format.
	Unit      PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit       `pulumi:"unit"`
	UnitScale *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale `pulumi:"unitScale"`
}

// PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs and PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs{...}
type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs struct {
	// Unit of the number format.
	Unit      PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitInput         `pulumi:"unit"`
	UnitScale PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrInput `pulumi:"unitScale"`
}

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput).ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs, PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtr and PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput
}

type powerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrType PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs

func PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtr(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput)
}

// Unit of the number format.
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput) Unit() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit {
		return v.Unit
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput)
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput) UnitScale() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale {
		return v.UnitScale
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput)
}

// Unit of the number format.
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput) Unit() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput)
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput) UnitScale() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormat) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale {
		if v == nil {
			return nil
		}
		return v.UnitScale
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit struct {
	// Canonical Units
	Canonical *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical `pulumi:"canonical"`
	// Use custom (non canonical metrics)
	Custom *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom `pulumi:"custom"`
}

// PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs and PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs{...}
type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs struct {
	// Canonical Units
	Canonical PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput `pulumi:"canonical"`
	// Use custom (non canonical metrics)
	Custom PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrInput `pulumi:"custom"`
}

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput).ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs, PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtr and PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput
}

type powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrType PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs

func PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtr(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput)
}

// Canonical Units
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput) Canonical() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical {
		return v.Canonical
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput)
}

// Use custom (non canonical metrics)
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput) Custom() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom {
		return v.Custom
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput)
}

// Canonical Units
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput) Canonical() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical {
		if v == nil {
			return nil
		}
		return v.Canonical
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput)
}

// Use custom (non canonical metrics)
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput) Custom() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnit) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom {
		if v == nil {
			return nil
		}
		return v.Custom
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical struct {
	// per unit name. If you want to represent megabytes/s, you set 'unit*name' = 'megabyte' and 'per*unit_name = 'second'
	PerUnitName *string `pulumi:"perUnitName"`
	// Unit name. It should be in singular form ('megabyte' and not 'megabytes')
	UnitName string `pulumi:"unitName"`
}

// PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs and PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs{...}
type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs struct {
	// per unit name. If you want to represent megabytes/s, you set 'unit*name' = 'megabyte' and 'per*unit_name = 'second'
	PerUnitName pulumi.StringPtrInput `pulumi:"perUnitName"`
	// Unit name. It should be in singular form ('megabyte' and not 'megabytes')
	UnitName pulumi.StringInput `pulumi:"unitName"`
}

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput).ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs, PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtr and PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput
}

type powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrType PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs

func PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtr(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput)
}

// per unit name. If you want to represent megabytes/s, you set 'unit*name' = 'megabyte' and 'per*unit_name = 'second'
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) PerUnitName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical) *string {
		return v.PerUnitName
	}).(pulumi.StringPtrOutput)
}

// Unit name. It should be in singular form ('megabyte' and not 'megabytes')
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) UnitName() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical) string {
		return v.UnitName
	}).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput)
}

// per unit name. If you want to represent megabytes/s, you set 'unit*name' = 'megabyte' and 'per*unit_name = 'second'
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) PerUnitName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical) *string {
		if v == nil {
			return nil
		}
		return v.PerUnitName
	}).(pulumi.StringPtrOutput)
}

// Unit name. It should be in singular form ('megabyte' and not 'megabytes')
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) UnitName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonical) *string {
		if v == nil {
			return nil
		}
		return &v.UnitName
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom struct {
	// Unit label
	Label string `pulumi:"label"`
}

// PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs and PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs{...}
type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs struct {
	// Unit label
	Label pulumi.StringInput `pulumi:"label"`
}

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput).ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs, PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtr and PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput
}

type powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrType PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs

func PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtr(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput)
}

// Unit label
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom) string { return v.Label }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput)
}

// Unit label
func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustom) *string {
		if v == nil {
			return nil
		}
		return &v.Label
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale struct {
	UnitName string `pulumi:"unitName"`
}

// PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs and PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs{...}
type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs struct {
	UnitName pulumi.StringInput `pulumi:"unitName"`
}

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput).ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs, PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtr and PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput
}

type powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrType PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs

func PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtr(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrInput {
	return (*powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale) *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput)
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput) UnitName() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale) string { return v.UnitName }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale) PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput)
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput) UnitName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScale) *string {
		if v == nil {
			return nil
		}
		return &v.UnitName
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaStyle struct {
	// The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.
	Palette *string `pulumi:"palette"`
	// Index specifying which color to use within the palette.
	PaletteIndex *int `pulumi:"paletteIndex"`
}

// PowerpackWidgetToplistDefinitionRequestFormulaStyleInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs and PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaStyleInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs{...}
type PowerpackWidgetToplistDefinitionRequestFormulaStyleInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaStyleOutput() PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaStyleOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput
}

type PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs struct {
	// The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.
	Palette pulumi.StringPtrInput `pulumi:"palette"`
	// Index specifying which color to use within the palette.
	PaletteIndex pulumi.IntPtrInput `pulumi:"paletteIndex"`
}

func (PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaStyle)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaStyleOutput() PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaStyleOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaStyleOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs) ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput).ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestFormulaStylePtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs, PowerpackWidgetToplistDefinitionRequestFormulaStylePtr and PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestFormulaStylePtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestFormulaStylePtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput
	ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput
}

type powerpackWidgetToplistDefinitionRequestFormulaStylePtrType PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs

func PowerpackWidgetToplistDefinitionRequestFormulaStylePtr(v *PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs) PowerpackWidgetToplistDefinitionRequestFormulaStylePtrInput {
	return (*powerpackWidgetToplistDefinitionRequestFormulaStylePtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestFormulaStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaStyle)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaStylePtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestFormulaStylePtrType) ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaStyle)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaStyleOutput() PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaStyleOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestFormulaStyle) *PowerpackWidgetToplistDefinitionRequestFormulaStyle {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput)
}

// The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.
func (o PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput) Palette() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaStyle) *string { return v.Palette }).(pulumi.StringPtrOutput)
}

// Index specifying which color to use within the palette.
func (o PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput) PaletteIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestFormulaStyle) *int { return v.PaletteIndex }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestFormulaStyle)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput() PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput) ToPowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaStyle) PowerpackWidgetToplistDefinitionRequestFormulaStyle {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestFormulaStyle
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput)
}

// The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.
func (o PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput) Palette() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaStyle) *string {
		if v == nil {
			return nil
		}
		return v.Palette
	}).(pulumi.StringPtrOutput)
}

// Index specifying which color to use within the palette.
func (o PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput) PaletteIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestFormulaStyle) *int {
		if v == nil {
			return nil
		}
		return v.PaletteIndex
	}).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQuery struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery *PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies []PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy `pulumi:"groupBies"`
	// The name of the index to query.
	Index string `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes []PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery *string `pulumi:"searchQuery"`
}

// PowerpackWidgetToplistDefinitionRequestLogQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestLogQueryArgs and PowerpackWidgetToplistDefinitionRequestLogQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestLogQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestLogQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestLogQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestLogQueryOutput() PowerpackWidgetToplistDefinitionRequestLogQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestLogQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestLogQueryArgs struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrInput `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayInput `pulumi:"groupBies"`
	// The name of the index to query.
	Index pulumi.StringInput `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayInput `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery pulumi.StringPtrInput `pulumi:"searchQuery"`
}

func (PowerpackWidgetToplistDefinitionRequestLogQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryOutput() PowerpackWidgetToplistDefinitionRequestLogQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryOutput).ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestLogQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestLogQueryArgs, PowerpackWidgetToplistDefinitionRequestLogQueryPtr and PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestLogQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestLogQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestLogQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestLogQueryPtrType PowerpackWidgetToplistDefinitionRequestLogQueryArgs

func PowerpackWidgetToplistDefinitionRequestLogQueryPtr(v *PowerpackWidgetToplistDefinitionRequestLogQueryArgs) PowerpackWidgetToplistDefinitionRequestLogQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestLogQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestLogQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestLogQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestLogQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestLogQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestLogQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryOutput() PowerpackWidgetToplistDefinitionRequestLogQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestLogQuery) *PowerpackWidgetToplistDefinitionRequestLogQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryOutput) ComputeQuery() PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQuery) *PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery {
		return v.ComputeQuery
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQuery) []PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy {
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQuery) string { return v.Index }).(pulumi.StringOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryOutput) MultiComputes() PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQuery) []PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute {
		return v.MultiComputes
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQuery) *string { return v.SearchQuery }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestLogQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestLogQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQuery) PowerpackWidgetToplistDefinitionRequestLogQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestLogQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput) ComputeQuery() PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQuery) *PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery {
		if v == nil {
			return nil
		}
		return v.ComputeQuery
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQuery) []PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput) MultiComputes() PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQuery) []PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute {
		if v == nil {
			return nil
		}
		return v.MultiComputes
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQuery) *string {
		if v == nil {
			return nil
		}
		return v.SearchQuery
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs and PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput).ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs, PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtr and PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrType PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs

func PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtr(v *PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs) PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery) *PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery) PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQueryComputeQuery) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy struct {
	// The facet name.
	Facet *string `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit *int `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery *PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery `pulumi:"sortQuery"`
}

// PowerpackWidgetToplistDefinitionRequestLogQueryGroupByInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArgs and PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestLogQueryGroupByInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArgs{...}
type PowerpackWidgetToplistDefinitionRequestLogQueryGroupByInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput
	ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput
}

type PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArgs struct {
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrInput `pulumi:"sortQuery"`
}

func (PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput)
}

// PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArray and PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArray{ PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArgs{...} }
type PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArray []PowerpackWidgetToplistDefinitionRequestLogQueryGroupByInput

func (PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput {
	return o
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// The maximum number of items in the group.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// A list of exactly one element describing the sort query to use.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput) SortQuery() PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy) *PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery {
		return v.SortQuery
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestLogQueryGroupBy)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order string `pulumi:"order"`
}

// PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs and PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order pulumi.StringInput `pulumi:"order"`
}

func (PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput).ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs, PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtr and PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrType PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs

func PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtr(v *PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs) PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery) *PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery) string { return v.Order }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery) PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArgs and PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArgs{...}
type PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput
	ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput
}

type PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArgs) ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput)
}

// PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArray and PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArray{ PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArgs{...} }
type PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArray []PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeInput

func (PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArray) ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArray) ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput {
	return o
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestLogQueryMultiCompute)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput)
}

type PowerpackWidgetToplistDefinitionRequestProcessQuery struct {
	// A list of processes.
	FilterBies []string `pulumi:"filterBies"`
	// The max number of items in the filter list.
	Limit *int `pulumi:"limit"`
	// Your chosen metric.
	Metric string `pulumi:"metric"`
	// Your chosen search term.
	SearchBy *string `pulumi:"searchBy"`
}

// PowerpackWidgetToplistDefinitionRequestProcessQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestProcessQueryArgs and PowerpackWidgetToplistDefinitionRequestProcessQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestProcessQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestProcessQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestProcessQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestProcessQueryOutput() PowerpackWidgetToplistDefinitionRequestProcessQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestProcessQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestProcessQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestProcessQueryArgs struct {
	// A list of processes.
	FilterBies pulumi.StringArrayInput `pulumi:"filterBies"`
	// The max number of items in the filter list.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// Your chosen metric.
	Metric pulumi.StringInput `pulumi:"metric"`
	// Your chosen search term.
	SearchBy pulumi.StringPtrInput `pulumi:"searchBy"`
}

func (PowerpackWidgetToplistDefinitionRequestProcessQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestProcessQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestProcessQueryArgs) ToPowerpackWidgetToplistDefinitionRequestProcessQueryOutput() PowerpackWidgetToplistDefinitionRequestProcessQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestProcessQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestProcessQueryArgs) ToPowerpackWidgetToplistDefinitionRequestProcessQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestProcessQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestProcessQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestProcessQueryArgs) ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestProcessQueryArgs) ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestProcessQueryOutput).ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestProcessQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestProcessQueryArgs, PowerpackWidgetToplistDefinitionRequestProcessQueryPtr and PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestProcessQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestProcessQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestProcessQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestProcessQueryPtrType PowerpackWidgetToplistDefinitionRequestProcessQueryArgs

func PowerpackWidgetToplistDefinitionRequestProcessQueryPtr(v *PowerpackWidgetToplistDefinitionRequestProcessQueryArgs) PowerpackWidgetToplistDefinitionRequestProcessQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestProcessQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestProcessQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestProcessQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestProcessQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestProcessQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestProcessQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestProcessQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestProcessQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestProcessQueryOutput) ToPowerpackWidgetToplistDefinitionRequestProcessQueryOutput() PowerpackWidgetToplistDefinitionRequestProcessQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestProcessQueryOutput) ToPowerpackWidgetToplistDefinitionRequestProcessQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestProcessQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestProcessQueryOutput) ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestProcessQueryOutput) ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestProcessQuery) *PowerpackWidgetToplistDefinitionRequestProcessQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput)
}

// A list of processes.
func (o PowerpackWidgetToplistDefinitionRequestProcessQueryOutput) FilterBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestProcessQuery) []string { return v.FilterBies }).(pulumi.StringArrayOutput)
}

// The max number of items in the filter list.
func (o PowerpackWidgetToplistDefinitionRequestProcessQueryOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestProcessQuery) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// Your chosen metric.
func (o PowerpackWidgetToplistDefinitionRequestProcessQueryOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestProcessQuery) string { return v.Metric }).(pulumi.StringOutput)
}

// Your chosen search term.
func (o PowerpackWidgetToplistDefinitionRequestProcessQueryOutput) SearchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestProcessQuery) *string { return v.SearchBy }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestProcessQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestProcessQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestProcessQuery) PowerpackWidgetToplistDefinitionRequestProcessQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestProcessQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestProcessQueryOutput)
}

// A list of processes.
func (o PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput) FilterBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestProcessQuery) []string {
		if v == nil {
			return nil
		}
		return v.FilterBies
	}).(pulumi.StringArrayOutput)
}

// The max number of items in the filter list.
func (o PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestProcessQuery) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

// Your chosen metric.
func (o PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestProcessQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Metric
	}).(pulumi.StringPtrOutput)
}

// Your chosen search term.
func (o PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput) SearchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.SearchBy
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQuery struct {
	// The APM Dependency Stats query using formulas and functions.
	ApmDependencyStatsQuery *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery `pulumi:"apmDependencyStatsQuery"`
	// The APM Resource Stats query using formulas and functions.
	ApmResourceStatsQuery *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery `pulumi:"apmResourceStatsQuery"`
	// The Cloud Cost query using formulas and functions.
	CloudCostQuery *PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery `pulumi:"cloudCostQuery"`
	// A timeseries formula and functions events query.
	EventQuery *PowerpackWidgetToplistDefinitionRequestQueryEventQuery `pulumi:"eventQuery"`
	// A timeseries formula and functions metrics query.
	MetricQuery *PowerpackWidgetToplistDefinitionRequestQueryMetricQuery `pulumi:"metricQuery"`
	// The process query using formulas and functions.
	ProcessQuery *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery `pulumi:"processQuery"`
	// The SLO query using formulas and functions.
	SloQuery *PowerpackWidgetToplistDefinitionRequestQuerySloQuery `pulumi:"sloQuery"`
}

// PowerpackWidgetToplistDefinitionRequestQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryArgs and PowerpackWidgetToplistDefinitionRequestQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryArgs struct {
	// The APM Dependency Stats query using formulas and functions.
	ApmDependencyStatsQuery PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrInput `pulumi:"apmDependencyStatsQuery"`
	// The APM Resource Stats query using formulas and functions.
	ApmResourceStatsQuery PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrInput `pulumi:"apmResourceStatsQuery"`
	// The Cloud Cost query using formulas and functions.
	CloudCostQuery PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrInput `pulumi:"cloudCostQuery"`
	// A timeseries formula and functions events query.
	EventQuery PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrInput `pulumi:"eventQuery"`
	// A timeseries formula and functions metrics query.
	MetricQuery PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrInput `pulumi:"metricQuery"`
	// The process query using formulas and functions.
	ProcessQuery PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrInput `pulumi:"processQuery"`
	// The SLO query using formulas and functions.
	SloQuery PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrInput `pulumi:"sloQuery"`
}

func (PowerpackWidgetToplistDefinitionRequestQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryOutput)
}

// PowerpackWidgetToplistDefinitionRequestQueryArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryArray and PowerpackWidgetToplistDefinitionRequestQueryArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryArray{ PowerpackWidgetToplistDefinitionRequestQueryArgs{...} }
type PowerpackWidgetToplistDefinitionRequestQueryArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryArrayOutput() PowerpackWidgetToplistDefinitionRequestQueryArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryArray []PowerpackWidgetToplistDefinitionRequestQueryInput

func (PowerpackWidgetToplistDefinitionRequestQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryArray) ToPowerpackWidgetToplistDefinitionRequestQueryArrayOutput() PowerpackWidgetToplistDefinitionRequestQueryArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryArray) ToPowerpackWidgetToplistDefinitionRequestQueryArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryOutput {
	return o
}

// The APM Dependency Stats query using formulas and functions.
func (o PowerpackWidgetToplistDefinitionRequestQueryOutput) ApmDependencyStatsQuery() PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuery) *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery {
		return v.ApmDependencyStatsQuery
	}).(PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput)
}

// The APM Resource Stats query using formulas and functions.
func (o PowerpackWidgetToplistDefinitionRequestQueryOutput) ApmResourceStatsQuery() PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuery) *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery {
		return v.ApmResourceStatsQuery
	}).(PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput)
}

// The Cloud Cost query using formulas and functions.
func (o PowerpackWidgetToplistDefinitionRequestQueryOutput) CloudCostQuery() PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuery) *PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery {
		return v.CloudCostQuery
	}).(PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput)
}

// A timeseries formula and functions events query.
func (o PowerpackWidgetToplistDefinitionRequestQueryOutput) EventQuery() PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuery) *PowerpackWidgetToplistDefinitionRequestQueryEventQuery {
		return v.EventQuery
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput)
}

// A timeseries formula and functions metrics query.
func (o PowerpackWidgetToplistDefinitionRequestQueryOutput) MetricQuery() PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuery) *PowerpackWidgetToplistDefinitionRequestQueryMetricQuery {
		return v.MetricQuery
	}).(PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput)
}

// The process query using formulas and functions.
func (o PowerpackWidgetToplistDefinitionRequestQueryOutput) ProcessQuery() PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuery) *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery {
		return v.ProcessQuery
	}).(PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput)
}

// The SLO query using formulas and functions.
func (o PowerpackWidgetToplistDefinitionRequestQueryOutput) SloQuery() PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuery) *PowerpackWidgetToplistDefinitionRequestQuerySloQuery {
		return v.SloQuery
	}).(PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryArrayOutput) ToPowerpackWidgetToplistDefinitionRequestQueryArrayOutput() PowerpackWidgetToplistDefinitionRequestQueryArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryArrayOutput) ToPowerpackWidgetToplistDefinitionRequestQueryArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestQuery {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestQuery)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestQueryOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
	DataSource string `pulumi:"dataSource"`
	// APM environment.
	Env string `pulumi:"env"`
	// Determines whether stats for upstream or downstream dependencies should be queried.
	IsUpstream *bool `pulumi:"isUpstream"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// Name of operation on service.
	OperationName string `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName *string `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue *string `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName string `pulumi:"resourceName"`
	// APM service.
	Service string `pulumi:"service"`
	// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
	Stat string `pulumi:"stat"`
}

// PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs and PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// APM environment.
	Env pulumi.StringInput `pulumi:"env"`
	// Determines whether stats for upstream or downstream dependencies should be queried.
	IsUpstream pulumi.BoolPtrInput `pulumi:"isUpstream"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of operation on service.
	OperationName pulumi.StringInput `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName pulumi.StringPtrInput `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue pulumi.StringPtrInput `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// APM service.
	Service pulumi.StringInput `pulumi:"service"`
	// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
	Stat pulumi.StringInput `pulumi:"stat"`
}

func (PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput).ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs, PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtr and PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrType PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs

func PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtr(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs) PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) string {
		return v.DataSource
	}).(pulumi.StringOutput)
}

// APM environment.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) Env() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) string { return v.Env }).(pulumi.StringOutput)
}

// Determines whether stats for upstream or downstream dependencies should be queried.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) IsUpstream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *bool { return v.IsUpstream }).(pulumi.BoolPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) string { return v.Name }).(pulumi.StringOutput)
}

// Name of operation on service.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) OperationName() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) string {
		return v.OperationName
	}).(pulumi.StringOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) string {
		return v.ResourceName
	}).(pulumi.StringOutput)
}

// APM service.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) string { return v.Service }).(pulumi.StringOutput)
}

// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput) Stat() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) string { return v.Stat }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// APM environment.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Env() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(pulumi.StringPtrOutput)
}

// Determines whether stats for upstream or downstream dependencies should be queried.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) IsUpstream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpstream
	}).(pulumi.BoolPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of operation on service.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.OperationName
	}).(pulumi.StringPtrOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// APM service.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Stat
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
	DataSource string `pulumi:"dataSource"`
	// APM environment.
	Env string `pulumi:"env"`
	// Array of fields to group results by.
	GroupBies []string `pulumi:"groupBies"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// Name of operation on service.
	OperationName *string `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName *string `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue *string `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName *string `pulumi:"resourceName"`
	// APM service.
	Service string `pulumi:"service"`
	// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
	Stat string `pulumi:"stat"`
}

// PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs and PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// APM environment.
	Env pulumi.StringInput `pulumi:"env"`
	// Array of fields to group results by.
	GroupBies pulumi.StringArrayInput `pulumi:"groupBies"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of operation on service.
	OperationName pulumi.StringPtrInput `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName pulumi.StringPtrInput `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue pulumi.StringPtrInput `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// APM service.
	Service pulumi.StringInput `pulumi:"service"`
	// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
	Stat pulumi.StringInput `pulumi:"stat"`
}

func (PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput).ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs, PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtr and PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrType PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs

func PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtr(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs) PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// APM environment.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) Env() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) string { return v.Env }).(pulumi.StringOutput)
}

// Array of fields to group results by.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) []string { return v.GroupBies }).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) string { return v.Name }).(pulumi.StringOutput)
}

// Name of operation on service.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.OperationName
	}).(pulumi.StringPtrOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// APM service.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) string { return v.Service }).(pulumi.StringOutput)
}

// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput) Stat() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) string { return v.Stat }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// APM environment.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Env() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(pulumi.StringPtrOutput)
}

// Array of fields to group results by.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) []string {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of operation on service.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.OperationName
	}).(pulumi.StringPtrOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// APM service.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
func (o PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Stat
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery struct {
	// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
	Aggregator *string `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for cloud cost queries. Valid values are `cloudCost`.
	DataSource string `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name string `pulumi:"name"`
	// The cloud cost query definition.
	Query string `pulumi:"query"`
}

// PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs and PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs struct {
	// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
	Aggregator pulumi.StringPtrInput `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for cloud cost queries. Valid values are `cloudCost`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The cloud cost query definition.
	Query pulumi.StringInput `pulumi:"query"`
}

func (PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput).ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs, PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtr and PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrType PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs

func PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtr(v *PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs) PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) *PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput)
}

// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) *string { return v.Aggregator }).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for cloud cost queries. Valid values are `cloudCost`.
func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The cloud cost query definition.
func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) string { return v.Query }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput)
}

// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return v.Aggregator
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for cloud cost queries. Valid values are `cloudCost`.
func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The cloud cost query definition.
func (o PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQuery struct {
	// The compute options.
	Computes []PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute `pulumi:"computes"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
	DataSource string `pulumi:"dataSource"`
	// Group by options.
	GroupBies []PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy `pulumi:"groupBies"`
	// An array of index names to query in the stream.
	Indexes []string `pulumi:"indexes"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// The search options.
	Search *PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch `pulumi:"search"`
	// Storage location (private beta).
	Storage *string `pulumi:"storage"`
}

// PowerpackWidgetToplistDefinitionRequestQueryEventQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs and PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryEventQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestQueryEventQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs struct {
	// The compute options.
	Computes PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayInput `pulumi:"computes"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Group by options.
	GroupBies PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayInput `pulumi:"groupBies"`
	// An array of index names to query in the stream.
	Indexes pulumi.StringArrayInput `pulumi:"indexes"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The search options.
	Search PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrInput `pulumi:"search"`
	// Storage location (private beta).
	Storage pulumi.StringPtrInput `pulumi:"storage"`
}

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput).ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs, PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtr and PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestQueryEventQueryPtrType PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs

func PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtr(v *PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs) PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestQueryEventQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestQueryEventQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestQueryEventQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestQueryEventQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestQueryEventQuery) *PowerpackWidgetToplistDefinitionRequestQueryEventQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput)
}

// The compute options.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) Computes() PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQuery) []PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute {
		return v.Computes
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// Group by options.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQuery) []PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy {
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput)
}

// An array of index names to query in the stream.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) Indexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQuery) []string { return v.Indexes }).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The search options.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) Search() PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQuery) *PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch {
		return v.Search
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput)
}

// Storage location (private beta).
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput) Storage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQuery) *string { return v.Storage }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuery) PowerpackWidgetToplistDefinitionRequestQueryEventQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestQueryEventQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput)
}

// The compute options.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) Computes() PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuery) []PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute {
		if v == nil {
			return nil
		}
		return v.Computes
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Group by options.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuery) []PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput)
}

// An array of index names to query in the stream.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) Indexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuery) []string {
		if v == nil {
			return nil
		}
		return v.Indexes
	}).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The search options.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) Search() PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuery) *PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch {
		if v == nil {
			return nil
		}
		return v.Search
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput)
}

// Storage location (private beta).
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput) Storage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return v.Storage
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute struct {
	// The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation string `pulumi:"aggregation"`
	// A time interval in milliseconds.
	Interval *int `pulumi:"interval"`
	// The measurable attribute to compute.
	Metric *string `pulumi:"metric"`
}

// PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArgs and PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArgs{...}
type PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArgs struct {
	// The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// A time interval in milliseconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The measurable attribute to compute.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
}

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput)
}

// PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArray and PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArray{ PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArgs{...} }
type PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArray []PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeInput

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArray) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArray) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput {
	return o
}

// The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute) string { return v.Aggregation }).(pulumi.StringOutput)
}

// A time interval in milliseconds.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The measurable attribute to compute.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestQueryEventQueryCompute)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy struct {
	// The event facet.
	Facet string `pulumi:"facet"`
	// The number of groups to return.
	Limit *int `pulumi:"limit"`
	// The options for sorting group by results.
	Sort *PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort `pulumi:"sort"`
}

// PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArgs and PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArgs{...}
type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArgs struct {
	// The event facet.
	Facet pulumi.StringInput `pulumi:"facet"`
	// The number of groups to return.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// The options for sorting group by results.
	Sort PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrInput `pulumi:"sort"`
}

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput)
}

// PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArray and PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArray{ PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArgs{...} }
type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArray []PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByInput

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput {
	return o
}

// The event facet.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput) Facet() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy) string { return v.Facet }).(pulumi.StringOutput)
}

// The number of groups to return.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// The options for sorting group by results.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput) Sort() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy) *PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort {
		return v.Sort
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBy)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort struct {
	// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation string `pulumi:"aggregation"`
	// The metric used for sorting group by results.
	Metric *string `pulumi:"metric"`
	// Direction of sort. Valid values are `asc`, `desc`.
	Order *string `pulumi:"order"`
}

// PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs and PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs{...}
type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs struct {
	// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The metric used for sorting group by results.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Direction of sort. Valid values are `asc`, `desc`.
	Order pulumi.StringPtrInput `pulumi:"order"`
}

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput).ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs, PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtr and PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput
}

type powerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrType PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs

func PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtr(v *PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort) *PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput)
}

// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The metric used for sorting group by results.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Direction of sort. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort) *string { return v.Order }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort) PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput)
}

// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The metric used for sorting group by results.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort) *string {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(pulumi.StringPtrOutput)
}

// Direction of sort. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySort) *string {
		if v == nil {
			return nil
		}
		return v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch struct {
	// The events search string.
	Query string `pulumi:"query"`
}

// PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs and PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs{...}
type PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs struct {
	// The events search string.
	Query pulumi.StringInput `pulumi:"query"`
}

func (PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput).ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs, PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtr and PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput
}

type powerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrType PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs

func PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtr(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs) PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch) *PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput)
}

// The events search string.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch) string { return v.Query }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch) PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput)
}

// The events search string.
func (o PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearch) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryMetricQuery struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator *string `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for metrics queries. Defaults to `"metrics"`.
	DataSource *string `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name string `pulumi:"name"`
	// The metrics query definition.
	Query string `pulumi:"query"`
}

// PowerpackWidgetToplistDefinitionRequestQueryMetricQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs and PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryMetricQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestQueryMetricQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator pulumi.StringPtrInput `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for metrics queries. Defaults to `"metrics"`.
	DataSource pulumi.StringPtrInput `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The metrics query definition.
	Query pulumi.StringInput `pulumi:"query"`
}

func (PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput).ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs, PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtr and PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrType PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs

func PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtr(v *PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs) PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) *PowerpackWidgetToplistDefinitionRequestQueryMetricQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) *string { return v.Aggregator }).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for metrics queries. Defaults to `"metrics"`.
func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) *string { return v.DataSource }).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The metrics query definition.
func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) string { return v.Query }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) PowerpackWidgetToplistDefinitionRequestQueryMetricQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestQueryMetricQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return v.Aggregator
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for metrics queries. Defaults to `"metrics"`.
func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The metrics query definition.
func (o PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryProcessQuery struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator *string `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for process queries. Valid values are `process`, `container`.
	DataSource string `pulumi:"dataSource"`
	// Whether to normalize the CPU percentages.
	IsNormalizedCpu *bool `pulumi:"isNormalizedCpu"`
	// The number of hits to return.
	Limit *int `pulumi:"limit"`
	// The process metric name.
	Metric string `pulumi:"metric"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
	Sort *string `pulumi:"sort"`
	// An array of tags to filter by.
	TagFilters []string `pulumi:"tagFilters"`
	// The text to use as a filter.
	TextFilter *string `pulumi:"textFilter"`
}

// PowerpackWidgetToplistDefinitionRequestQueryProcessQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs and PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryProcessQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestQueryProcessQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator pulumi.StringPtrInput `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for process queries. Valid values are `process`, `container`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Whether to normalize the CPU percentages.
	IsNormalizedCpu pulumi.BoolPtrInput `pulumi:"isNormalizedCpu"`
	// The number of hits to return.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// The process metric name.
	Metric pulumi.StringInput `pulumi:"metric"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
	Sort pulumi.StringPtrInput `pulumi:"sort"`
	// An array of tags to filter by.
	TagFilters pulumi.StringArrayInput `pulumi:"tagFilters"`
	// The text to use as a filter.
	TextFilter pulumi.StringPtrInput `pulumi:"textFilter"`
}

func (PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput).ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs, PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtr and PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrType PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs

func PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtr(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs) PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput() PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *string { return v.Aggregator }).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for process queries. Valid values are `process`, `container`.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// Whether to normalize the CPU percentages.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) IsNormalizedCpu() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *bool { return v.IsNormalizedCpu }).(pulumi.BoolPtrOutput)
}

// The number of hits to return.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// The process metric name.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) string { return v.Metric }).(pulumi.StringOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) Sort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *string { return v.Sort }).(pulumi.StringPtrOutput)
}

// An array of tags to filter by.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) []string { return v.TagFilters }).(pulumi.StringArrayOutput)
}

// The text to use as a filter.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput) TextFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *string { return v.TextFilter }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) PowerpackWidgetToplistDefinitionRequestQueryProcessQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestQueryProcessQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.Aggregator
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for process queries. Valid values are `process`, `container`.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Whether to normalize the CPU percentages.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) IsNormalizedCpu() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *bool {
		if v == nil {
			return nil
		}
		return v.IsNormalizedCpu
	}).(pulumi.BoolPtrOutput)
}

// The number of hits to return.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

// The process metric name.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Metric
	}).(pulumi.StringPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) Sort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.Sort
	}).(pulumi.StringPtrOutput)
}

// An array of tags to filter by.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) []string {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(pulumi.StringArrayOutput)
}

// The text to use as a filter.
func (o PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput) TextFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.TextFilter
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQuerySloQuery struct {
	// Additional filters applied to the SLO query.
	AdditionalQueryFilters *string `pulumi:"additionalQueryFilters"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for SLO queries. Valid values are `slo`.
	DataSource string `pulumi:"dataSource"`
	// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
	GroupMode *string `pulumi:"groupMode"`
	// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
	Measure string `pulumi:"measure"`
	// The name of query for use in formulas.
	Name *string `pulumi:"name"`
	// ID of an SLO to query.
	SloId string `pulumi:"sloId"`
	// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
	SloQueryType *string `pulumi:"sloQueryType"`
}

// PowerpackWidgetToplistDefinitionRequestQuerySloQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs and PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQuerySloQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestQuerySloQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput() PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs struct {
	// Additional filters applied to the SLO query.
	AdditionalQueryFilters pulumi.StringPtrInput `pulumi:"additionalQueryFilters"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for SLO queries. Valid values are `slo`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
	GroupMode pulumi.StringPtrInput `pulumi:"groupMode"`
	// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
	Measure pulumi.StringInput `pulumi:"measure"`
	// The name of query for use in formulas.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// ID of an SLO to query.
	SloId pulumi.StringInput `pulumi:"sloId"`
	// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
	SloQueryType pulumi.StringPtrInput `pulumi:"sloQueryType"`
}

func (PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput() PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput).ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs, PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtr and PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestQuerySloQueryPtrType PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs

func PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtr(v *PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs) PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestQuerySloQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestQuerySloQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestQuerySloQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestQuerySloQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput() PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *PowerpackWidgetToplistDefinitionRequestQuerySloQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput)
}

// Additional filters applied to the SLO query.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) AdditionalQueryFilters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string { return v.AdditionalQueryFilters }).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for SLO queries. Valid values are `slo`.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuerySloQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) GroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string { return v.GroupMode }).(pulumi.StringPtrOutput)
}

// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) Measure() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuerySloQuery) string { return v.Measure }).(pulumi.StringOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ID of an SLO to query.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) SloId() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuerySloQuery) string { return v.SloId }).(pulumi.StringOutput)
}

// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput) SloQueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string { return v.SloQueryType }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQuerySloQuery) PowerpackWidgetToplistDefinitionRequestQuerySloQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestQuerySloQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput)
}

// Additional filters applied to the SLO query.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) AdditionalQueryFilters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalQueryFilters
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for SLO queries. Valid values are `slo`.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) GroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.GroupMode
	}).(pulumi.StringPtrOutput)
}

// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) Measure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Measure
	}).(pulumi.StringPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ID of an SLO to query.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) SloId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return &v.SloId
	}).(pulumi.StringPtrOutput)
}

// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
func (o PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput) SloQueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.SloQueryType
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQuery struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery *PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies []PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy `pulumi:"groupBies"`
	// The name of the index to query.
	Index string `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes []PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery *string `pulumi:"searchQuery"`
}

// PowerpackWidgetToplistDefinitionRequestRumQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestRumQueryArgs and PowerpackWidgetToplistDefinitionRequestRumQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestRumQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestRumQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestRumQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestRumQueryOutput() PowerpackWidgetToplistDefinitionRequestRumQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestRumQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestRumQueryArgs struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrInput `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayInput `pulumi:"groupBies"`
	// The name of the index to query.
	Index pulumi.StringInput `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayInput `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery pulumi.StringPtrInput `pulumi:"searchQuery"`
}

func (PowerpackWidgetToplistDefinitionRequestRumQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryOutput() PowerpackWidgetToplistDefinitionRequestRumQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryOutput).ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestRumQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestRumQueryArgs, PowerpackWidgetToplistDefinitionRequestRumQueryPtr and PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestRumQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestRumQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestRumQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestRumQueryPtrType PowerpackWidgetToplistDefinitionRequestRumQueryArgs

func PowerpackWidgetToplistDefinitionRequestRumQueryPtr(v *PowerpackWidgetToplistDefinitionRequestRumQueryArgs) PowerpackWidgetToplistDefinitionRequestRumQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestRumQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestRumQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestRumQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestRumQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestRumQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestRumQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryOutput() PowerpackWidgetToplistDefinitionRequestRumQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestRumQuery) *PowerpackWidgetToplistDefinitionRequestRumQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryOutput) ComputeQuery() PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQuery) *PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery {
		return v.ComputeQuery
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQuery) []PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy {
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQuery) string { return v.Index }).(pulumi.StringOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryOutput) MultiComputes() PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQuery) []PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute {
		return v.MultiComputes
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQuery) *string { return v.SearchQuery }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestRumQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestRumQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQuery) PowerpackWidgetToplistDefinitionRequestRumQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestRumQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput) ComputeQuery() PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQuery) *PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery {
		if v == nil {
			return nil
		}
		return v.ComputeQuery
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQuery) []PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput) MultiComputes() PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQuery) []PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute {
		if v == nil {
			return nil
		}
		return v.MultiComputes
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQuery) *string {
		if v == nil {
			return nil
		}
		return v.SearchQuery
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs and PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput).ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs, PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtr and PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrType PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs

func PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtr(v *PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs) PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery) *PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery) PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQueryComputeQuery) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy struct {
	// The facet name.
	Facet *string `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit *int `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery *PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery `pulumi:"sortQuery"`
}

// PowerpackWidgetToplistDefinitionRequestRumQueryGroupByInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArgs and PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestRumQueryGroupByInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArgs{...}
type PowerpackWidgetToplistDefinitionRequestRumQueryGroupByInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput
	ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput
}

type PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArgs struct {
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrInput `pulumi:"sortQuery"`
}

func (PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput)
}

// PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArray and PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArray{ PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArgs{...} }
type PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArray []PowerpackWidgetToplistDefinitionRequestRumQueryGroupByInput

func (PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput {
	return o
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// The maximum number of items in the group.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// A list of exactly one element describing the sort query to use.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput) SortQuery() PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy) *PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery {
		return v.SortQuery
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestRumQueryGroupBy)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order string `pulumi:"order"`
}

// PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs and PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order pulumi.StringInput `pulumi:"order"`
}

func (PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput).ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs, PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtr and PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrType PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs

func PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtr(v *PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs) PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery) *PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery) string { return v.Order }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery) PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArgs and PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArgs{...}
type PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput
	ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput
}

type PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArgs) ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput)
}

// PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArray and PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArray{ PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArgs{...} }
type PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArray []PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeInput

func (PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArray) ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArray) ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput {
	return o
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestRumQueryMultiCompute)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQuery struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery *PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies []PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy `pulumi:"groupBies"`
	// The name of the index to query.
	Index string `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes []PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery *string `pulumi:"searchQuery"`
}

// PowerpackWidgetToplistDefinitionRequestSecurityQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs and PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestSecurityQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestSecurityQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs struct {
	// `computeQuery` or `multiCompute` is required. The map keys are listed below.
	ComputeQuery PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrInput `pulumi:"computeQuery"`
	// Multiple `groupBy` blocks are allowed using the structure below.
	GroupBies PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayInput `pulumi:"groupBies"`
	// The name of the index to query.
	Index pulumi.StringInput `pulumi:"index"`
	// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
	MultiComputes PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayInput `pulumi:"multiComputes"`
	// The search query to use.
	SearchQuery pulumi.StringPtrInput `pulumi:"searchQuery"`
}

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput).ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs, PowerpackWidgetToplistDefinitionRequestSecurityQueryPtr and PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestSecurityQueryPtrType PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs

func PowerpackWidgetToplistDefinitionRequestSecurityQueryPtr(v *PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs) PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestSecurityQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestSecurityQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestSecurityQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestSecurityQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestSecurityQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestSecurityQuery) *PowerpackWidgetToplistDefinitionRequestSecurityQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput) ComputeQuery() PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQuery) *PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery {
		return v.ComputeQuery
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQuery) []PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy {
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQuery) string { return v.Index }).(pulumi.StringOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput) MultiComputes() PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQuery) []PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute {
		return v.MultiComputes
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQuery) *string { return v.SearchQuery }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestSecurityQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQuery) PowerpackWidgetToplistDefinitionRequestSecurityQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestSecurityQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput)
}

// `computeQuery` or `multiCompute` is required. The map keys are listed below.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput) ComputeQuery() PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQuery) *PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery {
		if v == nil {
			return nil
		}
		return v.ComputeQuery
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput)
}

// Multiple `groupBy` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput) GroupBies() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQuery) []PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput)
}

// The name of the index to query.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

// `computeQuery` or `multiCompute` is required. Multiple `multiCompute` blocks are allowed using the structure below.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput) MultiComputes() PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQuery) []PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute {
		if v == nil {
			return nil
		}
		return v.MultiComputes
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput)
}

// The search query to use.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput) SearchQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQuery) *string {
		if v == nil {
			return nil
		}
		return v.SearchQuery
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs and PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput).ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs, PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtr and PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrType PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs

func PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtr(v *PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs) PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery) *PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery) PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQuery) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy struct {
	// The facet name.
	Facet *string `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit *int `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery *PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery `pulumi:"sortQuery"`
}

// PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArgs and PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArgs{...}
type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput
	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArgs struct {
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// The maximum number of items in the group.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// A list of exactly one element describing the sort query to use.
	SortQuery PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrInput `pulumi:"sortQuery"`
}

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput)
}

// PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArray and PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArray{ PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArgs{...} }
type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArray []PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByInput

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArray) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput {
	return o
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// The maximum number of items in the group.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// A list of exactly one element describing the sort query to use.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput) SortQuery() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy) *PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery {
		return v.SortQuery
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBy)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order string `pulumi:"order"`
}

// PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs and PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs{...}
type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput
	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Widget sorting methods. Valid values are `asc`, `desc`.
	Order pulumi.StringInput `pulumi:"order"`
}

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput).ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs, PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtr and PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput
	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput
}

type powerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrType PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs

func PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtr(v *PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrInput {
	return (*powerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrType) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery) *PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery) string {
		return v.Aggregation
	}).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput) Order() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery) string { return v.Order }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery) PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput)
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return v.Facet
	}).(pulumi.StringPtrOutput)
}

// Widget sorting methods. Valid values are `asc`, `desc`.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute struct {
	// The aggregation method.
	Aggregation string `pulumi:"aggregation"`
	// The facet name.
	Facet *string `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval *int `pulumi:"interval"`
}

// PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArgs and PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArgs{...}
type PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput
	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArgs struct {
	// The aggregation method.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The facet name.
	Facet pulumi.StringPtrInput `pulumi:"facet"`
	// Define the time interval in seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArgs) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput)
}

// PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArray and PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArray{ PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArgs{...} }
type PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput
	ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArray []PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeInput

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArray) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArray) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput {
	return o
}

// The aggregation method.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The facet name.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput) Facet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute) *string { return v.Facet }).(pulumi.StringPtrOutput)
}

// Define the time interval in seconds.
func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput() PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput) ToPowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute {
		return vs[0].([]PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiCompute)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput)
}

type PowerpackWidgetToplistDefinitionRequestStyle struct {
	// A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.
	Palette *string `pulumi:"palette"`
}

// PowerpackWidgetToplistDefinitionRequestStyleInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestStyleArgs and PowerpackWidgetToplistDefinitionRequestStyleOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestStyleInput` via:
//
//	PowerpackWidgetToplistDefinitionRequestStyleArgs{...}
type PowerpackWidgetToplistDefinitionRequestStyleInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestStyleOutput() PowerpackWidgetToplistDefinitionRequestStyleOutput
	ToPowerpackWidgetToplistDefinitionRequestStyleOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestStyleOutput
}

type PowerpackWidgetToplistDefinitionRequestStyleArgs struct {
	// A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.
	Palette pulumi.StringPtrInput `pulumi:"palette"`
}

func (PowerpackWidgetToplistDefinitionRequestStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestStyle)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionRequestStyleArgs) ToPowerpackWidgetToplistDefinitionRequestStyleOutput() PowerpackWidgetToplistDefinitionRequestStyleOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestStyleOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestStyleArgs) ToPowerpackWidgetToplistDefinitionRequestStyleOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestStyleOutput)
}

func (i PowerpackWidgetToplistDefinitionRequestStyleArgs) ToPowerpackWidgetToplistDefinitionRequestStylePtrOutput() PowerpackWidgetToplistDefinitionRequestStylePtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestStylePtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionRequestStyleArgs) ToPowerpackWidgetToplistDefinitionRequestStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestStyleOutput).ToPowerpackWidgetToplistDefinitionRequestStylePtrOutputWithContext(ctx)
}

// PowerpackWidgetToplistDefinitionRequestStylePtrInput is an input type that accepts PowerpackWidgetToplistDefinitionRequestStyleArgs, PowerpackWidgetToplistDefinitionRequestStylePtr and PowerpackWidgetToplistDefinitionRequestStylePtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionRequestStylePtrInput` via:
//
//	        PowerpackWidgetToplistDefinitionRequestStyleArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetToplistDefinitionRequestStylePtrInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionRequestStylePtrOutput() PowerpackWidgetToplistDefinitionRequestStylePtrOutput
	ToPowerpackWidgetToplistDefinitionRequestStylePtrOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionRequestStylePtrOutput
}

type powerpackWidgetToplistDefinitionRequestStylePtrType PowerpackWidgetToplistDefinitionRequestStyleArgs

func PowerpackWidgetToplistDefinitionRequestStylePtr(v *PowerpackWidgetToplistDefinitionRequestStyleArgs) PowerpackWidgetToplistDefinitionRequestStylePtrInput {
	return (*powerpackWidgetToplistDefinitionRequestStylePtrType)(v)
}

func (*powerpackWidgetToplistDefinitionRequestStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestStyle)(nil)).Elem()
}

func (i *powerpackWidgetToplistDefinitionRequestStylePtrType) ToPowerpackWidgetToplistDefinitionRequestStylePtrOutput() PowerpackWidgetToplistDefinitionRequestStylePtrOutput {
	return i.ToPowerpackWidgetToplistDefinitionRequestStylePtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetToplistDefinitionRequestStylePtrType) ToPowerpackWidgetToplistDefinitionRequestStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionRequestStylePtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestStyleOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestStyle)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestStyleOutput) ToPowerpackWidgetToplistDefinitionRequestStyleOutput() PowerpackWidgetToplistDefinitionRequestStyleOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestStyleOutput) ToPowerpackWidgetToplistDefinitionRequestStyleOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestStyleOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestStyleOutput) ToPowerpackWidgetToplistDefinitionRequestStylePtrOutput() PowerpackWidgetToplistDefinitionRequestStylePtrOutput {
	return o.ToPowerpackWidgetToplistDefinitionRequestStylePtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetToplistDefinitionRequestStyleOutput) ToPowerpackWidgetToplistDefinitionRequestStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetToplistDefinitionRequestStyle) *PowerpackWidgetToplistDefinitionRequestStyle {
		return &v
	}).(PowerpackWidgetToplistDefinitionRequestStylePtrOutput)
}

// A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.
func (o PowerpackWidgetToplistDefinitionRequestStyleOutput) Palette() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionRequestStyle) *string { return v.Palette }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionRequestStylePtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionRequestStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetToplistDefinitionRequestStyle)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionRequestStylePtrOutput) ToPowerpackWidgetToplistDefinitionRequestStylePtrOutput() PowerpackWidgetToplistDefinitionRequestStylePtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestStylePtrOutput) ToPowerpackWidgetToplistDefinitionRequestStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionRequestStylePtrOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionRequestStylePtrOutput) Elem() PowerpackWidgetToplistDefinitionRequestStyleOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestStyle) PowerpackWidgetToplistDefinitionRequestStyle {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetToplistDefinitionRequestStyle
		return ret
	}).(PowerpackWidgetToplistDefinitionRequestStyleOutput)
}

// A color palette to apply to the widget. The available options are available at: https://docs.datadoghq.com/dashboards/widgets/timeseries/#appearance.
func (o PowerpackWidgetToplistDefinitionRequestStylePtrOutput) Palette() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetToplistDefinitionRequestStyle) *string {
		if v == nil {
			return nil
		}
		return v.Palette
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionStyle struct {
	// The display mode for the widget.
	Displays []PowerpackWidgetToplistDefinitionStyleDisplay `pulumi:"displays"`
	// The color palette for the widget.
	Palette *string `pulumi:"palette"`
	// The scaling mode for the widget. Valid values are `absolute`, `relative`.
	Scaling *string `pulumi:"scaling"`
}

// PowerpackWidgetToplistDefinitionStyleInput is an input type that accepts PowerpackWidgetToplistDefinitionStyleArgs and PowerpackWidgetToplistDefinitionStyleOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionStyleInput` via:
//
//	PowerpackWidgetToplistDefinitionStyleArgs{...}
type PowerpackWidgetToplistDefinitionStyleInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionStyleOutput() PowerpackWidgetToplistDefinitionStyleOutput
	ToPowerpackWidgetToplistDefinitionStyleOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionStyleOutput
}

type PowerpackWidgetToplistDefinitionStyleArgs struct {
	// The display mode for the widget.
	Displays PowerpackWidgetToplistDefinitionStyleDisplayArrayInput `pulumi:"displays"`
	// The color palette for the widget.
	Palette pulumi.StringPtrInput `pulumi:"palette"`
	// The scaling mode for the widget. Valid values are `absolute`, `relative`.
	Scaling pulumi.StringPtrInput `pulumi:"scaling"`
}

func (PowerpackWidgetToplistDefinitionStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionStyle)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionStyleArgs) ToPowerpackWidgetToplistDefinitionStyleOutput() PowerpackWidgetToplistDefinitionStyleOutput {
	return i.ToPowerpackWidgetToplistDefinitionStyleOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionStyleArgs) ToPowerpackWidgetToplistDefinitionStyleOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionStyleOutput)
}

// PowerpackWidgetToplistDefinitionStyleArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionStyleArray and PowerpackWidgetToplistDefinitionStyleArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionStyleArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionStyleArray{ PowerpackWidgetToplistDefinitionStyleArgs{...} }
type PowerpackWidgetToplistDefinitionStyleArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionStyleArrayOutput() PowerpackWidgetToplistDefinitionStyleArrayOutput
	ToPowerpackWidgetToplistDefinitionStyleArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionStyleArrayOutput
}

type PowerpackWidgetToplistDefinitionStyleArray []PowerpackWidgetToplistDefinitionStyleInput

func (PowerpackWidgetToplistDefinitionStyleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionStyle)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionStyleArray) ToPowerpackWidgetToplistDefinitionStyleArrayOutput() PowerpackWidgetToplistDefinitionStyleArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionStyleArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionStyleArray) ToPowerpackWidgetToplistDefinitionStyleArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionStyleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionStyleArrayOutput)
}

type PowerpackWidgetToplistDefinitionStyleOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionStyle)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionStyleOutput) ToPowerpackWidgetToplistDefinitionStyleOutput() PowerpackWidgetToplistDefinitionStyleOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionStyleOutput) ToPowerpackWidgetToplistDefinitionStyleOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionStyleOutput {
	return o
}

// The display mode for the widget.
func (o PowerpackWidgetToplistDefinitionStyleOutput) Displays() PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionStyle) []PowerpackWidgetToplistDefinitionStyleDisplay {
		return v.Displays
	}).(PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput)
}

// The color palette for the widget.
func (o PowerpackWidgetToplistDefinitionStyleOutput) Palette() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionStyle) *string { return v.Palette }).(pulumi.StringPtrOutput)
}

// The scaling mode for the widget. Valid values are `absolute`, `relative`.
func (o PowerpackWidgetToplistDefinitionStyleOutput) Scaling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionStyle) *string { return v.Scaling }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetToplistDefinitionStyleArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionStyleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionStyle)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionStyleArrayOutput) ToPowerpackWidgetToplistDefinitionStyleArrayOutput() PowerpackWidgetToplistDefinitionStyleArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionStyleArrayOutput) ToPowerpackWidgetToplistDefinitionStyleArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionStyleArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionStyleArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionStyleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionStyle {
		return vs[0].([]PowerpackWidgetToplistDefinitionStyle)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionStyleOutput)
}

type PowerpackWidgetToplistDefinitionStyleDisplay struct {
	// The display type for the widget.
	Type string `pulumi:"type"`
}

// PowerpackWidgetToplistDefinitionStyleDisplayInput is an input type that accepts PowerpackWidgetToplistDefinitionStyleDisplayArgs and PowerpackWidgetToplistDefinitionStyleDisplayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionStyleDisplayInput` via:
//
//	PowerpackWidgetToplistDefinitionStyleDisplayArgs{...}
type PowerpackWidgetToplistDefinitionStyleDisplayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionStyleDisplayOutput() PowerpackWidgetToplistDefinitionStyleDisplayOutput
	ToPowerpackWidgetToplistDefinitionStyleDisplayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionStyleDisplayOutput
}

type PowerpackWidgetToplistDefinitionStyleDisplayArgs struct {
	// The display type for the widget.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PowerpackWidgetToplistDefinitionStyleDisplayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionStyleDisplay)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionStyleDisplayArgs) ToPowerpackWidgetToplistDefinitionStyleDisplayOutput() PowerpackWidgetToplistDefinitionStyleDisplayOutput {
	return i.ToPowerpackWidgetToplistDefinitionStyleDisplayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionStyleDisplayArgs) ToPowerpackWidgetToplistDefinitionStyleDisplayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionStyleDisplayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionStyleDisplayOutput)
}

// PowerpackWidgetToplistDefinitionStyleDisplayArrayInput is an input type that accepts PowerpackWidgetToplistDefinitionStyleDisplayArray and PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetToplistDefinitionStyleDisplayArrayInput` via:
//
//	PowerpackWidgetToplistDefinitionStyleDisplayArray{ PowerpackWidgetToplistDefinitionStyleDisplayArgs{...} }
type PowerpackWidgetToplistDefinitionStyleDisplayArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetToplistDefinitionStyleDisplayArrayOutput() PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput
	ToPowerpackWidgetToplistDefinitionStyleDisplayArrayOutputWithContext(context.Context) PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput
}

type PowerpackWidgetToplistDefinitionStyleDisplayArray []PowerpackWidgetToplistDefinitionStyleDisplayInput

func (PowerpackWidgetToplistDefinitionStyleDisplayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionStyleDisplay)(nil)).Elem()
}

func (i PowerpackWidgetToplistDefinitionStyleDisplayArray) ToPowerpackWidgetToplistDefinitionStyleDisplayArrayOutput() PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput {
	return i.ToPowerpackWidgetToplistDefinitionStyleDisplayArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetToplistDefinitionStyleDisplayArray) ToPowerpackWidgetToplistDefinitionStyleDisplayArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput)
}

type PowerpackWidgetToplistDefinitionStyleDisplayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionStyleDisplayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetToplistDefinitionStyleDisplay)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionStyleDisplayOutput) ToPowerpackWidgetToplistDefinitionStyleDisplayOutput() PowerpackWidgetToplistDefinitionStyleDisplayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionStyleDisplayOutput) ToPowerpackWidgetToplistDefinitionStyleDisplayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionStyleDisplayOutput {
	return o
}

// The display type for the widget.
func (o PowerpackWidgetToplistDefinitionStyleDisplayOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetToplistDefinitionStyleDisplay) string { return v.Type }).(pulumi.StringOutput)
}

type PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetToplistDefinitionStyleDisplay)(nil)).Elem()
}

func (o PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput) ToPowerpackWidgetToplistDefinitionStyleDisplayArrayOutput() PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput) ToPowerpackWidgetToplistDefinitionStyleDisplayArrayOutputWithContext(ctx context.Context) PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput {
	return o
}

func (o PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetToplistDefinitionStyleDisplayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetToplistDefinitionStyleDisplay {
		return vs[0].([]PowerpackWidgetToplistDefinitionStyleDisplay)[vs[1].(int)]
	}).(PowerpackWidgetToplistDefinitionStyleDisplayOutput)
}

type PowerpackWidgetTopologyMapDefinition struct {
	// A nested block describing a custom link. Multiple `customLink` blocks are allowed using the structure below.
	CustomLinks []PowerpackWidgetTopologyMapDefinitionCustomLink `pulumi:"customLinks"`
	// A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (`query` and `requestType` are required within the request).
	Requests []PowerpackWidgetTopologyMapDefinitionRequest `pulumi:"requests"`
	// The title of the widget.
	Title *string `pulumi:"title"`
	// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
	TitleAlign *string `pulumi:"titleAlign"`
	// The size of the widget's title (defaults to 16).
	TitleSize *string `pulumi:"titleSize"`
}

// PowerpackWidgetTopologyMapDefinitionInput is an input type that accepts PowerpackWidgetTopologyMapDefinitionArgs and PowerpackWidgetTopologyMapDefinitionOutput values.
// You can construct a concrete instance of `PowerpackWidgetTopologyMapDefinitionInput` via:
//
//	PowerpackWidgetTopologyMapDefinitionArgs{...}
type PowerpackWidgetTopologyMapDefinitionInput interface {
	pulumi.Input

	ToPowerpackWidgetTopologyMapDefinitionOutput() PowerpackWidgetTopologyMapDefinitionOutput
	ToPowerpackWidgetTopologyMapDefinitionOutputWithContext(context.Context) PowerpackWidgetTopologyMapDefinitionOutput
}

type PowerpackWidgetTopologyMapDefinitionArgs struct {
	// A nested block describing a custom link. Multiple `customLink` blocks are allowed using the structure below.
	CustomLinks PowerpackWidgetTopologyMapDefinitionCustomLinkArrayInput `pulumi:"customLinks"`
	// A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (`query` and `requestType` are required within the request).
	Requests PowerpackWidgetTopologyMapDefinitionRequestArrayInput `pulumi:"requests"`
	// The title of the widget.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
	TitleAlign pulumi.StringPtrInput `pulumi:"titleAlign"`
	// The size of the widget's title (defaults to 16).
	TitleSize pulumi.StringPtrInput `pulumi:"titleSize"`
}

func (PowerpackWidgetTopologyMapDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTopologyMapDefinition)(nil)).Elem()
}

func (i PowerpackWidgetTopologyMapDefinitionArgs) ToPowerpackWidgetTopologyMapDefinitionOutput() PowerpackWidgetTopologyMapDefinitionOutput {
	return i.ToPowerpackWidgetTopologyMapDefinitionOutputWithContext(context.Background())
}

func (i PowerpackWidgetTopologyMapDefinitionArgs) ToPowerpackWidgetTopologyMapDefinitionOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTopologyMapDefinitionOutput)
}

func (i PowerpackWidgetTopologyMapDefinitionArgs) ToPowerpackWidgetTopologyMapDefinitionPtrOutput() PowerpackWidgetTopologyMapDefinitionPtrOutput {
	return i.ToPowerpackWidgetTopologyMapDefinitionPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTopologyMapDefinitionArgs) ToPowerpackWidgetTopologyMapDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTopologyMapDefinitionOutput).ToPowerpackWidgetTopologyMapDefinitionPtrOutputWithContext(ctx)
}

// PowerpackWidgetTopologyMapDefinitionPtrInput is an input type that accepts PowerpackWidgetTopologyMapDefinitionArgs, PowerpackWidgetTopologyMapDefinitionPtr and PowerpackWidgetTopologyMapDefinitionPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTopologyMapDefinitionPtrInput` via:
//
//	        PowerpackWidgetTopologyMapDefinitionArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTopologyMapDefinitionPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTopologyMapDefinitionPtrOutput() PowerpackWidgetTopologyMapDefinitionPtrOutput
	ToPowerpackWidgetTopologyMapDefinitionPtrOutputWithContext(context.Context) PowerpackWidgetTopologyMapDefinitionPtrOutput
}

type powerpackWidgetTopologyMapDefinitionPtrType PowerpackWidgetTopologyMapDefinitionArgs

func PowerpackWidgetTopologyMapDefinitionPtr(v *PowerpackWidgetTopologyMapDefinitionArgs) PowerpackWidgetTopologyMapDefinitionPtrInput {
	return (*powerpackWidgetTopologyMapDefinitionPtrType)(v)
}

func (*powerpackWidgetTopologyMapDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTopologyMapDefinition)(nil)).Elem()
}

func (i *powerpackWidgetTopologyMapDefinitionPtrType) ToPowerpackWidgetTopologyMapDefinitionPtrOutput() PowerpackWidgetTopologyMapDefinitionPtrOutput {
	return i.ToPowerpackWidgetTopologyMapDefinitionPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTopologyMapDefinitionPtrType) ToPowerpackWidgetTopologyMapDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTopologyMapDefinitionPtrOutput)
}

type PowerpackWidgetTopologyMapDefinitionOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTopologyMapDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTopologyMapDefinition)(nil)).Elem()
}

func (o PowerpackWidgetTopologyMapDefinitionOutput) ToPowerpackWidgetTopologyMapDefinitionOutput() PowerpackWidgetTopologyMapDefinitionOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionOutput) ToPowerpackWidgetTopologyMapDefinitionOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionOutput) ToPowerpackWidgetTopologyMapDefinitionPtrOutput() PowerpackWidgetTopologyMapDefinitionPtrOutput {
	return o.ToPowerpackWidgetTopologyMapDefinitionPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTopologyMapDefinitionOutput) ToPowerpackWidgetTopologyMapDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTopologyMapDefinition) *PowerpackWidgetTopologyMapDefinition {
		return &v
	}).(PowerpackWidgetTopologyMapDefinitionPtrOutput)
}

// A nested block describing a custom link. Multiple `customLink` blocks are allowed using the structure below.
func (o PowerpackWidgetTopologyMapDefinitionOutput) CustomLinks() PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinition) []PowerpackWidgetTopologyMapDefinitionCustomLink {
		return v.CustomLinks
	}).(PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput)
}

// A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (`query` and `requestType` are required within the request).
func (o PowerpackWidgetTopologyMapDefinitionOutput) Requests() PowerpackWidgetTopologyMapDefinitionRequestArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinition) []PowerpackWidgetTopologyMapDefinitionRequest {
		return v.Requests
	}).(PowerpackWidgetTopologyMapDefinitionRequestArrayOutput)
}

// The title of the widget.
func (o PowerpackWidgetTopologyMapDefinitionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinition) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
func (o PowerpackWidgetTopologyMapDefinitionOutput) TitleAlign() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinition) *string { return v.TitleAlign }).(pulumi.StringPtrOutput)
}

// The size of the widget's title (defaults to 16).
func (o PowerpackWidgetTopologyMapDefinitionOutput) TitleSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinition) *string { return v.TitleSize }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTopologyMapDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTopologyMapDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTopologyMapDefinition)(nil)).Elem()
}

func (o PowerpackWidgetTopologyMapDefinitionPtrOutput) ToPowerpackWidgetTopologyMapDefinitionPtrOutput() PowerpackWidgetTopologyMapDefinitionPtrOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionPtrOutput) ToPowerpackWidgetTopologyMapDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionPtrOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionPtrOutput) Elem() PowerpackWidgetTopologyMapDefinitionOutput {
	return o.ApplyT(func(v *PowerpackWidgetTopologyMapDefinition) PowerpackWidgetTopologyMapDefinition {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTopologyMapDefinition
		return ret
	}).(PowerpackWidgetTopologyMapDefinitionOutput)
}

// A nested block describing a custom link. Multiple `customLink` blocks are allowed using the structure below.
func (o PowerpackWidgetTopologyMapDefinitionPtrOutput) CustomLinks() PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTopologyMapDefinition) []PowerpackWidgetTopologyMapDefinitionCustomLink {
		if v == nil {
			return nil
		}
		return v.CustomLinks
	}).(PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput)
}

// A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (`query` and `requestType` are required within the request).
func (o PowerpackWidgetTopologyMapDefinitionPtrOutput) Requests() PowerpackWidgetTopologyMapDefinitionRequestArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTopologyMapDefinition) []PowerpackWidgetTopologyMapDefinitionRequest {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(PowerpackWidgetTopologyMapDefinitionRequestArrayOutput)
}

// The title of the widget.
func (o PowerpackWidgetTopologyMapDefinitionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTopologyMapDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
func (o PowerpackWidgetTopologyMapDefinitionPtrOutput) TitleAlign() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTopologyMapDefinition) *string {
		if v == nil {
			return nil
		}
		return v.TitleAlign
	}).(pulumi.StringPtrOutput)
}

// The size of the widget's title (defaults to 16).
func (o PowerpackWidgetTopologyMapDefinitionPtrOutput) TitleSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTopologyMapDefinition) *string {
		if v == nil {
			return nil
		}
		return v.TitleSize
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTopologyMapDefinitionCustomLink struct {
	// The flag for toggling context menu link visibility.
	IsHidden *bool `pulumi:"isHidden"`
	// The label for the custom link URL.
	Label *string `pulumi:"label"`
	// The URL of the custom link.
	Link *string `pulumi:"link"`
	// The label ID that refers to a context menu link item. When `overrideLabel` is provided, the client request omits the label field.
	OverrideLabel *string `pulumi:"overrideLabel"`
}

// PowerpackWidgetTopologyMapDefinitionCustomLinkInput is an input type that accepts PowerpackWidgetTopologyMapDefinitionCustomLinkArgs and PowerpackWidgetTopologyMapDefinitionCustomLinkOutput values.
// You can construct a concrete instance of `PowerpackWidgetTopologyMapDefinitionCustomLinkInput` via:
//
//	PowerpackWidgetTopologyMapDefinitionCustomLinkArgs{...}
type PowerpackWidgetTopologyMapDefinitionCustomLinkInput interface {
	pulumi.Input

	ToPowerpackWidgetTopologyMapDefinitionCustomLinkOutput() PowerpackWidgetTopologyMapDefinitionCustomLinkOutput
	ToPowerpackWidgetTopologyMapDefinitionCustomLinkOutputWithContext(context.Context) PowerpackWidgetTopologyMapDefinitionCustomLinkOutput
}

type PowerpackWidgetTopologyMapDefinitionCustomLinkArgs struct {
	// The flag for toggling context menu link visibility.
	IsHidden pulumi.BoolPtrInput `pulumi:"isHidden"`
	// The label for the custom link URL.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The URL of the custom link.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// The label ID that refers to a context menu link item. When `overrideLabel` is provided, the client request omits the label field.
	OverrideLabel pulumi.StringPtrInput `pulumi:"overrideLabel"`
}

func (PowerpackWidgetTopologyMapDefinitionCustomLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionCustomLink)(nil)).Elem()
}

func (i PowerpackWidgetTopologyMapDefinitionCustomLinkArgs) ToPowerpackWidgetTopologyMapDefinitionCustomLinkOutput() PowerpackWidgetTopologyMapDefinitionCustomLinkOutput {
	return i.ToPowerpackWidgetTopologyMapDefinitionCustomLinkOutputWithContext(context.Background())
}

func (i PowerpackWidgetTopologyMapDefinitionCustomLinkArgs) ToPowerpackWidgetTopologyMapDefinitionCustomLinkOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionCustomLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTopologyMapDefinitionCustomLinkOutput)
}

// PowerpackWidgetTopologyMapDefinitionCustomLinkArrayInput is an input type that accepts PowerpackWidgetTopologyMapDefinitionCustomLinkArray and PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTopologyMapDefinitionCustomLinkArrayInput` via:
//
//	PowerpackWidgetTopologyMapDefinitionCustomLinkArray{ PowerpackWidgetTopologyMapDefinitionCustomLinkArgs{...} }
type PowerpackWidgetTopologyMapDefinitionCustomLinkArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput() PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput
	ToPowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutputWithContext(context.Context) PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput
}

type PowerpackWidgetTopologyMapDefinitionCustomLinkArray []PowerpackWidgetTopologyMapDefinitionCustomLinkInput

func (PowerpackWidgetTopologyMapDefinitionCustomLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTopologyMapDefinitionCustomLink)(nil)).Elem()
}

func (i PowerpackWidgetTopologyMapDefinitionCustomLinkArray) ToPowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput() PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput {
	return i.ToPowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTopologyMapDefinitionCustomLinkArray) ToPowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput)
}

type PowerpackWidgetTopologyMapDefinitionCustomLinkOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTopologyMapDefinitionCustomLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionCustomLink)(nil)).Elem()
}

func (o PowerpackWidgetTopologyMapDefinitionCustomLinkOutput) ToPowerpackWidgetTopologyMapDefinitionCustomLinkOutput() PowerpackWidgetTopologyMapDefinitionCustomLinkOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionCustomLinkOutput) ToPowerpackWidgetTopologyMapDefinitionCustomLinkOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionCustomLinkOutput {
	return o
}

// The flag for toggling context menu link visibility.
func (o PowerpackWidgetTopologyMapDefinitionCustomLinkOutput) IsHidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinitionCustomLink) *bool { return v.IsHidden }).(pulumi.BoolPtrOutput)
}

// The label for the custom link URL.
func (o PowerpackWidgetTopologyMapDefinitionCustomLinkOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinitionCustomLink) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The URL of the custom link.
func (o PowerpackWidgetTopologyMapDefinitionCustomLinkOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinitionCustomLink) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// The label ID that refers to a context menu link item. When `overrideLabel` is provided, the client request omits the label field.
func (o PowerpackWidgetTopologyMapDefinitionCustomLinkOutput) OverrideLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinitionCustomLink) *string { return v.OverrideLabel }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTopologyMapDefinitionCustomLink)(nil)).Elem()
}

func (o PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput) ToPowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput() PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput) ToPowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTopologyMapDefinitionCustomLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTopologyMapDefinitionCustomLink {
		return vs[0].([]PowerpackWidgetTopologyMapDefinitionCustomLink)[vs[1].(int)]
	}).(PowerpackWidgetTopologyMapDefinitionCustomLinkOutput)
}

type PowerpackWidgetTopologyMapDefinitionRequest struct {
	// The query for a Topology request.
	Queries []PowerpackWidgetTopologyMapDefinitionRequestQuery `pulumi:"queries"`
	// The request type for the Topology request ('topology'). Valid values are `topology`.
	RequestType string `pulumi:"requestType"`
}

// PowerpackWidgetTopologyMapDefinitionRequestInput is an input type that accepts PowerpackWidgetTopologyMapDefinitionRequestArgs and PowerpackWidgetTopologyMapDefinitionRequestOutput values.
// You can construct a concrete instance of `PowerpackWidgetTopologyMapDefinitionRequestInput` via:
//
//	PowerpackWidgetTopologyMapDefinitionRequestArgs{...}
type PowerpackWidgetTopologyMapDefinitionRequestInput interface {
	pulumi.Input

	ToPowerpackWidgetTopologyMapDefinitionRequestOutput() PowerpackWidgetTopologyMapDefinitionRequestOutput
	ToPowerpackWidgetTopologyMapDefinitionRequestOutputWithContext(context.Context) PowerpackWidgetTopologyMapDefinitionRequestOutput
}

type PowerpackWidgetTopologyMapDefinitionRequestArgs struct {
	// The query for a Topology request.
	Queries PowerpackWidgetTopologyMapDefinitionRequestQueryArrayInput `pulumi:"queries"`
	// The request type for the Topology request ('topology'). Valid values are `topology`.
	RequestType pulumi.StringInput `pulumi:"requestType"`
}

func (PowerpackWidgetTopologyMapDefinitionRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionRequest)(nil)).Elem()
}

func (i PowerpackWidgetTopologyMapDefinitionRequestArgs) ToPowerpackWidgetTopologyMapDefinitionRequestOutput() PowerpackWidgetTopologyMapDefinitionRequestOutput {
	return i.ToPowerpackWidgetTopologyMapDefinitionRequestOutputWithContext(context.Background())
}

func (i PowerpackWidgetTopologyMapDefinitionRequestArgs) ToPowerpackWidgetTopologyMapDefinitionRequestOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTopologyMapDefinitionRequestOutput)
}

// PowerpackWidgetTopologyMapDefinitionRequestArrayInput is an input type that accepts PowerpackWidgetTopologyMapDefinitionRequestArray and PowerpackWidgetTopologyMapDefinitionRequestArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTopologyMapDefinitionRequestArrayInput` via:
//
//	PowerpackWidgetTopologyMapDefinitionRequestArray{ PowerpackWidgetTopologyMapDefinitionRequestArgs{...} }
type PowerpackWidgetTopologyMapDefinitionRequestArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTopologyMapDefinitionRequestArrayOutput() PowerpackWidgetTopologyMapDefinitionRequestArrayOutput
	ToPowerpackWidgetTopologyMapDefinitionRequestArrayOutputWithContext(context.Context) PowerpackWidgetTopologyMapDefinitionRequestArrayOutput
}

type PowerpackWidgetTopologyMapDefinitionRequestArray []PowerpackWidgetTopologyMapDefinitionRequestInput

func (PowerpackWidgetTopologyMapDefinitionRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTopologyMapDefinitionRequest)(nil)).Elem()
}

func (i PowerpackWidgetTopologyMapDefinitionRequestArray) ToPowerpackWidgetTopologyMapDefinitionRequestArrayOutput() PowerpackWidgetTopologyMapDefinitionRequestArrayOutput {
	return i.ToPowerpackWidgetTopologyMapDefinitionRequestArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTopologyMapDefinitionRequestArray) ToPowerpackWidgetTopologyMapDefinitionRequestArrayOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTopologyMapDefinitionRequestArrayOutput)
}

type PowerpackWidgetTopologyMapDefinitionRequestOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTopologyMapDefinitionRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionRequest)(nil)).Elem()
}

func (o PowerpackWidgetTopologyMapDefinitionRequestOutput) ToPowerpackWidgetTopologyMapDefinitionRequestOutput() PowerpackWidgetTopologyMapDefinitionRequestOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionRequestOutput) ToPowerpackWidgetTopologyMapDefinitionRequestOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionRequestOutput {
	return o
}

// The query for a Topology request.
func (o PowerpackWidgetTopologyMapDefinitionRequestOutput) Queries() PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinitionRequest) []PowerpackWidgetTopologyMapDefinitionRequestQuery {
		return v.Queries
	}).(PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput)
}

// The request type for the Topology request ('topology'). Valid values are `topology`.
func (o PowerpackWidgetTopologyMapDefinitionRequestOutput) RequestType() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinitionRequest) string { return v.RequestType }).(pulumi.StringOutput)
}

type PowerpackWidgetTopologyMapDefinitionRequestArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTopologyMapDefinitionRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTopologyMapDefinitionRequest)(nil)).Elem()
}

func (o PowerpackWidgetTopologyMapDefinitionRequestArrayOutput) ToPowerpackWidgetTopologyMapDefinitionRequestArrayOutput() PowerpackWidgetTopologyMapDefinitionRequestArrayOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionRequestArrayOutput) ToPowerpackWidgetTopologyMapDefinitionRequestArrayOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionRequestArrayOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionRequestArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTopologyMapDefinitionRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTopologyMapDefinitionRequest {
		return vs[0].([]PowerpackWidgetTopologyMapDefinitionRequest)[vs[1].(int)]
	}).(PowerpackWidgetTopologyMapDefinitionRequestOutput)
}

type PowerpackWidgetTopologyMapDefinitionRequestQuery struct {
	// The data source for the Topology request ('service*map' or 'data*streams'). Valid values are `dataStreams`, `serviceMap`.
	DataSource string `pulumi:"dataSource"`
	// Your environment and primary tag (or `*` if enabled for your account).
	Filters []string `pulumi:"filters"`
	// The ID of the service to map.
	Service string `pulumi:"service"`
}

// PowerpackWidgetTopologyMapDefinitionRequestQueryInput is an input type that accepts PowerpackWidgetTopologyMapDefinitionRequestQueryArgs and PowerpackWidgetTopologyMapDefinitionRequestQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTopologyMapDefinitionRequestQueryInput` via:
//
//	PowerpackWidgetTopologyMapDefinitionRequestQueryArgs{...}
type PowerpackWidgetTopologyMapDefinitionRequestQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTopologyMapDefinitionRequestQueryOutput() PowerpackWidgetTopologyMapDefinitionRequestQueryOutput
	ToPowerpackWidgetTopologyMapDefinitionRequestQueryOutputWithContext(context.Context) PowerpackWidgetTopologyMapDefinitionRequestQueryOutput
}

type PowerpackWidgetTopologyMapDefinitionRequestQueryArgs struct {
	// The data source for the Topology request ('service*map' or 'data*streams'). Valid values are `dataStreams`, `serviceMap`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Your environment and primary tag (or `*` if enabled for your account).
	Filters pulumi.StringArrayInput `pulumi:"filters"`
	// The ID of the service to map.
	Service pulumi.StringInput `pulumi:"service"`
}

func (PowerpackWidgetTopologyMapDefinitionRequestQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionRequestQuery)(nil)).Elem()
}

func (i PowerpackWidgetTopologyMapDefinitionRequestQueryArgs) ToPowerpackWidgetTopologyMapDefinitionRequestQueryOutput() PowerpackWidgetTopologyMapDefinitionRequestQueryOutput {
	return i.ToPowerpackWidgetTopologyMapDefinitionRequestQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTopologyMapDefinitionRequestQueryArgs) ToPowerpackWidgetTopologyMapDefinitionRequestQueryOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionRequestQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTopologyMapDefinitionRequestQueryOutput)
}

// PowerpackWidgetTopologyMapDefinitionRequestQueryArrayInput is an input type that accepts PowerpackWidgetTopologyMapDefinitionRequestQueryArray and PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTopologyMapDefinitionRequestQueryArrayInput` via:
//
//	PowerpackWidgetTopologyMapDefinitionRequestQueryArray{ PowerpackWidgetTopologyMapDefinitionRequestQueryArgs{...} }
type PowerpackWidgetTopologyMapDefinitionRequestQueryArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput() PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput
	ToPowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutputWithContext(context.Context) PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput
}

type PowerpackWidgetTopologyMapDefinitionRequestQueryArray []PowerpackWidgetTopologyMapDefinitionRequestQueryInput

func (PowerpackWidgetTopologyMapDefinitionRequestQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTopologyMapDefinitionRequestQuery)(nil)).Elem()
}

func (i PowerpackWidgetTopologyMapDefinitionRequestQueryArray) ToPowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput() PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput {
	return i.ToPowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTopologyMapDefinitionRequestQueryArray) ToPowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput)
}

type PowerpackWidgetTopologyMapDefinitionRequestQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTopologyMapDefinitionRequestQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionRequestQuery)(nil)).Elem()
}

func (o PowerpackWidgetTopologyMapDefinitionRequestQueryOutput) ToPowerpackWidgetTopologyMapDefinitionRequestQueryOutput() PowerpackWidgetTopologyMapDefinitionRequestQueryOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionRequestQueryOutput) ToPowerpackWidgetTopologyMapDefinitionRequestQueryOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionRequestQueryOutput {
	return o
}

// The data source for the Topology request ('service*map' or 'data*streams'). Valid values are `dataStreams`, `serviceMap`.
func (o PowerpackWidgetTopologyMapDefinitionRequestQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinitionRequestQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// Your environment and primary tag (or `*` if enabled for your account).
func (o PowerpackWidgetTopologyMapDefinitionRequestQueryOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinitionRequestQuery) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

// The ID of the service to map.
func (o PowerpackWidgetTopologyMapDefinitionRequestQueryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTopologyMapDefinitionRequestQuery) string { return v.Service }).(pulumi.StringOutput)
}

type PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTopologyMapDefinitionRequestQuery)(nil)).Elem()
}

func (o PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput) ToPowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput() PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput) ToPowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutputWithContext(ctx context.Context) PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput {
	return o
}

func (o PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTopologyMapDefinitionRequestQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTopologyMapDefinitionRequestQuery {
		return vs[0].([]PowerpackWidgetTopologyMapDefinitionRequestQuery)[vs[1].(int)]
	}).(PowerpackWidgetTopologyMapDefinitionRequestQueryOutput)
}

type PowerpackWidgetTraceServiceDefinition struct {
	// The number of columns to display. Valid values are `oneColumn`, `twoColumn`, `threeColumn`.
	DisplayFormat *string `pulumi:"displayFormat"`
	// APM environment.
	Env string `pulumi:"env"`
	// The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `weekToDate`, `monthToDate`, `1y`, `alert`.
	LiveSpan *string `pulumi:"liveSpan"`
	// APM service.
	Service string `pulumi:"service"`
	// Whether to show the latency breakdown or not.
	ShowBreakdown *bool `pulumi:"showBreakdown"`
	// Whether to show the latency distribution or not.
	ShowDistribution *bool `pulumi:"showDistribution"`
	// Whether to show the error metrics or not.
	ShowErrors *bool `pulumi:"showErrors"`
	// Whether to show the hits metrics or not
	ShowHits *bool `pulumi:"showHits"`
	// Whether to show the latency metrics or not.
	ShowLatency *bool `pulumi:"showLatency"`
	// Whether to show the resource list or not.
	ShowResourceList *bool `pulumi:"showResourceList"`
	// The size of the widget. Valid values are `small`, `medium`, `large`.
	SizeFormat *string `pulumi:"sizeFormat"`
	// APM span name
	SpanName string `pulumi:"spanName"`
	// The title of the widget.
	Title *string `pulumi:"title"`
	// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
	TitleAlign *string `pulumi:"titleAlign"`
	// The size of the widget's title (defaults to 16).
	TitleSize *string `pulumi:"titleSize"`
}

// PowerpackWidgetTraceServiceDefinitionInput is an input type that accepts PowerpackWidgetTraceServiceDefinitionArgs and PowerpackWidgetTraceServiceDefinitionOutput values.
// You can construct a concrete instance of `PowerpackWidgetTraceServiceDefinitionInput` via:
//
//	PowerpackWidgetTraceServiceDefinitionArgs{...}
type PowerpackWidgetTraceServiceDefinitionInput interface {
	pulumi.Input

	ToPowerpackWidgetTraceServiceDefinitionOutput() PowerpackWidgetTraceServiceDefinitionOutput
	ToPowerpackWidgetTraceServiceDefinitionOutputWithContext(context.Context) PowerpackWidgetTraceServiceDefinitionOutput
}

type PowerpackWidgetTraceServiceDefinitionArgs struct {
	// The number of columns to display. Valid values are `oneColumn`, `twoColumn`, `threeColumn`.
	DisplayFormat pulumi.StringPtrInput `pulumi:"displayFormat"`
	// APM environment.
	Env pulumi.StringInput `pulumi:"env"`
	// The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `weekToDate`, `monthToDate`, `1y`, `alert`.
	LiveSpan pulumi.StringPtrInput `pulumi:"liveSpan"`
	// APM service.
	Service pulumi.StringInput `pulumi:"service"`
	// Whether to show the latency breakdown or not.
	ShowBreakdown pulumi.BoolPtrInput `pulumi:"showBreakdown"`
	// Whether to show the latency distribution or not.
	ShowDistribution pulumi.BoolPtrInput `pulumi:"showDistribution"`
	// Whether to show the error metrics or not.
	ShowErrors pulumi.BoolPtrInput `pulumi:"showErrors"`
	// Whether to show the hits metrics or not
	ShowHits pulumi.BoolPtrInput `pulumi:"showHits"`
	// Whether to show the latency metrics or not.
	ShowLatency pulumi.BoolPtrInput `pulumi:"showLatency"`
	// Whether to show the resource list or not.
	ShowResourceList pulumi.BoolPtrInput `pulumi:"showResourceList"`
	// The size of the widget. Valid values are `small`, `medium`, `large`.
	SizeFormat pulumi.StringPtrInput `pulumi:"sizeFormat"`
	// APM span name
	SpanName pulumi.StringInput `pulumi:"spanName"`
	// The title of the widget.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
	TitleAlign pulumi.StringPtrInput `pulumi:"titleAlign"`
	// The size of the widget's title (defaults to 16).
	TitleSize pulumi.StringPtrInput `pulumi:"titleSize"`
}

func (PowerpackWidgetTraceServiceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTraceServiceDefinition)(nil)).Elem()
}

func (i PowerpackWidgetTraceServiceDefinitionArgs) ToPowerpackWidgetTraceServiceDefinitionOutput() PowerpackWidgetTraceServiceDefinitionOutput {
	return i.ToPowerpackWidgetTraceServiceDefinitionOutputWithContext(context.Background())
}

func (i PowerpackWidgetTraceServiceDefinitionArgs) ToPowerpackWidgetTraceServiceDefinitionOutputWithContext(ctx context.Context) PowerpackWidgetTraceServiceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTraceServiceDefinitionOutput)
}

func (i PowerpackWidgetTraceServiceDefinitionArgs) ToPowerpackWidgetTraceServiceDefinitionPtrOutput() PowerpackWidgetTraceServiceDefinitionPtrOutput {
	return i.ToPowerpackWidgetTraceServiceDefinitionPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTraceServiceDefinitionArgs) ToPowerpackWidgetTraceServiceDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTraceServiceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTraceServiceDefinitionOutput).ToPowerpackWidgetTraceServiceDefinitionPtrOutputWithContext(ctx)
}

// PowerpackWidgetTraceServiceDefinitionPtrInput is an input type that accepts PowerpackWidgetTraceServiceDefinitionArgs, PowerpackWidgetTraceServiceDefinitionPtr and PowerpackWidgetTraceServiceDefinitionPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTraceServiceDefinitionPtrInput` via:
//
//	        PowerpackWidgetTraceServiceDefinitionArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTraceServiceDefinitionPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTraceServiceDefinitionPtrOutput() PowerpackWidgetTraceServiceDefinitionPtrOutput
	ToPowerpackWidgetTraceServiceDefinitionPtrOutputWithContext(context.Context) PowerpackWidgetTraceServiceDefinitionPtrOutput
}

type powerpackWidgetTraceServiceDefinitionPtrType PowerpackWidgetTraceServiceDefinitionArgs

func PowerpackWidgetTraceServiceDefinitionPtr(v *PowerpackWidgetTraceServiceDefinitionArgs) PowerpackWidgetTraceServiceDefinitionPtrInput {
	return (*powerpackWidgetTraceServiceDefinitionPtrType)(v)
}

func (*powerpackWidgetTraceServiceDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTraceServiceDefinition)(nil)).Elem()
}

func (i *powerpackWidgetTraceServiceDefinitionPtrType) ToPowerpackWidgetTraceServiceDefinitionPtrOutput() PowerpackWidgetTraceServiceDefinitionPtrOutput {
	return i.ToPowerpackWidgetTraceServiceDefinitionPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTraceServiceDefinitionPtrType) ToPowerpackWidgetTraceServiceDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTraceServiceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTraceServiceDefinitionPtrOutput)
}

type PowerpackWidgetTraceServiceDefinitionOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTraceServiceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTraceServiceDefinition)(nil)).Elem()
}

func (o PowerpackWidgetTraceServiceDefinitionOutput) ToPowerpackWidgetTraceServiceDefinitionOutput() PowerpackWidgetTraceServiceDefinitionOutput {
	return o
}

func (o PowerpackWidgetTraceServiceDefinitionOutput) ToPowerpackWidgetTraceServiceDefinitionOutputWithContext(ctx context.Context) PowerpackWidgetTraceServiceDefinitionOutput {
	return o
}

func (o PowerpackWidgetTraceServiceDefinitionOutput) ToPowerpackWidgetTraceServiceDefinitionPtrOutput() PowerpackWidgetTraceServiceDefinitionPtrOutput {
	return o.ToPowerpackWidgetTraceServiceDefinitionPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTraceServiceDefinitionOutput) ToPowerpackWidgetTraceServiceDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTraceServiceDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTraceServiceDefinition) *PowerpackWidgetTraceServiceDefinition {
		return &v
	}).(PowerpackWidgetTraceServiceDefinitionPtrOutput)
}

// The number of columns to display. Valid values are `oneColumn`, `twoColumn`, `threeColumn`.
func (o PowerpackWidgetTraceServiceDefinitionOutput) DisplayFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *string { return v.DisplayFormat }).(pulumi.StringPtrOutput)
}

// APM environment.
func (o PowerpackWidgetTraceServiceDefinitionOutput) Env() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) string { return v.Env }).(pulumi.StringOutput)
}

// The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `weekToDate`, `monthToDate`, `1y`, `alert`.
func (o PowerpackWidgetTraceServiceDefinitionOutput) LiveSpan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *string { return v.LiveSpan }).(pulumi.StringPtrOutput)
}

// APM service.
func (o PowerpackWidgetTraceServiceDefinitionOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) string { return v.Service }).(pulumi.StringOutput)
}

// Whether to show the latency breakdown or not.
func (o PowerpackWidgetTraceServiceDefinitionOutput) ShowBreakdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *bool { return v.ShowBreakdown }).(pulumi.BoolPtrOutput)
}

// Whether to show the latency distribution or not.
func (o PowerpackWidgetTraceServiceDefinitionOutput) ShowDistribution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *bool { return v.ShowDistribution }).(pulumi.BoolPtrOutput)
}

// Whether to show the error metrics or not.
func (o PowerpackWidgetTraceServiceDefinitionOutput) ShowErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *bool { return v.ShowErrors }).(pulumi.BoolPtrOutput)
}

// Whether to show the hits metrics or not
func (o PowerpackWidgetTraceServiceDefinitionOutput) ShowHits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *bool { return v.ShowHits }).(pulumi.BoolPtrOutput)
}

// Whether to show the latency metrics or not.
func (o PowerpackWidgetTraceServiceDefinitionOutput) ShowLatency() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *bool { return v.ShowLatency }).(pulumi.BoolPtrOutput)
}

// Whether to show the resource list or not.
func (o PowerpackWidgetTraceServiceDefinitionOutput) ShowResourceList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *bool { return v.ShowResourceList }).(pulumi.BoolPtrOutput)
}

// The size of the widget. Valid values are `small`, `medium`, `large`.
func (o PowerpackWidgetTraceServiceDefinitionOutput) SizeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *string { return v.SizeFormat }).(pulumi.StringPtrOutput)
}

// APM span name
func (o PowerpackWidgetTraceServiceDefinitionOutput) SpanName() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) string { return v.SpanName }).(pulumi.StringOutput)
}

// The title of the widget.
func (o PowerpackWidgetTraceServiceDefinitionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
func (o PowerpackWidgetTraceServiceDefinitionOutput) TitleAlign() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *string { return v.TitleAlign }).(pulumi.StringPtrOutput)
}

// The size of the widget's title (defaults to 16).
func (o PowerpackWidgetTraceServiceDefinitionOutput) TitleSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTraceServiceDefinition) *string { return v.TitleSize }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTraceServiceDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTraceServiceDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTraceServiceDefinition)(nil)).Elem()
}

func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) ToPowerpackWidgetTraceServiceDefinitionPtrOutput() PowerpackWidgetTraceServiceDefinitionPtrOutput {
	return o
}

func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) ToPowerpackWidgetTraceServiceDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTraceServiceDefinitionPtrOutput {
	return o
}

func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) Elem() PowerpackWidgetTraceServiceDefinitionOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) PowerpackWidgetTraceServiceDefinition {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTraceServiceDefinition
		return ret
	}).(PowerpackWidgetTraceServiceDefinitionOutput)
}

// The number of columns to display. Valid values are `oneColumn`, `twoColumn`, `threeColumn`.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) DisplayFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DisplayFormat
	}).(pulumi.StringPtrOutput)
}

// APM environment.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) Env() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(pulumi.StringPtrOutput)
}

// The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `weekToDate`, `monthToDate`, `1y`, `alert`.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) LiveSpan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *string {
		if v == nil {
			return nil
		}
		return v.LiveSpan
	}).(pulumi.StringPtrOutput)
}

// APM service.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

// Whether to show the latency breakdown or not.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) ShowBreakdown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ShowBreakdown
	}).(pulumi.BoolPtrOutput)
}

// Whether to show the latency distribution or not.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) ShowDistribution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ShowDistribution
	}).(pulumi.BoolPtrOutput)
}

// Whether to show the error metrics or not.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) ShowErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ShowErrors
	}).(pulumi.BoolPtrOutput)
}

// Whether to show the hits metrics or not
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) ShowHits() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ShowHits
	}).(pulumi.BoolPtrOutput)
}

// Whether to show the latency metrics or not.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) ShowLatency() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ShowLatency
	}).(pulumi.BoolPtrOutput)
}

// Whether to show the resource list or not.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) ShowResourceList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ShowResourceList
	}).(pulumi.BoolPtrOutput)
}

// The size of the widget. Valid values are `small`, `medium`, `large`.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) SizeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *string {
		if v == nil {
			return nil
		}
		return v.SizeFormat
	}).(pulumi.StringPtrOutput)
}

// APM span name
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) SpanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.SpanName
	}).(pulumi.StringPtrOutput)
}

// The title of the widget.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

// The alignment of the widget's title. Valid values are `center`, `left`, `right`.
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) TitleAlign() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *string {
		if v == nil {
			return nil
		}
		return v.TitleAlign
	}).(pulumi.StringPtrOutput)
}

// The size of the widget's title (defaults to 16).
func (o PowerpackWidgetTraceServiceDefinitionPtrOutput) TitleSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTraceServiceDefinition) *string {
		if v == nil {
			return nil
		}
		return v.TitleSize
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinition struct {
	// Nested block describing the request to use when displaying the widget.
	Requests []PowerpackWidgetTreemapDefinitionRequest `pulumi:"requests"`
	// The title of the widget.
	Title *string `pulumi:"title"`
}

// PowerpackWidgetTreemapDefinitionInput is an input type that accepts PowerpackWidgetTreemapDefinitionArgs and PowerpackWidgetTreemapDefinitionOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionInput` via:
//
//	PowerpackWidgetTreemapDefinitionArgs{...}
type PowerpackWidgetTreemapDefinitionInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionOutput() PowerpackWidgetTreemapDefinitionOutput
	ToPowerpackWidgetTreemapDefinitionOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionOutput
}

type PowerpackWidgetTreemapDefinitionArgs struct {
	// Nested block describing the request to use when displaying the widget.
	Requests PowerpackWidgetTreemapDefinitionRequestArrayInput `pulumi:"requests"`
	// The title of the widget.
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (PowerpackWidgetTreemapDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinition)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionArgs) ToPowerpackWidgetTreemapDefinitionOutput() PowerpackWidgetTreemapDefinitionOutput {
	return i.ToPowerpackWidgetTreemapDefinitionOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionArgs) ToPowerpackWidgetTreemapDefinitionOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionOutput)
}

func (i PowerpackWidgetTreemapDefinitionArgs) ToPowerpackWidgetTreemapDefinitionPtrOutput() PowerpackWidgetTreemapDefinitionPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionArgs) ToPowerpackWidgetTreemapDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionOutput).ToPowerpackWidgetTreemapDefinitionPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionArgs, PowerpackWidgetTreemapDefinitionPtr and PowerpackWidgetTreemapDefinitionPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionPtrOutput() PowerpackWidgetTreemapDefinitionPtrOutput
	ToPowerpackWidgetTreemapDefinitionPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionPtrOutput
}

type powerpackWidgetTreemapDefinitionPtrType PowerpackWidgetTreemapDefinitionArgs

func PowerpackWidgetTreemapDefinitionPtr(v *PowerpackWidgetTreemapDefinitionArgs) PowerpackWidgetTreemapDefinitionPtrInput {
	return (*powerpackWidgetTreemapDefinitionPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinition)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionPtrType) ToPowerpackWidgetTreemapDefinitionPtrOutput() PowerpackWidgetTreemapDefinitionPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionPtrType) ToPowerpackWidgetTreemapDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionPtrOutput)
}

type PowerpackWidgetTreemapDefinitionOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinition)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionOutput) ToPowerpackWidgetTreemapDefinitionOutput() PowerpackWidgetTreemapDefinitionOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionOutput) ToPowerpackWidgetTreemapDefinitionOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionOutput) ToPowerpackWidgetTreemapDefinitionPtrOutput() PowerpackWidgetTreemapDefinitionPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionOutput) ToPowerpackWidgetTreemapDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinition) *PowerpackWidgetTreemapDefinition {
		return &v
	}).(PowerpackWidgetTreemapDefinitionPtrOutput)
}

// Nested block describing the request to use when displaying the widget.
func (o PowerpackWidgetTreemapDefinitionOutput) Requests() PowerpackWidgetTreemapDefinitionRequestArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinition) []PowerpackWidgetTreemapDefinitionRequest { return v.Requests }).(PowerpackWidgetTreemapDefinitionRequestArrayOutput)
}

// The title of the widget.
func (o PowerpackWidgetTreemapDefinitionOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinition) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinition)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionPtrOutput) ToPowerpackWidgetTreemapDefinitionPtrOutput() PowerpackWidgetTreemapDefinitionPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionPtrOutput) ToPowerpackWidgetTreemapDefinitionPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionPtrOutput) Elem() PowerpackWidgetTreemapDefinitionOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinition) PowerpackWidgetTreemapDefinition {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinition
		return ret
	}).(PowerpackWidgetTreemapDefinitionOutput)
}

// Nested block describing the request to use when displaying the widget.
func (o PowerpackWidgetTreemapDefinitionPtrOutput) Requests() PowerpackWidgetTreemapDefinitionRequestArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinition) []PowerpackWidgetTreemapDefinitionRequest {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(PowerpackWidgetTreemapDefinitionRequestArrayOutput)
}

// The title of the widget.
func (o PowerpackWidgetTreemapDefinitionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequest struct {
	Formulas []PowerpackWidgetTreemapDefinitionRequestFormula `pulumi:"formulas"`
	Queries  []PowerpackWidgetTreemapDefinitionRequestQuery   `pulumi:"queries"`
}

// PowerpackWidgetTreemapDefinitionRequestInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestArgs and PowerpackWidgetTreemapDefinitionRequestOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestArgs{...}
type PowerpackWidgetTreemapDefinitionRequestInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestOutput() PowerpackWidgetTreemapDefinitionRequestOutput
	ToPowerpackWidgetTreemapDefinitionRequestOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestOutput
}

type PowerpackWidgetTreemapDefinitionRequestArgs struct {
	Formulas PowerpackWidgetTreemapDefinitionRequestFormulaArrayInput `pulumi:"formulas"`
	Queries  PowerpackWidgetTreemapDefinitionRequestQueryArrayInput   `pulumi:"queries"`
}

func (PowerpackWidgetTreemapDefinitionRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequest)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestArgs) ToPowerpackWidgetTreemapDefinitionRequestOutput() PowerpackWidgetTreemapDefinitionRequestOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestArgs) ToPowerpackWidgetTreemapDefinitionRequestOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestOutput)
}

// PowerpackWidgetTreemapDefinitionRequestArrayInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestArray and PowerpackWidgetTreemapDefinitionRequestArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestArrayInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestArray{ PowerpackWidgetTreemapDefinitionRequestArgs{...} }
type PowerpackWidgetTreemapDefinitionRequestArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestArrayOutput() PowerpackWidgetTreemapDefinitionRequestArrayOutput
	ToPowerpackWidgetTreemapDefinitionRequestArrayOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestArrayOutput
}

type PowerpackWidgetTreemapDefinitionRequestArray []PowerpackWidgetTreemapDefinitionRequestInput

func (PowerpackWidgetTreemapDefinitionRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequest)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestArray) ToPowerpackWidgetTreemapDefinitionRequestArrayOutput() PowerpackWidgetTreemapDefinitionRequestArrayOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestArray) ToPowerpackWidgetTreemapDefinitionRequestArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestArrayOutput)
}

type PowerpackWidgetTreemapDefinitionRequestOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequest)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestOutput) ToPowerpackWidgetTreemapDefinitionRequestOutput() PowerpackWidgetTreemapDefinitionRequestOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestOutput) ToPowerpackWidgetTreemapDefinitionRequestOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestOutput) Formulas() PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequest) []PowerpackWidgetTreemapDefinitionRequestFormula {
		return v.Formulas
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput)
}

func (o PowerpackWidgetTreemapDefinitionRequestOutput) Queries() PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequest) []PowerpackWidgetTreemapDefinitionRequestQuery {
		return v.Queries
	}).(PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput)
}

type PowerpackWidgetTreemapDefinitionRequestArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequest)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestArrayOutput() PowerpackWidgetTreemapDefinitionRequestArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTreemapDefinitionRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTreemapDefinitionRequest {
		return vs[0].([]PowerpackWidgetTreemapDefinitionRequest)[vs[1].(int)]
	}).(PowerpackWidgetTreemapDefinitionRequestOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormula struct {
	// An expression alias.
	Alias *string `pulumi:"alias"`
	// A list of display modes for each table cell. Valid values are `number`, `bar`, `trend`.
	CellDisplayMode *string `pulumi:"cellDisplayMode"`
	// Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditionalFormats` blocks are allowed using the structure below.
	ConditionalFormats []PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat `pulumi:"conditionalFormats"`
	// A string expression built from queries, formulas, and functions.
	FormulaExpression string `pulumi:"formulaExpression"`
	// The options for limiting results returned.
	Limit *PowerpackWidgetTreemapDefinitionRequestFormulaLimit `pulumi:"limit"`
	// Number formatting options for the formula.
	NumberFormat *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat `pulumi:"numberFormat"`
	// Styling options for widget formulas.
	Style *PowerpackWidgetTreemapDefinitionRequestFormulaStyle `pulumi:"style"`
}

// PowerpackWidgetTreemapDefinitionRequestFormulaInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaArgs and PowerpackWidgetTreemapDefinitionRequestFormulaOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestFormulaArgs{...}
type PowerpackWidgetTreemapDefinitionRequestFormulaInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaOutput() PowerpackWidgetTreemapDefinitionRequestFormulaOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaOutput
}

type PowerpackWidgetTreemapDefinitionRequestFormulaArgs struct {
	// An expression alias.
	Alias pulumi.StringPtrInput `pulumi:"alias"`
	// A list of display modes for each table cell. Valid values are `number`, `bar`, `trend`.
	CellDisplayMode pulumi.StringPtrInput `pulumi:"cellDisplayMode"`
	// Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditionalFormats` blocks are allowed using the structure below.
	ConditionalFormats PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayInput `pulumi:"conditionalFormats"`
	// A string expression built from queries, formulas, and functions.
	FormulaExpression pulumi.StringInput `pulumi:"formulaExpression"`
	// The options for limiting results returned.
	Limit PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrInput `pulumi:"limit"`
	// Number formatting options for the formula.
	NumberFormat PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrInput `pulumi:"numberFormat"`
	// Styling options for widget formulas.
	Style PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrInput `pulumi:"style"`
}

func (PowerpackWidgetTreemapDefinitionRequestFormulaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormula)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaOutput() PowerpackWidgetTreemapDefinitionRequestFormulaOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaOutput)
}

// PowerpackWidgetTreemapDefinitionRequestFormulaArrayInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaArray and PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaArrayInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestFormulaArray{ PowerpackWidgetTreemapDefinitionRequestFormulaArgs{...} }
type PowerpackWidgetTreemapDefinitionRequestFormulaArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput() PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaArrayOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput
}

type PowerpackWidgetTreemapDefinitionRequestFormulaArray []PowerpackWidgetTreemapDefinitionRequestFormulaInput

func (PowerpackWidgetTreemapDefinitionRequestFormulaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequestFormula)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaArray) ToPowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput() PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaArray) ToPowerpackWidgetTreemapDefinitionRequestFormulaArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormula)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaOutput() PowerpackWidgetTreemapDefinitionRequestFormulaOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaOutput {
	return o
}

// An expression alias.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaOutput) Alias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormula) *string { return v.Alias }).(pulumi.StringPtrOutput)
}

// A list of display modes for each table cell. Valid values are `number`, `bar`, `trend`.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaOutput) CellDisplayMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormula) *string { return v.CellDisplayMode }).(pulumi.StringPtrOutput)
}

// Conditional formats allow you to set the color of your widget content or background depending on the rule applied to your data. Multiple `conditionalFormats` blocks are allowed using the structure below.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaOutput) ConditionalFormats() PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormula) []PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat {
		return v.ConditionalFormats
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput)
}

// A string expression built from queries, formulas, and functions.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaOutput) FormulaExpression() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormula) string { return v.FormulaExpression }).(pulumi.StringOutput)
}

// The options for limiting results returned.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaOutput) Limit() PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormula) *PowerpackWidgetTreemapDefinitionRequestFormulaLimit {
		return v.Limit
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput)
}

// Number formatting options for the formula.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaOutput) NumberFormat() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormula) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat {
		return v.NumberFormat
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput)
}

// Styling options for widget formulas.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaOutput) Style() PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormula) *PowerpackWidgetTreemapDefinitionRequestFormulaStyle {
		return v.Style
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequestFormula)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput() PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTreemapDefinitionRequestFormulaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTreemapDefinitionRequestFormula {
		return vs[0].([]PowerpackWidgetTreemapDefinitionRequestFormula)[vs[1].(int)]
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat struct {
	// The comparator to use. Valid values are `=`, `>`, `>=`, `<`, `<=`.
	Comparator string `pulumi:"comparator"`
	// The color palette to apply to the background, same values available as palette.
	CustomBgColor *string `pulumi:"customBgColor"`
	// The color palette to apply to the foreground, same values available as palette.
	CustomFgColor *string `pulumi:"customFgColor"`
	// Setting this to True hides values.
	HideValue *bool `pulumi:"hideValue"`
	// Displays an image as the background.
	ImageUrl *string `pulumi:"imageUrl"`
	// The metric from the request to correlate with this conditional format.
	Metric *string `pulumi:"metric"`
	// The color palette to apply. Valid values are `blue`, `customBg`, `customImage`, `customText`, `grayOnWhite`, `grey`, `green`, `orange`, `red`, `redOnWhite`, `whiteOnGray`, `whiteOnGreen`, `greenOnWhite`, `whiteOnRed`, `whiteOnYellow`, `yellowOnWhite`, `blackOnLightYellow`, `blackOnLightGreen`, `blackOnLightRed`.
	Palette string `pulumi:"palette"`
	// Defines the displayed timeframe.
	Timeframe *string `pulumi:"timeframe"`
	// A value for the comparator.
	Value float64 `pulumi:"value"`
}

// PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArgs and PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArgs{...}
type PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput() PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput
}

type PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArgs struct {
	// The comparator to use. Valid values are `=`, `>`, `>=`, `<`, `<=`.
	Comparator pulumi.StringInput `pulumi:"comparator"`
	// The color palette to apply to the background, same values available as palette.
	CustomBgColor pulumi.StringPtrInput `pulumi:"customBgColor"`
	// The color palette to apply to the foreground, same values available as palette.
	CustomFgColor pulumi.StringPtrInput `pulumi:"customFgColor"`
	// Setting this to True hides values.
	HideValue pulumi.BoolPtrInput `pulumi:"hideValue"`
	// Displays an image as the background.
	ImageUrl pulumi.StringPtrInput `pulumi:"imageUrl"`
	// The metric from the request to correlate with this conditional format.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// The color palette to apply. Valid values are `blue`, `customBg`, `customImage`, `customText`, `grayOnWhite`, `grey`, `green`, `orange`, `red`, `redOnWhite`, `whiteOnGray`, `whiteOnGreen`, `greenOnWhite`, `whiteOnRed`, `whiteOnYellow`, `yellowOnWhite`, `blackOnLightYellow`, `blackOnLightGreen`, `blackOnLightRed`.
	Palette pulumi.StringInput `pulumi:"palette"`
	// Defines the displayed timeframe.
	Timeframe pulumi.StringPtrInput `pulumi:"timeframe"`
	// A value for the comparator.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput() PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput)
}

// PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArray and PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArray{ PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArgs{...} }
type PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput() PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput
}

type PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArray []PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatInput

func (PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArray) ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput() PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArray) ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput() PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput {
	return o
}

// The comparator to use. Valid values are `=`, `>`, `>=`, `<`, `<=`.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) Comparator() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat) string { return v.Comparator }).(pulumi.StringOutput)
}

// The color palette to apply to the background, same values available as palette.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) CustomBgColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat) *string {
		return v.CustomBgColor
	}).(pulumi.StringPtrOutput)
}

// The color palette to apply to the foreground, same values available as palette.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) CustomFgColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat) *string {
		return v.CustomFgColor
	}).(pulumi.StringPtrOutput)
}

// Setting this to True hides values.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) HideValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat) *bool { return v.HideValue }).(pulumi.BoolPtrOutput)
}

// Displays an image as the background.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) ImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat) *string { return v.ImageUrl }).(pulumi.StringPtrOutput)
}

// The metric from the request to correlate with this conditional format.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// The color palette to apply. Valid values are `blue`, `customBg`, `customImage`, `customText`, `grayOnWhite`, `grey`, `green`, `orange`, `red`, `redOnWhite`, `whiteOnGray`, `whiteOnGreen`, `greenOnWhite`, `whiteOnRed`, `whiteOnYellow`, `yellowOnWhite`, `blackOnLightYellow`, `blackOnLightGreen`, `blackOnLightRed`.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) Palette() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat) string { return v.Palette }).(pulumi.StringOutput)
}

// Defines the displayed timeframe.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) Timeframe() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat) *string { return v.Timeframe }).(pulumi.StringPtrOutput)
}

// A value for the comparator.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat) float64 { return v.Value }).(pulumi.Float64Output)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput() PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat {
		return vs[0].([]PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormat)[vs[1].(int)]
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaLimit struct {
	// The number of results to return.
	Count *int `pulumi:"count"`
	// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
	Order *string `pulumi:"order"`
}

// PowerpackWidgetTreemapDefinitionRequestFormulaLimitInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs and PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaLimitInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs{...}
type PowerpackWidgetTreemapDefinitionRequestFormulaLimitInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput() PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput
}

type PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs struct {
	// The number of results to return.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
	Order pulumi.StringPtrInput `pulumi:"order"`
}

func (PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaLimit)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput() PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput).ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs, PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtr and PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestFormulaLimitPtrType PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs

func PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtr(v *PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs) PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestFormulaLimitPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestFormulaLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaLimit)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaLimitPtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaLimitPtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaLimit)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput() PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestFormulaLimit) *PowerpackWidgetTreemapDefinitionRequestFormulaLimit {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput)
}

// The number of results to return.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaLimit) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaLimit) *string { return v.Order }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaLimit)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaLimit) PowerpackWidgetTreemapDefinitionRequestFormulaLimit {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestFormulaLimit
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput)
}

// The number of results to return.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaLimit) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaLimit) *string {
		if v == nil {
			return nil
		}
		return v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat struct {
	// Unit of the number format.
	Unit      PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit       `pulumi:"unit"`
	UnitScale *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale `pulumi:"unitScale"`
}

// PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs and PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs{...}
type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs struct {
	// Unit of the number format.
	Unit      PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitInput         `pulumi:"unit"`
	UnitScale PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrInput `pulumi:"unitScale"`
}

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput).ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs, PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtr and PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrType PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs

func PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtr(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput)
}

// Unit of the number format.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput) Unit() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit {
		return v.Unit
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput)
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput) UnitScale() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale {
		return v.UnitScale
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput)
}

// Unit of the number format.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput) Unit() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput)
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput) UnitScale() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormat) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale {
		if v == nil {
			return nil
		}
		return v.UnitScale
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit struct {
	// Canonical Units
	Canonical *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical `pulumi:"canonical"`
	// Use custom (non canonical metrics)
	Custom *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom `pulumi:"custom"`
}

// PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs and PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs{...}
type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs struct {
	// Canonical Units
	Canonical PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput `pulumi:"canonical"`
	// Use custom (non canonical metrics)
	Custom PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrInput `pulumi:"custom"`
}

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput).ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs, PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtr and PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrType PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs

func PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtr(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput)
}

// Canonical Units
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput) Canonical() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical {
		return v.Canonical
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput)
}

// Use custom (non canonical metrics)
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput) Custom() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom {
		return v.Custom
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput)
}

// Canonical Units
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput) Canonical() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical {
		if v == nil {
			return nil
		}
		return v.Canonical
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput)
}

// Use custom (non canonical metrics)
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput) Custom() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnit) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom {
		if v == nil {
			return nil
		}
		return v.Custom
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical struct {
	// per unit name. If you want to represent megabytes/s, you set 'unit*name' = 'megabyte' and 'per*unit_name = 'second'
	PerUnitName *string `pulumi:"perUnitName"`
	// Unit name. It should be in singular form ('megabyte' and not 'megabytes')
	UnitName string `pulumi:"unitName"`
}

// PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs and PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs{...}
type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs struct {
	// per unit name. If you want to represent megabytes/s, you set 'unit*name' = 'megabyte' and 'per*unit_name = 'second'
	PerUnitName pulumi.StringPtrInput `pulumi:"perUnitName"`
	// Unit name. It should be in singular form ('megabyte' and not 'megabytes')
	UnitName pulumi.StringInput `pulumi:"unitName"`
}

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput).ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs, PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtr and PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrType PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs

func PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtr(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput)
}

// per unit name. If you want to represent megabytes/s, you set 'unit*name' = 'megabyte' and 'per*unit_name = 'second'
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) PerUnitName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical) *string {
		return v.PerUnitName
	}).(pulumi.StringPtrOutput)
}

// Unit name. It should be in singular form ('megabyte' and not 'megabytes')
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput) UnitName() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical) string {
		return v.UnitName
	}).(pulumi.StringOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput)
}

// per unit name. If you want to represent megabytes/s, you set 'unit*name' = 'megabyte' and 'per*unit_name = 'second'
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) PerUnitName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical) *string {
		if v == nil {
			return nil
		}
		return v.PerUnitName
	}).(pulumi.StringPtrOutput)
}

// Unit name. It should be in singular form ('megabyte' and not 'megabytes')
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput) UnitName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonical) *string {
		if v == nil {
			return nil
		}
		return &v.UnitName
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom struct {
	// Unit label
	Label string `pulumi:"label"`
}

// PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs and PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs{...}
type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs struct {
	// Unit label
	Label pulumi.StringInput `pulumi:"label"`
}

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput).ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs, PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtr and PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrType PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs

func PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtr(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput)
}

// Unit label
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom) string { return v.Label }).(pulumi.StringOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput)
}

// Unit label
func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustom) *string {
		if v == nil {
			return nil
		}
		return &v.Label
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale struct {
	UnitName string `pulumi:"unitName"`
}

// PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs and PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs{...}
type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs struct {
	UnitName pulumi.StringInput `pulumi:"unitName"`
}

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput).ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs, PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtr and PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput
}

type powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrType PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs

func PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtr(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale) *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput)
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput) UnitName() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale) string { return v.UnitName }).(pulumi.StringOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale) PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput)
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput) UnitName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScale) *string {
		if v == nil {
			return nil
		}
		return &v.UnitName
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaStyle struct {
	// The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.
	Palette *string `pulumi:"palette"`
	// Index specifying which color to use within the palette.
	PaletteIndex *int `pulumi:"paletteIndex"`
}

// PowerpackWidgetTreemapDefinitionRequestFormulaStyleInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs and PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaStyleInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs{...}
type PowerpackWidgetTreemapDefinitionRequestFormulaStyleInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput() PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaStyleOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput
}

type PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs struct {
	// The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.
	Palette pulumi.StringPtrInput `pulumi:"palette"`
	// Index specifying which color to use within the palette.
	PaletteIndex pulumi.IntPtrInput `pulumi:"paletteIndex"`
}

func (PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaStyle)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput() PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaStyleOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaStyleOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs) ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput).ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs, PowerpackWidgetTreemapDefinitionRequestFormulaStylePtr and PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput
}

type powerpackWidgetTreemapDefinitionRequestFormulaStylePtrType PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs

func PowerpackWidgetTreemapDefinitionRequestFormulaStylePtr(v *PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs) PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestFormulaStylePtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestFormulaStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaStyle)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaStylePtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestFormulaStylePtrType) ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaStyle)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput() PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaStyleOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestFormulaStyle) *PowerpackWidgetTreemapDefinitionRequestFormulaStyle {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput)
}

// The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput) Palette() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaStyle) *string { return v.Palette }).(pulumi.StringPtrOutput)
}

// Index specifying which color to use within the palette.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput) PaletteIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestFormulaStyle) *int { return v.PaletteIndex }).(pulumi.IntPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestFormulaStyle)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput() PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput) ToPowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaStyle) PowerpackWidgetTreemapDefinitionRequestFormulaStyle {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestFormulaStyle
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput)
}

// The color palette used to display the formula. A guide to the available color palettes can be found at https://docs.datadoghq.com/dashboards/guide/widget_colors.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput) Palette() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaStyle) *string {
		if v == nil {
			return nil
		}
		return v.Palette
	}).(pulumi.StringPtrOutput)
}

// Index specifying which color to use within the palette.
func (o PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput) PaletteIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestFormulaStyle) *int {
		if v == nil {
			return nil
		}
		return v.PaletteIndex
	}).(pulumi.IntPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQuery struct {
	// The APM Dependency Stats query using formulas and functions.
	ApmDependencyStatsQuery *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery `pulumi:"apmDependencyStatsQuery"`
	// The APM Resource Stats query using formulas and functions.
	ApmResourceStatsQuery *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery `pulumi:"apmResourceStatsQuery"`
	// The Cloud Cost query using formulas and functions.
	CloudCostQuery *PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery `pulumi:"cloudCostQuery"`
	// A timeseries formula and functions events query.
	EventQuery *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery `pulumi:"eventQuery"`
	// A timeseries formula and functions metrics query.
	MetricQuery *PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery `pulumi:"metricQuery"`
	// The process query using formulas and functions.
	ProcessQuery *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery `pulumi:"processQuery"`
	// The SLO query using formulas and functions.
	SloQuery *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery `pulumi:"sloQuery"`
}

// PowerpackWidgetTreemapDefinitionRequestQueryInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryArgs and PowerpackWidgetTreemapDefinitionRequestQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryArgs struct {
	// The APM Dependency Stats query using formulas and functions.
	ApmDependencyStatsQuery PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrInput `pulumi:"apmDependencyStatsQuery"`
	// The APM Resource Stats query using formulas and functions.
	ApmResourceStatsQuery PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrInput `pulumi:"apmResourceStatsQuery"`
	// The Cloud Cost query using formulas and functions.
	CloudCostQuery PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrInput `pulumi:"cloudCostQuery"`
	// A timeseries formula and functions events query.
	EventQuery PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrInput `pulumi:"eventQuery"`
	// A timeseries formula and functions metrics query.
	MetricQuery PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrInput `pulumi:"metricQuery"`
	// The process query using formulas and functions.
	ProcessQuery PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrInput `pulumi:"processQuery"`
	// The SLO query using formulas and functions.
	SloQuery PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrInput `pulumi:"sloQuery"`
}

func (PowerpackWidgetTreemapDefinitionRequestQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQuery)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryOutput)
}

// PowerpackWidgetTreemapDefinitionRequestQueryArrayInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryArray and PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryArrayInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryArray{ PowerpackWidgetTreemapDefinitionRequestQueryArgs{...} }
type PowerpackWidgetTreemapDefinitionRequestQueryArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryArrayOutput() PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryArrayOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryArray []PowerpackWidgetTreemapDefinitionRequestQueryInput

func (PowerpackWidgetTreemapDefinitionRequestQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequestQuery)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryArray) ToPowerpackWidgetTreemapDefinitionRequestQueryArrayOutput() PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryArray) ToPowerpackWidgetTreemapDefinitionRequestQueryArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryOutput {
	return o
}

// The APM Dependency Stats query using formulas and functions.
func (o PowerpackWidgetTreemapDefinitionRequestQueryOutput) ApmDependencyStatsQuery() PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuery) *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery {
		return v.ApmDependencyStatsQuery
	}).(PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput)
}

// The APM Resource Stats query using formulas and functions.
func (o PowerpackWidgetTreemapDefinitionRequestQueryOutput) ApmResourceStatsQuery() PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuery) *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery {
		return v.ApmResourceStatsQuery
	}).(PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput)
}

// The Cloud Cost query using formulas and functions.
func (o PowerpackWidgetTreemapDefinitionRequestQueryOutput) CloudCostQuery() PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuery) *PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery {
		return v.CloudCostQuery
	}).(PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput)
}

// A timeseries formula and functions events query.
func (o PowerpackWidgetTreemapDefinitionRequestQueryOutput) EventQuery() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuery) *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery {
		return v.EventQuery
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput)
}

// A timeseries formula and functions metrics query.
func (o PowerpackWidgetTreemapDefinitionRequestQueryOutput) MetricQuery() PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuery) *PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery {
		return v.MetricQuery
	}).(PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput)
}

// The process query using formulas and functions.
func (o PowerpackWidgetTreemapDefinitionRequestQueryOutput) ProcessQuery() PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuery) *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery {
		return v.ProcessQuery
	}).(PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput)
}

// The SLO query using formulas and functions.
func (o PowerpackWidgetTreemapDefinitionRequestQueryOutput) SloQuery() PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuery) *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery {
		return v.SloQuery
	}).(PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequestQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryArrayOutput() PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTreemapDefinitionRequestQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTreemapDefinitionRequestQuery {
		return vs[0].([]PowerpackWidgetTreemapDefinitionRequestQuery)[vs[1].(int)]
	}).(PowerpackWidgetTreemapDefinitionRequestQueryOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
	DataSource string `pulumi:"dataSource"`
	// APM environment.
	Env string `pulumi:"env"`
	// Determines whether stats for upstream or downstream dependencies should be queried.
	IsUpstream *bool `pulumi:"isUpstream"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// Name of operation on service.
	OperationName string `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName *string `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue *string `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName string `pulumi:"resourceName"`
	// APM service.
	Service string `pulumi:"service"`
	// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
	Stat string `pulumi:"stat"`
}

// PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs and PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// APM environment.
	Env pulumi.StringInput `pulumi:"env"`
	// Determines whether stats for upstream or downstream dependencies should be queried.
	IsUpstream pulumi.BoolPtrInput `pulumi:"isUpstream"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of operation on service.
	OperationName pulumi.StringInput `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName pulumi.StringPtrInput `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue pulumi.StringPtrInput `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// APM service.
	Service pulumi.StringInput `pulumi:"service"`
	// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
	Stat pulumi.StringInput `pulumi:"stat"`
}

func (PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput).ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs, PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtr and PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrType PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs

func PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtr(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs) PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) string {
		return v.DataSource
	}).(pulumi.StringOutput)
}

// APM environment.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) Env() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) string { return v.Env }).(pulumi.StringOutput)
}

// Determines whether stats for upstream or downstream dependencies should be queried.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) IsUpstream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *bool { return v.IsUpstream }).(pulumi.BoolPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) string { return v.Name }).(pulumi.StringOutput)
}

// Name of operation on service.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) OperationName() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) string {
		return v.OperationName
	}).(pulumi.StringOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) string {
		return v.ResourceName
	}).(pulumi.StringOutput)
}

// APM service.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) string { return v.Service }).(pulumi.StringOutput)
}

// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput) Stat() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) string { return v.Stat }).(pulumi.StringOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Dependency Stats queries. Valid values are `apmDependencyStats`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// APM environment.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Env() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(pulumi.StringPtrOutput)
}

// Determines whether stats for upstream or downstream dependencies should be queried.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) IsUpstream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *bool {
		if v == nil {
			return nil
		}
		return v.IsUpstream
	}).(pulumi.BoolPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of operation on service.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.OperationName
	}).(pulumi.StringPtrOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// APM service.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

// APM statistic. Valid values are `avgDuration`, `avgRootDuration`, `avgSpansPerTrace`, `errorRate`, `pctExecTime`, `pctOfTraces`, `totalTracesCount`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Stat
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
	DataSource string `pulumi:"dataSource"`
	// APM environment.
	Env string `pulumi:"env"`
	// Array of fields to group results by.
	GroupBies []string `pulumi:"groupBies"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// Name of operation on service.
	OperationName *string `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName *string `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue *string `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName *string `pulumi:"resourceName"`
	// APM service.
	Service string `pulumi:"service"`
	// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
	Stat string `pulumi:"stat"`
}

// PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs and PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs struct {
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// APM environment.
	Env pulumi.StringInput `pulumi:"env"`
	// Array of fields to group results by.
	GroupBies pulumi.StringArrayInput `pulumi:"groupBies"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// Name of operation on service.
	OperationName pulumi.StringPtrInput `pulumi:"operationName"`
	// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
	PrimaryTagName pulumi.StringPtrInput `pulumi:"primaryTagName"`
	// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
	PrimaryTagValue pulumi.StringPtrInput `pulumi:"primaryTagValue"`
	// APM resource.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// APM service.
	Service pulumi.StringInput `pulumi:"service"`
	// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
	Stat pulumi.StringInput `pulumi:"stat"`
}

func (PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput).ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs, PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtr and PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrType PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs

func PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtr(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs) PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// APM environment.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) Env() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) string { return v.Env }).(pulumi.StringOutput)
}

// Array of fields to group results by.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) []string { return v.GroupBies }).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) string { return v.Name }).(pulumi.StringOutput)
}

// Name of operation on service.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.OperationName
	}).(pulumi.StringPtrOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// APM service.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) string { return v.Service }).(pulumi.StringOutput)
}

// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput) Stat() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) string { return v.Stat }).(pulumi.StringOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for APM Resource Stats queries. Valid values are `apmResourceStats`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// APM environment.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Env() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Env
	}).(pulumi.StringPtrOutput)
}

// Array of fields to group results by.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) GroupBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) []string {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of operation on service.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) OperationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.OperationName
	}).(pulumi.StringPtrOutput)
}

// The name of the second primary tag used within APM; required when `primaryTagValue` is specified. See https://docs.datadoghq.com/tracing/guide/setting*primary*tags*to*scope/#add-a-second-primary-tag-in-datadog.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) PrimaryTagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagName
	}).(pulumi.StringPtrOutput)
}

// Filter APM data by the second primary tag. `primaryTagName` must also be specified.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) PrimaryTagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryTagValue
	}).(pulumi.StringPtrOutput)
}

// APM resource.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return v.ResourceName
	}).(pulumi.StringPtrOutput)
}

// APM service.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

// APM statistic. Valid values are `errors`, `errorRate`, `hits`, `latencyAvg`, `latencyDistribution`, `latencyMax`, `latencyP50`, `latencyP75`, `latencyP90`, `latencyP95`, `latencyP99`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Stat
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery struct {
	// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
	Aggregator *string `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for cloud cost queries. Valid values are `cloudCost`.
	DataSource string `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name string `pulumi:"name"`
	// The cloud cost query definition.
	Query string `pulumi:"query"`
}

// PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs and PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs struct {
	// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
	Aggregator pulumi.StringPtrInput `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for cloud cost queries. Valid values are `cloudCost`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The cloud cost query definition.
	Query pulumi.StringInput `pulumi:"query"`
}

func (PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput).ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs, PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtr and PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrType PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs

func PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtr(v *PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs) PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) *PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput)
}

// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) *string { return v.Aggregator }).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for cloud cost queries. Valid values are `cloudCost`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The cloud cost query definition.
func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) string { return v.Query }).(pulumi.StringOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput)
}

// The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return v.Aggregator
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for cloud cost queries. Valid values are `cloudCost`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The cloud cost query definition.
func (o PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQuery struct {
	// The compute options.
	Computes []PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute `pulumi:"computes"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
	DataSource string `pulumi:"dataSource"`
	// Group by options.
	GroupBies []PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy `pulumi:"groupBies"`
	// An array of index names to query in the stream.
	Indexes []string `pulumi:"indexes"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// The search options.
	Search *PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch `pulumi:"search"`
	// Storage location (private beta).
	Storage *string `pulumi:"storage"`
}

// PowerpackWidgetTreemapDefinitionRequestQueryEventQueryInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs and PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryEventQueryInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs struct {
	// The compute options.
	Computes PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayInput `pulumi:"computes"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Group by options.
	GroupBies PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayInput `pulumi:"groupBies"`
	// An array of index names to query in the stream.
	Indexes pulumi.StringArrayInput `pulumi:"indexes"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The search options.
	Search PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrInput `pulumi:"search"`
	// Storage location (private beta).
	Storage pulumi.StringPtrInput `pulumi:"storage"`
}

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput).ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs, PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtr and PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrType PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs

func PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtr(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput)
}

// The compute options.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) Computes() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) []PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute {
		return v.Computes
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// Group by options.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) GroupBies() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) []PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy {
		return v.GroupBies
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput)
}

// An array of index names to query in the stream.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) Indexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) []string { return v.Indexes }).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The search options.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) Search() PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) *PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch {
		return v.Search
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput)
}

// Storage location (private beta).
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput) Storage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) *string { return v.Storage }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryEventQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) PowerpackWidgetTreemapDefinitionRequestQueryEventQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestQueryEventQuery
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput)
}

// The compute options.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) Computes() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) []PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute {
		if v == nil {
			return nil
		}
		return v.Computes
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for event platform-based queries. Valid values are `logs`, `spans`, `network`, `rum`, `securitySignals`, `profiles`, `audit`, `events`, `ciTests`, `ciPipelines`, `incidentAnalytics`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Group by options.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) GroupBies() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) []PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy {
		if v == nil {
			return nil
		}
		return v.GroupBies
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput)
}

// An array of index names to query in the stream.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) Indexes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) []string {
		if v == nil {
			return nil
		}
		return v.Indexes
	}).(pulumi.StringArrayOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The search options.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) Search() PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) *PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch {
		if v == nil {
			return nil
		}
		return v.Search
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput)
}

// Storage location (private beta).
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput) Storage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuery) *string {
		if v == nil {
			return nil
		}
		return v.Storage
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute struct {
	// The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation string `pulumi:"aggregation"`
	// A time interval in milliseconds.
	Interval *int `pulumi:"interval"`
	// The measurable attribute to compute.
	Metric *string `pulumi:"metric"`
}

// PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArgs and PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArgs struct {
	// The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// A time interval in milliseconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The measurable attribute to compute.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
}

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput)
}

// PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArray and PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArray{ PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArgs{...} }
type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArray []PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeInput

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArray) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArray) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput {
	return o
}

// The aggregation methods for event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute) string { return v.Aggregation }).(pulumi.StringOutput)
}

// A time interval in milliseconds.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The measurable attribute to compute.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute {
		return vs[0].([]PowerpackWidgetTreemapDefinitionRequestQueryEventQueryCompute)[vs[1].(int)]
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy struct {
	// The event facet.
	Facet string `pulumi:"facet"`
	// The number of groups to return.
	Limit *int `pulumi:"limit"`
	// The options for sorting group by results.
	Sort *PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort `pulumi:"sort"`
}

// PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArgs and PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArgs struct {
	// The event facet.
	Facet pulumi.StringInput `pulumi:"facet"`
	// The number of groups to return.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// The options for sorting group by results.
	Sort PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrInput `pulumi:"sort"`
}

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput)
}

// PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArray and PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArray{ PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArgs{...} }
type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArray []PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByInput

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArray) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArray) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput {
	return o
}

// The event facet.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput) Facet() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy) string { return v.Facet }).(pulumi.StringOutput)
}

// The number of groups to return.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// The options for sorting group by results.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput) Sort() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy) *PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort {
		return v.Sort
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput) Index(i pulumi.IntInput) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy {
		return vs[0].([]PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBy)[vs[1].(int)]
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort struct {
	// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation string `pulumi:"aggregation"`
	// The metric used for sorting group by results.
	Metric *string `pulumi:"metric"`
	// Direction of sort. Valid values are `asc`, `desc`.
	Order *string `pulumi:"order"`
}

// PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs and PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs struct {
	// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// The metric used for sorting group by results.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Direction of sort. Valid values are `asc`, `desc`.
	Order pulumi.StringPtrInput `pulumi:"order"`
}

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput).ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs, PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtr and PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrType PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs

func PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtr(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort) *PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput)
}

// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort) string { return v.Aggregation }).(pulumi.StringOutput)
}

// The metric used for sorting group by results.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Direction of sort. Valid values are `asc`, `desc`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort) *string { return v.Order }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort) PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput)
}

// The aggregation methods for the event platform queries. Valid values are `count`, `cardinality`, `median`, `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`, `min`, `max`, `avg`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort) *string {
		if v == nil {
			return nil
		}
		return &v.Aggregation
	}).(pulumi.StringPtrOutput)
}

// The metric used for sorting group by results.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort) *string {
		if v == nil {
			return nil
		}
		return v.Metric
	}).(pulumi.StringPtrOutput)
}

// Direction of sort. Valid values are `asc`, `desc`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput) Order() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySort) *string {
		if v == nil {
			return nil
		}
		return v.Order
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch struct {
	// The events search string.
	Query string `pulumi:"query"`
}

// PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs and PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs struct {
	// The events search string.
	Query pulumi.StringInput `pulumi:"query"`
}

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput).ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs, PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtr and PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrType PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs

func PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtr(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs) PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch) *PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput)
}

// The events search string.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch) string { return v.Query }).(pulumi.StringOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch) PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput)
}

// The events search string.
func (o PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearch) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator *string `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for metrics queries. Defaults to `"metrics"`.
	DataSource *string `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name string `pulumi:"name"`
	// The metrics query definition.
	Query string `pulumi:"query"`
}

// PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs and PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator pulumi.StringPtrInput `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for metrics queries. Defaults to `"metrics"`.
	DataSource pulumi.StringPtrInput `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The metrics query definition.
	Query pulumi.StringInput `pulumi:"query"`
}

func (PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput).ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs, PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtr and PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrType PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs

func PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtr(v *PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs) PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) *PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) *string { return v.Aggregator }).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for metrics queries. Defaults to `"metrics"`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) *string { return v.DataSource }).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The metrics query definition.
func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) string { return v.Query }).(pulumi.StringOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return v.Aggregator
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for metrics queries. Defaults to `"metrics"`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The metrics query definition.
func (o PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator *string `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for process queries. Valid values are `process`, `container`.
	DataSource string `pulumi:"dataSource"`
	// Whether to normalize the CPU percentages.
	IsNormalizedCpu *bool `pulumi:"isNormalizedCpu"`
	// The number of hits to return.
	Limit *int `pulumi:"limit"`
	// The process metric name.
	Metric string `pulumi:"metric"`
	// The name of query for use in formulas.
	Name string `pulumi:"name"`
	// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
	Sort *string `pulumi:"sort"`
	// An array of tags to filter by.
	TagFilters []string `pulumi:"tagFilters"`
	// The text to use as a filter.
	TextFilter *string `pulumi:"textFilter"`
}

// PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs and PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput
}

type PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs struct {
	// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
	Aggregator pulumi.StringPtrInput `pulumi:"aggregator"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for process queries. Valid values are `process`, `container`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Whether to normalize the CPU percentages.
	IsNormalizedCpu pulumi.BoolPtrInput `pulumi:"isNormalizedCpu"`
	// The number of hits to return.
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// The process metric name.
	Metric pulumi.StringInput `pulumi:"metric"`
	// The name of query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
	Sort pulumi.StringPtrInput `pulumi:"sort"`
	// An array of tags to filter by.
	TagFilters pulumi.StringArrayInput `pulumi:"tagFilters"`
	// The text to use as a filter.
	TextFilter pulumi.StringPtrInput `pulumi:"textFilter"`
}

func (PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput).ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs, PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtr and PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrType PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs

func PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtr(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs) PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput() PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *string { return v.Aggregator }).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for process queries. Valid values are `process`, `container`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// Whether to normalize the CPU percentages.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) IsNormalizedCpu() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *bool { return v.IsNormalizedCpu }).(pulumi.BoolPtrOutput)
}

// The number of hits to return.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// The process metric name.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) string { return v.Metric }).(pulumi.StringOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) Sort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *string { return v.Sort }).(pulumi.StringPtrOutput)
}

// An array of tags to filter by.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) []string { return v.TagFilters }).(pulumi.StringArrayOutput)
}

// The text to use as a filter.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput) TextFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *string { return v.TextFilter }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput)
}

// The aggregation methods available for metrics queries. Valid values are `avg`, `min`, `max`, `sum`, `last`, `area`, `l2norm`, `percentile`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) Aggregator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.Aggregator
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for process queries. Valid values are `process`, `container`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Whether to normalize the CPU percentages.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) IsNormalizedCpu() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *bool {
		if v == nil {
			return nil
		}
		return v.IsNormalizedCpu
	}).(pulumi.BoolPtrOutput)
}

// The number of hits to return.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *int {
		if v == nil {
			return nil
		}
		return v.Limit
	}).(pulumi.IntPtrOutput)
}

// The process metric name.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Metric
	}).(pulumi.StringPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The direction of the sort. Valid values are `asc`, `desc`. Defaults to `"desc"`.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) Sort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.Sort
	}).(pulumi.StringPtrOutput)
}

// An array of tags to filter by.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) TagFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) []string {
		if v == nil {
			return nil
		}
		return v.TagFilters
	}).(pulumi.StringArrayOutput)
}

// The text to use as a filter.
func (o PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput) TextFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQueryProcessQuery) *string {
		if v == nil {
			return nil
		}
		return v.TextFilter
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQuerySloQuery struct {
	// Additional filters applied to the SLO query.
	AdditionalQueryFilters *string `pulumi:"additionalQueryFilters"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids *string `pulumi:"crossOrgUuids"`
	// The data source for SLO queries. Valid values are `slo`.
	DataSource string `pulumi:"dataSource"`
	// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
	GroupMode *string `pulumi:"groupMode"`
	// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
	Measure string `pulumi:"measure"`
	// The name of query for use in formulas.
	Name *string `pulumi:"name"`
	// ID of an SLO to query.
	SloId string `pulumi:"sloId"`
	// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
	SloQueryType *string `pulumi:"sloQueryType"`
}

// PowerpackWidgetTreemapDefinitionRequestQuerySloQueryInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs and PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQuerySloQueryInput` via:
//
//	PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs{...}
type PowerpackWidgetTreemapDefinitionRequestQuerySloQueryInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput() PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput
	ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput
}

type PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs struct {
	// Additional filters applied to the SLO query.
	AdditionalQueryFilters pulumi.StringPtrInput `pulumi:"additionalQueryFilters"`
	// The source organization UUID for cross organization queries. Feature in Private Beta.
	CrossOrgUuids pulumi.StringPtrInput `pulumi:"crossOrgUuids"`
	// The data source for SLO queries. Valid values are `slo`.
	DataSource pulumi.StringInput `pulumi:"dataSource"`
	// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
	GroupMode pulumi.StringPtrInput `pulumi:"groupMode"`
	// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
	Measure pulumi.StringInput `pulumi:"measure"`
	// The name of query for use in formulas.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// ID of an SLO to query.
	SloId pulumi.StringInput `pulumi:"sloId"`
	// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
	SloQueryType pulumi.StringPtrInput `pulumi:"sloQueryType"`
}

func (PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (i PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput() PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput)
}

func (i PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput).ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx)
}

// PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrInput is an input type that accepts PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs, PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtr and PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrInput` via:
//
//	        PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput
	ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Context) PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput
}

type powerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrType PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs

func PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtr(v *PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs) PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrInput {
	return (*powerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrType)(v)
}

func (*powerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (i *powerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput {
	return i.ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrType) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput() PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput {
	return o.ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery {
		return &v
	}).(PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput)
}

// Additional filters applied to the SLO query.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) AdditionalQueryFilters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string { return v.AdditionalQueryFilters }).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string { return v.CrossOrgUuids }).(pulumi.StringPtrOutput)
}

// The data source for SLO queries. Valid values are `slo`.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) DataSource() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) string { return v.DataSource }).(pulumi.StringOutput)
}

// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) GroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string { return v.GroupMode }).(pulumi.StringPtrOutput)
}

// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) Measure() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) string { return v.Measure }).(pulumi.StringOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ID of an SLO to query.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) SloId() pulumi.StringOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) string { return v.SloId }).(pulumi.StringOutput)
}

// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput) SloQueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string { return v.SloQueryType }).(pulumi.StringPtrOutput)
}

type PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetTreemapDefinitionRequestQuerySloQuery)(nil)).Elem()
}

func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput() PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) ToPowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutputWithContext(ctx context.Context) PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput {
	return o
}

func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) Elem() PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) PowerpackWidgetTreemapDefinitionRequestQuerySloQuery {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetTreemapDefinitionRequestQuerySloQuery
		return ret
	}).(PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput)
}

// Additional filters applied to the SLO query.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) AdditionalQueryFilters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalQueryFilters
	}).(pulumi.StringPtrOutput)
}

// The source organization UUID for cross organization queries. Feature in Private Beta.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) CrossOrgUuids() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.CrossOrgUuids
	}).(pulumi.StringPtrOutput)
}

// The data source for SLO queries. Valid values are `slo`.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return &v.DataSource
	}).(pulumi.StringPtrOutput)
}

// Group mode to query measures. Valid values are `overall`, `components`. Defaults to `"overall"`.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) GroupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.GroupMode
	}).(pulumi.StringPtrOutput)
}

// SLO measures queries. Valid values are `goodEvents`, `badEvents`, `goodMinutes`, `badMinutes`, `sloStatus`, `errorBudgetRemaining`, `burnRate`, `errorBudgetBurndown`.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) Measure() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Measure
	}).(pulumi.StringPtrOutput)
}

// The name of query for use in formulas.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ID of an SLO to query.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) SloId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return &v.SloId
	}).(pulumi.StringPtrOutput)
}

// type of the SLO to query. Valid values are `metric`, `timeSlice`. Defaults to `"metric"`.
func (o PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput) SloQueryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetTreemapDefinitionRequestQuerySloQuery) *string {
		if v == nil {
			return nil
		}
		return v.SloQueryType
	}).(pulumi.StringPtrOutput)
}

type PowerpackWidgetWidgetLayout struct {
	// The height of the widget.
	Height int `pulumi:"height"`
	// Whether the widget should be the first one on the second column in high density or not. Only one widget in the dashboard should have this property set to `true`.
	IsColumnBreak *bool `pulumi:"isColumnBreak"`
	// The width of the widget.
	Width int `pulumi:"width"`
	// The position of the widget on the x (horizontal) axis. Must be greater than or equal to 0.
	X int `pulumi:"x"`
	// The position of the widget on the y (vertical) axis. Must be greater than or equal to 0.
	Y int `pulumi:"y"`
}

// PowerpackWidgetWidgetLayoutInput is an input type that accepts PowerpackWidgetWidgetLayoutArgs and PowerpackWidgetWidgetLayoutOutput values.
// You can construct a concrete instance of `PowerpackWidgetWidgetLayoutInput` via:
//
//	PowerpackWidgetWidgetLayoutArgs{...}
type PowerpackWidgetWidgetLayoutInput interface {
	pulumi.Input

	ToPowerpackWidgetWidgetLayoutOutput() PowerpackWidgetWidgetLayoutOutput
	ToPowerpackWidgetWidgetLayoutOutputWithContext(context.Context) PowerpackWidgetWidgetLayoutOutput
}

type PowerpackWidgetWidgetLayoutArgs struct {
	// The height of the widget.
	Height pulumi.IntInput `pulumi:"height"`
	// Whether the widget should be the first one on the second column in high density or not. Only one widget in the dashboard should have this property set to `true`.
	IsColumnBreak pulumi.BoolPtrInput `pulumi:"isColumnBreak"`
	// The width of the widget.
	Width pulumi.IntInput `pulumi:"width"`
	// The position of the widget on the x (horizontal) axis. Must be greater than or equal to 0.
	X pulumi.IntInput `pulumi:"x"`
	// The position of the widget on the y (vertical) axis. Must be greater than or equal to 0.
	Y pulumi.IntInput `pulumi:"y"`
}

func (PowerpackWidgetWidgetLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetWidgetLayout)(nil)).Elem()
}

func (i PowerpackWidgetWidgetLayoutArgs) ToPowerpackWidgetWidgetLayoutOutput() PowerpackWidgetWidgetLayoutOutput {
	return i.ToPowerpackWidgetWidgetLayoutOutputWithContext(context.Background())
}

func (i PowerpackWidgetWidgetLayoutArgs) ToPowerpackWidgetWidgetLayoutOutputWithContext(ctx context.Context) PowerpackWidgetWidgetLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetWidgetLayoutOutput)
}

func (i PowerpackWidgetWidgetLayoutArgs) ToPowerpackWidgetWidgetLayoutPtrOutput() PowerpackWidgetWidgetLayoutPtrOutput {
	return i.ToPowerpackWidgetWidgetLayoutPtrOutputWithContext(context.Background())
}

func (i PowerpackWidgetWidgetLayoutArgs) ToPowerpackWidgetWidgetLayoutPtrOutputWithContext(ctx context.Context) PowerpackWidgetWidgetLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetWidgetLayoutOutput).ToPowerpackWidgetWidgetLayoutPtrOutputWithContext(ctx)
}

// PowerpackWidgetWidgetLayoutPtrInput is an input type that accepts PowerpackWidgetWidgetLayoutArgs, PowerpackWidgetWidgetLayoutPtr and PowerpackWidgetWidgetLayoutPtrOutput values.
// You can construct a concrete instance of `PowerpackWidgetWidgetLayoutPtrInput` via:
//
//	        PowerpackWidgetWidgetLayoutArgs{...}
//
//	or:
//
//	        nil
type PowerpackWidgetWidgetLayoutPtrInput interface {
	pulumi.Input

	ToPowerpackWidgetWidgetLayoutPtrOutput() PowerpackWidgetWidgetLayoutPtrOutput
	ToPowerpackWidgetWidgetLayoutPtrOutputWithContext(context.Context) PowerpackWidgetWidgetLayoutPtrOutput
}

type powerpackWidgetWidgetLayoutPtrType PowerpackWidgetWidgetLayoutArgs

func PowerpackWidgetWidgetLayoutPtr(v *PowerpackWidgetWidgetLayoutArgs) PowerpackWidgetWidgetLayoutPtrInput {
	return (*powerpackWidgetWidgetLayoutPtrType)(v)
}

func (*powerpackWidgetWidgetLayoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetWidgetLayout)(nil)).Elem()
}

func (i *powerpackWidgetWidgetLayoutPtrType) ToPowerpackWidgetWidgetLayoutPtrOutput() PowerpackWidgetWidgetLayoutPtrOutput {
	return i.ToPowerpackWidgetWidgetLayoutPtrOutputWithContext(context.Background())
}

func (i *powerpackWidgetWidgetLayoutPtrType) ToPowerpackWidgetWidgetLayoutPtrOutputWithContext(ctx context.Context) PowerpackWidgetWidgetLayoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PowerpackWidgetWidgetLayoutPtrOutput)
}

type PowerpackWidgetWidgetLayoutOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetWidgetLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PowerpackWidgetWidgetLayout)(nil)).Elem()
}

func (o PowerpackWidgetWidgetLayoutOutput) ToPowerpackWidgetWidgetLayoutOutput() PowerpackWidgetWidgetLayoutOutput {
	return o
}

func (o PowerpackWidgetWidgetLayoutOutput) ToPowerpackWidgetWidgetLayoutOutputWithContext(ctx context.Context) PowerpackWidgetWidgetLayoutOutput {
	return o
}

func (o PowerpackWidgetWidgetLayoutOutput) ToPowerpackWidgetWidgetLayoutPtrOutput() PowerpackWidgetWidgetLayoutPtrOutput {
	return o.ToPowerpackWidgetWidgetLayoutPtrOutputWithContext(context.Background())
}

func (o PowerpackWidgetWidgetLayoutOutput) ToPowerpackWidgetWidgetLayoutPtrOutputWithContext(ctx context.Context) PowerpackWidgetWidgetLayoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PowerpackWidgetWidgetLayout) *PowerpackWidgetWidgetLayout {
		return &v
	}).(PowerpackWidgetWidgetLayoutPtrOutput)
}

// The height of the widget.
func (o PowerpackWidgetWidgetLayoutOutput) Height() pulumi.IntOutput {
	return o.ApplyT(func(v PowerpackWidgetWidgetLayout) int { return v.Height }).(pulumi.IntOutput)
}

// Whether the widget should be the first one on the second column in high density or not. Only one widget in the dashboard should have this property set to `true`.
func (o PowerpackWidgetWidgetLayoutOutput) IsColumnBreak() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PowerpackWidgetWidgetLayout) *bool { return v.IsColumnBreak }).(pulumi.BoolPtrOutput)
}

// The width of the widget.
func (o PowerpackWidgetWidgetLayoutOutput) Width() pulumi.IntOutput {
	return o.ApplyT(func(v PowerpackWidgetWidgetLayout) int { return v.Width }).(pulumi.IntOutput)
}

// The position of the widget on the x (horizontal) axis. Must be greater than or equal to 0.
func (o PowerpackWidgetWidgetLayoutOutput) X() pulumi.IntOutput {
	return o.ApplyT(func(v PowerpackWidgetWidgetLayout) int { return v.X }).(pulumi.IntOutput)
}

// The position of the widget on the y (vertical) axis. Must be greater than or equal to 0.
func (o PowerpackWidgetWidgetLayoutOutput) Y() pulumi.IntOutput {
	return o.ApplyT(func(v PowerpackWidgetWidgetLayout) int { return v.Y }).(pulumi.IntOutput)
}

type PowerpackWidgetWidgetLayoutPtrOutput struct{ *pulumi.OutputState }

func (PowerpackWidgetWidgetLayoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PowerpackWidgetWidgetLayout)(nil)).Elem()
}

func (o PowerpackWidgetWidgetLayoutPtrOutput) ToPowerpackWidgetWidgetLayoutPtrOutput() PowerpackWidgetWidgetLayoutPtrOutput {
	return o
}

func (o PowerpackWidgetWidgetLayoutPtrOutput) ToPowerpackWidgetWidgetLayoutPtrOutputWithContext(ctx context.Context) PowerpackWidgetWidgetLayoutPtrOutput {
	return o
}

func (o PowerpackWidgetWidgetLayoutPtrOutput) Elem() PowerpackWidgetWidgetLayoutOutput {
	return o.ApplyT(func(v *PowerpackWidgetWidgetLayout) PowerpackWidgetWidgetLayout {
		if v != nil {
			return *v
		}
		var ret PowerpackWidgetWidgetLayout
		return ret
	}).(PowerpackWidgetWidgetLayoutOutput)
}

// The height of the widget.
func (o PowerpackWidgetWidgetLayoutPtrOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetWidgetLayout) *int {
		if v == nil {
			return nil
		}
		return &v.Height
	}).(pulumi.IntPtrOutput)
}

// Whether the widget should be the first one on the second column in high density or not. Only one widget in the dashboard should have this property set to `true`.
func (o PowerpackWidgetWidgetLayoutPtrOutput) IsColumnBreak() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetWidgetLayout) *bool {
		if v == nil {
			return nil
		}
		return v.IsColumnBreak
	}).(pulumi.BoolPtrOutput)
}

// The width of the widget.
func (o PowerpackWidgetWidgetLayoutPtrOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetWidgetLayout) *int {
		if v == nil {
			return nil
		}
		return &v.Width
	}).(pulumi.IntPtrOutput)
}

// The position of the widget on the x (horizontal) axis. Must be greater than or equal to 0.
func (o PowerpackWidgetWidgetLayoutPtrOutput) X() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetWidgetLayout) *int {
		if v == nil {
			return nil
		}
		return &v.X
	}).(pulumi.IntPtrOutput)
}

// The position of the widget on the y (vertical) axis. Must be greater than or equal to 0.
func (o PowerpackWidgetWidgetLayoutPtrOutput) Y() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PowerpackWidgetWidgetLayout) *int {
		if v == nil {
			return nil
		}
		return &v.Y
	}).(pulumi.IntPtrOutput)
}

type ProviderDefaultTags struct {
	// [Experimental - Monitors and Logs Pipelines only] Resource tags to be applied by default across all resources.
	Tags map[string]string `pulumi:"tags"`
}

// ProviderDefaultTagsInput is an input type that accepts ProviderDefaultTagsArgs and ProviderDefaultTagsOutput values.
// You can construct a concrete instance of `ProviderDefaultTagsInput` via:
//
//	ProviderDefaultTagsArgs{...}
type ProviderDefaultTagsInput interface {
	pulumi.Input

	ToProviderDefaultTagsOutput() ProviderDefaultTagsOutput
	ToProviderDefaultTagsOutputWithContext(context.Context) ProviderDefaultTagsOutput
}

type ProviderDefaultTagsArgs struct {
	// [Experimental - Monitors and Logs Pipelines only] Resource tags to be applied by default across all resources.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ProviderDefaultTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderDefaultTags)(nil)).Elem()
}

func (i ProviderDefaultTagsArgs) ToProviderDefaultTagsOutput() ProviderDefaultTagsOutput {
	return i.ToProviderDefaultTagsOutputWithContext(context.Background())
}

func (i ProviderDefaultTagsArgs) ToProviderDefaultTagsOutputWithContext(ctx context.Context) ProviderDefaultTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderDefaultTagsOutput)
}

func (i ProviderDefaultTagsArgs) ToProviderDefaultTagsPtrOutput() ProviderDefaultTagsPtrOutput {
	return i.ToProviderDefaultTagsPtrOutputWithContext(context.Background())
}

func (i ProviderDefaultTagsArgs) ToProviderDefaultTagsPtrOutputWithContext(ctx context.Context) ProviderDefaultTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderDefaultTagsOutput).ToProviderDefaultTagsPtrOutputWithContext(ctx)
}

// ProviderDefaultTagsPtrInput is an input type that accepts ProviderDefaultTagsArgs, ProviderDefaultTagsPtr and ProviderDefaultTagsPtrOutput values.
// You can construct a concrete instance of `ProviderDefaultTagsPtrInput` via:
//
//	        ProviderDefaultTagsArgs{...}
//
//	or:
//
//	        nil
type ProviderDefaultTagsPtrInput interface {
	pulumi.Input

	ToProviderDefaultTagsPtrOutput() ProviderDefaultTagsPtrOutput
	ToProviderDefaultTagsPtrOutputWithContext(context.Context) ProviderDefaultTagsPtrOutput
}

type providerDefaultTagsPtrType ProviderDefaultTagsArgs

func ProviderDefaultTagsPtr(v *ProviderDefaultTagsArgs) ProviderDefaultTagsPtrInput {
	return (*providerDefaultTagsPtrType)(v)
}

func (*providerDefaultTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderDefaultTags)(nil)).Elem()
}

func (i *providerDefaultTagsPtrType) ToProviderDefaultTagsPtrOutput() ProviderDefaultTagsPtrOutput {
	return i.ToProviderDefaultTagsPtrOutputWithContext(context.Background())
}

func (i *providerDefaultTagsPtrType) ToProviderDefaultTagsPtrOutputWithContext(ctx context.Context) ProviderDefaultTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderDefaultTagsPtrOutput)
}

type ProviderDefaultTagsOutput struct{ *pulumi.OutputState }

func (ProviderDefaultTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderDefaultTags)(nil)).Elem()
}

func (o ProviderDefaultTagsOutput) ToProviderDefaultTagsOutput() ProviderDefaultTagsOutput {
	return o
}

func (o ProviderDefaultTagsOutput) ToProviderDefaultTagsOutputWithContext(ctx context.Context) ProviderDefaultTagsOutput {
	return o
}

func (o ProviderDefaultTagsOutput) ToProviderDefaultTagsPtrOutput() ProviderDefaultTagsPtrOutput {
	return o.ToProviderDefaultTagsPtrOutputWithContext(context.Background())
}

func (o ProviderDefaultTagsOutput) ToProviderDefaultTagsPtrOutputWithContext(ctx context.Context) ProviderDefaultTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderDefaultTags) *ProviderDefaultTags {
		return &v
	}).(ProviderDefaultTagsPtrOutput)
}

// [Experimental - Monitors and Logs Pipelines only] Resource tags to be applied by default across all resources.
func (o ProviderDefaultTagsOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProviderDefaultTags) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ProviderDefaultTagsPtrOutput struct{ *pulumi.OutputState }

func (ProviderDefaultTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderDefaultTags)(nil)).Elem()
}

func (o ProviderDefaultTagsPtrOutput) ToProviderDefaultTagsPtrOutput() ProviderDefaultTagsPtrOutput {
	return o
}

func (o ProviderDefaultTagsPtrOutput) ToProviderDefaultTagsPtrOutputWithContext(ctx context.Context) ProviderDefaultTagsPtrOutput {
	return o
}

func (o ProviderDefaultTagsPtrOutput) Elem() ProviderDefaultTagsOutput {
	return o.ApplyT(func(v *ProviderDefaultTags) ProviderDefaultTags {
		if v != nil {
			return *v
		}
		var ret ProviderDefaultTags
		return ret
	}).(ProviderDefaultTagsOutput)
}

// [Experimental - Monitors and Logs Pipelines only] Resource tags to be applied by default across all resources.
func (o ProviderDefaultTagsPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProviderDefaultTags) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type RestrictionPolicyBinding struct {
	// An array of principals. A principal is a subject or group of subjects. Each principal is formatted as `type:id`. Supported types: `role`, `team`, `user`, and `org`. Org ID can be obtained using a `GET /api/v2/current_user` API request. Find it in the `data.relationships.org.data.id` field.
	Principals []string `pulumi:"principals"`
	// The role/level of access. See this page for more details https://docs.datadoghq.com/api/latest/restriction-policies/#supported-relations-for-resources
	Relation string `pulumi:"relation"`
}

// RestrictionPolicyBindingInput is an input type that accepts RestrictionPolicyBindingArgs and RestrictionPolicyBindingOutput values.
// You can construct a concrete instance of `RestrictionPolicyBindingInput` via:
//
//	RestrictionPolicyBindingArgs{...}
type RestrictionPolicyBindingInput interface {
	pulumi.Input

	ToRestrictionPolicyBindingOutput() RestrictionPolicyBindingOutput
	ToRestrictionPolicyBindingOutputWithContext(context.Context) RestrictionPolicyBindingOutput
}

type RestrictionPolicyBindingArgs struct {
	// An array of principals. A principal is a subject or group of subjects. Each principal is formatted as `type:id`. Supported types: `role`, `team`, `user`, and `org`. Org ID can be obtained using a `GET /api/v2/current_user` API request. Find it in the `data.relationships.org.data.id` field.
	Principals pulumi.StringArrayInput `pulumi:"principals"`
	// The role/level of access. See this page for more details https://docs.datadoghq.com/api/latest/restriction-policies/#supported-relations-for-resources
	Relation pulumi.StringInput `pulumi:"relation"`
}

func (RestrictionPolicyBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RestrictionPolicyBinding)(nil)).Elem()
}

func (i RestrictionPolicyBindingArgs) ToRestrictionPolicyBindingOutput() RestrictionPolicyBindingOutput {
	return i.ToRestrictionPolicyBindingOutputWithContext(context.Background())
}

func (i RestrictionPolicyBindingArgs) ToRestrictionPolicyBindingOutputWithContext(ctx context.Context) RestrictionPolicyBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionPolicyBindingOutput)
}

// RestrictionPolicyBindingArrayInput is an input type that accepts RestrictionPolicyBindingArray and RestrictionPolicyBindingArrayOutput values.
// You can construct a concrete instance of `RestrictionPolicyBindingArrayInput` via:
//
//	RestrictionPolicyBindingArray{ RestrictionPolicyBindingArgs{...} }
type RestrictionPolicyBindingArrayInput interface {
	pulumi.Input

	ToRestrictionPolicyBindingArrayOutput() RestrictionPolicyBindingArrayOutput
	ToRestrictionPolicyBindingArrayOutputWithContext(context.Context) RestrictionPolicyBindingArrayOutput
}

type RestrictionPolicyBindingArray []RestrictionPolicyBindingInput

func (RestrictionPolicyBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestrictionPolicyBinding)(nil)).Elem()
}

func (i RestrictionPolicyBindingArray) ToRestrictionPolicyBindingArrayOutput() RestrictionPolicyBindingArrayOutput {
	return i.ToRestrictionPolicyBindingArrayOutputWithContext(context.Background())
}

func (i RestrictionPolicyBindingArray) ToRestrictionPolicyBindingArrayOutputWithContext(ctx context.Context) RestrictionPolicyBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionPolicyBindingArrayOutput)
}

type RestrictionPolicyBindingOutput struct{ *pulumi.OutputState }

func (RestrictionPolicyBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestrictionPolicyBinding)(nil)).Elem()
}

func (o RestrictionPolicyBindingOutput) ToRestrictionPolicyBindingOutput() RestrictionPolicyBindingOutput {
	return o
}

func (o RestrictionPolicyBindingOutput) ToRestrictionPolicyBindingOutputWithContext(ctx context.Context) RestrictionPolicyBindingOutput {
	return o
}

// An array of principals. A principal is a subject or group of subjects. Each principal is formatted as `type:id`. Supported types: `role`, `team`, `user`, and `org`. Org ID can be obtained using a `GET /api/v2/current_user` API request. Find it in the `data.relationships.org.data.id` field.
func (o RestrictionPolicyBindingOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RestrictionPolicyBinding) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

// The role/level of access. See this page for more details https://docs.datadoghq.com/api/latest/restriction-policies/#supported-relations-for-resources
func (o RestrictionPolicyBindingOutput) Relation() pulumi.StringOutput {
	return o.ApplyT(func(v RestrictionPolicyBinding) string { return v.Relation }).(pulumi.StringOutput)
}

type RestrictionPolicyBindingArrayOutput struct{ *pulumi.OutputState }

func (RestrictionPolicyBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestrictionPolicyBinding)(nil)).Elem()
}

func (o RestrictionPolicyBindingArrayOutput) ToRestrictionPolicyBindingArrayOutput() RestrictionPolicyBindingArrayOutput {
	return o
}

func (o RestrictionPolicyBindingArrayOutput) ToRestrictionPolicyBindingArrayOutputWithContext(ctx context.Context) RestrictionPolicyBindingArrayOutput {
	return o
}

func (o RestrictionPolicyBindingArrayOutput) Index(i pulumi.IntInput) RestrictionPolicyBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RestrictionPolicyBinding {
		return vs[0].([]RestrictionPolicyBinding)[vs[1].(int)]
	}).(RestrictionPolicyBindingOutput)
}

type RolePermission struct {
	// ID of the permission to assign.
	Id string `pulumi:"id"`
	// Name of the permission.
	Name *string `pulumi:"name"`
}

// RolePermissionInput is an input type that accepts RolePermissionArgs and RolePermissionOutput values.
// You can construct a concrete instance of `RolePermissionInput` via:
//
//	RolePermissionArgs{...}
type RolePermissionInput interface {
	pulumi.Input

	ToRolePermissionOutput() RolePermissionOutput
	ToRolePermissionOutputWithContext(context.Context) RolePermissionOutput
}

type RolePermissionArgs struct {
	// ID of the permission to assign.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the permission.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RolePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermission)(nil)).Elem()
}

func (i RolePermissionArgs) ToRolePermissionOutput() RolePermissionOutput {
	return i.ToRolePermissionOutputWithContext(context.Background())
}

func (i RolePermissionArgs) ToRolePermissionOutputWithContext(ctx context.Context) RolePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionOutput)
}

// RolePermissionArrayInput is an input type that accepts RolePermissionArray and RolePermissionArrayOutput values.
// You can construct a concrete instance of `RolePermissionArrayInput` via:
//
//	RolePermissionArray{ RolePermissionArgs{...} }
type RolePermissionArrayInput interface {
	pulumi.Input

	ToRolePermissionArrayOutput() RolePermissionArrayOutput
	ToRolePermissionArrayOutputWithContext(context.Context) RolePermissionArrayOutput
}

type RolePermissionArray []RolePermissionInput

func (RolePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermission)(nil)).Elem()
}

func (i RolePermissionArray) ToRolePermissionArrayOutput() RolePermissionArrayOutput {
	return i.ToRolePermissionArrayOutputWithContext(context.Background())
}

func (i RolePermissionArray) ToRolePermissionArrayOutputWithContext(ctx context.Context) RolePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionArrayOutput)
}

type RolePermissionOutput struct{ *pulumi.OutputState }

func (RolePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermission)(nil)).Elem()
}

func (o RolePermissionOutput) ToRolePermissionOutput() RolePermissionOutput {
	return o
}

func (o RolePermissionOutput) ToRolePermissionOutputWithContext(ctx context.Context) RolePermissionOutput {
	return o
}

// ID of the permission to assign.
func (o RolePermissionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RolePermission) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the permission.
func (o RolePermissionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolePermission) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RolePermissionArrayOutput struct{ *pulumi.OutputState }

func (RolePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermission)(nil)).Elem()
}

func (o RolePermissionArrayOutput) ToRolePermissionArrayOutput() RolePermissionArrayOutput {
	return o
}

func (o RolePermissionArrayOutput) ToRolePermissionArrayOutputWithContext(ctx context.Context) RolePermissionArrayOutput {
	return o
}

func (o RolePermissionArrayOutput) Index(i pulumi.IntInput) RolePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolePermission {
		return vs[0].([]RolePermission)[vs[1].(int)]
	}).(RolePermissionOutput)
}

type RumMetricCompute struct {
	// The type of aggregation to use.
	AggregationType string `pulumi:"aggregationType"`
	// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when `aggregationType` is `distribution`.
	IncludePercentiles *bool `pulumi:"includePercentiles"`
	// The path to the value the RUM-based metric will aggregate on. Only present when `aggregationType` is `distribution`.
	Path *string `pulumi:"path"`
}

// RumMetricComputeInput is an input type that accepts RumMetricComputeArgs and RumMetricComputeOutput values.
// You can construct a concrete instance of `RumMetricComputeInput` via:
//
//	RumMetricComputeArgs{...}
type RumMetricComputeInput interface {
	pulumi.Input

	ToRumMetricComputeOutput() RumMetricComputeOutput
	ToRumMetricComputeOutputWithContext(context.Context) RumMetricComputeOutput
}

type RumMetricComputeArgs struct {
	// The type of aggregation to use.
	AggregationType pulumi.StringInput `pulumi:"aggregationType"`
	// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when `aggregationType` is `distribution`.
	IncludePercentiles pulumi.BoolPtrInput `pulumi:"includePercentiles"`
	// The path to the value the RUM-based metric will aggregate on. Only present when `aggregationType` is `distribution`.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (RumMetricComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RumMetricCompute)(nil)).Elem()
}

func (i RumMetricComputeArgs) ToRumMetricComputeOutput() RumMetricComputeOutput {
	return i.ToRumMetricComputeOutputWithContext(context.Background())
}

func (i RumMetricComputeArgs) ToRumMetricComputeOutputWithContext(ctx context.Context) RumMetricComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumMetricComputeOutput)
}

func (i RumMetricComputeArgs) ToRumMetricComputePtrOutput() RumMetricComputePtrOutput {
	return i.ToRumMetricComputePtrOutputWithContext(context.Background())
}

func (i RumMetricComputeArgs) ToRumMetricComputePtrOutputWithContext(ctx context.Context) RumMetricComputePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumMetricComputeOutput).ToRumMetricComputePtrOutputWithContext(ctx)
}

// RumMetricComputePtrInput is an input type that accepts RumMetricComputeArgs, RumMetricComputePtr and RumMetricComputePtrOutput values.
// You can construct a concrete instance of `RumMetricComputePtrInput` via:
//
//	        RumMetricComputeArgs{...}
//
//	or:
//
//	        nil
type RumMetricComputePtrInput interface {
	pulumi.Input

	ToRumMetricComputePtrOutput() RumMetricComputePtrOutput
	ToRumMetricComputePtrOutputWithContext(context.Context) RumMetricComputePtrOutput
}

type rumMetricComputePtrType RumMetricComputeArgs

func RumMetricComputePtr(v *RumMetricComputeArgs) RumMetricComputePtrInput {
	return (*rumMetricComputePtrType)(v)
}

func (*rumMetricComputePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RumMetricCompute)(nil)).Elem()
}

func (i *rumMetricComputePtrType) ToRumMetricComputePtrOutput() RumMetricComputePtrOutput {
	return i.ToRumMetricComputePtrOutputWithContext(context.Background())
}

func (i *rumMetricComputePtrType) ToRumMetricComputePtrOutputWithContext(ctx context.Context) RumMetricComputePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumMetricComputePtrOutput)
}

type RumMetricComputeOutput struct{ *pulumi.OutputState }

func (RumMetricComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RumMetricCompute)(nil)).Elem()
}

func (o RumMetricComputeOutput) ToRumMetricComputeOutput() RumMetricComputeOutput {
	return o
}

func (o RumMetricComputeOutput) ToRumMetricComputeOutputWithContext(ctx context.Context) RumMetricComputeOutput {
	return o
}

func (o RumMetricComputeOutput) ToRumMetricComputePtrOutput() RumMetricComputePtrOutput {
	return o.ToRumMetricComputePtrOutputWithContext(context.Background())
}

func (o RumMetricComputeOutput) ToRumMetricComputePtrOutputWithContext(ctx context.Context) RumMetricComputePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RumMetricCompute) *RumMetricCompute {
		return &v
	}).(RumMetricComputePtrOutput)
}

// The type of aggregation to use.
func (o RumMetricComputeOutput) AggregationType() pulumi.StringOutput {
	return o.ApplyT(func(v RumMetricCompute) string { return v.AggregationType }).(pulumi.StringOutput)
}

// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when `aggregationType` is `distribution`.
func (o RumMetricComputeOutput) IncludePercentiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RumMetricCompute) *bool { return v.IncludePercentiles }).(pulumi.BoolPtrOutput)
}

// The path to the value the RUM-based metric will aggregate on. Only present when `aggregationType` is `distribution`.
func (o RumMetricComputeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RumMetricCompute) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type RumMetricComputePtrOutput struct{ *pulumi.OutputState }

func (RumMetricComputePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RumMetricCompute)(nil)).Elem()
}

func (o RumMetricComputePtrOutput) ToRumMetricComputePtrOutput() RumMetricComputePtrOutput {
	return o
}

func (o RumMetricComputePtrOutput) ToRumMetricComputePtrOutputWithContext(ctx context.Context) RumMetricComputePtrOutput {
	return o
}

func (o RumMetricComputePtrOutput) Elem() RumMetricComputeOutput {
	return o.ApplyT(func(v *RumMetricCompute) RumMetricCompute {
		if v != nil {
			return *v
		}
		var ret RumMetricCompute
		return ret
	}).(RumMetricComputeOutput)
}

// The type of aggregation to use.
func (o RumMetricComputePtrOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RumMetricCompute) *string {
		if v == nil {
			return nil
		}
		return &v.AggregationType
	}).(pulumi.StringPtrOutput)
}

// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when `aggregationType` is `distribution`.
func (o RumMetricComputePtrOutput) IncludePercentiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RumMetricCompute) *bool {
		if v == nil {
			return nil
		}
		return v.IncludePercentiles
	}).(pulumi.BoolPtrOutput)
}

// The path to the value the RUM-based metric will aggregate on. Only present when `aggregationType` is `distribution`.
func (o RumMetricComputePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RumMetricCompute) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type RumMetricFilter struct {
	// The search query. Follows RUM search syntax.
	Query *string `pulumi:"query"`
}

// RumMetricFilterInput is an input type that accepts RumMetricFilterArgs and RumMetricFilterOutput values.
// You can construct a concrete instance of `RumMetricFilterInput` via:
//
//	RumMetricFilterArgs{...}
type RumMetricFilterInput interface {
	pulumi.Input

	ToRumMetricFilterOutput() RumMetricFilterOutput
	ToRumMetricFilterOutputWithContext(context.Context) RumMetricFilterOutput
}

type RumMetricFilterArgs struct {
	// The search query. Follows RUM search syntax.
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (RumMetricFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RumMetricFilter)(nil)).Elem()
}

func (i RumMetricFilterArgs) ToRumMetricFilterOutput() RumMetricFilterOutput {
	return i.ToRumMetricFilterOutputWithContext(context.Background())
}

func (i RumMetricFilterArgs) ToRumMetricFilterOutputWithContext(ctx context.Context) RumMetricFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumMetricFilterOutput)
}

func (i RumMetricFilterArgs) ToRumMetricFilterPtrOutput() RumMetricFilterPtrOutput {
	return i.ToRumMetricFilterPtrOutputWithContext(context.Background())
}

func (i RumMetricFilterArgs) ToRumMetricFilterPtrOutputWithContext(ctx context.Context) RumMetricFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumMetricFilterOutput).ToRumMetricFilterPtrOutputWithContext(ctx)
}

// RumMetricFilterPtrInput is an input type that accepts RumMetricFilterArgs, RumMetricFilterPtr and RumMetricFilterPtrOutput values.
// You can construct a concrete instance of `RumMetricFilterPtrInput` via:
//
//	        RumMetricFilterArgs{...}
//
//	or:
//
//	        nil
type RumMetricFilterPtrInput interface {
	pulumi.Input

	ToRumMetricFilterPtrOutput() RumMetricFilterPtrOutput
	ToRumMetricFilterPtrOutputWithContext(context.Context) RumMetricFilterPtrOutput
}

type rumMetricFilterPtrType RumMetricFilterArgs

func RumMetricFilterPtr(v *RumMetricFilterArgs) RumMetricFilterPtrInput {
	return (*rumMetricFilterPtrType)(v)
}

func (*rumMetricFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RumMetricFilter)(nil)).Elem()
}

func (i *rumMetricFilterPtrType) ToRumMetricFilterPtrOutput() RumMetricFilterPtrOutput {
	return i.ToRumMetricFilterPtrOutputWithContext(context.Background())
}

func (i *rumMetricFilterPtrType) ToRumMetricFilterPtrOutputWithContext(ctx context.Context) RumMetricFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumMetricFilterPtrOutput)
}

type RumMetricFilterOutput struct{ *pulumi.OutputState }

func (RumMetricFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RumMetricFilter)(nil)).Elem()
}

func (o RumMetricFilterOutput) ToRumMetricFilterOutput() RumMetricFilterOutput {
	return o
}

func (o RumMetricFilterOutput) ToRumMetricFilterOutputWithContext(ctx context.Context) RumMetricFilterOutput {
	return o
}

func (o RumMetricFilterOutput) ToRumMetricFilterPtrOutput() RumMetricFilterPtrOutput {
	return o.ToRumMetricFilterPtrOutputWithContext(context.Background())
}

func (o RumMetricFilterOutput) ToRumMetricFilterPtrOutputWithContext(ctx context.Context) RumMetricFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RumMetricFilter) *RumMetricFilter {
		return &v
	}).(RumMetricFilterPtrOutput)
}

// The search query. Follows RUM search syntax.
func (o RumMetricFilterOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RumMetricFilter) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type RumMetricFilterPtrOutput struct{ *pulumi.OutputState }

func (RumMetricFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RumMetricFilter)(nil)).Elem()
}

func (o RumMetricFilterPtrOutput) ToRumMetricFilterPtrOutput() RumMetricFilterPtrOutput {
	return o
}

func (o RumMetricFilterPtrOutput) ToRumMetricFilterPtrOutputWithContext(ctx context.Context) RumMetricFilterPtrOutput {
	return o
}

func (o RumMetricFilterPtrOutput) Elem() RumMetricFilterOutput {
	return o.ApplyT(func(v *RumMetricFilter) RumMetricFilter {
		if v != nil {
			return *v
		}
		var ret RumMetricFilter
		return ret
	}).(RumMetricFilterOutput)
}

// The search query. Follows RUM search syntax.
func (o RumMetricFilterPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RumMetricFilter) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

type RumMetricGroupBy struct {
	// The path to the value the RUM-based metric will be aggregated over.
	Path *string `pulumi:"path"`
	// Name of the tag that gets created. By default, `path` is used as the tag name.
	TagName *string `pulumi:"tagName"`
}

// RumMetricGroupByInput is an input type that accepts RumMetricGroupByArgs and RumMetricGroupByOutput values.
// You can construct a concrete instance of `RumMetricGroupByInput` via:
//
//	RumMetricGroupByArgs{...}
type RumMetricGroupByInput interface {
	pulumi.Input

	ToRumMetricGroupByOutput() RumMetricGroupByOutput
	ToRumMetricGroupByOutputWithContext(context.Context) RumMetricGroupByOutput
}

type RumMetricGroupByArgs struct {
	// The path to the value the RUM-based metric will be aggregated over.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name of the tag that gets created. By default, `path` is used as the tag name.
	TagName pulumi.StringPtrInput `pulumi:"tagName"`
}

func (RumMetricGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RumMetricGroupBy)(nil)).Elem()
}

func (i RumMetricGroupByArgs) ToRumMetricGroupByOutput() RumMetricGroupByOutput {
	return i.ToRumMetricGroupByOutputWithContext(context.Background())
}

func (i RumMetricGroupByArgs) ToRumMetricGroupByOutputWithContext(ctx context.Context) RumMetricGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumMetricGroupByOutput)
}

// RumMetricGroupByArrayInput is an input type that accepts RumMetricGroupByArray and RumMetricGroupByArrayOutput values.
// You can construct a concrete instance of `RumMetricGroupByArrayInput` via:
//
//	RumMetricGroupByArray{ RumMetricGroupByArgs{...} }
type RumMetricGroupByArrayInput interface {
	pulumi.Input

	ToRumMetricGroupByArrayOutput() RumMetricGroupByArrayOutput
	ToRumMetricGroupByArrayOutputWithContext(context.Context) RumMetricGroupByArrayOutput
}

type RumMetricGroupByArray []RumMetricGroupByInput

func (RumMetricGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RumMetricGroupBy)(nil)).Elem()
}

func (i RumMetricGroupByArray) ToRumMetricGroupByArrayOutput() RumMetricGroupByArrayOutput {
	return i.ToRumMetricGroupByArrayOutputWithContext(context.Background())
}

func (i RumMetricGroupByArray) ToRumMetricGroupByArrayOutputWithContext(ctx context.Context) RumMetricGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumMetricGroupByArrayOutput)
}

type RumMetricGroupByOutput struct{ *pulumi.OutputState }

func (RumMetricGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RumMetricGroupBy)(nil)).Elem()
}

func (o RumMetricGroupByOutput) ToRumMetricGroupByOutput() RumMetricGroupByOutput {
	return o
}

func (o RumMetricGroupByOutput) ToRumMetricGroupByOutputWithContext(ctx context.Context) RumMetricGroupByOutput {
	return o
}

// The path to the value the RUM-based metric will be aggregated over.
func (o RumMetricGroupByOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RumMetricGroupBy) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name of the tag that gets created. By default, `path` is used as the tag name.
func (o RumMetricGroupByOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RumMetricGroupBy) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type RumMetricGroupByArrayOutput struct{ *pulumi.OutputState }

func (RumMetricGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RumMetricGroupBy)(nil)).Elem()
}

func (o RumMetricGroupByArrayOutput) ToRumMetricGroupByArrayOutput() RumMetricGroupByArrayOutput {
	return o
}

func (o RumMetricGroupByArrayOutput) ToRumMetricGroupByArrayOutputWithContext(ctx context.Context) RumMetricGroupByArrayOutput {
	return o
}

func (o RumMetricGroupByArrayOutput) Index(i pulumi.IntInput) RumMetricGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RumMetricGroupBy {
		return vs[0].([]RumMetricGroupBy)[vs[1].(int)]
	}).(RumMetricGroupByOutput)
}

type RumMetricUniqueness struct {
	// When to count updatable events. `match` when the event is first seen, or `end` when the event is complete.
	When *string `pulumi:"when"`
}

// RumMetricUniquenessInput is an input type that accepts RumMetricUniquenessArgs and RumMetricUniquenessOutput values.
// You can construct a concrete instance of `RumMetricUniquenessInput` via:
//
//	RumMetricUniquenessArgs{...}
type RumMetricUniquenessInput interface {
	pulumi.Input

	ToRumMetricUniquenessOutput() RumMetricUniquenessOutput
	ToRumMetricUniquenessOutputWithContext(context.Context) RumMetricUniquenessOutput
}

type RumMetricUniquenessArgs struct {
	// When to count updatable events. `match` when the event is first seen, or `end` when the event is complete.
	When pulumi.StringPtrInput `pulumi:"when"`
}

func (RumMetricUniquenessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RumMetricUniqueness)(nil)).Elem()
}

func (i RumMetricUniquenessArgs) ToRumMetricUniquenessOutput() RumMetricUniquenessOutput {
	return i.ToRumMetricUniquenessOutputWithContext(context.Background())
}

func (i RumMetricUniquenessArgs) ToRumMetricUniquenessOutputWithContext(ctx context.Context) RumMetricUniquenessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumMetricUniquenessOutput)
}

func (i RumMetricUniquenessArgs) ToRumMetricUniquenessPtrOutput() RumMetricUniquenessPtrOutput {
	return i.ToRumMetricUniquenessPtrOutputWithContext(context.Background())
}

func (i RumMetricUniquenessArgs) ToRumMetricUniquenessPtrOutputWithContext(ctx context.Context) RumMetricUniquenessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumMetricUniquenessOutput).ToRumMetricUniquenessPtrOutputWithContext(ctx)
}

// RumMetricUniquenessPtrInput is an input type that accepts RumMetricUniquenessArgs, RumMetricUniquenessPtr and RumMetricUniquenessPtrOutput values.
// You can construct a concrete instance of `RumMetricUniquenessPtrInput` via:
//
//	        RumMetricUniquenessArgs{...}
//
//	or:
//
//	        nil
type RumMetricUniquenessPtrInput interface {
	pulumi.Input

	ToRumMetricUniquenessPtrOutput() RumMetricUniquenessPtrOutput
	ToRumMetricUniquenessPtrOutputWithContext(context.Context) RumMetricUniquenessPtrOutput
}

type rumMetricUniquenessPtrType RumMetricUniquenessArgs

func RumMetricUniquenessPtr(v *RumMetricUniquenessArgs) RumMetricUniquenessPtrInput {
	return (*rumMetricUniquenessPtrType)(v)
}

func (*rumMetricUniquenessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RumMetricUniqueness)(nil)).Elem()
}

func (i *rumMetricUniquenessPtrType) ToRumMetricUniquenessPtrOutput() RumMetricUniquenessPtrOutput {
	return i.ToRumMetricUniquenessPtrOutputWithContext(context.Background())
}

func (i *rumMetricUniquenessPtrType) ToRumMetricUniquenessPtrOutputWithContext(ctx context.Context) RumMetricUniquenessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumMetricUniquenessPtrOutput)
}

type RumMetricUniquenessOutput struct{ *pulumi.OutputState }

func (RumMetricUniquenessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RumMetricUniqueness)(nil)).Elem()
}

func (o RumMetricUniquenessOutput) ToRumMetricUniquenessOutput() RumMetricUniquenessOutput {
	return o
}

func (o RumMetricUniquenessOutput) ToRumMetricUniquenessOutputWithContext(ctx context.Context) RumMetricUniquenessOutput {
	return o
}

func (o RumMetricUniquenessOutput) ToRumMetricUniquenessPtrOutput() RumMetricUniquenessPtrOutput {
	return o.ToRumMetricUniquenessPtrOutputWithContext(context.Background())
}

func (o RumMetricUniquenessOutput) ToRumMetricUniquenessPtrOutputWithContext(ctx context.Context) RumMetricUniquenessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RumMetricUniqueness) *RumMetricUniqueness {
		return &v
	}).(RumMetricUniquenessPtrOutput)
}

// When to count updatable events. `match` when the event is first seen, or `end` when the event is complete.
func (o RumMetricUniquenessOutput) When() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RumMetricUniqueness) *string { return v.When }).(pulumi.StringPtrOutput)
}

type RumMetricUniquenessPtrOutput struct{ *pulumi.OutputState }

func (RumMetricUniquenessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RumMetricUniqueness)(nil)).Elem()
}

func (o RumMetricUniquenessPtrOutput) ToRumMetricUniquenessPtrOutput() RumMetricUniquenessPtrOutput {
	return o
}

func (o RumMetricUniquenessPtrOutput) ToRumMetricUniquenessPtrOutputWithContext(ctx context.Context) RumMetricUniquenessPtrOutput {
	return o
}

func (o RumMetricUniquenessPtrOutput) Elem() RumMetricUniquenessOutput {
	return o.ApplyT(func(v *RumMetricUniqueness) RumMetricUniqueness {
		if v != nil {
			return *v
		}
		var ret RumMetricUniqueness
		return ret
	}).(RumMetricUniquenessOutput)
}

// When to count updatable events. `match` when the event is first seen, or `end` when the event is complete.
func (o RumMetricUniquenessPtrOutput) When() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RumMetricUniqueness) *string {
		if v == nil {
			return nil
		}
		return v.When
	}).(pulumi.StringPtrOutput)
}

type SecurityMonitoringDefaultRuleCase struct {
	// Notification targets for each rule case.
	Notifications []string `pulumi:"notifications"`
	// Status of the rule case to match. Valid values are `info`, `low`, `medium`, `high`, `critical`.
	Status string `pulumi:"status"`
}

// SecurityMonitoringDefaultRuleCaseInput is an input type that accepts SecurityMonitoringDefaultRuleCaseArgs and SecurityMonitoringDefaultRuleCaseOutput values.
// You can construct a concrete instance of `SecurityMonitoringDefaultRuleCaseInput` via:
//
//	SecurityMonitoringDefaultRuleCaseArgs{...}
type SecurityMonitoringDefaultRuleCaseInput interface {
	pulumi.Input

	ToSecurityMonitoringDefaultRuleCaseOutput() SecurityMonitoringDefaultRuleCaseOutput
	ToSecurityMonitoringDefaultRuleCaseOutputWithContext(context.Context) SecurityMonitoringDefaultRuleCaseOutput
}

type SecurityMonitoringDefaultRuleCaseArgs struct {
	// Notification targets for each rule case.
	Notifications pulumi.StringArrayInput `pulumi:"notifications"`
	// Status of the rule case to match. Valid values are `info`, `low`, `medium`, `high`, `critical`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (SecurityMonitoringDefaultRuleCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringDefaultRuleCase)(nil)).Elem()
}

func (i SecurityMonitoringDefaultRuleCaseArgs) ToSecurityMonitoringDefaultRuleCaseOutput() SecurityMonitoringDefaultRuleCaseOutput {
	return i.ToSecurityMonitoringDefaultRuleCaseOutputWithContext(context.Background())
}

func (i SecurityMonitoringDefaultRuleCaseArgs) ToSecurityMonitoringDefaultRuleCaseOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringDefaultRuleCaseOutput)
}

// SecurityMonitoringDefaultRuleCaseArrayInput is an input type that accepts SecurityMonitoringDefaultRuleCaseArray and SecurityMonitoringDefaultRuleCaseArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringDefaultRuleCaseArrayInput` via:
//
//	SecurityMonitoringDefaultRuleCaseArray{ SecurityMonitoringDefaultRuleCaseArgs{...} }
type SecurityMonitoringDefaultRuleCaseArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringDefaultRuleCaseArrayOutput() SecurityMonitoringDefaultRuleCaseArrayOutput
	ToSecurityMonitoringDefaultRuleCaseArrayOutputWithContext(context.Context) SecurityMonitoringDefaultRuleCaseArrayOutput
}

type SecurityMonitoringDefaultRuleCaseArray []SecurityMonitoringDefaultRuleCaseInput

func (SecurityMonitoringDefaultRuleCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringDefaultRuleCase)(nil)).Elem()
}

func (i SecurityMonitoringDefaultRuleCaseArray) ToSecurityMonitoringDefaultRuleCaseArrayOutput() SecurityMonitoringDefaultRuleCaseArrayOutput {
	return i.ToSecurityMonitoringDefaultRuleCaseArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringDefaultRuleCaseArray) ToSecurityMonitoringDefaultRuleCaseArrayOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringDefaultRuleCaseArrayOutput)
}

type SecurityMonitoringDefaultRuleCaseOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringDefaultRuleCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringDefaultRuleCase)(nil)).Elem()
}

func (o SecurityMonitoringDefaultRuleCaseOutput) ToSecurityMonitoringDefaultRuleCaseOutput() SecurityMonitoringDefaultRuleCaseOutput {
	return o
}

func (o SecurityMonitoringDefaultRuleCaseOutput) ToSecurityMonitoringDefaultRuleCaseOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleCaseOutput {
	return o
}

// Notification targets for each rule case.
func (o SecurityMonitoringDefaultRuleCaseOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringDefaultRuleCase) []string { return v.Notifications }).(pulumi.StringArrayOutput)
}

// Status of the rule case to match. Valid values are `info`, `low`, `medium`, `high`, `critical`.
func (o SecurityMonitoringDefaultRuleCaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringDefaultRuleCase) string { return v.Status }).(pulumi.StringOutput)
}

type SecurityMonitoringDefaultRuleCaseArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringDefaultRuleCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringDefaultRuleCase)(nil)).Elem()
}

func (o SecurityMonitoringDefaultRuleCaseArrayOutput) ToSecurityMonitoringDefaultRuleCaseArrayOutput() SecurityMonitoringDefaultRuleCaseArrayOutput {
	return o
}

func (o SecurityMonitoringDefaultRuleCaseArrayOutput) ToSecurityMonitoringDefaultRuleCaseArrayOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleCaseArrayOutput {
	return o
}

func (o SecurityMonitoringDefaultRuleCaseArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringDefaultRuleCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringDefaultRuleCase {
		return vs[0].([]SecurityMonitoringDefaultRuleCase)[vs[1].(int)]
	}).(SecurityMonitoringDefaultRuleCaseOutput)
}

type SecurityMonitoringDefaultRuleFilter struct {
	// The type of filtering action. Allowed enum values: require, suppress Valid values are `require`, `suppress`.
	Action string `pulumi:"action"`
	// Query for selecting logs to apply the filtering action.
	Query string `pulumi:"query"`
}

// SecurityMonitoringDefaultRuleFilterInput is an input type that accepts SecurityMonitoringDefaultRuleFilterArgs and SecurityMonitoringDefaultRuleFilterOutput values.
// You can construct a concrete instance of `SecurityMonitoringDefaultRuleFilterInput` via:
//
//	SecurityMonitoringDefaultRuleFilterArgs{...}
type SecurityMonitoringDefaultRuleFilterInput interface {
	pulumi.Input

	ToSecurityMonitoringDefaultRuleFilterOutput() SecurityMonitoringDefaultRuleFilterOutput
	ToSecurityMonitoringDefaultRuleFilterOutputWithContext(context.Context) SecurityMonitoringDefaultRuleFilterOutput
}

type SecurityMonitoringDefaultRuleFilterArgs struct {
	// The type of filtering action. Allowed enum values: require, suppress Valid values are `require`, `suppress`.
	Action pulumi.StringInput `pulumi:"action"`
	// Query for selecting logs to apply the filtering action.
	Query pulumi.StringInput `pulumi:"query"`
}

func (SecurityMonitoringDefaultRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringDefaultRuleFilter)(nil)).Elem()
}

func (i SecurityMonitoringDefaultRuleFilterArgs) ToSecurityMonitoringDefaultRuleFilterOutput() SecurityMonitoringDefaultRuleFilterOutput {
	return i.ToSecurityMonitoringDefaultRuleFilterOutputWithContext(context.Background())
}

func (i SecurityMonitoringDefaultRuleFilterArgs) ToSecurityMonitoringDefaultRuleFilterOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringDefaultRuleFilterOutput)
}

// SecurityMonitoringDefaultRuleFilterArrayInput is an input type that accepts SecurityMonitoringDefaultRuleFilterArray and SecurityMonitoringDefaultRuleFilterArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringDefaultRuleFilterArrayInput` via:
//
//	SecurityMonitoringDefaultRuleFilterArray{ SecurityMonitoringDefaultRuleFilterArgs{...} }
type SecurityMonitoringDefaultRuleFilterArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringDefaultRuleFilterArrayOutput() SecurityMonitoringDefaultRuleFilterArrayOutput
	ToSecurityMonitoringDefaultRuleFilterArrayOutputWithContext(context.Context) SecurityMonitoringDefaultRuleFilterArrayOutput
}

type SecurityMonitoringDefaultRuleFilterArray []SecurityMonitoringDefaultRuleFilterInput

func (SecurityMonitoringDefaultRuleFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringDefaultRuleFilter)(nil)).Elem()
}

func (i SecurityMonitoringDefaultRuleFilterArray) ToSecurityMonitoringDefaultRuleFilterArrayOutput() SecurityMonitoringDefaultRuleFilterArrayOutput {
	return i.ToSecurityMonitoringDefaultRuleFilterArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringDefaultRuleFilterArray) ToSecurityMonitoringDefaultRuleFilterArrayOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringDefaultRuleFilterArrayOutput)
}

type SecurityMonitoringDefaultRuleFilterOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringDefaultRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringDefaultRuleFilter)(nil)).Elem()
}

func (o SecurityMonitoringDefaultRuleFilterOutput) ToSecurityMonitoringDefaultRuleFilterOutput() SecurityMonitoringDefaultRuleFilterOutput {
	return o
}

func (o SecurityMonitoringDefaultRuleFilterOutput) ToSecurityMonitoringDefaultRuleFilterOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleFilterOutput {
	return o
}

// The type of filtering action. Allowed enum values: require, suppress Valid values are `require`, `suppress`.
func (o SecurityMonitoringDefaultRuleFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringDefaultRuleFilter) string { return v.Action }).(pulumi.StringOutput)
}

// Query for selecting logs to apply the filtering action.
func (o SecurityMonitoringDefaultRuleFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringDefaultRuleFilter) string { return v.Query }).(pulumi.StringOutput)
}

type SecurityMonitoringDefaultRuleFilterArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringDefaultRuleFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringDefaultRuleFilter)(nil)).Elem()
}

func (o SecurityMonitoringDefaultRuleFilterArrayOutput) ToSecurityMonitoringDefaultRuleFilterArrayOutput() SecurityMonitoringDefaultRuleFilterArrayOutput {
	return o
}

func (o SecurityMonitoringDefaultRuleFilterArrayOutput) ToSecurityMonitoringDefaultRuleFilterArrayOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleFilterArrayOutput {
	return o
}

func (o SecurityMonitoringDefaultRuleFilterArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringDefaultRuleFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringDefaultRuleFilter {
		return vs[0].([]SecurityMonitoringDefaultRuleFilter)[vs[1].(int)]
	}).(SecurityMonitoringDefaultRuleFilterOutput)
}

type SecurityMonitoringDefaultRuleOptions struct {
	// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`. Defaults to `false`.
	DecreaseCriticalityBasedOnEnv *bool `pulumi:"decreaseCriticalityBasedOnEnv"`
}

// SecurityMonitoringDefaultRuleOptionsInput is an input type that accepts SecurityMonitoringDefaultRuleOptionsArgs and SecurityMonitoringDefaultRuleOptionsOutput values.
// You can construct a concrete instance of `SecurityMonitoringDefaultRuleOptionsInput` via:
//
//	SecurityMonitoringDefaultRuleOptionsArgs{...}
type SecurityMonitoringDefaultRuleOptionsInput interface {
	pulumi.Input

	ToSecurityMonitoringDefaultRuleOptionsOutput() SecurityMonitoringDefaultRuleOptionsOutput
	ToSecurityMonitoringDefaultRuleOptionsOutputWithContext(context.Context) SecurityMonitoringDefaultRuleOptionsOutput
}

type SecurityMonitoringDefaultRuleOptionsArgs struct {
	// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`. Defaults to `false`.
	DecreaseCriticalityBasedOnEnv pulumi.BoolPtrInput `pulumi:"decreaseCriticalityBasedOnEnv"`
}

func (SecurityMonitoringDefaultRuleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringDefaultRuleOptions)(nil)).Elem()
}

func (i SecurityMonitoringDefaultRuleOptionsArgs) ToSecurityMonitoringDefaultRuleOptionsOutput() SecurityMonitoringDefaultRuleOptionsOutput {
	return i.ToSecurityMonitoringDefaultRuleOptionsOutputWithContext(context.Background())
}

func (i SecurityMonitoringDefaultRuleOptionsArgs) ToSecurityMonitoringDefaultRuleOptionsOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringDefaultRuleOptionsOutput)
}

func (i SecurityMonitoringDefaultRuleOptionsArgs) ToSecurityMonitoringDefaultRuleOptionsPtrOutput() SecurityMonitoringDefaultRuleOptionsPtrOutput {
	return i.ToSecurityMonitoringDefaultRuleOptionsPtrOutputWithContext(context.Background())
}

func (i SecurityMonitoringDefaultRuleOptionsArgs) ToSecurityMonitoringDefaultRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringDefaultRuleOptionsOutput).ToSecurityMonitoringDefaultRuleOptionsPtrOutputWithContext(ctx)
}

// SecurityMonitoringDefaultRuleOptionsPtrInput is an input type that accepts SecurityMonitoringDefaultRuleOptionsArgs, SecurityMonitoringDefaultRuleOptionsPtr and SecurityMonitoringDefaultRuleOptionsPtrOutput values.
// You can construct a concrete instance of `SecurityMonitoringDefaultRuleOptionsPtrInput` via:
//
//	        SecurityMonitoringDefaultRuleOptionsArgs{...}
//
//	or:
//
//	        nil
type SecurityMonitoringDefaultRuleOptionsPtrInput interface {
	pulumi.Input

	ToSecurityMonitoringDefaultRuleOptionsPtrOutput() SecurityMonitoringDefaultRuleOptionsPtrOutput
	ToSecurityMonitoringDefaultRuleOptionsPtrOutputWithContext(context.Context) SecurityMonitoringDefaultRuleOptionsPtrOutput
}

type securityMonitoringDefaultRuleOptionsPtrType SecurityMonitoringDefaultRuleOptionsArgs

func SecurityMonitoringDefaultRuleOptionsPtr(v *SecurityMonitoringDefaultRuleOptionsArgs) SecurityMonitoringDefaultRuleOptionsPtrInput {
	return (*securityMonitoringDefaultRuleOptionsPtrType)(v)
}

func (*securityMonitoringDefaultRuleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringDefaultRuleOptions)(nil)).Elem()
}

func (i *securityMonitoringDefaultRuleOptionsPtrType) ToSecurityMonitoringDefaultRuleOptionsPtrOutput() SecurityMonitoringDefaultRuleOptionsPtrOutput {
	return i.ToSecurityMonitoringDefaultRuleOptionsPtrOutputWithContext(context.Background())
}

func (i *securityMonitoringDefaultRuleOptionsPtrType) ToSecurityMonitoringDefaultRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringDefaultRuleOptionsPtrOutput)
}

type SecurityMonitoringDefaultRuleOptionsOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringDefaultRuleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringDefaultRuleOptions)(nil)).Elem()
}

func (o SecurityMonitoringDefaultRuleOptionsOutput) ToSecurityMonitoringDefaultRuleOptionsOutput() SecurityMonitoringDefaultRuleOptionsOutput {
	return o
}

func (o SecurityMonitoringDefaultRuleOptionsOutput) ToSecurityMonitoringDefaultRuleOptionsOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleOptionsOutput {
	return o
}

func (o SecurityMonitoringDefaultRuleOptionsOutput) ToSecurityMonitoringDefaultRuleOptionsPtrOutput() SecurityMonitoringDefaultRuleOptionsPtrOutput {
	return o.ToSecurityMonitoringDefaultRuleOptionsPtrOutputWithContext(context.Background())
}

func (o SecurityMonitoringDefaultRuleOptionsOutput) ToSecurityMonitoringDefaultRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityMonitoringDefaultRuleOptions) *SecurityMonitoringDefaultRuleOptions {
		return &v
	}).(SecurityMonitoringDefaultRuleOptionsPtrOutput)
}

// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`. Defaults to `false`.
func (o SecurityMonitoringDefaultRuleOptionsOutput) DecreaseCriticalityBasedOnEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringDefaultRuleOptions) *bool { return v.DecreaseCriticalityBasedOnEnv }).(pulumi.BoolPtrOutput)
}

type SecurityMonitoringDefaultRuleOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringDefaultRuleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringDefaultRuleOptions)(nil)).Elem()
}

func (o SecurityMonitoringDefaultRuleOptionsPtrOutput) ToSecurityMonitoringDefaultRuleOptionsPtrOutput() SecurityMonitoringDefaultRuleOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringDefaultRuleOptionsPtrOutput) ToSecurityMonitoringDefaultRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringDefaultRuleOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringDefaultRuleOptionsPtrOutput) Elem() SecurityMonitoringDefaultRuleOptionsOutput {
	return o.ApplyT(func(v *SecurityMonitoringDefaultRuleOptions) SecurityMonitoringDefaultRuleOptions {
		if v != nil {
			return *v
		}
		var ret SecurityMonitoringDefaultRuleOptions
		return ret
	}).(SecurityMonitoringDefaultRuleOptionsOutput)
}

// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`. Defaults to `false`.
func (o SecurityMonitoringDefaultRuleOptionsPtrOutput) DecreaseCriticalityBasedOnEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringDefaultRuleOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DecreaseCriticalityBasedOnEnv
	}).(pulumi.BoolPtrOutput)
}

type SecurityMonitoringFilterExclusionFilter struct {
	// Exclusion filter name.
	Name string `pulumi:"name"`
	// Exclusion filter query. Logs that match this query are excluded from the security filter.
	Query string `pulumi:"query"`
}

// SecurityMonitoringFilterExclusionFilterInput is an input type that accepts SecurityMonitoringFilterExclusionFilterArgs and SecurityMonitoringFilterExclusionFilterOutput values.
// You can construct a concrete instance of `SecurityMonitoringFilterExclusionFilterInput` via:
//
//	SecurityMonitoringFilterExclusionFilterArgs{...}
type SecurityMonitoringFilterExclusionFilterInput interface {
	pulumi.Input

	ToSecurityMonitoringFilterExclusionFilterOutput() SecurityMonitoringFilterExclusionFilterOutput
	ToSecurityMonitoringFilterExclusionFilterOutputWithContext(context.Context) SecurityMonitoringFilterExclusionFilterOutput
}

type SecurityMonitoringFilterExclusionFilterArgs struct {
	// Exclusion filter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Exclusion filter query. Logs that match this query are excluded from the security filter.
	Query pulumi.StringInput `pulumi:"query"`
}

func (SecurityMonitoringFilterExclusionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringFilterExclusionFilter)(nil)).Elem()
}

func (i SecurityMonitoringFilterExclusionFilterArgs) ToSecurityMonitoringFilterExclusionFilterOutput() SecurityMonitoringFilterExclusionFilterOutput {
	return i.ToSecurityMonitoringFilterExclusionFilterOutputWithContext(context.Background())
}

func (i SecurityMonitoringFilterExclusionFilterArgs) ToSecurityMonitoringFilterExclusionFilterOutputWithContext(ctx context.Context) SecurityMonitoringFilterExclusionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringFilterExclusionFilterOutput)
}

// SecurityMonitoringFilterExclusionFilterArrayInput is an input type that accepts SecurityMonitoringFilterExclusionFilterArray and SecurityMonitoringFilterExclusionFilterArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringFilterExclusionFilterArrayInput` via:
//
//	SecurityMonitoringFilterExclusionFilterArray{ SecurityMonitoringFilterExclusionFilterArgs{...} }
type SecurityMonitoringFilterExclusionFilterArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringFilterExclusionFilterArrayOutput() SecurityMonitoringFilterExclusionFilterArrayOutput
	ToSecurityMonitoringFilterExclusionFilterArrayOutputWithContext(context.Context) SecurityMonitoringFilterExclusionFilterArrayOutput
}

type SecurityMonitoringFilterExclusionFilterArray []SecurityMonitoringFilterExclusionFilterInput

func (SecurityMonitoringFilterExclusionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringFilterExclusionFilter)(nil)).Elem()
}

func (i SecurityMonitoringFilterExclusionFilterArray) ToSecurityMonitoringFilterExclusionFilterArrayOutput() SecurityMonitoringFilterExclusionFilterArrayOutput {
	return i.ToSecurityMonitoringFilterExclusionFilterArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringFilterExclusionFilterArray) ToSecurityMonitoringFilterExclusionFilterArrayOutputWithContext(ctx context.Context) SecurityMonitoringFilterExclusionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringFilterExclusionFilterArrayOutput)
}

type SecurityMonitoringFilterExclusionFilterOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringFilterExclusionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringFilterExclusionFilter)(nil)).Elem()
}

func (o SecurityMonitoringFilterExclusionFilterOutput) ToSecurityMonitoringFilterExclusionFilterOutput() SecurityMonitoringFilterExclusionFilterOutput {
	return o
}

func (o SecurityMonitoringFilterExclusionFilterOutput) ToSecurityMonitoringFilterExclusionFilterOutputWithContext(ctx context.Context) SecurityMonitoringFilterExclusionFilterOutput {
	return o
}

// Exclusion filter name.
func (o SecurityMonitoringFilterExclusionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringFilterExclusionFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Exclusion filter query. Logs that match this query are excluded from the security filter.
func (o SecurityMonitoringFilterExclusionFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringFilterExclusionFilter) string { return v.Query }).(pulumi.StringOutput)
}

type SecurityMonitoringFilterExclusionFilterArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringFilterExclusionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringFilterExclusionFilter)(nil)).Elem()
}

func (o SecurityMonitoringFilterExclusionFilterArrayOutput) ToSecurityMonitoringFilterExclusionFilterArrayOutput() SecurityMonitoringFilterExclusionFilterArrayOutput {
	return o
}

func (o SecurityMonitoringFilterExclusionFilterArrayOutput) ToSecurityMonitoringFilterExclusionFilterArrayOutputWithContext(ctx context.Context) SecurityMonitoringFilterExclusionFilterArrayOutput {
	return o
}

func (o SecurityMonitoringFilterExclusionFilterArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringFilterExclusionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringFilterExclusionFilter {
		return vs[0].([]SecurityMonitoringFilterExclusionFilter)[vs[1].(int)]
	}).(SecurityMonitoringFilterExclusionFilterOutput)
}

type SecurityMonitoringRuleCase struct {
	// Action to perform when the case trigger
	Actions []SecurityMonitoringRuleCaseAction `pulumi:"actions"`
	// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
	Condition *string `pulumi:"condition"`
	// Name of the case.
	Name *string `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications []string `pulumi:"notifications"`
	// Severity of the Security Signal. Valid values are `info`, `low`, `medium`, `high`, `critical`.
	Status string `pulumi:"status"`
}

// SecurityMonitoringRuleCaseInput is an input type that accepts SecurityMonitoringRuleCaseArgs and SecurityMonitoringRuleCaseOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleCaseInput` via:
//
//	SecurityMonitoringRuleCaseArgs{...}
type SecurityMonitoringRuleCaseInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleCaseOutput() SecurityMonitoringRuleCaseOutput
	ToSecurityMonitoringRuleCaseOutputWithContext(context.Context) SecurityMonitoringRuleCaseOutput
}

type SecurityMonitoringRuleCaseArgs struct {
	// Action to perform when the case trigger
	Actions SecurityMonitoringRuleCaseActionArrayInput `pulumi:"actions"`
	// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// Name of the case.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications pulumi.StringArrayInput `pulumi:"notifications"`
	// Severity of the Security Signal. Valid values are `info`, `low`, `medium`, `high`, `critical`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (SecurityMonitoringRuleCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleCase)(nil)).Elem()
}

func (i SecurityMonitoringRuleCaseArgs) ToSecurityMonitoringRuleCaseOutput() SecurityMonitoringRuleCaseOutput {
	return i.ToSecurityMonitoringRuleCaseOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleCaseArgs) ToSecurityMonitoringRuleCaseOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleCaseOutput)
}

// SecurityMonitoringRuleCaseArrayInput is an input type that accepts SecurityMonitoringRuleCaseArray and SecurityMonitoringRuleCaseArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleCaseArrayInput` via:
//
//	SecurityMonitoringRuleCaseArray{ SecurityMonitoringRuleCaseArgs{...} }
type SecurityMonitoringRuleCaseArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleCaseArrayOutput() SecurityMonitoringRuleCaseArrayOutput
	ToSecurityMonitoringRuleCaseArrayOutputWithContext(context.Context) SecurityMonitoringRuleCaseArrayOutput
}

type SecurityMonitoringRuleCaseArray []SecurityMonitoringRuleCaseInput

func (SecurityMonitoringRuleCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleCase)(nil)).Elem()
}

func (i SecurityMonitoringRuleCaseArray) ToSecurityMonitoringRuleCaseArrayOutput() SecurityMonitoringRuleCaseArrayOutput {
	return i.ToSecurityMonitoringRuleCaseArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleCaseArray) ToSecurityMonitoringRuleCaseArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleCaseArrayOutput)
}

type SecurityMonitoringRuleCaseOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleCase)(nil)).Elem()
}

func (o SecurityMonitoringRuleCaseOutput) ToSecurityMonitoringRuleCaseOutput() SecurityMonitoringRuleCaseOutput {
	return o
}

func (o SecurityMonitoringRuleCaseOutput) ToSecurityMonitoringRuleCaseOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseOutput {
	return o
}

// Action to perform when the case trigger
func (o SecurityMonitoringRuleCaseOutput) Actions() SecurityMonitoringRuleCaseActionArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleCase) []SecurityMonitoringRuleCaseAction { return v.Actions }).(SecurityMonitoringRuleCaseActionArrayOutput)
}

// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
func (o SecurityMonitoringRuleCaseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleCase) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Name of the case.
func (o SecurityMonitoringRuleCaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleCase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notification targets for each rule case.
func (o SecurityMonitoringRuleCaseOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleCase) []string { return v.Notifications }).(pulumi.StringArrayOutput)
}

// Severity of the Security Signal. Valid values are `info`, `low`, `medium`, `high`, `critical`.
func (o SecurityMonitoringRuleCaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleCase) string { return v.Status }).(pulumi.StringOutput)
}

type SecurityMonitoringRuleCaseArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleCase)(nil)).Elem()
}

func (o SecurityMonitoringRuleCaseArrayOutput) ToSecurityMonitoringRuleCaseArrayOutput() SecurityMonitoringRuleCaseArrayOutput {
	return o
}

func (o SecurityMonitoringRuleCaseArrayOutput) ToSecurityMonitoringRuleCaseArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseArrayOutput {
	return o
}

func (o SecurityMonitoringRuleCaseArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringRuleCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringRuleCase {
		return vs[0].([]SecurityMonitoringRuleCase)[vs[1].(int)]
	}).(SecurityMonitoringRuleCaseOutput)
}

type SecurityMonitoringRuleCaseAction struct {
	// Options for the action.
	Options *SecurityMonitoringRuleCaseActionOptions `pulumi:"options"`
	// Type of action to perform when the case triggers. Valid values are `blockIp`, `blockUser`.
	Type string `pulumi:"type"`
}

// SecurityMonitoringRuleCaseActionInput is an input type that accepts SecurityMonitoringRuleCaseActionArgs and SecurityMonitoringRuleCaseActionOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleCaseActionInput` via:
//
//	SecurityMonitoringRuleCaseActionArgs{...}
type SecurityMonitoringRuleCaseActionInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleCaseActionOutput() SecurityMonitoringRuleCaseActionOutput
	ToSecurityMonitoringRuleCaseActionOutputWithContext(context.Context) SecurityMonitoringRuleCaseActionOutput
}

type SecurityMonitoringRuleCaseActionArgs struct {
	// Options for the action.
	Options SecurityMonitoringRuleCaseActionOptionsPtrInput `pulumi:"options"`
	// Type of action to perform when the case triggers. Valid values are `blockIp`, `blockUser`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SecurityMonitoringRuleCaseActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleCaseAction)(nil)).Elem()
}

func (i SecurityMonitoringRuleCaseActionArgs) ToSecurityMonitoringRuleCaseActionOutput() SecurityMonitoringRuleCaseActionOutput {
	return i.ToSecurityMonitoringRuleCaseActionOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleCaseActionArgs) ToSecurityMonitoringRuleCaseActionOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleCaseActionOutput)
}

// SecurityMonitoringRuleCaseActionArrayInput is an input type that accepts SecurityMonitoringRuleCaseActionArray and SecurityMonitoringRuleCaseActionArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleCaseActionArrayInput` via:
//
//	SecurityMonitoringRuleCaseActionArray{ SecurityMonitoringRuleCaseActionArgs{...} }
type SecurityMonitoringRuleCaseActionArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleCaseActionArrayOutput() SecurityMonitoringRuleCaseActionArrayOutput
	ToSecurityMonitoringRuleCaseActionArrayOutputWithContext(context.Context) SecurityMonitoringRuleCaseActionArrayOutput
}

type SecurityMonitoringRuleCaseActionArray []SecurityMonitoringRuleCaseActionInput

func (SecurityMonitoringRuleCaseActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleCaseAction)(nil)).Elem()
}

func (i SecurityMonitoringRuleCaseActionArray) ToSecurityMonitoringRuleCaseActionArrayOutput() SecurityMonitoringRuleCaseActionArrayOutput {
	return i.ToSecurityMonitoringRuleCaseActionArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleCaseActionArray) ToSecurityMonitoringRuleCaseActionArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleCaseActionArrayOutput)
}

type SecurityMonitoringRuleCaseActionOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleCaseActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleCaseAction)(nil)).Elem()
}

func (o SecurityMonitoringRuleCaseActionOutput) ToSecurityMonitoringRuleCaseActionOutput() SecurityMonitoringRuleCaseActionOutput {
	return o
}

func (o SecurityMonitoringRuleCaseActionOutput) ToSecurityMonitoringRuleCaseActionOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseActionOutput {
	return o
}

// Options for the action.
func (o SecurityMonitoringRuleCaseActionOutput) Options() SecurityMonitoringRuleCaseActionOptionsPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleCaseAction) *SecurityMonitoringRuleCaseActionOptions { return v.Options }).(SecurityMonitoringRuleCaseActionOptionsPtrOutput)
}

// Type of action to perform when the case triggers. Valid values are `blockIp`, `blockUser`.
func (o SecurityMonitoringRuleCaseActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleCaseAction) string { return v.Type }).(pulumi.StringOutput)
}

type SecurityMonitoringRuleCaseActionArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleCaseActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleCaseAction)(nil)).Elem()
}

func (o SecurityMonitoringRuleCaseActionArrayOutput) ToSecurityMonitoringRuleCaseActionArrayOutput() SecurityMonitoringRuleCaseActionArrayOutput {
	return o
}

func (o SecurityMonitoringRuleCaseActionArrayOutput) ToSecurityMonitoringRuleCaseActionArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseActionArrayOutput {
	return o
}

func (o SecurityMonitoringRuleCaseActionArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringRuleCaseActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringRuleCaseAction {
		return vs[0].([]SecurityMonitoringRuleCaseAction)[vs[1].(int)]
	}).(SecurityMonitoringRuleCaseActionOutput)
}

type SecurityMonitoringRuleCaseActionOptions struct {
	// Duration of the action in seconds.
	Duration *int `pulumi:"duration"`
}

// SecurityMonitoringRuleCaseActionOptionsInput is an input type that accepts SecurityMonitoringRuleCaseActionOptionsArgs and SecurityMonitoringRuleCaseActionOptionsOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleCaseActionOptionsInput` via:
//
//	SecurityMonitoringRuleCaseActionOptionsArgs{...}
type SecurityMonitoringRuleCaseActionOptionsInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleCaseActionOptionsOutput() SecurityMonitoringRuleCaseActionOptionsOutput
	ToSecurityMonitoringRuleCaseActionOptionsOutputWithContext(context.Context) SecurityMonitoringRuleCaseActionOptionsOutput
}

type SecurityMonitoringRuleCaseActionOptionsArgs struct {
	// Duration of the action in seconds.
	Duration pulumi.IntPtrInput `pulumi:"duration"`
}

func (SecurityMonitoringRuleCaseActionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleCaseActionOptions)(nil)).Elem()
}

func (i SecurityMonitoringRuleCaseActionOptionsArgs) ToSecurityMonitoringRuleCaseActionOptionsOutput() SecurityMonitoringRuleCaseActionOptionsOutput {
	return i.ToSecurityMonitoringRuleCaseActionOptionsOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleCaseActionOptionsArgs) ToSecurityMonitoringRuleCaseActionOptionsOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseActionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleCaseActionOptionsOutput)
}

func (i SecurityMonitoringRuleCaseActionOptionsArgs) ToSecurityMonitoringRuleCaseActionOptionsPtrOutput() SecurityMonitoringRuleCaseActionOptionsPtrOutput {
	return i.ToSecurityMonitoringRuleCaseActionOptionsPtrOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleCaseActionOptionsArgs) ToSecurityMonitoringRuleCaseActionOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseActionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleCaseActionOptionsOutput).ToSecurityMonitoringRuleCaseActionOptionsPtrOutputWithContext(ctx)
}

// SecurityMonitoringRuleCaseActionOptionsPtrInput is an input type that accepts SecurityMonitoringRuleCaseActionOptionsArgs, SecurityMonitoringRuleCaseActionOptionsPtr and SecurityMonitoringRuleCaseActionOptionsPtrOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleCaseActionOptionsPtrInput` via:
//
//	        SecurityMonitoringRuleCaseActionOptionsArgs{...}
//
//	or:
//
//	        nil
type SecurityMonitoringRuleCaseActionOptionsPtrInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleCaseActionOptionsPtrOutput() SecurityMonitoringRuleCaseActionOptionsPtrOutput
	ToSecurityMonitoringRuleCaseActionOptionsPtrOutputWithContext(context.Context) SecurityMonitoringRuleCaseActionOptionsPtrOutput
}

type securityMonitoringRuleCaseActionOptionsPtrType SecurityMonitoringRuleCaseActionOptionsArgs

func SecurityMonitoringRuleCaseActionOptionsPtr(v *SecurityMonitoringRuleCaseActionOptionsArgs) SecurityMonitoringRuleCaseActionOptionsPtrInput {
	return (*securityMonitoringRuleCaseActionOptionsPtrType)(v)
}

func (*securityMonitoringRuleCaseActionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleCaseActionOptions)(nil)).Elem()
}

func (i *securityMonitoringRuleCaseActionOptionsPtrType) ToSecurityMonitoringRuleCaseActionOptionsPtrOutput() SecurityMonitoringRuleCaseActionOptionsPtrOutput {
	return i.ToSecurityMonitoringRuleCaseActionOptionsPtrOutputWithContext(context.Background())
}

func (i *securityMonitoringRuleCaseActionOptionsPtrType) ToSecurityMonitoringRuleCaseActionOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseActionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleCaseActionOptionsPtrOutput)
}

type SecurityMonitoringRuleCaseActionOptionsOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleCaseActionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleCaseActionOptions)(nil)).Elem()
}

func (o SecurityMonitoringRuleCaseActionOptionsOutput) ToSecurityMonitoringRuleCaseActionOptionsOutput() SecurityMonitoringRuleCaseActionOptionsOutput {
	return o
}

func (o SecurityMonitoringRuleCaseActionOptionsOutput) ToSecurityMonitoringRuleCaseActionOptionsOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseActionOptionsOutput {
	return o
}

func (o SecurityMonitoringRuleCaseActionOptionsOutput) ToSecurityMonitoringRuleCaseActionOptionsPtrOutput() SecurityMonitoringRuleCaseActionOptionsPtrOutput {
	return o.ToSecurityMonitoringRuleCaseActionOptionsPtrOutputWithContext(context.Background())
}

func (o SecurityMonitoringRuleCaseActionOptionsOutput) ToSecurityMonitoringRuleCaseActionOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseActionOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityMonitoringRuleCaseActionOptions) *SecurityMonitoringRuleCaseActionOptions {
		return &v
	}).(SecurityMonitoringRuleCaseActionOptionsPtrOutput)
}

// Duration of the action in seconds.
func (o SecurityMonitoringRuleCaseActionOptionsOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleCaseActionOptions) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

type SecurityMonitoringRuleCaseActionOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleCaseActionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleCaseActionOptions)(nil)).Elem()
}

func (o SecurityMonitoringRuleCaseActionOptionsPtrOutput) ToSecurityMonitoringRuleCaseActionOptionsPtrOutput() SecurityMonitoringRuleCaseActionOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringRuleCaseActionOptionsPtrOutput) ToSecurityMonitoringRuleCaseActionOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleCaseActionOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringRuleCaseActionOptionsPtrOutput) Elem() SecurityMonitoringRuleCaseActionOptionsOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleCaseActionOptions) SecurityMonitoringRuleCaseActionOptions {
		if v != nil {
			return *v
		}
		var ret SecurityMonitoringRuleCaseActionOptions
		return ret
	}).(SecurityMonitoringRuleCaseActionOptionsOutput)
}

// Duration of the action in seconds.
func (o SecurityMonitoringRuleCaseActionOptionsPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleCaseActionOptions) *int {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.IntPtrOutput)
}

type SecurityMonitoringRuleFilter struct {
	// The type of filtering action. Valid values are `require`, `suppress`.
	Action string `pulumi:"action"`
	// Query for selecting logs to apply the filtering action.
	Query string `pulumi:"query"`
}

// SecurityMonitoringRuleFilterInput is an input type that accepts SecurityMonitoringRuleFilterArgs and SecurityMonitoringRuleFilterOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleFilterInput` via:
//
//	SecurityMonitoringRuleFilterArgs{...}
type SecurityMonitoringRuleFilterInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleFilterOutput() SecurityMonitoringRuleFilterOutput
	ToSecurityMonitoringRuleFilterOutputWithContext(context.Context) SecurityMonitoringRuleFilterOutput
}

type SecurityMonitoringRuleFilterArgs struct {
	// The type of filtering action. Valid values are `require`, `suppress`.
	Action pulumi.StringInput `pulumi:"action"`
	// Query for selecting logs to apply the filtering action.
	Query pulumi.StringInput `pulumi:"query"`
}

func (SecurityMonitoringRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleFilter)(nil)).Elem()
}

func (i SecurityMonitoringRuleFilterArgs) ToSecurityMonitoringRuleFilterOutput() SecurityMonitoringRuleFilterOutput {
	return i.ToSecurityMonitoringRuleFilterOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleFilterArgs) ToSecurityMonitoringRuleFilterOutputWithContext(ctx context.Context) SecurityMonitoringRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleFilterOutput)
}

// SecurityMonitoringRuleFilterArrayInput is an input type that accepts SecurityMonitoringRuleFilterArray and SecurityMonitoringRuleFilterArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleFilterArrayInput` via:
//
//	SecurityMonitoringRuleFilterArray{ SecurityMonitoringRuleFilterArgs{...} }
type SecurityMonitoringRuleFilterArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleFilterArrayOutput() SecurityMonitoringRuleFilterArrayOutput
	ToSecurityMonitoringRuleFilterArrayOutputWithContext(context.Context) SecurityMonitoringRuleFilterArrayOutput
}

type SecurityMonitoringRuleFilterArray []SecurityMonitoringRuleFilterInput

func (SecurityMonitoringRuleFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleFilter)(nil)).Elem()
}

func (i SecurityMonitoringRuleFilterArray) ToSecurityMonitoringRuleFilterArrayOutput() SecurityMonitoringRuleFilterArrayOutput {
	return i.ToSecurityMonitoringRuleFilterArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleFilterArray) ToSecurityMonitoringRuleFilterArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleFilterArrayOutput)
}

type SecurityMonitoringRuleFilterOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleFilter)(nil)).Elem()
}

func (o SecurityMonitoringRuleFilterOutput) ToSecurityMonitoringRuleFilterOutput() SecurityMonitoringRuleFilterOutput {
	return o
}

func (o SecurityMonitoringRuleFilterOutput) ToSecurityMonitoringRuleFilterOutputWithContext(ctx context.Context) SecurityMonitoringRuleFilterOutput {
	return o
}

// The type of filtering action. Valid values are `require`, `suppress`.
func (o SecurityMonitoringRuleFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleFilter) string { return v.Action }).(pulumi.StringOutput)
}

// Query for selecting logs to apply the filtering action.
func (o SecurityMonitoringRuleFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleFilter) string { return v.Query }).(pulumi.StringOutput)
}

type SecurityMonitoringRuleFilterArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleFilter)(nil)).Elem()
}

func (o SecurityMonitoringRuleFilterArrayOutput) ToSecurityMonitoringRuleFilterArrayOutput() SecurityMonitoringRuleFilterArrayOutput {
	return o
}

func (o SecurityMonitoringRuleFilterArrayOutput) ToSecurityMonitoringRuleFilterArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleFilterArrayOutput {
	return o
}

func (o SecurityMonitoringRuleFilterArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringRuleFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringRuleFilter {
		return vs[0].([]SecurityMonitoringRuleFilter)[vs[1].(int)]
	}).(SecurityMonitoringRuleFilterOutput)
}

type SecurityMonitoringRuleOptions struct {
	// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`. Defaults to `false`.
	DecreaseCriticalityBasedOnEnv *bool `pulumi:"decreaseCriticalityBasedOnEnv"`
	// The detection method. Valid values are `threshold`, `newValue`, `anomalyDetection`, `impossibleTravel`, `hardcoded`, `thirdParty`, `anomalyThreshold`. Defaults to `"threshold"`.
	DetectionMethod *string `pulumi:"detectionMethod"`
	// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
	EvaluationWindow *int `pulumi:"evaluationWindow"`
	// Options for rules using the impossible travel detection method.
	ImpossibleTravelOptions *SecurityMonitoringRuleOptionsImpossibleTravelOptions `pulumi:"impossibleTravelOptions"`
	// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds). Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
	KeepAlive *int `pulumi:"keepAlive"`
	// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
	MaxSignalDuration *int `pulumi:"maxSignalDuration"`
	// New value rules specific options.
	NewValueOptions *SecurityMonitoringRuleOptionsNewValueOptions `pulumi:"newValueOptions"`
	// Options for rules using the third-party detection method.
	ThirdPartyRuleOptions *SecurityMonitoringRuleOptionsThirdPartyRuleOptions `pulumi:"thirdPartyRuleOptions"`
}

// SecurityMonitoringRuleOptionsInput is an input type that accepts SecurityMonitoringRuleOptionsArgs and SecurityMonitoringRuleOptionsOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleOptionsInput` via:
//
//	SecurityMonitoringRuleOptionsArgs{...}
type SecurityMonitoringRuleOptionsInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleOptionsOutput() SecurityMonitoringRuleOptionsOutput
	ToSecurityMonitoringRuleOptionsOutputWithContext(context.Context) SecurityMonitoringRuleOptionsOutput
}

type SecurityMonitoringRuleOptionsArgs struct {
	// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`. Defaults to `false`.
	DecreaseCriticalityBasedOnEnv pulumi.BoolPtrInput `pulumi:"decreaseCriticalityBasedOnEnv"`
	// The detection method. Valid values are `threshold`, `newValue`, `anomalyDetection`, `impossibleTravel`, `hardcoded`, `thirdParty`, `anomalyThreshold`. Defaults to `"threshold"`.
	DetectionMethod pulumi.StringPtrInput `pulumi:"detectionMethod"`
	// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
	EvaluationWindow pulumi.IntPtrInput `pulumi:"evaluationWindow"`
	// Options for rules using the impossible travel detection method.
	ImpossibleTravelOptions SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrInput `pulumi:"impossibleTravelOptions"`
	// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds). Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
	KeepAlive pulumi.IntPtrInput `pulumi:"keepAlive"`
	// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
	MaxSignalDuration pulumi.IntPtrInput `pulumi:"maxSignalDuration"`
	// New value rules specific options.
	NewValueOptions SecurityMonitoringRuleOptionsNewValueOptionsPtrInput `pulumi:"newValueOptions"`
	// Options for rules using the third-party detection method.
	ThirdPartyRuleOptions SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrInput `pulumi:"thirdPartyRuleOptions"`
}

func (SecurityMonitoringRuleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleOptions)(nil)).Elem()
}

func (i SecurityMonitoringRuleOptionsArgs) ToSecurityMonitoringRuleOptionsOutput() SecurityMonitoringRuleOptionsOutput {
	return i.ToSecurityMonitoringRuleOptionsOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleOptionsArgs) ToSecurityMonitoringRuleOptionsOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsOutput)
}

func (i SecurityMonitoringRuleOptionsArgs) ToSecurityMonitoringRuleOptionsPtrOutput() SecurityMonitoringRuleOptionsPtrOutput {
	return i.ToSecurityMonitoringRuleOptionsPtrOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleOptionsArgs) ToSecurityMonitoringRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsOutput).ToSecurityMonitoringRuleOptionsPtrOutputWithContext(ctx)
}

// SecurityMonitoringRuleOptionsPtrInput is an input type that accepts SecurityMonitoringRuleOptionsArgs, SecurityMonitoringRuleOptionsPtr and SecurityMonitoringRuleOptionsPtrOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleOptionsPtrInput` via:
//
//	        SecurityMonitoringRuleOptionsArgs{...}
//
//	or:
//
//	        nil
type SecurityMonitoringRuleOptionsPtrInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleOptionsPtrOutput() SecurityMonitoringRuleOptionsPtrOutput
	ToSecurityMonitoringRuleOptionsPtrOutputWithContext(context.Context) SecurityMonitoringRuleOptionsPtrOutput
}

type securityMonitoringRuleOptionsPtrType SecurityMonitoringRuleOptionsArgs

func SecurityMonitoringRuleOptionsPtr(v *SecurityMonitoringRuleOptionsArgs) SecurityMonitoringRuleOptionsPtrInput {
	return (*securityMonitoringRuleOptionsPtrType)(v)
}

func (*securityMonitoringRuleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleOptions)(nil)).Elem()
}

func (i *securityMonitoringRuleOptionsPtrType) ToSecurityMonitoringRuleOptionsPtrOutput() SecurityMonitoringRuleOptionsPtrOutput {
	return i.ToSecurityMonitoringRuleOptionsPtrOutputWithContext(context.Background())
}

func (i *securityMonitoringRuleOptionsPtrType) ToSecurityMonitoringRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsPtrOutput)
}

type SecurityMonitoringRuleOptionsOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleOptions)(nil)).Elem()
}

func (o SecurityMonitoringRuleOptionsOutput) ToSecurityMonitoringRuleOptionsOutput() SecurityMonitoringRuleOptionsOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsOutput) ToSecurityMonitoringRuleOptionsOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsOutput) ToSecurityMonitoringRuleOptionsPtrOutput() SecurityMonitoringRuleOptionsPtrOutput {
	return o.ToSecurityMonitoringRuleOptionsPtrOutputWithContext(context.Background())
}

func (o SecurityMonitoringRuleOptionsOutput) ToSecurityMonitoringRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityMonitoringRuleOptions) *SecurityMonitoringRuleOptions {
		return &v
	}).(SecurityMonitoringRuleOptionsPtrOutput)
}

// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`. Defaults to `false`.
func (o SecurityMonitoringRuleOptionsOutput) DecreaseCriticalityBasedOnEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptions) *bool { return v.DecreaseCriticalityBasedOnEnv }).(pulumi.BoolPtrOutput)
}

// The detection method. Valid values are `threshold`, `newValue`, `anomalyDetection`, `impossibleTravel`, `hardcoded`, `thirdParty`, `anomalyThreshold`. Defaults to `"threshold"`.
func (o SecurityMonitoringRuleOptionsOutput) DetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptions) *string { return v.DetectionMethod }).(pulumi.StringPtrOutput)
}

// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
func (o SecurityMonitoringRuleOptionsOutput) EvaluationWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptions) *int { return v.EvaluationWindow }).(pulumi.IntPtrOutput)
}

// Options for rules using the impossible travel detection method.
func (o SecurityMonitoringRuleOptionsOutput) ImpossibleTravelOptions() SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptions) *SecurityMonitoringRuleOptionsImpossibleTravelOptions {
		return v.ImpossibleTravelOptions
	}).(SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds). Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
func (o SecurityMonitoringRuleOptionsOutput) KeepAlive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptions) *int { return v.KeepAlive }).(pulumi.IntPtrOutput)
}

// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
func (o SecurityMonitoringRuleOptionsOutput) MaxSignalDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptions) *int { return v.MaxSignalDuration }).(pulumi.IntPtrOutput)
}

// New value rules specific options.
func (o SecurityMonitoringRuleOptionsOutput) NewValueOptions() SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptions) *SecurityMonitoringRuleOptionsNewValueOptions {
		return v.NewValueOptions
	}).(SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput)
}

// Options for rules using the third-party detection method.
func (o SecurityMonitoringRuleOptionsOutput) ThirdPartyRuleOptions() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptions) *SecurityMonitoringRuleOptionsThirdPartyRuleOptions {
		return v.ThirdPartyRuleOptions
	}).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type SecurityMonitoringRuleOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleOptions)(nil)).Elem()
}

func (o SecurityMonitoringRuleOptionsPtrOutput) ToSecurityMonitoringRuleOptionsPtrOutput() SecurityMonitoringRuleOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsPtrOutput) ToSecurityMonitoringRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsPtrOutput) Elem() SecurityMonitoringRuleOptionsOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptions) SecurityMonitoringRuleOptions {
		if v != nil {
			return *v
		}
		var ret SecurityMonitoringRuleOptions
		return ret
	}).(SecurityMonitoringRuleOptionsOutput)
}

// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`. Defaults to `false`.
func (o SecurityMonitoringRuleOptionsPtrOutput) DecreaseCriticalityBasedOnEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DecreaseCriticalityBasedOnEnv
	}).(pulumi.BoolPtrOutput)
}

// The detection method. Valid values are `threshold`, `newValue`, `anomalyDetection`, `impossibleTravel`, `hardcoded`, `thirdParty`, `anomalyThreshold`. Defaults to `"threshold"`.
func (o SecurityMonitoringRuleOptionsPtrOutput) DetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptions) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMethod
	}).(pulumi.StringPtrOutput)
}

// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
func (o SecurityMonitoringRuleOptionsPtrOutput) EvaluationWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationWindow
	}).(pulumi.IntPtrOutput)
}

// Options for rules using the impossible travel detection method.
func (o SecurityMonitoringRuleOptionsPtrOutput) ImpossibleTravelOptions() SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptions) *SecurityMonitoringRuleOptionsImpossibleTravelOptions {
		if v == nil {
			return nil
		}
		return v.ImpossibleTravelOptions
	}).(SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds). Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
func (o SecurityMonitoringRuleOptionsPtrOutput) KeepAlive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.KeepAlive
	}).(pulumi.IntPtrOutput)
}

// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp. Valid values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`, `43200`, `86400`.
func (o SecurityMonitoringRuleOptionsPtrOutput) MaxSignalDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.MaxSignalDuration
	}).(pulumi.IntPtrOutput)
}

// New value rules specific options.
func (o SecurityMonitoringRuleOptionsPtrOutput) NewValueOptions() SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptions) *SecurityMonitoringRuleOptionsNewValueOptions {
		if v == nil {
			return nil
		}
		return v.NewValueOptions
	}).(SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput)
}

// Options for rules using the third-party detection method.
func (o SecurityMonitoringRuleOptionsPtrOutput) ThirdPartyRuleOptions() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptions) *SecurityMonitoringRuleOptionsThirdPartyRuleOptions {
		if v == nil {
			return nil
		}
		return v.ThirdPartyRuleOptions
	}).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type SecurityMonitoringRuleOptionsImpossibleTravelOptions struct {
	// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access. Defaults to `false`.
	BaselineUserLocations *bool `pulumi:"baselineUserLocations"`
}

// SecurityMonitoringRuleOptionsImpossibleTravelOptionsInput is an input type that accepts SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs and SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleOptionsImpossibleTravelOptionsInput` via:
//
//	SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs{...}
type SecurityMonitoringRuleOptionsImpossibleTravelOptionsInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput() SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput
	ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsOutputWithContext(context.Context) SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput
}

type SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs struct {
	// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access. Defaults to `false`.
	BaselineUserLocations pulumi.BoolPtrInput `pulumi:"baselineUserLocations"`
}

func (SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (i SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput() SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput {
	return i.ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput)
}

func (i SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput() SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput {
	return i.ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput).ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx)
}

// SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrInput is an input type that accepts SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs, SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtr and SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrInput` via:
//
//	        SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs{...}
//
//	or:
//
//	        nil
type SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput() SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput
	ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Context) SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput
}

type securityMonitoringRuleOptionsImpossibleTravelOptionsPtrType SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs

func SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtr(v *SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs) SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrInput {
	return (*securityMonitoringRuleOptionsImpossibleTravelOptionsPtrType)(v)
}

func (*securityMonitoringRuleOptionsImpossibleTravelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (i *securityMonitoringRuleOptionsImpossibleTravelOptionsPtrType) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput() SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput {
	return i.ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (i *securityMonitoringRuleOptionsImpossibleTravelOptionsPtrType) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput)
}

type SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (o SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput() SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput() SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (o SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityMonitoringRuleOptionsImpossibleTravelOptions) *SecurityMonitoringRuleOptionsImpossibleTravelOptions {
		return &v
	}).(SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access. Defaults to `false`.
func (o SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput) BaselineUserLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptionsImpossibleTravelOptions) *bool { return v.BaselineUserLocations }).(pulumi.BoolPtrOutput)
}

type SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (o SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput() SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput) ToSecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput) Elem() SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsImpossibleTravelOptions) SecurityMonitoringRuleOptionsImpossibleTravelOptions {
		if v != nil {
			return *v
		}
		var ret SecurityMonitoringRuleOptionsImpossibleTravelOptions
		return ret
	}).(SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput)
}

// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access. Defaults to `false`.
func (o SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput) BaselineUserLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsImpossibleTravelOptions) *bool {
		if v == nil {
			return nil
		}
		return v.BaselineUserLocations
	}).(pulumi.BoolPtrOutput)
}

type SecurityMonitoringRuleOptionsNewValueOptions struct {
	// The duration in days after which a learned value is forgotten. Valid values are `1`, `2`, `7`, `14`, `21`, `28`.
	ForgetAfter int `pulumi:"forgetAfter"`
	// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned. Valid values are `0`, `1`, `7`. Defaults to `1`.
	LearningDuration *int `pulumi:"learningDuration"`
	// The learning method used to determine when signals should be generated for values that weren't learned. Valid values are `duration`, `threshold`. Defaults to `"duration"`.
	LearningMethod *string `pulumi:"learningMethod"`
	// A number of occurrences after which signals are generated for values that weren't learned. Valid values are `0`, `1`. Defaults to `0`.
	LearningThreshold *int `pulumi:"learningThreshold"`
}

// SecurityMonitoringRuleOptionsNewValueOptionsInput is an input type that accepts SecurityMonitoringRuleOptionsNewValueOptionsArgs and SecurityMonitoringRuleOptionsNewValueOptionsOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleOptionsNewValueOptionsInput` via:
//
//	SecurityMonitoringRuleOptionsNewValueOptionsArgs{...}
type SecurityMonitoringRuleOptionsNewValueOptionsInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleOptionsNewValueOptionsOutput() SecurityMonitoringRuleOptionsNewValueOptionsOutput
	ToSecurityMonitoringRuleOptionsNewValueOptionsOutputWithContext(context.Context) SecurityMonitoringRuleOptionsNewValueOptionsOutput
}

type SecurityMonitoringRuleOptionsNewValueOptionsArgs struct {
	// The duration in days after which a learned value is forgotten. Valid values are `1`, `2`, `7`, `14`, `21`, `28`.
	ForgetAfter pulumi.IntInput `pulumi:"forgetAfter"`
	// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned. Valid values are `0`, `1`, `7`. Defaults to `1`.
	LearningDuration pulumi.IntPtrInput `pulumi:"learningDuration"`
	// The learning method used to determine when signals should be generated for values that weren't learned. Valid values are `duration`, `threshold`. Defaults to `"duration"`.
	LearningMethod pulumi.StringPtrInput `pulumi:"learningMethod"`
	// A number of occurrences after which signals are generated for values that weren't learned. Valid values are `0`, `1`. Defaults to `0`.
	LearningThreshold pulumi.IntPtrInput `pulumi:"learningThreshold"`
}

func (SecurityMonitoringRuleOptionsNewValueOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleOptionsNewValueOptions)(nil)).Elem()
}

func (i SecurityMonitoringRuleOptionsNewValueOptionsArgs) ToSecurityMonitoringRuleOptionsNewValueOptionsOutput() SecurityMonitoringRuleOptionsNewValueOptionsOutput {
	return i.ToSecurityMonitoringRuleOptionsNewValueOptionsOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleOptionsNewValueOptionsArgs) ToSecurityMonitoringRuleOptionsNewValueOptionsOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsNewValueOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsNewValueOptionsOutput)
}

func (i SecurityMonitoringRuleOptionsNewValueOptionsArgs) ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutput() SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput {
	return i.ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleOptionsNewValueOptionsArgs) ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsNewValueOptionsOutput).ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutputWithContext(ctx)
}

// SecurityMonitoringRuleOptionsNewValueOptionsPtrInput is an input type that accepts SecurityMonitoringRuleOptionsNewValueOptionsArgs, SecurityMonitoringRuleOptionsNewValueOptionsPtr and SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleOptionsNewValueOptionsPtrInput` via:
//
//	        SecurityMonitoringRuleOptionsNewValueOptionsArgs{...}
//
//	or:
//
//	        nil
type SecurityMonitoringRuleOptionsNewValueOptionsPtrInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutput() SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput
	ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutputWithContext(context.Context) SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput
}

type securityMonitoringRuleOptionsNewValueOptionsPtrType SecurityMonitoringRuleOptionsNewValueOptionsArgs

func SecurityMonitoringRuleOptionsNewValueOptionsPtr(v *SecurityMonitoringRuleOptionsNewValueOptionsArgs) SecurityMonitoringRuleOptionsNewValueOptionsPtrInput {
	return (*securityMonitoringRuleOptionsNewValueOptionsPtrType)(v)
}

func (*securityMonitoringRuleOptionsNewValueOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleOptionsNewValueOptions)(nil)).Elem()
}

func (i *securityMonitoringRuleOptionsNewValueOptionsPtrType) ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutput() SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput {
	return i.ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (i *securityMonitoringRuleOptionsNewValueOptionsPtrType) ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput)
}

type SecurityMonitoringRuleOptionsNewValueOptionsOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleOptionsNewValueOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleOptionsNewValueOptions)(nil)).Elem()
}

func (o SecurityMonitoringRuleOptionsNewValueOptionsOutput) ToSecurityMonitoringRuleOptionsNewValueOptionsOutput() SecurityMonitoringRuleOptionsNewValueOptionsOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsNewValueOptionsOutput) ToSecurityMonitoringRuleOptionsNewValueOptionsOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsNewValueOptionsOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsNewValueOptionsOutput) ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutput() SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput {
	return o.ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (o SecurityMonitoringRuleOptionsNewValueOptionsOutput) ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityMonitoringRuleOptionsNewValueOptions) *SecurityMonitoringRuleOptionsNewValueOptions {
		return &v
	}).(SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput)
}

// The duration in days after which a learned value is forgotten. Valid values are `1`, `2`, `7`, `14`, `21`, `28`.
func (o SecurityMonitoringRuleOptionsNewValueOptionsOutput) ForgetAfter() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptionsNewValueOptions) int { return v.ForgetAfter }).(pulumi.IntOutput)
}

// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned. Valid values are `0`, `1`, `7`. Defaults to `1`.
func (o SecurityMonitoringRuleOptionsNewValueOptionsOutput) LearningDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptionsNewValueOptions) *int { return v.LearningDuration }).(pulumi.IntPtrOutput)
}

// The learning method used to determine when signals should be generated for values that weren't learned. Valid values are `duration`, `threshold`. Defaults to `"duration"`.
func (o SecurityMonitoringRuleOptionsNewValueOptionsOutput) LearningMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptionsNewValueOptions) *string { return v.LearningMethod }).(pulumi.StringPtrOutput)
}

// A number of occurrences after which signals are generated for values that weren't learned. Valid values are `0`, `1`. Defaults to `0`.
func (o SecurityMonitoringRuleOptionsNewValueOptionsOutput) LearningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptionsNewValueOptions) *int { return v.LearningThreshold }).(pulumi.IntPtrOutput)
}

type SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleOptionsNewValueOptions)(nil)).Elem()
}

func (o SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput) ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutput() SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput) ToSecurityMonitoringRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput) Elem() SecurityMonitoringRuleOptionsNewValueOptionsOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsNewValueOptions) SecurityMonitoringRuleOptionsNewValueOptions {
		if v != nil {
			return *v
		}
		var ret SecurityMonitoringRuleOptionsNewValueOptions
		return ret
	}).(SecurityMonitoringRuleOptionsNewValueOptionsOutput)
}

// The duration in days after which a learned value is forgotten. Valid values are `1`, `2`, `7`, `14`, `21`, `28`.
func (o SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput) ForgetAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return &v.ForgetAfter
	}).(pulumi.IntPtrOutput)
}

// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned. Valid values are `0`, `1`, `7`. Defaults to `1`.
func (o SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput) LearningDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return v.LearningDuration
	}).(pulumi.IntPtrOutput)
}

// The learning method used to determine when signals should be generated for values that weren't learned. Valid values are `duration`, `threshold`. Defaults to `"duration"`.
func (o SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput) LearningMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsNewValueOptions) *string {
		if v == nil {
			return nil
		}
		return v.LearningMethod
	}).(pulumi.StringPtrOutput)
}

// A number of occurrences after which signals are generated for values that weren't learned. Valid values are `0`, `1`. Defaults to `0`.
func (o SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput) LearningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return v.LearningThreshold
	}).(pulumi.IntPtrOutput)
}

type SecurityMonitoringRuleOptionsThirdPartyRuleOptions struct {
	// Notification targets for the default rule case, when none of the third-party cases match.
	DefaultNotifications []string `pulumi:"defaultNotifications"`
	// Severity of the default rule case, when none of the third-party cases match. Valid values are `info`, `low`, `medium`, `high`, `critical`.
	DefaultStatus string `pulumi:"defaultStatus"`
	// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
	RootQueries []SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery `pulumi:"rootQueries"`
	// A template for the signal title; if omitted, the title is generated based on the case name.
	SignalTitleTemplate *string `pulumi:"signalTitleTemplate"`
}

// SecurityMonitoringRuleOptionsThirdPartyRuleOptionsInput is an input type that accepts SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs and SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleOptionsThirdPartyRuleOptionsInput` via:
//
//	SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs{...}
type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput
	ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutputWithContext(context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput
}

type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs struct {
	// Notification targets for the default rule case, when none of the third-party cases match.
	DefaultNotifications pulumi.StringArrayInput `pulumi:"defaultNotifications"`
	// Severity of the default rule case, when none of the third-party cases match. Valid values are `info`, `low`, `medium`, `high`, `critical`.
	DefaultStatus pulumi.StringInput `pulumi:"defaultStatus"`
	// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
	RootQueries SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput `pulumi:"rootQueries"`
	// A template for the signal title; if omitted, the title is generated based on the case name.
	SignalTitleTemplate pulumi.StringPtrInput `pulumi:"signalTitleTemplate"`
}

func (SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (i SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput {
	return i.ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput)
}

func (i SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return i.ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput).ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx)
}

// SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrInput is an input type that accepts SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs, SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtr and SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrInput` via:
//
//	        SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs{...}
//
//	or:
//
//	        nil
type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput
	ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput
}

type securityMonitoringRuleOptionsThirdPartyRuleOptionsPtrType SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs

func SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtr(v *SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrInput {
	return (*securityMonitoringRuleOptionsThirdPartyRuleOptionsPtrType)(v)
}

func (*securityMonitoringRuleOptionsThirdPartyRuleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (i *securityMonitoringRuleOptionsThirdPartyRuleOptionsPtrType) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return i.ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (i *securityMonitoringRuleOptionsThirdPartyRuleOptionsPtrType) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityMonitoringRuleOptionsThirdPartyRuleOptions) *SecurityMonitoringRuleOptionsThirdPartyRuleOptions {
		return &v
	}).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

// Notification targets for the default rule case, when none of the third-party cases match.
func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput) DefaultNotifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptionsThirdPartyRuleOptions) []string { return v.DefaultNotifications }).(pulumi.StringArrayOutput)
}

// Severity of the default rule case, when none of the third-party cases match. Valid values are `info`, `low`, `medium`, `high`, `critical`.
func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput) DefaultStatus() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptionsThirdPartyRuleOptions) string { return v.DefaultStatus }).(pulumi.StringOutput)
}

// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput) RootQueries() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptionsThirdPartyRuleOptions) []SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery {
		return v.RootQueries
	}).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

// A template for the signal title; if omitted, the title is generated based on the case name.
func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput) SignalTitleTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptionsThirdPartyRuleOptions) *string { return v.SignalTitleTemplate }).(pulumi.StringPtrOutput)
}

type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityMonitoringRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput) Elem() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsThirdPartyRuleOptions) SecurityMonitoringRuleOptionsThirdPartyRuleOptions {
		if v != nil {
			return *v
		}
		var ret SecurityMonitoringRuleOptionsThirdPartyRuleOptions
		return ret
	}).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput)
}

// Notification targets for the default rule case, when none of the third-party cases match.
func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput) DefaultNotifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsThirdPartyRuleOptions) []string {
		if v == nil {
			return nil
		}
		return v.DefaultNotifications
	}).(pulumi.StringArrayOutput)
}

// Severity of the default rule case, when none of the third-party cases match. Valid values are `info`, `low`, `medium`, `high`, `critical`.
func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput) DefaultStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsThirdPartyRuleOptions) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultStatus
	}).(pulumi.StringPtrOutput)
}

// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput) RootQueries() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsThirdPartyRuleOptions) []SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery {
		if v == nil {
			return nil
		}
		return v.RootQueries
	}).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

// A template for the signal title; if omitted, the title is generated based on the case name.
func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput) SignalTitleTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityMonitoringRuleOptionsThirdPartyRuleOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignalTitleTemplate
	}).(pulumi.StringPtrOutput)
}

type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery struct {
	// Fields to group by. If empty, each log triggers a signal.
	GroupByFields []string `pulumi:"groupByFields"`
	// Query to filter logs.
	Query string `pulumi:"query"`
}

// SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryInput is an input type that accepts SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArgs and SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryInput` via:
//
//	SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArgs{...}
type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput
	ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput
}

type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArgs struct {
	// Fields to group by. If empty, each log triggers a signal.
	GroupByFields pulumi.StringArrayInput `pulumi:"groupByFields"`
	// Query to filter logs.
	Query pulumi.StringInput `pulumi:"query"`
}

func (SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (i SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return i.ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput)
}

// SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput is an input type that accepts SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArray and SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput` via:
//
//	SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArray{ SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArgs{...} }
type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput
	ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput
}

type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArray []SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryInput

func (SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (i SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArray) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return i.ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArray) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return o
}

// Fields to group by. If empty, each log triggers a signal.
func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput) GroupByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery) []string { return v.GroupByFields }).(pulumi.StringArrayOutput)
}

// Query to filter logs.
func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery) string { return v.Query }).(pulumi.StringOutput)
}

type SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ToSecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o
}

func (o SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery {
		return vs[0].([]SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQuery)[vs[1].(int)]
	}).(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput)
}

type SecurityMonitoringRuleQuery struct {
	// **Deprecated**. It won't be applied anymore. **Deprecated.** `agentRule` has been deprecated in favor of new Agent Rule resource.
	//
	// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
	AgentRules []SecurityMonitoringRuleQueryAgentRule `pulumi:"agentRules"`
	// The aggregation type. For Signal Correlation rules, it must be event_count. Valid values are `count`, `cardinality`, `sum`, `max`, `newValue`, `geoData`, `eventCount`, `none`. Defaults to `"count"`.
	Aggregation *string `pulumi:"aggregation"`
	// Field for which the cardinality is measured. Sent as an array.
	DistinctFields []string `pulumi:"distinctFields"`
	// Fields to group by.
	GroupByFields []string `pulumi:"groupByFields"`
	// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations. **Deprecated.** Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
	//
	// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
	Metric *string `pulumi:"metric"`
	// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
	Metrics []string `pulumi:"metrics"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name *string `pulumi:"name"`
	// Query to run on logs.
	Query string `pulumi:"query"`
}

// SecurityMonitoringRuleQueryInput is an input type that accepts SecurityMonitoringRuleQueryArgs and SecurityMonitoringRuleQueryOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleQueryInput` via:
//
//	SecurityMonitoringRuleQueryArgs{...}
type SecurityMonitoringRuleQueryInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleQueryOutput() SecurityMonitoringRuleQueryOutput
	ToSecurityMonitoringRuleQueryOutputWithContext(context.Context) SecurityMonitoringRuleQueryOutput
}

type SecurityMonitoringRuleQueryArgs struct {
	// **Deprecated**. It won't be applied anymore. **Deprecated.** `agentRule` has been deprecated in favor of new Agent Rule resource.
	//
	// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
	AgentRules SecurityMonitoringRuleQueryAgentRuleArrayInput `pulumi:"agentRules"`
	// The aggregation type. For Signal Correlation rules, it must be event_count. Valid values are `count`, `cardinality`, `sum`, `max`, `newValue`, `geoData`, `eventCount`, `none`. Defaults to `"count"`.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Field for which the cardinality is measured. Sent as an array.
	DistinctFields pulumi.StringArrayInput `pulumi:"distinctFields"`
	// Fields to group by.
	GroupByFields pulumi.StringArrayInput `pulumi:"groupByFields"`
	// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations. **Deprecated.** Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
	//
	// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
	Metrics pulumi.StringArrayInput `pulumi:"metrics"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Query to run on logs.
	Query pulumi.StringInput `pulumi:"query"`
}

func (SecurityMonitoringRuleQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleQuery)(nil)).Elem()
}

func (i SecurityMonitoringRuleQueryArgs) ToSecurityMonitoringRuleQueryOutput() SecurityMonitoringRuleQueryOutput {
	return i.ToSecurityMonitoringRuleQueryOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleQueryArgs) ToSecurityMonitoringRuleQueryOutputWithContext(ctx context.Context) SecurityMonitoringRuleQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleQueryOutput)
}

// SecurityMonitoringRuleQueryArrayInput is an input type that accepts SecurityMonitoringRuleQueryArray and SecurityMonitoringRuleQueryArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleQueryArrayInput` via:
//
//	SecurityMonitoringRuleQueryArray{ SecurityMonitoringRuleQueryArgs{...} }
type SecurityMonitoringRuleQueryArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleQueryArrayOutput() SecurityMonitoringRuleQueryArrayOutput
	ToSecurityMonitoringRuleQueryArrayOutputWithContext(context.Context) SecurityMonitoringRuleQueryArrayOutput
}

type SecurityMonitoringRuleQueryArray []SecurityMonitoringRuleQueryInput

func (SecurityMonitoringRuleQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleQuery)(nil)).Elem()
}

func (i SecurityMonitoringRuleQueryArray) ToSecurityMonitoringRuleQueryArrayOutput() SecurityMonitoringRuleQueryArrayOutput {
	return i.ToSecurityMonitoringRuleQueryArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleQueryArray) ToSecurityMonitoringRuleQueryArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleQueryArrayOutput)
}

type SecurityMonitoringRuleQueryOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleQuery)(nil)).Elem()
}

func (o SecurityMonitoringRuleQueryOutput) ToSecurityMonitoringRuleQueryOutput() SecurityMonitoringRuleQueryOutput {
	return o
}

func (o SecurityMonitoringRuleQueryOutput) ToSecurityMonitoringRuleQueryOutputWithContext(ctx context.Context) SecurityMonitoringRuleQueryOutput {
	return o
}

// **Deprecated**. It won't be applied anymore. **Deprecated.** `agentRule` has been deprecated in favor of new Agent Rule resource.
//
// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
func (o SecurityMonitoringRuleQueryOutput) AgentRules() SecurityMonitoringRuleQueryAgentRuleArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleQuery) []SecurityMonitoringRuleQueryAgentRule { return v.AgentRules }).(SecurityMonitoringRuleQueryAgentRuleArrayOutput)
}

// The aggregation type. For Signal Correlation rules, it must be event_count. Valid values are `count`, `cardinality`, `sum`, `max`, `newValue`, `geoData`, `eventCount`, `none`. Defaults to `"count"`.
func (o SecurityMonitoringRuleQueryOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleQuery) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Field for which the cardinality is measured. Sent as an array.
func (o SecurityMonitoringRuleQueryOutput) DistinctFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleQuery) []string { return v.DistinctFields }).(pulumi.StringArrayOutput)
}

// Fields to group by.
func (o SecurityMonitoringRuleQueryOutput) GroupByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleQuery) []string { return v.GroupByFields }).(pulumi.StringArrayOutput)
}

// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations. **Deprecated.** Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
//
// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
func (o SecurityMonitoringRuleQueryOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleQuery) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
func (o SecurityMonitoringRuleQueryOutput) Metrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleQuery) []string { return v.Metrics }).(pulumi.StringArrayOutput)
}

// Name of the query. Not compatible with `newValue` aggregations.
func (o SecurityMonitoringRuleQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Query to run on logs.
func (o SecurityMonitoringRuleQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleQuery) string { return v.Query }).(pulumi.StringOutput)
}

type SecurityMonitoringRuleQueryArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleQuery)(nil)).Elem()
}

func (o SecurityMonitoringRuleQueryArrayOutput) ToSecurityMonitoringRuleQueryArrayOutput() SecurityMonitoringRuleQueryArrayOutput {
	return o
}

func (o SecurityMonitoringRuleQueryArrayOutput) ToSecurityMonitoringRuleQueryArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleQueryArrayOutput {
	return o
}

func (o SecurityMonitoringRuleQueryArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringRuleQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringRuleQuery {
		return vs[0].([]SecurityMonitoringRuleQuery)[vs[1].(int)]
	}).(SecurityMonitoringRuleQueryOutput)
}

type SecurityMonitoringRuleQueryAgentRule struct {
	// **Deprecated**. It won't be applied anymore.
	AgentRuleId string `pulumi:"agentRuleId"`
	// **Deprecated**. It won't be applied anymore.
	Expression string `pulumi:"expression"`
}

// SecurityMonitoringRuleQueryAgentRuleInput is an input type that accepts SecurityMonitoringRuleQueryAgentRuleArgs and SecurityMonitoringRuleQueryAgentRuleOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleQueryAgentRuleInput` via:
//
//	SecurityMonitoringRuleQueryAgentRuleArgs{...}
type SecurityMonitoringRuleQueryAgentRuleInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleQueryAgentRuleOutput() SecurityMonitoringRuleQueryAgentRuleOutput
	ToSecurityMonitoringRuleQueryAgentRuleOutputWithContext(context.Context) SecurityMonitoringRuleQueryAgentRuleOutput
}

type SecurityMonitoringRuleQueryAgentRuleArgs struct {
	// **Deprecated**. It won't be applied anymore.
	AgentRuleId pulumi.StringInput `pulumi:"agentRuleId"`
	// **Deprecated**. It won't be applied anymore.
	Expression pulumi.StringInput `pulumi:"expression"`
}

func (SecurityMonitoringRuleQueryAgentRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleQueryAgentRule)(nil)).Elem()
}

func (i SecurityMonitoringRuleQueryAgentRuleArgs) ToSecurityMonitoringRuleQueryAgentRuleOutput() SecurityMonitoringRuleQueryAgentRuleOutput {
	return i.ToSecurityMonitoringRuleQueryAgentRuleOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleQueryAgentRuleArgs) ToSecurityMonitoringRuleQueryAgentRuleOutputWithContext(ctx context.Context) SecurityMonitoringRuleQueryAgentRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleQueryAgentRuleOutput)
}

// SecurityMonitoringRuleQueryAgentRuleArrayInput is an input type that accepts SecurityMonitoringRuleQueryAgentRuleArray and SecurityMonitoringRuleQueryAgentRuleArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleQueryAgentRuleArrayInput` via:
//
//	SecurityMonitoringRuleQueryAgentRuleArray{ SecurityMonitoringRuleQueryAgentRuleArgs{...} }
type SecurityMonitoringRuleQueryAgentRuleArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleQueryAgentRuleArrayOutput() SecurityMonitoringRuleQueryAgentRuleArrayOutput
	ToSecurityMonitoringRuleQueryAgentRuleArrayOutputWithContext(context.Context) SecurityMonitoringRuleQueryAgentRuleArrayOutput
}

type SecurityMonitoringRuleQueryAgentRuleArray []SecurityMonitoringRuleQueryAgentRuleInput

func (SecurityMonitoringRuleQueryAgentRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleQueryAgentRule)(nil)).Elem()
}

func (i SecurityMonitoringRuleQueryAgentRuleArray) ToSecurityMonitoringRuleQueryAgentRuleArrayOutput() SecurityMonitoringRuleQueryAgentRuleArrayOutput {
	return i.ToSecurityMonitoringRuleQueryAgentRuleArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleQueryAgentRuleArray) ToSecurityMonitoringRuleQueryAgentRuleArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleQueryAgentRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleQueryAgentRuleArrayOutput)
}

type SecurityMonitoringRuleQueryAgentRuleOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleQueryAgentRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleQueryAgentRule)(nil)).Elem()
}

func (o SecurityMonitoringRuleQueryAgentRuleOutput) ToSecurityMonitoringRuleQueryAgentRuleOutput() SecurityMonitoringRuleQueryAgentRuleOutput {
	return o
}

func (o SecurityMonitoringRuleQueryAgentRuleOutput) ToSecurityMonitoringRuleQueryAgentRuleOutputWithContext(ctx context.Context) SecurityMonitoringRuleQueryAgentRuleOutput {
	return o
}

// **Deprecated**. It won't be applied anymore.
func (o SecurityMonitoringRuleQueryAgentRuleOutput) AgentRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleQueryAgentRule) string { return v.AgentRuleId }).(pulumi.StringOutput)
}

// **Deprecated**. It won't be applied anymore.
func (o SecurityMonitoringRuleQueryAgentRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleQueryAgentRule) string { return v.Expression }).(pulumi.StringOutput)
}

type SecurityMonitoringRuleQueryAgentRuleArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleQueryAgentRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleQueryAgentRule)(nil)).Elem()
}

func (o SecurityMonitoringRuleQueryAgentRuleArrayOutput) ToSecurityMonitoringRuleQueryAgentRuleArrayOutput() SecurityMonitoringRuleQueryAgentRuleArrayOutput {
	return o
}

func (o SecurityMonitoringRuleQueryAgentRuleArrayOutput) ToSecurityMonitoringRuleQueryAgentRuleArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleQueryAgentRuleArrayOutput {
	return o
}

func (o SecurityMonitoringRuleQueryAgentRuleArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringRuleQueryAgentRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringRuleQueryAgentRule {
		return vs[0].([]SecurityMonitoringRuleQueryAgentRule)[vs[1].(int)]
	}).(SecurityMonitoringRuleQueryAgentRuleOutput)
}

type SecurityMonitoringRuleReferenceTable struct {
	// Whether to include or exclude logs that match the reference table.
	CheckPresence bool `pulumi:"checkPresence"`
	// The name of the column in the reference table.
	ColumnName string `pulumi:"columnName"`
	// The field in the log that should be matched against the reference table.
	LogFieldPath string `pulumi:"logFieldPath"`
	// The name of the query to filter.
	RuleQueryName string `pulumi:"ruleQueryName"`
	// The name of the reference table.
	TableName string `pulumi:"tableName"`
}

// SecurityMonitoringRuleReferenceTableInput is an input type that accepts SecurityMonitoringRuleReferenceTableArgs and SecurityMonitoringRuleReferenceTableOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleReferenceTableInput` via:
//
//	SecurityMonitoringRuleReferenceTableArgs{...}
type SecurityMonitoringRuleReferenceTableInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleReferenceTableOutput() SecurityMonitoringRuleReferenceTableOutput
	ToSecurityMonitoringRuleReferenceTableOutputWithContext(context.Context) SecurityMonitoringRuleReferenceTableOutput
}

type SecurityMonitoringRuleReferenceTableArgs struct {
	// Whether to include or exclude logs that match the reference table.
	CheckPresence pulumi.BoolInput `pulumi:"checkPresence"`
	// The name of the column in the reference table.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// The field in the log that should be matched against the reference table.
	LogFieldPath pulumi.StringInput `pulumi:"logFieldPath"`
	// The name of the query to filter.
	RuleQueryName pulumi.StringInput `pulumi:"ruleQueryName"`
	// The name of the reference table.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (SecurityMonitoringRuleReferenceTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleReferenceTable)(nil)).Elem()
}

func (i SecurityMonitoringRuleReferenceTableArgs) ToSecurityMonitoringRuleReferenceTableOutput() SecurityMonitoringRuleReferenceTableOutput {
	return i.ToSecurityMonitoringRuleReferenceTableOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleReferenceTableArgs) ToSecurityMonitoringRuleReferenceTableOutputWithContext(ctx context.Context) SecurityMonitoringRuleReferenceTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleReferenceTableOutput)
}

// SecurityMonitoringRuleReferenceTableArrayInput is an input type that accepts SecurityMonitoringRuleReferenceTableArray and SecurityMonitoringRuleReferenceTableArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleReferenceTableArrayInput` via:
//
//	SecurityMonitoringRuleReferenceTableArray{ SecurityMonitoringRuleReferenceTableArgs{...} }
type SecurityMonitoringRuleReferenceTableArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleReferenceTableArrayOutput() SecurityMonitoringRuleReferenceTableArrayOutput
	ToSecurityMonitoringRuleReferenceTableArrayOutputWithContext(context.Context) SecurityMonitoringRuleReferenceTableArrayOutput
}

type SecurityMonitoringRuleReferenceTableArray []SecurityMonitoringRuleReferenceTableInput

func (SecurityMonitoringRuleReferenceTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleReferenceTable)(nil)).Elem()
}

func (i SecurityMonitoringRuleReferenceTableArray) ToSecurityMonitoringRuleReferenceTableArrayOutput() SecurityMonitoringRuleReferenceTableArrayOutput {
	return i.ToSecurityMonitoringRuleReferenceTableArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleReferenceTableArray) ToSecurityMonitoringRuleReferenceTableArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleReferenceTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleReferenceTableArrayOutput)
}

type SecurityMonitoringRuleReferenceTableOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleReferenceTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleReferenceTable)(nil)).Elem()
}

func (o SecurityMonitoringRuleReferenceTableOutput) ToSecurityMonitoringRuleReferenceTableOutput() SecurityMonitoringRuleReferenceTableOutput {
	return o
}

func (o SecurityMonitoringRuleReferenceTableOutput) ToSecurityMonitoringRuleReferenceTableOutputWithContext(ctx context.Context) SecurityMonitoringRuleReferenceTableOutput {
	return o
}

// Whether to include or exclude logs that match the reference table.
func (o SecurityMonitoringRuleReferenceTableOutput) CheckPresence() pulumi.BoolOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleReferenceTable) bool { return v.CheckPresence }).(pulumi.BoolOutput)
}

// The name of the column in the reference table.
func (o SecurityMonitoringRuleReferenceTableOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleReferenceTable) string { return v.ColumnName }).(pulumi.StringOutput)
}

// The field in the log that should be matched against the reference table.
func (o SecurityMonitoringRuleReferenceTableOutput) LogFieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleReferenceTable) string { return v.LogFieldPath }).(pulumi.StringOutput)
}

// The name of the query to filter.
func (o SecurityMonitoringRuleReferenceTableOutput) RuleQueryName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleReferenceTable) string { return v.RuleQueryName }).(pulumi.StringOutput)
}

// The name of the reference table.
func (o SecurityMonitoringRuleReferenceTableOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleReferenceTable) string { return v.TableName }).(pulumi.StringOutput)
}

type SecurityMonitoringRuleReferenceTableArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleReferenceTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleReferenceTable)(nil)).Elem()
}

func (o SecurityMonitoringRuleReferenceTableArrayOutput) ToSecurityMonitoringRuleReferenceTableArrayOutput() SecurityMonitoringRuleReferenceTableArrayOutput {
	return o
}

func (o SecurityMonitoringRuleReferenceTableArrayOutput) ToSecurityMonitoringRuleReferenceTableArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleReferenceTableArrayOutput {
	return o
}

func (o SecurityMonitoringRuleReferenceTableArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringRuleReferenceTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringRuleReferenceTable {
		return vs[0].([]SecurityMonitoringRuleReferenceTable)[vs[1].(int)]
	}).(SecurityMonitoringRuleReferenceTableOutput)
}

type SecurityMonitoringRuleSignalQuery struct {
	// The aggregation type. For Signal Correlation rules, it must be event_count. Valid values are `count`, `cardinality`, `sum`, `max`, `newValue`, `geoData`, `eventCount`, `none`. Defaults to `"eventCount"`.
	Aggregation *string `pulumi:"aggregation"`
	// Fields to correlate by.
	CorrelatedByFields []string `pulumi:"correlatedByFields"`
	// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule. Defaults to `""`.
	CorrelatedQueryIndex *string `pulumi:"correlatedQueryIndex"`
	// Default Rule ID of the signal to correlate. This value is READ-ONLY.
	DefaultRuleId *string `pulumi:"defaultRuleId"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name *string `pulumi:"name"`
	// Rule ID of the signal to correlate.
	RuleId string `pulumi:"ruleId"`
}

// SecurityMonitoringRuleSignalQueryInput is an input type that accepts SecurityMonitoringRuleSignalQueryArgs and SecurityMonitoringRuleSignalQueryOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleSignalQueryInput` via:
//
//	SecurityMonitoringRuleSignalQueryArgs{...}
type SecurityMonitoringRuleSignalQueryInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleSignalQueryOutput() SecurityMonitoringRuleSignalQueryOutput
	ToSecurityMonitoringRuleSignalQueryOutputWithContext(context.Context) SecurityMonitoringRuleSignalQueryOutput
}

type SecurityMonitoringRuleSignalQueryArgs struct {
	// The aggregation type. For Signal Correlation rules, it must be event_count. Valid values are `count`, `cardinality`, `sum`, `max`, `newValue`, `geoData`, `eventCount`, `none`. Defaults to `"eventCount"`.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Fields to correlate by.
	CorrelatedByFields pulumi.StringArrayInput `pulumi:"correlatedByFields"`
	// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule. Defaults to `""`.
	CorrelatedQueryIndex pulumi.StringPtrInput `pulumi:"correlatedQueryIndex"`
	// Default Rule ID of the signal to correlate. This value is READ-ONLY.
	DefaultRuleId pulumi.StringPtrInput `pulumi:"defaultRuleId"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule ID of the signal to correlate.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (SecurityMonitoringRuleSignalQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleSignalQuery)(nil)).Elem()
}

func (i SecurityMonitoringRuleSignalQueryArgs) ToSecurityMonitoringRuleSignalQueryOutput() SecurityMonitoringRuleSignalQueryOutput {
	return i.ToSecurityMonitoringRuleSignalQueryOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleSignalQueryArgs) ToSecurityMonitoringRuleSignalQueryOutputWithContext(ctx context.Context) SecurityMonitoringRuleSignalQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleSignalQueryOutput)
}

// SecurityMonitoringRuleSignalQueryArrayInput is an input type that accepts SecurityMonitoringRuleSignalQueryArray and SecurityMonitoringRuleSignalQueryArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleSignalQueryArrayInput` via:
//
//	SecurityMonitoringRuleSignalQueryArray{ SecurityMonitoringRuleSignalQueryArgs{...} }
type SecurityMonitoringRuleSignalQueryArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleSignalQueryArrayOutput() SecurityMonitoringRuleSignalQueryArrayOutput
	ToSecurityMonitoringRuleSignalQueryArrayOutputWithContext(context.Context) SecurityMonitoringRuleSignalQueryArrayOutput
}

type SecurityMonitoringRuleSignalQueryArray []SecurityMonitoringRuleSignalQueryInput

func (SecurityMonitoringRuleSignalQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleSignalQuery)(nil)).Elem()
}

func (i SecurityMonitoringRuleSignalQueryArray) ToSecurityMonitoringRuleSignalQueryArrayOutput() SecurityMonitoringRuleSignalQueryArrayOutput {
	return i.ToSecurityMonitoringRuleSignalQueryArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleSignalQueryArray) ToSecurityMonitoringRuleSignalQueryArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleSignalQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleSignalQueryArrayOutput)
}

type SecurityMonitoringRuleSignalQueryOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleSignalQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleSignalQuery)(nil)).Elem()
}

func (o SecurityMonitoringRuleSignalQueryOutput) ToSecurityMonitoringRuleSignalQueryOutput() SecurityMonitoringRuleSignalQueryOutput {
	return o
}

func (o SecurityMonitoringRuleSignalQueryOutput) ToSecurityMonitoringRuleSignalQueryOutputWithContext(ctx context.Context) SecurityMonitoringRuleSignalQueryOutput {
	return o
}

// The aggregation type. For Signal Correlation rules, it must be event_count. Valid values are `count`, `cardinality`, `sum`, `max`, `newValue`, `geoData`, `eventCount`, `none`. Defaults to `"eventCount"`.
func (o SecurityMonitoringRuleSignalQueryOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleSignalQuery) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Fields to correlate by.
func (o SecurityMonitoringRuleSignalQueryOutput) CorrelatedByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleSignalQuery) []string { return v.CorrelatedByFields }).(pulumi.StringArrayOutput)
}

// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule. Defaults to `""`.
func (o SecurityMonitoringRuleSignalQueryOutput) CorrelatedQueryIndex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleSignalQuery) *string { return v.CorrelatedQueryIndex }).(pulumi.StringPtrOutput)
}

// Default Rule ID of the signal to correlate. This value is READ-ONLY.
func (o SecurityMonitoringRuleSignalQueryOutput) DefaultRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleSignalQuery) *string { return v.DefaultRuleId }).(pulumi.StringPtrOutput)
}

// Name of the query. Not compatible with `newValue` aggregations.
func (o SecurityMonitoringRuleSignalQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleSignalQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule ID of the signal to correlate.
func (o SecurityMonitoringRuleSignalQueryOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleSignalQuery) string { return v.RuleId }).(pulumi.StringOutput)
}

type SecurityMonitoringRuleSignalQueryArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleSignalQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleSignalQuery)(nil)).Elem()
}

func (o SecurityMonitoringRuleSignalQueryArrayOutput) ToSecurityMonitoringRuleSignalQueryArrayOutput() SecurityMonitoringRuleSignalQueryArrayOutput {
	return o
}

func (o SecurityMonitoringRuleSignalQueryArrayOutput) ToSecurityMonitoringRuleSignalQueryArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleSignalQueryArrayOutput {
	return o
}

func (o SecurityMonitoringRuleSignalQueryArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringRuleSignalQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringRuleSignalQuery {
		return vs[0].([]SecurityMonitoringRuleSignalQuery)[vs[1].(int)]
	}).(SecurityMonitoringRuleSignalQueryOutput)
}

type SecurityMonitoringRuleThirdPartyCase struct {
	// Name of the case.
	Name *string `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications []string `pulumi:"notifications"`
	// A query to associate a third-party event to this case.
	Query *string `pulumi:"query"`
	// Severity of the Security Signal. Valid values are `info`, `low`, `medium`, `high`, `critical`.
	Status string `pulumi:"status"`
}

// SecurityMonitoringRuleThirdPartyCaseInput is an input type that accepts SecurityMonitoringRuleThirdPartyCaseArgs and SecurityMonitoringRuleThirdPartyCaseOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleThirdPartyCaseInput` via:
//
//	SecurityMonitoringRuleThirdPartyCaseArgs{...}
type SecurityMonitoringRuleThirdPartyCaseInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleThirdPartyCaseOutput() SecurityMonitoringRuleThirdPartyCaseOutput
	ToSecurityMonitoringRuleThirdPartyCaseOutputWithContext(context.Context) SecurityMonitoringRuleThirdPartyCaseOutput
}

type SecurityMonitoringRuleThirdPartyCaseArgs struct {
	// Name of the case.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications pulumi.StringArrayInput `pulumi:"notifications"`
	// A query to associate a third-party event to this case.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Severity of the Security Signal. Valid values are `info`, `low`, `medium`, `high`, `critical`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (SecurityMonitoringRuleThirdPartyCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleThirdPartyCase)(nil)).Elem()
}

func (i SecurityMonitoringRuleThirdPartyCaseArgs) ToSecurityMonitoringRuleThirdPartyCaseOutput() SecurityMonitoringRuleThirdPartyCaseOutput {
	return i.ToSecurityMonitoringRuleThirdPartyCaseOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleThirdPartyCaseArgs) ToSecurityMonitoringRuleThirdPartyCaseOutputWithContext(ctx context.Context) SecurityMonitoringRuleThirdPartyCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleThirdPartyCaseOutput)
}

// SecurityMonitoringRuleThirdPartyCaseArrayInput is an input type that accepts SecurityMonitoringRuleThirdPartyCaseArray and SecurityMonitoringRuleThirdPartyCaseArrayOutput values.
// You can construct a concrete instance of `SecurityMonitoringRuleThirdPartyCaseArrayInput` via:
//
//	SecurityMonitoringRuleThirdPartyCaseArray{ SecurityMonitoringRuleThirdPartyCaseArgs{...} }
type SecurityMonitoringRuleThirdPartyCaseArrayInput interface {
	pulumi.Input

	ToSecurityMonitoringRuleThirdPartyCaseArrayOutput() SecurityMonitoringRuleThirdPartyCaseArrayOutput
	ToSecurityMonitoringRuleThirdPartyCaseArrayOutputWithContext(context.Context) SecurityMonitoringRuleThirdPartyCaseArrayOutput
}

type SecurityMonitoringRuleThirdPartyCaseArray []SecurityMonitoringRuleThirdPartyCaseInput

func (SecurityMonitoringRuleThirdPartyCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleThirdPartyCase)(nil)).Elem()
}

func (i SecurityMonitoringRuleThirdPartyCaseArray) ToSecurityMonitoringRuleThirdPartyCaseArrayOutput() SecurityMonitoringRuleThirdPartyCaseArrayOutput {
	return i.ToSecurityMonitoringRuleThirdPartyCaseArrayOutputWithContext(context.Background())
}

func (i SecurityMonitoringRuleThirdPartyCaseArray) ToSecurityMonitoringRuleThirdPartyCaseArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleThirdPartyCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityMonitoringRuleThirdPartyCaseArrayOutput)
}

type SecurityMonitoringRuleThirdPartyCaseOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleThirdPartyCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityMonitoringRuleThirdPartyCase)(nil)).Elem()
}

func (o SecurityMonitoringRuleThirdPartyCaseOutput) ToSecurityMonitoringRuleThirdPartyCaseOutput() SecurityMonitoringRuleThirdPartyCaseOutput {
	return o
}

func (o SecurityMonitoringRuleThirdPartyCaseOutput) ToSecurityMonitoringRuleThirdPartyCaseOutputWithContext(ctx context.Context) SecurityMonitoringRuleThirdPartyCaseOutput {
	return o
}

// Name of the case.
func (o SecurityMonitoringRuleThirdPartyCaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleThirdPartyCase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notification targets for each rule case.
func (o SecurityMonitoringRuleThirdPartyCaseOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleThirdPartyCase) []string { return v.Notifications }).(pulumi.StringArrayOutput)
}

// A query to associate a third-party event to this case.
func (o SecurityMonitoringRuleThirdPartyCaseOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleThirdPartyCase) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Severity of the Security Signal. Valid values are `info`, `low`, `medium`, `high`, `critical`.
func (o SecurityMonitoringRuleThirdPartyCaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityMonitoringRuleThirdPartyCase) string { return v.Status }).(pulumi.StringOutput)
}

type SecurityMonitoringRuleThirdPartyCaseArrayOutput struct{ *pulumi.OutputState }

func (SecurityMonitoringRuleThirdPartyCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityMonitoringRuleThirdPartyCase)(nil)).Elem()
}

func (o SecurityMonitoringRuleThirdPartyCaseArrayOutput) ToSecurityMonitoringRuleThirdPartyCaseArrayOutput() SecurityMonitoringRuleThirdPartyCaseArrayOutput {
	return o
}

func (o SecurityMonitoringRuleThirdPartyCaseArrayOutput) ToSecurityMonitoringRuleThirdPartyCaseArrayOutputWithContext(ctx context.Context) SecurityMonitoringRuleThirdPartyCaseArrayOutput {
	return o
}

func (o SecurityMonitoringRuleThirdPartyCaseArrayOutput) Index(i pulumi.IntInput) SecurityMonitoringRuleThirdPartyCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityMonitoringRuleThirdPartyCase {
		return vs[0].([]SecurityMonitoringRuleThirdPartyCase)[vs[1].(int)]
	}).(SecurityMonitoringRuleThirdPartyCaseOutput)
}

type SecurityNotificationRuleSelectors struct {
	// Comprises one or several key:value pairs for filtering security issues based on tags and attributes. Defaults to `""`.
	Query *string `pulumi:"query"`
	// Specifies security rule types for filtering signals and vulnerabilities that generate notifications.
	RuleTypes []string `pulumi:"ruleTypes"`
	// The security rules severities to consider.
	Severities []string `pulumi:"severities"`
	// The type of security issues the rule applies to. Use `securitySignals` for rules based on security signals and `securityFindings` for those based on vulnerabilities.
	TriggerSource string `pulumi:"triggerSource"`
}

// SecurityNotificationRuleSelectorsInput is an input type that accepts SecurityNotificationRuleSelectorsArgs and SecurityNotificationRuleSelectorsOutput values.
// You can construct a concrete instance of `SecurityNotificationRuleSelectorsInput` via:
//
//	SecurityNotificationRuleSelectorsArgs{...}
type SecurityNotificationRuleSelectorsInput interface {
	pulumi.Input

	ToSecurityNotificationRuleSelectorsOutput() SecurityNotificationRuleSelectorsOutput
	ToSecurityNotificationRuleSelectorsOutputWithContext(context.Context) SecurityNotificationRuleSelectorsOutput
}

type SecurityNotificationRuleSelectorsArgs struct {
	// Comprises one or several key:value pairs for filtering security issues based on tags and attributes. Defaults to `""`.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Specifies security rule types for filtering signals and vulnerabilities that generate notifications.
	RuleTypes pulumi.StringArrayInput `pulumi:"ruleTypes"`
	// The security rules severities to consider.
	Severities pulumi.StringArrayInput `pulumi:"severities"`
	// The type of security issues the rule applies to. Use `securitySignals` for rules based on security signals and `securityFindings` for those based on vulnerabilities.
	TriggerSource pulumi.StringInput `pulumi:"triggerSource"`
}

func (SecurityNotificationRuleSelectorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityNotificationRuleSelectors)(nil)).Elem()
}

func (i SecurityNotificationRuleSelectorsArgs) ToSecurityNotificationRuleSelectorsOutput() SecurityNotificationRuleSelectorsOutput {
	return i.ToSecurityNotificationRuleSelectorsOutputWithContext(context.Background())
}

func (i SecurityNotificationRuleSelectorsArgs) ToSecurityNotificationRuleSelectorsOutputWithContext(ctx context.Context) SecurityNotificationRuleSelectorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityNotificationRuleSelectorsOutput)
}

func (i SecurityNotificationRuleSelectorsArgs) ToSecurityNotificationRuleSelectorsPtrOutput() SecurityNotificationRuleSelectorsPtrOutput {
	return i.ToSecurityNotificationRuleSelectorsPtrOutputWithContext(context.Background())
}

func (i SecurityNotificationRuleSelectorsArgs) ToSecurityNotificationRuleSelectorsPtrOutputWithContext(ctx context.Context) SecurityNotificationRuleSelectorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityNotificationRuleSelectorsOutput).ToSecurityNotificationRuleSelectorsPtrOutputWithContext(ctx)
}

// SecurityNotificationRuleSelectorsPtrInput is an input type that accepts SecurityNotificationRuleSelectorsArgs, SecurityNotificationRuleSelectorsPtr and SecurityNotificationRuleSelectorsPtrOutput values.
// You can construct a concrete instance of `SecurityNotificationRuleSelectorsPtrInput` via:
//
//	        SecurityNotificationRuleSelectorsArgs{...}
//
//	or:
//
//	        nil
type SecurityNotificationRuleSelectorsPtrInput interface {
	pulumi.Input

	ToSecurityNotificationRuleSelectorsPtrOutput() SecurityNotificationRuleSelectorsPtrOutput
	ToSecurityNotificationRuleSelectorsPtrOutputWithContext(context.Context) SecurityNotificationRuleSelectorsPtrOutput
}

type securityNotificationRuleSelectorsPtrType SecurityNotificationRuleSelectorsArgs

func SecurityNotificationRuleSelectorsPtr(v *SecurityNotificationRuleSelectorsArgs) SecurityNotificationRuleSelectorsPtrInput {
	return (*securityNotificationRuleSelectorsPtrType)(v)
}

func (*securityNotificationRuleSelectorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityNotificationRuleSelectors)(nil)).Elem()
}

func (i *securityNotificationRuleSelectorsPtrType) ToSecurityNotificationRuleSelectorsPtrOutput() SecurityNotificationRuleSelectorsPtrOutput {
	return i.ToSecurityNotificationRuleSelectorsPtrOutputWithContext(context.Background())
}

func (i *securityNotificationRuleSelectorsPtrType) ToSecurityNotificationRuleSelectorsPtrOutputWithContext(ctx context.Context) SecurityNotificationRuleSelectorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityNotificationRuleSelectorsPtrOutput)
}

type SecurityNotificationRuleSelectorsOutput struct{ *pulumi.OutputState }

func (SecurityNotificationRuleSelectorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityNotificationRuleSelectors)(nil)).Elem()
}

func (o SecurityNotificationRuleSelectorsOutput) ToSecurityNotificationRuleSelectorsOutput() SecurityNotificationRuleSelectorsOutput {
	return o
}

func (o SecurityNotificationRuleSelectorsOutput) ToSecurityNotificationRuleSelectorsOutputWithContext(ctx context.Context) SecurityNotificationRuleSelectorsOutput {
	return o
}

func (o SecurityNotificationRuleSelectorsOutput) ToSecurityNotificationRuleSelectorsPtrOutput() SecurityNotificationRuleSelectorsPtrOutput {
	return o.ToSecurityNotificationRuleSelectorsPtrOutputWithContext(context.Background())
}

func (o SecurityNotificationRuleSelectorsOutput) ToSecurityNotificationRuleSelectorsPtrOutputWithContext(ctx context.Context) SecurityNotificationRuleSelectorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecurityNotificationRuleSelectors) *SecurityNotificationRuleSelectors {
		return &v
	}).(SecurityNotificationRuleSelectorsPtrOutput)
}

// Comprises one or several key:value pairs for filtering security issues based on tags and attributes. Defaults to `""`.
func (o SecurityNotificationRuleSelectorsOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityNotificationRuleSelectors) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Specifies security rule types for filtering signals and vulnerabilities that generate notifications.
func (o SecurityNotificationRuleSelectorsOutput) RuleTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityNotificationRuleSelectors) []string { return v.RuleTypes }).(pulumi.StringArrayOutput)
}

// The security rules severities to consider.
func (o SecurityNotificationRuleSelectorsOutput) Severities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityNotificationRuleSelectors) []string { return v.Severities }).(pulumi.StringArrayOutput)
}

// The type of security issues the rule applies to. Use `securitySignals` for rules based on security signals and `securityFindings` for those based on vulnerabilities.
func (o SecurityNotificationRuleSelectorsOutput) TriggerSource() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityNotificationRuleSelectors) string { return v.TriggerSource }).(pulumi.StringOutput)
}

type SecurityNotificationRuleSelectorsPtrOutput struct{ *pulumi.OutputState }

func (SecurityNotificationRuleSelectorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityNotificationRuleSelectors)(nil)).Elem()
}

func (o SecurityNotificationRuleSelectorsPtrOutput) ToSecurityNotificationRuleSelectorsPtrOutput() SecurityNotificationRuleSelectorsPtrOutput {
	return o
}

func (o SecurityNotificationRuleSelectorsPtrOutput) ToSecurityNotificationRuleSelectorsPtrOutputWithContext(ctx context.Context) SecurityNotificationRuleSelectorsPtrOutput {
	return o
}

func (o SecurityNotificationRuleSelectorsPtrOutput) Elem() SecurityNotificationRuleSelectorsOutput {
	return o.ApplyT(func(v *SecurityNotificationRuleSelectors) SecurityNotificationRuleSelectors {
		if v != nil {
			return *v
		}
		var ret SecurityNotificationRuleSelectors
		return ret
	}).(SecurityNotificationRuleSelectorsOutput)
}

// Comprises one or several key:value pairs for filtering security issues based on tags and attributes. Defaults to `""`.
func (o SecurityNotificationRuleSelectorsPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityNotificationRuleSelectors) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

// Specifies security rule types for filtering signals and vulnerabilities that generate notifications.
func (o SecurityNotificationRuleSelectorsPtrOutput) RuleTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityNotificationRuleSelectors) []string {
		if v == nil {
			return nil
		}
		return v.RuleTypes
	}).(pulumi.StringArrayOutput)
}

// The security rules severities to consider.
func (o SecurityNotificationRuleSelectorsPtrOutput) Severities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SecurityNotificationRuleSelectors) []string {
		if v == nil {
			return nil
		}
		return v.Severities
	}).(pulumi.StringArrayOutput)
}

// The type of security issues the rule applies to. Use `securitySignals` for rules based on security signals and `securityFindings` for those based on vulnerabilities.
func (o SecurityNotificationRuleSelectorsPtrOutput) TriggerSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityNotificationRuleSelectors) *string {
		if v == nil {
			return nil
		}
		return &v.TriggerSource
	}).(pulumi.StringPtrOutput)
}

type SensitiveDataScannerGroupFilter struct {
	// Query to filter the events.
	Query string `pulumi:"query"`
}

// SensitiveDataScannerGroupFilterInput is an input type that accepts SensitiveDataScannerGroupFilterArgs and SensitiveDataScannerGroupFilterOutput values.
// You can construct a concrete instance of `SensitiveDataScannerGroupFilterInput` via:
//
//	SensitiveDataScannerGroupFilterArgs{...}
type SensitiveDataScannerGroupFilterInput interface {
	pulumi.Input

	ToSensitiveDataScannerGroupFilterOutput() SensitiveDataScannerGroupFilterOutput
	ToSensitiveDataScannerGroupFilterOutputWithContext(context.Context) SensitiveDataScannerGroupFilterOutput
}

type SensitiveDataScannerGroupFilterArgs struct {
	// Query to filter the events.
	Query pulumi.StringInput `pulumi:"query"`
}

func (SensitiveDataScannerGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SensitiveDataScannerGroupFilter)(nil)).Elem()
}

func (i SensitiveDataScannerGroupFilterArgs) ToSensitiveDataScannerGroupFilterOutput() SensitiveDataScannerGroupFilterOutput {
	return i.ToSensitiveDataScannerGroupFilterOutputWithContext(context.Background())
}

func (i SensitiveDataScannerGroupFilterArgs) ToSensitiveDataScannerGroupFilterOutputWithContext(ctx context.Context) SensitiveDataScannerGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataScannerGroupFilterOutput)
}

func (i SensitiveDataScannerGroupFilterArgs) ToSensitiveDataScannerGroupFilterPtrOutput() SensitiveDataScannerGroupFilterPtrOutput {
	return i.ToSensitiveDataScannerGroupFilterPtrOutputWithContext(context.Background())
}

func (i SensitiveDataScannerGroupFilterArgs) ToSensitiveDataScannerGroupFilterPtrOutputWithContext(ctx context.Context) SensitiveDataScannerGroupFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataScannerGroupFilterOutput).ToSensitiveDataScannerGroupFilterPtrOutputWithContext(ctx)
}

// SensitiveDataScannerGroupFilterPtrInput is an input type that accepts SensitiveDataScannerGroupFilterArgs, SensitiveDataScannerGroupFilterPtr and SensitiveDataScannerGroupFilterPtrOutput values.
// You can construct a concrete instance of `SensitiveDataScannerGroupFilterPtrInput` via:
//
//	        SensitiveDataScannerGroupFilterArgs{...}
//
//	or:
//
//	        nil
type SensitiveDataScannerGroupFilterPtrInput interface {
	pulumi.Input

	ToSensitiveDataScannerGroupFilterPtrOutput() SensitiveDataScannerGroupFilterPtrOutput
	ToSensitiveDataScannerGroupFilterPtrOutputWithContext(context.Context) SensitiveDataScannerGroupFilterPtrOutput
}

type sensitiveDataScannerGroupFilterPtrType SensitiveDataScannerGroupFilterArgs

func SensitiveDataScannerGroupFilterPtr(v *SensitiveDataScannerGroupFilterArgs) SensitiveDataScannerGroupFilterPtrInput {
	return (*sensitiveDataScannerGroupFilterPtrType)(v)
}

func (*sensitiveDataScannerGroupFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataScannerGroupFilter)(nil)).Elem()
}

func (i *sensitiveDataScannerGroupFilterPtrType) ToSensitiveDataScannerGroupFilterPtrOutput() SensitiveDataScannerGroupFilterPtrOutput {
	return i.ToSensitiveDataScannerGroupFilterPtrOutputWithContext(context.Background())
}

func (i *sensitiveDataScannerGroupFilterPtrType) ToSensitiveDataScannerGroupFilterPtrOutputWithContext(ctx context.Context) SensitiveDataScannerGroupFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataScannerGroupFilterPtrOutput)
}

type SensitiveDataScannerGroupFilterOutput struct{ *pulumi.OutputState }

func (SensitiveDataScannerGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SensitiveDataScannerGroupFilter)(nil)).Elem()
}

func (o SensitiveDataScannerGroupFilterOutput) ToSensitiveDataScannerGroupFilterOutput() SensitiveDataScannerGroupFilterOutput {
	return o
}

func (o SensitiveDataScannerGroupFilterOutput) ToSensitiveDataScannerGroupFilterOutputWithContext(ctx context.Context) SensitiveDataScannerGroupFilterOutput {
	return o
}

func (o SensitiveDataScannerGroupFilterOutput) ToSensitiveDataScannerGroupFilterPtrOutput() SensitiveDataScannerGroupFilterPtrOutput {
	return o.ToSensitiveDataScannerGroupFilterPtrOutputWithContext(context.Background())
}

func (o SensitiveDataScannerGroupFilterOutput) ToSensitiveDataScannerGroupFilterPtrOutputWithContext(ctx context.Context) SensitiveDataScannerGroupFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SensitiveDataScannerGroupFilter) *SensitiveDataScannerGroupFilter {
		return &v
	}).(SensitiveDataScannerGroupFilterPtrOutput)
}

// Query to filter the events.
func (o SensitiveDataScannerGroupFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SensitiveDataScannerGroupFilter) string { return v.Query }).(pulumi.StringOutput)
}

type SensitiveDataScannerGroupFilterPtrOutput struct{ *pulumi.OutputState }

func (SensitiveDataScannerGroupFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataScannerGroupFilter)(nil)).Elem()
}

func (o SensitiveDataScannerGroupFilterPtrOutput) ToSensitiveDataScannerGroupFilterPtrOutput() SensitiveDataScannerGroupFilterPtrOutput {
	return o
}

func (o SensitiveDataScannerGroupFilterPtrOutput) ToSensitiveDataScannerGroupFilterPtrOutputWithContext(ctx context.Context) SensitiveDataScannerGroupFilterPtrOutput {
	return o
}

func (o SensitiveDataScannerGroupFilterPtrOutput) Elem() SensitiveDataScannerGroupFilterOutput {
	return o.ApplyT(func(v *SensitiveDataScannerGroupFilter) SensitiveDataScannerGroupFilter {
		if v != nil {
			return *v
		}
		var ret SensitiveDataScannerGroupFilter
		return ret
	}).(SensitiveDataScannerGroupFilterOutput)
}

// Query to filter the events.
func (o SensitiveDataScannerGroupFilterPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SensitiveDataScannerGroupFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type SensitiveDataScannerRuleIncludedKeywordConfiguration struct {
	// Number of characters before the match to find a keyword validating the match. It must be between 1 and 50 (inclusive).
	CharacterCount int `pulumi:"characterCount"`
	// Keyword list that is checked during scanning in order to validate a match. The number of keywords in the list must be lower than or equal to 30.
	Keywords []string `pulumi:"keywords"`
}

// SensitiveDataScannerRuleIncludedKeywordConfigurationInput is an input type that accepts SensitiveDataScannerRuleIncludedKeywordConfigurationArgs and SensitiveDataScannerRuleIncludedKeywordConfigurationOutput values.
// You can construct a concrete instance of `SensitiveDataScannerRuleIncludedKeywordConfigurationInput` via:
//
//	SensitiveDataScannerRuleIncludedKeywordConfigurationArgs{...}
type SensitiveDataScannerRuleIncludedKeywordConfigurationInput interface {
	pulumi.Input

	ToSensitiveDataScannerRuleIncludedKeywordConfigurationOutput() SensitiveDataScannerRuleIncludedKeywordConfigurationOutput
	ToSensitiveDataScannerRuleIncludedKeywordConfigurationOutputWithContext(context.Context) SensitiveDataScannerRuleIncludedKeywordConfigurationOutput
}

type SensitiveDataScannerRuleIncludedKeywordConfigurationArgs struct {
	// Number of characters before the match to find a keyword validating the match. It must be between 1 and 50 (inclusive).
	CharacterCount pulumi.IntInput `pulumi:"characterCount"`
	// Keyword list that is checked during scanning in order to validate a match. The number of keywords in the list must be lower than or equal to 30.
	Keywords pulumi.StringArrayInput `pulumi:"keywords"`
}

func (SensitiveDataScannerRuleIncludedKeywordConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SensitiveDataScannerRuleIncludedKeywordConfiguration)(nil)).Elem()
}

func (i SensitiveDataScannerRuleIncludedKeywordConfigurationArgs) ToSensitiveDataScannerRuleIncludedKeywordConfigurationOutput() SensitiveDataScannerRuleIncludedKeywordConfigurationOutput {
	return i.ToSensitiveDataScannerRuleIncludedKeywordConfigurationOutputWithContext(context.Background())
}

func (i SensitiveDataScannerRuleIncludedKeywordConfigurationArgs) ToSensitiveDataScannerRuleIncludedKeywordConfigurationOutputWithContext(ctx context.Context) SensitiveDataScannerRuleIncludedKeywordConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataScannerRuleIncludedKeywordConfigurationOutput)
}

func (i SensitiveDataScannerRuleIncludedKeywordConfigurationArgs) ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput() SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput {
	return i.ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutputWithContext(context.Background())
}

func (i SensitiveDataScannerRuleIncludedKeywordConfigurationArgs) ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutputWithContext(ctx context.Context) SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataScannerRuleIncludedKeywordConfigurationOutput).ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutputWithContext(ctx)
}

// SensitiveDataScannerRuleIncludedKeywordConfigurationPtrInput is an input type that accepts SensitiveDataScannerRuleIncludedKeywordConfigurationArgs, SensitiveDataScannerRuleIncludedKeywordConfigurationPtr and SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput values.
// You can construct a concrete instance of `SensitiveDataScannerRuleIncludedKeywordConfigurationPtrInput` via:
//
//	        SensitiveDataScannerRuleIncludedKeywordConfigurationArgs{...}
//
//	or:
//
//	        nil
type SensitiveDataScannerRuleIncludedKeywordConfigurationPtrInput interface {
	pulumi.Input

	ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput() SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput
	ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutputWithContext(context.Context) SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput
}

type sensitiveDataScannerRuleIncludedKeywordConfigurationPtrType SensitiveDataScannerRuleIncludedKeywordConfigurationArgs

func SensitiveDataScannerRuleIncludedKeywordConfigurationPtr(v *SensitiveDataScannerRuleIncludedKeywordConfigurationArgs) SensitiveDataScannerRuleIncludedKeywordConfigurationPtrInput {
	return (*sensitiveDataScannerRuleIncludedKeywordConfigurationPtrType)(v)
}

func (*sensitiveDataScannerRuleIncludedKeywordConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataScannerRuleIncludedKeywordConfiguration)(nil)).Elem()
}

func (i *sensitiveDataScannerRuleIncludedKeywordConfigurationPtrType) ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput() SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput {
	return i.ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutputWithContext(context.Background())
}

func (i *sensitiveDataScannerRuleIncludedKeywordConfigurationPtrType) ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutputWithContext(ctx context.Context) SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput)
}

type SensitiveDataScannerRuleIncludedKeywordConfigurationOutput struct{ *pulumi.OutputState }

func (SensitiveDataScannerRuleIncludedKeywordConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SensitiveDataScannerRuleIncludedKeywordConfiguration)(nil)).Elem()
}

func (o SensitiveDataScannerRuleIncludedKeywordConfigurationOutput) ToSensitiveDataScannerRuleIncludedKeywordConfigurationOutput() SensitiveDataScannerRuleIncludedKeywordConfigurationOutput {
	return o
}

func (o SensitiveDataScannerRuleIncludedKeywordConfigurationOutput) ToSensitiveDataScannerRuleIncludedKeywordConfigurationOutputWithContext(ctx context.Context) SensitiveDataScannerRuleIncludedKeywordConfigurationOutput {
	return o
}

func (o SensitiveDataScannerRuleIncludedKeywordConfigurationOutput) ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput() SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput {
	return o.ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutputWithContext(context.Background())
}

func (o SensitiveDataScannerRuleIncludedKeywordConfigurationOutput) ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutputWithContext(ctx context.Context) SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SensitiveDataScannerRuleIncludedKeywordConfiguration) *SensitiveDataScannerRuleIncludedKeywordConfiguration {
		return &v
	}).(SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput)
}

// Number of characters before the match to find a keyword validating the match. It must be between 1 and 50 (inclusive).
func (o SensitiveDataScannerRuleIncludedKeywordConfigurationOutput) CharacterCount() pulumi.IntOutput {
	return o.ApplyT(func(v SensitiveDataScannerRuleIncludedKeywordConfiguration) int { return v.CharacterCount }).(pulumi.IntOutput)
}

// Keyword list that is checked during scanning in order to validate a match. The number of keywords in the list must be lower than or equal to 30.
func (o SensitiveDataScannerRuleIncludedKeywordConfigurationOutput) Keywords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SensitiveDataScannerRuleIncludedKeywordConfiguration) []string { return v.Keywords }).(pulumi.StringArrayOutput)
}

type SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataScannerRuleIncludedKeywordConfiguration)(nil)).Elem()
}

func (o SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput) ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput() SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput {
	return o
}

func (o SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput) ToSensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutputWithContext(ctx context.Context) SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput {
	return o
}

func (o SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput) Elem() SensitiveDataScannerRuleIncludedKeywordConfigurationOutput {
	return o.ApplyT(func(v *SensitiveDataScannerRuleIncludedKeywordConfiguration) SensitiveDataScannerRuleIncludedKeywordConfiguration {
		if v != nil {
			return *v
		}
		var ret SensitiveDataScannerRuleIncludedKeywordConfiguration
		return ret
	}).(SensitiveDataScannerRuleIncludedKeywordConfigurationOutput)
}

// Number of characters before the match to find a keyword validating the match. It must be between 1 and 50 (inclusive).
func (o SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput) CharacterCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SensitiveDataScannerRuleIncludedKeywordConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.CharacterCount
	}).(pulumi.IntPtrOutput)
}

// Keyword list that is checked during scanning in order to validate a match. The number of keywords in the list must be lower than or equal to 30.
func (o SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput) Keywords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SensitiveDataScannerRuleIncludedKeywordConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Keywords
	}).(pulumi.StringArrayOutput)
}

type SensitiveDataScannerRuleTextReplacement struct {
	// Required if type == 'partial*replacement*from*beginning' or 'partial*replacement*from*end'. It must be > 0.
	NumberOfChars *int `pulumi:"numberOfChars"`
	// Required if type == 'replacement_string'.
	ReplacementString *string `pulumi:"replacementString"`
	// Type of the replacement text. None means no replacement. hash means the data will be stubbed. replacement*string means that one can chose a text to replace the data. partial*replacement*from*beginning allows a user to partially replace the data from the beginning, and partial*replacement*from_end on the other hand, allows to replace data from the end. Valid values are `none`, `hash`, `replacementString`, `partialReplacementFromBeginning`, `partialReplacementFromEnd`.
	Type string `pulumi:"type"`
}

// SensitiveDataScannerRuleTextReplacementInput is an input type that accepts SensitiveDataScannerRuleTextReplacementArgs and SensitiveDataScannerRuleTextReplacementOutput values.
// You can construct a concrete instance of `SensitiveDataScannerRuleTextReplacementInput` via:
//
//	SensitiveDataScannerRuleTextReplacementArgs{...}
type SensitiveDataScannerRuleTextReplacementInput interface {
	pulumi.Input

	ToSensitiveDataScannerRuleTextReplacementOutput() SensitiveDataScannerRuleTextReplacementOutput
	ToSensitiveDataScannerRuleTextReplacementOutputWithContext(context.Context) SensitiveDataScannerRuleTextReplacementOutput
}

type SensitiveDataScannerRuleTextReplacementArgs struct {
	// Required if type == 'partial*replacement*from*beginning' or 'partial*replacement*from*end'. It must be > 0.
	NumberOfChars pulumi.IntPtrInput `pulumi:"numberOfChars"`
	// Required if type == 'replacement_string'.
	ReplacementString pulumi.StringPtrInput `pulumi:"replacementString"`
	// Type of the replacement text. None means no replacement. hash means the data will be stubbed. replacement*string means that one can chose a text to replace the data. partial*replacement*from*beginning allows a user to partially replace the data from the beginning, and partial*replacement*from_end on the other hand, allows to replace data from the end. Valid values are `none`, `hash`, `replacementString`, `partialReplacementFromBeginning`, `partialReplacementFromEnd`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SensitiveDataScannerRuleTextReplacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SensitiveDataScannerRuleTextReplacement)(nil)).Elem()
}

func (i SensitiveDataScannerRuleTextReplacementArgs) ToSensitiveDataScannerRuleTextReplacementOutput() SensitiveDataScannerRuleTextReplacementOutput {
	return i.ToSensitiveDataScannerRuleTextReplacementOutputWithContext(context.Background())
}

func (i SensitiveDataScannerRuleTextReplacementArgs) ToSensitiveDataScannerRuleTextReplacementOutputWithContext(ctx context.Context) SensitiveDataScannerRuleTextReplacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataScannerRuleTextReplacementOutput)
}

func (i SensitiveDataScannerRuleTextReplacementArgs) ToSensitiveDataScannerRuleTextReplacementPtrOutput() SensitiveDataScannerRuleTextReplacementPtrOutput {
	return i.ToSensitiveDataScannerRuleTextReplacementPtrOutputWithContext(context.Background())
}

func (i SensitiveDataScannerRuleTextReplacementArgs) ToSensitiveDataScannerRuleTextReplacementPtrOutputWithContext(ctx context.Context) SensitiveDataScannerRuleTextReplacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataScannerRuleTextReplacementOutput).ToSensitiveDataScannerRuleTextReplacementPtrOutputWithContext(ctx)
}

// SensitiveDataScannerRuleTextReplacementPtrInput is an input type that accepts SensitiveDataScannerRuleTextReplacementArgs, SensitiveDataScannerRuleTextReplacementPtr and SensitiveDataScannerRuleTextReplacementPtrOutput values.
// You can construct a concrete instance of `SensitiveDataScannerRuleTextReplacementPtrInput` via:
//
//	        SensitiveDataScannerRuleTextReplacementArgs{...}
//
//	or:
//
//	        nil
type SensitiveDataScannerRuleTextReplacementPtrInput interface {
	pulumi.Input

	ToSensitiveDataScannerRuleTextReplacementPtrOutput() SensitiveDataScannerRuleTextReplacementPtrOutput
	ToSensitiveDataScannerRuleTextReplacementPtrOutputWithContext(context.Context) SensitiveDataScannerRuleTextReplacementPtrOutput
}

type sensitiveDataScannerRuleTextReplacementPtrType SensitiveDataScannerRuleTextReplacementArgs

func SensitiveDataScannerRuleTextReplacementPtr(v *SensitiveDataScannerRuleTextReplacementArgs) SensitiveDataScannerRuleTextReplacementPtrInput {
	return (*sensitiveDataScannerRuleTextReplacementPtrType)(v)
}

func (*sensitiveDataScannerRuleTextReplacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataScannerRuleTextReplacement)(nil)).Elem()
}

func (i *sensitiveDataScannerRuleTextReplacementPtrType) ToSensitiveDataScannerRuleTextReplacementPtrOutput() SensitiveDataScannerRuleTextReplacementPtrOutput {
	return i.ToSensitiveDataScannerRuleTextReplacementPtrOutputWithContext(context.Background())
}

func (i *sensitiveDataScannerRuleTextReplacementPtrType) ToSensitiveDataScannerRuleTextReplacementPtrOutputWithContext(ctx context.Context) SensitiveDataScannerRuleTextReplacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SensitiveDataScannerRuleTextReplacementPtrOutput)
}

type SensitiveDataScannerRuleTextReplacementOutput struct{ *pulumi.OutputState }

func (SensitiveDataScannerRuleTextReplacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SensitiveDataScannerRuleTextReplacement)(nil)).Elem()
}

func (o SensitiveDataScannerRuleTextReplacementOutput) ToSensitiveDataScannerRuleTextReplacementOutput() SensitiveDataScannerRuleTextReplacementOutput {
	return o
}

func (o SensitiveDataScannerRuleTextReplacementOutput) ToSensitiveDataScannerRuleTextReplacementOutputWithContext(ctx context.Context) SensitiveDataScannerRuleTextReplacementOutput {
	return o
}

func (o SensitiveDataScannerRuleTextReplacementOutput) ToSensitiveDataScannerRuleTextReplacementPtrOutput() SensitiveDataScannerRuleTextReplacementPtrOutput {
	return o.ToSensitiveDataScannerRuleTextReplacementPtrOutputWithContext(context.Background())
}

func (o SensitiveDataScannerRuleTextReplacementOutput) ToSensitiveDataScannerRuleTextReplacementPtrOutputWithContext(ctx context.Context) SensitiveDataScannerRuleTextReplacementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SensitiveDataScannerRuleTextReplacement) *SensitiveDataScannerRuleTextReplacement {
		return &v
	}).(SensitiveDataScannerRuleTextReplacementPtrOutput)
}

// Required if type == 'partial*replacement*from*beginning' or 'partial*replacement*from*end'. It must be > 0.
func (o SensitiveDataScannerRuleTextReplacementOutput) NumberOfChars() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SensitiveDataScannerRuleTextReplacement) *int { return v.NumberOfChars }).(pulumi.IntPtrOutput)
}

// Required if type == 'replacement_string'.
func (o SensitiveDataScannerRuleTextReplacementOutput) ReplacementString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SensitiveDataScannerRuleTextReplacement) *string { return v.ReplacementString }).(pulumi.StringPtrOutput)
}

// Type of the replacement text. None means no replacement. hash means the data will be stubbed. replacement*string means that one can chose a text to replace the data. partial*replacement*from*beginning allows a user to partially replace the data from the beginning, and partial*replacement*from_end on the other hand, allows to replace data from the end. Valid values are `none`, `hash`, `replacementString`, `partialReplacementFromBeginning`, `partialReplacementFromEnd`.
func (o SensitiveDataScannerRuleTextReplacementOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SensitiveDataScannerRuleTextReplacement) string { return v.Type }).(pulumi.StringOutput)
}

type SensitiveDataScannerRuleTextReplacementPtrOutput struct{ *pulumi.OutputState }

func (SensitiveDataScannerRuleTextReplacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SensitiveDataScannerRuleTextReplacement)(nil)).Elem()
}

func (o SensitiveDataScannerRuleTextReplacementPtrOutput) ToSensitiveDataScannerRuleTextReplacementPtrOutput() SensitiveDataScannerRuleTextReplacementPtrOutput {
	return o
}

func (o SensitiveDataScannerRuleTextReplacementPtrOutput) ToSensitiveDataScannerRuleTextReplacementPtrOutputWithContext(ctx context.Context) SensitiveDataScannerRuleTextReplacementPtrOutput {
	return o
}

func (o SensitiveDataScannerRuleTextReplacementPtrOutput) Elem() SensitiveDataScannerRuleTextReplacementOutput {
	return o.ApplyT(func(v *SensitiveDataScannerRuleTextReplacement) SensitiveDataScannerRuleTextReplacement {
		if v != nil {
			return *v
		}
		var ret SensitiveDataScannerRuleTextReplacement
		return ret
	}).(SensitiveDataScannerRuleTextReplacementOutput)
}

// Required if type == 'partial*replacement*from*beginning' or 'partial*replacement*from*end'. It must be > 0.
func (o SensitiveDataScannerRuleTextReplacementPtrOutput) NumberOfChars() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SensitiveDataScannerRuleTextReplacement) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfChars
	}).(pulumi.IntPtrOutput)
}

// Required if type == 'replacement_string'.
func (o SensitiveDataScannerRuleTextReplacementPtrOutput) ReplacementString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SensitiveDataScannerRuleTextReplacement) *string {
		if v == nil {
			return nil
		}
		return v.ReplacementString
	}).(pulumi.StringPtrOutput)
}

// Type of the replacement text. None means no replacement. hash means the data will be stubbed. replacement*string means that one can chose a text to replace the data. partial*replacement*from*beginning allows a user to partially replace the data from the beginning, and partial*replacement*from_end on the other hand, allows to replace data from the end. Valid values are `none`, `hash`, `replacementString`, `partialReplacementFromBeginning`, `partialReplacementFromEnd`.
func (o SensitiveDataScannerRuleTextReplacementPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SensitiveDataScannerRuleTextReplacement) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelObjectiveQuery struct {
	// The sum of the `total` events.
	Denominator string `pulumi:"denominator"`
	// The sum of all the `good` events.
	Numerator string `pulumi:"numerator"`
}

// ServiceLevelObjectiveQueryInput is an input type that accepts ServiceLevelObjectiveQueryArgs and ServiceLevelObjectiveQueryOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveQueryInput` via:
//
//	ServiceLevelObjectiveQueryArgs{...}
type ServiceLevelObjectiveQueryInput interface {
	pulumi.Input

	ToServiceLevelObjectiveQueryOutput() ServiceLevelObjectiveQueryOutput
	ToServiceLevelObjectiveQueryOutputWithContext(context.Context) ServiceLevelObjectiveQueryOutput
}

type ServiceLevelObjectiveQueryArgs struct {
	// The sum of the `total` events.
	Denominator pulumi.StringInput `pulumi:"denominator"`
	// The sum of all the `good` events.
	Numerator pulumi.StringInput `pulumi:"numerator"`
}

func (ServiceLevelObjectiveQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveQuery)(nil)).Elem()
}

func (i ServiceLevelObjectiveQueryArgs) ToServiceLevelObjectiveQueryOutput() ServiceLevelObjectiveQueryOutput {
	return i.ToServiceLevelObjectiveQueryOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveQueryArgs) ToServiceLevelObjectiveQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveQueryOutput)
}

func (i ServiceLevelObjectiveQueryArgs) ToServiceLevelObjectiveQueryPtrOutput() ServiceLevelObjectiveQueryPtrOutput {
	return i.ToServiceLevelObjectiveQueryPtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveQueryArgs) ToServiceLevelObjectiveQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveQueryOutput).ToServiceLevelObjectiveQueryPtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveQueryPtrInput is an input type that accepts ServiceLevelObjectiveQueryArgs, ServiceLevelObjectiveQueryPtr and ServiceLevelObjectiveQueryPtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveQueryPtrInput` via:
//
//	        ServiceLevelObjectiveQueryArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveQueryPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveQueryPtrOutput() ServiceLevelObjectiveQueryPtrOutput
	ToServiceLevelObjectiveQueryPtrOutputWithContext(context.Context) ServiceLevelObjectiveQueryPtrOutput
}

type serviceLevelObjectiveQueryPtrType ServiceLevelObjectiveQueryArgs

func ServiceLevelObjectiveQueryPtr(v *ServiceLevelObjectiveQueryArgs) ServiceLevelObjectiveQueryPtrInput {
	return (*serviceLevelObjectiveQueryPtrType)(v)
}

func (*serviceLevelObjectiveQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveQuery)(nil)).Elem()
}

func (i *serviceLevelObjectiveQueryPtrType) ToServiceLevelObjectiveQueryPtrOutput() ServiceLevelObjectiveQueryPtrOutput {
	return i.ToServiceLevelObjectiveQueryPtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveQueryPtrType) ToServiceLevelObjectiveQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveQueryPtrOutput)
}

type ServiceLevelObjectiveQueryOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveQueryOutput) ToServiceLevelObjectiveQueryOutput() ServiceLevelObjectiveQueryOutput {
	return o
}

func (o ServiceLevelObjectiveQueryOutput) ToServiceLevelObjectiveQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveQueryOutput {
	return o
}

func (o ServiceLevelObjectiveQueryOutput) ToServiceLevelObjectiveQueryPtrOutput() ServiceLevelObjectiveQueryPtrOutput {
	return o.ToServiceLevelObjectiveQueryPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveQueryOutput) ToServiceLevelObjectiveQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveQuery) *ServiceLevelObjectiveQuery {
		return &v
	}).(ServiceLevelObjectiveQueryPtrOutput)
}

// The sum of the `total` events.
func (o ServiceLevelObjectiveQueryOutput) Denominator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveQuery) string { return v.Denominator }).(pulumi.StringOutput)
}

// The sum of all the `good` events.
func (o ServiceLevelObjectiveQueryOutput) Numerator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveQuery) string { return v.Numerator }).(pulumi.StringOutput)
}

type ServiceLevelObjectiveQueryPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveQueryPtrOutput) ToServiceLevelObjectiveQueryPtrOutput() ServiceLevelObjectiveQueryPtrOutput {
	return o
}

func (o ServiceLevelObjectiveQueryPtrOutput) ToServiceLevelObjectiveQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveQueryPtrOutput {
	return o
}

func (o ServiceLevelObjectiveQueryPtrOutput) Elem() ServiceLevelObjectiveQueryOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveQuery) ServiceLevelObjectiveQuery {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveQuery
		return ret
	}).(ServiceLevelObjectiveQueryOutput)
}

// The sum of the `total` events.
func (o ServiceLevelObjectiveQueryPtrOutput) Denominator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Denominator
	}).(pulumi.StringPtrOutput)
}

// The sum of all the `good` events.
func (o ServiceLevelObjectiveQueryPtrOutput) Numerator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Numerator
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelObjectiveSliSpecification struct {
	// The time slice condition, composed of 3 parts: 1. The timeseries query, 2. The comparator, and 3. The threshold. Optionally, a fourth part, the query interval, can be provided.
	TimeSlice ServiceLevelObjectiveSliSpecificationTimeSlice `pulumi:"timeSlice"`
}

// ServiceLevelObjectiveSliSpecificationInput is an input type that accepts ServiceLevelObjectiveSliSpecificationArgs and ServiceLevelObjectiveSliSpecificationOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationInput` via:
//
//	ServiceLevelObjectiveSliSpecificationArgs{...}
type ServiceLevelObjectiveSliSpecificationInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationOutput() ServiceLevelObjectiveSliSpecificationOutput
	ToServiceLevelObjectiveSliSpecificationOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationOutput
}

type ServiceLevelObjectiveSliSpecificationArgs struct {
	// The time slice condition, composed of 3 parts: 1. The timeseries query, 2. The comparator, and 3. The threshold. Optionally, a fourth part, the query interval, can be provided.
	TimeSlice ServiceLevelObjectiveSliSpecificationTimeSliceInput `pulumi:"timeSlice"`
}

func (ServiceLevelObjectiveSliSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecification)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationArgs) ToServiceLevelObjectiveSliSpecificationOutput() ServiceLevelObjectiveSliSpecificationOutput {
	return i.ToServiceLevelObjectiveSliSpecificationOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationArgs) ToServiceLevelObjectiveSliSpecificationOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationOutput)
}

func (i ServiceLevelObjectiveSliSpecificationArgs) ToServiceLevelObjectiveSliSpecificationPtrOutput() ServiceLevelObjectiveSliSpecificationPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationPtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationArgs) ToServiceLevelObjectiveSliSpecificationPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationOutput).ToServiceLevelObjectiveSliSpecificationPtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveSliSpecificationPtrInput is an input type that accepts ServiceLevelObjectiveSliSpecificationArgs, ServiceLevelObjectiveSliSpecificationPtr and ServiceLevelObjectiveSliSpecificationPtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationPtrInput` via:
//
//	        ServiceLevelObjectiveSliSpecificationArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveSliSpecificationPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationPtrOutput() ServiceLevelObjectiveSliSpecificationPtrOutput
	ToServiceLevelObjectiveSliSpecificationPtrOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationPtrOutput
}

type serviceLevelObjectiveSliSpecificationPtrType ServiceLevelObjectiveSliSpecificationArgs

func ServiceLevelObjectiveSliSpecificationPtr(v *ServiceLevelObjectiveSliSpecificationArgs) ServiceLevelObjectiveSliSpecificationPtrInput {
	return (*serviceLevelObjectiveSliSpecificationPtrType)(v)
}

func (*serviceLevelObjectiveSliSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecification)(nil)).Elem()
}

func (i *serviceLevelObjectiveSliSpecificationPtrType) ToServiceLevelObjectiveSliSpecificationPtrOutput() ServiceLevelObjectiveSliSpecificationPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationPtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveSliSpecificationPtrType) ToServiceLevelObjectiveSliSpecificationPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationPtrOutput)
}

type ServiceLevelObjectiveSliSpecificationOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecification)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationOutput) ToServiceLevelObjectiveSliSpecificationOutput() ServiceLevelObjectiveSliSpecificationOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationOutput) ToServiceLevelObjectiveSliSpecificationOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationOutput) ToServiceLevelObjectiveSliSpecificationPtrOutput() ServiceLevelObjectiveSliSpecificationPtrOutput {
	return o.ToServiceLevelObjectiveSliSpecificationPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliSpecificationOutput) ToServiceLevelObjectiveSliSpecificationPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveSliSpecification) *ServiceLevelObjectiveSliSpecification {
		return &v
	}).(ServiceLevelObjectiveSliSpecificationPtrOutput)
}

// The time slice condition, composed of 3 parts: 1. The timeseries query, 2. The comparator, and 3. The threshold. Optionally, a fourth part, the query interval, can be provided.
func (o ServiceLevelObjectiveSliSpecificationOutput) TimeSlice() ServiceLevelObjectiveSliSpecificationTimeSliceOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecification) ServiceLevelObjectiveSliSpecificationTimeSlice {
		return v.TimeSlice
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceOutput)
}

type ServiceLevelObjectiveSliSpecificationPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecification)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationPtrOutput) ToServiceLevelObjectiveSliSpecificationPtrOutput() ServiceLevelObjectiveSliSpecificationPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationPtrOutput) ToServiceLevelObjectiveSliSpecificationPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationPtrOutput) Elem() ServiceLevelObjectiveSliSpecificationOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecification) ServiceLevelObjectiveSliSpecification {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveSliSpecification
		return ret
	}).(ServiceLevelObjectiveSliSpecificationOutput)
}

// The time slice condition, composed of 3 parts: 1. The timeseries query, 2. The comparator, and 3. The threshold. Optionally, a fourth part, the query interval, can be provided.
func (o ServiceLevelObjectiveSliSpecificationPtrOutput) TimeSlice() ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecification) *ServiceLevelObjectiveSliSpecificationTimeSlice {
		if v == nil {
			return nil
		}
		return &v.TimeSlice
	}).(ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSlice struct {
	// The comparator used to compare the SLI value to the threshold. Valid values are `>`, `>=`, `<`, `<=`.
	Comparator string `pulumi:"comparator"`
	// A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
	Query ServiceLevelObjectiveSliSpecificationTimeSliceQuery `pulumi:"query"`
	// The interval used when querying data, which defines the size of a time slice. Valid values are `60`, `300`. Defaults to `300`.
	QueryIntervalSeconds *int `pulumi:"queryIntervalSeconds"`
	// The threshold value to which each SLI value will be compared.
	Threshold float64 `pulumi:"threshold"`
}

// ServiceLevelObjectiveSliSpecificationTimeSliceInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceArgs and ServiceLevelObjectiveSliSpecificationTimeSliceOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceArgs{...}
type ServiceLevelObjectiveSliSpecificationTimeSliceInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceOutput() ServiceLevelObjectiveSliSpecificationTimeSliceOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceArgs struct {
	// The comparator used to compare the SLI value to the threshold. Valid values are `>`, `>=`, `<`, `<=`.
	Comparator pulumi.StringInput `pulumi:"comparator"`
	// A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
	Query ServiceLevelObjectiveSliSpecificationTimeSliceQueryInput `pulumi:"query"`
	// The interval used when querying data, which defines the size of a time slice. Valid values are `60`, `300`. Defaults to `300`.
	QueryIntervalSeconds pulumi.IntPtrInput `pulumi:"queryIntervalSeconds"`
	// The threshold value to which each SLI value will be compared.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
}

func (ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSlice)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceOutput() ServiceLevelObjectiveSliSpecificationTimeSliceOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceOutput)
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput() ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceOutput).ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveSliSpecificationTimeSlicePtrInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceArgs, ServiceLevelObjectiveSliSpecificationTimeSlicePtr and ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSlicePtrInput` via:
//
//	        ServiceLevelObjectiveSliSpecificationTimeSliceArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveSliSpecificationTimeSlicePtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput() ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput
	ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput
}

type serviceLevelObjectiveSliSpecificationTimeSlicePtrType ServiceLevelObjectiveSliSpecificationTimeSliceArgs

func ServiceLevelObjectiveSliSpecificationTimeSlicePtr(v *ServiceLevelObjectiveSliSpecificationTimeSliceArgs) ServiceLevelObjectiveSliSpecificationTimeSlicePtrInput {
	return (*serviceLevelObjectiveSliSpecificationTimeSlicePtrType)(v)
}

func (*serviceLevelObjectiveSliSpecificationTimeSlicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSlice)(nil)).Elem()
}

func (i *serviceLevelObjectiveSliSpecificationTimeSlicePtrType) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput() ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveSliSpecificationTimeSlicePtrType) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSlice)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceOutput() ServiceLevelObjectiveSliSpecificationTimeSliceOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput() ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return o.ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveSliSpecificationTimeSlice) *ServiceLevelObjectiveSliSpecificationTimeSlice {
		return &v
	}).(ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput)
}

// The comparator used to compare the SLI value to the threshold. Valid values are `>`, `>=`, `<`, `<=`.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) Comparator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSlice) string { return v.Comparator }).(pulumi.StringOutput)
}

// A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) Query() ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSlice) ServiceLevelObjectiveSliSpecificationTimeSliceQuery {
		return v.Query
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput)
}

// The interval used when querying data, which defines the size of a time slice. Valid values are `60`, `300`. Defaults to `300`.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) QueryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSlice) *int { return v.QueryIntervalSeconds }).(pulumi.IntPtrOutput)
}

// The threshold value to which each SLI value will be compared.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSlice) float64 { return v.Threshold }).(pulumi.Float64Output)
}

type ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSlice)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput() ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSlicePtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) Elem() ServiceLevelObjectiveSliSpecificationTimeSliceOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSlice) ServiceLevelObjectiveSliSpecificationTimeSlice {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveSliSpecificationTimeSlice
		return ret
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceOutput)
}

// The comparator used to compare the SLI value to the threshold. Valid values are `>`, `>=`, `<`, `<=`.
func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) Comparator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSlice) *string {
		if v == nil {
			return nil
		}
		return &v.Comparator
	}).(pulumi.StringPtrOutput)
}

// A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) Query() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSlice) *ServiceLevelObjectiveSliSpecificationTimeSliceQuery {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput)
}

// The interval used when querying data, which defines the size of a time slice. Valid values are `60`, `300`. Defaults to `300`.
func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) QueryIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSlice) *int {
		if v == nil {
			return nil
		}
		return v.QueryIntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The threshold value to which each SLI value will be compared.
func (o ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSlice) *float64 {
		if v == nil {
			return nil
		}
		return &v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQuery struct {
	// A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
	Formula ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula `pulumi:"formula"`
	// A list of data-source-specific queries that are in the formula.
	Queries []ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery `pulumi:"queries"`
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs and ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs{...}
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs struct {
	// A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
	Formula ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaInput `pulumi:"formula"`
	// A list of data-source-specific queries that are in the formula.
	Queries ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayInput `pulumi:"queries"`
}

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQuery)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput)
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput).ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs, ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtr and ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrInput` via:
//
//	        ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput
}

type serviceLevelObjectiveSliSpecificationTimeSliceQueryPtrType ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs

func ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtr(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrInput {
	return (*serviceLevelObjectiveSliSpecificationTimeSliceQueryPtrType)(v)
}

func (*serviceLevelObjectiveSliSpecificationTimeSliceQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQuery)(nil)).Elem()
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return o.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveSliSpecificationTimeSliceQuery) *ServiceLevelObjectiveSliSpecificationTimeSliceQuery {
		return &v
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput)
}

// A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) Formula() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQuery) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula {
		return v.Formula
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput)
}

// A list of data-source-specific queries that are in the formula.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput) Queries() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQuery) []ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery {
		return v.Queries
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) Elem() ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQuery) ServiceLevelObjectiveSliSpecificationTimeSliceQuery {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveSliSpecificationTimeSliceQuery
		return ret
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput)
}

// A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) Formula() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQuery) *ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula {
		if v == nil {
			return nil
		}
		return &v.Formula
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput)
}

// A list of data-source-specific queries that are in the formula.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput) Queries() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQuery) []ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery {
		if v == nil {
			return nil
		}
		return v.Queries
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula struct {
	// The formula string, which is an expression involving named queries.
	FormulaExpression string `pulumi:"formulaExpression"`
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs and ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs{...}
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs struct {
	// The formula string, which is an expression involving named queries.
	FormulaExpression pulumi.StringInput `pulumi:"formulaExpression"`
}

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput)
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput).ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs, ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtr and ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrInput` via:
//
//	        ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput
}

type serviceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrType ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs

func ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtr(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrInput {
	return (*serviceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrType)(v)
}

func (*serviceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula)(nil)).Elem()
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return o.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula) *ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula {
		return &v
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput)
}

// The formula string, which is an expression involving named queries.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput) FormulaExpression() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula) string { return v.FormulaExpression }).(pulumi.StringOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput) Elem() ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula) ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula
		return ret
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput)
}

// The formula string, which is an expression involving named queries.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput) FormulaExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormula) *string {
		if v == nil {
			return nil
		}
		return &v.FormulaExpression
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery struct {
	// A timeseries formula and functions metrics query.
	MetricQuery *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery `pulumi:"metricQuery"`
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs and ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs{...}
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs struct {
	// A timeseries formula and functions metrics query.
	MetricQuery ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput `pulumi:"metricQuery"`
}

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput)
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray and ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray{ ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs{...} }
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray []ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryInput

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput {
	return o
}

// A timeseries formula and functions metrics query.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput) MetricQuery() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery) *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery {
		return v.MetricQuery
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput) Index(i pulumi.IntInput) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery {
		return vs[0].([]ServiceLevelObjectiveSliSpecificationTimeSliceQueryQuery)[vs[1].(int)]
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery struct {
	// The data source for metrics queries. Defaults to `"metrics"`.
	DataSource *string `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name string `pulumi:"name"`
	// The metrics query definition.
	Query string `pulumi:"query"`
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs and ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryInput` via:
//
//	ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs{...}
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs struct {
	// The data source for metrics queries. Defaults to `"metrics"`.
	DataSource pulumi.StringPtrInput `pulumi:"dataSource"`
	// The name of the query for use in formulas.
	Name pulumi.StringInput `pulumi:"name"`
	// The metrics query definition.
	Query pulumi.StringInput `pulumi:"query"`
}

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery)(nil)).Elem()
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput)
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput).ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput is an input type that accepts ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs, ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtr and ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput` via:
//
//	        ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput
	ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput
}

type serviceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrType ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs

func ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtr(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput {
	return (*serviceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrType)(v)
}

func (*serviceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery)(nil)).Elem()
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return i.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrType) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return o.ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery {
		return &v
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput)
}

// The data source for metrics queries. Defaults to `"metrics"`.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) *string {
		return v.DataSource
	}).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) string { return v.Name }).(pulumi.StringOutput)
}

// The metrics query definition.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) string { return v.Query }).(pulumi.StringOutput)
}

type ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery)(nil)).Elem()
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) ToServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput {
	return o
}

func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) Elem() ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery
		return ret
	}).(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput)
}

// The data source for metrics queries. Defaults to `"metrics"`.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) DataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(pulumi.StringPtrOutput)
}

// The name of the query for use in formulas.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The metrics query definition.
func (o ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelObjectiveThreshold struct {
	// The objective's target in `(0,100)`.
	Target float64 `pulumi:"target"`
	// A string representation of the target that indicates its precision. It uses trailing zeros to show significant decimal places (e.g. `98.00`).
	TargetDisplay *string `pulumi:"targetDisplay"`
	// The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.
	Timeframe string `pulumi:"timeframe"`
	// The objective's warning value in `(0,100)`. This must be greater than the target value.
	Warning *float64 `pulumi:"warning"`
	// A string representation of the warning target (see the description of the targetDisplay field for details).
	WarningDisplay *string `pulumi:"warningDisplay"`
}

// ServiceLevelObjectiveThresholdInput is an input type that accepts ServiceLevelObjectiveThresholdArgs and ServiceLevelObjectiveThresholdOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveThresholdInput` via:
//
//	ServiceLevelObjectiveThresholdArgs{...}
type ServiceLevelObjectiveThresholdInput interface {
	pulumi.Input

	ToServiceLevelObjectiveThresholdOutput() ServiceLevelObjectiveThresholdOutput
	ToServiceLevelObjectiveThresholdOutputWithContext(context.Context) ServiceLevelObjectiveThresholdOutput
}

type ServiceLevelObjectiveThresholdArgs struct {
	// The objective's target in `(0,100)`.
	Target pulumi.Float64Input `pulumi:"target"`
	// A string representation of the target that indicates its precision. It uses trailing zeros to show significant decimal places (e.g. `98.00`).
	TargetDisplay pulumi.StringPtrInput `pulumi:"targetDisplay"`
	// The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.
	Timeframe pulumi.StringInput `pulumi:"timeframe"`
	// The objective's warning value in `(0,100)`. This must be greater than the target value.
	Warning pulumi.Float64PtrInput `pulumi:"warning"`
	// A string representation of the warning target (see the description of the targetDisplay field for details).
	WarningDisplay pulumi.StringPtrInput `pulumi:"warningDisplay"`
}

func (ServiceLevelObjectiveThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveThreshold)(nil)).Elem()
}

func (i ServiceLevelObjectiveThresholdArgs) ToServiceLevelObjectiveThresholdOutput() ServiceLevelObjectiveThresholdOutput {
	return i.ToServiceLevelObjectiveThresholdOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveThresholdArgs) ToServiceLevelObjectiveThresholdOutputWithContext(ctx context.Context) ServiceLevelObjectiveThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveThresholdOutput)
}

// ServiceLevelObjectiveThresholdArrayInput is an input type that accepts ServiceLevelObjectiveThresholdArray and ServiceLevelObjectiveThresholdArrayOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveThresholdArrayInput` via:
//
//	ServiceLevelObjectiveThresholdArray{ ServiceLevelObjectiveThresholdArgs{...} }
type ServiceLevelObjectiveThresholdArrayInput interface {
	pulumi.Input

	ToServiceLevelObjectiveThresholdArrayOutput() ServiceLevelObjectiveThresholdArrayOutput
	ToServiceLevelObjectiveThresholdArrayOutputWithContext(context.Context) ServiceLevelObjectiveThresholdArrayOutput
}

type ServiceLevelObjectiveThresholdArray []ServiceLevelObjectiveThresholdInput

func (ServiceLevelObjectiveThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLevelObjectiveThreshold)(nil)).Elem()
}

func (i ServiceLevelObjectiveThresholdArray) ToServiceLevelObjectiveThresholdArrayOutput() ServiceLevelObjectiveThresholdArrayOutput {
	return i.ToServiceLevelObjectiveThresholdArrayOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveThresholdArray) ToServiceLevelObjectiveThresholdArrayOutputWithContext(ctx context.Context) ServiceLevelObjectiveThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveThresholdArrayOutput)
}

type ServiceLevelObjectiveThresholdOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveThreshold)(nil)).Elem()
}

func (o ServiceLevelObjectiveThresholdOutput) ToServiceLevelObjectiveThresholdOutput() ServiceLevelObjectiveThresholdOutput {
	return o
}

func (o ServiceLevelObjectiveThresholdOutput) ToServiceLevelObjectiveThresholdOutputWithContext(ctx context.Context) ServiceLevelObjectiveThresholdOutput {
	return o
}

// The objective's target in `(0,100)`.
func (o ServiceLevelObjectiveThresholdOutput) Target() pulumi.Float64Output {
	return o.ApplyT(func(v ServiceLevelObjectiveThreshold) float64 { return v.Target }).(pulumi.Float64Output)
}

// A string representation of the target that indicates its precision. It uses trailing zeros to show significant decimal places (e.g. `98.00`).
func (o ServiceLevelObjectiveThresholdOutput) TargetDisplay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveThreshold) *string { return v.TargetDisplay }).(pulumi.StringPtrOutput)
}

// The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.
func (o ServiceLevelObjectiveThresholdOutput) Timeframe() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveThreshold) string { return v.Timeframe }).(pulumi.StringOutput)
}

// The objective's warning value in `(0,100)`. This must be greater than the target value.
func (o ServiceLevelObjectiveThresholdOutput) Warning() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveThreshold) *float64 { return v.Warning }).(pulumi.Float64PtrOutput)
}

// A string representation of the warning target (see the description of the targetDisplay field for details).
func (o ServiceLevelObjectiveThresholdOutput) WarningDisplay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveThreshold) *string { return v.WarningDisplay }).(pulumi.StringPtrOutput)
}

type ServiceLevelObjectiveThresholdArrayOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLevelObjectiveThreshold)(nil)).Elem()
}

func (o ServiceLevelObjectiveThresholdArrayOutput) ToServiceLevelObjectiveThresholdArrayOutput() ServiceLevelObjectiveThresholdArrayOutput {
	return o
}

func (o ServiceLevelObjectiveThresholdArrayOutput) ToServiceLevelObjectiveThresholdArrayOutputWithContext(ctx context.Context) ServiceLevelObjectiveThresholdArrayOutput {
	return o
}

func (o ServiceLevelObjectiveThresholdArrayOutput) Index(i pulumi.IntInput) ServiceLevelObjectiveThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceLevelObjectiveThreshold {
		return vs[0].([]ServiceLevelObjectiveThreshold)[vs[1].(int)]
	}).(ServiceLevelObjectiveThresholdOutput)
}

type SpansMetricCompute struct {
	// The type of aggregation to use. This field can't be updated after creation.
	AggregationType string `pulumi:"aggregationType"`
	// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when the `aggregationType` is `distribution`.
	IncludePercentiles *bool `pulumi:"includePercentiles"`
	// The path to the value the span-based metric will aggregate on (only used if the aggregation type is a "distribution"). This field can't be updated after creation.
	Path *string `pulumi:"path"`
}

// SpansMetricComputeInput is an input type that accepts SpansMetricComputeArgs and SpansMetricComputeOutput values.
// You can construct a concrete instance of `SpansMetricComputeInput` via:
//
//	SpansMetricComputeArgs{...}
type SpansMetricComputeInput interface {
	pulumi.Input

	ToSpansMetricComputeOutput() SpansMetricComputeOutput
	ToSpansMetricComputeOutputWithContext(context.Context) SpansMetricComputeOutput
}

type SpansMetricComputeArgs struct {
	// The type of aggregation to use. This field can't be updated after creation.
	AggregationType pulumi.StringInput `pulumi:"aggregationType"`
	// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when the `aggregationType` is `distribution`.
	IncludePercentiles pulumi.BoolPtrInput `pulumi:"includePercentiles"`
	// The path to the value the span-based metric will aggregate on (only used if the aggregation type is a "distribution"). This field can't be updated after creation.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (SpansMetricComputeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricCompute)(nil)).Elem()
}

func (i SpansMetricComputeArgs) ToSpansMetricComputeOutput() SpansMetricComputeOutput {
	return i.ToSpansMetricComputeOutputWithContext(context.Background())
}

func (i SpansMetricComputeArgs) ToSpansMetricComputeOutputWithContext(ctx context.Context) SpansMetricComputeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricComputeOutput)
}

func (i SpansMetricComputeArgs) ToSpansMetricComputePtrOutput() SpansMetricComputePtrOutput {
	return i.ToSpansMetricComputePtrOutputWithContext(context.Background())
}

func (i SpansMetricComputeArgs) ToSpansMetricComputePtrOutputWithContext(ctx context.Context) SpansMetricComputePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricComputeOutput).ToSpansMetricComputePtrOutputWithContext(ctx)
}

// SpansMetricComputePtrInput is an input type that accepts SpansMetricComputeArgs, SpansMetricComputePtr and SpansMetricComputePtrOutput values.
// You can construct a concrete instance of `SpansMetricComputePtrInput` via:
//
//	        SpansMetricComputeArgs{...}
//
//	or:
//
//	        nil
type SpansMetricComputePtrInput interface {
	pulumi.Input

	ToSpansMetricComputePtrOutput() SpansMetricComputePtrOutput
	ToSpansMetricComputePtrOutputWithContext(context.Context) SpansMetricComputePtrOutput
}

type spansMetricComputePtrType SpansMetricComputeArgs

func SpansMetricComputePtr(v *SpansMetricComputeArgs) SpansMetricComputePtrInput {
	return (*spansMetricComputePtrType)(v)
}

func (*spansMetricComputePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpansMetricCompute)(nil)).Elem()
}

func (i *spansMetricComputePtrType) ToSpansMetricComputePtrOutput() SpansMetricComputePtrOutput {
	return i.ToSpansMetricComputePtrOutputWithContext(context.Background())
}

func (i *spansMetricComputePtrType) ToSpansMetricComputePtrOutputWithContext(ctx context.Context) SpansMetricComputePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricComputePtrOutput)
}

type SpansMetricComputeOutput struct{ *pulumi.OutputState }

func (SpansMetricComputeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricCompute)(nil)).Elem()
}

func (o SpansMetricComputeOutput) ToSpansMetricComputeOutput() SpansMetricComputeOutput {
	return o
}

func (o SpansMetricComputeOutput) ToSpansMetricComputeOutputWithContext(ctx context.Context) SpansMetricComputeOutput {
	return o
}

func (o SpansMetricComputeOutput) ToSpansMetricComputePtrOutput() SpansMetricComputePtrOutput {
	return o.ToSpansMetricComputePtrOutputWithContext(context.Background())
}

func (o SpansMetricComputeOutput) ToSpansMetricComputePtrOutputWithContext(ctx context.Context) SpansMetricComputePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpansMetricCompute) *SpansMetricCompute {
		return &v
	}).(SpansMetricComputePtrOutput)
}

// The type of aggregation to use. This field can't be updated after creation.
func (o SpansMetricComputeOutput) AggregationType() pulumi.StringOutput {
	return o.ApplyT(func(v SpansMetricCompute) string { return v.AggregationType }).(pulumi.StringOutput)
}

// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when the `aggregationType` is `distribution`.
func (o SpansMetricComputeOutput) IncludePercentiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpansMetricCompute) *bool { return v.IncludePercentiles }).(pulumi.BoolPtrOutput)
}

// The path to the value the span-based metric will aggregate on (only used if the aggregation type is a "distribution"). This field can't be updated after creation.
func (o SpansMetricComputeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpansMetricCompute) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type SpansMetricComputePtrOutput struct{ *pulumi.OutputState }

func (SpansMetricComputePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpansMetricCompute)(nil)).Elem()
}

func (o SpansMetricComputePtrOutput) ToSpansMetricComputePtrOutput() SpansMetricComputePtrOutput {
	return o
}

func (o SpansMetricComputePtrOutput) ToSpansMetricComputePtrOutputWithContext(ctx context.Context) SpansMetricComputePtrOutput {
	return o
}

func (o SpansMetricComputePtrOutput) Elem() SpansMetricComputeOutput {
	return o.ApplyT(func(v *SpansMetricCompute) SpansMetricCompute {
		if v != nil {
			return *v
		}
		var ret SpansMetricCompute
		return ret
	}).(SpansMetricComputeOutput)
}

// The type of aggregation to use. This field can't be updated after creation.
func (o SpansMetricComputePtrOutput) AggregationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpansMetricCompute) *string {
		if v == nil {
			return nil
		}
		return &v.AggregationType
	}).(pulumi.StringPtrOutput)
}

// Toggle to include or exclude percentile aggregations for distribution metrics. Only present when the `aggregationType` is `distribution`.
func (o SpansMetricComputePtrOutput) IncludePercentiles() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpansMetricCompute) *bool {
		if v == nil {
			return nil
		}
		return v.IncludePercentiles
	}).(pulumi.BoolPtrOutput)
}

// The path to the value the span-based metric will aggregate on (only used if the aggregation type is a "distribution"). This field can't be updated after creation.
func (o SpansMetricComputePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpansMetricCompute) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type SpansMetricFilter struct {
	// The search query - following the span search syntax. Defaults to `"*"`.
	Query *string `pulumi:"query"`
}

// SpansMetricFilterInput is an input type that accepts SpansMetricFilterArgs and SpansMetricFilterOutput values.
// You can construct a concrete instance of `SpansMetricFilterInput` via:
//
//	SpansMetricFilterArgs{...}
type SpansMetricFilterInput interface {
	pulumi.Input

	ToSpansMetricFilterOutput() SpansMetricFilterOutput
	ToSpansMetricFilterOutputWithContext(context.Context) SpansMetricFilterOutput
}

type SpansMetricFilterArgs struct {
	// The search query - following the span search syntax. Defaults to `"*"`.
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (SpansMetricFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricFilter)(nil)).Elem()
}

func (i SpansMetricFilterArgs) ToSpansMetricFilterOutput() SpansMetricFilterOutput {
	return i.ToSpansMetricFilterOutputWithContext(context.Background())
}

func (i SpansMetricFilterArgs) ToSpansMetricFilterOutputWithContext(ctx context.Context) SpansMetricFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricFilterOutput)
}

func (i SpansMetricFilterArgs) ToSpansMetricFilterPtrOutput() SpansMetricFilterPtrOutput {
	return i.ToSpansMetricFilterPtrOutputWithContext(context.Background())
}

func (i SpansMetricFilterArgs) ToSpansMetricFilterPtrOutputWithContext(ctx context.Context) SpansMetricFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricFilterOutput).ToSpansMetricFilterPtrOutputWithContext(ctx)
}

// SpansMetricFilterPtrInput is an input type that accepts SpansMetricFilterArgs, SpansMetricFilterPtr and SpansMetricFilterPtrOutput values.
// You can construct a concrete instance of `SpansMetricFilterPtrInput` via:
//
//	        SpansMetricFilterArgs{...}
//
//	or:
//
//	        nil
type SpansMetricFilterPtrInput interface {
	pulumi.Input

	ToSpansMetricFilterPtrOutput() SpansMetricFilterPtrOutput
	ToSpansMetricFilterPtrOutputWithContext(context.Context) SpansMetricFilterPtrOutput
}

type spansMetricFilterPtrType SpansMetricFilterArgs

func SpansMetricFilterPtr(v *SpansMetricFilterArgs) SpansMetricFilterPtrInput {
	return (*spansMetricFilterPtrType)(v)
}

func (*spansMetricFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpansMetricFilter)(nil)).Elem()
}

func (i *spansMetricFilterPtrType) ToSpansMetricFilterPtrOutput() SpansMetricFilterPtrOutput {
	return i.ToSpansMetricFilterPtrOutputWithContext(context.Background())
}

func (i *spansMetricFilterPtrType) ToSpansMetricFilterPtrOutputWithContext(ctx context.Context) SpansMetricFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricFilterPtrOutput)
}

type SpansMetricFilterOutput struct{ *pulumi.OutputState }

func (SpansMetricFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricFilter)(nil)).Elem()
}

func (o SpansMetricFilterOutput) ToSpansMetricFilterOutput() SpansMetricFilterOutput {
	return o
}

func (o SpansMetricFilterOutput) ToSpansMetricFilterOutputWithContext(ctx context.Context) SpansMetricFilterOutput {
	return o
}

func (o SpansMetricFilterOutput) ToSpansMetricFilterPtrOutput() SpansMetricFilterPtrOutput {
	return o.ToSpansMetricFilterPtrOutputWithContext(context.Background())
}

func (o SpansMetricFilterOutput) ToSpansMetricFilterPtrOutputWithContext(ctx context.Context) SpansMetricFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpansMetricFilter) *SpansMetricFilter {
		return &v
	}).(SpansMetricFilterPtrOutput)
}

// The search query - following the span search syntax. Defaults to `"*"`.
func (o SpansMetricFilterOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpansMetricFilter) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type SpansMetricFilterPtrOutput struct{ *pulumi.OutputState }

func (SpansMetricFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpansMetricFilter)(nil)).Elem()
}

func (o SpansMetricFilterPtrOutput) ToSpansMetricFilterPtrOutput() SpansMetricFilterPtrOutput {
	return o
}

func (o SpansMetricFilterPtrOutput) ToSpansMetricFilterPtrOutputWithContext(ctx context.Context) SpansMetricFilterPtrOutput {
	return o
}

func (o SpansMetricFilterPtrOutput) Elem() SpansMetricFilterOutput {
	return o.ApplyT(func(v *SpansMetricFilter) SpansMetricFilter {
		if v != nil {
			return *v
		}
		var ret SpansMetricFilter
		return ret
	}).(SpansMetricFilterOutput)
}

// The search query - following the span search syntax. Defaults to `"*"`.
func (o SpansMetricFilterPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpansMetricFilter) *string {
		if v == nil {
			return nil
		}
		return v.Query
	}).(pulumi.StringPtrOutput)
}

type SpansMetricGroupBy struct {
	// The path to the value the span-based metric will be aggregated over.
	Path string `pulumi:"path"`
	// Eventual name of the tag that gets created. By default, the path attribute is used as the tag name.
	TagName *string `pulumi:"tagName"`
}

// SpansMetricGroupByInput is an input type that accepts SpansMetricGroupByArgs and SpansMetricGroupByOutput values.
// You can construct a concrete instance of `SpansMetricGroupByInput` via:
//
//	SpansMetricGroupByArgs{...}
type SpansMetricGroupByInput interface {
	pulumi.Input

	ToSpansMetricGroupByOutput() SpansMetricGroupByOutput
	ToSpansMetricGroupByOutputWithContext(context.Context) SpansMetricGroupByOutput
}

type SpansMetricGroupByArgs struct {
	// The path to the value the span-based metric will be aggregated over.
	Path pulumi.StringInput `pulumi:"path"`
	// Eventual name of the tag that gets created. By default, the path attribute is used as the tag name.
	TagName pulumi.StringPtrInput `pulumi:"tagName"`
}

func (SpansMetricGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricGroupBy)(nil)).Elem()
}

func (i SpansMetricGroupByArgs) ToSpansMetricGroupByOutput() SpansMetricGroupByOutput {
	return i.ToSpansMetricGroupByOutputWithContext(context.Background())
}

func (i SpansMetricGroupByArgs) ToSpansMetricGroupByOutputWithContext(ctx context.Context) SpansMetricGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricGroupByOutput)
}

// SpansMetricGroupByArrayInput is an input type that accepts SpansMetricGroupByArray and SpansMetricGroupByArrayOutput values.
// You can construct a concrete instance of `SpansMetricGroupByArrayInput` via:
//
//	SpansMetricGroupByArray{ SpansMetricGroupByArgs{...} }
type SpansMetricGroupByArrayInput interface {
	pulumi.Input

	ToSpansMetricGroupByArrayOutput() SpansMetricGroupByArrayOutput
	ToSpansMetricGroupByArrayOutputWithContext(context.Context) SpansMetricGroupByArrayOutput
}

type SpansMetricGroupByArray []SpansMetricGroupByInput

func (SpansMetricGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpansMetricGroupBy)(nil)).Elem()
}

func (i SpansMetricGroupByArray) ToSpansMetricGroupByArrayOutput() SpansMetricGroupByArrayOutput {
	return i.ToSpansMetricGroupByArrayOutputWithContext(context.Background())
}

func (i SpansMetricGroupByArray) ToSpansMetricGroupByArrayOutputWithContext(ctx context.Context) SpansMetricGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpansMetricGroupByArrayOutput)
}

type SpansMetricGroupByOutput struct{ *pulumi.OutputState }

func (SpansMetricGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpansMetricGroupBy)(nil)).Elem()
}

func (o SpansMetricGroupByOutput) ToSpansMetricGroupByOutput() SpansMetricGroupByOutput {
	return o
}

func (o SpansMetricGroupByOutput) ToSpansMetricGroupByOutputWithContext(ctx context.Context) SpansMetricGroupByOutput {
	return o
}

// The path to the value the span-based metric will be aggregated over.
func (o SpansMetricGroupByOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v SpansMetricGroupBy) string { return v.Path }).(pulumi.StringOutput)
}

// Eventual name of the tag that gets created. By default, the path attribute is used as the tag name.
func (o SpansMetricGroupByOutput) TagName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpansMetricGroupBy) *string { return v.TagName }).(pulumi.StringPtrOutput)
}

type SpansMetricGroupByArrayOutput struct{ *pulumi.OutputState }

func (SpansMetricGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpansMetricGroupBy)(nil)).Elem()
}

func (o SpansMetricGroupByArrayOutput) ToSpansMetricGroupByArrayOutput() SpansMetricGroupByArrayOutput {
	return o
}

func (o SpansMetricGroupByArrayOutput) ToSpansMetricGroupByArrayOutputWithContext(ctx context.Context) SpansMetricGroupByArrayOutput {
	return o
}

func (o SpansMetricGroupByArrayOutput) Index(i pulumi.IntInput) SpansMetricGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpansMetricGroupBy {
		return vs[0].([]SpansMetricGroupBy)[vs[1].(int)]
	}).(SpansMetricGroupByOutput)
}

type SyntheticsGlobalVariableOptions struct {
	// Parameters needed for MFA/TOTP.
	TotpParameters *SyntheticsGlobalVariableOptionsTotpParameters `pulumi:"totpParameters"`
}

// SyntheticsGlobalVariableOptionsInput is an input type that accepts SyntheticsGlobalVariableOptionsArgs and SyntheticsGlobalVariableOptionsOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableOptionsInput` via:
//
//	SyntheticsGlobalVariableOptionsArgs{...}
type SyntheticsGlobalVariableOptionsInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableOptionsOutput() SyntheticsGlobalVariableOptionsOutput
	ToSyntheticsGlobalVariableOptionsOutputWithContext(context.Context) SyntheticsGlobalVariableOptionsOutput
}

type SyntheticsGlobalVariableOptionsArgs struct {
	// Parameters needed for MFA/TOTP.
	TotpParameters SyntheticsGlobalVariableOptionsTotpParametersPtrInput `pulumi:"totpParameters"`
}

func (SyntheticsGlobalVariableOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableOptions)(nil)).Elem()
}

func (i SyntheticsGlobalVariableOptionsArgs) ToSyntheticsGlobalVariableOptionsOutput() SyntheticsGlobalVariableOptionsOutput {
	return i.ToSyntheticsGlobalVariableOptionsOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableOptionsArgs) ToSyntheticsGlobalVariableOptionsOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsOutput)
}

func (i SyntheticsGlobalVariableOptionsArgs) ToSyntheticsGlobalVariableOptionsPtrOutput() SyntheticsGlobalVariableOptionsPtrOutput {
	return i.ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableOptionsArgs) ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsOutput).ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(ctx)
}

// SyntheticsGlobalVariableOptionsPtrInput is an input type that accepts SyntheticsGlobalVariableOptionsArgs, SyntheticsGlobalVariableOptionsPtr and SyntheticsGlobalVariableOptionsPtrOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableOptionsPtrInput` via:
//
//	        SyntheticsGlobalVariableOptionsArgs{...}
//
//	or:
//
//	        nil
type SyntheticsGlobalVariableOptionsPtrInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableOptionsPtrOutput() SyntheticsGlobalVariableOptionsPtrOutput
	ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(context.Context) SyntheticsGlobalVariableOptionsPtrOutput
}

type syntheticsGlobalVariableOptionsPtrType SyntheticsGlobalVariableOptionsArgs

func SyntheticsGlobalVariableOptionsPtr(v *SyntheticsGlobalVariableOptionsArgs) SyntheticsGlobalVariableOptionsPtrInput {
	return (*syntheticsGlobalVariableOptionsPtrType)(v)
}

func (*syntheticsGlobalVariableOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableOptions)(nil)).Elem()
}

func (i *syntheticsGlobalVariableOptionsPtrType) ToSyntheticsGlobalVariableOptionsPtrOutput() SyntheticsGlobalVariableOptionsPtrOutput {
	return i.ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(context.Background())
}

func (i *syntheticsGlobalVariableOptionsPtrType) ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsPtrOutput)
}

type SyntheticsGlobalVariableOptionsOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableOptions)(nil)).Elem()
}

func (o SyntheticsGlobalVariableOptionsOutput) ToSyntheticsGlobalVariableOptionsOutput() SyntheticsGlobalVariableOptionsOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsOutput) ToSyntheticsGlobalVariableOptionsOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsOutput) ToSyntheticsGlobalVariableOptionsPtrOutput() SyntheticsGlobalVariableOptionsPtrOutput {
	return o.ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(context.Background())
}

func (o SyntheticsGlobalVariableOptionsOutput) ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsGlobalVariableOptions) *SyntheticsGlobalVariableOptions {
		return &v
	}).(SyntheticsGlobalVariableOptionsPtrOutput)
}

// Parameters needed for MFA/TOTP.
func (o SyntheticsGlobalVariableOptionsOutput) TotpParameters() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableOptions) *SyntheticsGlobalVariableOptionsTotpParameters {
		return v.TotpParameters
	}).(SyntheticsGlobalVariableOptionsTotpParametersPtrOutput)
}

type SyntheticsGlobalVariableOptionsPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableOptions)(nil)).Elem()
}

func (o SyntheticsGlobalVariableOptionsPtrOutput) ToSyntheticsGlobalVariableOptionsPtrOutput() SyntheticsGlobalVariableOptionsPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsPtrOutput) ToSyntheticsGlobalVariableOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsPtrOutput) Elem() SyntheticsGlobalVariableOptionsOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableOptions) SyntheticsGlobalVariableOptions {
		if v != nil {
			return *v
		}
		var ret SyntheticsGlobalVariableOptions
		return ret
	}).(SyntheticsGlobalVariableOptionsOutput)
}

// Parameters needed for MFA/TOTP.
func (o SyntheticsGlobalVariableOptionsPtrOutput) TotpParameters() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableOptions) *SyntheticsGlobalVariableOptionsTotpParameters {
		if v == nil {
			return nil
		}
		return v.TotpParameters
	}).(SyntheticsGlobalVariableOptionsTotpParametersPtrOutput)
}

type SyntheticsGlobalVariableOptionsTotpParameters struct {
	// Number of digits for the OTP. Value must be between 4 and 10.
	Digits int `pulumi:"digits"`
	// Interval for which to refresh the token (in seconds). Value must be between 0 and 999.
	RefreshInterval int `pulumi:"refreshInterval"`
}

// SyntheticsGlobalVariableOptionsTotpParametersInput is an input type that accepts SyntheticsGlobalVariableOptionsTotpParametersArgs and SyntheticsGlobalVariableOptionsTotpParametersOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableOptionsTotpParametersInput` via:
//
//	SyntheticsGlobalVariableOptionsTotpParametersArgs{...}
type SyntheticsGlobalVariableOptionsTotpParametersInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableOptionsTotpParametersOutput() SyntheticsGlobalVariableOptionsTotpParametersOutput
	ToSyntheticsGlobalVariableOptionsTotpParametersOutputWithContext(context.Context) SyntheticsGlobalVariableOptionsTotpParametersOutput
}

type SyntheticsGlobalVariableOptionsTotpParametersArgs struct {
	// Number of digits for the OTP. Value must be between 4 and 10.
	Digits pulumi.IntInput `pulumi:"digits"`
	// Interval for which to refresh the token (in seconds). Value must be between 0 and 999.
	RefreshInterval pulumi.IntInput `pulumi:"refreshInterval"`
}

func (SyntheticsGlobalVariableOptionsTotpParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableOptionsTotpParameters)(nil)).Elem()
}

func (i SyntheticsGlobalVariableOptionsTotpParametersArgs) ToSyntheticsGlobalVariableOptionsTotpParametersOutput() SyntheticsGlobalVariableOptionsTotpParametersOutput {
	return i.ToSyntheticsGlobalVariableOptionsTotpParametersOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableOptionsTotpParametersArgs) ToSyntheticsGlobalVariableOptionsTotpParametersOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsTotpParametersOutput)
}

func (i SyntheticsGlobalVariableOptionsTotpParametersArgs) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutput() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return i.ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableOptionsTotpParametersArgs) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsTotpParametersOutput).ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(ctx)
}

// SyntheticsGlobalVariableOptionsTotpParametersPtrInput is an input type that accepts SyntheticsGlobalVariableOptionsTotpParametersArgs, SyntheticsGlobalVariableOptionsTotpParametersPtr and SyntheticsGlobalVariableOptionsTotpParametersPtrOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableOptionsTotpParametersPtrInput` via:
//
//	        SyntheticsGlobalVariableOptionsTotpParametersArgs{...}
//
//	or:
//
//	        nil
type SyntheticsGlobalVariableOptionsTotpParametersPtrInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutput() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput
	ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(context.Context) SyntheticsGlobalVariableOptionsTotpParametersPtrOutput
}

type syntheticsGlobalVariableOptionsTotpParametersPtrType SyntheticsGlobalVariableOptionsTotpParametersArgs

func SyntheticsGlobalVariableOptionsTotpParametersPtr(v *SyntheticsGlobalVariableOptionsTotpParametersArgs) SyntheticsGlobalVariableOptionsTotpParametersPtrInput {
	return (*syntheticsGlobalVariableOptionsTotpParametersPtrType)(v)
}

func (*syntheticsGlobalVariableOptionsTotpParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableOptionsTotpParameters)(nil)).Elem()
}

func (i *syntheticsGlobalVariableOptionsTotpParametersPtrType) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutput() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return i.ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(context.Background())
}

func (i *syntheticsGlobalVariableOptionsTotpParametersPtrType) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableOptionsTotpParametersPtrOutput)
}

type SyntheticsGlobalVariableOptionsTotpParametersOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableOptionsTotpParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableOptionsTotpParameters)(nil)).Elem()
}

func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) ToSyntheticsGlobalVariableOptionsTotpParametersOutput() SyntheticsGlobalVariableOptionsTotpParametersOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) ToSyntheticsGlobalVariableOptionsTotpParametersOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutput() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o.ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(context.Background())
}

func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsGlobalVariableOptionsTotpParameters) *SyntheticsGlobalVariableOptionsTotpParameters {
		return &v
	}).(SyntheticsGlobalVariableOptionsTotpParametersPtrOutput)
}

// Number of digits for the OTP. Value must be between 4 and 10.
func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) Digits() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableOptionsTotpParameters) int { return v.Digits }).(pulumi.IntOutput)
}

// Interval for which to refresh the token (in seconds). Value must be between 0 and 999.
func (o SyntheticsGlobalVariableOptionsTotpParametersOutput) RefreshInterval() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableOptionsTotpParameters) int { return v.RefreshInterval }).(pulumi.IntOutput)
}

type SyntheticsGlobalVariableOptionsTotpParametersPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableOptionsTotpParameters)(nil)).Elem()
}

func (o SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutput() SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) ToSyntheticsGlobalVariableOptionsTotpParametersPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableOptionsTotpParametersPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) Elem() SyntheticsGlobalVariableOptionsTotpParametersOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableOptionsTotpParameters) SyntheticsGlobalVariableOptionsTotpParameters {
		if v != nil {
			return *v
		}
		var ret SyntheticsGlobalVariableOptionsTotpParameters
		return ret
	}).(SyntheticsGlobalVariableOptionsTotpParametersOutput)
}

// Number of digits for the OTP. Value must be between 4 and 10.
func (o SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) Digits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableOptionsTotpParameters) *int {
		if v == nil {
			return nil
		}
		return &v.Digits
	}).(pulumi.IntPtrOutput)
}

// Interval for which to refresh the token (in seconds). Value must be between 0 and 999.
func (o SyntheticsGlobalVariableOptionsTotpParametersPtrOutput) RefreshInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableOptionsTotpParameters) *int {
		if v == nil {
			return nil
		}
		return &v.RefreshInterval
	}).(pulumi.IntPtrOutput)
}

type SyntheticsGlobalVariableParseTestOptions struct {
	// Required when type = `httpHeader`. Defines the header to use to extract the value
	Field *string `pulumi:"field"`
	// When type is `localVariable`, name of the local variable to use to extract the value.
	LocalVariableName *string                                         `pulumi:"localVariableName"`
	Parser            *SyntheticsGlobalVariableParseTestOptionsParser `pulumi:"parser"`
	// Defines the source to use to extract the value. Valid values are `httpBody`, `httpHeader`, `httpStatusCode`, `localVariable`.
	Type string `pulumi:"type"`
}

// SyntheticsGlobalVariableParseTestOptionsInput is an input type that accepts SyntheticsGlobalVariableParseTestOptionsArgs and SyntheticsGlobalVariableParseTestOptionsOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableParseTestOptionsInput` via:
//
//	SyntheticsGlobalVariableParseTestOptionsArgs{...}
type SyntheticsGlobalVariableParseTestOptionsInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableParseTestOptionsOutput() SyntheticsGlobalVariableParseTestOptionsOutput
	ToSyntheticsGlobalVariableParseTestOptionsOutputWithContext(context.Context) SyntheticsGlobalVariableParseTestOptionsOutput
}

type SyntheticsGlobalVariableParseTestOptionsArgs struct {
	// Required when type = `httpHeader`. Defines the header to use to extract the value
	Field pulumi.StringPtrInput `pulumi:"field"`
	// When type is `localVariable`, name of the local variable to use to extract the value.
	LocalVariableName pulumi.StringPtrInput                                  `pulumi:"localVariableName"`
	Parser            SyntheticsGlobalVariableParseTestOptionsParserPtrInput `pulumi:"parser"`
	// Defines the source to use to extract the value. Valid values are `httpBody`, `httpHeader`, `httpStatusCode`, `localVariable`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsGlobalVariableParseTestOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptions)(nil)).Elem()
}

func (i SyntheticsGlobalVariableParseTestOptionsArgs) ToSyntheticsGlobalVariableParseTestOptionsOutput() SyntheticsGlobalVariableParseTestOptionsOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableParseTestOptionsArgs) ToSyntheticsGlobalVariableParseTestOptionsOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsOutput)
}

func (i SyntheticsGlobalVariableParseTestOptionsArgs) ToSyntheticsGlobalVariableParseTestOptionsPtrOutput() SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableParseTestOptionsArgs) ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsOutput).ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(ctx)
}

// SyntheticsGlobalVariableParseTestOptionsPtrInput is an input type that accepts SyntheticsGlobalVariableParseTestOptionsArgs, SyntheticsGlobalVariableParseTestOptionsPtr and SyntheticsGlobalVariableParseTestOptionsPtrOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableParseTestOptionsPtrInput` via:
//
//	        SyntheticsGlobalVariableParseTestOptionsArgs{...}
//
//	or:
//
//	        nil
type SyntheticsGlobalVariableParseTestOptionsPtrInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableParseTestOptionsPtrOutput() SyntheticsGlobalVariableParseTestOptionsPtrOutput
	ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(context.Context) SyntheticsGlobalVariableParseTestOptionsPtrOutput
}

type syntheticsGlobalVariableParseTestOptionsPtrType SyntheticsGlobalVariableParseTestOptionsArgs

func SyntheticsGlobalVariableParseTestOptionsPtr(v *SyntheticsGlobalVariableParseTestOptionsArgs) SyntheticsGlobalVariableParseTestOptionsPtrInput {
	return (*syntheticsGlobalVariableParseTestOptionsPtrType)(v)
}

func (*syntheticsGlobalVariableParseTestOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableParseTestOptions)(nil)).Elem()
}

func (i *syntheticsGlobalVariableParseTestOptionsPtrType) ToSyntheticsGlobalVariableParseTestOptionsPtrOutput() SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(context.Background())
}

func (i *syntheticsGlobalVariableParseTestOptionsPtrType) ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsPtrOutput)
}

type SyntheticsGlobalVariableParseTestOptionsOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableParseTestOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptions)(nil)).Elem()
}

func (o SyntheticsGlobalVariableParseTestOptionsOutput) ToSyntheticsGlobalVariableParseTestOptionsOutput() SyntheticsGlobalVariableParseTestOptionsOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsOutput) ToSyntheticsGlobalVariableParseTestOptionsOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsOutput) ToSyntheticsGlobalVariableParseTestOptionsPtrOutput() SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return o.ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(context.Background())
}

func (o SyntheticsGlobalVariableParseTestOptionsOutput) ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsGlobalVariableParseTestOptions) *SyntheticsGlobalVariableParseTestOptions {
		return &v
	}).(SyntheticsGlobalVariableParseTestOptionsPtrOutput)
}

// Required when type = `httpHeader`. Defines the header to use to extract the value
func (o SyntheticsGlobalVariableParseTestOptionsOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptions) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// When type is `localVariable`, name of the local variable to use to extract the value.
func (o SyntheticsGlobalVariableParseTestOptionsOutput) LocalVariableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptions) *string { return v.LocalVariableName }).(pulumi.StringPtrOutput)
}

func (o SyntheticsGlobalVariableParseTestOptionsOutput) Parser() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptions) *SyntheticsGlobalVariableParseTestOptionsParser {
		return v.Parser
	}).(SyntheticsGlobalVariableParseTestOptionsParserPtrOutput)
}

// Defines the source to use to extract the value. Valid values are `httpBody`, `httpHeader`, `httpStatusCode`, `localVariable`.
func (o SyntheticsGlobalVariableParseTestOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptions) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsGlobalVariableParseTestOptionsPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableParseTestOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableParseTestOptions)(nil)).Elem()
}

func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) ToSyntheticsGlobalVariableParseTestOptionsPtrOutput() SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) ToSyntheticsGlobalVariableParseTestOptionsPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) Elem() SyntheticsGlobalVariableParseTestOptionsOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptions) SyntheticsGlobalVariableParseTestOptions {
		if v != nil {
			return *v
		}
		var ret SyntheticsGlobalVariableParseTestOptions
		return ret
	}).(SyntheticsGlobalVariableParseTestOptionsOutput)
}

// Required when type = `httpHeader`. Defines the header to use to extract the value
func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptions) *string {
		if v == nil {
			return nil
		}
		return v.Field
	}).(pulumi.StringPtrOutput)
}

// When type is `localVariable`, name of the local variable to use to extract the value.
func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) LocalVariableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptions) *string {
		if v == nil {
			return nil
		}
		return v.LocalVariableName
	}).(pulumi.StringPtrOutput)
}

func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) Parser() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptions) *SyntheticsGlobalVariableParseTestOptionsParser {
		if v == nil {
			return nil
		}
		return v.Parser
	}).(SyntheticsGlobalVariableParseTestOptionsParserPtrOutput)
}

// Defines the source to use to extract the value. Valid values are `httpBody`, `httpHeader`, `httpStatusCode`, `localVariable`.
func (o SyntheticsGlobalVariableParseTestOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptions) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type SyntheticsGlobalVariableParseTestOptionsParser struct {
	// Type of parser to extract the value. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
	Type string `pulumi:"type"`
	// Value for the parser to use, required for type `jsonPath` or `regex`.
	Value *string `pulumi:"value"`
}

// SyntheticsGlobalVariableParseTestOptionsParserInput is an input type that accepts SyntheticsGlobalVariableParseTestOptionsParserArgs and SyntheticsGlobalVariableParseTestOptionsParserOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableParseTestOptionsParserInput` via:
//
//	SyntheticsGlobalVariableParseTestOptionsParserArgs{...}
type SyntheticsGlobalVariableParseTestOptionsParserInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableParseTestOptionsParserOutput() SyntheticsGlobalVariableParseTestOptionsParserOutput
	ToSyntheticsGlobalVariableParseTestOptionsParserOutputWithContext(context.Context) SyntheticsGlobalVariableParseTestOptionsParserOutput
}

type SyntheticsGlobalVariableParseTestOptionsParserArgs struct {
	// Type of parser to extract the value. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
	Type pulumi.StringInput `pulumi:"type"`
	// Value for the parser to use, required for type `jsonPath` or `regex`.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SyntheticsGlobalVariableParseTestOptionsParserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsParser)(nil)).Elem()
}

func (i SyntheticsGlobalVariableParseTestOptionsParserArgs) ToSyntheticsGlobalVariableParseTestOptionsParserOutput() SyntheticsGlobalVariableParseTestOptionsParserOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsParserOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableParseTestOptionsParserArgs) ToSyntheticsGlobalVariableParseTestOptionsParserOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsParserOutput)
}

func (i SyntheticsGlobalVariableParseTestOptionsParserArgs) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutput() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(context.Background())
}

func (i SyntheticsGlobalVariableParseTestOptionsParserArgs) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsParserOutput).ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(ctx)
}

// SyntheticsGlobalVariableParseTestOptionsParserPtrInput is an input type that accepts SyntheticsGlobalVariableParseTestOptionsParserArgs, SyntheticsGlobalVariableParseTestOptionsParserPtr and SyntheticsGlobalVariableParseTestOptionsParserPtrOutput values.
// You can construct a concrete instance of `SyntheticsGlobalVariableParseTestOptionsParserPtrInput` via:
//
//	        SyntheticsGlobalVariableParseTestOptionsParserArgs{...}
//
//	or:
//
//	        nil
type SyntheticsGlobalVariableParseTestOptionsParserPtrInput interface {
	pulumi.Input

	ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutput() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput
	ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(context.Context) SyntheticsGlobalVariableParseTestOptionsParserPtrOutput
}

type syntheticsGlobalVariableParseTestOptionsParserPtrType SyntheticsGlobalVariableParseTestOptionsParserArgs

func SyntheticsGlobalVariableParseTestOptionsParserPtr(v *SyntheticsGlobalVariableParseTestOptionsParserArgs) SyntheticsGlobalVariableParseTestOptionsParserPtrInput {
	return (*syntheticsGlobalVariableParseTestOptionsParserPtrType)(v)
}

func (*syntheticsGlobalVariableParseTestOptionsParserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableParseTestOptionsParser)(nil)).Elem()
}

func (i *syntheticsGlobalVariableParseTestOptionsParserPtrType) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutput() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return i.ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(context.Background())
}

func (i *syntheticsGlobalVariableParseTestOptionsParserPtrType) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsGlobalVariableParseTestOptionsParserPtrOutput)
}

type SyntheticsGlobalVariableParseTestOptionsParserOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableParseTestOptionsParserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsParser)(nil)).Elem()
}

func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) ToSyntheticsGlobalVariableParseTestOptionsParserOutput() SyntheticsGlobalVariableParseTestOptionsParserOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) ToSyntheticsGlobalVariableParseTestOptionsParserOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutput() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o.ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(context.Background())
}

func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsGlobalVariableParseTestOptionsParser) *SyntheticsGlobalVariableParseTestOptionsParser {
		return &v
	}).(SyntheticsGlobalVariableParseTestOptionsParserPtrOutput)
}

// Type of parser to extract the value. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptionsParser) string { return v.Type }).(pulumi.StringOutput)
}

// Value for the parser to use, required for type `jsonPath` or `regex`.
func (o SyntheticsGlobalVariableParseTestOptionsParserOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsGlobalVariableParseTestOptionsParser) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SyntheticsGlobalVariableParseTestOptionsParserPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsGlobalVariableParseTestOptionsParser)(nil)).Elem()
}

func (o SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutput() SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) ToSyntheticsGlobalVariableParseTestOptionsParserPtrOutputWithContext(ctx context.Context) SyntheticsGlobalVariableParseTestOptionsParserPtrOutput {
	return o
}

func (o SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) Elem() SyntheticsGlobalVariableParseTestOptionsParserOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptionsParser) SyntheticsGlobalVariableParseTestOptionsParser {
		if v != nil {
			return *v
		}
		var ret SyntheticsGlobalVariableParseTestOptionsParser
		return ret
	}).(SyntheticsGlobalVariableParseTestOptionsParserOutput)
}

// Type of parser to extract the value. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
func (o SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptionsParser) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Value for the parser to use, required for type `jsonPath` or `regex`.
func (o SyntheticsGlobalVariableParseTestOptionsParserPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsGlobalVariableParseTestOptionsParser) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type SyntheticsPrivateLocationMetadata struct {
	// A set of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	//
	// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	RestrictedRoles []string `pulumi:"restrictedRoles"`
}

// SyntheticsPrivateLocationMetadataInput is an input type that accepts SyntheticsPrivateLocationMetadataArgs and SyntheticsPrivateLocationMetadataOutput values.
// You can construct a concrete instance of `SyntheticsPrivateLocationMetadataInput` via:
//
//	SyntheticsPrivateLocationMetadataArgs{...}
type SyntheticsPrivateLocationMetadataInput interface {
	pulumi.Input

	ToSyntheticsPrivateLocationMetadataOutput() SyntheticsPrivateLocationMetadataOutput
	ToSyntheticsPrivateLocationMetadataOutputWithContext(context.Context) SyntheticsPrivateLocationMetadataOutput
}

type SyntheticsPrivateLocationMetadataArgs struct {
	// A set of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	//
	// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	RestrictedRoles pulumi.StringArrayInput `pulumi:"restrictedRoles"`
}

func (SyntheticsPrivateLocationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsPrivateLocationMetadata)(nil)).Elem()
}

func (i SyntheticsPrivateLocationMetadataArgs) ToSyntheticsPrivateLocationMetadataOutput() SyntheticsPrivateLocationMetadataOutput {
	return i.ToSyntheticsPrivateLocationMetadataOutputWithContext(context.Background())
}

func (i SyntheticsPrivateLocationMetadataArgs) ToSyntheticsPrivateLocationMetadataOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsPrivateLocationMetadataOutput)
}

func (i SyntheticsPrivateLocationMetadataArgs) ToSyntheticsPrivateLocationMetadataPtrOutput() SyntheticsPrivateLocationMetadataPtrOutput {
	return i.ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(context.Background())
}

func (i SyntheticsPrivateLocationMetadataArgs) ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsPrivateLocationMetadataOutput).ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(ctx)
}

// SyntheticsPrivateLocationMetadataPtrInput is an input type that accepts SyntheticsPrivateLocationMetadataArgs, SyntheticsPrivateLocationMetadataPtr and SyntheticsPrivateLocationMetadataPtrOutput values.
// You can construct a concrete instance of `SyntheticsPrivateLocationMetadataPtrInput` via:
//
//	        SyntheticsPrivateLocationMetadataArgs{...}
//
//	or:
//
//	        nil
type SyntheticsPrivateLocationMetadataPtrInput interface {
	pulumi.Input

	ToSyntheticsPrivateLocationMetadataPtrOutput() SyntheticsPrivateLocationMetadataPtrOutput
	ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(context.Context) SyntheticsPrivateLocationMetadataPtrOutput
}

type syntheticsPrivateLocationMetadataPtrType SyntheticsPrivateLocationMetadataArgs

func SyntheticsPrivateLocationMetadataPtr(v *SyntheticsPrivateLocationMetadataArgs) SyntheticsPrivateLocationMetadataPtrInput {
	return (*syntheticsPrivateLocationMetadataPtrType)(v)
}

func (*syntheticsPrivateLocationMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsPrivateLocationMetadata)(nil)).Elem()
}

func (i *syntheticsPrivateLocationMetadataPtrType) ToSyntheticsPrivateLocationMetadataPtrOutput() SyntheticsPrivateLocationMetadataPtrOutput {
	return i.ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(context.Background())
}

func (i *syntheticsPrivateLocationMetadataPtrType) ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsPrivateLocationMetadataPtrOutput)
}

type SyntheticsPrivateLocationMetadataOutput struct{ *pulumi.OutputState }

func (SyntheticsPrivateLocationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsPrivateLocationMetadata)(nil)).Elem()
}

func (o SyntheticsPrivateLocationMetadataOutput) ToSyntheticsPrivateLocationMetadataOutput() SyntheticsPrivateLocationMetadataOutput {
	return o
}

func (o SyntheticsPrivateLocationMetadataOutput) ToSyntheticsPrivateLocationMetadataOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataOutput {
	return o
}

func (o SyntheticsPrivateLocationMetadataOutput) ToSyntheticsPrivateLocationMetadataPtrOutput() SyntheticsPrivateLocationMetadataPtrOutput {
	return o.ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(context.Background())
}

func (o SyntheticsPrivateLocationMetadataOutput) ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsPrivateLocationMetadata) *SyntheticsPrivateLocationMetadata {
		return &v
	}).(SyntheticsPrivateLocationMetadataPtrOutput)
}

// A set of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
//
// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
func (o SyntheticsPrivateLocationMetadataOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsPrivateLocationMetadata) []string { return v.RestrictedRoles }).(pulumi.StringArrayOutput)
}

type SyntheticsPrivateLocationMetadataPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsPrivateLocationMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsPrivateLocationMetadata)(nil)).Elem()
}

func (o SyntheticsPrivateLocationMetadataPtrOutput) ToSyntheticsPrivateLocationMetadataPtrOutput() SyntheticsPrivateLocationMetadataPtrOutput {
	return o
}

func (o SyntheticsPrivateLocationMetadataPtrOutput) ToSyntheticsPrivateLocationMetadataPtrOutputWithContext(ctx context.Context) SyntheticsPrivateLocationMetadataPtrOutput {
	return o
}

func (o SyntheticsPrivateLocationMetadataPtrOutput) Elem() SyntheticsPrivateLocationMetadataOutput {
	return o.ApplyT(func(v *SyntheticsPrivateLocationMetadata) SyntheticsPrivateLocationMetadata {
		if v != nil {
			return *v
		}
		var ret SyntheticsPrivateLocationMetadata
		return ret
	}).(SyntheticsPrivateLocationMetadataOutput)
}

// A set of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
//
// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
func (o SyntheticsPrivateLocationMetadataPtrOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsPrivateLocationMetadata) []string {
		if v == nil {
			return nil
		}
		return v.RestrictedRoles
	}).(pulumi.StringArrayOutput)
}

type SyntheticsTestApiStep struct {
	// Determines whether or not to continue with test if this step fails.
	AllowFailure *bool `pulumi:"allowFailure"`
	// Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.
	Assertions []SyntheticsTestApiStepAssertion `pulumi:"assertions"`
	// Determines whether or not to exit the test if the step succeeds.
	ExitIfSucceed *bool `pulumi:"exitIfSucceed"`
	// Values to parse and save as variables from the response.
	ExtractedValues []SyntheticsTestApiStepExtractedValue `pulumi:"extractedValues"`
	// Generate variables using JavaScript.
	ExtractedValuesFromScript *string `pulumi:"extractedValuesFromScript"`
	// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
	IsCritical *bool `pulumi:"isCritical"`
	// The name of the step.
	Name string `pulumi:"name"`
	// The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.
	RequestBasicauth *SyntheticsTestApiStepRequestBasicauth `pulumi:"requestBasicauth"`
	// Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.
	RequestClientCertificate *SyntheticsTestApiStepRequestClientCertificate `pulumi:"requestClientCertificate"`
	// The request for the api step.
	RequestDefinition *SyntheticsTestApiStepRequestDefinition `pulumi:"requestDefinition"`
	// Files to be used as part of the request in the test.
	RequestFiles []SyntheticsTestApiStepRequestFile `pulumi:"requestFiles"`
	// Header name and value map.
	RequestHeaders map[string]string `pulumi:"requestHeaders"`
	// Metadata to include when performing the gRPC request.
	RequestMetadata map[string]string `pulumi:"requestMetadata"`
	// The proxy to perform the test.
	RequestProxy *SyntheticsTestApiStepRequestProxy `pulumi:"requestProxy"`
	// Query arguments name and value map.
	RequestQuery map[string]string           `pulumi:"requestQuery"`
	Retry        *SyntheticsTestApiStepRetry `pulumi:"retry"`
	// The subtype of the Synthetic multi-step API test step. Valid values are `http`, `grpc`, `wait`. Defaults to `"http"`.
	Subtype *string `pulumi:"subtype"`
	// The time to wait in seconds. Minimum value: 0. Maximum value: 180.
	Value *int `pulumi:"value"`
}

// SyntheticsTestApiStepInput is an input type that accepts SyntheticsTestApiStepArgs and SyntheticsTestApiStepOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepInput` via:
//
//	SyntheticsTestApiStepArgs{...}
type SyntheticsTestApiStepInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepOutput() SyntheticsTestApiStepOutput
	ToSyntheticsTestApiStepOutputWithContext(context.Context) SyntheticsTestApiStepOutput
}

type SyntheticsTestApiStepArgs struct {
	// Determines whether or not to continue with test if this step fails.
	AllowFailure pulumi.BoolPtrInput `pulumi:"allowFailure"`
	// Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.
	Assertions SyntheticsTestApiStepAssertionArrayInput `pulumi:"assertions"`
	// Determines whether or not to exit the test if the step succeeds.
	ExitIfSucceed pulumi.BoolPtrInput `pulumi:"exitIfSucceed"`
	// Values to parse and save as variables from the response.
	ExtractedValues SyntheticsTestApiStepExtractedValueArrayInput `pulumi:"extractedValues"`
	// Generate variables using JavaScript.
	ExtractedValuesFromScript pulumi.StringPtrInput `pulumi:"extractedValuesFromScript"`
	// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
	IsCritical pulumi.BoolPtrInput `pulumi:"isCritical"`
	// The name of the step.
	Name pulumi.StringInput `pulumi:"name"`
	// The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.
	RequestBasicauth SyntheticsTestApiStepRequestBasicauthPtrInput `pulumi:"requestBasicauth"`
	// Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.
	RequestClientCertificate SyntheticsTestApiStepRequestClientCertificatePtrInput `pulumi:"requestClientCertificate"`
	// The request for the api step.
	RequestDefinition SyntheticsTestApiStepRequestDefinitionPtrInput `pulumi:"requestDefinition"`
	// Files to be used as part of the request in the test.
	RequestFiles SyntheticsTestApiStepRequestFileArrayInput `pulumi:"requestFiles"`
	// Header name and value map.
	RequestHeaders pulumi.StringMapInput `pulumi:"requestHeaders"`
	// Metadata to include when performing the gRPC request.
	RequestMetadata pulumi.StringMapInput `pulumi:"requestMetadata"`
	// The proxy to perform the test.
	RequestProxy SyntheticsTestApiStepRequestProxyPtrInput `pulumi:"requestProxy"`
	// Query arguments name and value map.
	RequestQuery pulumi.StringMapInput              `pulumi:"requestQuery"`
	Retry        SyntheticsTestApiStepRetryPtrInput `pulumi:"retry"`
	// The subtype of the Synthetic multi-step API test step. Valid values are `http`, `grpc`, `wait`. Defaults to `"http"`.
	Subtype pulumi.StringPtrInput `pulumi:"subtype"`
	// The time to wait in seconds. Minimum value: 0. Maximum value: 180.
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (SyntheticsTestApiStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStep)(nil)).Elem()
}

func (i SyntheticsTestApiStepArgs) ToSyntheticsTestApiStepOutput() SyntheticsTestApiStepOutput {
	return i.ToSyntheticsTestApiStepOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepArgs) ToSyntheticsTestApiStepOutputWithContext(ctx context.Context) SyntheticsTestApiStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepOutput)
}

// SyntheticsTestApiStepArrayInput is an input type that accepts SyntheticsTestApiStepArray and SyntheticsTestApiStepArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepArrayInput` via:
//
//	SyntheticsTestApiStepArray{ SyntheticsTestApiStepArgs{...} }
type SyntheticsTestApiStepArrayInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepArrayOutput() SyntheticsTestApiStepArrayOutput
	ToSyntheticsTestApiStepArrayOutputWithContext(context.Context) SyntheticsTestApiStepArrayOutput
}

type SyntheticsTestApiStepArray []SyntheticsTestApiStepInput

func (SyntheticsTestApiStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStep)(nil)).Elem()
}

func (i SyntheticsTestApiStepArray) ToSyntheticsTestApiStepArrayOutput() SyntheticsTestApiStepArrayOutput {
	return i.ToSyntheticsTestApiStepArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepArray) ToSyntheticsTestApiStepArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepArrayOutput)
}

type SyntheticsTestApiStepOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStep)(nil)).Elem()
}

func (o SyntheticsTestApiStepOutput) ToSyntheticsTestApiStepOutput() SyntheticsTestApiStepOutput {
	return o
}

func (o SyntheticsTestApiStepOutput) ToSyntheticsTestApiStepOutputWithContext(ctx context.Context) SyntheticsTestApiStepOutput {
	return o
}

// Determines whether or not to continue with test if this step fails.
func (o SyntheticsTestApiStepOutput) AllowFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *bool { return v.AllowFailure }).(pulumi.BoolPtrOutput)
}

// Assertions used for the test. Multiple `assertion` blocks are allowed with the structure below.
func (o SyntheticsTestApiStepOutput) Assertions() SyntheticsTestApiStepAssertionArrayOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) []SyntheticsTestApiStepAssertion { return v.Assertions }).(SyntheticsTestApiStepAssertionArrayOutput)
}

// Determines whether or not to exit the test if the step succeeds.
func (o SyntheticsTestApiStepOutput) ExitIfSucceed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *bool { return v.ExitIfSucceed }).(pulumi.BoolPtrOutput)
}

// Values to parse and save as variables from the response.
func (o SyntheticsTestApiStepOutput) ExtractedValues() SyntheticsTestApiStepExtractedValueArrayOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) []SyntheticsTestApiStepExtractedValue { return v.ExtractedValues }).(SyntheticsTestApiStepExtractedValueArrayOutput)
}

// Generate variables using JavaScript.
func (o SyntheticsTestApiStepOutput) ExtractedValuesFromScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *string { return v.ExtractedValuesFromScript }).(pulumi.StringPtrOutput)
}

// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
func (o SyntheticsTestApiStepOutput) IsCritical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *bool { return v.IsCritical }).(pulumi.BoolPtrOutput)
}

// The name of the step.
func (o SyntheticsTestApiStepOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) string { return v.Name }).(pulumi.StringOutput)
}

// The HTTP basic authentication credentials. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestApiStepOutput) RequestBasicauth() SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *SyntheticsTestApiStepRequestBasicauth { return v.RequestBasicauth }).(SyntheticsTestApiStepRequestBasicauthPtrOutput)
}

// Client certificate to use when performing the test request. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestApiStepOutput) RequestClientCertificate() SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *SyntheticsTestApiStepRequestClientCertificate {
		return v.RequestClientCertificate
	}).(SyntheticsTestApiStepRequestClientCertificatePtrOutput)
}

// The request for the api step.
func (o SyntheticsTestApiStepOutput) RequestDefinition() SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *SyntheticsTestApiStepRequestDefinition { return v.RequestDefinition }).(SyntheticsTestApiStepRequestDefinitionPtrOutput)
}

// Files to be used as part of the request in the test.
func (o SyntheticsTestApiStepOutput) RequestFiles() SyntheticsTestApiStepRequestFileArrayOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) []SyntheticsTestApiStepRequestFile { return v.RequestFiles }).(SyntheticsTestApiStepRequestFileArrayOutput)
}

// Header name and value map.
func (o SyntheticsTestApiStepOutput) RequestHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) map[string]string { return v.RequestHeaders }).(pulumi.StringMapOutput)
}

// Metadata to include when performing the gRPC request.
func (o SyntheticsTestApiStepOutput) RequestMetadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) map[string]string { return v.RequestMetadata }).(pulumi.StringMapOutput)
}

// The proxy to perform the test.
func (o SyntheticsTestApiStepOutput) RequestProxy() SyntheticsTestApiStepRequestProxyPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *SyntheticsTestApiStepRequestProxy { return v.RequestProxy }).(SyntheticsTestApiStepRequestProxyPtrOutput)
}

// Query arguments name and value map.
func (o SyntheticsTestApiStepOutput) RequestQuery() pulumi.StringMapOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) map[string]string { return v.RequestQuery }).(pulumi.StringMapOutput)
}

func (o SyntheticsTestApiStepOutput) Retry() SyntheticsTestApiStepRetryPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *SyntheticsTestApiStepRetry { return v.Retry }).(SyntheticsTestApiStepRetryPtrOutput)
}

// The subtype of the Synthetic multi-step API test step. Valid values are `http`, `grpc`, `wait`. Defaults to `"http"`.
func (o SyntheticsTestApiStepOutput) Subtype() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *string { return v.Subtype }).(pulumi.StringPtrOutput)
}

// The time to wait in seconds. Minimum value: 0. Maximum value: 180.
func (o SyntheticsTestApiStepOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStep) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type SyntheticsTestApiStepArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStep)(nil)).Elem()
}

func (o SyntheticsTestApiStepArrayOutput) ToSyntheticsTestApiStepArrayOutput() SyntheticsTestApiStepArrayOutput {
	return o
}

func (o SyntheticsTestApiStepArrayOutput) ToSyntheticsTestApiStepArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepArrayOutput {
	return o
}

func (o SyntheticsTestApiStepArrayOutput) Index(i pulumi.IntInput) SyntheticsTestApiStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestApiStep {
		return vs[0].([]SyntheticsTestApiStep)[vs[1].(int)]
	}).(SyntheticsTestApiStepOutput)
}

type SyntheticsTestApiStepAssertion struct {
	// If assertion type is `javascript`, this is the JavaScript code that performs the assertions.
	Code *string `pulumi:"code"`
	// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
	Operator *string `pulumi:"operator"`
	// If assertion type is `header`, this is the header name.
	Property *string `pulumi:"property"`
	// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
	Target *string `pulumi:"target"`
	// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
	Targetjsonpath *SyntheticsTestApiStepAssertionTargetjsonpath `pulumi:"targetjsonpath"`
	// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
	Targetjsonschema *SyntheticsTestApiStepAssertionTargetjsonschema `pulumi:"targetjsonschema"`
	// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
	Targetxpath *SyntheticsTestApiStepAssertionTargetxpath `pulumi:"targetxpath"`
	// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
	TimingsScope *string `pulumi:"timingsScope"`
	// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`, `javascript`.
	Type string `pulumi:"type"`
}

// SyntheticsTestApiStepAssertionInput is an input type that accepts SyntheticsTestApiStepAssertionArgs and SyntheticsTestApiStepAssertionOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionInput` via:
//
//	SyntheticsTestApiStepAssertionArgs{...}
type SyntheticsTestApiStepAssertionInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionOutput() SyntheticsTestApiStepAssertionOutput
	ToSyntheticsTestApiStepAssertionOutputWithContext(context.Context) SyntheticsTestApiStepAssertionOutput
}

type SyntheticsTestApiStepAssertionArgs struct {
	// If assertion type is `javascript`, this is the JavaScript code that performs the assertions.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// If assertion type is `header`, this is the header name.
	Property pulumi.StringPtrInput `pulumi:"property"`
	// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
	Targetjsonpath SyntheticsTestApiStepAssertionTargetjsonpathPtrInput `pulumi:"targetjsonpath"`
	// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
	Targetjsonschema SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput `pulumi:"targetjsonschema"`
	// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
	Targetxpath SyntheticsTestApiStepAssertionTargetxpathPtrInput `pulumi:"targetxpath"`
	// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
	TimingsScope pulumi.StringPtrInput `pulumi:"timingsScope"`
	// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`, `javascript`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestApiStepAssertionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertion)(nil)).Elem()
}

func (i SyntheticsTestApiStepAssertionArgs) ToSyntheticsTestApiStepAssertionOutput() SyntheticsTestApiStepAssertionOutput {
	return i.ToSyntheticsTestApiStepAssertionOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionArgs) ToSyntheticsTestApiStepAssertionOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionOutput)
}

// SyntheticsTestApiStepAssertionArrayInput is an input type that accepts SyntheticsTestApiStepAssertionArray and SyntheticsTestApiStepAssertionArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionArrayInput` via:
//
//	SyntheticsTestApiStepAssertionArray{ SyntheticsTestApiStepAssertionArgs{...} }
type SyntheticsTestApiStepAssertionArrayInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionArrayOutput() SyntheticsTestApiStepAssertionArrayOutput
	ToSyntheticsTestApiStepAssertionArrayOutputWithContext(context.Context) SyntheticsTestApiStepAssertionArrayOutput
}

type SyntheticsTestApiStepAssertionArray []SyntheticsTestApiStepAssertionInput

func (SyntheticsTestApiStepAssertionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepAssertion)(nil)).Elem()
}

func (i SyntheticsTestApiStepAssertionArray) ToSyntheticsTestApiStepAssertionArrayOutput() SyntheticsTestApiStepAssertionArrayOutput {
	return i.ToSyntheticsTestApiStepAssertionArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionArray) ToSyntheticsTestApiStepAssertionArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionArrayOutput)
}

type SyntheticsTestApiStepAssertionOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertion)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionOutput) ToSyntheticsTestApiStepAssertionOutput() SyntheticsTestApiStepAssertionOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionOutput) ToSyntheticsTestApiStepAssertionOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionOutput {
	return o
}

// If assertion type is `javascript`, this is the JavaScript code that performs the assertions.
func (o SyntheticsTestApiStepAssertionOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
func (o SyntheticsTestApiStepAssertionOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// If assertion type is `header`, this is the header name.
func (o SyntheticsTestApiStepAssertionOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *string { return v.Property }).(pulumi.StringPtrOutput)
}

// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
func (o SyntheticsTestApiStepAssertionOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestApiStepAssertionOutput) Targetjsonpath() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *SyntheticsTestApiStepAssertionTargetjsonpath {
		return v.Targetjsonpath
	}).(SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput)
}

// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestApiStepAssertionOutput) Targetjsonschema() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *SyntheticsTestApiStepAssertionTargetjsonschema {
		return v.Targetjsonschema
	}).(SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput)
}

// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestApiStepAssertionOutput) Targetxpath() SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *SyntheticsTestApiStepAssertionTargetxpath {
		return v.Targetxpath
	}).(SyntheticsTestApiStepAssertionTargetxpathPtrOutput)
}

// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
func (o SyntheticsTestApiStepAssertionOutput) TimingsScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) *string { return v.TimingsScope }).(pulumi.StringPtrOutput)
}

// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`, `javascript`.
func (o SyntheticsTestApiStepAssertionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertion) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestApiStepAssertionArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepAssertion)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionArrayOutput) ToSyntheticsTestApiStepAssertionArrayOutput() SyntheticsTestApiStepAssertionArrayOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionArrayOutput) ToSyntheticsTestApiStepAssertionArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionArrayOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionArrayOutput) Index(i pulumi.IntInput) SyntheticsTestApiStepAssertionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestApiStepAssertion {
		return vs[0].([]SyntheticsTestApiStepAssertion)[vs[1].(int)]
	}).(SyntheticsTestApiStepAssertionOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonpath struct {
	// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `"firstElementMatches"`.
	Elementsoperator *string `pulumi:"elementsoperator"`
	// The JSON path to assert.
	Jsonpath string `pulumi:"jsonpath"`
	// The specific operator to use on the path.
	Operator string `pulumi:"operator"`
	// Expected matching value.
	Targetvalue *string `pulumi:"targetvalue"`
}

// SyntheticsTestApiStepAssertionTargetjsonpathInput is an input type that accepts SyntheticsTestApiStepAssertionTargetjsonpathArgs and SyntheticsTestApiStepAssertionTargetjsonpathOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetjsonpathInput` via:
//
//	SyntheticsTestApiStepAssertionTargetjsonpathArgs{...}
type SyntheticsTestApiStepAssertionTargetjsonpathInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetjsonpathOutput() SyntheticsTestApiStepAssertionTargetjsonpathOutput
	ToSyntheticsTestApiStepAssertionTargetjsonpathOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetjsonpathOutput
}

type SyntheticsTestApiStepAssertionTargetjsonpathArgs struct {
	// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `"firstElementMatches"`.
	Elementsoperator pulumi.StringPtrInput `pulumi:"elementsoperator"`
	// The JSON path to assert.
	Jsonpath pulumi.StringInput `pulumi:"jsonpath"`
	// The specific operator to use on the path.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Expected matching value.
	Targetvalue pulumi.StringPtrInput `pulumi:"targetvalue"`
}

func (SyntheticsTestApiStepAssertionTargetjsonpathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonpath)(nil)).Elem()
}

func (i SyntheticsTestApiStepAssertionTargetjsonpathArgs) ToSyntheticsTestApiStepAssertionTargetjsonpathOutput() SyntheticsTestApiStepAssertionTargetjsonpathOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonpathOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetjsonpathArgs) ToSyntheticsTestApiStepAssertionTargetjsonpathOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonpathOutput)
}

func (i SyntheticsTestApiStepAssertionTargetjsonpathArgs) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutput() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetjsonpathArgs) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonpathOutput).ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepAssertionTargetjsonpathPtrInput is an input type that accepts SyntheticsTestApiStepAssertionTargetjsonpathArgs, SyntheticsTestApiStepAssertionTargetjsonpathPtr and SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetjsonpathPtrInput` via:
//
//	        SyntheticsTestApiStepAssertionTargetjsonpathArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepAssertionTargetjsonpathPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutput() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput
	ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput
}

type syntheticsTestApiStepAssertionTargetjsonpathPtrType SyntheticsTestApiStepAssertionTargetjsonpathArgs

func SyntheticsTestApiStepAssertionTargetjsonpathPtr(v *SyntheticsTestApiStepAssertionTargetjsonpathArgs) SyntheticsTestApiStepAssertionTargetjsonpathPtrInput {
	return (*syntheticsTestApiStepAssertionTargetjsonpathPtrType)(v)
}

func (*syntheticsTestApiStepAssertionTargetjsonpathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetjsonpath)(nil)).Elem()
}

func (i *syntheticsTestApiStepAssertionTargetjsonpathPtrType) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutput() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepAssertionTargetjsonpathPtrType) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonpathOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetjsonpathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonpath)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathOutput() SyntheticsTestApiStepAssertionTargetjsonpathOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutput() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return o.ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepAssertionTargetjsonpath) *SyntheticsTestApiStepAssertionTargetjsonpath {
		return &v
	}).(SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput)
}

// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `"firstElementMatches"`.
func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) Elementsoperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonpath) *string { return v.Elementsoperator }).(pulumi.StringPtrOutput)
}

// The JSON path to assert.
func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) Jsonpath() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonpath) string { return v.Jsonpath }).(pulumi.StringOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonpath) string { return v.Operator }).(pulumi.StringOutput)
}

// Expected matching value.
func (o SyntheticsTestApiStepAssertionTargetjsonpathOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonpath) *string { return v.Targetvalue }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetjsonpath)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutput() SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) ToSyntheticsTestApiStepAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) Elem() SyntheticsTestApiStepAssertionTargetjsonpathOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonpath) SyntheticsTestApiStepAssertionTargetjsonpath {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepAssertionTargetjsonpath
		return ret
	}).(SyntheticsTestApiStepAssertionTargetjsonpathOutput)
}

// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `"firstElementMatches"`.
func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) Elementsoperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return v.Elementsoperator
	}).(pulumi.StringPtrOutput)
}

// The JSON path to assert.
func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) Jsonpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return &v.Jsonpath
	}).(pulumi.StringPtrOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Expected matching value.
func (o SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return v.Targetvalue
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonschema struct {
	// The JSON Schema to validate the body against.
	Jsonschema string `pulumi:"jsonschema"`
	// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
	Metaschema *string `pulumi:"metaschema"`
}

// SyntheticsTestApiStepAssertionTargetjsonschemaInput is an input type that accepts SyntheticsTestApiStepAssertionTargetjsonschemaArgs and SyntheticsTestApiStepAssertionTargetjsonschemaOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetjsonschemaInput` via:
//
//	SyntheticsTestApiStepAssertionTargetjsonschemaArgs{...}
type SyntheticsTestApiStepAssertionTargetjsonschemaInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetjsonschemaOutput() SyntheticsTestApiStepAssertionTargetjsonschemaOutput
	ToSyntheticsTestApiStepAssertionTargetjsonschemaOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaOutput
}

type SyntheticsTestApiStepAssertionTargetjsonschemaArgs struct {
	// The JSON Schema to validate the body against.
	Jsonschema pulumi.StringInput `pulumi:"jsonschema"`
	// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
	Metaschema pulumi.StringPtrInput `pulumi:"metaschema"`
}

func (SyntheticsTestApiStepAssertionTargetjsonschemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonschema)(nil)).Elem()
}

func (i SyntheticsTestApiStepAssertionTargetjsonschemaArgs) ToSyntheticsTestApiStepAssertionTargetjsonschemaOutput() SyntheticsTestApiStepAssertionTargetjsonschemaOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonschemaOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetjsonschemaArgs) ToSyntheticsTestApiStepAssertionTargetjsonschemaOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonschemaOutput)
}

func (i SyntheticsTestApiStepAssertionTargetjsonschemaArgs) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetjsonschemaArgs) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonschemaOutput).ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput is an input type that accepts SyntheticsTestApiStepAssertionTargetjsonschemaArgs, SyntheticsTestApiStepAssertionTargetjsonschemaPtr and SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput` via:
//
//	        SyntheticsTestApiStepAssertionTargetjsonschemaArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput
	ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput
}

type syntheticsTestApiStepAssertionTargetjsonschemaPtrType SyntheticsTestApiStepAssertionTargetjsonschemaArgs

func SyntheticsTestApiStepAssertionTargetjsonschemaPtr(v *SyntheticsTestApiStepAssertionTargetjsonschemaArgs) SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput {
	return (*syntheticsTestApiStepAssertionTargetjsonschemaPtrType)(v)
}

func (*syntheticsTestApiStepAssertionTargetjsonschemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetjsonschema)(nil)).Elem()
}

func (i *syntheticsTestApiStepAssertionTargetjsonschemaPtrType) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepAssertionTargetjsonschemaPtrType) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonschemaOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetjsonschemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonschema)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaOutput() SyntheticsTestApiStepAssertionTargetjsonschemaOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return o.ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepAssertionTargetjsonschema) *SyntheticsTestApiStepAssertionTargetjsonschema {
		return &v
	}).(SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput)
}

// The JSON Schema to validate the body against.
func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) Jsonschema() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonschema) string { return v.Jsonschema }).(pulumi.StringOutput)
}

// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
func (o SyntheticsTestApiStepAssertionTargetjsonschemaOutput) Metaschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetjsonschema) *string { return v.Metaschema }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetjsonschema)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput() SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) ToSyntheticsTestApiStepAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) Elem() SyntheticsTestApiStepAssertionTargetjsonschemaOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonschema) SyntheticsTestApiStepAssertionTargetjsonschema {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepAssertionTargetjsonschema
		return ret
	}).(SyntheticsTestApiStepAssertionTargetjsonschemaOutput)
}

// The JSON Schema to validate the body against.
func (o SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) Jsonschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonschema) *string {
		if v == nil {
			return nil
		}
		return &v.Jsonschema
	}).(pulumi.StringPtrOutput)
}

// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
func (o SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput) Metaschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetjsonschema) *string {
		if v == nil {
			return nil
		}
		return v.Metaschema
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetxpath struct {
	// The specific operator to use on the path.
	Operator string `pulumi:"operator"`
	// Expected matching value.
	Targetvalue *string `pulumi:"targetvalue"`
	// The xpath to assert.
	Xpath string `pulumi:"xpath"`
}

// SyntheticsTestApiStepAssertionTargetxpathInput is an input type that accepts SyntheticsTestApiStepAssertionTargetxpathArgs and SyntheticsTestApiStepAssertionTargetxpathOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetxpathInput` via:
//
//	SyntheticsTestApiStepAssertionTargetxpathArgs{...}
type SyntheticsTestApiStepAssertionTargetxpathInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetxpathOutput() SyntheticsTestApiStepAssertionTargetxpathOutput
	ToSyntheticsTestApiStepAssertionTargetxpathOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetxpathOutput
}

type SyntheticsTestApiStepAssertionTargetxpathArgs struct {
	// The specific operator to use on the path.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Expected matching value.
	Targetvalue pulumi.StringPtrInput `pulumi:"targetvalue"`
	// The xpath to assert.
	Xpath pulumi.StringInput `pulumi:"xpath"`
}

func (SyntheticsTestApiStepAssertionTargetxpathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetxpath)(nil)).Elem()
}

func (i SyntheticsTestApiStepAssertionTargetxpathArgs) ToSyntheticsTestApiStepAssertionTargetxpathOutput() SyntheticsTestApiStepAssertionTargetxpathOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetxpathOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetxpathArgs) ToSyntheticsTestApiStepAssertionTargetxpathOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetxpathOutput)
}

func (i SyntheticsTestApiStepAssertionTargetxpathArgs) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutput() SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepAssertionTargetxpathArgs) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetxpathOutput).ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepAssertionTargetxpathPtrInput is an input type that accepts SyntheticsTestApiStepAssertionTargetxpathArgs, SyntheticsTestApiStepAssertionTargetxpathPtr and SyntheticsTestApiStepAssertionTargetxpathPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepAssertionTargetxpathPtrInput` via:
//
//	        SyntheticsTestApiStepAssertionTargetxpathArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepAssertionTargetxpathPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepAssertionTargetxpathPtrOutput() SyntheticsTestApiStepAssertionTargetxpathPtrOutput
	ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(context.Context) SyntheticsTestApiStepAssertionTargetxpathPtrOutput
}

type syntheticsTestApiStepAssertionTargetxpathPtrType SyntheticsTestApiStepAssertionTargetxpathArgs

func SyntheticsTestApiStepAssertionTargetxpathPtr(v *SyntheticsTestApiStepAssertionTargetxpathArgs) SyntheticsTestApiStepAssertionTargetxpathPtrInput {
	return (*syntheticsTestApiStepAssertionTargetxpathPtrType)(v)
}

func (*syntheticsTestApiStepAssertionTargetxpathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetxpath)(nil)).Elem()
}

func (i *syntheticsTestApiStepAssertionTargetxpathPtrType) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutput() SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return i.ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepAssertionTargetxpathPtrType) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepAssertionTargetxpathPtrOutput)
}

type SyntheticsTestApiStepAssertionTargetxpathOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetxpathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetxpath)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetxpathOutput) ToSyntheticsTestApiStepAssertionTargetxpathOutput() SyntheticsTestApiStepAssertionTargetxpathOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetxpathOutput) ToSyntheticsTestApiStepAssertionTargetxpathOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetxpathOutput) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutput() SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return o.ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepAssertionTargetxpathOutput) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepAssertionTargetxpath) *SyntheticsTestApiStepAssertionTargetxpath {
		return &v
	}).(SyntheticsTestApiStepAssertionTargetxpathPtrOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestApiStepAssertionTargetxpathOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetxpath) string { return v.Operator }).(pulumi.StringOutput)
}

// Expected matching value.
func (o SyntheticsTestApiStepAssertionTargetxpathOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetxpath) *string { return v.Targetvalue }).(pulumi.StringPtrOutput)
}

// The xpath to assert.
func (o SyntheticsTestApiStepAssertionTargetxpathOutput) Xpath() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepAssertionTargetxpath) string { return v.Xpath }).(pulumi.StringOutput)
}

type SyntheticsTestApiStepAssertionTargetxpathPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepAssertionTargetxpathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepAssertionTargetxpath)(nil)).Elem()
}

func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutput() SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) ToSyntheticsTestApiStepAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepAssertionTargetxpathPtrOutput {
	return o
}

func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) Elem() SyntheticsTestApiStepAssertionTargetxpathOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetxpath) SyntheticsTestApiStepAssertionTargetxpath {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepAssertionTargetxpath
		return ret
	}).(SyntheticsTestApiStepAssertionTargetxpathOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Expected matching value.
func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return v.Targetvalue
	}).(pulumi.StringPtrOutput)
}

// The xpath to assert.
func (o SyntheticsTestApiStepAssertionTargetxpathPtrOutput) Xpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return &v.Xpath
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepExtractedValue struct {
	// When type is `httpHeader` or `grpcMetadata`, name of the header or metadatum to extract.
	Field  *string                                   `pulumi:"field"`
	Name   string                                    `pulumi:"name"`
	Parser SyntheticsTestApiStepExtractedValueParser `pulumi:"parser"`
	// Determines whether or not the extracted value will be obfuscated.
	Secure *bool `pulumi:"secure"`
	// Property of the Synthetics Test Response to use for the variable. Valid values are `grpcMessage`, `grpcMetadata`, `httpBody`, `httpHeader`, `httpStatusCode`.
	Type string `pulumi:"type"`
}

// SyntheticsTestApiStepExtractedValueInput is an input type that accepts SyntheticsTestApiStepExtractedValueArgs and SyntheticsTestApiStepExtractedValueOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepExtractedValueInput` via:
//
//	SyntheticsTestApiStepExtractedValueArgs{...}
type SyntheticsTestApiStepExtractedValueInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepExtractedValueOutput() SyntheticsTestApiStepExtractedValueOutput
	ToSyntheticsTestApiStepExtractedValueOutputWithContext(context.Context) SyntheticsTestApiStepExtractedValueOutput
}

type SyntheticsTestApiStepExtractedValueArgs struct {
	// When type is `httpHeader` or `grpcMetadata`, name of the header or metadatum to extract.
	Field  pulumi.StringPtrInput                          `pulumi:"field"`
	Name   pulumi.StringInput                             `pulumi:"name"`
	Parser SyntheticsTestApiStepExtractedValueParserInput `pulumi:"parser"`
	// Determines whether or not the extracted value will be obfuscated.
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// Property of the Synthetics Test Response to use for the variable. Valid values are `grpcMessage`, `grpcMetadata`, `httpBody`, `httpHeader`, `httpStatusCode`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestApiStepExtractedValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepExtractedValue)(nil)).Elem()
}

func (i SyntheticsTestApiStepExtractedValueArgs) ToSyntheticsTestApiStepExtractedValueOutput() SyntheticsTestApiStepExtractedValueOutput {
	return i.ToSyntheticsTestApiStepExtractedValueOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepExtractedValueArgs) ToSyntheticsTestApiStepExtractedValueOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepExtractedValueOutput)
}

// SyntheticsTestApiStepExtractedValueArrayInput is an input type that accepts SyntheticsTestApiStepExtractedValueArray and SyntheticsTestApiStepExtractedValueArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepExtractedValueArrayInput` via:
//
//	SyntheticsTestApiStepExtractedValueArray{ SyntheticsTestApiStepExtractedValueArgs{...} }
type SyntheticsTestApiStepExtractedValueArrayInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepExtractedValueArrayOutput() SyntheticsTestApiStepExtractedValueArrayOutput
	ToSyntheticsTestApiStepExtractedValueArrayOutputWithContext(context.Context) SyntheticsTestApiStepExtractedValueArrayOutput
}

type SyntheticsTestApiStepExtractedValueArray []SyntheticsTestApiStepExtractedValueInput

func (SyntheticsTestApiStepExtractedValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepExtractedValue)(nil)).Elem()
}

func (i SyntheticsTestApiStepExtractedValueArray) ToSyntheticsTestApiStepExtractedValueArrayOutput() SyntheticsTestApiStepExtractedValueArrayOutput {
	return i.ToSyntheticsTestApiStepExtractedValueArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepExtractedValueArray) ToSyntheticsTestApiStepExtractedValueArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepExtractedValueArrayOutput)
}

type SyntheticsTestApiStepExtractedValueOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepExtractedValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepExtractedValue)(nil)).Elem()
}

func (o SyntheticsTestApiStepExtractedValueOutput) ToSyntheticsTestApiStepExtractedValueOutput() SyntheticsTestApiStepExtractedValueOutput {
	return o
}

func (o SyntheticsTestApiStepExtractedValueOutput) ToSyntheticsTestApiStepExtractedValueOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueOutput {
	return o
}

// When type is `httpHeader` or `grpcMetadata`, name of the header or metadatum to extract.
func (o SyntheticsTestApiStepExtractedValueOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValue) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestApiStepExtractedValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValue) string { return v.Name }).(pulumi.StringOutput)
}

func (o SyntheticsTestApiStepExtractedValueOutput) Parser() SyntheticsTestApiStepExtractedValueParserOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValue) SyntheticsTestApiStepExtractedValueParser { return v.Parser }).(SyntheticsTestApiStepExtractedValueParserOutput)
}

// Determines whether or not the extracted value will be obfuscated.
func (o SyntheticsTestApiStepExtractedValueOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValue) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// Property of the Synthetics Test Response to use for the variable. Valid values are `grpcMessage`, `grpcMetadata`, `httpBody`, `httpHeader`, `httpStatusCode`.
func (o SyntheticsTestApiStepExtractedValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValue) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestApiStepExtractedValueArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepExtractedValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepExtractedValue)(nil)).Elem()
}

func (o SyntheticsTestApiStepExtractedValueArrayOutput) ToSyntheticsTestApiStepExtractedValueArrayOutput() SyntheticsTestApiStepExtractedValueArrayOutput {
	return o
}

func (o SyntheticsTestApiStepExtractedValueArrayOutput) ToSyntheticsTestApiStepExtractedValueArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueArrayOutput {
	return o
}

func (o SyntheticsTestApiStepExtractedValueArrayOutput) Index(i pulumi.IntInput) SyntheticsTestApiStepExtractedValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestApiStepExtractedValue {
		return vs[0].([]SyntheticsTestApiStepExtractedValue)[vs[1].(int)]
	}).(SyntheticsTestApiStepExtractedValueOutput)
}

type SyntheticsTestApiStepExtractedValueParser struct {
	// Type of parser for a Synthetics global variable from a synthetics test. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
	Type string `pulumi:"type"`
	// Regex or JSON path used for the parser. Not used with type `raw`.
	Value *string `pulumi:"value"`
}

// SyntheticsTestApiStepExtractedValueParserInput is an input type that accepts SyntheticsTestApiStepExtractedValueParserArgs and SyntheticsTestApiStepExtractedValueParserOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepExtractedValueParserInput` via:
//
//	SyntheticsTestApiStepExtractedValueParserArgs{...}
type SyntheticsTestApiStepExtractedValueParserInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepExtractedValueParserOutput() SyntheticsTestApiStepExtractedValueParserOutput
	ToSyntheticsTestApiStepExtractedValueParserOutputWithContext(context.Context) SyntheticsTestApiStepExtractedValueParserOutput
}

type SyntheticsTestApiStepExtractedValueParserArgs struct {
	// Type of parser for a Synthetics global variable from a synthetics test. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
	Type pulumi.StringInput `pulumi:"type"`
	// Regex or JSON path used for the parser. Not used with type `raw`.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SyntheticsTestApiStepExtractedValueParserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepExtractedValueParser)(nil)).Elem()
}

func (i SyntheticsTestApiStepExtractedValueParserArgs) ToSyntheticsTestApiStepExtractedValueParserOutput() SyntheticsTestApiStepExtractedValueParserOutput {
	return i.ToSyntheticsTestApiStepExtractedValueParserOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepExtractedValueParserArgs) ToSyntheticsTestApiStepExtractedValueParserOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueParserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepExtractedValueParserOutput)
}

type SyntheticsTestApiStepExtractedValueParserOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepExtractedValueParserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepExtractedValueParser)(nil)).Elem()
}

func (o SyntheticsTestApiStepExtractedValueParserOutput) ToSyntheticsTestApiStepExtractedValueParserOutput() SyntheticsTestApiStepExtractedValueParserOutput {
	return o
}

func (o SyntheticsTestApiStepExtractedValueParserOutput) ToSyntheticsTestApiStepExtractedValueParserOutputWithContext(ctx context.Context) SyntheticsTestApiStepExtractedValueParserOutput {
	return o
}

// Type of parser for a Synthetics global variable from a synthetics test. Valid values are `raw`, `jsonPath`, `regex`, `xPath`.
func (o SyntheticsTestApiStepExtractedValueParserOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValueParser) string { return v.Type }).(pulumi.StringOutput)
}

// Regex or JSON path used for the parser. Not used with type `raw`.
func (o SyntheticsTestApiStepExtractedValueParserOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepExtractedValueParser) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestBasicauth struct {
	// Access key for `SIGV4` authentication.
	AccessKey *string `pulumi:"accessKey"`
	// Access token url for `oauth-client` or `oauth-rop` authentication.
	AccessTokenUrl *string `pulumi:"accessTokenUrl"`
	// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Audience *string `pulumi:"audience"`
	// Client ID for `oauth-client` or `oauth-rop` authentication.
	ClientId *string `pulumi:"clientId"`
	// Client secret for `oauth-client` or `oauth-rop` authentication.
	ClientSecret *string `pulumi:"clientSecret"`
	// Domain for `ntlm` authentication.
	Domain *string `pulumi:"domain"`
	// Password for authentication.
	Password *string `pulumi:"password"`
	// Region for `SIGV4` authentication.
	Region *string `pulumi:"region"`
	// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Resource *string `pulumi:"resource"`
	// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Scope *string `pulumi:"scope"`
	// Secret key for `SIGV4` authentication.
	SecretKey *string `pulumi:"secretKey"`
	// Service name for `SIGV4` authentication.
	ServiceName *string `pulumi:"serviceName"`
	// Session token for `SIGV4` authentication.
	SessionToken *string `pulumi:"sessionToken"`
	// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
	TokenApiAuthentication *string `pulumi:"tokenApiAuthentication"`
	// Type of basic authentication to use when performing the test. Defaults to `"web"`.
	Type *string `pulumi:"type"`
	// Username for authentication.
	Username *string `pulumi:"username"`
	// Workstation for `ntlm` authentication.
	Workstation *string `pulumi:"workstation"`
}

// SyntheticsTestApiStepRequestBasicauthInput is an input type that accepts SyntheticsTestApiStepRequestBasicauthArgs and SyntheticsTestApiStepRequestBasicauthOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestBasicauthInput` via:
//
//	SyntheticsTestApiStepRequestBasicauthArgs{...}
type SyntheticsTestApiStepRequestBasicauthInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestBasicauthOutput() SyntheticsTestApiStepRequestBasicauthOutput
	ToSyntheticsTestApiStepRequestBasicauthOutputWithContext(context.Context) SyntheticsTestApiStepRequestBasicauthOutput
}

type SyntheticsTestApiStepRequestBasicauthArgs struct {
	// Access key for `SIGV4` authentication.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Access token url for `oauth-client` or `oauth-rop` authentication.
	AccessTokenUrl pulumi.StringPtrInput `pulumi:"accessTokenUrl"`
	// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// Client ID for `oauth-client` or `oauth-rop` authentication.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret for `oauth-client` or `oauth-rop` authentication.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Domain for `ntlm` authentication.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Password for authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Region for `SIGV4` authentication.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Secret key for `SIGV4` authentication.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Service name for `SIGV4` authentication.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Session token for `SIGV4` authentication.
	SessionToken pulumi.StringPtrInput `pulumi:"sessionToken"`
	// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
	TokenApiAuthentication pulumi.StringPtrInput `pulumi:"tokenApiAuthentication"`
	// Type of basic authentication to use when performing the test. Defaults to `"web"`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Username for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Workstation for `ntlm` authentication.
	Workstation pulumi.StringPtrInput `pulumi:"workstation"`
}

func (SyntheticsTestApiStepRequestBasicauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestBasicauth)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestBasicauthArgs) ToSyntheticsTestApiStepRequestBasicauthOutput() SyntheticsTestApiStepRequestBasicauthOutput {
	return i.ToSyntheticsTestApiStepRequestBasicauthOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestBasicauthArgs) ToSyntheticsTestApiStepRequestBasicauthOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestBasicauthOutput)
}

func (i SyntheticsTestApiStepRequestBasicauthArgs) ToSyntheticsTestApiStepRequestBasicauthPtrOutput() SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return i.ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestBasicauthArgs) ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestBasicauthOutput).ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestBasicauthPtrInput is an input type that accepts SyntheticsTestApiStepRequestBasicauthArgs, SyntheticsTestApiStepRequestBasicauthPtr and SyntheticsTestApiStepRequestBasicauthPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestBasicauthPtrInput` via:
//
//	        SyntheticsTestApiStepRequestBasicauthArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestBasicauthPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestBasicauthPtrOutput() SyntheticsTestApiStepRequestBasicauthPtrOutput
	ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestBasicauthPtrOutput
}

type syntheticsTestApiStepRequestBasicauthPtrType SyntheticsTestApiStepRequestBasicauthArgs

func SyntheticsTestApiStepRequestBasicauthPtr(v *SyntheticsTestApiStepRequestBasicauthArgs) SyntheticsTestApiStepRequestBasicauthPtrInput {
	return (*syntheticsTestApiStepRequestBasicauthPtrType)(v)
}

func (*syntheticsTestApiStepRequestBasicauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestBasicauth)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestBasicauthPtrType) ToSyntheticsTestApiStepRequestBasicauthPtrOutput() SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return i.ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestBasicauthPtrType) ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestBasicauthPtrOutput)
}

type SyntheticsTestApiStepRequestBasicauthOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestBasicauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestBasicauth)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestBasicauthOutput) ToSyntheticsTestApiStepRequestBasicauthOutput() SyntheticsTestApiStepRequestBasicauthOutput {
	return o
}

func (o SyntheticsTestApiStepRequestBasicauthOutput) ToSyntheticsTestApiStepRequestBasicauthOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthOutput {
	return o
}

func (o SyntheticsTestApiStepRequestBasicauthOutput) ToSyntheticsTestApiStepRequestBasicauthPtrOutput() SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return o.ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestBasicauthOutput) ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestBasicauth) *SyntheticsTestApiStepRequestBasicauth {
		return &v
	}).(SyntheticsTestApiStepRequestBasicauthPtrOutput)
}

// Access key for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Access token url for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.AccessTokenUrl }).(pulumi.StringPtrOutput)
}

// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Client ID for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Domain for `ntlm` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Password for authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Region for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Secret key for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Service name for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Session token for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) SessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.SessionToken }).(pulumi.StringPtrOutput)
}

// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
func (o SyntheticsTestApiStepRequestBasicauthOutput) TokenApiAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.TokenApiAuthentication }).(pulumi.StringPtrOutput)
}

// Type of basic authentication to use when performing the test. Defaults to `"web"`.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Username for authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Workstation for `ntlm` authentication.
func (o SyntheticsTestApiStepRequestBasicauthOutput) Workstation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestBasicauth) *string { return v.Workstation }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestBasicauthPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestBasicauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestBasicauth)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) ToSyntheticsTestApiStepRequestBasicauthPtrOutput() SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) ToSyntheticsTestApiStepRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestBasicauthPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Elem() SyntheticsTestApiStepRequestBasicauthOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) SyntheticsTestApiStepRequestBasicauth {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestBasicauth
		return ret
	}).(SyntheticsTestApiStepRequestBasicauthOutput)
}

// Access key for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Access token url for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.AccessTokenUrl
	}).(pulumi.StringPtrOutput)
}

// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Client ID for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Domain for `ntlm` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Password for authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Region for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Secret key for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Service name for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Session token for `SIGV4` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) SessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.SessionToken
	}).(pulumi.StringPtrOutput)
}

// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) TokenApiAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.TokenApiAuthentication
	}).(pulumi.StringPtrOutput)
}

// Type of basic authentication to use when performing the test. Defaults to `"web"`.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Username for authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Workstation for `ntlm` authentication.
func (o SyntheticsTestApiStepRequestBasicauthPtrOutput) Workstation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Workstation
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificate struct {
	Cert SyntheticsTestApiStepRequestClientCertificateCert `pulumi:"cert"`
	Key  SyntheticsTestApiStepRequestClientCertificateKey  `pulumi:"key"`
}

// SyntheticsTestApiStepRequestClientCertificateInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateArgs and SyntheticsTestApiStepRequestClientCertificateOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificateInput` via:
//
//	SyntheticsTestApiStepRequestClientCertificateArgs{...}
type SyntheticsTestApiStepRequestClientCertificateInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificateOutput() SyntheticsTestApiStepRequestClientCertificateOutput
	ToSyntheticsTestApiStepRequestClientCertificateOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificateOutput
}

type SyntheticsTestApiStepRequestClientCertificateArgs struct {
	Cert SyntheticsTestApiStepRequestClientCertificateCertInput `pulumi:"cert"`
	Key  SyntheticsTestApiStepRequestClientCertificateKeyInput  `pulumi:"key"`
}

func (SyntheticsTestApiStepRequestClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificate)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestClientCertificateArgs) ToSyntheticsTestApiStepRequestClientCertificateOutput() SyntheticsTestApiStepRequestClientCertificateOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateArgs) ToSyntheticsTestApiStepRequestClientCertificateOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateOutput)
}

func (i SyntheticsTestApiStepRequestClientCertificateArgs) ToSyntheticsTestApiStepRequestClientCertificatePtrOutput() SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateArgs) ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateOutput).ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestClientCertificatePtrInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateArgs, SyntheticsTestApiStepRequestClientCertificatePtr and SyntheticsTestApiStepRequestClientCertificatePtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificatePtrInput` via:
//
//	        SyntheticsTestApiStepRequestClientCertificateArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestClientCertificatePtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificatePtrOutput() SyntheticsTestApiStepRequestClientCertificatePtrOutput
	ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificatePtrOutput
}

type syntheticsTestApiStepRequestClientCertificatePtrType SyntheticsTestApiStepRequestClientCertificateArgs

func SyntheticsTestApiStepRequestClientCertificatePtr(v *SyntheticsTestApiStepRequestClientCertificateArgs) SyntheticsTestApiStepRequestClientCertificatePtrInput {
	return (*syntheticsTestApiStepRequestClientCertificatePtrType)(v)
}

func (*syntheticsTestApiStepRequestClientCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificate)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestClientCertificatePtrType) ToSyntheticsTestApiStepRequestClientCertificatePtrOutput() SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestClientCertificatePtrType) ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificatePtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificate)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) ToSyntheticsTestApiStepRequestClientCertificateOutput() SyntheticsTestApiStepRequestClientCertificateOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) ToSyntheticsTestApiStepRequestClientCertificateOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) ToSyntheticsTestApiStepRequestClientCertificatePtrOutput() SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return o.ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestClientCertificate) *SyntheticsTestApiStepRequestClientCertificate {
		return &v
	}).(SyntheticsTestApiStepRequestClientCertificatePtrOutput)
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) Cert() SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificate) SyntheticsTestApiStepRequestClientCertificateCert {
		return v.Cert
	}).(SyntheticsTestApiStepRequestClientCertificateCertOutput)
}

func (o SyntheticsTestApiStepRequestClientCertificateOutput) Key() SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificate) SyntheticsTestApiStepRequestClientCertificateKey {
		return v.Key
	}).(SyntheticsTestApiStepRequestClientCertificateKeyOutput)
}

type SyntheticsTestApiStepRequestClientCertificatePtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificate)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificatePtrOutput) ToSyntheticsTestApiStepRequestClientCertificatePtrOutput() SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificatePtrOutput) ToSyntheticsTestApiStepRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificatePtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificatePtrOutput) Elem() SyntheticsTestApiStepRequestClientCertificateOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificate) SyntheticsTestApiStepRequestClientCertificate {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestClientCertificate
		return ret
	}).(SyntheticsTestApiStepRequestClientCertificateOutput)
}

func (o SyntheticsTestApiStepRequestClientCertificatePtrOutput) Cert() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificate) *SyntheticsTestApiStepRequestClientCertificateCert {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(SyntheticsTestApiStepRequestClientCertificateCertPtrOutput)
}

func (o SyntheticsTestApiStepRequestClientCertificatePtrOutput) Key() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificate) *SyntheticsTestApiStepRequestClientCertificateKey {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateCert struct {
	// Content of the certificate.
	Content string `pulumi:"content"`
	// File name for the certificate.
	Filename *string `pulumi:"filename"`
}

// SyntheticsTestApiStepRequestClientCertificateCertInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateCertArgs and SyntheticsTestApiStepRequestClientCertificateCertOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificateCertInput` via:
//
//	SyntheticsTestApiStepRequestClientCertificateCertArgs{...}
type SyntheticsTestApiStepRequestClientCertificateCertInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificateCertOutput() SyntheticsTestApiStepRequestClientCertificateCertOutput
	ToSyntheticsTestApiStepRequestClientCertificateCertOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificateCertOutput
}

type SyntheticsTestApiStepRequestClientCertificateCertArgs struct {
	// Content of the certificate.
	Content pulumi.StringInput `pulumi:"content"`
	// File name for the certificate.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (SyntheticsTestApiStepRequestClientCertificateCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateCert)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestClientCertificateCertArgs) ToSyntheticsTestApiStepRequestClientCertificateCertOutput() SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateCertOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateCertArgs) ToSyntheticsTestApiStepRequestClientCertificateCertOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateCertOutput)
}

func (i SyntheticsTestApiStepRequestClientCertificateCertArgs) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutput() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateCertArgs) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateCertOutput).ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestClientCertificateCertPtrInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateCertArgs, SyntheticsTestApiStepRequestClientCertificateCertPtr and SyntheticsTestApiStepRequestClientCertificateCertPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificateCertPtrInput` via:
//
//	        SyntheticsTestApiStepRequestClientCertificateCertArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestClientCertificateCertPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutput() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput
	ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificateCertPtrOutput
}

type syntheticsTestApiStepRequestClientCertificateCertPtrType SyntheticsTestApiStepRequestClientCertificateCertArgs

func SyntheticsTestApiStepRequestClientCertificateCertPtr(v *SyntheticsTestApiStepRequestClientCertificateCertArgs) SyntheticsTestApiStepRequestClientCertificateCertPtrInput {
	return (*syntheticsTestApiStepRequestClientCertificateCertPtrType)(v)
}

func (*syntheticsTestApiStepRequestClientCertificateCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificateCert)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestClientCertificateCertPtrType) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutput() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestClientCertificateCertPtrType) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateCertPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateCertOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificateCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateCert)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) ToSyntheticsTestApiStepRequestClientCertificateCertOutput() SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) ToSyntheticsTestApiStepRequestClientCertificateCertOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutput() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return o.ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestClientCertificateCert) *SyntheticsTestApiStepRequestClientCertificateCert {
		return &v
	}).(SyntheticsTestApiStepRequestClientCertificateCertPtrOutput)
}

// Content of the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificateCert) string { return v.Content }).(pulumi.StringOutput)
}

// File name for the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateCertOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificateCert) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateCertPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificateCert)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutput() SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) ToSyntheticsTestApiStepRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateCertPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) Elem() SyntheticsTestApiStepRequestClientCertificateCertOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateCert) SyntheticsTestApiStepRequestClientCertificateCert {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestClientCertificateCert
		return ret
	}).(SyntheticsTestApiStepRequestClientCertificateCertOutput)
}

// Content of the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateCert) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// File name for the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateCertPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateCert) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateKey struct {
	// Content of the certificate.
	Content string `pulumi:"content"`
	// File name for the certificate.
	Filename *string `pulumi:"filename"`
}

// SyntheticsTestApiStepRequestClientCertificateKeyInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateKeyArgs and SyntheticsTestApiStepRequestClientCertificateKeyOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificateKeyInput` via:
//
//	SyntheticsTestApiStepRequestClientCertificateKeyArgs{...}
type SyntheticsTestApiStepRequestClientCertificateKeyInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificateKeyOutput() SyntheticsTestApiStepRequestClientCertificateKeyOutput
	ToSyntheticsTestApiStepRequestClientCertificateKeyOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificateKeyOutput
}

type SyntheticsTestApiStepRequestClientCertificateKeyArgs struct {
	// Content of the certificate.
	Content pulumi.StringInput `pulumi:"content"`
	// File name for the certificate.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (SyntheticsTestApiStepRequestClientCertificateKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateKey)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestClientCertificateKeyArgs) ToSyntheticsTestApiStepRequestClientCertificateKeyOutput() SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateKeyOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateKeyArgs) ToSyntheticsTestApiStepRequestClientCertificateKeyOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateKeyOutput)
}

func (i SyntheticsTestApiStepRequestClientCertificateKeyArgs) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutput() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestClientCertificateKeyArgs) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateKeyOutput).ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestClientCertificateKeyPtrInput is an input type that accepts SyntheticsTestApiStepRequestClientCertificateKeyArgs, SyntheticsTestApiStepRequestClientCertificateKeyPtr and SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestClientCertificateKeyPtrInput` via:
//
//	        SyntheticsTestApiStepRequestClientCertificateKeyArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestClientCertificateKeyPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutput() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput
	ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput
}

type syntheticsTestApiStepRequestClientCertificateKeyPtrType SyntheticsTestApiStepRequestClientCertificateKeyArgs

func SyntheticsTestApiStepRequestClientCertificateKeyPtr(v *SyntheticsTestApiStepRequestClientCertificateKeyArgs) SyntheticsTestApiStepRequestClientCertificateKeyPtrInput {
	return (*syntheticsTestApiStepRequestClientCertificateKeyPtrType)(v)
}

func (*syntheticsTestApiStepRequestClientCertificateKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificateKey)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestClientCertificateKeyPtrType) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutput() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return i.ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestClientCertificateKeyPtrType) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateKeyOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificateKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateKey)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyOutput() SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutput() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return o.ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestClientCertificateKey) *SyntheticsTestApiStepRequestClientCertificateKey {
		return &v
	}).(SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput)
}

// Content of the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificateKey) string { return v.Content }).(pulumi.StringOutput)
}

// File name for the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateKeyOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestClientCertificateKey) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestClientCertificateKey)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutput() SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) ToSyntheticsTestApiStepRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) Elem() SyntheticsTestApiStepRequestClientCertificateKeyOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateKey) SyntheticsTestApiStepRequestClientCertificateKey {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestClientCertificateKey
		return ret
	}).(SyntheticsTestApiStepRequestClientCertificateKeyOutput)
}

// Content of the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateKey) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// File name for the certificate.
func (o SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestClientCertificateKey) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestDefinition struct {
	// Allows loading insecure content for a request in an API test or in a multistep API test step.
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// The request body.
	Body *string `pulumi:"body"`
	// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
	BodyType *string `pulumi:"bodyType"`
	// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
	CallType *string `pulumi:"callType"`
	// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
	CertificateDomains []string `pulumi:"certificateDomains"`
	// DNS server to use for DNS tests (`subtype = "dns"`).
	DnsServer *string `pulumi:"dnsServer"`
	// DNS server port to use for DNS tests.
	DnsServerPort *string `pulumi:"dnsServerPort"`
	// Determines whether or not the API HTTP test should follow redirects.
	FollowRedirects *bool `pulumi:"followRedirects"`
	// Host name to perform the test with.
	Host *string `pulumi:"host"`
	// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
	HttpVersion *string `pulumi:"httpVersion"`
	// For UDP and websocket tests, message to send with the request.
	Message *string `pulumi:"message"`
	// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
	Method *string `pulumi:"method"`
	// Determines whether or not to save the response body.
	NoSavingResponseBody *bool `pulumi:"noSavingResponseBody"`
	// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
	NumberOfPackets *int `pulumi:"numberOfPackets"`
	// Persist cookies across redirects.
	PersistCookies *bool `pulumi:"persistCookies"`
	// The content of a proto file as a string.
	PlainProtoFile *string `pulumi:"plainProtoFile"`
	// Port to use when performing the test.
	Port *string `pulumi:"port"`
	// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
	//
	// Deprecated: Use `plainProtoFile` instead.
	ProtoJsonDescriptor *string `pulumi:"protoJsonDescriptor"`
	// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
	Servername *string `pulumi:"servername"`
	// The gRPC service on which you want to perform the gRPC call.
	Service *string `pulumi:"service"`
	// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
	ShouldTrackHops *bool `pulumi:"shouldTrackHops"`
	// Timeout in seconds for the test.
	Timeout *int `pulumi:"timeout"`
	// The URL to send the request to.
	Url *string `pulumi:"url"`
}

// SyntheticsTestApiStepRequestDefinitionInput is an input type that accepts SyntheticsTestApiStepRequestDefinitionArgs and SyntheticsTestApiStepRequestDefinitionOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestDefinitionInput` via:
//
//	SyntheticsTestApiStepRequestDefinitionArgs{...}
type SyntheticsTestApiStepRequestDefinitionInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestDefinitionOutput() SyntheticsTestApiStepRequestDefinitionOutput
	ToSyntheticsTestApiStepRequestDefinitionOutputWithContext(context.Context) SyntheticsTestApiStepRequestDefinitionOutput
}

type SyntheticsTestApiStepRequestDefinitionArgs struct {
	// Allows loading insecure content for a request in an API test or in a multistep API test step.
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// The request body.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
	BodyType pulumi.StringPtrInput `pulumi:"bodyType"`
	// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
	CallType pulumi.StringPtrInput `pulumi:"callType"`
	// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
	CertificateDomains pulumi.StringArrayInput `pulumi:"certificateDomains"`
	// DNS server to use for DNS tests (`subtype = "dns"`).
	DnsServer pulumi.StringPtrInput `pulumi:"dnsServer"`
	// DNS server port to use for DNS tests.
	DnsServerPort pulumi.StringPtrInput `pulumi:"dnsServerPort"`
	// Determines whether or not the API HTTP test should follow redirects.
	FollowRedirects pulumi.BoolPtrInput `pulumi:"followRedirects"`
	// Host name to perform the test with.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
	HttpVersion pulumi.StringPtrInput `pulumi:"httpVersion"`
	// For UDP and websocket tests, message to send with the request.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Determines whether or not to save the response body.
	NoSavingResponseBody pulumi.BoolPtrInput `pulumi:"noSavingResponseBody"`
	// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
	NumberOfPackets pulumi.IntPtrInput `pulumi:"numberOfPackets"`
	// Persist cookies across redirects.
	PersistCookies pulumi.BoolPtrInput `pulumi:"persistCookies"`
	// The content of a proto file as a string.
	PlainProtoFile pulumi.StringPtrInput `pulumi:"plainProtoFile"`
	// Port to use when performing the test.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
	//
	// Deprecated: Use `plainProtoFile` instead.
	ProtoJsonDescriptor pulumi.StringPtrInput `pulumi:"protoJsonDescriptor"`
	// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
	Servername pulumi.StringPtrInput `pulumi:"servername"`
	// The gRPC service on which you want to perform the gRPC call.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
	ShouldTrackHops pulumi.BoolPtrInput `pulumi:"shouldTrackHops"`
	// Timeout in seconds for the test.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The URL to send the request to.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SyntheticsTestApiStepRequestDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestDefinition)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestDefinitionArgs) ToSyntheticsTestApiStepRequestDefinitionOutput() SyntheticsTestApiStepRequestDefinitionOutput {
	return i.ToSyntheticsTestApiStepRequestDefinitionOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestDefinitionArgs) ToSyntheticsTestApiStepRequestDefinitionOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestDefinitionOutput)
}

func (i SyntheticsTestApiStepRequestDefinitionArgs) ToSyntheticsTestApiStepRequestDefinitionPtrOutput() SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return i.ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestDefinitionArgs) ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestDefinitionOutput).ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestDefinitionPtrInput is an input type that accepts SyntheticsTestApiStepRequestDefinitionArgs, SyntheticsTestApiStepRequestDefinitionPtr and SyntheticsTestApiStepRequestDefinitionPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestDefinitionPtrInput` via:
//
//	        SyntheticsTestApiStepRequestDefinitionArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestDefinitionPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestDefinitionPtrOutput() SyntheticsTestApiStepRequestDefinitionPtrOutput
	ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestDefinitionPtrOutput
}

type syntheticsTestApiStepRequestDefinitionPtrType SyntheticsTestApiStepRequestDefinitionArgs

func SyntheticsTestApiStepRequestDefinitionPtr(v *SyntheticsTestApiStepRequestDefinitionArgs) SyntheticsTestApiStepRequestDefinitionPtrInput {
	return (*syntheticsTestApiStepRequestDefinitionPtrType)(v)
}

func (*syntheticsTestApiStepRequestDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestDefinition)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestDefinitionPtrType) ToSyntheticsTestApiStepRequestDefinitionPtrOutput() SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return i.ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestDefinitionPtrType) ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestDefinitionPtrOutput)
}

type SyntheticsTestApiStepRequestDefinitionOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestDefinition)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestDefinitionOutput) ToSyntheticsTestApiStepRequestDefinitionOutput() SyntheticsTestApiStepRequestDefinitionOutput {
	return o
}

func (o SyntheticsTestApiStepRequestDefinitionOutput) ToSyntheticsTestApiStepRequestDefinitionOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionOutput {
	return o
}

func (o SyntheticsTestApiStepRequestDefinitionOutput) ToSyntheticsTestApiStepRequestDefinitionPtrOutput() SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return o.ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestDefinitionOutput) ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestDefinition) *SyntheticsTestApiStepRequestDefinition {
		return &v
	}).(SyntheticsTestApiStepRequestDefinitionPtrOutput)
}

// Allows loading insecure content for a request in an API test or in a multistep API test step.
func (o SyntheticsTestApiStepRequestDefinitionOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// The request body.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
func (o SyntheticsTestApiStepRequestDefinitionOutput) BodyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.BodyType }).(pulumi.StringPtrOutput)
}

// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
func (o SyntheticsTestApiStepRequestDefinitionOutput) CallType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.CallType }).(pulumi.StringPtrOutput)
}

// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
func (o SyntheticsTestApiStepRequestDefinitionOutput) CertificateDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) []string { return v.CertificateDomains }).(pulumi.StringArrayOutput)
}

// DNS server to use for DNS tests (`subtype = "dns"`).
func (o SyntheticsTestApiStepRequestDefinitionOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.DnsServer }).(pulumi.StringPtrOutput)
}

// DNS server port to use for DNS tests.
func (o SyntheticsTestApiStepRequestDefinitionOutput) DnsServerPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.DnsServerPort }).(pulumi.StringPtrOutput)
}

// Determines whether or not the API HTTP test should follow redirects.
func (o SyntheticsTestApiStepRequestDefinitionOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *bool { return v.FollowRedirects }).(pulumi.BoolPtrOutput)
}

// Host name to perform the test with.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
func (o SyntheticsTestApiStepRequestDefinitionOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.HttpVersion }).(pulumi.StringPtrOutput)
}

// For UDP and websocket tests, message to send with the request.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Determines whether or not to save the response body.
func (o SyntheticsTestApiStepRequestDefinitionOutput) NoSavingResponseBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *bool { return v.NoSavingResponseBody }).(pulumi.BoolPtrOutput)
}

// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
func (o SyntheticsTestApiStepRequestDefinitionOutput) NumberOfPackets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *int { return v.NumberOfPackets }).(pulumi.IntPtrOutput)
}

// Persist cookies across redirects.
func (o SyntheticsTestApiStepRequestDefinitionOutput) PersistCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *bool { return v.PersistCookies }).(pulumi.BoolPtrOutput)
}

// The content of a proto file as a string.
func (o SyntheticsTestApiStepRequestDefinitionOutput) PlainProtoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.PlainProtoFile }).(pulumi.StringPtrOutput)
}

// Port to use when performing the test.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
//
// Deprecated: Use `plainProtoFile` instead.
func (o SyntheticsTestApiStepRequestDefinitionOutput) ProtoJsonDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.ProtoJsonDescriptor }).(pulumi.StringPtrOutput)
}

// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Servername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Servername }).(pulumi.StringPtrOutput)
}

// The gRPC service on which you want to perform the gRPC call.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
func (o SyntheticsTestApiStepRequestDefinitionOutput) ShouldTrackHops() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *bool { return v.ShouldTrackHops }).(pulumi.BoolPtrOutput)
}

// Timeout in seconds for the test.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The URL to send the request to.
func (o SyntheticsTestApiStepRequestDefinitionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestDefinition) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestDefinitionPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestDefinition)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) ToSyntheticsTestApiStepRequestDefinitionPtrOutput() SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) ToSyntheticsTestApiStepRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestDefinitionPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Elem() SyntheticsTestApiStepRequestDefinitionOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) SyntheticsTestApiStepRequestDefinition {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestDefinition
		return ret
	}).(SyntheticsTestApiStepRequestDefinitionOutput)
}

// Allows loading insecure content for a request in an API test or in a multistep API test step.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// The request body.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) BodyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.BodyType
	}).(pulumi.StringPtrOutput)
}

// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) CallType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.CallType
	}).(pulumi.StringPtrOutput)
}

// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) CertificateDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) []string {
		if v == nil {
			return nil
		}
		return v.CertificateDomains
	}).(pulumi.StringArrayOutput)
}

// DNS server to use for DNS tests (`subtype = "dns"`).
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DnsServer
	}).(pulumi.StringPtrOutput)
}

// DNS server port to use for DNS tests.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) DnsServerPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DnsServerPort
	}).(pulumi.StringPtrOutput)
}

// Determines whether or not the API HTTP test should follow redirects.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.FollowRedirects
	}).(pulumi.BoolPtrOutput)
}

// Host name to perform the test with.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.HttpVersion
	}).(pulumi.StringPtrOutput)
}

// For UDP and websocket tests, message to send with the request.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Determines whether or not to save the response body.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) NoSavingResponseBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.NoSavingResponseBody
	}).(pulumi.BoolPtrOutput)
}

// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) NumberOfPackets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfPackets
	}).(pulumi.IntPtrOutput)
}

// Persist cookies across redirects.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) PersistCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.PersistCookies
	}).(pulumi.BoolPtrOutput)
}

// The content of a proto file as a string.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) PlainProtoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.PlainProtoFile
	}).(pulumi.StringPtrOutput)
}

// Port to use when performing the test.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
//
// Deprecated: Use `plainProtoFile` instead.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) ProtoJsonDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ProtoJsonDescriptor
	}).(pulumi.StringPtrOutput)
}

// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Servername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Servername
	}).(pulumi.StringPtrOutput)
}

// The gRPC service on which you want to perform the gRPC call.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) ShouldTrackHops() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldTrackHops
	}).(pulumi.BoolPtrOutput)
}

// Timeout in seconds for the test.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The URL to send the request to.
func (o SyntheticsTestApiStepRequestDefinitionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRequestFile struct {
	// Bucket key of the file.
	BucketKey *string `pulumi:"bucketKey"`
	// Content of the file.
	Content *string `pulumi:"content"`
	// Name of the file.
	Name string `pulumi:"name"`
	// Original name of the file.
	OriginalFileName *string `pulumi:"originalFileName"`
	// Size of the file.
	Size int `pulumi:"size"`
	// Type of the file.
	Type string `pulumi:"type"`
}

// SyntheticsTestApiStepRequestFileInput is an input type that accepts SyntheticsTestApiStepRequestFileArgs and SyntheticsTestApiStepRequestFileOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestFileInput` via:
//
//	SyntheticsTestApiStepRequestFileArgs{...}
type SyntheticsTestApiStepRequestFileInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestFileOutput() SyntheticsTestApiStepRequestFileOutput
	ToSyntheticsTestApiStepRequestFileOutputWithContext(context.Context) SyntheticsTestApiStepRequestFileOutput
}

type SyntheticsTestApiStepRequestFileArgs struct {
	// Bucket key of the file.
	BucketKey pulumi.StringPtrInput `pulumi:"bucketKey"`
	// Content of the file.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Name of the file.
	Name pulumi.StringInput `pulumi:"name"`
	// Original name of the file.
	OriginalFileName pulumi.StringPtrInput `pulumi:"originalFileName"`
	// Size of the file.
	Size pulumi.IntInput `pulumi:"size"`
	// Type of the file.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestApiStepRequestFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestFile)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestFileArgs) ToSyntheticsTestApiStepRequestFileOutput() SyntheticsTestApiStepRequestFileOutput {
	return i.ToSyntheticsTestApiStepRequestFileOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestFileArgs) ToSyntheticsTestApiStepRequestFileOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestFileOutput)
}

// SyntheticsTestApiStepRequestFileArrayInput is an input type that accepts SyntheticsTestApiStepRequestFileArray and SyntheticsTestApiStepRequestFileArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestFileArrayInput` via:
//
//	SyntheticsTestApiStepRequestFileArray{ SyntheticsTestApiStepRequestFileArgs{...} }
type SyntheticsTestApiStepRequestFileArrayInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestFileArrayOutput() SyntheticsTestApiStepRequestFileArrayOutput
	ToSyntheticsTestApiStepRequestFileArrayOutputWithContext(context.Context) SyntheticsTestApiStepRequestFileArrayOutput
}

type SyntheticsTestApiStepRequestFileArray []SyntheticsTestApiStepRequestFileInput

func (SyntheticsTestApiStepRequestFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepRequestFile)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestFileArray) ToSyntheticsTestApiStepRequestFileArrayOutput() SyntheticsTestApiStepRequestFileArrayOutput {
	return i.ToSyntheticsTestApiStepRequestFileArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestFileArray) ToSyntheticsTestApiStepRequestFileArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestFileArrayOutput)
}

type SyntheticsTestApiStepRequestFileOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestFile)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestFileOutput) ToSyntheticsTestApiStepRequestFileOutput() SyntheticsTestApiStepRequestFileOutput {
	return o
}

func (o SyntheticsTestApiStepRequestFileOutput) ToSyntheticsTestApiStepRequestFileOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestFileOutput {
	return o
}

// Bucket key of the file.
func (o SyntheticsTestApiStepRequestFileOutput) BucketKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) *string { return v.BucketKey }).(pulumi.StringPtrOutput)
}

// Content of the file.
func (o SyntheticsTestApiStepRequestFileOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Name of the file.
func (o SyntheticsTestApiStepRequestFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) string { return v.Name }).(pulumi.StringOutput)
}

// Original name of the file.
func (o SyntheticsTestApiStepRequestFileOutput) OriginalFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) *string { return v.OriginalFileName }).(pulumi.StringPtrOutput)
}

// Size of the file.
func (o SyntheticsTestApiStepRequestFileOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) int { return v.Size }).(pulumi.IntOutput)
}

// Type of the file.
func (o SyntheticsTestApiStepRequestFileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestFile) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestApiStepRequestFileArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestApiStepRequestFile)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestFileArrayOutput) ToSyntheticsTestApiStepRequestFileArrayOutput() SyntheticsTestApiStepRequestFileArrayOutput {
	return o
}

func (o SyntheticsTestApiStepRequestFileArrayOutput) ToSyntheticsTestApiStepRequestFileArrayOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestFileArrayOutput {
	return o
}

func (o SyntheticsTestApiStepRequestFileArrayOutput) Index(i pulumi.IntInput) SyntheticsTestApiStepRequestFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestApiStepRequestFile {
		return vs[0].([]SyntheticsTestApiStepRequestFile)[vs[1].(int)]
	}).(SyntheticsTestApiStepRequestFileOutput)
}

type SyntheticsTestApiStepRequestProxy struct {
	// Header name and value map.
	Headers map[string]string `pulumi:"headers"`
	// URL of the proxy to perform the test.
	Url string `pulumi:"url"`
}

// SyntheticsTestApiStepRequestProxyInput is an input type that accepts SyntheticsTestApiStepRequestProxyArgs and SyntheticsTestApiStepRequestProxyOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestProxyInput` via:
//
//	SyntheticsTestApiStepRequestProxyArgs{...}
type SyntheticsTestApiStepRequestProxyInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestProxyOutput() SyntheticsTestApiStepRequestProxyOutput
	ToSyntheticsTestApiStepRequestProxyOutputWithContext(context.Context) SyntheticsTestApiStepRequestProxyOutput
}

type SyntheticsTestApiStepRequestProxyArgs struct {
	// Header name and value map.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// URL of the proxy to perform the test.
	Url pulumi.StringInput `pulumi:"url"`
}

func (SyntheticsTestApiStepRequestProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestProxy)(nil)).Elem()
}

func (i SyntheticsTestApiStepRequestProxyArgs) ToSyntheticsTestApiStepRequestProxyOutput() SyntheticsTestApiStepRequestProxyOutput {
	return i.ToSyntheticsTestApiStepRequestProxyOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestProxyArgs) ToSyntheticsTestApiStepRequestProxyOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestProxyOutput)
}

func (i SyntheticsTestApiStepRequestProxyArgs) ToSyntheticsTestApiStepRequestProxyPtrOutput() SyntheticsTestApiStepRequestProxyPtrOutput {
	return i.ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRequestProxyArgs) ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestProxyOutput).ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRequestProxyPtrInput is an input type that accepts SyntheticsTestApiStepRequestProxyArgs, SyntheticsTestApiStepRequestProxyPtr and SyntheticsTestApiStepRequestProxyPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRequestProxyPtrInput` via:
//
//	        SyntheticsTestApiStepRequestProxyArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRequestProxyPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRequestProxyPtrOutput() SyntheticsTestApiStepRequestProxyPtrOutput
	ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(context.Context) SyntheticsTestApiStepRequestProxyPtrOutput
}

type syntheticsTestApiStepRequestProxyPtrType SyntheticsTestApiStepRequestProxyArgs

func SyntheticsTestApiStepRequestProxyPtr(v *SyntheticsTestApiStepRequestProxyArgs) SyntheticsTestApiStepRequestProxyPtrInput {
	return (*syntheticsTestApiStepRequestProxyPtrType)(v)
}

func (*syntheticsTestApiStepRequestProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestProxy)(nil)).Elem()
}

func (i *syntheticsTestApiStepRequestProxyPtrType) ToSyntheticsTestApiStepRequestProxyPtrOutput() SyntheticsTestApiStepRequestProxyPtrOutput {
	return i.ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRequestProxyPtrType) ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRequestProxyPtrOutput)
}

type SyntheticsTestApiStepRequestProxyOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRequestProxy)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestProxyOutput) ToSyntheticsTestApiStepRequestProxyOutput() SyntheticsTestApiStepRequestProxyOutput {
	return o
}

func (o SyntheticsTestApiStepRequestProxyOutput) ToSyntheticsTestApiStepRequestProxyOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyOutput {
	return o
}

func (o SyntheticsTestApiStepRequestProxyOutput) ToSyntheticsTestApiStepRequestProxyPtrOutput() SyntheticsTestApiStepRequestProxyPtrOutput {
	return o.ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRequestProxyOutput) ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRequestProxy) *SyntheticsTestApiStepRequestProxy {
		return &v
	}).(SyntheticsTestApiStepRequestProxyPtrOutput)
}

// Header name and value map.
func (o SyntheticsTestApiStepRequestProxyOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestProxy) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// URL of the proxy to perform the test.
func (o SyntheticsTestApiStepRequestProxyOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRequestProxy) string { return v.Url }).(pulumi.StringOutput)
}

type SyntheticsTestApiStepRequestProxyPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRequestProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRequestProxy)(nil)).Elem()
}

func (o SyntheticsTestApiStepRequestProxyPtrOutput) ToSyntheticsTestApiStepRequestProxyPtrOutput() SyntheticsTestApiStepRequestProxyPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestProxyPtrOutput) ToSyntheticsTestApiStepRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRequestProxyPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRequestProxyPtrOutput) Elem() SyntheticsTestApiStepRequestProxyOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestProxy) SyntheticsTestApiStepRequestProxy {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRequestProxy
		return ret
	}).(SyntheticsTestApiStepRequestProxyOutput)
}

// Header name and value map.
func (o SyntheticsTestApiStepRequestProxyPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestProxy) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// URL of the proxy to perform the test.
func (o SyntheticsTestApiStepRequestProxyPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRequestProxy) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestApiStepRetry struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
	Count *int `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
	Interval *int `pulumi:"interval"`
}

// SyntheticsTestApiStepRetryInput is an input type that accepts SyntheticsTestApiStepRetryArgs and SyntheticsTestApiStepRetryOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRetryInput` via:
//
//	SyntheticsTestApiStepRetryArgs{...}
type SyntheticsTestApiStepRetryInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRetryOutput() SyntheticsTestApiStepRetryOutput
	ToSyntheticsTestApiStepRetryOutputWithContext(context.Context) SyntheticsTestApiStepRetryOutput
}

type SyntheticsTestApiStepRetryArgs struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (SyntheticsTestApiStepRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRetry)(nil)).Elem()
}

func (i SyntheticsTestApiStepRetryArgs) ToSyntheticsTestApiStepRetryOutput() SyntheticsTestApiStepRetryOutput {
	return i.ToSyntheticsTestApiStepRetryOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRetryArgs) ToSyntheticsTestApiStepRetryOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRetryOutput)
}

func (i SyntheticsTestApiStepRetryArgs) ToSyntheticsTestApiStepRetryPtrOutput() SyntheticsTestApiStepRetryPtrOutput {
	return i.ToSyntheticsTestApiStepRetryPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestApiStepRetryArgs) ToSyntheticsTestApiStepRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRetryOutput).ToSyntheticsTestApiStepRetryPtrOutputWithContext(ctx)
}

// SyntheticsTestApiStepRetryPtrInput is an input type that accepts SyntheticsTestApiStepRetryArgs, SyntheticsTestApiStepRetryPtr and SyntheticsTestApiStepRetryPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestApiStepRetryPtrInput` via:
//
//	        SyntheticsTestApiStepRetryArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestApiStepRetryPtrInput interface {
	pulumi.Input

	ToSyntheticsTestApiStepRetryPtrOutput() SyntheticsTestApiStepRetryPtrOutput
	ToSyntheticsTestApiStepRetryPtrOutputWithContext(context.Context) SyntheticsTestApiStepRetryPtrOutput
}

type syntheticsTestApiStepRetryPtrType SyntheticsTestApiStepRetryArgs

func SyntheticsTestApiStepRetryPtr(v *SyntheticsTestApiStepRetryArgs) SyntheticsTestApiStepRetryPtrInput {
	return (*syntheticsTestApiStepRetryPtrType)(v)
}

func (*syntheticsTestApiStepRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRetry)(nil)).Elem()
}

func (i *syntheticsTestApiStepRetryPtrType) ToSyntheticsTestApiStepRetryPtrOutput() SyntheticsTestApiStepRetryPtrOutput {
	return i.ToSyntheticsTestApiStepRetryPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestApiStepRetryPtrType) ToSyntheticsTestApiStepRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestApiStepRetryPtrOutput)
}

type SyntheticsTestApiStepRetryOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestApiStepRetry)(nil)).Elem()
}

func (o SyntheticsTestApiStepRetryOutput) ToSyntheticsTestApiStepRetryOutput() SyntheticsTestApiStepRetryOutput {
	return o
}

func (o SyntheticsTestApiStepRetryOutput) ToSyntheticsTestApiStepRetryOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryOutput {
	return o
}

func (o SyntheticsTestApiStepRetryOutput) ToSyntheticsTestApiStepRetryPtrOutput() SyntheticsTestApiStepRetryPtrOutput {
	return o.ToSyntheticsTestApiStepRetryPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestApiStepRetryOutput) ToSyntheticsTestApiStepRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestApiStepRetry) *SyntheticsTestApiStepRetry {
		return &v
	}).(SyntheticsTestApiStepRetryPtrOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
func (o SyntheticsTestApiStepRetryOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRetry) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
func (o SyntheticsTestApiStepRetryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestApiStepRetry) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type SyntheticsTestApiStepRetryPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestApiStepRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestApiStepRetry)(nil)).Elem()
}

func (o SyntheticsTestApiStepRetryPtrOutput) ToSyntheticsTestApiStepRetryPtrOutput() SyntheticsTestApiStepRetryPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRetryPtrOutput) ToSyntheticsTestApiStepRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestApiStepRetryPtrOutput {
	return o
}

func (o SyntheticsTestApiStepRetryPtrOutput) Elem() SyntheticsTestApiStepRetryOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRetry) SyntheticsTestApiStepRetry {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestApiStepRetry
		return ret
	}).(SyntheticsTestApiStepRetryOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
func (o SyntheticsTestApiStepRetryPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRetry) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
func (o SyntheticsTestApiStepRetryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestApiStepRetry) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestAssertion struct {
	// If assertion type is `javascript`, this is the JavaScript code that performs the assertions.
	Code *string `pulumi:"code"`
	// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
	Operator *string `pulumi:"operator"`
	// If assertion type is `header`, this is the header name.
	Property *string `pulumi:"property"`
	// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
	Target *string `pulumi:"target"`
	// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
	Targetjsonpath *SyntheticsTestAssertionTargetjsonpath `pulumi:"targetjsonpath"`
	// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
	Targetjsonschema *SyntheticsTestAssertionTargetjsonschema `pulumi:"targetjsonschema"`
	// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
	Targetxpath *SyntheticsTestAssertionTargetxpath `pulumi:"targetxpath"`
	// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
	TimingsScope *string `pulumi:"timingsScope"`
	// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`, `javascript`.
	Type string `pulumi:"type"`
}

// SyntheticsTestAssertionInput is an input type that accepts SyntheticsTestAssertionArgs and SyntheticsTestAssertionOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionInput` via:
//
//	SyntheticsTestAssertionArgs{...}
type SyntheticsTestAssertionInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionOutput() SyntheticsTestAssertionOutput
	ToSyntheticsTestAssertionOutputWithContext(context.Context) SyntheticsTestAssertionOutput
}

type SyntheticsTestAssertionArgs struct {
	// If assertion type is `javascript`, this is the JavaScript code that performs the assertions.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// If assertion type is `header`, this is the header name.
	Property pulumi.StringPtrInput `pulumi:"property"`
	// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
	Targetjsonpath SyntheticsTestAssertionTargetjsonpathPtrInput `pulumi:"targetjsonpath"`
	// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
	Targetjsonschema SyntheticsTestAssertionTargetjsonschemaPtrInput `pulumi:"targetjsonschema"`
	// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
	Targetxpath SyntheticsTestAssertionTargetxpathPtrInput `pulumi:"targetxpath"`
	// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
	TimingsScope pulumi.StringPtrInput `pulumi:"timingsScope"`
	// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`, `javascript`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestAssertionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertion)(nil)).Elem()
}

func (i SyntheticsTestAssertionArgs) ToSyntheticsTestAssertionOutput() SyntheticsTestAssertionOutput {
	return i.ToSyntheticsTestAssertionOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionArgs) ToSyntheticsTestAssertionOutputWithContext(ctx context.Context) SyntheticsTestAssertionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionOutput)
}

// SyntheticsTestAssertionArrayInput is an input type that accepts SyntheticsTestAssertionArray and SyntheticsTestAssertionArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionArrayInput` via:
//
//	SyntheticsTestAssertionArray{ SyntheticsTestAssertionArgs{...} }
type SyntheticsTestAssertionArrayInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionArrayOutput() SyntheticsTestAssertionArrayOutput
	ToSyntheticsTestAssertionArrayOutputWithContext(context.Context) SyntheticsTestAssertionArrayOutput
}

type SyntheticsTestAssertionArray []SyntheticsTestAssertionInput

func (SyntheticsTestAssertionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestAssertion)(nil)).Elem()
}

func (i SyntheticsTestAssertionArray) ToSyntheticsTestAssertionArrayOutput() SyntheticsTestAssertionArrayOutput {
	return i.ToSyntheticsTestAssertionArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionArray) ToSyntheticsTestAssertionArrayOutputWithContext(ctx context.Context) SyntheticsTestAssertionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionArrayOutput)
}

type SyntheticsTestAssertionOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertion)(nil)).Elem()
}

func (o SyntheticsTestAssertionOutput) ToSyntheticsTestAssertionOutput() SyntheticsTestAssertionOutput {
	return o
}

func (o SyntheticsTestAssertionOutput) ToSyntheticsTestAssertionOutputWithContext(ctx context.Context) SyntheticsTestAssertionOutput {
	return o
}

// If assertion type is `javascript`, this is the JavaScript code that performs the assertions.
func (o SyntheticsTestAssertionOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
func (o SyntheticsTestAssertionOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// If assertion type is `header`, this is the header name.
func (o SyntheticsTestAssertionOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *string { return v.Property }).(pulumi.StringPtrOutput)
}

// Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
func (o SyntheticsTestAssertionOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestAssertionOutput) Targetjsonpath() SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *SyntheticsTestAssertionTargetjsonpath { return v.Targetjsonpath }).(SyntheticsTestAssertionTargetjsonpathPtrOutput)
}

// Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestAssertionOutput) Targetjsonschema() SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *SyntheticsTestAssertionTargetjsonschema { return v.Targetjsonschema }).(SyntheticsTestAssertionTargetjsonschemaPtrOutput)
}

// Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
func (o SyntheticsTestAssertionOutput) Targetxpath() SyntheticsTestAssertionTargetxpathPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *SyntheticsTestAssertionTargetxpath { return v.Targetxpath }).(SyntheticsTestAssertionTargetxpathPtrOutput)
}

// Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
func (o SyntheticsTestAssertionOutput) TimingsScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) *string { return v.TimingsScope }).(pulumi.StringPtrOutput)
}

// Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`, `javascript`.
func (o SyntheticsTestAssertionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertion) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestAssertionArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestAssertion)(nil)).Elem()
}

func (o SyntheticsTestAssertionArrayOutput) ToSyntheticsTestAssertionArrayOutput() SyntheticsTestAssertionArrayOutput {
	return o
}

func (o SyntheticsTestAssertionArrayOutput) ToSyntheticsTestAssertionArrayOutputWithContext(ctx context.Context) SyntheticsTestAssertionArrayOutput {
	return o
}

func (o SyntheticsTestAssertionArrayOutput) Index(i pulumi.IntInput) SyntheticsTestAssertionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestAssertion {
		return vs[0].([]SyntheticsTestAssertion)[vs[1].(int)]
	}).(SyntheticsTestAssertionOutput)
}

type SyntheticsTestAssertionTargetjsonpath struct {
	// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `"firstElementMatches"`.
	Elementsoperator *string `pulumi:"elementsoperator"`
	// The JSON path to assert.
	Jsonpath string `pulumi:"jsonpath"`
	// The specific operator to use on the path.
	Operator string `pulumi:"operator"`
	// Expected matching value.
	Targetvalue *string `pulumi:"targetvalue"`
}

// SyntheticsTestAssertionTargetjsonpathInput is an input type that accepts SyntheticsTestAssertionTargetjsonpathArgs and SyntheticsTestAssertionTargetjsonpathOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetjsonpathInput` via:
//
//	SyntheticsTestAssertionTargetjsonpathArgs{...}
type SyntheticsTestAssertionTargetjsonpathInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetjsonpathOutput() SyntheticsTestAssertionTargetjsonpathOutput
	ToSyntheticsTestAssertionTargetjsonpathOutputWithContext(context.Context) SyntheticsTestAssertionTargetjsonpathOutput
}

type SyntheticsTestAssertionTargetjsonpathArgs struct {
	// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `"firstElementMatches"`.
	Elementsoperator pulumi.StringPtrInput `pulumi:"elementsoperator"`
	// The JSON path to assert.
	Jsonpath pulumi.StringInput `pulumi:"jsonpath"`
	// The specific operator to use on the path.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Expected matching value.
	Targetvalue pulumi.StringPtrInput `pulumi:"targetvalue"`
}

func (SyntheticsTestAssertionTargetjsonpathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetjsonpath)(nil)).Elem()
}

func (i SyntheticsTestAssertionTargetjsonpathArgs) ToSyntheticsTestAssertionTargetjsonpathOutput() SyntheticsTestAssertionTargetjsonpathOutput {
	return i.ToSyntheticsTestAssertionTargetjsonpathOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetjsonpathArgs) ToSyntheticsTestAssertionTargetjsonpathOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonpathOutput)
}

func (i SyntheticsTestAssertionTargetjsonpathArgs) ToSyntheticsTestAssertionTargetjsonpathPtrOutput() SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return i.ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetjsonpathArgs) ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonpathOutput).ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(ctx)
}

// SyntheticsTestAssertionTargetjsonpathPtrInput is an input type that accepts SyntheticsTestAssertionTargetjsonpathArgs, SyntheticsTestAssertionTargetjsonpathPtr and SyntheticsTestAssertionTargetjsonpathPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetjsonpathPtrInput` via:
//
//	        SyntheticsTestAssertionTargetjsonpathArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestAssertionTargetjsonpathPtrInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetjsonpathPtrOutput() SyntheticsTestAssertionTargetjsonpathPtrOutput
	ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(context.Context) SyntheticsTestAssertionTargetjsonpathPtrOutput
}

type syntheticsTestAssertionTargetjsonpathPtrType SyntheticsTestAssertionTargetjsonpathArgs

func SyntheticsTestAssertionTargetjsonpathPtr(v *SyntheticsTestAssertionTargetjsonpathArgs) SyntheticsTestAssertionTargetjsonpathPtrInput {
	return (*syntheticsTestAssertionTargetjsonpathPtrType)(v)
}

func (*syntheticsTestAssertionTargetjsonpathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetjsonpath)(nil)).Elem()
}

func (i *syntheticsTestAssertionTargetjsonpathPtrType) ToSyntheticsTestAssertionTargetjsonpathPtrOutput() SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return i.ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestAssertionTargetjsonpathPtrType) ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonpathPtrOutput)
}

type SyntheticsTestAssertionTargetjsonpathOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetjsonpathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetjsonpath)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetjsonpathOutput) ToSyntheticsTestAssertionTargetjsonpathOutput() SyntheticsTestAssertionTargetjsonpathOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonpathOutput) ToSyntheticsTestAssertionTargetjsonpathOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonpathOutput) ToSyntheticsTestAssertionTargetjsonpathPtrOutput() SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return o.ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestAssertionTargetjsonpathOutput) ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestAssertionTargetjsonpath) *SyntheticsTestAssertionTargetjsonpath {
		return &v
	}).(SyntheticsTestAssertionTargetjsonpathPtrOutput)
}

// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `"firstElementMatches"`.
func (o SyntheticsTestAssertionTargetjsonpathOutput) Elementsoperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonpath) *string { return v.Elementsoperator }).(pulumi.StringPtrOutput)
}

// The JSON path to assert.
func (o SyntheticsTestAssertionTargetjsonpathOutput) Jsonpath() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonpath) string { return v.Jsonpath }).(pulumi.StringOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestAssertionTargetjsonpathOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonpath) string { return v.Operator }).(pulumi.StringOutput)
}

// Expected matching value.
func (o SyntheticsTestAssertionTargetjsonpathOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonpath) *string { return v.Targetvalue }).(pulumi.StringPtrOutput)
}

type SyntheticsTestAssertionTargetjsonpathPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetjsonpathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetjsonpath)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) ToSyntheticsTestAssertionTargetjsonpathPtrOutput() SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) ToSyntheticsTestAssertionTargetjsonpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonpathPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) Elem() SyntheticsTestAssertionTargetjsonpathOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonpath) SyntheticsTestAssertionTargetjsonpath {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestAssertionTargetjsonpath
		return ret
	}).(SyntheticsTestAssertionTargetjsonpathOutput)
}

// The element from the list of results to assert on. Select from `firstElementMatches` (the first element in the list), `everyElementMatches` (every element in the list), `atLeastOneElementMatches` (at least one element in the list), or `serializationMatches` (the serialized value of the list). Defaults to `"firstElementMatches"`.
func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) Elementsoperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return v.Elementsoperator
	}).(pulumi.StringPtrOutput)
}

// The JSON path to assert.
func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) Jsonpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return &v.Jsonpath
	}).(pulumi.StringPtrOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Expected matching value.
func (o SyntheticsTestAssertionTargetjsonpathPtrOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonpath) *string {
		if v == nil {
			return nil
		}
		return v.Targetvalue
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestAssertionTargetjsonschema struct {
	// The JSON Schema to validate the body against.
	Jsonschema string `pulumi:"jsonschema"`
	// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
	Metaschema *string `pulumi:"metaschema"`
}

// SyntheticsTestAssertionTargetjsonschemaInput is an input type that accepts SyntheticsTestAssertionTargetjsonschemaArgs and SyntheticsTestAssertionTargetjsonschemaOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetjsonschemaInput` via:
//
//	SyntheticsTestAssertionTargetjsonschemaArgs{...}
type SyntheticsTestAssertionTargetjsonschemaInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetjsonschemaOutput() SyntheticsTestAssertionTargetjsonschemaOutput
	ToSyntheticsTestAssertionTargetjsonschemaOutputWithContext(context.Context) SyntheticsTestAssertionTargetjsonschemaOutput
}

type SyntheticsTestAssertionTargetjsonschemaArgs struct {
	// The JSON Schema to validate the body against.
	Jsonschema pulumi.StringInput `pulumi:"jsonschema"`
	// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
	Metaschema pulumi.StringPtrInput `pulumi:"metaschema"`
}

func (SyntheticsTestAssertionTargetjsonschemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetjsonschema)(nil)).Elem()
}

func (i SyntheticsTestAssertionTargetjsonschemaArgs) ToSyntheticsTestAssertionTargetjsonschemaOutput() SyntheticsTestAssertionTargetjsonschemaOutput {
	return i.ToSyntheticsTestAssertionTargetjsonschemaOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetjsonschemaArgs) ToSyntheticsTestAssertionTargetjsonschemaOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonschemaOutput)
}

func (i SyntheticsTestAssertionTargetjsonschemaArgs) ToSyntheticsTestAssertionTargetjsonschemaPtrOutput() SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return i.ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetjsonschemaArgs) ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonschemaOutput).ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(ctx)
}

// SyntheticsTestAssertionTargetjsonschemaPtrInput is an input type that accepts SyntheticsTestAssertionTargetjsonschemaArgs, SyntheticsTestAssertionTargetjsonschemaPtr and SyntheticsTestAssertionTargetjsonschemaPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetjsonschemaPtrInput` via:
//
//	        SyntheticsTestAssertionTargetjsonschemaArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestAssertionTargetjsonschemaPtrInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetjsonschemaPtrOutput() SyntheticsTestAssertionTargetjsonschemaPtrOutput
	ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(context.Context) SyntheticsTestAssertionTargetjsonschemaPtrOutput
}

type syntheticsTestAssertionTargetjsonschemaPtrType SyntheticsTestAssertionTargetjsonschemaArgs

func SyntheticsTestAssertionTargetjsonschemaPtr(v *SyntheticsTestAssertionTargetjsonschemaArgs) SyntheticsTestAssertionTargetjsonschemaPtrInput {
	return (*syntheticsTestAssertionTargetjsonschemaPtrType)(v)
}

func (*syntheticsTestAssertionTargetjsonschemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetjsonschema)(nil)).Elem()
}

func (i *syntheticsTestAssertionTargetjsonschemaPtrType) ToSyntheticsTestAssertionTargetjsonschemaPtrOutput() SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return i.ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestAssertionTargetjsonschemaPtrType) ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetjsonschemaPtrOutput)
}

type SyntheticsTestAssertionTargetjsonschemaOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetjsonschemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetjsonschema)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetjsonschemaOutput) ToSyntheticsTestAssertionTargetjsonschemaOutput() SyntheticsTestAssertionTargetjsonschemaOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonschemaOutput) ToSyntheticsTestAssertionTargetjsonschemaOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonschemaOutput) ToSyntheticsTestAssertionTargetjsonschemaPtrOutput() SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return o.ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestAssertionTargetjsonschemaOutput) ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestAssertionTargetjsonschema) *SyntheticsTestAssertionTargetjsonschema {
		return &v
	}).(SyntheticsTestAssertionTargetjsonschemaPtrOutput)
}

// The JSON Schema to validate the body against.
func (o SyntheticsTestAssertionTargetjsonschemaOutput) Jsonschema() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonschema) string { return v.Jsonschema }).(pulumi.StringOutput)
}

// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
func (o SyntheticsTestAssertionTargetjsonschemaOutput) Metaschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetjsonschema) *string { return v.Metaschema }).(pulumi.StringPtrOutput)
}

type SyntheticsTestAssertionTargetjsonschemaPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetjsonschemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetjsonschema)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetjsonschemaPtrOutput) ToSyntheticsTestAssertionTargetjsonschemaPtrOutput() SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonschemaPtrOutput) ToSyntheticsTestAssertionTargetjsonschemaPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetjsonschemaPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetjsonschemaPtrOutput) Elem() SyntheticsTestAssertionTargetjsonschemaOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonschema) SyntheticsTestAssertionTargetjsonschema {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestAssertionTargetjsonschema
		return ret
	}).(SyntheticsTestAssertionTargetjsonschemaOutput)
}

// The JSON Schema to validate the body against.
func (o SyntheticsTestAssertionTargetjsonschemaPtrOutput) Jsonschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonschema) *string {
		if v == nil {
			return nil
		}
		return &v.Jsonschema
	}).(pulumi.StringPtrOutput)
}

// The meta schema to use for the JSON Schema. Defaults to `"draft-07"`.
func (o SyntheticsTestAssertionTargetjsonschemaPtrOutput) Metaschema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetjsonschema) *string {
		if v == nil {
			return nil
		}
		return v.Metaschema
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestAssertionTargetxpath struct {
	// The specific operator to use on the path.
	Operator string `pulumi:"operator"`
	// Expected matching value.
	Targetvalue *string `pulumi:"targetvalue"`
	// The xpath to assert.
	Xpath string `pulumi:"xpath"`
}

// SyntheticsTestAssertionTargetxpathInput is an input type that accepts SyntheticsTestAssertionTargetxpathArgs and SyntheticsTestAssertionTargetxpathOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetxpathInput` via:
//
//	SyntheticsTestAssertionTargetxpathArgs{...}
type SyntheticsTestAssertionTargetxpathInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetxpathOutput() SyntheticsTestAssertionTargetxpathOutput
	ToSyntheticsTestAssertionTargetxpathOutputWithContext(context.Context) SyntheticsTestAssertionTargetxpathOutput
}

type SyntheticsTestAssertionTargetxpathArgs struct {
	// The specific operator to use on the path.
	Operator pulumi.StringInput `pulumi:"operator"`
	// Expected matching value.
	Targetvalue pulumi.StringPtrInput `pulumi:"targetvalue"`
	// The xpath to assert.
	Xpath pulumi.StringInput `pulumi:"xpath"`
}

func (SyntheticsTestAssertionTargetxpathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetxpath)(nil)).Elem()
}

func (i SyntheticsTestAssertionTargetxpathArgs) ToSyntheticsTestAssertionTargetxpathOutput() SyntheticsTestAssertionTargetxpathOutput {
	return i.ToSyntheticsTestAssertionTargetxpathOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetxpathArgs) ToSyntheticsTestAssertionTargetxpathOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetxpathOutput)
}

func (i SyntheticsTestAssertionTargetxpathArgs) ToSyntheticsTestAssertionTargetxpathPtrOutput() SyntheticsTestAssertionTargetxpathPtrOutput {
	return i.ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestAssertionTargetxpathArgs) ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetxpathOutput).ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(ctx)
}

// SyntheticsTestAssertionTargetxpathPtrInput is an input type that accepts SyntheticsTestAssertionTargetxpathArgs, SyntheticsTestAssertionTargetxpathPtr and SyntheticsTestAssertionTargetxpathPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestAssertionTargetxpathPtrInput` via:
//
//	        SyntheticsTestAssertionTargetxpathArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestAssertionTargetxpathPtrInput interface {
	pulumi.Input

	ToSyntheticsTestAssertionTargetxpathPtrOutput() SyntheticsTestAssertionTargetxpathPtrOutput
	ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(context.Context) SyntheticsTestAssertionTargetxpathPtrOutput
}

type syntheticsTestAssertionTargetxpathPtrType SyntheticsTestAssertionTargetxpathArgs

func SyntheticsTestAssertionTargetxpathPtr(v *SyntheticsTestAssertionTargetxpathArgs) SyntheticsTestAssertionTargetxpathPtrInput {
	return (*syntheticsTestAssertionTargetxpathPtrType)(v)
}

func (*syntheticsTestAssertionTargetxpathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetxpath)(nil)).Elem()
}

func (i *syntheticsTestAssertionTargetxpathPtrType) ToSyntheticsTestAssertionTargetxpathPtrOutput() SyntheticsTestAssertionTargetxpathPtrOutput {
	return i.ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestAssertionTargetxpathPtrType) ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestAssertionTargetxpathPtrOutput)
}

type SyntheticsTestAssertionTargetxpathOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetxpathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestAssertionTargetxpath)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetxpathOutput) ToSyntheticsTestAssertionTargetxpathOutput() SyntheticsTestAssertionTargetxpathOutput {
	return o
}

func (o SyntheticsTestAssertionTargetxpathOutput) ToSyntheticsTestAssertionTargetxpathOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathOutput {
	return o
}

func (o SyntheticsTestAssertionTargetxpathOutput) ToSyntheticsTestAssertionTargetxpathPtrOutput() SyntheticsTestAssertionTargetxpathPtrOutput {
	return o.ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestAssertionTargetxpathOutput) ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestAssertionTargetxpath) *SyntheticsTestAssertionTargetxpath {
		return &v
	}).(SyntheticsTestAssertionTargetxpathPtrOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestAssertionTargetxpathOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetxpath) string { return v.Operator }).(pulumi.StringOutput)
}

// Expected matching value.
func (o SyntheticsTestAssertionTargetxpathOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetxpath) *string { return v.Targetvalue }).(pulumi.StringPtrOutput)
}

// The xpath to assert.
func (o SyntheticsTestAssertionTargetxpathOutput) Xpath() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestAssertionTargetxpath) string { return v.Xpath }).(pulumi.StringOutput)
}

type SyntheticsTestAssertionTargetxpathPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestAssertionTargetxpathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestAssertionTargetxpath)(nil)).Elem()
}

func (o SyntheticsTestAssertionTargetxpathPtrOutput) ToSyntheticsTestAssertionTargetxpathPtrOutput() SyntheticsTestAssertionTargetxpathPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetxpathPtrOutput) ToSyntheticsTestAssertionTargetxpathPtrOutputWithContext(ctx context.Context) SyntheticsTestAssertionTargetxpathPtrOutput {
	return o
}

func (o SyntheticsTestAssertionTargetxpathPtrOutput) Elem() SyntheticsTestAssertionTargetxpathOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetxpath) SyntheticsTestAssertionTargetxpath {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestAssertionTargetxpath
		return ret
	}).(SyntheticsTestAssertionTargetxpathOutput)
}

// The specific operator to use on the path.
func (o SyntheticsTestAssertionTargetxpathPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

// Expected matching value.
func (o SyntheticsTestAssertionTargetxpathPtrOutput) Targetvalue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return v.Targetvalue
	}).(pulumi.StringPtrOutput)
}

// The xpath to assert.
func (o SyntheticsTestAssertionTargetxpathPtrOutput) Xpath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestAssertionTargetxpath) *string {
		if v == nil {
			return nil
		}
		return &v.Xpath
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestBrowserStep struct {
	// Determines if the step should be allowed to fail.
	AllowFailure *bool `pulumi:"allowFailure"`
	// Determines whether or not to always execute this step even if the previous step failed or was skipped.
	AlwaysExecute *bool `pulumi:"alwaysExecute"`
	// Determines whether or not to exit the test if the step succeeds.
	ExitIfSucceed *bool `pulumi:"exitIfSucceed"`
	// Force update of the "element" parameter for the step
	ForceElementUpdate *bool `pulumi:"forceElementUpdate"`
	// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
	IsCritical *bool `pulumi:"isCritical"`
	// A unique identifier used to track steps after reordering.
	LocalKey *string `pulumi:"localKey"`
	// Name of the step.
	Name string `pulumi:"name"`
	// Prevents saving screenshots of the step.
	NoScreenshot *bool `pulumi:"noScreenshot"`
	// Parameters for the step.
	Params SyntheticsTestBrowserStepParams `pulumi:"params"`
	// The identifier of the step on the backend.
	PublicId *string `pulumi:"publicId"`
	// Used to override the default timeout of a step.
	Timeout *int `pulumi:"timeout"`
	// Type of the step. Valid values are `assertCurrentUrl`, `assertElementAttribute`, `assertElementContent`, `assertElementPresent`, `assertEmail`, `assertFileDownload`, `assertFromJavascript`, `assertPageContains`, `assertPageLacks`, `click`, `extractFromJavascript`, `extractVariable`, `goToEmailLink`, `goToUrl`, `goToUrlAndMeasureTti`, `hover`, `playSubTest`, `pressKey`, `refresh`, `runApiTest`, `scroll`, `selectOption`, `typeText`, `uploadFiles`, `wait`.
	Type string `pulumi:"type"`
}

// SyntheticsTestBrowserStepInput is an input type that accepts SyntheticsTestBrowserStepArgs and SyntheticsTestBrowserStepOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepInput` via:
//
//	SyntheticsTestBrowserStepArgs{...}
type SyntheticsTestBrowserStepInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepOutput() SyntheticsTestBrowserStepOutput
	ToSyntheticsTestBrowserStepOutputWithContext(context.Context) SyntheticsTestBrowserStepOutput
}

type SyntheticsTestBrowserStepArgs struct {
	// Determines if the step should be allowed to fail.
	AllowFailure pulumi.BoolPtrInput `pulumi:"allowFailure"`
	// Determines whether or not to always execute this step even if the previous step failed or was skipped.
	AlwaysExecute pulumi.BoolPtrInput `pulumi:"alwaysExecute"`
	// Determines whether or not to exit the test if the step succeeds.
	ExitIfSucceed pulumi.BoolPtrInput `pulumi:"exitIfSucceed"`
	// Force update of the "element" parameter for the step
	ForceElementUpdate pulumi.BoolPtrInput `pulumi:"forceElementUpdate"`
	// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
	IsCritical pulumi.BoolPtrInput `pulumi:"isCritical"`
	// A unique identifier used to track steps after reordering.
	LocalKey pulumi.StringPtrInput `pulumi:"localKey"`
	// Name of the step.
	Name pulumi.StringInput `pulumi:"name"`
	// Prevents saving screenshots of the step.
	NoScreenshot pulumi.BoolPtrInput `pulumi:"noScreenshot"`
	// Parameters for the step.
	Params SyntheticsTestBrowserStepParamsInput `pulumi:"params"`
	// The identifier of the step on the backend.
	PublicId pulumi.StringPtrInput `pulumi:"publicId"`
	// Used to override the default timeout of a step.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Type of the step. Valid values are `assertCurrentUrl`, `assertElementAttribute`, `assertElementContent`, `assertElementPresent`, `assertEmail`, `assertFileDownload`, `assertFromJavascript`, `assertPageContains`, `assertPageLacks`, `click`, `extractFromJavascript`, `extractVariable`, `goToEmailLink`, `goToUrl`, `goToUrlAndMeasureTti`, `hover`, `playSubTest`, `pressKey`, `refresh`, `runApiTest`, `scroll`, `selectOption`, `typeText`, `uploadFiles`, `wait`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestBrowserStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStep)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepArgs) ToSyntheticsTestBrowserStepOutput() SyntheticsTestBrowserStepOutput {
	return i.ToSyntheticsTestBrowserStepOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepArgs) ToSyntheticsTestBrowserStepOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepOutput)
}

// SyntheticsTestBrowserStepArrayInput is an input type that accepts SyntheticsTestBrowserStepArray and SyntheticsTestBrowserStepArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepArrayInput` via:
//
//	SyntheticsTestBrowserStepArray{ SyntheticsTestBrowserStepArgs{...} }
type SyntheticsTestBrowserStepArrayInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepArrayOutput() SyntheticsTestBrowserStepArrayOutput
	ToSyntheticsTestBrowserStepArrayOutputWithContext(context.Context) SyntheticsTestBrowserStepArrayOutput
}

type SyntheticsTestBrowserStepArray []SyntheticsTestBrowserStepInput

func (SyntheticsTestBrowserStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestBrowserStep)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepArray) ToSyntheticsTestBrowserStepArrayOutput() SyntheticsTestBrowserStepArrayOutput {
	return i.ToSyntheticsTestBrowserStepArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepArray) ToSyntheticsTestBrowserStepArrayOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepArrayOutput)
}

type SyntheticsTestBrowserStepOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStep)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepOutput) ToSyntheticsTestBrowserStepOutput() SyntheticsTestBrowserStepOutput {
	return o
}

func (o SyntheticsTestBrowserStepOutput) ToSyntheticsTestBrowserStepOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepOutput {
	return o
}

// Determines if the step should be allowed to fail.
func (o SyntheticsTestBrowserStepOutput) AllowFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *bool { return v.AllowFailure }).(pulumi.BoolPtrOutput)
}

// Determines whether or not to always execute this step even if the previous step failed or was skipped.
func (o SyntheticsTestBrowserStepOutput) AlwaysExecute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *bool { return v.AlwaysExecute }).(pulumi.BoolPtrOutput)
}

// Determines whether or not to exit the test if the step succeeds.
func (o SyntheticsTestBrowserStepOutput) ExitIfSucceed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *bool { return v.ExitIfSucceed }).(pulumi.BoolPtrOutput)
}

// Force update of the "element" parameter for the step
func (o SyntheticsTestBrowserStepOutput) ForceElementUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *bool { return v.ForceElementUpdate }).(pulumi.BoolPtrOutput)
}

// Determines whether or not to consider the entire test as failed if this step fails. Can be used only if `allowFailure` is `true`.
func (o SyntheticsTestBrowserStepOutput) IsCritical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *bool { return v.IsCritical }).(pulumi.BoolPtrOutput)
}

// A unique identifier used to track steps after reordering.
func (o SyntheticsTestBrowserStepOutput) LocalKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *string { return v.LocalKey }).(pulumi.StringPtrOutput)
}

// Name of the step.
func (o SyntheticsTestBrowserStepOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) string { return v.Name }).(pulumi.StringOutput)
}

// Prevents saving screenshots of the step.
func (o SyntheticsTestBrowserStepOutput) NoScreenshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *bool { return v.NoScreenshot }).(pulumi.BoolPtrOutput)
}

// Parameters for the step.
func (o SyntheticsTestBrowserStepOutput) Params() SyntheticsTestBrowserStepParamsOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) SyntheticsTestBrowserStepParams { return v.Params }).(SyntheticsTestBrowserStepParamsOutput)
}

// The identifier of the step on the backend.
func (o SyntheticsTestBrowserStepOutput) PublicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *string { return v.PublicId }).(pulumi.StringPtrOutput)
}

// Used to override the default timeout of a step.
func (o SyntheticsTestBrowserStepOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Type of the step. Valid values are `assertCurrentUrl`, `assertElementAttribute`, `assertElementContent`, `assertElementPresent`, `assertEmail`, `assertFileDownload`, `assertFromJavascript`, `assertPageContains`, `assertPageLacks`, `click`, `extractFromJavascript`, `extractVariable`, `goToEmailLink`, `goToUrl`, `goToUrlAndMeasureTti`, `hover`, `playSubTest`, `pressKey`, `refresh`, `runApiTest`, `scroll`, `selectOption`, `typeText`, `uploadFiles`, `wait`.
func (o SyntheticsTestBrowserStepOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStep) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestBrowserStepArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestBrowserStep)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepArrayOutput) ToSyntheticsTestBrowserStepArrayOutput() SyntheticsTestBrowserStepArrayOutput {
	return o
}

func (o SyntheticsTestBrowserStepArrayOutput) ToSyntheticsTestBrowserStepArrayOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepArrayOutput {
	return o
}

func (o SyntheticsTestBrowserStepArrayOutput) Index(i pulumi.IntInput) SyntheticsTestBrowserStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestBrowserStep {
		return vs[0].([]SyntheticsTestBrowserStep)[vs[1].(int)]
	}).(SyntheticsTestBrowserStepOutput)
}

type SyntheticsTestBrowserStepParams struct {
	// Name of the attribute to use for an "assert attribute" step.
	Attribute *string `pulumi:"attribute"`
	// Check type to use for an assertion step. Valid values are `equals`, `notEquals`, `contains`, `notContains`, `startsWith`, `notStartsWith`, `greater`, `lower`, `greaterEquals`, `lowerEquals`, `matchRegex`, `between`, `isEmpty`, `notIsEmpty`.
	Check *string `pulumi:"check"`
	// Type of click to use for a "click" step.
	ClickType *string `pulumi:"clickType"`
	// Javascript code to use for the step.
	Code *string `pulumi:"code"`
	// Delay between each key stroke for a "type test" step.
	Delay *int `pulumi:"delay"`
	// Element to use for the step, JSON encoded string.
	Element *string `pulumi:"element"`
	// Custom user selector to use for the step.
	ElementUserLocator *SyntheticsTestBrowserStepParamsElementUserLocator `pulumi:"elementUserLocator"`
	// Details of the email for an "assert email" step, JSON encoded string.
	Email *string `pulumi:"email"`
	// JSON encoded string used for an "assert download" step. Refer to the examples for a usage example showing the schema.
	File *string `pulumi:"file"`
	// Details of the files for an "upload files" step, JSON encoded string. Refer to the examples for a usage example showing the schema.
	Files *string `pulumi:"files"`
	// Modifier to use for a "press key" step.
	Modifiers []string `pulumi:"modifiers"`
	// ID of the tab to play the subtest.
	PlayingTabId *string `pulumi:"playingTabId"`
	// Request for an API step.
	Request *string `pulumi:"request"`
	// ID of the Synthetics test to use as subtest.
	SubtestPublicId *string `pulumi:"subtestPublicId"`
	// Value of the step.
	Value *string `pulumi:"value"`
	// Details of the variable to extract.
	Variable *SyntheticsTestBrowserStepParamsVariable `pulumi:"variable"`
	// For "file upload" steps.
	WithClick *bool `pulumi:"withClick"`
	// X coordinates for a "scroll step".
	X *int `pulumi:"x"`
	// Y coordinates for a "scroll step".
	Y *int `pulumi:"y"`
}

// SyntheticsTestBrowserStepParamsInput is an input type that accepts SyntheticsTestBrowserStepParamsArgs and SyntheticsTestBrowserStepParamsOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsInput` via:
//
//	SyntheticsTestBrowserStepParamsArgs{...}
type SyntheticsTestBrowserStepParamsInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsOutput() SyntheticsTestBrowserStepParamsOutput
	ToSyntheticsTestBrowserStepParamsOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsOutput
}

type SyntheticsTestBrowserStepParamsArgs struct {
	// Name of the attribute to use for an "assert attribute" step.
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	// Check type to use for an assertion step. Valid values are `equals`, `notEquals`, `contains`, `notContains`, `startsWith`, `notStartsWith`, `greater`, `lower`, `greaterEquals`, `lowerEquals`, `matchRegex`, `between`, `isEmpty`, `notIsEmpty`.
	Check pulumi.StringPtrInput `pulumi:"check"`
	// Type of click to use for a "click" step.
	ClickType pulumi.StringPtrInput `pulumi:"clickType"`
	// Javascript code to use for the step.
	Code pulumi.StringPtrInput `pulumi:"code"`
	// Delay between each key stroke for a "type test" step.
	Delay pulumi.IntPtrInput `pulumi:"delay"`
	// Element to use for the step, JSON encoded string.
	Element pulumi.StringPtrInput `pulumi:"element"`
	// Custom user selector to use for the step.
	ElementUserLocator SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput `pulumi:"elementUserLocator"`
	// Details of the email for an "assert email" step, JSON encoded string.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// JSON encoded string used for an "assert download" step. Refer to the examples for a usage example showing the schema.
	File pulumi.StringPtrInput `pulumi:"file"`
	// Details of the files for an "upload files" step, JSON encoded string. Refer to the examples for a usage example showing the schema.
	Files pulumi.StringPtrInput `pulumi:"files"`
	// Modifier to use for a "press key" step.
	Modifiers pulumi.StringArrayInput `pulumi:"modifiers"`
	// ID of the tab to play the subtest.
	PlayingTabId pulumi.StringPtrInput `pulumi:"playingTabId"`
	// Request for an API step.
	Request pulumi.StringPtrInput `pulumi:"request"`
	// ID of the Synthetics test to use as subtest.
	SubtestPublicId pulumi.StringPtrInput `pulumi:"subtestPublicId"`
	// Value of the step.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Details of the variable to extract.
	Variable SyntheticsTestBrowserStepParamsVariablePtrInput `pulumi:"variable"`
	// For "file upload" steps.
	WithClick pulumi.BoolPtrInput `pulumi:"withClick"`
	// X coordinates for a "scroll step".
	X pulumi.IntPtrInput `pulumi:"x"`
	// Y coordinates for a "scroll step".
	Y pulumi.IntPtrInput `pulumi:"y"`
}

func (SyntheticsTestBrowserStepParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParams)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepParamsArgs) ToSyntheticsTestBrowserStepParamsOutput() SyntheticsTestBrowserStepParamsOutput {
	return i.ToSyntheticsTestBrowserStepParamsOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsArgs) ToSyntheticsTestBrowserStepParamsOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsOutput)
}

type SyntheticsTestBrowserStepParamsOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParams)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsOutput) ToSyntheticsTestBrowserStepParamsOutput() SyntheticsTestBrowserStepParamsOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsOutput) ToSyntheticsTestBrowserStepParamsOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsOutput {
	return o
}

// Name of the attribute to use for an "assert attribute" step.
func (o SyntheticsTestBrowserStepParamsOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

// Check type to use for an assertion step. Valid values are `equals`, `notEquals`, `contains`, `notContains`, `startsWith`, `notStartsWith`, `greater`, `lower`, `greaterEquals`, `lowerEquals`, `matchRegex`, `between`, `isEmpty`, `notIsEmpty`.
func (o SyntheticsTestBrowserStepParamsOutput) Check() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Check }).(pulumi.StringPtrOutput)
}

// Type of click to use for a "click" step.
func (o SyntheticsTestBrowserStepParamsOutput) ClickType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.ClickType }).(pulumi.StringPtrOutput)
}

// Javascript code to use for the step.
func (o SyntheticsTestBrowserStepParamsOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Code }).(pulumi.StringPtrOutput)
}

// Delay between each key stroke for a "type test" step.
func (o SyntheticsTestBrowserStepParamsOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *int { return v.Delay }).(pulumi.IntPtrOutput)
}

// Element to use for the step, JSON encoded string.
func (o SyntheticsTestBrowserStepParamsOutput) Element() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Element }).(pulumi.StringPtrOutput)
}

// Custom user selector to use for the step.
func (o SyntheticsTestBrowserStepParamsOutput) ElementUserLocator() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *SyntheticsTestBrowserStepParamsElementUserLocator {
		return v.ElementUserLocator
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput)
}

// Details of the email for an "assert email" step, JSON encoded string.
func (o SyntheticsTestBrowserStepParamsOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// JSON encoded string used for an "assert download" step. Refer to the examples for a usage example showing the schema.
func (o SyntheticsTestBrowserStepParamsOutput) File() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.File }).(pulumi.StringPtrOutput)
}

// Details of the files for an "upload files" step, JSON encoded string. Refer to the examples for a usage example showing the schema.
func (o SyntheticsTestBrowserStepParamsOutput) Files() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Files }).(pulumi.StringPtrOutput)
}

// Modifier to use for a "press key" step.
func (o SyntheticsTestBrowserStepParamsOutput) Modifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) []string { return v.Modifiers }).(pulumi.StringArrayOutput)
}

// ID of the tab to play the subtest.
func (o SyntheticsTestBrowserStepParamsOutput) PlayingTabId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.PlayingTabId }).(pulumi.StringPtrOutput)
}

// Request for an API step.
func (o SyntheticsTestBrowserStepParamsOutput) Request() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Request }).(pulumi.StringPtrOutput)
}

// ID of the Synthetics test to use as subtest.
func (o SyntheticsTestBrowserStepParamsOutput) SubtestPublicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.SubtestPublicId }).(pulumi.StringPtrOutput)
}

// Value of the step.
func (o SyntheticsTestBrowserStepParamsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Details of the variable to extract.
func (o SyntheticsTestBrowserStepParamsOutput) Variable() SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *SyntheticsTestBrowserStepParamsVariable { return v.Variable }).(SyntheticsTestBrowserStepParamsVariablePtrOutput)
}

// For "file upload" steps.
func (o SyntheticsTestBrowserStepParamsOutput) WithClick() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *bool { return v.WithClick }).(pulumi.BoolPtrOutput)
}

// X coordinates for a "scroll step".
func (o SyntheticsTestBrowserStepParamsOutput) X() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *int { return v.X }).(pulumi.IntPtrOutput)
}

// Y coordinates for a "scroll step".
func (o SyntheticsTestBrowserStepParamsOutput) Y() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParams) *int { return v.Y }).(pulumi.IntPtrOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocator struct {
	// Defaults to `false`.
	FailTestOnCannotLocate *bool                                                  `pulumi:"failTestOnCannotLocate"`
	Value                  SyntheticsTestBrowserStepParamsElementUserLocatorValue `pulumi:"value"`
}

// SyntheticsTestBrowserStepParamsElementUserLocatorInput is an input type that accepts SyntheticsTestBrowserStepParamsElementUserLocatorArgs and SyntheticsTestBrowserStepParamsElementUserLocatorOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsElementUserLocatorInput` via:
//
//	SyntheticsTestBrowserStepParamsElementUserLocatorArgs{...}
type SyntheticsTestBrowserStepParamsElementUserLocatorInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsElementUserLocatorOutput() SyntheticsTestBrowserStepParamsElementUserLocatorOutput
	ToSyntheticsTestBrowserStepParamsElementUserLocatorOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorOutput
}

type SyntheticsTestBrowserStepParamsElementUserLocatorArgs struct {
	// Defaults to `false`.
	FailTestOnCannotLocate pulumi.BoolPtrInput                                         `pulumi:"failTestOnCannotLocate"`
	Value                  SyntheticsTestBrowserStepParamsElementUserLocatorValueInput `pulumi:"value"`
}

func (SyntheticsTestBrowserStepParamsElementUserLocatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocator)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorOutput() SyntheticsTestBrowserStepParamsElementUserLocatorOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorOutput)
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorOutput).ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(ctx)
}

// SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput is an input type that accepts SyntheticsTestBrowserStepParamsElementUserLocatorArgs, SyntheticsTestBrowserStepParamsElementUserLocatorPtr and SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput` via:
//
//	        SyntheticsTestBrowserStepParamsElementUserLocatorArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput
	ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput
}

type syntheticsTestBrowserStepParamsElementUserLocatorPtrType SyntheticsTestBrowserStepParamsElementUserLocatorArgs

func SyntheticsTestBrowserStepParamsElementUserLocatorPtr(v *SyntheticsTestBrowserStepParamsElementUserLocatorArgs) SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput {
	return (*syntheticsTestBrowserStepParamsElementUserLocatorPtrType)(v)
}

func (*syntheticsTestBrowserStepParamsElementUserLocatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsElementUserLocator)(nil)).Elem()
}

func (i *syntheticsTestBrowserStepParamsElementUserLocatorPtrType) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestBrowserStepParamsElementUserLocatorPtrType) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocatorOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsElementUserLocatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocator)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorOutput() SyntheticsTestBrowserStepParamsElementUserLocatorOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return o.ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestBrowserStepParamsElementUserLocator) *SyntheticsTestBrowserStepParamsElementUserLocator {
		return &v
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput)
}

// Defaults to `false`.
func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) FailTestOnCannotLocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsElementUserLocator) *bool { return v.FailTestOnCannotLocate }).(pulumi.BoolPtrOutput)
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorOutput) Value() SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsElementUserLocator) SyntheticsTestBrowserStepParamsElementUserLocatorValue {
		return v.Value
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsElementUserLocator)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) Elem() SyntheticsTestBrowserStepParamsElementUserLocatorOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocator) SyntheticsTestBrowserStepParamsElementUserLocator {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestBrowserStepParamsElementUserLocator
		return ret
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorOutput)
}

// Defaults to `false`.
func (o SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) FailTestOnCannotLocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocator) *bool {
		if v == nil {
			return nil
		}
		return v.FailTestOnCannotLocate
	}).(pulumi.BoolPtrOutput)
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput) Value() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocator) *SyntheticsTestBrowserStepParamsElementUserLocatorValue {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocatorValue struct {
	// Defaults to `"css"`.
	Type  *string `pulumi:"type"`
	Value string  `pulumi:"value"`
}

// SyntheticsTestBrowserStepParamsElementUserLocatorValueInput is an input type that accepts SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs and SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsElementUserLocatorValueInput` via:
//
//	SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs{...}
type SyntheticsTestBrowserStepParamsElementUserLocatorValueInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput
	ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput
}

type SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs struct {
	// Defaults to `"css"`.
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput)
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput).ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(ctx)
}

// SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrInput is an input type that accepts SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs, SyntheticsTestBrowserStepParamsElementUserLocatorValuePtr and SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrInput` via:
//
//	        SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput
	ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput
}

type syntheticsTestBrowserStepParamsElementUserLocatorValuePtrType SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs

func SyntheticsTestBrowserStepParamsElementUserLocatorValuePtr(v *SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrInput {
	return (*syntheticsTestBrowserStepParamsElementUserLocatorValuePtrType)(v)
}

func (*syntheticsTestBrowserStepParamsElementUserLocatorValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (i *syntheticsTestBrowserStepParamsElementUserLocatorValuePtrType) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(context.Background())
}

func (i *syntheticsTestBrowserStepParamsElementUserLocatorValuePtrType) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValueOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return o.ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(context.Background())
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestBrowserStepParamsElementUserLocatorValue) *SyntheticsTestBrowserStepParamsElementUserLocatorValue {
		return &v
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput)
}

// Defaults to `"css"`.
func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsElementUserLocatorValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsElementUserLocatorValue) string { return v.Value }).(pulumi.StringOutput)
}

type SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput() SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) ToSyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) Elem() SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocatorValue) SyntheticsTestBrowserStepParamsElementUserLocatorValue {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestBrowserStepParamsElementUserLocatorValue
		return ret
	}).(SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput)
}

// Defaults to `"css"`.
func (o SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocatorValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsElementUserLocatorValue) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestBrowserStepParamsVariable struct {
	// Example of the extracted variable. Defaults to `""`.
	Example *string `pulumi:"example"`
	// Name of the extracted variable.
	Name *string `pulumi:"name"`
	// Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
	Secure *bool `pulumi:"secure"`
}

// SyntheticsTestBrowserStepParamsVariableInput is an input type that accepts SyntheticsTestBrowserStepParamsVariableArgs and SyntheticsTestBrowserStepParamsVariableOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsVariableInput` via:
//
//	SyntheticsTestBrowserStepParamsVariableArgs{...}
type SyntheticsTestBrowserStepParamsVariableInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsVariableOutput() SyntheticsTestBrowserStepParamsVariableOutput
	ToSyntheticsTestBrowserStepParamsVariableOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsVariableOutput
}

type SyntheticsTestBrowserStepParamsVariableArgs struct {
	// Example of the extracted variable. Defaults to `""`.
	Example pulumi.StringPtrInput `pulumi:"example"`
	// Name of the extracted variable.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
}

func (SyntheticsTestBrowserStepParamsVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsVariable)(nil)).Elem()
}

func (i SyntheticsTestBrowserStepParamsVariableArgs) ToSyntheticsTestBrowserStepParamsVariableOutput() SyntheticsTestBrowserStepParamsVariableOutput {
	return i.ToSyntheticsTestBrowserStepParamsVariableOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsVariableArgs) ToSyntheticsTestBrowserStepParamsVariableOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsVariableOutput)
}

func (i SyntheticsTestBrowserStepParamsVariableArgs) ToSyntheticsTestBrowserStepParamsVariablePtrOutput() SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserStepParamsVariableArgs) ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsVariableOutput).ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(ctx)
}

// SyntheticsTestBrowserStepParamsVariablePtrInput is an input type that accepts SyntheticsTestBrowserStepParamsVariableArgs, SyntheticsTestBrowserStepParamsVariablePtr and SyntheticsTestBrowserStepParamsVariablePtrOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserStepParamsVariablePtrInput` via:
//
//	        SyntheticsTestBrowserStepParamsVariableArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestBrowserStepParamsVariablePtrInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserStepParamsVariablePtrOutput() SyntheticsTestBrowserStepParamsVariablePtrOutput
	ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(context.Context) SyntheticsTestBrowserStepParamsVariablePtrOutput
}

type syntheticsTestBrowserStepParamsVariablePtrType SyntheticsTestBrowserStepParamsVariableArgs

func SyntheticsTestBrowserStepParamsVariablePtr(v *SyntheticsTestBrowserStepParamsVariableArgs) SyntheticsTestBrowserStepParamsVariablePtrInput {
	return (*syntheticsTestBrowserStepParamsVariablePtrType)(v)
}

func (*syntheticsTestBrowserStepParamsVariablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsVariable)(nil)).Elem()
}

func (i *syntheticsTestBrowserStepParamsVariablePtrType) ToSyntheticsTestBrowserStepParamsVariablePtrOutput() SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return i.ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(context.Background())
}

func (i *syntheticsTestBrowserStepParamsVariablePtrType) ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserStepParamsVariablePtrOutput)
}

type SyntheticsTestBrowserStepParamsVariableOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserStepParamsVariable)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsVariableOutput) ToSyntheticsTestBrowserStepParamsVariableOutput() SyntheticsTestBrowserStepParamsVariableOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsVariableOutput) ToSyntheticsTestBrowserStepParamsVariableOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariableOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsVariableOutput) ToSyntheticsTestBrowserStepParamsVariablePtrOutput() SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return o.ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(context.Background())
}

func (o SyntheticsTestBrowserStepParamsVariableOutput) ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestBrowserStepParamsVariable) *SyntheticsTestBrowserStepParamsVariable {
		return &v
	}).(SyntheticsTestBrowserStepParamsVariablePtrOutput)
}

// Example of the extracted variable. Defaults to `""`.
func (o SyntheticsTestBrowserStepParamsVariableOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsVariable) *string { return v.Example }).(pulumi.StringPtrOutput)
}

// Name of the extracted variable.
func (o SyntheticsTestBrowserStepParamsVariableOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsVariable) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
func (o SyntheticsTestBrowserStepParamsVariableOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserStepParamsVariable) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

type SyntheticsTestBrowserStepParamsVariablePtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserStepParamsVariablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestBrowserStepParamsVariable)(nil)).Elem()
}

func (o SyntheticsTestBrowserStepParamsVariablePtrOutput) ToSyntheticsTestBrowserStepParamsVariablePtrOutput() SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsVariablePtrOutput) ToSyntheticsTestBrowserStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestBrowserStepParamsVariablePtrOutput {
	return o
}

func (o SyntheticsTestBrowserStepParamsVariablePtrOutput) Elem() SyntheticsTestBrowserStepParamsVariableOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsVariable) SyntheticsTestBrowserStepParamsVariable {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestBrowserStepParamsVariable
		return ret
	}).(SyntheticsTestBrowserStepParamsVariableOutput)
}

// Example of the extracted variable. Defaults to `""`.
func (o SyntheticsTestBrowserStepParamsVariablePtrOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsVariable) *string {
		if v == nil {
			return nil
		}
		return v.Example
	}).(pulumi.StringPtrOutput)
}

// Name of the extracted variable.
func (o SyntheticsTestBrowserStepParamsVariablePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsVariable) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
func (o SyntheticsTestBrowserStepParamsVariablePtrOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestBrowserStepParamsVariable) *bool {
		if v == nil {
			return nil
		}
		return v.Secure
	}).(pulumi.BoolPtrOutput)
}

type SyntheticsTestBrowserVariable struct {
	// Example for the variable. Defaults to `""`.
	Example *string `pulumi:"example"`
	// ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type `global`.
	Id *string `pulumi:"id"`
	// Name of the variable.
	Name string `pulumi:"name"`
	// Pattern of the variable. Defaults to `""`.
	Pattern *string `pulumi:"pattern"`
	// Determines whether or not the browser test variable is obfuscated. Can only be used with a browser variable of type `text`
	Secure *bool `pulumi:"secure"`
	// Type of browser test variable. Valid values are `element`, `email`, `global`, `text`.
	Type string `pulumi:"type"`
}

// SyntheticsTestBrowserVariableInput is an input type that accepts SyntheticsTestBrowserVariableArgs and SyntheticsTestBrowserVariableOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserVariableInput` via:
//
//	SyntheticsTestBrowserVariableArgs{...}
type SyntheticsTestBrowserVariableInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserVariableOutput() SyntheticsTestBrowserVariableOutput
	ToSyntheticsTestBrowserVariableOutputWithContext(context.Context) SyntheticsTestBrowserVariableOutput
}

type SyntheticsTestBrowserVariableArgs struct {
	// Example for the variable. Defaults to `""`.
	Example pulumi.StringPtrInput `pulumi:"example"`
	// ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type `global`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the variable.
	Name pulumi.StringInput `pulumi:"name"`
	// Pattern of the variable. Defaults to `""`.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Determines whether or not the browser test variable is obfuscated. Can only be used with a browser variable of type `text`
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// Type of browser test variable. Valid values are `element`, `email`, `global`, `text`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestBrowserVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserVariable)(nil)).Elem()
}

func (i SyntheticsTestBrowserVariableArgs) ToSyntheticsTestBrowserVariableOutput() SyntheticsTestBrowserVariableOutput {
	return i.ToSyntheticsTestBrowserVariableOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserVariableArgs) ToSyntheticsTestBrowserVariableOutputWithContext(ctx context.Context) SyntheticsTestBrowserVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserVariableOutput)
}

// SyntheticsTestBrowserVariableArrayInput is an input type that accepts SyntheticsTestBrowserVariableArray and SyntheticsTestBrowserVariableArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestBrowserVariableArrayInput` via:
//
//	SyntheticsTestBrowserVariableArray{ SyntheticsTestBrowserVariableArgs{...} }
type SyntheticsTestBrowserVariableArrayInput interface {
	pulumi.Input

	ToSyntheticsTestBrowserVariableArrayOutput() SyntheticsTestBrowserVariableArrayOutput
	ToSyntheticsTestBrowserVariableArrayOutputWithContext(context.Context) SyntheticsTestBrowserVariableArrayOutput
}

type SyntheticsTestBrowserVariableArray []SyntheticsTestBrowserVariableInput

func (SyntheticsTestBrowserVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestBrowserVariable)(nil)).Elem()
}

func (i SyntheticsTestBrowserVariableArray) ToSyntheticsTestBrowserVariableArrayOutput() SyntheticsTestBrowserVariableArrayOutput {
	return i.ToSyntheticsTestBrowserVariableArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestBrowserVariableArray) ToSyntheticsTestBrowserVariableArrayOutputWithContext(ctx context.Context) SyntheticsTestBrowserVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestBrowserVariableArrayOutput)
}

type SyntheticsTestBrowserVariableOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestBrowserVariable)(nil)).Elem()
}

func (o SyntheticsTestBrowserVariableOutput) ToSyntheticsTestBrowserVariableOutput() SyntheticsTestBrowserVariableOutput {
	return o
}

func (o SyntheticsTestBrowserVariableOutput) ToSyntheticsTestBrowserVariableOutputWithContext(ctx context.Context) SyntheticsTestBrowserVariableOutput {
	return o
}

// Example for the variable. Defaults to `""`.
func (o SyntheticsTestBrowserVariableOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) *string { return v.Example }).(pulumi.StringPtrOutput)
}

// ID of the global variable to use. This is actually only used (and required) in the case of using a variable of type `global`.
func (o SyntheticsTestBrowserVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the variable.
func (o SyntheticsTestBrowserVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) string { return v.Name }).(pulumi.StringOutput)
}

// Pattern of the variable. Defaults to `""`.
func (o SyntheticsTestBrowserVariableOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Determines whether or not the browser test variable is obfuscated. Can only be used with a browser variable of type `text`
func (o SyntheticsTestBrowserVariableOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// Type of browser test variable. Valid values are `element`, `email`, `global`, `text`.
func (o SyntheticsTestBrowserVariableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestBrowserVariable) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestBrowserVariableArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestBrowserVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestBrowserVariable)(nil)).Elem()
}

func (o SyntheticsTestBrowserVariableArrayOutput) ToSyntheticsTestBrowserVariableArrayOutput() SyntheticsTestBrowserVariableArrayOutput {
	return o
}

func (o SyntheticsTestBrowserVariableArrayOutput) ToSyntheticsTestBrowserVariableArrayOutputWithContext(ctx context.Context) SyntheticsTestBrowserVariableArrayOutput {
	return o
}

func (o SyntheticsTestBrowserVariableArrayOutput) Index(i pulumi.IntInput) SyntheticsTestBrowserVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestBrowserVariable {
		return vs[0].([]SyntheticsTestBrowserVariable)[vs[1].(int)]
	}).(SyntheticsTestBrowserVariableOutput)
}

type SyntheticsTestConfigVariable struct {
	Example *string `pulumi:"example"`
	// When type = `global`, ID of the global variable to use.
	Id *string `pulumi:"id"`
	// Name of the variable.
	Name    string  `pulumi:"name"`
	Pattern *string `pulumi:"pattern"`
	// Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
	Secure *bool `pulumi:"secure"`
	// Type of test configuration variable. Valid values are `global`, `text`, `email`.
	Type string `pulumi:"type"`
}

// SyntheticsTestConfigVariableInput is an input type that accepts SyntheticsTestConfigVariableArgs and SyntheticsTestConfigVariableOutput values.
// You can construct a concrete instance of `SyntheticsTestConfigVariableInput` via:
//
//	SyntheticsTestConfigVariableArgs{...}
type SyntheticsTestConfigVariableInput interface {
	pulumi.Input

	ToSyntheticsTestConfigVariableOutput() SyntheticsTestConfigVariableOutput
	ToSyntheticsTestConfigVariableOutputWithContext(context.Context) SyntheticsTestConfigVariableOutput
}

type SyntheticsTestConfigVariableArgs struct {
	Example pulumi.StringPtrInput `pulumi:"example"`
	// When type = `global`, ID of the global variable to use.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the variable.
	Name    pulumi.StringInput    `pulumi:"name"`
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
	Secure pulumi.BoolPtrInput `pulumi:"secure"`
	// Type of test configuration variable. Valid values are `global`, `text`, `email`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestConfigVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestConfigVariable)(nil)).Elem()
}

func (i SyntheticsTestConfigVariableArgs) ToSyntheticsTestConfigVariableOutput() SyntheticsTestConfigVariableOutput {
	return i.ToSyntheticsTestConfigVariableOutputWithContext(context.Background())
}

func (i SyntheticsTestConfigVariableArgs) ToSyntheticsTestConfigVariableOutputWithContext(ctx context.Context) SyntheticsTestConfigVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestConfigVariableOutput)
}

// SyntheticsTestConfigVariableArrayInput is an input type that accepts SyntheticsTestConfigVariableArray and SyntheticsTestConfigVariableArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestConfigVariableArrayInput` via:
//
//	SyntheticsTestConfigVariableArray{ SyntheticsTestConfigVariableArgs{...} }
type SyntheticsTestConfigVariableArrayInput interface {
	pulumi.Input

	ToSyntheticsTestConfigVariableArrayOutput() SyntheticsTestConfigVariableArrayOutput
	ToSyntheticsTestConfigVariableArrayOutputWithContext(context.Context) SyntheticsTestConfigVariableArrayOutput
}

type SyntheticsTestConfigVariableArray []SyntheticsTestConfigVariableInput

func (SyntheticsTestConfigVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestConfigVariable)(nil)).Elem()
}

func (i SyntheticsTestConfigVariableArray) ToSyntheticsTestConfigVariableArrayOutput() SyntheticsTestConfigVariableArrayOutput {
	return i.ToSyntheticsTestConfigVariableArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestConfigVariableArray) ToSyntheticsTestConfigVariableArrayOutputWithContext(ctx context.Context) SyntheticsTestConfigVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestConfigVariableArrayOutput)
}

type SyntheticsTestConfigVariableOutput struct{ *pulumi.OutputState }

func (SyntheticsTestConfigVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestConfigVariable)(nil)).Elem()
}

func (o SyntheticsTestConfigVariableOutput) ToSyntheticsTestConfigVariableOutput() SyntheticsTestConfigVariableOutput {
	return o
}

func (o SyntheticsTestConfigVariableOutput) ToSyntheticsTestConfigVariableOutputWithContext(ctx context.Context) SyntheticsTestConfigVariableOutput {
	return o
}

func (o SyntheticsTestConfigVariableOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) *string { return v.Example }).(pulumi.StringPtrOutput)
}

// When type = `global`, ID of the global variable to use.
func (o SyntheticsTestConfigVariableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the variable.
func (o SyntheticsTestConfigVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) string { return v.Name }).(pulumi.StringOutput)
}

func (o SyntheticsTestConfigVariableOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
func (o SyntheticsTestConfigVariableOutput) Secure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) *bool { return v.Secure }).(pulumi.BoolPtrOutput)
}

// Type of test configuration variable. Valid values are `global`, `text`, `email`.
func (o SyntheticsTestConfigVariableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestConfigVariable) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestConfigVariableArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestConfigVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestConfigVariable)(nil)).Elem()
}

func (o SyntheticsTestConfigVariableArrayOutput) ToSyntheticsTestConfigVariableArrayOutput() SyntheticsTestConfigVariableArrayOutput {
	return o
}

func (o SyntheticsTestConfigVariableArrayOutput) ToSyntheticsTestConfigVariableArrayOutputWithContext(ctx context.Context) SyntheticsTestConfigVariableArrayOutput {
	return o
}

func (o SyntheticsTestConfigVariableArrayOutput) Index(i pulumi.IntInput) SyntheticsTestConfigVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestConfigVariable {
		return vs[0].([]SyntheticsTestConfigVariable)[vs[1].(int)]
	}).(SyntheticsTestConfigVariableOutput)
}

type SyntheticsTestMobileOptionsList struct {
	AllowApplicationCrash *bool `pulumi:"allowApplicationCrash"`
	// Restriction policy bindings for the Synthetic mobile test. Should not be used in parallel with a `RestrictionPolicy` resource
	Bindings []SyntheticsTestMobileOptionsListBinding `pulumi:"bindings"`
	// CI/CD options for a Synthetic test.
	Ci                     *SyntheticsTestMobileOptionsListCi `pulumi:"ci"`
	DefaultStepTimeout     *int                               `pulumi:"defaultStepTimeout"`
	DeviceIds              []string                           `pulumi:"deviceIds"`
	DisableAutoAcceptAlert *bool                              `pulumi:"disableAutoAcceptAlert"`
	// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
	MinFailureDuration *int                                             `pulumi:"minFailureDuration"`
	MobileApplication  SyntheticsTestMobileOptionsListMobileApplication `pulumi:"mobileApplication"`
	// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
	MonitorName     *string                                        `pulumi:"monitorName"`
	MonitorOptions  *SyntheticsTestMobileOptionsListMonitorOptions `pulumi:"monitorOptions"`
	MonitorPriority *int                                           `pulumi:"monitorPriority"`
	// Prevents saving screenshots of the steps.
	NoScreenshot *bool `pulumi:"noScreenshot"`
	// A list of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	//
	// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	RestrictedRoles []string                              `pulumi:"restrictedRoles"`
	Retry           *SyntheticsTestMobileOptionsListRetry `pulumi:"retry"`
	// Object containing timeframes and timezone used for advanced scheduling.
	Scheduling *SyntheticsTestMobileOptionsListScheduling `pulumi:"scheduling"`
	// How often the test should run (in seconds).
	TickEvery int  `pulumi:"tickEvery"`
	Verbosity *int `pulumi:"verbosity"`
}

// SyntheticsTestMobileOptionsListInput is an input type that accepts SyntheticsTestMobileOptionsListArgs and SyntheticsTestMobileOptionsListOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListInput` via:
//
//	SyntheticsTestMobileOptionsListArgs{...}
type SyntheticsTestMobileOptionsListInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListOutput() SyntheticsTestMobileOptionsListOutput
	ToSyntheticsTestMobileOptionsListOutputWithContext(context.Context) SyntheticsTestMobileOptionsListOutput
}

type SyntheticsTestMobileOptionsListArgs struct {
	AllowApplicationCrash pulumi.BoolPtrInput `pulumi:"allowApplicationCrash"`
	// Restriction policy bindings for the Synthetic mobile test. Should not be used in parallel with a `RestrictionPolicy` resource
	Bindings SyntheticsTestMobileOptionsListBindingArrayInput `pulumi:"bindings"`
	// CI/CD options for a Synthetic test.
	Ci                     SyntheticsTestMobileOptionsListCiPtrInput `pulumi:"ci"`
	DefaultStepTimeout     pulumi.IntPtrInput                        `pulumi:"defaultStepTimeout"`
	DeviceIds              pulumi.StringArrayInput                   `pulumi:"deviceIds"`
	DisableAutoAcceptAlert pulumi.BoolPtrInput                       `pulumi:"disableAutoAcceptAlert"`
	// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
	MinFailureDuration pulumi.IntPtrInput                                    `pulumi:"minFailureDuration"`
	MobileApplication  SyntheticsTestMobileOptionsListMobileApplicationInput `pulumi:"mobileApplication"`
	// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
	MonitorName     pulumi.StringPtrInput                                 `pulumi:"monitorName"`
	MonitorOptions  SyntheticsTestMobileOptionsListMonitorOptionsPtrInput `pulumi:"monitorOptions"`
	MonitorPriority pulumi.IntPtrInput                                    `pulumi:"monitorPriority"`
	// Prevents saving screenshots of the steps.
	NoScreenshot pulumi.BoolPtrInput `pulumi:"noScreenshot"`
	// A list of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	//
	// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	RestrictedRoles pulumi.StringArrayInput                      `pulumi:"restrictedRoles"`
	Retry           SyntheticsTestMobileOptionsListRetryPtrInput `pulumi:"retry"`
	// Object containing timeframes and timezone used for advanced scheduling.
	Scheduling SyntheticsTestMobileOptionsListSchedulingPtrInput `pulumi:"scheduling"`
	// How often the test should run (in seconds).
	TickEvery pulumi.IntInput    `pulumi:"tickEvery"`
	Verbosity pulumi.IntPtrInput `pulumi:"verbosity"`
}

func (SyntheticsTestMobileOptionsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsList)(nil)).Elem()
}

func (i SyntheticsTestMobileOptionsListArgs) ToSyntheticsTestMobileOptionsListOutput() SyntheticsTestMobileOptionsListOutput {
	return i.ToSyntheticsTestMobileOptionsListOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListArgs) ToSyntheticsTestMobileOptionsListOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListOutput)
}

func (i SyntheticsTestMobileOptionsListArgs) ToSyntheticsTestMobileOptionsListPtrOutput() SyntheticsTestMobileOptionsListPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListArgs) ToSyntheticsTestMobileOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListOutput).ToSyntheticsTestMobileOptionsListPtrOutputWithContext(ctx)
}

// SyntheticsTestMobileOptionsListPtrInput is an input type that accepts SyntheticsTestMobileOptionsListArgs, SyntheticsTestMobileOptionsListPtr and SyntheticsTestMobileOptionsListPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListPtrInput` via:
//
//	        SyntheticsTestMobileOptionsListArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestMobileOptionsListPtrInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListPtrOutput() SyntheticsTestMobileOptionsListPtrOutput
	ToSyntheticsTestMobileOptionsListPtrOutputWithContext(context.Context) SyntheticsTestMobileOptionsListPtrOutput
}

type syntheticsTestMobileOptionsListPtrType SyntheticsTestMobileOptionsListArgs

func SyntheticsTestMobileOptionsListPtr(v *SyntheticsTestMobileOptionsListArgs) SyntheticsTestMobileOptionsListPtrInput {
	return (*syntheticsTestMobileOptionsListPtrType)(v)
}

func (*syntheticsTestMobileOptionsListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsList)(nil)).Elem()
}

func (i *syntheticsTestMobileOptionsListPtrType) ToSyntheticsTestMobileOptionsListPtrOutput() SyntheticsTestMobileOptionsListPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestMobileOptionsListPtrType) ToSyntheticsTestMobileOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListPtrOutput)
}

type SyntheticsTestMobileOptionsListOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsList)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListOutput) ToSyntheticsTestMobileOptionsListOutput() SyntheticsTestMobileOptionsListOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListOutput) ToSyntheticsTestMobileOptionsListOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListOutput) ToSyntheticsTestMobileOptionsListPtrOutput() SyntheticsTestMobileOptionsListPtrOutput {
	return o.ToSyntheticsTestMobileOptionsListPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestMobileOptionsListOutput) ToSyntheticsTestMobileOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestMobileOptionsList) *SyntheticsTestMobileOptionsList {
		return &v
	}).(SyntheticsTestMobileOptionsListPtrOutput)
}

func (o SyntheticsTestMobileOptionsListOutput) AllowApplicationCrash() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *bool { return v.AllowApplicationCrash }).(pulumi.BoolPtrOutput)
}

// Restriction policy bindings for the Synthetic mobile test. Should not be used in parallel with a `RestrictionPolicy` resource
func (o SyntheticsTestMobileOptionsListOutput) Bindings() SyntheticsTestMobileOptionsListBindingArrayOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) []SyntheticsTestMobileOptionsListBinding { return v.Bindings }).(SyntheticsTestMobileOptionsListBindingArrayOutput)
}

// CI/CD options for a Synthetic test.
func (o SyntheticsTestMobileOptionsListOutput) Ci() SyntheticsTestMobileOptionsListCiPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *SyntheticsTestMobileOptionsListCi { return v.Ci }).(SyntheticsTestMobileOptionsListCiPtrOutput)
}

func (o SyntheticsTestMobileOptionsListOutput) DefaultStepTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *int { return v.DefaultStepTimeout }).(pulumi.IntPtrOutput)
}

func (o SyntheticsTestMobileOptionsListOutput) DeviceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) []string { return v.DeviceIds }).(pulumi.StringArrayOutput)
}

func (o SyntheticsTestMobileOptionsListOutput) DisableAutoAcceptAlert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *bool { return v.DisableAutoAcceptAlert }).(pulumi.BoolPtrOutput)
}

// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
func (o SyntheticsTestMobileOptionsListOutput) MinFailureDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *int { return v.MinFailureDuration }).(pulumi.IntPtrOutput)
}

func (o SyntheticsTestMobileOptionsListOutput) MobileApplication() SyntheticsTestMobileOptionsListMobileApplicationOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) SyntheticsTestMobileOptionsListMobileApplication {
		return v.MobileApplication
	}).(SyntheticsTestMobileOptionsListMobileApplicationOutput)
}

// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
func (o SyntheticsTestMobileOptionsListOutput) MonitorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *string { return v.MonitorName }).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestMobileOptionsListOutput) MonitorOptions() SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *SyntheticsTestMobileOptionsListMonitorOptions {
		return v.MonitorOptions
	}).(SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput)
}

func (o SyntheticsTestMobileOptionsListOutput) MonitorPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *int { return v.MonitorPriority }).(pulumi.IntPtrOutput)
}

// Prevents saving screenshots of the steps.
func (o SyntheticsTestMobileOptionsListOutput) NoScreenshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *bool { return v.NoScreenshot }).(pulumi.BoolPtrOutput)
}

// A list of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
//
// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
func (o SyntheticsTestMobileOptionsListOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) []string { return v.RestrictedRoles }).(pulumi.StringArrayOutput)
}

func (o SyntheticsTestMobileOptionsListOutput) Retry() SyntheticsTestMobileOptionsListRetryPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *SyntheticsTestMobileOptionsListRetry { return v.Retry }).(SyntheticsTestMobileOptionsListRetryPtrOutput)
}

// Object containing timeframes and timezone used for advanced scheduling.
func (o SyntheticsTestMobileOptionsListOutput) Scheduling() SyntheticsTestMobileOptionsListSchedulingPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *SyntheticsTestMobileOptionsListScheduling {
		return v.Scheduling
	}).(SyntheticsTestMobileOptionsListSchedulingPtrOutput)
}

// How often the test should run (in seconds).
func (o SyntheticsTestMobileOptionsListOutput) TickEvery() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) int { return v.TickEvery }).(pulumi.IntOutput)
}

func (o SyntheticsTestMobileOptionsListOutput) Verbosity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsList) *int { return v.Verbosity }).(pulumi.IntPtrOutput)
}

type SyntheticsTestMobileOptionsListPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsList)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListPtrOutput) ToSyntheticsTestMobileOptionsListPtrOutput() SyntheticsTestMobileOptionsListPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListPtrOutput) ToSyntheticsTestMobileOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListPtrOutput) Elem() SyntheticsTestMobileOptionsListOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) SyntheticsTestMobileOptionsList {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestMobileOptionsList
		return ret
	}).(SyntheticsTestMobileOptionsListOutput)
}

func (o SyntheticsTestMobileOptionsListPtrOutput) AllowApplicationCrash() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.AllowApplicationCrash
	}).(pulumi.BoolPtrOutput)
}

// Restriction policy bindings for the Synthetic mobile test. Should not be used in parallel with a `RestrictionPolicy` resource
func (o SyntheticsTestMobileOptionsListPtrOutput) Bindings() SyntheticsTestMobileOptionsListBindingArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) []SyntheticsTestMobileOptionsListBinding {
		if v == nil {
			return nil
		}
		return v.Bindings
	}).(SyntheticsTestMobileOptionsListBindingArrayOutput)
}

// CI/CD options for a Synthetic test.
func (o SyntheticsTestMobileOptionsListPtrOutput) Ci() SyntheticsTestMobileOptionsListCiPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *SyntheticsTestMobileOptionsListCi {
		if v == nil {
			return nil
		}
		return v.Ci
	}).(SyntheticsTestMobileOptionsListCiPtrOutput)
}

func (o SyntheticsTestMobileOptionsListPtrOutput) DefaultStepTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.DefaultStepTimeout
	}).(pulumi.IntPtrOutput)
}

func (o SyntheticsTestMobileOptionsListPtrOutput) DeviceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) []string {
		if v == nil {
			return nil
		}
		return v.DeviceIds
	}).(pulumi.StringArrayOutput)
}

func (o SyntheticsTestMobileOptionsListPtrOutput) DisableAutoAcceptAlert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.DisableAutoAcceptAlert
	}).(pulumi.BoolPtrOutput)
}

// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
func (o SyntheticsTestMobileOptionsListPtrOutput) MinFailureDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.MinFailureDuration
	}).(pulumi.IntPtrOutput)
}

func (o SyntheticsTestMobileOptionsListPtrOutput) MobileApplication() SyntheticsTestMobileOptionsListMobileApplicationPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *SyntheticsTestMobileOptionsListMobileApplication {
		if v == nil {
			return nil
		}
		return &v.MobileApplication
	}).(SyntheticsTestMobileOptionsListMobileApplicationPtrOutput)
}

// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
func (o SyntheticsTestMobileOptionsListPtrOutput) MonitorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *string {
		if v == nil {
			return nil
		}
		return v.MonitorName
	}).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestMobileOptionsListPtrOutput) MonitorOptions() SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *SyntheticsTestMobileOptionsListMonitorOptions {
		if v == nil {
			return nil
		}
		return v.MonitorOptions
	}).(SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput)
}

func (o SyntheticsTestMobileOptionsListPtrOutput) MonitorPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.MonitorPriority
	}).(pulumi.IntPtrOutput)
}

// Prevents saving screenshots of the steps.
func (o SyntheticsTestMobileOptionsListPtrOutput) NoScreenshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.NoScreenshot
	}).(pulumi.BoolPtrOutput)
}

// A list of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
//
// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
func (o SyntheticsTestMobileOptionsListPtrOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) []string {
		if v == nil {
			return nil
		}
		return v.RestrictedRoles
	}).(pulumi.StringArrayOutput)
}

func (o SyntheticsTestMobileOptionsListPtrOutput) Retry() SyntheticsTestMobileOptionsListRetryPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *SyntheticsTestMobileOptionsListRetry {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(SyntheticsTestMobileOptionsListRetryPtrOutput)
}

// Object containing timeframes and timezone used for advanced scheduling.
func (o SyntheticsTestMobileOptionsListPtrOutput) Scheduling() SyntheticsTestMobileOptionsListSchedulingPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *SyntheticsTestMobileOptionsListScheduling {
		if v == nil {
			return nil
		}
		return v.Scheduling
	}).(SyntheticsTestMobileOptionsListSchedulingPtrOutput)
}

// How often the test should run (in seconds).
func (o SyntheticsTestMobileOptionsListPtrOutput) TickEvery() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *int {
		if v == nil {
			return nil
		}
		return &v.TickEvery
	}).(pulumi.IntPtrOutput)
}

func (o SyntheticsTestMobileOptionsListPtrOutput) Verbosity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.Verbosity
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestMobileOptionsListBinding struct {
	Principals []string `pulumi:"principals"`
	// Valid values are `editor`, `viewer`.
	Relation *string `pulumi:"relation"`
}

// SyntheticsTestMobileOptionsListBindingInput is an input type that accepts SyntheticsTestMobileOptionsListBindingArgs and SyntheticsTestMobileOptionsListBindingOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListBindingInput` via:
//
//	SyntheticsTestMobileOptionsListBindingArgs{...}
type SyntheticsTestMobileOptionsListBindingInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListBindingOutput() SyntheticsTestMobileOptionsListBindingOutput
	ToSyntheticsTestMobileOptionsListBindingOutputWithContext(context.Context) SyntheticsTestMobileOptionsListBindingOutput
}

type SyntheticsTestMobileOptionsListBindingArgs struct {
	Principals pulumi.StringArrayInput `pulumi:"principals"`
	// Valid values are `editor`, `viewer`.
	Relation pulumi.StringPtrInput `pulumi:"relation"`
}

func (SyntheticsTestMobileOptionsListBindingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListBinding)(nil)).Elem()
}

func (i SyntheticsTestMobileOptionsListBindingArgs) ToSyntheticsTestMobileOptionsListBindingOutput() SyntheticsTestMobileOptionsListBindingOutput {
	return i.ToSyntheticsTestMobileOptionsListBindingOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListBindingArgs) ToSyntheticsTestMobileOptionsListBindingOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListBindingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListBindingOutput)
}

// SyntheticsTestMobileOptionsListBindingArrayInput is an input type that accepts SyntheticsTestMobileOptionsListBindingArray and SyntheticsTestMobileOptionsListBindingArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListBindingArrayInput` via:
//
//	SyntheticsTestMobileOptionsListBindingArray{ SyntheticsTestMobileOptionsListBindingArgs{...} }
type SyntheticsTestMobileOptionsListBindingArrayInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListBindingArrayOutput() SyntheticsTestMobileOptionsListBindingArrayOutput
	ToSyntheticsTestMobileOptionsListBindingArrayOutputWithContext(context.Context) SyntheticsTestMobileOptionsListBindingArrayOutput
}

type SyntheticsTestMobileOptionsListBindingArray []SyntheticsTestMobileOptionsListBindingInput

func (SyntheticsTestMobileOptionsListBindingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestMobileOptionsListBinding)(nil)).Elem()
}

func (i SyntheticsTestMobileOptionsListBindingArray) ToSyntheticsTestMobileOptionsListBindingArrayOutput() SyntheticsTestMobileOptionsListBindingArrayOutput {
	return i.ToSyntheticsTestMobileOptionsListBindingArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListBindingArray) ToSyntheticsTestMobileOptionsListBindingArrayOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListBindingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListBindingArrayOutput)
}

type SyntheticsTestMobileOptionsListBindingOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListBindingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListBinding)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListBindingOutput) ToSyntheticsTestMobileOptionsListBindingOutput() SyntheticsTestMobileOptionsListBindingOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListBindingOutput) ToSyntheticsTestMobileOptionsListBindingOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListBindingOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListBindingOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListBinding) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

// Valid values are `editor`, `viewer`.
func (o SyntheticsTestMobileOptionsListBindingOutput) Relation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListBinding) *string { return v.Relation }).(pulumi.StringPtrOutput)
}

type SyntheticsTestMobileOptionsListBindingArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListBindingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestMobileOptionsListBinding)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListBindingArrayOutput) ToSyntheticsTestMobileOptionsListBindingArrayOutput() SyntheticsTestMobileOptionsListBindingArrayOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListBindingArrayOutput) ToSyntheticsTestMobileOptionsListBindingArrayOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListBindingArrayOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListBindingArrayOutput) Index(i pulumi.IntInput) SyntheticsTestMobileOptionsListBindingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestMobileOptionsListBinding {
		return vs[0].([]SyntheticsTestMobileOptionsListBinding)[vs[1].(int)]
	}).(SyntheticsTestMobileOptionsListBindingOutput)
}

type SyntheticsTestMobileOptionsListCi struct {
	// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
	ExecutionRule string `pulumi:"executionRule"`
}

// SyntheticsTestMobileOptionsListCiInput is an input type that accepts SyntheticsTestMobileOptionsListCiArgs and SyntheticsTestMobileOptionsListCiOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListCiInput` via:
//
//	SyntheticsTestMobileOptionsListCiArgs{...}
type SyntheticsTestMobileOptionsListCiInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListCiOutput() SyntheticsTestMobileOptionsListCiOutput
	ToSyntheticsTestMobileOptionsListCiOutputWithContext(context.Context) SyntheticsTestMobileOptionsListCiOutput
}

type SyntheticsTestMobileOptionsListCiArgs struct {
	// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
	ExecutionRule pulumi.StringInput `pulumi:"executionRule"`
}

func (SyntheticsTestMobileOptionsListCiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListCi)(nil)).Elem()
}

func (i SyntheticsTestMobileOptionsListCiArgs) ToSyntheticsTestMobileOptionsListCiOutput() SyntheticsTestMobileOptionsListCiOutput {
	return i.ToSyntheticsTestMobileOptionsListCiOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListCiArgs) ToSyntheticsTestMobileOptionsListCiOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListCiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListCiOutput)
}

func (i SyntheticsTestMobileOptionsListCiArgs) ToSyntheticsTestMobileOptionsListCiPtrOutput() SyntheticsTestMobileOptionsListCiPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListCiPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListCiArgs) ToSyntheticsTestMobileOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListCiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListCiOutput).ToSyntheticsTestMobileOptionsListCiPtrOutputWithContext(ctx)
}

// SyntheticsTestMobileOptionsListCiPtrInput is an input type that accepts SyntheticsTestMobileOptionsListCiArgs, SyntheticsTestMobileOptionsListCiPtr and SyntheticsTestMobileOptionsListCiPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListCiPtrInput` via:
//
//	        SyntheticsTestMobileOptionsListCiArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestMobileOptionsListCiPtrInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListCiPtrOutput() SyntheticsTestMobileOptionsListCiPtrOutput
	ToSyntheticsTestMobileOptionsListCiPtrOutputWithContext(context.Context) SyntheticsTestMobileOptionsListCiPtrOutput
}

type syntheticsTestMobileOptionsListCiPtrType SyntheticsTestMobileOptionsListCiArgs

func SyntheticsTestMobileOptionsListCiPtr(v *SyntheticsTestMobileOptionsListCiArgs) SyntheticsTestMobileOptionsListCiPtrInput {
	return (*syntheticsTestMobileOptionsListCiPtrType)(v)
}

func (*syntheticsTestMobileOptionsListCiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsListCi)(nil)).Elem()
}

func (i *syntheticsTestMobileOptionsListCiPtrType) ToSyntheticsTestMobileOptionsListCiPtrOutput() SyntheticsTestMobileOptionsListCiPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListCiPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestMobileOptionsListCiPtrType) ToSyntheticsTestMobileOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListCiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListCiPtrOutput)
}

type SyntheticsTestMobileOptionsListCiOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListCiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListCi)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListCiOutput) ToSyntheticsTestMobileOptionsListCiOutput() SyntheticsTestMobileOptionsListCiOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListCiOutput) ToSyntheticsTestMobileOptionsListCiOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListCiOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListCiOutput) ToSyntheticsTestMobileOptionsListCiPtrOutput() SyntheticsTestMobileOptionsListCiPtrOutput {
	return o.ToSyntheticsTestMobileOptionsListCiPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestMobileOptionsListCiOutput) ToSyntheticsTestMobileOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListCiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestMobileOptionsListCi) *SyntheticsTestMobileOptionsListCi {
		return &v
	}).(SyntheticsTestMobileOptionsListCiPtrOutput)
}

// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
func (o SyntheticsTestMobileOptionsListCiOutput) ExecutionRule() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListCi) string { return v.ExecutionRule }).(pulumi.StringOutput)
}

type SyntheticsTestMobileOptionsListCiPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListCiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsListCi)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListCiPtrOutput) ToSyntheticsTestMobileOptionsListCiPtrOutput() SyntheticsTestMobileOptionsListCiPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListCiPtrOutput) ToSyntheticsTestMobileOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListCiPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListCiPtrOutput) Elem() SyntheticsTestMobileOptionsListCiOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListCi) SyntheticsTestMobileOptionsListCi {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestMobileOptionsListCi
		return ret
	}).(SyntheticsTestMobileOptionsListCiOutput)
}

// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
func (o SyntheticsTestMobileOptionsListCiPtrOutput) ExecutionRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListCi) *string {
		if v == nil {
			return nil
		}
		return &v.ExecutionRule
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestMobileOptionsListMobileApplication struct {
	ApplicationId string `pulumi:"applicationId"`
	ReferenceId   string `pulumi:"referenceId"`
	// Valid values are `latest`, `version`.
	ReferenceType string `pulumi:"referenceType"`
}

// SyntheticsTestMobileOptionsListMobileApplicationInput is an input type that accepts SyntheticsTestMobileOptionsListMobileApplicationArgs and SyntheticsTestMobileOptionsListMobileApplicationOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListMobileApplicationInput` via:
//
//	SyntheticsTestMobileOptionsListMobileApplicationArgs{...}
type SyntheticsTestMobileOptionsListMobileApplicationInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListMobileApplicationOutput() SyntheticsTestMobileOptionsListMobileApplicationOutput
	ToSyntheticsTestMobileOptionsListMobileApplicationOutputWithContext(context.Context) SyntheticsTestMobileOptionsListMobileApplicationOutput
}

type SyntheticsTestMobileOptionsListMobileApplicationArgs struct {
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	ReferenceId   pulumi.StringInput `pulumi:"referenceId"`
	// Valid values are `latest`, `version`.
	ReferenceType pulumi.StringInput `pulumi:"referenceType"`
}

func (SyntheticsTestMobileOptionsListMobileApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListMobileApplication)(nil)).Elem()
}

func (i SyntheticsTestMobileOptionsListMobileApplicationArgs) ToSyntheticsTestMobileOptionsListMobileApplicationOutput() SyntheticsTestMobileOptionsListMobileApplicationOutput {
	return i.ToSyntheticsTestMobileOptionsListMobileApplicationOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListMobileApplicationArgs) ToSyntheticsTestMobileOptionsListMobileApplicationOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMobileApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListMobileApplicationOutput)
}

func (i SyntheticsTestMobileOptionsListMobileApplicationArgs) ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutput() SyntheticsTestMobileOptionsListMobileApplicationPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListMobileApplicationArgs) ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMobileApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListMobileApplicationOutput).ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutputWithContext(ctx)
}

// SyntheticsTestMobileOptionsListMobileApplicationPtrInput is an input type that accepts SyntheticsTestMobileOptionsListMobileApplicationArgs, SyntheticsTestMobileOptionsListMobileApplicationPtr and SyntheticsTestMobileOptionsListMobileApplicationPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListMobileApplicationPtrInput` via:
//
//	        SyntheticsTestMobileOptionsListMobileApplicationArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestMobileOptionsListMobileApplicationPtrInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutput() SyntheticsTestMobileOptionsListMobileApplicationPtrOutput
	ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutputWithContext(context.Context) SyntheticsTestMobileOptionsListMobileApplicationPtrOutput
}

type syntheticsTestMobileOptionsListMobileApplicationPtrType SyntheticsTestMobileOptionsListMobileApplicationArgs

func SyntheticsTestMobileOptionsListMobileApplicationPtr(v *SyntheticsTestMobileOptionsListMobileApplicationArgs) SyntheticsTestMobileOptionsListMobileApplicationPtrInput {
	return (*syntheticsTestMobileOptionsListMobileApplicationPtrType)(v)
}

func (*syntheticsTestMobileOptionsListMobileApplicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsListMobileApplication)(nil)).Elem()
}

func (i *syntheticsTestMobileOptionsListMobileApplicationPtrType) ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutput() SyntheticsTestMobileOptionsListMobileApplicationPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestMobileOptionsListMobileApplicationPtrType) ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMobileApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListMobileApplicationPtrOutput)
}

type SyntheticsTestMobileOptionsListMobileApplicationOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListMobileApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListMobileApplication)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListMobileApplicationOutput) ToSyntheticsTestMobileOptionsListMobileApplicationOutput() SyntheticsTestMobileOptionsListMobileApplicationOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListMobileApplicationOutput) ToSyntheticsTestMobileOptionsListMobileApplicationOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMobileApplicationOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListMobileApplicationOutput) ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutput() SyntheticsTestMobileOptionsListMobileApplicationPtrOutput {
	return o.ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestMobileOptionsListMobileApplicationOutput) ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMobileApplicationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestMobileOptionsListMobileApplication) *SyntheticsTestMobileOptionsListMobileApplication {
		return &v
	}).(SyntheticsTestMobileOptionsListMobileApplicationPtrOutput)
}

func (o SyntheticsTestMobileOptionsListMobileApplicationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListMobileApplication) string { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o SyntheticsTestMobileOptionsListMobileApplicationOutput) ReferenceId() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListMobileApplication) string { return v.ReferenceId }).(pulumi.StringOutput)
}

// Valid values are `latest`, `version`.
func (o SyntheticsTestMobileOptionsListMobileApplicationOutput) ReferenceType() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListMobileApplication) string { return v.ReferenceType }).(pulumi.StringOutput)
}

type SyntheticsTestMobileOptionsListMobileApplicationPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListMobileApplicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsListMobileApplication)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListMobileApplicationPtrOutput) ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutput() SyntheticsTestMobileOptionsListMobileApplicationPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListMobileApplicationPtrOutput) ToSyntheticsTestMobileOptionsListMobileApplicationPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMobileApplicationPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListMobileApplicationPtrOutput) Elem() SyntheticsTestMobileOptionsListMobileApplicationOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListMobileApplication) SyntheticsTestMobileOptionsListMobileApplication {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestMobileOptionsListMobileApplication
		return ret
	}).(SyntheticsTestMobileOptionsListMobileApplicationOutput)
}

func (o SyntheticsTestMobileOptionsListMobileApplicationPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListMobileApplication) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestMobileOptionsListMobileApplicationPtrOutput) ReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListMobileApplication) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceId
	}).(pulumi.StringPtrOutput)
}

// Valid values are `latest`, `version`.
func (o SyntheticsTestMobileOptionsListMobileApplicationPtrOutput) ReferenceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListMobileApplication) *string {
		if v == nil {
			return nil
		}
		return &v.ReferenceType
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestMobileOptionsListMonitorOptions struct {
	EscalationMessage *string `pulumi:"escalationMessage"`
	// Valid values are `showAll`, `hideAll`, `hideQuery`, `hideHandles`.
	NotificationPresetName *string `pulumi:"notificationPresetName"`
	// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
	RenotifyInterval *int `pulumi:"renotifyInterval"`
	// The number of times a monitor renotifies. It can only be set if `renotifyInterval` is set.
	RenotifyOccurrences *int `pulumi:"renotifyOccurrences"`
}

// SyntheticsTestMobileOptionsListMonitorOptionsInput is an input type that accepts SyntheticsTestMobileOptionsListMonitorOptionsArgs and SyntheticsTestMobileOptionsListMonitorOptionsOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListMonitorOptionsInput` via:
//
//	SyntheticsTestMobileOptionsListMonitorOptionsArgs{...}
type SyntheticsTestMobileOptionsListMonitorOptionsInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListMonitorOptionsOutput() SyntheticsTestMobileOptionsListMonitorOptionsOutput
	ToSyntheticsTestMobileOptionsListMonitorOptionsOutputWithContext(context.Context) SyntheticsTestMobileOptionsListMonitorOptionsOutput
}

type SyntheticsTestMobileOptionsListMonitorOptionsArgs struct {
	EscalationMessage pulumi.StringPtrInput `pulumi:"escalationMessage"`
	// Valid values are `showAll`, `hideAll`, `hideQuery`, `hideHandles`.
	NotificationPresetName pulumi.StringPtrInput `pulumi:"notificationPresetName"`
	// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
	RenotifyInterval pulumi.IntPtrInput `pulumi:"renotifyInterval"`
	// The number of times a monitor renotifies. It can only be set if `renotifyInterval` is set.
	RenotifyOccurrences pulumi.IntPtrInput `pulumi:"renotifyOccurrences"`
}

func (SyntheticsTestMobileOptionsListMonitorOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListMonitorOptions)(nil)).Elem()
}

func (i SyntheticsTestMobileOptionsListMonitorOptionsArgs) ToSyntheticsTestMobileOptionsListMonitorOptionsOutput() SyntheticsTestMobileOptionsListMonitorOptionsOutput {
	return i.ToSyntheticsTestMobileOptionsListMonitorOptionsOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListMonitorOptionsArgs) ToSyntheticsTestMobileOptionsListMonitorOptionsOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMonitorOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListMonitorOptionsOutput)
}

func (i SyntheticsTestMobileOptionsListMonitorOptionsArgs) ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutput() SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListMonitorOptionsArgs) ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListMonitorOptionsOutput).ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutputWithContext(ctx)
}

// SyntheticsTestMobileOptionsListMonitorOptionsPtrInput is an input type that accepts SyntheticsTestMobileOptionsListMonitorOptionsArgs, SyntheticsTestMobileOptionsListMonitorOptionsPtr and SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListMonitorOptionsPtrInput` via:
//
//	        SyntheticsTestMobileOptionsListMonitorOptionsArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestMobileOptionsListMonitorOptionsPtrInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutput() SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput
	ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutputWithContext(context.Context) SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput
}

type syntheticsTestMobileOptionsListMonitorOptionsPtrType SyntheticsTestMobileOptionsListMonitorOptionsArgs

func SyntheticsTestMobileOptionsListMonitorOptionsPtr(v *SyntheticsTestMobileOptionsListMonitorOptionsArgs) SyntheticsTestMobileOptionsListMonitorOptionsPtrInput {
	return (*syntheticsTestMobileOptionsListMonitorOptionsPtrType)(v)
}

func (*syntheticsTestMobileOptionsListMonitorOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsListMonitorOptions)(nil)).Elem()
}

func (i *syntheticsTestMobileOptionsListMonitorOptionsPtrType) ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutput() SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestMobileOptionsListMonitorOptionsPtrType) ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput)
}

type SyntheticsTestMobileOptionsListMonitorOptionsOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListMonitorOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListMonitorOptions)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListMonitorOptionsOutput) ToSyntheticsTestMobileOptionsListMonitorOptionsOutput() SyntheticsTestMobileOptionsListMonitorOptionsOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListMonitorOptionsOutput) ToSyntheticsTestMobileOptionsListMonitorOptionsOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMonitorOptionsOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListMonitorOptionsOutput) ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutput() SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput {
	return o.ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestMobileOptionsListMonitorOptionsOutput) ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestMobileOptionsListMonitorOptions) *SyntheticsTestMobileOptionsListMonitorOptions {
		return &v
	}).(SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput)
}

func (o SyntheticsTestMobileOptionsListMonitorOptionsOutput) EscalationMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListMonitorOptions) *string { return v.EscalationMessage }).(pulumi.StringPtrOutput)
}

// Valid values are `showAll`, `hideAll`, `hideQuery`, `hideHandles`.
func (o SyntheticsTestMobileOptionsListMonitorOptionsOutput) NotificationPresetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListMonitorOptions) *string { return v.NotificationPresetName }).(pulumi.StringPtrOutput)
}

// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
func (o SyntheticsTestMobileOptionsListMonitorOptionsOutput) RenotifyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListMonitorOptions) *int { return v.RenotifyInterval }).(pulumi.IntPtrOutput)
}

// The number of times a monitor renotifies. It can only be set if `renotifyInterval` is set.
func (o SyntheticsTestMobileOptionsListMonitorOptionsOutput) RenotifyOccurrences() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListMonitorOptions) *int { return v.RenotifyOccurrences }).(pulumi.IntPtrOutput)
}

type SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsListMonitorOptions)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput) ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutput() SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput) ToSyntheticsTestMobileOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput) Elem() SyntheticsTestMobileOptionsListMonitorOptionsOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListMonitorOptions) SyntheticsTestMobileOptionsListMonitorOptions {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestMobileOptionsListMonitorOptions
		return ret
	}).(SyntheticsTestMobileOptionsListMonitorOptionsOutput)
}

func (o SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput) EscalationMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListMonitorOptions) *string {
		if v == nil {
			return nil
		}
		return v.EscalationMessage
	}).(pulumi.StringPtrOutput)
}

// Valid values are `showAll`, `hideAll`, `hideQuery`, `hideHandles`.
func (o SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput) NotificationPresetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListMonitorOptions) *string {
		if v == nil {
			return nil
		}
		return v.NotificationPresetName
	}).(pulumi.StringPtrOutput)
}

// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
func (o SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput) RenotifyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListMonitorOptions) *int {
		if v == nil {
			return nil
		}
		return v.RenotifyInterval
	}).(pulumi.IntPtrOutput)
}

// The number of times a monitor renotifies. It can only be set if `renotifyInterval` is set.
func (o SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput) RenotifyOccurrences() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListMonitorOptions) *int {
		if v == nil {
			return nil
		}
		return v.RenotifyOccurrences
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestMobileOptionsListRetry struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
	Count *int `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
	Interval *int `pulumi:"interval"`
}

// SyntheticsTestMobileOptionsListRetryInput is an input type that accepts SyntheticsTestMobileOptionsListRetryArgs and SyntheticsTestMobileOptionsListRetryOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListRetryInput` via:
//
//	SyntheticsTestMobileOptionsListRetryArgs{...}
type SyntheticsTestMobileOptionsListRetryInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListRetryOutput() SyntheticsTestMobileOptionsListRetryOutput
	ToSyntheticsTestMobileOptionsListRetryOutputWithContext(context.Context) SyntheticsTestMobileOptionsListRetryOutput
}

type SyntheticsTestMobileOptionsListRetryArgs struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (SyntheticsTestMobileOptionsListRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListRetry)(nil)).Elem()
}

func (i SyntheticsTestMobileOptionsListRetryArgs) ToSyntheticsTestMobileOptionsListRetryOutput() SyntheticsTestMobileOptionsListRetryOutput {
	return i.ToSyntheticsTestMobileOptionsListRetryOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListRetryArgs) ToSyntheticsTestMobileOptionsListRetryOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListRetryOutput)
}

func (i SyntheticsTestMobileOptionsListRetryArgs) ToSyntheticsTestMobileOptionsListRetryPtrOutput() SyntheticsTestMobileOptionsListRetryPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListRetryPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListRetryArgs) ToSyntheticsTestMobileOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListRetryOutput).ToSyntheticsTestMobileOptionsListRetryPtrOutputWithContext(ctx)
}

// SyntheticsTestMobileOptionsListRetryPtrInput is an input type that accepts SyntheticsTestMobileOptionsListRetryArgs, SyntheticsTestMobileOptionsListRetryPtr and SyntheticsTestMobileOptionsListRetryPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListRetryPtrInput` via:
//
//	        SyntheticsTestMobileOptionsListRetryArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestMobileOptionsListRetryPtrInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListRetryPtrOutput() SyntheticsTestMobileOptionsListRetryPtrOutput
	ToSyntheticsTestMobileOptionsListRetryPtrOutputWithContext(context.Context) SyntheticsTestMobileOptionsListRetryPtrOutput
}

type syntheticsTestMobileOptionsListRetryPtrType SyntheticsTestMobileOptionsListRetryArgs

func SyntheticsTestMobileOptionsListRetryPtr(v *SyntheticsTestMobileOptionsListRetryArgs) SyntheticsTestMobileOptionsListRetryPtrInput {
	return (*syntheticsTestMobileOptionsListRetryPtrType)(v)
}

func (*syntheticsTestMobileOptionsListRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsListRetry)(nil)).Elem()
}

func (i *syntheticsTestMobileOptionsListRetryPtrType) ToSyntheticsTestMobileOptionsListRetryPtrOutput() SyntheticsTestMobileOptionsListRetryPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListRetryPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestMobileOptionsListRetryPtrType) ToSyntheticsTestMobileOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListRetryPtrOutput)
}

type SyntheticsTestMobileOptionsListRetryOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListRetry)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListRetryOutput) ToSyntheticsTestMobileOptionsListRetryOutput() SyntheticsTestMobileOptionsListRetryOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListRetryOutput) ToSyntheticsTestMobileOptionsListRetryOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListRetryOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListRetryOutput) ToSyntheticsTestMobileOptionsListRetryPtrOutput() SyntheticsTestMobileOptionsListRetryPtrOutput {
	return o.ToSyntheticsTestMobileOptionsListRetryPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestMobileOptionsListRetryOutput) ToSyntheticsTestMobileOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestMobileOptionsListRetry) *SyntheticsTestMobileOptionsListRetry {
		return &v
	}).(SyntheticsTestMobileOptionsListRetryPtrOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
func (o SyntheticsTestMobileOptionsListRetryOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListRetry) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
func (o SyntheticsTestMobileOptionsListRetryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListRetry) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type SyntheticsTestMobileOptionsListRetryPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsListRetry)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListRetryPtrOutput) ToSyntheticsTestMobileOptionsListRetryPtrOutput() SyntheticsTestMobileOptionsListRetryPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListRetryPtrOutput) ToSyntheticsTestMobileOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListRetryPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListRetryPtrOutput) Elem() SyntheticsTestMobileOptionsListRetryOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListRetry) SyntheticsTestMobileOptionsListRetry {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestMobileOptionsListRetry
		return ret
	}).(SyntheticsTestMobileOptionsListRetryOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
func (o SyntheticsTestMobileOptionsListRetryPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListRetry) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
func (o SyntheticsTestMobileOptionsListRetryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListRetry) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestMobileOptionsListScheduling struct {
	// Array containing objects describing the scheduling pattern to apply to each day.
	Timeframes []SyntheticsTestMobileOptionsListSchedulingTimeframe `pulumi:"timeframes"`
	// Timezone in which the timeframe is based.
	Timezone string `pulumi:"timezone"`
}

// SyntheticsTestMobileOptionsListSchedulingInput is an input type that accepts SyntheticsTestMobileOptionsListSchedulingArgs and SyntheticsTestMobileOptionsListSchedulingOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListSchedulingInput` via:
//
//	SyntheticsTestMobileOptionsListSchedulingArgs{...}
type SyntheticsTestMobileOptionsListSchedulingInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListSchedulingOutput() SyntheticsTestMobileOptionsListSchedulingOutput
	ToSyntheticsTestMobileOptionsListSchedulingOutputWithContext(context.Context) SyntheticsTestMobileOptionsListSchedulingOutput
}

type SyntheticsTestMobileOptionsListSchedulingArgs struct {
	// Array containing objects describing the scheduling pattern to apply to each day.
	Timeframes SyntheticsTestMobileOptionsListSchedulingTimeframeArrayInput `pulumi:"timeframes"`
	// Timezone in which the timeframe is based.
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (SyntheticsTestMobileOptionsListSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListScheduling)(nil)).Elem()
}

func (i SyntheticsTestMobileOptionsListSchedulingArgs) ToSyntheticsTestMobileOptionsListSchedulingOutput() SyntheticsTestMobileOptionsListSchedulingOutput {
	return i.ToSyntheticsTestMobileOptionsListSchedulingOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListSchedulingArgs) ToSyntheticsTestMobileOptionsListSchedulingOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListSchedulingOutput)
}

func (i SyntheticsTestMobileOptionsListSchedulingArgs) ToSyntheticsTestMobileOptionsListSchedulingPtrOutput() SyntheticsTestMobileOptionsListSchedulingPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListSchedulingArgs) ToSyntheticsTestMobileOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListSchedulingOutput).ToSyntheticsTestMobileOptionsListSchedulingPtrOutputWithContext(ctx)
}

// SyntheticsTestMobileOptionsListSchedulingPtrInput is an input type that accepts SyntheticsTestMobileOptionsListSchedulingArgs, SyntheticsTestMobileOptionsListSchedulingPtr and SyntheticsTestMobileOptionsListSchedulingPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListSchedulingPtrInput` via:
//
//	        SyntheticsTestMobileOptionsListSchedulingArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestMobileOptionsListSchedulingPtrInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListSchedulingPtrOutput() SyntheticsTestMobileOptionsListSchedulingPtrOutput
	ToSyntheticsTestMobileOptionsListSchedulingPtrOutputWithContext(context.Context) SyntheticsTestMobileOptionsListSchedulingPtrOutput
}

type syntheticsTestMobileOptionsListSchedulingPtrType SyntheticsTestMobileOptionsListSchedulingArgs

func SyntheticsTestMobileOptionsListSchedulingPtr(v *SyntheticsTestMobileOptionsListSchedulingArgs) SyntheticsTestMobileOptionsListSchedulingPtrInput {
	return (*syntheticsTestMobileOptionsListSchedulingPtrType)(v)
}

func (*syntheticsTestMobileOptionsListSchedulingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsListScheduling)(nil)).Elem()
}

func (i *syntheticsTestMobileOptionsListSchedulingPtrType) ToSyntheticsTestMobileOptionsListSchedulingPtrOutput() SyntheticsTestMobileOptionsListSchedulingPtrOutput {
	return i.ToSyntheticsTestMobileOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestMobileOptionsListSchedulingPtrType) ToSyntheticsTestMobileOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListSchedulingPtrOutput)
}

type SyntheticsTestMobileOptionsListSchedulingOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListScheduling)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListSchedulingOutput) ToSyntheticsTestMobileOptionsListSchedulingOutput() SyntheticsTestMobileOptionsListSchedulingOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListSchedulingOutput) ToSyntheticsTestMobileOptionsListSchedulingOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListSchedulingOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListSchedulingOutput) ToSyntheticsTestMobileOptionsListSchedulingPtrOutput() SyntheticsTestMobileOptionsListSchedulingPtrOutput {
	return o.ToSyntheticsTestMobileOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestMobileOptionsListSchedulingOutput) ToSyntheticsTestMobileOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListSchedulingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestMobileOptionsListScheduling) *SyntheticsTestMobileOptionsListScheduling {
		return &v
	}).(SyntheticsTestMobileOptionsListSchedulingPtrOutput)
}

// Array containing objects describing the scheduling pattern to apply to each day.
func (o SyntheticsTestMobileOptionsListSchedulingOutput) Timeframes() SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListScheduling) []SyntheticsTestMobileOptionsListSchedulingTimeframe {
		return v.Timeframes
	}).(SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput)
}

// Timezone in which the timeframe is based.
func (o SyntheticsTestMobileOptionsListSchedulingOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListScheduling) string { return v.Timezone }).(pulumi.StringOutput)
}

type SyntheticsTestMobileOptionsListSchedulingPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListSchedulingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileOptionsListScheduling)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListSchedulingPtrOutput) ToSyntheticsTestMobileOptionsListSchedulingPtrOutput() SyntheticsTestMobileOptionsListSchedulingPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListSchedulingPtrOutput) ToSyntheticsTestMobileOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListSchedulingPtrOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListSchedulingPtrOutput) Elem() SyntheticsTestMobileOptionsListSchedulingOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListScheduling) SyntheticsTestMobileOptionsListScheduling {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestMobileOptionsListScheduling
		return ret
	}).(SyntheticsTestMobileOptionsListSchedulingOutput)
}

// Array containing objects describing the scheduling pattern to apply to each day.
func (o SyntheticsTestMobileOptionsListSchedulingPtrOutput) Timeframes() SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListScheduling) []SyntheticsTestMobileOptionsListSchedulingTimeframe {
		if v == nil {
			return nil
		}
		return v.Timeframes
	}).(SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput)
}

// Timezone in which the timeframe is based.
func (o SyntheticsTestMobileOptionsListSchedulingPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileOptionsListScheduling) *string {
		if v == nil {
			return nil
		}
		return &v.Timezone
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestMobileOptionsListSchedulingTimeframe struct {
	// Number representing the day of the week
	Day int `pulumi:"day"`
	// The hour of the day on which scheduling starts.
	From string `pulumi:"from"`
	// The hour of the day on which scheduling ends.
	To string `pulumi:"to"`
}

// SyntheticsTestMobileOptionsListSchedulingTimeframeInput is an input type that accepts SyntheticsTestMobileOptionsListSchedulingTimeframeArgs and SyntheticsTestMobileOptionsListSchedulingTimeframeOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListSchedulingTimeframeInput` via:
//
//	SyntheticsTestMobileOptionsListSchedulingTimeframeArgs{...}
type SyntheticsTestMobileOptionsListSchedulingTimeframeInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListSchedulingTimeframeOutput() SyntheticsTestMobileOptionsListSchedulingTimeframeOutput
	ToSyntheticsTestMobileOptionsListSchedulingTimeframeOutputWithContext(context.Context) SyntheticsTestMobileOptionsListSchedulingTimeframeOutput
}

type SyntheticsTestMobileOptionsListSchedulingTimeframeArgs struct {
	// Number representing the day of the week
	Day pulumi.IntInput `pulumi:"day"`
	// The hour of the day on which scheduling starts.
	From pulumi.StringInput `pulumi:"from"`
	// The hour of the day on which scheduling ends.
	To pulumi.StringInput `pulumi:"to"`
}

func (SyntheticsTestMobileOptionsListSchedulingTimeframeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (i SyntheticsTestMobileOptionsListSchedulingTimeframeArgs) ToSyntheticsTestMobileOptionsListSchedulingTimeframeOutput() SyntheticsTestMobileOptionsListSchedulingTimeframeOutput {
	return i.ToSyntheticsTestMobileOptionsListSchedulingTimeframeOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListSchedulingTimeframeArgs) ToSyntheticsTestMobileOptionsListSchedulingTimeframeOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListSchedulingTimeframeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListSchedulingTimeframeOutput)
}

// SyntheticsTestMobileOptionsListSchedulingTimeframeArrayInput is an input type that accepts SyntheticsTestMobileOptionsListSchedulingTimeframeArray and SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileOptionsListSchedulingTimeframeArrayInput` via:
//
//	SyntheticsTestMobileOptionsListSchedulingTimeframeArray{ SyntheticsTestMobileOptionsListSchedulingTimeframeArgs{...} }
type SyntheticsTestMobileOptionsListSchedulingTimeframeArrayInput interface {
	pulumi.Input

	ToSyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput
	ToSyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutputWithContext(context.Context) SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput
}

type SyntheticsTestMobileOptionsListSchedulingTimeframeArray []SyntheticsTestMobileOptionsListSchedulingTimeframeInput

func (SyntheticsTestMobileOptionsListSchedulingTimeframeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestMobileOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (i SyntheticsTestMobileOptionsListSchedulingTimeframeArray) ToSyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput {
	return i.ToSyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileOptionsListSchedulingTimeframeArray) ToSyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput)
}

type SyntheticsTestMobileOptionsListSchedulingTimeframeOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListSchedulingTimeframeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListSchedulingTimeframeOutput) ToSyntheticsTestMobileOptionsListSchedulingTimeframeOutput() SyntheticsTestMobileOptionsListSchedulingTimeframeOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListSchedulingTimeframeOutput) ToSyntheticsTestMobileOptionsListSchedulingTimeframeOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListSchedulingTimeframeOutput {
	return o
}

// Number representing the day of the week
func (o SyntheticsTestMobileOptionsListSchedulingTimeframeOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListSchedulingTimeframe) int { return v.Day }).(pulumi.IntOutput)
}

// The hour of the day on which scheduling starts.
func (o SyntheticsTestMobileOptionsListSchedulingTimeframeOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListSchedulingTimeframe) string { return v.From }).(pulumi.StringOutput)
}

// The hour of the day on which scheduling ends.
func (o SyntheticsTestMobileOptionsListSchedulingTimeframeOutput) To() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestMobileOptionsListSchedulingTimeframe) string { return v.To }).(pulumi.StringOutput)
}

type SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestMobileOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (o SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput) ToSyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput) ToSyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutputWithContext(ctx context.Context) SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput {
	return o
}

func (o SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput) Index(i pulumi.IntInput) SyntheticsTestMobileOptionsListSchedulingTimeframeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestMobileOptionsListSchedulingTimeframe {
		return vs[0].([]SyntheticsTestMobileOptionsListSchedulingTimeframe)[vs[1].(int)]
	}).(SyntheticsTestMobileOptionsListSchedulingTimeframeOutput)
}

type SyntheticsTestMobileStep struct {
	// A boolean set to allow this step to fail.
	AllowFailure *bool `pulumi:"allowFailure"`
	// A boolean set to determine if the step has a new step element.
	HasNewStepElement *bool `pulumi:"hasNewStepElement"`
	// A boolean to use in addition to `allowFailure` to determine if the test should be marked as failed when the step fails.
	IsCritical *bool `pulumi:"isCritical"`
	// The name of the step.
	Name string `pulumi:"name"`
	// A boolean set to not take a screenshot for the step.
	NoScreenshot *bool `pulumi:"noScreenshot"`
	// Parameters for the step.
	Params SyntheticsTestMobileStepParams `pulumi:"params"`
	// The public ID of the step.
	PublicId *string `pulumi:"publicId"`
	// The time before declaring a step failed.
	Timeout *int `pulumi:"timeout"`
	// The type of the step. Valid values are `assertElementContent`, `assertScreenContains`, `assertScreenLacks`, `doubleTap`, `extractVariable`, `flick`, `openDeeplink`, `playSubTest`, `pressBack`, `restartApplication`, `rotate`, `scroll`, `scrollToElement`, `tap`, `toggleWiFi`, `typeText`, `wait`.
	Type string `pulumi:"type"`
}

// SyntheticsTestMobileStepInput is an input type that accepts SyntheticsTestMobileStepArgs and SyntheticsTestMobileStepOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepInput` via:
//
//	SyntheticsTestMobileStepArgs{...}
type SyntheticsTestMobileStepInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepOutput() SyntheticsTestMobileStepOutput
	ToSyntheticsTestMobileStepOutputWithContext(context.Context) SyntheticsTestMobileStepOutput
}

type SyntheticsTestMobileStepArgs struct {
	// A boolean set to allow this step to fail.
	AllowFailure pulumi.BoolPtrInput `pulumi:"allowFailure"`
	// A boolean set to determine if the step has a new step element.
	HasNewStepElement pulumi.BoolPtrInput `pulumi:"hasNewStepElement"`
	// A boolean to use in addition to `allowFailure` to determine if the test should be marked as failed when the step fails.
	IsCritical pulumi.BoolPtrInput `pulumi:"isCritical"`
	// The name of the step.
	Name pulumi.StringInput `pulumi:"name"`
	// A boolean set to not take a screenshot for the step.
	NoScreenshot pulumi.BoolPtrInput `pulumi:"noScreenshot"`
	// Parameters for the step.
	Params SyntheticsTestMobileStepParamsInput `pulumi:"params"`
	// The public ID of the step.
	PublicId pulumi.StringPtrInput `pulumi:"publicId"`
	// The time before declaring a step failed.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The type of the step. Valid values are `assertElementContent`, `assertScreenContains`, `assertScreenLacks`, `doubleTap`, `extractVariable`, `flick`, `openDeeplink`, `playSubTest`, `pressBack`, `restartApplication`, `rotate`, `scroll`, `scrollToElement`, `tap`, `toggleWiFi`, `typeText`, `wait`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestMobileStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStep)(nil)).Elem()
}

func (i SyntheticsTestMobileStepArgs) ToSyntheticsTestMobileStepOutput() SyntheticsTestMobileStepOutput {
	return i.ToSyntheticsTestMobileStepOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepArgs) ToSyntheticsTestMobileStepOutputWithContext(ctx context.Context) SyntheticsTestMobileStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepOutput)
}

// SyntheticsTestMobileStepArrayInput is an input type that accepts SyntheticsTestMobileStepArray and SyntheticsTestMobileStepArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepArrayInput` via:
//
//	SyntheticsTestMobileStepArray{ SyntheticsTestMobileStepArgs{...} }
type SyntheticsTestMobileStepArrayInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepArrayOutput() SyntheticsTestMobileStepArrayOutput
	ToSyntheticsTestMobileStepArrayOutputWithContext(context.Context) SyntheticsTestMobileStepArrayOutput
}

type SyntheticsTestMobileStepArray []SyntheticsTestMobileStepInput

func (SyntheticsTestMobileStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestMobileStep)(nil)).Elem()
}

func (i SyntheticsTestMobileStepArray) ToSyntheticsTestMobileStepArrayOutput() SyntheticsTestMobileStepArrayOutput {
	return i.ToSyntheticsTestMobileStepArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepArray) ToSyntheticsTestMobileStepArrayOutputWithContext(ctx context.Context) SyntheticsTestMobileStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepArrayOutput)
}

type SyntheticsTestMobileStepOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStep)(nil)).Elem()
}

func (o SyntheticsTestMobileStepOutput) ToSyntheticsTestMobileStepOutput() SyntheticsTestMobileStepOutput {
	return o
}

func (o SyntheticsTestMobileStepOutput) ToSyntheticsTestMobileStepOutputWithContext(ctx context.Context) SyntheticsTestMobileStepOutput {
	return o
}

// A boolean set to allow this step to fail.
func (o SyntheticsTestMobileStepOutput) AllowFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStep) *bool { return v.AllowFailure }).(pulumi.BoolPtrOutput)
}

// A boolean set to determine if the step has a new step element.
func (o SyntheticsTestMobileStepOutput) HasNewStepElement() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStep) *bool { return v.HasNewStepElement }).(pulumi.BoolPtrOutput)
}

// A boolean to use in addition to `allowFailure` to determine if the test should be marked as failed when the step fails.
func (o SyntheticsTestMobileStepOutput) IsCritical() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStep) *bool { return v.IsCritical }).(pulumi.BoolPtrOutput)
}

// The name of the step.
func (o SyntheticsTestMobileStepOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStep) string { return v.Name }).(pulumi.StringOutput)
}

// A boolean set to not take a screenshot for the step.
func (o SyntheticsTestMobileStepOutput) NoScreenshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStep) *bool { return v.NoScreenshot }).(pulumi.BoolPtrOutput)
}

// Parameters for the step.
func (o SyntheticsTestMobileStepOutput) Params() SyntheticsTestMobileStepParamsOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStep) SyntheticsTestMobileStepParams { return v.Params }).(SyntheticsTestMobileStepParamsOutput)
}

// The public ID of the step.
func (o SyntheticsTestMobileStepOutput) PublicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStep) *string { return v.PublicId }).(pulumi.StringPtrOutput)
}

// The time before declaring a step failed.
func (o SyntheticsTestMobileStepOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStep) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The type of the step. Valid values are `assertElementContent`, `assertScreenContains`, `assertScreenLacks`, `doubleTap`, `extractVariable`, `flick`, `openDeeplink`, `playSubTest`, `pressBack`, `restartApplication`, `rotate`, `scroll`, `scrollToElement`, `tap`, `toggleWiFi`, `typeText`, `wait`.
func (o SyntheticsTestMobileStepOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStep) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestMobileStepArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestMobileStep)(nil)).Elem()
}

func (o SyntheticsTestMobileStepArrayOutput) ToSyntheticsTestMobileStepArrayOutput() SyntheticsTestMobileStepArrayOutput {
	return o
}

func (o SyntheticsTestMobileStepArrayOutput) ToSyntheticsTestMobileStepArrayOutputWithContext(ctx context.Context) SyntheticsTestMobileStepArrayOutput {
	return o
}

func (o SyntheticsTestMobileStepArrayOutput) Index(i pulumi.IntInput) SyntheticsTestMobileStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestMobileStep {
		return vs[0].([]SyntheticsTestMobileStep)[vs[1].(int)]
	}).(SyntheticsTestMobileStepOutput)
}

type SyntheticsTestMobileStepParams struct {
	// Check type to use for an assertion step. Valid values are `equals`, `notEquals`, `contains`, `notContains`, `startsWith`, `notStartsWith`, `greater`, `lower`, `greaterEquals`, `lowerEquals`, `matchRegex`, `between`, `isEmpty`, `notIsEmpty`.
	Check *string `pulumi:"check"`
	// Delay between each key stroke for a "type test" step.
	Delay *int `pulumi:"delay"`
	// Valid values are `up`, `down`, `left`, `right`.
	Direction *string `pulumi:"direction"`
	// Element to use for the step, JSON encoded string.
	Element    *SyntheticsTestMobileStepParamsElement   `pulumi:"element"`
	Enable     *bool                                    `pulumi:"enable"`
	MaxScrolls *int                                     `pulumi:"maxScrolls"`
	Positions  []SyntheticsTestMobileStepParamsPosition `pulumi:"positions"`
	// ID of the Synthetics test to use as subtest.
	SubtestPublicId *string `pulumi:"subtestPublicId"`
	// Value of the step.
	Value *string `pulumi:"value"`
	// Details of the variable to extract.
	Variable  *SyntheticsTestMobileStepParamsVariable `pulumi:"variable"`
	WithEnter *bool                                   `pulumi:"withEnter"`
	// X coordinates for a "scroll step".
	X *float64 `pulumi:"x"`
	// Y coordinates for a "scroll step".
	Y *float64 `pulumi:"y"`
}

// SyntheticsTestMobileStepParamsInput is an input type that accepts SyntheticsTestMobileStepParamsArgs and SyntheticsTestMobileStepParamsOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsInput` via:
//
//	SyntheticsTestMobileStepParamsArgs{...}
type SyntheticsTestMobileStepParamsInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsOutput() SyntheticsTestMobileStepParamsOutput
	ToSyntheticsTestMobileStepParamsOutputWithContext(context.Context) SyntheticsTestMobileStepParamsOutput
}

type SyntheticsTestMobileStepParamsArgs struct {
	// Check type to use for an assertion step. Valid values are `equals`, `notEquals`, `contains`, `notContains`, `startsWith`, `notStartsWith`, `greater`, `lower`, `greaterEquals`, `lowerEquals`, `matchRegex`, `between`, `isEmpty`, `notIsEmpty`.
	Check pulumi.StringPtrInput `pulumi:"check"`
	// Delay between each key stroke for a "type test" step.
	Delay pulumi.IntPtrInput `pulumi:"delay"`
	// Valid values are `up`, `down`, `left`, `right`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Element to use for the step, JSON encoded string.
	Element    SyntheticsTestMobileStepParamsElementPtrInput    `pulumi:"element"`
	Enable     pulumi.BoolPtrInput                              `pulumi:"enable"`
	MaxScrolls pulumi.IntPtrInput                               `pulumi:"maxScrolls"`
	Positions  SyntheticsTestMobileStepParamsPositionArrayInput `pulumi:"positions"`
	// ID of the Synthetics test to use as subtest.
	SubtestPublicId pulumi.StringPtrInput `pulumi:"subtestPublicId"`
	// Value of the step.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Details of the variable to extract.
	Variable  SyntheticsTestMobileStepParamsVariablePtrInput `pulumi:"variable"`
	WithEnter pulumi.BoolPtrInput                            `pulumi:"withEnter"`
	// X coordinates for a "scroll step".
	X pulumi.Float64PtrInput `pulumi:"x"`
	// Y coordinates for a "scroll step".
	Y pulumi.Float64PtrInput `pulumi:"y"`
}

func (SyntheticsTestMobileStepParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParams)(nil)).Elem()
}

func (i SyntheticsTestMobileStepParamsArgs) ToSyntheticsTestMobileStepParamsOutput() SyntheticsTestMobileStepParamsOutput {
	return i.ToSyntheticsTestMobileStepParamsOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsArgs) ToSyntheticsTestMobileStepParamsOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsOutput)
}

type SyntheticsTestMobileStepParamsOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParams)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsOutput) ToSyntheticsTestMobileStepParamsOutput() SyntheticsTestMobileStepParamsOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsOutput) ToSyntheticsTestMobileStepParamsOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsOutput {
	return o
}

// Check type to use for an assertion step. Valid values are `equals`, `notEquals`, `contains`, `notContains`, `startsWith`, `notStartsWith`, `greater`, `lower`, `greaterEquals`, `lowerEquals`, `matchRegex`, `between`, `isEmpty`, `notIsEmpty`.
func (o SyntheticsTestMobileStepParamsOutput) Check() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *string { return v.Check }).(pulumi.StringPtrOutput)
}

// Delay between each key stroke for a "type test" step.
func (o SyntheticsTestMobileStepParamsOutput) Delay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *int { return v.Delay }).(pulumi.IntPtrOutput)
}

// Valid values are `up`, `down`, `left`, `right`.
func (o SyntheticsTestMobileStepParamsOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Element to use for the step, JSON encoded string.
func (o SyntheticsTestMobileStepParamsOutput) Element() SyntheticsTestMobileStepParamsElementPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *SyntheticsTestMobileStepParamsElement { return v.Element }).(SyntheticsTestMobileStepParamsElementPtrOutput)
}

func (o SyntheticsTestMobileStepParamsOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

func (o SyntheticsTestMobileStepParamsOutput) MaxScrolls() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *int { return v.MaxScrolls }).(pulumi.IntPtrOutput)
}

func (o SyntheticsTestMobileStepParamsOutput) Positions() SyntheticsTestMobileStepParamsPositionArrayOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) []SyntheticsTestMobileStepParamsPosition { return v.Positions }).(SyntheticsTestMobileStepParamsPositionArrayOutput)
}

// ID of the Synthetics test to use as subtest.
func (o SyntheticsTestMobileStepParamsOutput) SubtestPublicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *string { return v.SubtestPublicId }).(pulumi.StringPtrOutput)
}

// Value of the step.
func (o SyntheticsTestMobileStepParamsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Details of the variable to extract.
func (o SyntheticsTestMobileStepParamsOutput) Variable() SyntheticsTestMobileStepParamsVariablePtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *SyntheticsTestMobileStepParamsVariable { return v.Variable }).(SyntheticsTestMobileStepParamsVariablePtrOutput)
}

func (o SyntheticsTestMobileStepParamsOutput) WithEnter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *bool { return v.WithEnter }).(pulumi.BoolPtrOutput)
}

// X coordinates for a "scroll step".
func (o SyntheticsTestMobileStepParamsOutput) X() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *float64 { return v.X }).(pulumi.Float64PtrOutput)
}

// Y coordinates for a "scroll step".
func (o SyntheticsTestMobileStepParamsOutput) Y() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParams) *float64 { return v.Y }).(pulumi.Float64PtrOutput)
}

type SyntheticsTestMobileStepParamsElement struct {
	Context *string `pulumi:"context"`
	// Valid values are `native`, `web`.
	ContextType        *string                                                `pulumi:"contextType"`
	ElementDescription *string                                                `pulumi:"elementDescription"`
	MultiLocator       map[string]string                                      `pulumi:"multiLocator"`
	RelativePosition   *SyntheticsTestMobileStepParamsElementRelativePosition `pulumi:"relativePosition"`
	TextContent        *string                                                `pulumi:"textContent"`
	UserLocator        *SyntheticsTestMobileStepParamsElementUserLocator      `pulumi:"userLocator"`
	ViewName           *string                                                `pulumi:"viewName"`
}

// SyntheticsTestMobileStepParamsElementInput is an input type that accepts SyntheticsTestMobileStepParamsElementArgs and SyntheticsTestMobileStepParamsElementOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsElementInput` via:
//
//	SyntheticsTestMobileStepParamsElementArgs{...}
type SyntheticsTestMobileStepParamsElementInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsElementOutput() SyntheticsTestMobileStepParamsElementOutput
	ToSyntheticsTestMobileStepParamsElementOutputWithContext(context.Context) SyntheticsTestMobileStepParamsElementOutput
}

type SyntheticsTestMobileStepParamsElementArgs struct {
	Context pulumi.StringPtrInput `pulumi:"context"`
	// Valid values are `native`, `web`.
	ContextType        pulumi.StringPtrInput                                         `pulumi:"contextType"`
	ElementDescription pulumi.StringPtrInput                                         `pulumi:"elementDescription"`
	MultiLocator       pulumi.StringMapInput                                         `pulumi:"multiLocator"`
	RelativePosition   SyntheticsTestMobileStepParamsElementRelativePositionPtrInput `pulumi:"relativePosition"`
	TextContent        pulumi.StringPtrInput                                         `pulumi:"textContent"`
	UserLocator        SyntheticsTestMobileStepParamsElementUserLocatorPtrInput      `pulumi:"userLocator"`
	ViewName           pulumi.StringPtrInput                                         `pulumi:"viewName"`
}

func (SyntheticsTestMobileStepParamsElementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsElement)(nil)).Elem()
}

func (i SyntheticsTestMobileStepParamsElementArgs) ToSyntheticsTestMobileStepParamsElementOutput() SyntheticsTestMobileStepParamsElementOutput {
	return i.ToSyntheticsTestMobileStepParamsElementOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsElementArgs) ToSyntheticsTestMobileStepParamsElementOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsElementOutput)
}

func (i SyntheticsTestMobileStepParamsElementArgs) ToSyntheticsTestMobileStepParamsElementPtrOutput() SyntheticsTestMobileStepParamsElementPtrOutput {
	return i.ToSyntheticsTestMobileStepParamsElementPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsElementArgs) ToSyntheticsTestMobileStepParamsElementPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsElementOutput).ToSyntheticsTestMobileStepParamsElementPtrOutputWithContext(ctx)
}

// SyntheticsTestMobileStepParamsElementPtrInput is an input type that accepts SyntheticsTestMobileStepParamsElementArgs, SyntheticsTestMobileStepParamsElementPtr and SyntheticsTestMobileStepParamsElementPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsElementPtrInput` via:
//
//	        SyntheticsTestMobileStepParamsElementArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestMobileStepParamsElementPtrInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsElementPtrOutput() SyntheticsTestMobileStepParamsElementPtrOutput
	ToSyntheticsTestMobileStepParamsElementPtrOutputWithContext(context.Context) SyntheticsTestMobileStepParamsElementPtrOutput
}

type syntheticsTestMobileStepParamsElementPtrType SyntheticsTestMobileStepParamsElementArgs

func SyntheticsTestMobileStepParamsElementPtr(v *SyntheticsTestMobileStepParamsElementArgs) SyntheticsTestMobileStepParamsElementPtrInput {
	return (*syntheticsTestMobileStepParamsElementPtrType)(v)
}

func (*syntheticsTestMobileStepParamsElementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileStepParamsElement)(nil)).Elem()
}

func (i *syntheticsTestMobileStepParamsElementPtrType) ToSyntheticsTestMobileStepParamsElementPtrOutput() SyntheticsTestMobileStepParamsElementPtrOutput {
	return i.ToSyntheticsTestMobileStepParamsElementPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestMobileStepParamsElementPtrType) ToSyntheticsTestMobileStepParamsElementPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsElementPtrOutput)
}

type SyntheticsTestMobileStepParamsElementOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsElementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsElement)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsElementOutput) ToSyntheticsTestMobileStepParamsElementOutput() SyntheticsTestMobileStepParamsElementOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementOutput) ToSyntheticsTestMobileStepParamsElementOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementOutput) ToSyntheticsTestMobileStepParamsElementPtrOutput() SyntheticsTestMobileStepParamsElementPtrOutput {
	return o.ToSyntheticsTestMobileStepParamsElementPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestMobileStepParamsElementOutput) ToSyntheticsTestMobileStepParamsElementPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestMobileStepParamsElement) *SyntheticsTestMobileStepParamsElement {
		return &v
	}).(SyntheticsTestMobileStepParamsElementPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElement) *string { return v.Context }).(pulumi.StringPtrOutput)
}

// Valid values are `native`, `web`.
func (o SyntheticsTestMobileStepParamsElementOutput) ContextType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElement) *string { return v.ContextType }).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementOutput) ElementDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElement) *string { return v.ElementDescription }).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementOutput) MultiLocator() pulumi.StringMapOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElement) map[string]string { return v.MultiLocator }).(pulumi.StringMapOutput)
}

func (o SyntheticsTestMobileStepParamsElementOutput) RelativePosition() SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElement) *SyntheticsTestMobileStepParamsElementRelativePosition {
		return v.RelativePosition
	}).(SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElement) *string { return v.TextContent }).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementOutput) UserLocator() SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElement) *SyntheticsTestMobileStepParamsElementUserLocator {
		return v.UserLocator
	}).(SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementOutput) ViewName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElement) *string { return v.ViewName }).(pulumi.StringPtrOutput)
}

type SyntheticsTestMobileStepParamsElementPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsElementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileStepParamsElement)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsElementPtrOutput) ToSyntheticsTestMobileStepParamsElementPtrOutput() SyntheticsTestMobileStepParamsElementPtrOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementPtrOutput) ToSyntheticsTestMobileStepParamsElementPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementPtrOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementPtrOutput) Elem() SyntheticsTestMobileStepParamsElementOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElement) SyntheticsTestMobileStepParamsElement {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestMobileStepParamsElement
		return ret
	}).(SyntheticsTestMobileStepParamsElementOutput)
}

func (o SyntheticsTestMobileStepParamsElementPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElement) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

// Valid values are `native`, `web`.
func (o SyntheticsTestMobileStepParamsElementPtrOutput) ContextType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElement) *string {
		if v == nil {
			return nil
		}
		return v.ContextType
	}).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementPtrOutput) ElementDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElement) *string {
		if v == nil {
			return nil
		}
		return v.ElementDescription
	}).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementPtrOutput) MultiLocator() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElement) map[string]string {
		if v == nil {
			return nil
		}
		return v.MultiLocator
	}).(pulumi.StringMapOutput)
}

func (o SyntheticsTestMobileStepParamsElementPtrOutput) RelativePosition() SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElement) *SyntheticsTestMobileStepParamsElementRelativePosition {
		if v == nil {
			return nil
		}
		return v.RelativePosition
	}).(SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementPtrOutput) TextContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElement) *string {
		if v == nil {
			return nil
		}
		return v.TextContent
	}).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementPtrOutput) UserLocator() SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElement) *SyntheticsTestMobileStepParamsElementUserLocator {
		if v == nil {
			return nil
		}
		return v.UserLocator
	}).(SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementPtrOutput) ViewName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElement) *string {
		if v == nil {
			return nil
		}
		return v.ViewName
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestMobileStepParamsElementRelativePosition struct {
	X *float64 `pulumi:"x"`
	Y *float64 `pulumi:"y"`
}

// SyntheticsTestMobileStepParamsElementRelativePositionInput is an input type that accepts SyntheticsTestMobileStepParamsElementRelativePositionArgs and SyntheticsTestMobileStepParamsElementRelativePositionOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsElementRelativePositionInput` via:
//
//	SyntheticsTestMobileStepParamsElementRelativePositionArgs{...}
type SyntheticsTestMobileStepParamsElementRelativePositionInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsElementRelativePositionOutput() SyntheticsTestMobileStepParamsElementRelativePositionOutput
	ToSyntheticsTestMobileStepParamsElementRelativePositionOutputWithContext(context.Context) SyntheticsTestMobileStepParamsElementRelativePositionOutput
}

type SyntheticsTestMobileStepParamsElementRelativePositionArgs struct {
	X pulumi.Float64PtrInput `pulumi:"x"`
	Y pulumi.Float64PtrInput `pulumi:"y"`
}

func (SyntheticsTestMobileStepParamsElementRelativePositionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsElementRelativePosition)(nil)).Elem()
}

func (i SyntheticsTestMobileStepParamsElementRelativePositionArgs) ToSyntheticsTestMobileStepParamsElementRelativePositionOutput() SyntheticsTestMobileStepParamsElementRelativePositionOutput {
	return i.ToSyntheticsTestMobileStepParamsElementRelativePositionOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsElementRelativePositionArgs) ToSyntheticsTestMobileStepParamsElementRelativePositionOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementRelativePositionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsElementRelativePositionOutput)
}

func (i SyntheticsTestMobileStepParamsElementRelativePositionArgs) ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutput() SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput {
	return i.ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsElementRelativePositionArgs) ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsElementRelativePositionOutput).ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutputWithContext(ctx)
}

// SyntheticsTestMobileStepParamsElementRelativePositionPtrInput is an input type that accepts SyntheticsTestMobileStepParamsElementRelativePositionArgs, SyntheticsTestMobileStepParamsElementRelativePositionPtr and SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsElementRelativePositionPtrInput` via:
//
//	        SyntheticsTestMobileStepParamsElementRelativePositionArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestMobileStepParamsElementRelativePositionPtrInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutput() SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput
	ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutputWithContext(context.Context) SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput
}

type syntheticsTestMobileStepParamsElementRelativePositionPtrType SyntheticsTestMobileStepParamsElementRelativePositionArgs

func SyntheticsTestMobileStepParamsElementRelativePositionPtr(v *SyntheticsTestMobileStepParamsElementRelativePositionArgs) SyntheticsTestMobileStepParamsElementRelativePositionPtrInput {
	return (*syntheticsTestMobileStepParamsElementRelativePositionPtrType)(v)
}

func (*syntheticsTestMobileStepParamsElementRelativePositionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileStepParamsElementRelativePosition)(nil)).Elem()
}

func (i *syntheticsTestMobileStepParamsElementRelativePositionPtrType) ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutput() SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput {
	return i.ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestMobileStepParamsElementRelativePositionPtrType) ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput)
}

type SyntheticsTestMobileStepParamsElementRelativePositionOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsElementRelativePositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsElementRelativePosition)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsElementRelativePositionOutput) ToSyntheticsTestMobileStepParamsElementRelativePositionOutput() SyntheticsTestMobileStepParamsElementRelativePositionOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementRelativePositionOutput) ToSyntheticsTestMobileStepParamsElementRelativePositionOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementRelativePositionOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementRelativePositionOutput) ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutput() SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput {
	return o.ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestMobileStepParamsElementRelativePositionOutput) ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestMobileStepParamsElementRelativePosition) *SyntheticsTestMobileStepParamsElementRelativePosition {
		return &v
	}).(SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementRelativePositionOutput) X() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElementRelativePosition) *float64 { return v.X }).(pulumi.Float64PtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementRelativePositionOutput) Y() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElementRelativePosition) *float64 { return v.Y }).(pulumi.Float64PtrOutput)
}

type SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileStepParamsElementRelativePosition)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput) ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutput() SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput) ToSyntheticsTestMobileStepParamsElementRelativePositionPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput) Elem() SyntheticsTestMobileStepParamsElementRelativePositionOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElementRelativePosition) SyntheticsTestMobileStepParamsElementRelativePosition {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestMobileStepParamsElementRelativePosition
		return ret
	}).(SyntheticsTestMobileStepParamsElementRelativePositionOutput)
}

func (o SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput) X() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElementRelativePosition) *float64 {
		if v == nil {
			return nil
		}
		return v.X
	}).(pulumi.Float64PtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput) Y() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElementRelativePosition) *float64 {
		if v == nil {
			return nil
		}
		return v.Y
	}).(pulumi.Float64PtrOutput)
}

type SyntheticsTestMobileStepParamsElementUserLocator struct {
	FailTestOnCannotLocate *bool                                                   `pulumi:"failTestOnCannotLocate"`
	Values                 []SyntheticsTestMobileStepParamsElementUserLocatorValue `pulumi:"values"`
}

// SyntheticsTestMobileStepParamsElementUserLocatorInput is an input type that accepts SyntheticsTestMobileStepParamsElementUserLocatorArgs and SyntheticsTestMobileStepParamsElementUserLocatorOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsElementUserLocatorInput` via:
//
//	SyntheticsTestMobileStepParamsElementUserLocatorArgs{...}
type SyntheticsTestMobileStepParamsElementUserLocatorInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsElementUserLocatorOutput() SyntheticsTestMobileStepParamsElementUserLocatorOutput
	ToSyntheticsTestMobileStepParamsElementUserLocatorOutputWithContext(context.Context) SyntheticsTestMobileStepParamsElementUserLocatorOutput
}

type SyntheticsTestMobileStepParamsElementUserLocatorArgs struct {
	FailTestOnCannotLocate pulumi.BoolPtrInput                                             `pulumi:"failTestOnCannotLocate"`
	Values                 SyntheticsTestMobileStepParamsElementUserLocatorValueArrayInput `pulumi:"values"`
}

func (SyntheticsTestMobileStepParamsElementUserLocatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsElementUserLocator)(nil)).Elem()
}

func (i SyntheticsTestMobileStepParamsElementUserLocatorArgs) ToSyntheticsTestMobileStepParamsElementUserLocatorOutput() SyntheticsTestMobileStepParamsElementUserLocatorOutput {
	return i.ToSyntheticsTestMobileStepParamsElementUserLocatorOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsElementUserLocatorArgs) ToSyntheticsTestMobileStepParamsElementUserLocatorOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementUserLocatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsElementUserLocatorOutput)
}

func (i SyntheticsTestMobileStepParamsElementUserLocatorArgs) ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutput() SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput {
	return i.ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsElementUserLocatorArgs) ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsElementUserLocatorOutput).ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutputWithContext(ctx)
}

// SyntheticsTestMobileStepParamsElementUserLocatorPtrInput is an input type that accepts SyntheticsTestMobileStepParamsElementUserLocatorArgs, SyntheticsTestMobileStepParamsElementUserLocatorPtr and SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsElementUserLocatorPtrInput` via:
//
//	        SyntheticsTestMobileStepParamsElementUserLocatorArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestMobileStepParamsElementUserLocatorPtrInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutput() SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput
	ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutputWithContext(context.Context) SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput
}

type syntheticsTestMobileStepParamsElementUserLocatorPtrType SyntheticsTestMobileStepParamsElementUserLocatorArgs

func SyntheticsTestMobileStepParamsElementUserLocatorPtr(v *SyntheticsTestMobileStepParamsElementUserLocatorArgs) SyntheticsTestMobileStepParamsElementUserLocatorPtrInput {
	return (*syntheticsTestMobileStepParamsElementUserLocatorPtrType)(v)
}

func (*syntheticsTestMobileStepParamsElementUserLocatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileStepParamsElementUserLocator)(nil)).Elem()
}

func (i *syntheticsTestMobileStepParamsElementUserLocatorPtrType) ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutput() SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput {
	return i.ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestMobileStepParamsElementUserLocatorPtrType) ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput)
}

type SyntheticsTestMobileStepParamsElementUserLocatorOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsElementUserLocatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsElementUserLocator)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorOutput) ToSyntheticsTestMobileStepParamsElementUserLocatorOutput() SyntheticsTestMobileStepParamsElementUserLocatorOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorOutput) ToSyntheticsTestMobileStepParamsElementUserLocatorOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementUserLocatorOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorOutput) ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutput() SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput {
	return o.ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorOutput) ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestMobileStepParamsElementUserLocator) *SyntheticsTestMobileStepParamsElementUserLocator {
		return &v
	}).(SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorOutput) FailTestOnCannotLocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElementUserLocator) *bool { return v.FailTestOnCannotLocate }).(pulumi.BoolPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorOutput) Values() SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElementUserLocator) []SyntheticsTestMobileStepParamsElementUserLocatorValue {
		return v.Values
	}).(SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput)
}

type SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileStepParamsElementUserLocator)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput) ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutput() SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput) ToSyntheticsTestMobileStepParamsElementUserLocatorPtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput) Elem() SyntheticsTestMobileStepParamsElementUserLocatorOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElementUserLocator) SyntheticsTestMobileStepParamsElementUserLocator {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestMobileStepParamsElementUserLocator
		return ret
	}).(SyntheticsTestMobileStepParamsElementUserLocatorOutput)
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput) FailTestOnCannotLocate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElementUserLocator) *bool {
		if v == nil {
			return nil
		}
		return v.FailTestOnCannotLocate
	}).(pulumi.BoolPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput) Values() SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsElementUserLocator) []SyntheticsTestMobileStepParamsElementUserLocatorValue {
		if v == nil {
			return nil
		}
		return v.Values
	}).(SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput)
}

type SyntheticsTestMobileStepParamsElementUserLocatorValue struct {
	// Valid values are `accessibility-id`, `id`, `ios-predicate-string`, `ios-class-chain`, `xpath`.
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// SyntheticsTestMobileStepParamsElementUserLocatorValueInput is an input type that accepts SyntheticsTestMobileStepParamsElementUserLocatorValueArgs and SyntheticsTestMobileStepParamsElementUserLocatorValueOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsElementUserLocatorValueInput` via:
//
//	SyntheticsTestMobileStepParamsElementUserLocatorValueArgs{...}
type SyntheticsTestMobileStepParamsElementUserLocatorValueInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsElementUserLocatorValueOutput() SyntheticsTestMobileStepParamsElementUserLocatorValueOutput
	ToSyntheticsTestMobileStepParamsElementUserLocatorValueOutputWithContext(context.Context) SyntheticsTestMobileStepParamsElementUserLocatorValueOutput
}

type SyntheticsTestMobileStepParamsElementUserLocatorValueArgs struct {
	// Valid values are `accessibility-id`, `id`, `ios-predicate-string`, `ios-class-chain`, `xpath`.
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SyntheticsTestMobileStepParamsElementUserLocatorValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (i SyntheticsTestMobileStepParamsElementUserLocatorValueArgs) ToSyntheticsTestMobileStepParamsElementUserLocatorValueOutput() SyntheticsTestMobileStepParamsElementUserLocatorValueOutput {
	return i.ToSyntheticsTestMobileStepParamsElementUserLocatorValueOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsElementUserLocatorValueArgs) ToSyntheticsTestMobileStepParamsElementUserLocatorValueOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementUserLocatorValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsElementUserLocatorValueOutput)
}

// SyntheticsTestMobileStepParamsElementUserLocatorValueArrayInput is an input type that accepts SyntheticsTestMobileStepParamsElementUserLocatorValueArray and SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsElementUserLocatorValueArrayInput` via:
//
//	SyntheticsTestMobileStepParamsElementUserLocatorValueArray{ SyntheticsTestMobileStepParamsElementUserLocatorValueArgs{...} }
type SyntheticsTestMobileStepParamsElementUserLocatorValueArrayInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput() SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput
	ToSyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutputWithContext(context.Context) SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput
}

type SyntheticsTestMobileStepParamsElementUserLocatorValueArray []SyntheticsTestMobileStepParamsElementUserLocatorValueInput

func (SyntheticsTestMobileStepParamsElementUserLocatorValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestMobileStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (i SyntheticsTestMobileStepParamsElementUserLocatorValueArray) ToSyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput() SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput {
	return i.ToSyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsElementUserLocatorValueArray) ToSyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput)
}

type SyntheticsTestMobileStepParamsElementUserLocatorValueOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsElementUserLocatorValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorValueOutput) ToSyntheticsTestMobileStepParamsElementUserLocatorValueOutput() SyntheticsTestMobileStepParamsElementUserLocatorValueOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorValueOutput) ToSyntheticsTestMobileStepParamsElementUserLocatorValueOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementUserLocatorValueOutput {
	return o
}

// Valid values are `accessibility-id`, `id`, `ios-predicate-string`, `ios-class-chain`, `xpath`.
func (o SyntheticsTestMobileStepParamsElementUserLocatorValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElementUserLocatorValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsElementUserLocatorValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestMobileStepParamsElementUserLocatorValue)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput) ToSyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput() SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput) ToSyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput) Index(i pulumi.IntInput) SyntheticsTestMobileStepParamsElementUserLocatorValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestMobileStepParamsElementUserLocatorValue {
		return vs[0].([]SyntheticsTestMobileStepParamsElementUserLocatorValue)[vs[1].(int)]
	}).(SyntheticsTestMobileStepParamsElementUserLocatorValueOutput)
}

type SyntheticsTestMobileStepParamsPosition struct {
	X *float64 `pulumi:"x"`
	Y *float64 `pulumi:"y"`
}

// SyntheticsTestMobileStepParamsPositionInput is an input type that accepts SyntheticsTestMobileStepParamsPositionArgs and SyntheticsTestMobileStepParamsPositionOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsPositionInput` via:
//
//	SyntheticsTestMobileStepParamsPositionArgs{...}
type SyntheticsTestMobileStepParamsPositionInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsPositionOutput() SyntheticsTestMobileStepParamsPositionOutput
	ToSyntheticsTestMobileStepParamsPositionOutputWithContext(context.Context) SyntheticsTestMobileStepParamsPositionOutput
}

type SyntheticsTestMobileStepParamsPositionArgs struct {
	X pulumi.Float64PtrInput `pulumi:"x"`
	Y pulumi.Float64PtrInput `pulumi:"y"`
}

func (SyntheticsTestMobileStepParamsPositionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsPosition)(nil)).Elem()
}

func (i SyntheticsTestMobileStepParamsPositionArgs) ToSyntheticsTestMobileStepParamsPositionOutput() SyntheticsTestMobileStepParamsPositionOutput {
	return i.ToSyntheticsTestMobileStepParamsPositionOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsPositionArgs) ToSyntheticsTestMobileStepParamsPositionOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsPositionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsPositionOutput)
}

// SyntheticsTestMobileStepParamsPositionArrayInput is an input type that accepts SyntheticsTestMobileStepParamsPositionArray and SyntheticsTestMobileStepParamsPositionArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsPositionArrayInput` via:
//
//	SyntheticsTestMobileStepParamsPositionArray{ SyntheticsTestMobileStepParamsPositionArgs{...} }
type SyntheticsTestMobileStepParamsPositionArrayInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsPositionArrayOutput() SyntheticsTestMobileStepParamsPositionArrayOutput
	ToSyntheticsTestMobileStepParamsPositionArrayOutputWithContext(context.Context) SyntheticsTestMobileStepParamsPositionArrayOutput
}

type SyntheticsTestMobileStepParamsPositionArray []SyntheticsTestMobileStepParamsPositionInput

func (SyntheticsTestMobileStepParamsPositionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestMobileStepParamsPosition)(nil)).Elem()
}

func (i SyntheticsTestMobileStepParamsPositionArray) ToSyntheticsTestMobileStepParamsPositionArrayOutput() SyntheticsTestMobileStepParamsPositionArrayOutput {
	return i.ToSyntheticsTestMobileStepParamsPositionArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsPositionArray) ToSyntheticsTestMobileStepParamsPositionArrayOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsPositionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsPositionArrayOutput)
}

type SyntheticsTestMobileStepParamsPositionOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsPosition)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsPositionOutput) ToSyntheticsTestMobileStepParamsPositionOutput() SyntheticsTestMobileStepParamsPositionOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsPositionOutput) ToSyntheticsTestMobileStepParamsPositionOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsPositionOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsPositionOutput) X() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsPosition) *float64 { return v.X }).(pulumi.Float64PtrOutput)
}

func (o SyntheticsTestMobileStepParamsPositionOutput) Y() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsPosition) *float64 { return v.Y }).(pulumi.Float64PtrOutput)
}

type SyntheticsTestMobileStepParamsPositionArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsPositionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestMobileStepParamsPosition)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsPositionArrayOutput) ToSyntheticsTestMobileStepParamsPositionArrayOutput() SyntheticsTestMobileStepParamsPositionArrayOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsPositionArrayOutput) ToSyntheticsTestMobileStepParamsPositionArrayOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsPositionArrayOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsPositionArrayOutput) Index(i pulumi.IntInput) SyntheticsTestMobileStepParamsPositionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestMobileStepParamsPosition {
		return vs[0].([]SyntheticsTestMobileStepParamsPosition)[vs[1].(int)]
	}).(SyntheticsTestMobileStepParamsPositionOutput)
}

type SyntheticsTestMobileStepParamsVariable struct {
	// Example of the extracted variable. Defaults to `""`.
	Example *string `pulumi:"example"`
	// Name of the extracted variable.
	Name string `pulumi:"name"`
}

// SyntheticsTestMobileStepParamsVariableInput is an input type that accepts SyntheticsTestMobileStepParamsVariableArgs and SyntheticsTestMobileStepParamsVariableOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsVariableInput` via:
//
//	SyntheticsTestMobileStepParamsVariableArgs{...}
type SyntheticsTestMobileStepParamsVariableInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsVariableOutput() SyntheticsTestMobileStepParamsVariableOutput
	ToSyntheticsTestMobileStepParamsVariableOutputWithContext(context.Context) SyntheticsTestMobileStepParamsVariableOutput
}

type SyntheticsTestMobileStepParamsVariableArgs struct {
	// Example of the extracted variable. Defaults to `""`.
	Example pulumi.StringPtrInput `pulumi:"example"`
	// Name of the extracted variable.
	Name pulumi.StringInput `pulumi:"name"`
}

func (SyntheticsTestMobileStepParamsVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsVariable)(nil)).Elem()
}

func (i SyntheticsTestMobileStepParamsVariableArgs) ToSyntheticsTestMobileStepParamsVariableOutput() SyntheticsTestMobileStepParamsVariableOutput {
	return i.ToSyntheticsTestMobileStepParamsVariableOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsVariableArgs) ToSyntheticsTestMobileStepParamsVariableOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsVariableOutput)
}

func (i SyntheticsTestMobileStepParamsVariableArgs) ToSyntheticsTestMobileStepParamsVariablePtrOutput() SyntheticsTestMobileStepParamsVariablePtrOutput {
	return i.ToSyntheticsTestMobileStepParamsVariablePtrOutputWithContext(context.Background())
}

func (i SyntheticsTestMobileStepParamsVariableArgs) ToSyntheticsTestMobileStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsVariablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsVariableOutput).ToSyntheticsTestMobileStepParamsVariablePtrOutputWithContext(ctx)
}

// SyntheticsTestMobileStepParamsVariablePtrInput is an input type that accepts SyntheticsTestMobileStepParamsVariableArgs, SyntheticsTestMobileStepParamsVariablePtr and SyntheticsTestMobileStepParamsVariablePtrOutput values.
// You can construct a concrete instance of `SyntheticsTestMobileStepParamsVariablePtrInput` via:
//
//	        SyntheticsTestMobileStepParamsVariableArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestMobileStepParamsVariablePtrInput interface {
	pulumi.Input

	ToSyntheticsTestMobileStepParamsVariablePtrOutput() SyntheticsTestMobileStepParamsVariablePtrOutput
	ToSyntheticsTestMobileStepParamsVariablePtrOutputWithContext(context.Context) SyntheticsTestMobileStepParamsVariablePtrOutput
}

type syntheticsTestMobileStepParamsVariablePtrType SyntheticsTestMobileStepParamsVariableArgs

func SyntheticsTestMobileStepParamsVariablePtr(v *SyntheticsTestMobileStepParamsVariableArgs) SyntheticsTestMobileStepParamsVariablePtrInput {
	return (*syntheticsTestMobileStepParamsVariablePtrType)(v)
}

func (*syntheticsTestMobileStepParamsVariablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileStepParamsVariable)(nil)).Elem()
}

func (i *syntheticsTestMobileStepParamsVariablePtrType) ToSyntheticsTestMobileStepParamsVariablePtrOutput() SyntheticsTestMobileStepParamsVariablePtrOutput {
	return i.ToSyntheticsTestMobileStepParamsVariablePtrOutputWithContext(context.Background())
}

func (i *syntheticsTestMobileStepParamsVariablePtrType) ToSyntheticsTestMobileStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsVariablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestMobileStepParamsVariablePtrOutput)
}

type SyntheticsTestMobileStepParamsVariableOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestMobileStepParamsVariable)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsVariableOutput) ToSyntheticsTestMobileStepParamsVariableOutput() SyntheticsTestMobileStepParamsVariableOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsVariableOutput) ToSyntheticsTestMobileStepParamsVariableOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsVariableOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsVariableOutput) ToSyntheticsTestMobileStepParamsVariablePtrOutput() SyntheticsTestMobileStepParamsVariablePtrOutput {
	return o.ToSyntheticsTestMobileStepParamsVariablePtrOutputWithContext(context.Background())
}

func (o SyntheticsTestMobileStepParamsVariableOutput) ToSyntheticsTestMobileStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsVariablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestMobileStepParamsVariable) *SyntheticsTestMobileStepParamsVariable {
		return &v
	}).(SyntheticsTestMobileStepParamsVariablePtrOutput)
}

// Example of the extracted variable. Defaults to `""`.
func (o SyntheticsTestMobileStepParamsVariableOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsVariable) *string { return v.Example }).(pulumi.StringPtrOutput)
}

// Name of the extracted variable.
func (o SyntheticsTestMobileStepParamsVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestMobileStepParamsVariable) string { return v.Name }).(pulumi.StringOutput)
}

type SyntheticsTestMobileStepParamsVariablePtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestMobileStepParamsVariablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestMobileStepParamsVariable)(nil)).Elem()
}

func (o SyntheticsTestMobileStepParamsVariablePtrOutput) ToSyntheticsTestMobileStepParamsVariablePtrOutput() SyntheticsTestMobileStepParamsVariablePtrOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsVariablePtrOutput) ToSyntheticsTestMobileStepParamsVariablePtrOutputWithContext(ctx context.Context) SyntheticsTestMobileStepParamsVariablePtrOutput {
	return o
}

func (o SyntheticsTestMobileStepParamsVariablePtrOutput) Elem() SyntheticsTestMobileStepParamsVariableOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsVariable) SyntheticsTestMobileStepParamsVariable {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestMobileStepParamsVariable
		return ret
	}).(SyntheticsTestMobileStepParamsVariableOutput)
}

// Example of the extracted variable. Defaults to `""`.
func (o SyntheticsTestMobileStepParamsVariablePtrOutput) Example() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsVariable) *string {
		if v == nil {
			return nil
		}
		return v.Example
	}).(pulumi.StringPtrOutput)
}

// Name of the extracted variable.
func (o SyntheticsTestMobileStepParamsVariablePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestMobileStepParamsVariable) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestOptionsList struct {
	// For SSL test, whether or not the test should allow self signed certificates.
	AcceptSelfSigned *bool `pulumi:"acceptSelfSigned"`
	// Allows loading insecure content for a request in an API test or in a multistep API test step.
	AllowInsecure *bool `pulumi:"allowInsecure"`
	// For SSL test, whether or not the test should fail on revoked certificate in stapled OCSP.
	CheckCertificateRevocation *bool `pulumi:"checkCertificateRevocation"`
	// CI/CD options for a Synthetic test.
	Ci *SyntheticsTestOptionsListCi `pulumi:"ci"`
	// Disable Cross-Origin Resource Sharing for browser tests.
	DisableCors *bool `pulumi:"disableCors"`
	// Disable Content Security Policy for browser tests.
	DisableCsp *bool `pulumi:"disableCsp"`
	// Determines whether or not the API HTTP test should follow redirects.
	FollowRedirects *bool `pulumi:"followRedirects"`
	// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
	HttpVersion *string `pulumi:"httpVersion"`
	// Ignore server certificate error for browser tests.
	IgnoreServerCertificateError *bool `pulumi:"ignoreServerCertificateError"`
	// Timeout before declaring the initial step as failed (in seconds) for browser tests.
	InitialNavigationTimeout *int `pulumi:"initialNavigationTimeout"`
	// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
	MinFailureDuration *int `pulumi:"minFailureDuration"`
	// Minimum number of locations in failure required to trigger an alert. Defaults to `1`.
	MinLocationFailed *int `pulumi:"minLocationFailed"`
	// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
	MonitorName     *string                                  `pulumi:"monitorName"`
	MonitorOptions  *SyntheticsTestOptionsListMonitorOptions `pulumi:"monitorOptions"`
	MonitorPriority *int                                     `pulumi:"monitorPriority"`
	// Prevents saving screenshots of the steps.
	NoScreenshot *bool `pulumi:"noScreenshot"`
	// A list of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	//
	// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	RestrictedRoles []string                        `pulumi:"restrictedRoles"`
	Retry           *SyntheticsTestOptionsListRetry `pulumi:"retry"`
	// The RUM data collection settings for the Synthetic browser test.
	RumSettings *SyntheticsTestOptionsListRumSettings `pulumi:"rumSettings"`
	// Object containing timeframes and timezone used for advanced scheduling.
	Scheduling *SyntheticsTestOptionsListScheduling `pulumi:"scheduling"`
	// How often the test should run (in seconds).
	TickEvery int `pulumi:"tickEvery"`
}

// SyntheticsTestOptionsListInput is an input type that accepts SyntheticsTestOptionsListArgs and SyntheticsTestOptionsListOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListInput` via:
//
//	SyntheticsTestOptionsListArgs{...}
type SyntheticsTestOptionsListInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListOutput() SyntheticsTestOptionsListOutput
	ToSyntheticsTestOptionsListOutputWithContext(context.Context) SyntheticsTestOptionsListOutput
}

type SyntheticsTestOptionsListArgs struct {
	// For SSL test, whether or not the test should allow self signed certificates.
	AcceptSelfSigned pulumi.BoolPtrInput `pulumi:"acceptSelfSigned"`
	// Allows loading insecure content for a request in an API test or in a multistep API test step.
	AllowInsecure pulumi.BoolPtrInput `pulumi:"allowInsecure"`
	// For SSL test, whether or not the test should fail on revoked certificate in stapled OCSP.
	CheckCertificateRevocation pulumi.BoolPtrInput `pulumi:"checkCertificateRevocation"`
	// CI/CD options for a Synthetic test.
	Ci SyntheticsTestOptionsListCiPtrInput `pulumi:"ci"`
	// Disable Cross-Origin Resource Sharing for browser tests.
	DisableCors pulumi.BoolPtrInput `pulumi:"disableCors"`
	// Disable Content Security Policy for browser tests.
	DisableCsp pulumi.BoolPtrInput `pulumi:"disableCsp"`
	// Determines whether or not the API HTTP test should follow redirects.
	FollowRedirects pulumi.BoolPtrInput `pulumi:"followRedirects"`
	// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
	HttpVersion pulumi.StringPtrInput `pulumi:"httpVersion"`
	// Ignore server certificate error for browser tests.
	IgnoreServerCertificateError pulumi.BoolPtrInput `pulumi:"ignoreServerCertificateError"`
	// Timeout before declaring the initial step as failed (in seconds) for browser tests.
	InitialNavigationTimeout pulumi.IntPtrInput `pulumi:"initialNavigationTimeout"`
	// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
	MinFailureDuration pulumi.IntPtrInput `pulumi:"minFailureDuration"`
	// Minimum number of locations in failure required to trigger an alert. Defaults to `1`.
	MinLocationFailed pulumi.IntPtrInput `pulumi:"minLocationFailed"`
	// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
	MonitorName     pulumi.StringPtrInput                           `pulumi:"monitorName"`
	MonitorOptions  SyntheticsTestOptionsListMonitorOptionsPtrInput `pulumi:"monitorOptions"`
	MonitorPriority pulumi.IntPtrInput                              `pulumi:"monitorPriority"`
	// Prevents saving screenshots of the steps.
	NoScreenshot pulumi.BoolPtrInput `pulumi:"noScreenshot"`
	// A list of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	//
	// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
	RestrictedRoles pulumi.StringArrayInput                `pulumi:"restrictedRoles"`
	Retry           SyntheticsTestOptionsListRetryPtrInput `pulumi:"retry"`
	// The RUM data collection settings for the Synthetic browser test.
	RumSettings SyntheticsTestOptionsListRumSettingsPtrInput `pulumi:"rumSettings"`
	// Object containing timeframes and timezone used for advanced scheduling.
	Scheduling SyntheticsTestOptionsListSchedulingPtrInput `pulumi:"scheduling"`
	// How often the test should run (in seconds).
	TickEvery pulumi.IntInput `pulumi:"tickEvery"`
}

func (SyntheticsTestOptionsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsList)(nil)).Elem()
}

func (i SyntheticsTestOptionsListArgs) ToSyntheticsTestOptionsListOutput() SyntheticsTestOptionsListOutput {
	return i.ToSyntheticsTestOptionsListOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListArgs) ToSyntheticsTestOptionsListOutputWithContext(ctx context.Context) SyntheticsTestOptionsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListOutput)
}

func (i SyntheticsTestOptionsListArgs) ToSyntheticsTestOptionsListPtrOutput() SyntheticsTestOptionsListPtrOutput {
	return i.ToSyntheticsTestOptionsListPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListArgs) ToSyntheticsTestOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListOutput).ToSyntheticsTestOptionsListPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListPtrInput is an input type that accepts SyntheticsTestOptionsListArgs, SyntheticsTestOptionsListPtr and SyntheticsTestOptionsListPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListPtrInput` via:
//
//	        SyntheticsTestOptionsListArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListPtrOutput() SyntheticsTestOptionsListPtrOutput
	ToSyntheticsTestOptionsListPtrOutputWithContext(context.Context) SyntheticsTestOptionsListPtrOutput
}

type syntheticsTestOptionsListPtrType SyntheticsTestOptionsListArgs

func SyntheticsTestOptionsListPtr(v *SyntheticsTestOptionsListArgs) SyntheticsTestOptionsListPtrInput {
	return (*syntheticsTestOptionsListPtrType)(v)
}

func (*syntheticsTestOptionsListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsList)(nil)).Elem()
}

func (i *syntheticsTestOptionsListPtrType) ToSyntheticsTestOptionsListPtrOutput() SyntheticsTestOptionsListPtrOutput {
	return i.ToSyntheticsTestOptionsListPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListPtrType) ToSyntheticsTestOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListPtrOutput)
}

type SyntheticsTestOptionsListOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsList)(nil)).Elem()
}

func (o SyntheticsTestOptionsListOutput) ToSyntheticsTestOptionsListOutput() SyntheticsTestOptionsListOutput {
	return o
}

func (o SyntheticsTestOptionsListOutput) ToSyntheticsTestOptionsListOutputWithContext(ctx context.Context) SyntheticsTestOptionsListOutput {
	return o
}

func (o SyntheticsTestOptionsListOutput) ToSyntheticsTestOptionsListPtrOutput() SyntheticsTestOptionsListPtrOutput {
	return o.ToSyntheticsTestOptionsListPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListOutput) ToSyntheticsTestOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsList) *SyntheticsTestOptionsList {
		return &v
	}).(SyntheticsTestOptionsListPtrOutput)
}

// For SSL test, whether or not the test should allow self signed certificates.
func (o SyntheticsTestOptionsListOutput) AcceptSelfSigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.AcceptSelfSigned }).(pulumi.BoolPtrOutput)
}

// Allows loading insecure content for a request in an API test or in a multistep API test step.
func (o SyntheticsTestOptionsListOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.AllowInsecure }).(pulumi.BoolPtrOutput)
}

// For SSL test, whether or not the test should fail on revoked certificate in stapled OCSP.
func (o SyntheticsTestOptionsListOutput) CheckCertificateRevocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.CheckCertificateRevocation }).(pulumi.BoolPtrOutput)
}

// CI/CD options for a Synthetic test.
func (o SyntheticsTestOptionsListOutput) Ci() SyntheticsTestOptionsListCiPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *SyntheticsTestOptionsListCi { return v.Ci }).(SyntheticsTestOptionsListCiPtrOutput)
}

// Disable Cross-Origin Resource Sharing for browser tests.
func (o SyntheticsTestOptionsListOutput) DisableCors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.DisableCors }).(pulumi.BoolPtrOutput)
}

// Disable Content Security Policy for browser tests.
func (o SyntheticsTestOptionsListOutput) DisableCsp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.DisableCsp }).(pulumi.BoolPtrOutput)
}

// Determines whether or not the API HTTP test should follow redirects.
func (o SyntheticsTestOptionsListOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.FollowRedirects }).(pulumi.BoolPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
func (o SyntheticsTestOptionsListOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *string { return v.HttpVersion }).(pulumi.StringPtrOutput)
}

// Ignore server certificate error for browser tests.
func (o SyntheticsTestOptionsListOutput) IgnoreServerCertificateError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.IgnoreServerCertificateError }).(pulumi.BoolPtrOutput)
}

// Timeout before declaring the initial step as failed (in seconds) for browser tests.
func (o SyntheticsTestOptionsListOutput) InitialNavigationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *int { return v.InitialNavigationTimeout }).(pulumi.IntPtrOutput)
}

// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
func (o SyntheticsTestOptionsListOutput) MinFailureDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *int { return v.MinFailureDuration }).(pulumi.IntPtrOutput)
}

// Minimum number of locations in failure required to trigger an alert. Defaults to `1`.
func (o SyntheticsTestOptionsListOutput) MinLocationFailed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *int { return v.MinLocationFailed }).(pulumi.IntPtrOutput)
}

// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
func (o SyntheticsTestOptionsListOutput) MonitorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *string { return v.MonitorName }).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestOptionsListOutput) MonitorOptions() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *SyntheticsTestOptionsListMonitorOptions { return v.MonitorOptions }).(SyntheticsTestOptionsListMonitorOptionsPtrOutput)
}

func (o SyntheticsTestOptionsListOutput) MonitorPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *int { return v.MonitorPriority }).(pulumi.IntPtrOutput)
}

// Prevents saving screenshots of the steps.
func (o SyntheticsTestOptionsListOutput) NoScreenshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *bool { return v.NoScreenshot }).(pulumi.BoolPtrOutput)
}

// A list of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
//
// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
func (o SyntheticsTestOptionsListOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) []string { return v.RestrictedRoles }).(pulumi.StringArrayOutput)
}

func (o SyntheticsTestOptionsListOutput) Retry() SyntheticsTestOptionsListRetryPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *SyntheticsTestOptionsListRetry { return v.Retry }).(SyntheticsTestOptionsListRetryPtrOutput)
}

// The RUM data collection settings for the Synthetic browser test.
func (o SyntheticsTestOptionsListOutput) RumSettings() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *SyntheticsTestOptionsListRumSettings { return v.RumSettings }).(SyntheticsTestOptionsListRumSettingsPtrOutput)
}

// Object containing timeframes and timezone used for advanced scheduling.
func (o SyntheticsTestOptionsListOutput) Scheduling() SyntheticsTestOptionsListSchedulingPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) *SyntheticsTestOptionsListScheduling { return v.Scheduling }).(SyntheticsTestOptionsListSchedulingPtrOutput)
}

// How often the test should run (in seconds).
func (o SyntheticsTestOptionsListOutput) TickEvery() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsList) int { return v.TickEvery }).(pulumi.IntOutput)
}

type SyntheticsTestOptionsListPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsList)(nil)).Elem()
}

func (o SyntheticsTestOptionsListPtrOutput) ToSyntheticsTestOptionsListPtrOutput() SyntheticsTestOptionsListPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListPtrOutput) ToSyntheticsTestOptionsListPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListPtrOutput) Elem() SyntheticsTestOptionsListOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) SyntheticsTestOptionsList {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsList
		return ret
	}).(SyntheticsTestOptionsListOutput)
}

// For SSL test, whether or not the test should allow self signed certificates.
func (o SyntheticsTestOptionsListPtrOutput) AcceptSelfSigned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.AcceptSelfSigned
	}).(pulumi.BoolPtrOutput)
}

// Allows loading insecure content for a request in an API test or in a multistep API test step.
func (o SyntheticsTestOptionsListPtrOutput) AllowInsecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.AllowInsecure
	}).(pulumi.BoolPtrOutput)
}

// For SSL test, whether or not the test should fail on revoked certificate in stapled OCSP.
func (o SyntheticsTestOptionsListPtrOutput) CheckCertificateRevocation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.CheckCertificateRevocation
	}).(pulumi.BoolPtrOutput)
}

// CI/CD options for a Synthetic test.
func (o SyntheticsTestOptionsListPtrOutput) Ci() SyntheticsTestOptionsListCiPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *SyntheticsTestOptionsListCi {
		if v == nil {
			return nil
		}
		return v.Ci
	}).(SyntheticsTestOptionsListCiPtrOutput)
}

// Disable Cross-Origin Resource Sharing for browser tests.
func (o SyntheticsTestOptionsListPtrOutput) DisableCors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.DisableCors
	}).(pulumi.BoolPtrOutput)
}

// Disable Content Security Policy for browser tests.
func (o SyntheticsTestOptionsListPtrOutput) DisableCsp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.DisableCsp
	}).(pulumi.BoolPtrOutput)
}

// Determines whether or not the API HTTP test should follow redirects.
func (o SyntheticsTestOptionsListPtrOutput) FollowRedirects() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.FollowRedirects
	}).(pulumi.BoolPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. Valid values are `http1`, `http2`, `any`. Defaults to `"any"`.
func (o SyntheticsTestOptionsListPtrOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *string {
		if v == nil {
			return nil
		}
		return v.HttpVersion
	}).(pulumi.StringPtrOutput)
}

// Ignore server certificate error for browser tests.
func (o SyntheticsTestOptionsListPtrOutput) IgnoreServerCertificateError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreServerCertificateError
	}).(pulumi.BoolPtrOutput)
}

// Timeout before declaring the initial step as failed (in seconds) for browser tests.
func (o SyntheticsTestOptionsListPtrOutput) InitialNavigationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.InitialNavigationTimeout
	}).(pulumi.IntPtrOutput)
}

// Minimum amount of time in failure required to trigger an alert (in seconds). Default is `0`.
func (o SyntheticsTestOptionsListPtrOutput) MinFailureDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.MinFailureDuration
	}).(pulumi.IntPtrOutput)
}

// Minimum number of locations in failure required to trigger an alert. Defaults to `1`.
func (o SyntheticsTestOptionsListPtrOutput) MinLocationFailed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.MinLocationFailed
	}).(pulumi.IntPtrOutput)
}

// The monitor name is used for the alert title as well as for all monitor dashboard widgets and SLOs.
func (o SyntheticsTestOptionsListPtrOutput) MonitorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *string {
		if v == nil {
			return nil
		}
		return v.MonitorName
	}).(pulumi.StringPtrOutput)
}

func (o SyntheticsTestOptionsListPtrOutput) MonitorOptions() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *SyntheticsTestOptionsListMonitorOptions {
		if v == nil {
			return nil
		}
		return v.MonitorOptions
	}).(SyntheticsTestOptionsListMonitorOptionsPtrOutput)
}

func (o SyntheticsTestOptionsListPtrOutput) MonitorPriority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *int {
		if v == nil {
			return nil
		}
		return v.MonitorPriority
	}).(pulumi.IntPtrOutput)
}

// Prevents saving screenshots of the steps.
func (o SyntheticsTestOptionsListPtrOutput) NoScreenshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *bool {
		if v == nil {
			return nil
		}
		return v.NoScreenshot
	}).(pulumi.BoolPtrOutput)
}

// A list of role identifiers pulled from the Roles API to restrict read and write access. **Deprecated.** This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
//
// Deprecated: This field is no longer supported by the Datadog API. Please use `RestrictionPolicy` instead.
func (o SyntheticsTestOptionsListPtrOutput) RestrictedRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) []string {
		if v == nil {
			return nil
		}
		return v.RestrictedRoles
	}).(pulumi.StringArrayOutput)
}

func (o SyntheticsTestOptionsListPtrOutput) Retry() SyntheticsTestOptionsListRetryPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *SyntheticsTestOptionsListRetry {
		if v == nil {
			return nil
		}
		return v.Retry
	}).(SyntheticsTestOptionsListRetryPtrOutput)
}

// The RUM data collection settings for the Synthetic browser test.
func (o SyntheticsTestOptionsListPtrOutput) RumSettings() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *SyntheticsTestOptionsListRumSettings {
		if v == nil {
			return nil
		}
		return v.RumSettings
	}).(SyntheticsTestOptionsListRumSettingsPtrOutput)
}

// Object containing timeframes and timezone used for advanced scheduling.
func (o SyntheticsTestOptionsListPtrOutput) Scheduling() SyntheticsTestOptionsListSchedulingPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *SyntheticsTestOptionsListScheduling {
		if v == nil {
			return nil
		}
		return v.Scheduling
	}).(SyntheticsTestOptionsListSchedulingPtrOutput)
}

// How often the test should run (in seconds).
func (o SyntheticsTestOptionsListPtrOutput) TickEvery() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsList) *int {
		if v == nil {
			return nil
		}
		return &v.TickEvery
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListCi struct {
	// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
	ExecutionRule *string `pulumi:"executionRule"`
}

// SyntheticsTestOptionsListCiInput is an input type that accepts SyntheticsTestOptionsListCiArgs and SyntheticsTestOptionsListCiOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListCiInput` via:
//
//	SyntheticsTestOptionsListCiArgs{...}
type SyntheticsTestOptionsListCiInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListCiOutput() SyntheticsTestOptionsListCiOutput
	ToSyntheticsTestOptionsListCiOutputWithContext(context.Context) SyntheticsTestOptionsListCiOutput
}

type SyntheticsTestOptionsListCiArgs struct {
	// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
	ExecutionRule pulumi.StringPtrInput `pulumi:"executionRule"`
}

func (SyntheticsTestOptionsListCiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListCi)(nil)).Elem()
}

func (i SyntheticsTestOptionsListCiArgs) ToSyntheticsTestOptionsListCiOutput() SyntheticsTestOptionsListCiOutput {
	return i.ToSyntheticsTestOptionsListCiOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListCiArgs) ToSyntheticsTestOptionsListCiOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListCiOutput)
}

func (i SyntheticsTestOptionsListCiArgs) ToSyntheticsTestOptionsListCiPtrOutput() SyntheticsTestOptionsListCiPtrOutput {
	return i.ToSyntheticsTestOptionsListCiPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListCiArgs) ToSyntheticsTestOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListCiOutput).ToSyntheticsTestOptionsListCiPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListCiPtrInput is an input type that accepts SyntheticsTestOptionsListCiArgs, SyntheticsTestOptionsListCiPtr and SyntheticsTestOptionsListCiPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListCiPtrInput` via:
//
//	        SyntheticsTestOptionsListCiArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListCiPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListCiPtrOutput() SyntheticsTestOptionsListCiPtrOutput
	ToSyntheticsTestOptionsListCiPtrOutputWithContext(context.Context) SyntheticsTestOptionsListCiPtrOutput
}

type syntheticsTestOptionsListCiPtrType SyntheticsTestOptionsListCiArgs

func SyntheticsTestOptionsListCiPtr(v *SyntheticsTestOptionsListCiArgs) SyntheticsTestOptionsListCiPtrInput {
	return (*syntheticsTestOptionsListCiPtrType)(v)
}

func (*syntheticsTestOptionsListCiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListCi)(nil)).Elem()
}

func (i *syntheticsTestOptionsListCiPtrType) ToSyntheticsTestOptionsListCiPtrOutput() SyntheticsTestOptionsListCiPtrOutput {
	return i.ToSyntheticsTestOptionsListCiPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListCiPtrType) ToSyntheticsTestOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListCiPtrOutput)
}

type SyntheticsTestOptionsListCiOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListCiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListCi)(nil)).Elem()
}

func (o SyntheticsTestOptionsListCiOutput) ToSyntheticsTestOptionsListCiOutput() SyntheticsTestOptionsListCiOutput {
	return o
}

func (o SyntheticsTestOptionsListCiOutput) ToSyntheticsTestOptionsListCiOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiOutput {
	return o
}

func (o SyntheticsTestOptionsListCiOutput) ToSyntheticsTestOptionsListCiPtrOutput() SyntheticsTestOptionsListCiPtrOutput {
	return o.ToSyntheticsTestOptionsListCiPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListCiOutput) ToSyntheticsTestOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListCi) *SyntheticsTestOptionsListCi {
		return &v
	}).(SyntheticsTestOptionsListCiPtrOutput)
}

// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
func (o SyntheticsTestOptionsListCiOutput) ExecutionRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListCi) *string { return v.ExecutionRule }).(pulumi.StringPtrOutput)
}

type SyntheticsTestOptionsListCiPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListCiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListCi)(nil)).Elem()
}

func (o SyntheticsTestOptionsListCiPtrOutput) ToSyntheticsTestOptionsListCiPtrOutput() SyntheticsTestOptionsListCiPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListCiPtrOutput) ToSyntheticsTestOptionsListCiPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListCiPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListCiPtrOutput) Elem() SyntheticsTestOptionsListCiOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListCi) SyntheticsTestOptionsListCi {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListCi
		return ret
	}).(SyntheticsTestOptionsListCiOutput)
}

// Execution rule for a Synthetics test. Valid values are `blocking`, `nonBlocking`, `skipped`.
func (o SyntheticsTestOptionsListCiPtrOutput) ExecutionRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListCi) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionRule
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestOptionsListMonitorOptions struct {
	// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
	RenotifyInterval *int `pulumi:"renotifyInterval"`
	// The number of times a monitor renotifies. It can only be set if `renotifyInterval` is set.
	RenotifyOccurrences *int `pulumi:"renotifyOccurrences"`
}

// SyntheticsTestOptionsListMonitorOptionsInput is an input type that accepts SyntheticsTestOptionsListMonitorOptionsArgs and SyntheticsTestOptionsListMonitorOptionsOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListMonitorOptionsInput` via:
//
//	SyntheticsTestOptionsListMonitorOptionsArgs{...}
type SyntheticsTestOptionsListMonitorOptionsInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListMonitorOptionsOutput() SyntheticsTestOptionsListMonitorOptionsOutput
	ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(context.Context) SyntheticsTestOptionsListMonitorOptionsOutput
}

type SyntheticsTestOptionsListMonitorOptionsArgs struct {
	// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
	RenotifyInterval pulumi.IntPtrInput `pulumi:"renotifyInterval"`
	// The number of times a monitor renotifies. It can only be set if `renotifyInterval` is set.
	RenotifyOccurrences pulumi.IntPtrInput `pulumi:"renotifyOccurrences"`
}

func (SyntheticsTestOptionsListMonitorOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsOutput() SyntheticsTestOptionsListMonitorOptionsOutput {
	return i.ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListMonitorOptionsOutput)
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return i.ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListMonitorOptionsArgs) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListMonitorOptionsOutput).ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListMonitorOptionsPtrInput is an input type that accepts SyntheticsTestOptionsListMonitorOptionsArgs, SyntheticsTestOptionsListMonitorOptionsPtr and SyntheticsTestOptionsListMonitorOptionsPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListMonitorOptionsPtrInput` via:
//
//	        SyntheticsTestOptionsListMonitorOptionsArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListMonitorOptionsPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput
	ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput
}

type syntheticsTestOptionsListMonitorOptionsPtrType SyntheticsTestOptionsListMonitorOptionsArgs

func SyntheticsTestOptionsListMonitorOptionsPtr(v *SyntheticsTestOptionsListMonitorOptionsArgs) SyntheticsTestOptionsListMonitorOptionsPtrInput {
	return (*syntheticsTestOptionsListMonitorOptionsPtrType)(v)
}

func (*syntheticsTestOptionsListMonitorOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (i *syntheticsTestOptionsListMonitorOptionsPtrType) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return i.ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListMonitorOptionsPtrType) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListMonitorOptionsPtrOutput)
}

type SyntheticsTestOptionsListMonitorOptionsOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListMonitorOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsOutput() SyntheticsTestOptionsListMonitorOptionsOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o.ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListMonitorOptionsOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListMonitorOptions) *SyntheticsTestOptionsListMonitorOptions {
		return &v
	}).(SyntheticsTestOptionsListMonitorOptionsPtrOutput)
}

// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
func (o SyntheticsTestOptionsListMonitorOptionsOutput) RenotifyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListMonitorOptions) *int { return v.RenotifyInterval }).(pulumi.IntPtrOutput)
}

// The number of times a monitor renotifies. It can only be set if `renotifyInterval` is set.
func (o SyntheticsTestOptionsListMonitorOptionsOutput) RenotifyOccurrences() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListMonitorOptions) *int { return v.RenotifyOccurrences }).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListMonitorOptionsPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListMonitorOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListMonitorOptions)(nil)).Elem()
}

func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutput() SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) ToSyntheticsTestOptionsListMonitorOptionsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListMonitorOptionsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) Elem() SyntheticsTestOptionsListMonitorOptionsOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListMonitorOptions) SyntheticsTestOptionsListMonitorOptions {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListMonitorOptions
		return ret
	}).(SyntheticsTestOptionsListMonitorOptionsOutput)
}

// Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) RenotifyInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListMonitorOptions) *int {
		if v == nil {
			return nil
		}
		return v.RenotifyInterval
	}).(pulumi.IntPtrOutput)
}

// The number of times a monitor renotifies. It can only be set if `renotifyInterval` is set.
func (o SyntheticsTestOptionsListMonitorOptionsPtrOutput) RenotifyOccurrences() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListMonitorOptions) *int {
		if v == nil {
			return nil
		}
		return v.RenotifyOccurrences
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListRetry struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
	Count *int `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
	Interval *int `pulumi:"interval"`
}

// SyntheticsTestOptionsListRetryInput is an input type that accepts SyntheticsTestOptionsListRetryArgs and SyntheticsTestOptionsListRetryOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRetryInput` via:
//
//	SyntheticsTestOptionsListRetryArgs{...}
type SyntheticsTestOptionsListRetryInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRetryOutput() SyntheticsTestOptionsListRetryOutput
	ToSyntheticsTestOptionsListRetryOutputWithContext(context.Context) SyntheticsTestOptionsListRetryOutput
}

type SyntheticsTestOptionsListRetryArgs struct {
	// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (SyntheticsTestOptionsListRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryOutput() SyntheticsTestOptionsListRetryOutput {
	return i.ToSyntheticsTestOptionsListRetryOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRetryOutput)
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return i.ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRetryArgs) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRetryOutput).ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListRetryPtrInput is an input type that accepts SyntheticsTestOptionsListRetryArgs, SyntheticsTestOptionsListRetryPtr and SyntheticsTestOptionsListRetryPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRetryPtrInput` via:
//
//	        SyntheticsTestOptionsListRetryArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListRetryPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput
	ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Context) SyntheticsTestOptionsListRetryPtrOutput
}

type syntheticsTestOptionsListRetryPtrType SyntheticsTestOptionsListRetryArgs

func SyntheticsTestOptionsListRetryPtr(v *SyntheticsTestOptionsListRetryArgs) SyntheticsTestOptionsListRetryPtrInput {
	return (*syntheticsTestOptionsListRetryPtrType)(v)
}

func (*syntheticsTestOptionsListRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (i *syntheticsTestOptionsListRetryPtrType) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return i.ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListRetryPtrType) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRetryPtrOutput)
}

type SyntheticsTestOptionsListRetryOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryOutput() SyntheticsTestOptionsListRetryOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return o.ToSyntheticsTestOptionsListRetryPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListRetryOutput) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListRetry) *SyntheticsTestOptionsListRetry {
		return &v
	}).(SyntheticsTestOptionsListRetryPtrOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
func (o SyntheticsTestOptionsListRetryOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRetry) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
func (o SyntheticsTestOptionsListRetryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRetry) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListRetryPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRetry)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRetryPtrOutput) ToSyntheticsTestOptionsListRetryPtrOutput() SyntheticsTestOptionsListRetryPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryPtrOutput) ToSyntheticsTestOptionsListRetryPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRetryPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRetryPtrOutput) Elem() SyntheticsTestOptionsListRetryOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRetry) SyntheticsTestOptionsListRetry {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListRetry
		return ret
	}).(SyntheticsTestOptionsListRetryOutput)
}

// Number of retries needed to consider a location as failed before sending a notification alert. Maximum value: `3` for `api` tests, `2` for `browser` and `mobile` tests. Defaults to `0`.
func (o SyntheticsTestOptionsListRetryPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRetry) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Interval between a failed test and the next retry in milliseconds. Maximum value: `5000`. Defaults to `300`.
func (o SyntheticsTestOptionsListRetryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRetry) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type SyntheticsTestOptionsListRumSettings struct {
	// RUM application ID used to collect RUM data for the browser test.
	ApplicationId *string `pulumi:"applicationId"`
	// RUM application API key ID used to collect RUM data for the browser test.
	ClientTokenId *int `pulumi:"clientTokenId"`
	// Determines whether RUM data is collected during test runs.
	IsEnabled bool `pulumi:"isEnabled"`
}

// SyntheticsTestOptionsListRumSettingsInput is an input type that accepts SyntheticsTestOptionsListRumSettingsArgs and SyntheticsTestOptionsListRumSettingsOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRumSettingsInput` via:
//
//	SyntheticsTestOptionsListRumSettingsArgs{...}
type SyntheticsTestOptionsListRumSettingsInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRumSettingsOutput() SyntheticsTestOptionsListRumSettingsOutput
	ToSyntheticsTestOptionsListRumSettingsOutputWithContext(context.Context) SyntheticsTestOptionsListRumSettingsOutput
}

type SyntheticsTestOptionsListRumSettingsArgs struct {
	// RUM application ID used to collect RUM data for the browser test.
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	// RUM application API key ID used to collect RUM data for the browser test.
	ClientTokenId pulumi.IntPtrInput `pulumi:"clientTokenId"`
	// Determines whether RUM data is collected during test runs.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
}

func (SyntheticsTestOptionsListRumSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsOutput() SyntheticsTestOptionsListRumSettingsOutput {
	return i.ToSyntheticsTestOptionsListRumSettingsOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRumSettingsOutput)
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return i.ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListRumSettingsArgs) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRumSettingsOutput).ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListRumSettingsPtrInput is an input type that accepts SyntheticsTestOptionsListRumSettingsArgs, SyntheticsTestOptionsListRumSettingsPtr and SyntheticsTestOptionsListRumSettingsPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListRumSettingsPtrInput` via:
//
//	        SyntheticsTestOptionsListRumSettingsArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListRumSettingsPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput
	ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput
}

type syntheticsTestOptionsListRumSettingsPtrType SyntheticsTestOptionsListRumSettingsArgs

func SyntheticsTestOptionsListRumSettingsPtr(v *SyntheticsTestOptionsListRumSettingsArgs) SyntheticsTestOptionsListRumSettingsPtrInput {
	return (*syntheticsTestOptionsListRumSettingsPtrType)(v)
}

func (*syntheticsTestOptionsListRumSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (i *syntheticsTestOptionsListRumSettingsPtrType) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return i.ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListRumSettingsPtrType) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListRumSettingsPtrOutput)
}

type SyntheticsTestOptionsListRumSettingsOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRumSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsOutput() SyntheticsTestOptionsListRumSettingsOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o.ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListRumSettingsOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListRumSettings) *SyntheticsTestOptionsListRumSettings {
		return &v
	}).(SyntheticsTestOptionsListRumSettingsPtrOutput)
}

// RUM application ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRumSettings) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// RUM application API key ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsOutput) ClientTokenId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRumSettings) *int { return v.ClientTokenId }).(pulumi.IntPtrOutput)
}

// Determines whether RUM data is collected during test runs.
func (o SyntheticsTestOptionsListRumSettingsOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListRumSettings) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

type SyntheticsTestOptionsListRumSettingsPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListRumSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListRumSettings)(nil)).Elem()
}

func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutput() SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ToSyntheticsTestOptionsListRumSettingsPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListRumSettingsPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListRumSettingsPtrOutput) Elem() SyntheticsTestOptionsListRumSettingsOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) SyntheticsTestOptionsListRumSettings {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListRumSettings
		return ret
	}).(SyntheticsTestOptionsListRumSettingsOutput)
}

// RUM application ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// RUM application API key ID used to collect RUM data for the browser test.
func (o SyntheticsTestOptionsListRumSettingsPtrOutput) ClientTokenId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) *int {
		if v == nil {
			return nil
		}
		return v.ClientTokenId
	}).(pulumi.IntPtrOutput)
}

// Determines whether RUM data is collected during test runs.
func (o SyntheticsTestOptionsListRumSettingsPtrOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListRumSettings) *bool {
		if v == nil {
			return nil
		}
		return &v.IsEnabled
	}).(pulumi.BoolPtrOutput)
}

type SyntheticsTestOptionsListScheduling struct {
	// Array containing objects describing the scheduling pattern to apply to each day.
	Timeframes []SyntheticsTestOptionsListSchedulingTimeframe `pulumi:"timeframes"`
	// Timezone in which the timeframe is based.
	Timezone string `pulumi:"timezone"`
}

// SyntheticsTestOptionsListSchedulingInput is an input type that accepts SyntheticsTestOptionsListSchedulingArgs and SyntheticsTestOptionsListSchedulingOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingInput` via:
//
//	SyntheticsTestOptionsListSchedulingArgs{...}
type SyntheticsTestOptionsListSchedulingInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingOutput() SyntheticsTestOptionsListSchedulingOutput
	ToSyntheticsTestOptionsListSchedulingOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingOutput
}

type SyntheticsTestOptionsListSchedulingArgs struct {
	// Array containing objects describing the scheduling pattern to apply to each day.
	Timeframes SyntheticsTestOptionsListSchedulingTimeframeArrayInput `pulumi:"timeframes"`
	// Timezone in which the timeframe is based.
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (SyntheticsTestOptionsListSchedulingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingOutput() SyntheticsTestOptionsListSchedulingOutput {
	return i.ToSyntheticsTestOptionsListSchedulingOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingOutput)
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return i.ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingArgs) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingOutput).ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx)
}

// SyntheticsTestOptionsListSchedulingPtrInput is an input type that accepts SyntheticsTestOptionsListSchedulingArgs, SyntheticsTestOptionsListSchedulingPtr and SyntheticsTestOptionsListSchedulingPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingPtrInput` via:
//
//	        SyntheticsTestOptionsListSchedulingArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestOptionsListSchedulingPtrInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput
	ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingPtrOutput
}

type syntheticsTestOptionsListSchedulingPtrType SyntheticsTestOptionsListSchedulingArgs

func SyntheticsTestOptionsListSchedulingPtr(v *SyntheticsTestOptionsListSchedulingArgs) SyntheticsTestOptionsListSchedulingPtrInput {
	return (*syntheticsTestOptionsListSchedulingPtrType)(v)
}

func (*syntheticsTestOptionsListSchedulingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (i *syntheticsTestOptionsListSchedulingPtrType) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return i.ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestOptionsListSchedulingPtrType) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingPtrOutput)
}

type SyntheticsTestOptionsListSchedulingOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingOutput() SyntheticsTestOptionsListSchedulingOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return o.ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestOptionsListSchedulingOutput) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestOptionsListScheduling) *SyntheticsTestOptionsListScheduling {
		return &v
	}).(SyntheticsTestOptionsListSchedulingPtrOutput)
}

// Array containing objects describing the scheduling pattern to apply to each day.
func (o SyntheticsTestOptionsListSchedulingOutput) Timeframes() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListScheduling) []SyntheticsTestOptionsListSchedulingTimeframe {
		return v.Timeframes
	}).(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput)
}

// Timezone in which the timeframe is based.
func (o SyntheticsTestOptionsListSchedulingOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListScheduling) string { return v.Timezone }).(pulumi.StringOutput)
}

type SyntheticsTestOptionsListSchedulingPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestOptionsListScheduling)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingPtrOutput) ToSyntheticsTestOptionsListSchedulingPtrOutput() SyntheticsTestOptionsListSchedulingPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingPtrOutput) ToSyntheticsTestOptionsListSchedulingPtrOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingPtrOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingPtrOutput) Elem() SyntheticsTestOptionsListSchedulingOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListScheduling) SyntheticsTestOptionsListScheduling {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestOptionsListScheduling
		return ret
	}).(SyntheticsTestOptionsListSchedulingOutput)
}

// Array containing objects describing the scheduling pattern to apply to each day.
func (o SyntheticsTestOptionsListSchedulingPtrOutput) Timeframes() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListScheduling) []SyntheticsTestOptionsListSchedulingTimeframe {
		if v == nil {
			return nil
		}
		return v.Timeframes
	}).(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput)
}

// Timezone in which the timeframe is based.
func (o SyntheticsTestOptionsListSchedulingPtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestOptionsListScheduling) *string {
		if v == nil {
			return nil
		}
		return &v.Timezone
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestOptionsListSchedulingTimeframe struct {
	// Number representing the day of the week
	Day int `pulumi:"day"`
	// The hour of the day on which scheduling starts.
	From string `pulumi:"from"`
	// The hour of the day on which scheduling ends.
	To string `pulumi:"to"`
}

// SyntheticsTestOptionsListSchedulingTimeframeInput is an input type that accepts SyntheticsTestOptionsListSchedulingTimeframeArgs and SyntheticsTestOptionsListSchedulingTimeframeOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingTimeframeInput` via:
//
//	SyntheticsTestOptionsListSchedulingTimeframeArgs{...}
type SyntheticsTestOptionsListSchedulingTimeframeInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingTimeframeOutput() SyntheticsTestOptionsListSchedulingTimeframeOutput
	ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingTimeframeOutput
}

type SyntheticsTestOptionsListSchedulingTimeframeArgs struct {
	// Number representing the day of the week
	Day pulumi.IntInput `pulumi:"day"`
	// The hour of the day on which scheduling starts.
	From pulumi.StringInput `pulumi:"from"`
	// The hour of the day on which scheduling ends.
	To pulumi.StringInput `pulumi:"to"`
}

func (SyntheticsTestOptionsListSchedulingTimeframeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArgs) ToSyntheticsTestOptionsListSchedulingTimeframeOutput() SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return i.ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArgs) ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingTimeframeOutput)
}

// SyntheticsTestOptionsListSchedulingTimeframeArrayInput is an input type that accepts SyntheticsTestOptionsListSchedulingTimeframeArray and SyntheticsTestOptionsListSchedulingTimeframeArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestOptionsListSchedulingTimeframeArrayInput` via:
//
//	SyntheticsTestOptionsListSchedulingTimeframeArray{ SyntheticsTestOptionsListSchedulingTimeframeArgs{...} }
type SyntheticsTestOptionsListSchedulingTimeframeArrayInput interface {
	pulumi.Input

	ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput
	ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(context.Context) SyntheticsTestOptionsListSchedulingTimeframeArrayOutput
}

type SyntheticsTestOptionsListSchedulingTimeframeArray []SyntheticsTestOptionsListSchedulingTimeframeInput

func (SyntheticsTestOptionsListSchedulingTimeframeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArray) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return i.ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestOptionsListSchedulingTimeframeArray) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput)
}

type SyntheticsTestOptionsListSchedulingTimeframeOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingTimeframeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) ToSyntheticsTestOptionsListSchedulingTimeframeOutput() SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) ToSyntheticsTestOptionsListSchedulingTimeframeOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return o
}

// Number representing the day of the week
func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) Day() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListSchedulingTimeframe) int { return v.Day }).(pulumi.IntOutput)
}

// The hour of the day on which scheduling starts.
func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListSchedulingTimeframe) string { return v.From }).(pulumi.StringOutput)
}

// The hour of the day on which scheduling ends.
func (o SyntheticsTestOptionsListSchedulingTimeframeOutput) To() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestOptionsListSchedulingTimeframe) string { return v.To }).(pulumi.StringOutput)
}

type SyntheticsTestOptionsListSchedulingTimeframeArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestOptionsListSchedulingTimeframe)(nil)).Elem()
}

func (o SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutput() SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) ToSyntheticsTestOptionsListSchedulingTimeframeArrayOutputWithContext(ctx context.Context) SyntheticsTestOptionsListSchedulingTimeframeArrayOutput {
	return o
}

func (o SyntheticsTestOptionsListSchedulingTimeframeArrayOutput) Index(i pulumi.IntInput) SyntheticsTestOptionsListSchedulingTimeframeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestOptionsListSchedulingTimeframe {
		return vs[0].([]SyntheticsTestOptionsListSchedulingTimeframe)[vs[1].(int)]
	}).(SyntheticsTestOptionsListSchedulingTimeframeOutput)
}

type SyntheticsTestRequestBasicauth struct {
	// Access key for `SIGV4` authentication.
	AccessKey *string `pulumi:"accessKey"`
	// Access token url for `oauth-client` or `oauth-rop` authentication.
	AccessTokenUrl *string `pulumi:"accessTokenUrl"`
	// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Audience *string `pulumi:"audience"`
	// Client ID for `oauth-client` or `oauth-rop` authentication.
	ClientId *string `pulumi:"clientId"`
	// Client secret for `oauth-client` or `oauth-rop` authentication.
	ClientSecret *string `pulumi:"clientSecret"`
	// Domain for `ntlm` authentication.
	Domain *string `pulumi:"domain"`
	// Password for authentication.
	Password *string `pulumi:"password"`
	// Region for `SIGV4` authentication.
	Region *string `pulumi:"region"`
	// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Resource *string `pulumi:"resource"`
	// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Scope *string `pulumi:"scope"`
	// Secret key for `SIGV4` authentication.
	SecretKey *string `pulumi:"secretKey"`
	// Service name for `SIGV4` authentication.
	ServiceName *string `pulumi:"serviceName"`
	// Session token for `SIGV4` authentication.
	SessionToken *string `pulumi:"sessionToken"`
	// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
	TokenApiAuthentication *string `pulumi:"tokenApiAuthentication"`
	// Type of basic authentication to use when performing the test. Defaults to `"web"`.
	Type *string `pulumi:"type"`
	// Username for authentication.
	Username *string `pulumi:"username"`
	// Workstation for `ntlm` authentication.
	Workstation *string `pulumi:"workstation"`
}

// SyntheticsTestRequestBasicauthInput is an input type that accepts SyntheticsTestRequestBasicauthArgs and SyntheticsTestRequestBasicauthOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestBasicauthInput` via:
//
//	SyntheticsTestRequestBasicauthArgs{...}
type SyntheticsTestRequestBasicauthInput interface {
	pulumi.Input

	ToSyntheticsTestRequestBasicauthOutput() SyntheticsTestRequestBasicauthOutput
	ToSyntheticsTestRequestBasicauthOutputWithContext(context.Context) SyntheticsTestRequestBasicauthOutput
}

type SyntheticsTestRequestBasicauthArgs struct {
	// Access key for `SIGV4` authentication.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Access token url for `oauth-client` or `oauth-rop` authentication.
	AccessTokenUrl pulumi.StringPtrInput `pulumi:"accessTokenUrl"`
	// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// Client ID for `oauth-client` or `oauth-rop` authentication.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Client secret for `oauth-client` or `oauth-rop` authentication.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Domain for `ntlm` authentication.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Password for authentication.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Region for `SIGV4` authentication.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// Secret key for `SIGV4` authentication.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
	// Service name for `SIGV4` authentication.
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
	// Session token for `SIGV4` authentication.
	SessionToken pulumi.StringPtrInput `pulumi:"sessionToken"`
	// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
	TokenApiAuthentication pulumi.StringPtrInput `pulumi:"tokenApiAuthentication"`
	// Type of basic authentication to use when performing the test. Defaults to `"web"`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Username for authentication.
	Username pulumi.StringPtrInput `pulumi:"username"`
	// Workstation for `ntlm` authentication.
	Workstation pulumi.StringPtrInput `pulumi:"workstation"`
}

func (SyntheticsTestRequestBasicauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthOutput() SyntheticsTestRequestBasicauthOutput {
	return i.ToSyntheticsTestRequestBasicauthOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestBasicauthOutput)
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return i.ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestBasicauthArgs) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestBasicauthOutput).ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestBasicauthPtrInput is an input type that accepts SyntheticsTestRequestBasicauthArgs, SyntheticsTestRequestBasicauthPtr and SyntheticsTestRequestBasicauthPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestBasicauthPtrInput` via:
//
//	        SyntheticsTestRequestBasicauthArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestBasicauthPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput
	ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Context) SyntheticsTestRequestBasicauthPtrOutput
}

type syntheticsTestRequestBasicauthPtrType SyntheticsTestRequestBasicauthArgs

func SyntheticsTestRequestBasicauthPtr(v *SyntheticsTestRequestBasicauthArgs) SyntheticsTestRequestBasicauthPtrInput {
	return (*syntheticsTestRequestBasicauthPtrType)(v)
}

func (*syntheticsTestRequestBasicauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (i *syntheticsTestRequestBasicauthPtrType) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return i.ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestBasicauthPtrType) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestBasicauthPtrOutput)
}

type SyntheticsTestRequestBasicauthOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestBasicauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthOutput() SyntheticsTestRequestBasicauthOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return o.ToSyntheticsTestRequestBasicauthPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestBasicauthOutput) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestBasicauth) *SyntheticsTestRequestBasicauth {
		return &v
	}).(SyntheticsTestRequestBasicauthPtrOutput)
}

// Access key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Access token url for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.AccessTokenUrl }).(pulumi.StringPtrOutput)
}

// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// Client ID for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Client secret for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Domain for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Password for authentication.
func (o SyntheticsTestRequestBasicauthOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Region for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// Secret key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// Service name for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

// Session token for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthOutput) SessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.SessionToken }).(pulumi.StringPtrOutput)
}

// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
func (o SyntheticsTestRequestBasicauthOutput) TokenApiAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.TokenApiAuthentication }).(pulumi.StringPtrOutput)
}

// Type of basic authentication to use when performing the test. Defaults to `"web"`.
func (o SyntheticsTestRequestBasicauthOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Username for authentication.
func (o SyntheticsTestRequestBasicauthOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

// Workstation for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthOutput) Workstation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestBasicauth) *string { return v.Workstation }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestBasicauthPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestBasicauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestBasicauth)(nil)).Elem()
}

func (o SyntheticsTestRequestBasicauthPtrOutput) ToSyntheticsTestRequestBasicauthPtrOutput() SyntheticsTestRequestBasicauthPtrOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthPtrOutput) ToSyntheticsTestRequestBasicauthPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestBasicauthPtrOutput {
	return o
}

func (o SyntheticsTestRequestBasicauthPtrOutput) Elem() SyntheticsTestRequestBasicauthOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) SyntheticsTestRequestBasicauth {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestBasicauth
		return ret
	}).(SyntheticsTestRequestBasicauthOutput)
}

// Access key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Access token url for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.AccessTokenUrl
	}).(pulumi.StringPtrOutput)
}

// Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// Client ID for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret for `oauth-client` or `oauth-rop` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Domain for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Password for authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Region for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `""`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// Secret key for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

// Service name for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.ServiceName
	}).(pulumi.StringPtrOutput)
}

// Session token for `SIGV4` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) SessionToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.SessionToken
	}).(pulumi.StringPtrOutput)
}

// Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
func (o SyntheticsTestRequestBasicauthPtrOutput) TokenApiAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.TokenApiAuthentication
	}).(pulumi.StringPtrOutput)
}

// Type of basic authentication to use when performing the test. Defaults to `"web"`.
func (o SyntheticsTestRequestBasicauthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Username for authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

// Workstation for `ntlm` authentication.
func (o SyntheticsTestRequestBasicauthPtrOutput) Workstation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestBasicauth) *string {
		if v == nil {
			return nil
		}
		return v.Workstation
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificate struct {
	Cert SyntheticsTestRequestClientCertificateCert `pulumi:"cert"`
	Key  SyntheticsTestRequestClientCertificateKey  `pulumi:"key"`
}

// SyntheticsTestRequestClientCertificateInput is an input type that accepts SyntheticsTestRequestClientCertificateArgs and SyntheticsTestRequestClientCertificateOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateInput` via:
//
//	SyntheticsTestRequestClientCertificateArgs{...}
type SyntheticsTestRequestClientCertificateInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateOutput() SyntheticsTestRequestClientCertificateOutput
	ToSyntheticsTestRequestClientCertificateOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateOutput
}

type SyntheticsTestRequestClientCertificateArgs struct {
	Cert SyntheticsTestRequestClientCertificateCertInput `pulumi:"cert"`
	Key  SyntheticsTestRequestClientCertificateKeyInput  `pulumi:"key"`
}

func (SyntheticsTestRequestClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificateOutput() SyntheticsTestRequestClientCertificateOutput {
	return i.ToSyntheticsTestRequestClientCertificateOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificateOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateOutput)
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return i.ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateArgs) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateOutput).ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx)
}

// SyntheticsTestRequestClientCertificatePtrInput is an input type that accepts SyntheticsTestRequestClientCertificateArgs, SyntheticsTestRequestClientCertificatePtr and SyntheticsTestRequestClientCertificatePtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificatePtrInput` via:
//
//	        SyntheticsTestRequestClientCertificateArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestClientCertificatePtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput
	ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Context) SyntheticsTestRequestClientCertificatePtrOutput
}

type syntheticsTestRequestClientCertificatePtrType SyntheticsTestRequestClientCertificateArgs

func SyntheticsTestRequestClientCertificatePtr(v *SyntheticsTestRequestClientCertificateArgs) SyntheticsTestRequestClientCertificatePtrInput {
	return (*syntheticsTestRequestClientCertificatePtrType)(v)
}

func (*syntheticsTestRequestClientCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (i *syntheticsTestRequestClientCertificatePtrType) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return i.ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestClientCertificatePtrType) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificatePtrOutput)
}

type SyntheticsTestRequestClientCertificateOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificateOutput() SyntheticsTestRequestClientCertificateOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificateOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return o.ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestClientCertificateOutput) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestClientCertificate) *SyntheticsTestRequestClientCertificate {
		return &v
	}).(SyntheticsTestRequestClientCertificatePtrOutput)
}

func (o SyntheticsTestRequestClientCertificateOutput) Cert() SyntheticsTestRequestClientCertificateCertOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificate) SyntheticsTestRequestClientCertificateCert {
		return v.Cert
	}).(SyntheticsTestRequestClientCertificateCertOutput)
}

func (o SyntheticsTestRequestClientCertificateOutput) Key() SyntheticsTestRequestClientCertificateKeyOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificate) SyntheticsTestRequestClientCertificateKey { return v.Key }).(SyntheticsTestRequestClientCertificateKeyOutput)
}

type SyntheticsTestRequestClientCertificatePtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificate)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) ToSyntheticsTestRequestClientCertificatePtrOutput() SyntheticsTestRequestClientCertificatePtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) ToSyntheticsTestRequestClientCertificatePtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificatePtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) Elem() SyntheticsTestRequestClientCertificateOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificate) SyntheticsTestRequestClientCertificate {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestClientCertificate
		return ret
	}).(SyntheticsTestRequestClientCertificateOutput)
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) Cert() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificate) *SyntheticsTestRequestClientCertificateCert {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(SyntheticsTestRequestClientCertificateCertPtrOutput)
}

func (o SyntheticsTestRequestClientCertificatePtrOutput) Key() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificate) *SyntheticsTestRequestClientCertificateKey {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(SyntheticsTestRequestClientCertificateKeyPtrOutput)
}

type SyntheticsTestRequestClientCertificateCert struct {
	// Content of the certificate.
	Content string `pulumi:"content"`
	// File name for the certificate.
	Filename *string `pulumi:"filename"`
}

// SyntheticsTestRequestClientCertificateCertInput is an input type that accepts SyntheticsTestRequestClientCertificateCertArgs and SyntheticsTestRequestClientCertificateCertOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateCertInput` via:
//
//	SyntheticsTestRequestClientCertificateCertArgs{...}
type SyntheticsTestRequestClientCertificateCertInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateCertOutput() SyntheticsTestRequestClientCertificateCertOutput
	ToSyntheticsTestRequestClientCertificateCertOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateCertOutput
}

type SyntheticsTestRequestClientCertificateCertArgs struct {
	// Content of the certificate.
	Content pulumi.StringInput `pulumi:"content"`
	// File name for the certificate.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (SyntheticsTestRequestClientCertificateCertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertOutput() SyntheticsTestRequestClientCertificateCertOutput {
	return i.ToSyntheticsTestRequestClientCertificateCertOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateCertOutput)
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateCertArgs) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateCertOutput).ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestClientCertificateCertPtrInput is an input type that accepts SyntheticsTestRequestClientCertificateCertArgs, SyntheticsTestRequestClientCertificateCertPtr and SyntheticsTestRequestClientCertificateCertPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateCertPtrInput` via:
//
//	        SyntheticsTestRequestClientCertificateCertArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestClientCertificateCertPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput
	ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput
}

type syntheticsTestRequestClientCertificateCertPtrType SyntheticsTestRequestClientCertificateCertArgs

func SyntheticsTestRequestClientCertificateCertPtr(v *SyntheticsTestRequestClientCertificateCertArgs) SyntheticsTestRequestClientCertificateCertPtrInput {
	return (*syntheticsTestRequestClientCertificateCertPtrType)(v)
}

func (*syntheticsTestRequestClientCertificateCertPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (i *syntheticsTestRequestClientCertificateCertPtrType) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestClientCertificateCertPtrType) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateCertPtrOutput)
}

type SyntheticsTestRequestClientCertificateCertOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateCertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertOutput() SyntheticsTestRequestClientCertificateCertOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o.ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestClientCertificateCertOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestClientCertificateCert) *SyntheticsTestRequestClientCertificateCert {
		return &v
	}).(SyntheticsTestRequestClientCertificateCertPtrOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateCertOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateCert) string { return v.Content }).(pulumi.StringOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateCertOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateCert) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificateCertPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateCertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateCert)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateCertPtrOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutput() SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertPtrOutput) ToSyntheticsTestRequestClientCertificateCertPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateCertPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateCertPtrOutput) Elem() SyntheticsTestRequestClientCertificateCertOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateCert) SyntheticsTestRequestClientCertificateCert {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestClientCertificateCert
		return ret
	}).(SyntheticsTestRequestClientCertificateCertOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateCertPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateCert) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateCertPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateCert) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificateKey struct {
	// Content of the certificate.
	Content string `pulumi:"content"`
	// File name for the certificate.
	Filename *string `pulumi:"filename"`
}

// SyntheticsTestRequestClientCertificateKeyInput is an input type that accepts SyntheticsTestRequestClientCertificateKeyArgs and SyntheticsTestRequestClientCertificateKeyOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateKeyInput` via:
//
//	SyntheticsTestRequestClientCertificateKeyArgs{...}
type SyntheticsTestRequestClientCertificateKeyInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateKeyOutput() SyntheticsTestRequestClientCertificateKeyOutput
	ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateKeyOutput
}

type SyntheticsTestRequestClientCertificateKeyArgs struct {
	// Content of the certificate.
	Content pulumi.StringInput `pulumi:"content"`
	// File name for the certificate.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (SyntheticsTestRequestClientCertificateKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyOutput() SyntheticsTestRequestClientCertificateKeyOutput {
	return i.ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateKeyOutput)
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestClientCertificateKeyArgs) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateKeyOutput).ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestClientCertificateKeyPtrInput is an input type that accepts SyntheticsTestRequestClientCertificateKeyArgs, SyntheticsTestRequestClientCertificateKeyPtr and SyntheticsTestRequestClientCertificateKeyPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestClientCertificateKeyPtrInput` via:
//
//	        SyntheticsTestRequestClientCertificateKeyArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestClientCertificateKeyPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput
	ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput
}

type syntheticsTestRequestClientCertificateKeyPtrType SyntheticsTestRequestClientCertificateKeyArgs

func SyntheticsTestRequestClientCertificateKeyPtr(v *SyntheticsTestRequestClientCertificateKeyArgs) SyntheticsTestRequestClientCertificateKeyPtrInput {
	return (*syntheticsTestRequestClientCertificateKeyPtrType)(v)
}

func (*syntheticsTestRequestClientCertificateKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (i *syntheticsTestRequestClientCertificateKeyPtrType) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return i.ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestClientCertificateKeyPtrType) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestClientCertificateKeyPtrOutput)
}

type SyntheticsTestRequestClientCertificateKeyOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyOutput() SyntheticsTestRequestClientCertificateKeyOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o.ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestClientCertificateKeyOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestClientCertificateKey) *SyntheticsTestRequestClientCertificateKey {
		return &v
	}).(SyntheticsTestRequestClientCertificateKeyPtrOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateKeyOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateKey) string { return v.Content }).(pulumi.StringOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateKeyOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestClientCertificateKey) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestClientCertificateKeyPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestClientCertificateKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestClientCertificateKey)(nil)).Elem()
}

func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutput() SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) ToSyntheticsTestRequestClientCertificateKeyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestClientCertificateKeyPtrOutput {
	return o
}

func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) Elem() SyntheticsTestRequestClientCertificateKeyOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateKey) SyntheticsTestRequestClientCertificateKey {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestClientCertificateKey
		return ret
	}).(SyntheticsTestRequestClientCertificateKeyOutput)
}

// Content of the certificate.
func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateKey) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// File name for the certificate.
func (o SyntheticsTestRequestClientCertificateKeyPtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestClientCertificateKey) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestDefinition struct {
	// The request body.
	Body *string `pulumi:"body"`
	// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
	BodyType *string `pulumi:"bodyType"`
	// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
	CallType *string `pulumi:"callType"`
	// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
	CertificateDomains []string `pulumi:"certificateDomains"`
	// DNS server to use for DNS tests (`subtype = "dns"`).
	DnsServer *string `pulumi:"dnsServer"`
	// DNS server port to use for DNS tests.
	DnsServerPort *string `pulumi:"dnsServerPort"`
	// Host name to perform the test with.
	Host *string `pulumi:"host"`
	// HTTP version to use for an HTTP request in an API test or step. **Deprecated.** Use `httpVersion` in the `optionsList` field instead.
	//
	// Deprecated: Use `httpVersion` in the `optionsList` field instead.
	HttpVersion *string `pulumi:"httpVersion"`
	// For UDP and websocket tests, message to send with the request.
	Message *string `pulumi:"message"`
	// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
	Method *string `pulumi:"method"`
	// Determines whether or not to save the response body.
	NoSavingResponseBody *bool `pulumi:"noSavingResponseBody"`
	// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
	NumberOfPackets *int `pulumi:"numberOfPackets"`
	// Persist cookies across redirects.
	PersistCookies *bool `pulumi:"persistCookies"`
	// The content of a proto file as a string.
	PlainProtoFile *string `pulumi:"plainProtoFile"`
	// Port to use when performing the test.
	Port *string `pulumi:"port"`
	// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
	//
	// Deprecated: Use `plainProtoFile` instead.
	ProtoJsonDescriptor *string `pulumi:"protoJsonDescriptor"`
	// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
	Servername *string `pulumi:"servername"`
	// The gRPC service on which you want to perform the gRPC call.
	Service *string `pulumi:"service"`
	// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
	ShouldTrackHops *bool `pulumi:"shouldTrackHops"`
	// Timeout in seconds for the test.
	Timeout *int `pulumi:"timeout"`
	// The URL to send the request to.
	Url *string `pulumi:"url"`
}

// SyntheticsTestRequestDefinitionInput is an input type that accepts SyntheticsTestRequestDefinitionArgs and SyntheticsTestRequestDefinitionOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestDefinitionInput` via:
//
//	SyntheticsTestRequestDefinitionArgs{...}
type SyntheticsTestRequestDefinitionInput interface {
	pulumi.Input

	ToSyntheticsTestRequestDefinitionOutput() SyntheticsTestRequestDefinitionOutput
	ToSyntheticsTestRequestDefinitionOutputWithContext(context.Context) SyntheticsTestRequestDefinitionOutput
}

type SyntheticsTestRequestDefinitionArgs struct {
	// The request body.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
	BodyType pulumi.StringPtrInput `pulumi:"bodyType"`
	// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
	CallType pulumi.StringPtrInput `pulumi:"callType"`
	// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
	CertificateDomains pulumi.StringArrayInput `pulumi:"certificateDomains"`
	// DNS server to use for DNS tests (`subtype = "dns"`).
	DnsServer pulumi.StringPtrInput `pulumi:"dnsServer"`
	// DNS server port to use for DNS tests.
	DnsServerPort pulumi.StringPtrInput `pulumi:"dnsServerPort"`
	// Host name to perform the test with.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// HTTP version to use for an HTTP request in an API test or step. **Deprecated.** Use `httpVersion` in the `optionsList` field instead.
	//
	// Deprecated: Use `httpVersion` in the `optionsList` field instead.
	HttpVersion pulumi.StringPtrInput `pulumi:"httpVersion"`
	// For UDP and websocket tests, message to send with the request.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Determines whether or not to save the response body.
	NoSavingResponseBody pulumi.BoolPtrInput `pulumi:"noSavingResponseBody"`
	// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
	NumberOfPackets pulumi.IntPtrInput `pulumi:"numberOfPackets"`
	// Persist cookies across redirects.
	PersistCookies pulumi.BoolPtrInput `pulumi:"persistCookies"`
	// The content of a proto file as a string.
	PlainProtoFile pulumi.StringPtrInput `pulumi:"plainProtoFile"`
	// Port to use when performing the test.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
	//
	// Deprecated: Use `plainProtoFile` instead.
	ProtoJsonDescriptor pulumi.StringPtrInput `pulumi:"protoJsonDescriptor"`
	// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
	Servername pulumi.StringPtrInput `pulumi:"servername"`
	// The gRPC service on which you want to perform the gRPC call.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
	ShouldTrackHops pulumi.BoolPtrInput `pulumi:"shouldTrackHops"`
	// Timeout in seconds for the test.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The URL to send the request to.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (SyntheticsTestRequestDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionOutput() SyntheticsTestRequestDefinitionOutput {
	return i.ToSyntheticsTestRequestDefinitionOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestDefinitionOutput)
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return i.ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestDefinitionArgs) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestDefinitionOutput).ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestDefinitionPtrInput is an input type that accepts SyntheticsTestRequestDefinitionArgs, SyntheticsTestRequestDefinitionPtr and SyntheticsTestRequestDefinitionPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestDefinitionPtrInput` via:
//
//	        SyntheticsTestRequestDefinitionArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestDefinitionPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput
	ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Context) SyntheticsTestRequestDefinitionPtrOutput
}

type syntheticsTestRequestDefinitionPtrType SyntheticsTestRequestDefinitionArgs

func SyntheticsTestRequestDefinitionPtr(v *SyntheticsTestRequestDefinitionArgs) SyntheticsTestRequestDefinitionPtrInput {
	return (*syntheticsTestRequestDefinitionPtrType)(v)
}

func (*syntheticsTestRequestDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (i *syntheticsTestRequestDefinitionPtrType) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return i.ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestDefinitionPtrType) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestDefinitionPtrOutput)
}

type SyntheticsTestRequestDefinitionOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionOutput() SyntheticsTestRequestDefinitionOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return o.ToSyntheticsTestRequestDefinitionPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestDefinitionOutput) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestDefinition) *SyntheticsTestRequestDefinition {
		return &v
	}).(SyntheticsTestRequestDefinitionPtrOutput)
}

// The request body.
func (o SyntheticsTestRequestDefinitionOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
func (o SyntheticsTestRequestDefinitionOutput) BodyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.BodyType }).(pulumi.StringPtrOutput)
}

// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
func (o SyntheticsTestRequestDefinitionOutput) CallType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.CallType }).(pulumi.StringPtrOutput)
}

// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
func (o SyntheticsTestRequestDefinitionOutput) CertificateDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) []string { return v.CertificateDomains }).(pulumi.StringArrayOutput)
}

// DNS server to use for DNS tests (`subtype = "dns"`).
func (o SyntheticsTestRequestDefinitionOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.DnsServer }).(pulumi.StringPtrOutput)
}

// DNS server port to use for DNS tests.
func (o SyntheticsTestRequestDefinitionOutput) DnsServerPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.DnsServerPort }).(pulumi.StringPtrOutput)
}

// Host name to perform the test with.
func (o SyntheticsTestRequestDefinitionOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. **Deprecated.** Use `httpVersion` in the `optionsList` field instead.
//
// Deprecated: Use `httpVersion` in the `optionsList` field instead.
func (o SyntheticsTestRequestDefinitionOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.HttpVersion }).(pulumi.StringPtrOutput)
}

// For UDP and websocket tests, message to send with the request.
func (o SyntheticsTestRequestDefinitionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
func (o SyntheticsTestRequestDefinitionOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Determines whether or not to save the response body.
func (o SyntheticsTestRequestDefinitionOutput) NoSavingResponseBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *bool { return v.NoSavingResponseBody }).(pulumi.BoolPtrOutput)
}

// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
func (o SyntheticsTestRequestDefinitionOutput) NumberOfPackets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *int { return v.NumberOfPackets }).(pulumi.IntPtrOutput)
}

// Persist cookies across redirects.
func (o SyntheticsTestRequestDefinitionOutput) PersistCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *bool { return v.PersistCookies }).(pulumi.BoolPtrOutput)
}

// The content of a proto file as a string.
func (o SyntheticsTestRequestDefinitionOutput) PlainProtoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.PlainProtoFile }).(pulumi.StringPtrOutput)
}

// Port to use when performing the test.
func (o SyntheticsTestRequestDefinitionOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
//
// Deprecated: Use `plainProtoFile` instead.
func (o SyntheticsTestRequestDefinitionOutput) ProtoJsonDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.ProtoJsonDescriptor }).(pulumi.StringPtrOutput)
}

// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
func (o SyntheticsTestRequestDefinitionOutput) Servername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Servername }).(pulumi.StringPtrOutput)
}

// The gRPC service on which you want to perform the gRPC call.
func (o SyntheticsTestRequestDefinitionOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
func (o SyntheticsTestRequestDefinitionOutput) ShouldTrackHops() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *bool { return v.ShouldTrackHops }).(pulumi.BoolPtrOutput)
}

// Timeout in seconds for the test.
func (o SyntheticsTestRequestDefinitionOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The URL to send the request to.
func (o SyntheticsTestRequestDefinitionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestDefinition) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestDefinitionPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestDefinition)(nil)).Elem()
}

func (o SyntheticsTestRequestDefinitionPtrOutput) ToSyntheticsTestRequestDefinitionPtrOutput() SyntheticsTestRequestDefinitionPtrOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionPtrOutput) ToSyntheticsTestRequestDefinitionPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestDefinitionPtrOutput {
	return o
}

func (o SyntheticsTestRequestDefinitionPtrOutput) Elem() SyntheticsTestRequestDefinitionOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) SyntheticsTestRequestDefinition {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestDefinition
		return ret
	}).(SyntheticsTestRequestDefinitionOutput)
}

// The request body.
func (o SyntheticsTestRequestDefinitionPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Type of the request body. Valid values are `text/plain`, `application/json`, `text/xml`, `text/html`, `application/x-www-form-urlencoded`, `graphql`, `application/octet-stream`, `multipart/form-data`.
func (o SyntheticsTestRequestDefinitionPtrOutput) BodyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.BodyType
	}).(pulumi.StringPtrOutput)
}

// The type of gRPC call to perform. Valid values are `healthcheck`, `unary`.
func (o SyntheticsTestRequestDefinitionPtrOutput) CallType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.CallType
	}).(pulumi.StringPtrOutput)
}

// By default, the client certificate is applied on the domain of the starting URL for browser tests. If you want your client certificate to be applied on other domains instead, add them in `certificateDomains`.
func (o SyntheticsTestRequestDefinitionPtrOutput) CertificateDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) []string {
		if v == nil {
			return nil
		}
		return v.CertificateDomains
	}).(pulumi.StringArrayOutput)
}

// DNS server to use for DNS tests (`subtype = "dns"`).
func (o SyntheticsTestRequestDefinitionPtrOutput) DnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DnsServer
	}).(pulumi.StringPtrOutput)
}

// DNS server port to use for DNS tests.
func (o SyntheticsTestRequestDefinitionPtrOutput) DnsServerPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.DnsServerPort
	}).(pulumi.StringPtrOutput)
}

// Host name to perform the test with.
func (o SyntheticsTestRequestDefinitionPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// HTTP version to use for an HTTP request in an API test or step. **Deprecated.** Use `httpVersion` in the `optionsList` field instead.
//
// Deprecated: Use `httpVersion` in the `optionsList` field instead.
func (o SyntheticsTestRequestDefinitionPtrOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.HttpVersion
	}).(pulumi.StringPtrOutput)
}

// For UDP and websocket tests, message to send with the request.
func (o SyntheticsTestRequestDefinitionPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// Either the HTTP method/verb to use or a gRPC method available on the service set in the `service` field. Required if `subtype` is `HTTP` or if `subtype` is `grpc` and `callType` is `unary`.
func (o SyntheticsTestRequestDefinitionPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Determines whether or not to save the response body.
func (o SyntheticsTestRequestDefinitionPtrOutput) NoSavingResponseBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.NoSavingResponseBody
	}).(pulumi.BoolPtrOutput)
}

// Number of pings to use per test for ICMP tests (`subtype = "icmp"`) between 0 and 10.
func (o SyntheticsTestRequestDefinitionPtrOutput) NumberOfPackets() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfPackets
	}).(pulumi.IntPtrOutput)
}

// Persist cookies across redirects.
func (o SyntheticsTestRequestDefinitionPtrOutput) PersistCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.PersistCookies
	}).(pulumi.BoolPtrOutput)
}

// The content of a proto file as a string.
func (o SyntheticsTestRequestDefinitionPtrOutput) PlainProtoFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.PlainProtoFile
	}).(pulumi.StringPtrOutput)
}

// Port to use when performing the test.
func (o SyntheticsTestRequestDefinitionPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// A protobuf JSON descriptor. **Deprecated.** Use `plainProtoFile` instead.
//
// Deprecated: Use `plainProtoFile` instead.
func (o SyntheticsTestRequestDefinitionPtrOutput) ProtoJsonDescriptor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.ProtoJsonDescriptor
	}).(pulumi.StringPtrOutput)
}

// For SSL tests, it specifies on which server you want to initiate the TLS handshake, allowing the server to present one of multiple possible certificates on the same IP address and TCP port number.
func (o SyntheticsTestRequestDefinitionPtrOutput) Servername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Servername
	}).(pulumi.StringPtrOutput)
}

// The gRPC service on which you want to perform the gRPC call.
func (o SyntheticsTestRequestDefinitionPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// This will turn on a traceroute probe to discover all gateways along the path to the host destination. For ICMP tests (`subtype = "icmp"`).
func (o SyntheticsTestRequestDefinitionPtrOutput) ShouldTrackHops() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.ShouldTrackHops
	}).(pulumi.BoolPtrOutput)
}

// Timeout in seconds for the test.
func (o SyntheticsTestRequestDefinitionPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// The URL to send the request to.
func (o SyntheticsTestRequestDefinitionPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type SyntheticsTestRequestFile struct {
	// Bucket key of the file.
	BucketKey *string `pulumi:"bucketKey"`
	// Content of the file.
	Content *string `pulumi:"content"`
	// Name of the file.
	Name string `pulumi:"name"`
	// Original name of the file.
	OriginalFileName *string `pulumi:"originalFileName"`
	// Size of the file.
	Size int `pulumi:"size"`
	// Type of the file.
	Type string `pulumi:"type"`
}

// SyntheticsTestRequestFileInput is an input type that accepts SyntheticsTestRequestFileArgs and SyntheticsTestRequestFileOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestFileInput` via:
//
//	SyntheticsTestRequestFileArgs{...}
type SyntheticsTestRequestFileInput interface {
	pulumi.Input

	ToSyntheticsTestRequestFileOutput() SyntheticsTestRequestFileOutput
	ToSyntheticsTestRequestFileOutputWithContext(context.Context) SyntheticsTestRequestFileOutput
}

type SyntheticsTestRequestFileArgs struct {
	// Bucket key of the file.
	BucketKey pulumi.StringPtrInput `pulumi:"bucketKey"`
	// Content of the file.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Name of the file.
	Name pulumi.StringInput `pulumi:"name"`
	// Original name of the file.
	OriginalFileName pulumi.StringPtrInput `pulumi:"originalFileName"`
	// Size of the file.
	Size pulumi.IntInput `pulumi:"size"`
	// Type of the file.
	Type pulumi.StringInput `pulumi:"type"`
}

func (SyntheticsTestRequestFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestFile)(nil)).Elem()
}

func (i SyntheticsTestRequestFileArgs) ToSyntheticsTestRequestFileOutput() SyntheticsTestRequestFileOutput {
	return i.ToSyntheticsTestRequestFileOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestFileArgs) ToSyntheticsTestRequestFileOutputWithContext(ctx context.Context) SyntheticsTestRequestFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestFileOutput)
}

// SyntheticsTestRequestFileArrayInput is an input type that accepts SyntheticsTestRequestFileArray and SyntheticsTestRequestFileArrayOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestFileArrayInput` via:
//
//	SyntheticsTestRequestFileArray{ SyntheticsTestRequestFileArgs{...} }
type SyntheticsTestRequestFileArrayInput interface {
	pulumi.Input

	ToSyntheticsTestRequestFileArrayOutput() SyntheticsTestRequestFileArrayOutput
	ToSyntheticsTestRequestFileArrayOutputWithContext(context.Context) SyntheticsTestRequestFileArrayOutput
}

type SyntheticsTestRequestFileArray []SyntheticsTestRequestFileInput

func (SyntheticsTestRequestFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestRequestFile)(nil)).Elem()
}

func (i SyntheticsTestRequestFileArray) ToSyntheticsTestRequestFileArrayOutput() SyntheticsTestRequestFileArrayOutput {
	return i.ToSyntheticsTestRequestFileArrayOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestFileArray) ToSyntheticsTestRequestFileArrayOutputWithContext(ctx context.Context) SyntheticsTestRequestFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestFileArrayOutput)
}

type SyntheticsTestRequestFileOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestFile)(nil)).Elem()
}

func (o SyntheticsTestRequestFileOutput) ToSyntheticsTestRequestFileOutput() SyntheticsTestRequestFileOutput {
	return o
}

func (o SyntheticsTestRequestFileOutput) ToSyntheticsTestRequestFileOutputWithContext(ctx context.Context) SyntheticsTestRequestFileOutput {
	return o
}

// Bucket key of the file.
func (o SyntheticsTestRequestFileOutput) BucketKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) *string { return v.BucketKey }).(pulumi.StringPtrOutput)
}

// Content of the file.
func (o SyntheticsTestRequestFileOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Name of the file.
func (o SyntheticsTestRequestFileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) string { return v.Name }).(pulumi.StringOutput)
}

// Original name of the file.
func (o SyntheticsTestRequestFileOutput) OriginalFileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) *string { return v.OriginalFileName }).(pulumi.StringPtrOutput)
}

// Size of the file.
func (o SyntheticsTestRequestFileOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) int { return v.Size }).(pulumi.IntOutput)
}

// Type of the file.
func (o SyntheticsTestRequestFileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestFile) string { return v.Type }).(pulumi.StringOutput)
}

type SyntheticsTestRequestFileArrayOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SyntheticsTestRequestFile)(nil)).Elem()
}

func (o SyntheticsTestRequestFileArrayOutput) ToSyntheticsTestRequestFileArrayOutput() SyntheticsTestRequestFileArrayOutput {
	return o
}

func (o SyntheticsTestRequestFileArrayOutput) ToSyntheticsTestRequestFileArrayOutputWithContext(ctx context.Context) SyntheticsTestRequestFileArrayOutput {
	return o
}

func (o SyntheticsTestRequestFileArrayOutput) Index(i pulumi.IntInput) SyntheticsTestRequestFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SyntheticsTestRequestFile {
		return vs[0].([]SyntheticsTestRequestFile)[vs[1].(int)]
	}).(SyntheticsTestRequestFileOutput)
}

type SyntheticsTestRequestProxy struct {
	// Header name and value map.
	Headers map[string]string `pulumi:"headers"`
	// URL of the proxy to perform the test.
	Url string `pulumi:"url"`
}

// SyntheticsTestRequestProxyInput is an input type that accepts SyntheticsTestRequestProxyArgs and SyntheticsTestRequestProxyOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestProxyInput` via:
//
//	SyntheticsTestRequestProxyArgs{...}
type SyntheticsTestRequestProxyInput interface {
	pulumi.Input

	ToSyntheticsTestRequestProxyOutput() SyntheticsTestRequestProxyOutput
	ToSyntheticsTestRequestProxyOutputWithContext(context.Context) SyntheticsTestRequestProxyOutput
}

type SyntheticsTestRequestProxyArgs struct {
	// Header name and value map.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// URL of the proxy to perform the test.
	Url pulumi.StringInput `pulumi:"url"`
}

func (SyntheticsTestRequestProxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestProxy)(nil)).Elem()
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyOutput() SyntheticsTestRequestProxyOutput {
	return i.ToSyntheticsTestRequestProxyOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestProxyOutput)
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return i.ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Background())
}

func (i SyntheticsTestRequestProxyArgs) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestProxyOutput).ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx)
}

// SyntheticsTestRequestProxyPtrInput is an input type that accepts SyntheticsTestRequestProxyArgs, SyntheticsTestRequestProxyPtr and SyntheticsTestRequestProxyPtrOutput values.
// You can construct a concrete instance of `SyntheticsTestRequestProxyPtrInput` via:
//
//	        SyntheticsTestRequestProxyArgs{...}
//
//	or:
//
//	        nil
type SyntheticsTestRequestProxyPtrInput interface {
	pulumi.Input

	ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput
	ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Context) SyntheticsTestRequestProxyPtrOutput
}

type syntheticsTestRequestProxyPtrType SyntheticsTestRequestProxyArgs

func SyntheticsTestRequestProxyPtr(v *SyntheticsTestRequestProxyArgs) SyntheticsTestRequestProxyPtrInput {
	return (*syntheticsTestRequestProxyPtrType)(v)
}

func (*syntheticsTestRequestProxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestProxy)(nil)).Elem()
}

func (i *syntheticsTestRequestProxyPtrType) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return i.ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Background())
}

func (i *syntheticsTestRequestProxyPtrType) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyntheticsTestRequestProxyPtrOutput)
}

type SyntheticsTestRequestProxyOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestProxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SyntheticsTestRequestProxy)(nil)).Elem()
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyOutput() SyntheticsTestRequestProxyOutput {
	return o
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyOutput {
	return o
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return o.ToSyntheticsTestRequestProxyPtrOutputWithContext(context.Background())
}

func (o SyntheticsTestRequestProxyOutput) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SyntheticsTestRequestProxy) *SyntheticsTestRequestProxy {
		return &v
	}).(SyntheticsTestRequestProxyPtrOutput)
}

// Header name and value map.
func (o SyntheticsTestRequestProxyOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v SyntheticsTestRequestProxy) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// URL of the proxy to perform the test.
func (o SyntheticsTestRequestProxyOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SyntheticsTestRequestProxy) string { return v.Url }).(pulumi.StringOutput)
}

type SyntheticsTestRequestProxyPtrOutput struct{ *pulumi.OutputState }

func (SyntheticsTestRequestProxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyntheticsTestRequestProxy)(nil)).Elem()
}

func (o SyntheticsTestRequestProxyPtrOutput) ToSyntheticsTestRequestProxyPtrOutput() SyntheticsTestRequestProxyPtrOutput {
	return o
}

func (o SyntheticsTestRequestProxyPtrOutput) ToSyntheticsTestRequestProxyPtrOutputWithContext(ctx context.Context) SyntheticsTestRequestProxyPtrOutput {
	return o
}

func (o SyntheticsTestRequestProxyPtrOutput) Elem() SyntheticsTestRequestProxyOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestProxy) SyntheticsTestRequestProxy {
		if v != nil {
			return *v
		}
		var ret SyntheticsTestRequestProxy
		return ret
	}).(SyntheticsTestRequestProxyOutput)
}

// Header name and value map.
func (o SyntheticsTestRequestProxyPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestProxy) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// URL of the proxy to perform the test.
func (o SyntheticsTestRequestProxyPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyntheticsTestRequestProxy) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type GetActionConnectionAws struct {
	// Configuration for an assume role AWS connection
	AssumeRole *GetActionConnectionAwsAssumeRole `pulumi:"assumeRole"`
}

// GetActionConnectionAwsInput is an input type that accepts GetActionConnectionAwsArgs and GetActionConnectionAwsOutput values.
// You can construct a concrete instance of `GetActionConnectionAwsInput` via:
//
//	GetActionConnectionAwsArgs{...}
type GetActionConnectionAwsInput interface {
	pulumi.Input

	ToGetActionConnectionAwsOutput() GetActionConnectionAwsOutput
	ToGetActionConnectionAwsOutputWithContext(context.Context) GetActionConnectionAwsOutput
}

type GetActionConnectionAwsArgs struct {
	// Configuration for an assume role AWS connection
	AssumeRole GetActionConnectionAwsAssumeRolePtrInput `pulumi:"assumeRole"`
}

func (GetActionConnectionAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionAws)(nil)).Elem()
}

func (i GetActionConnectionAwsArgs) ToGetActionConnectionAwsOutput() GetActionConnectionAwsOutput {
	return i.ToGetActionConnectionAwsOutputWithContext(context.Background())
}

func (i GetActionConnectionAwsArgs) ToGetActionConnectionAwsOutputWithContext(ctx context.Context) GetActionConnectionAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionAwsOutput)
}

func (i GetActionConnectionAwsArgs) ToGetActionConnectionAwsPtrOutput() GetActionConnectionAwsPtrOutput {
	return i.ToGetActionConnectionAwsPtrOutputWithContext(context.Background())
}

func (i GetActionConnectionAwsArgs) ToGetActionConnectionAwsPtrOutputWithContext(ctx context.Context) GetActionConnectionAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionAwsOutput).ToGetActionConnectionAwsPtrOutputWithContext(ctx)
}

// GetActionConnectionAwsPtrInput is an input type that accepts GetActionConnectionAwsArgs, GetActionConnectionAwsPtr and GetActionConnectionAwsPtrOutput values.
// You can construct a concrete instance of `GetActionConnectionAwsPtrInput` via:
//
//	        GetActionConnectionAwsArgs{...}
//
//	or:
//
//	        nil
type GetActionConnectionAwsPtrInput interface {
	pulumi.Input

	ToGetActionConnectionAwsPtrOutput() GetActionConnectionAwsPtrOutput
	ToGetActionConnectionAwsPtrOutputWithContext(context.Context) GetActionConnectionAwsPtrOutput
}

type getActionConnectionAwsPtrType GetActionConnectionAwsArgs

func GetActionConnectionAwsPtr(v *GetActionConnectionAwsArgs) GetActionConnectionAwsPtrInput {
	return (*getActionConnectionAwsPtrType)(v)
}

func (*getActionConnectionAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetActionConnectionAws)(nil)).Elem()
}

func (i *getActionConnectionAwsPtrType) ToGetActionConnectionAwsPtrOutput() GetActionConnectionAwsPtrOutput {
	return i.ToGetActionConnectionAwsPtrOutputWithContext(context.Background())
}

func (i *getActionConnectionAwsPtrType) ToGetActionConnectionAwsPtrOutputWithContext(ctx context.Context) GetActionConnectionAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionAwsPtrOutput)
}

type GetActionConnectionAwsOutput struct{ *pulumi.OutputState }

func (GetActionConnectionAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionAws)(nil)).Elem()
}

func (o GetActionConnectionAwsOutput) ToGetActionConnectionAwsOutput() GetActionConnectionAwsOutput {
	return o
}

func (o GetActionConnectionAwsOutput) ToGetActionConnectionAwsOutputWithContext(ctx context.Context) GetActionConnectionAwsOutput {
	return o
}

func (o GetActionConnectionAwsOutput) ToGetActionConnectionAwsPtrOutput() GetActionConnectionAwsPtrOutput {
	return o.ToGetActionConnectionAwsPtrOutputWithContext(context.Background())
}

func (o GetActionConnectionAwsOutput) ToGetActionConnectionAwsPtrOutputWithContext(ctx context.Context) GetActionConnectionAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetActionConnectionAws) *GetActionConnectionAws {
		return &v
	}).(GetActionConnectionAwsPtrOutput)
}

// Configuration for an assume role AWS connection
func (o GetActionConnectionAwsOutput) AssumeRole() GetActionConnectionAwsAssumeRolePtrOutput {
	return o.ApplyT(func(v GetActionConnectionAws) *GetActionConnectionAwsAssumeRole { return v.AssumeRole }).(GetActionConnectionAwsAssumeRolePtrOutput)
}

type GetActionConnectionAwsPtrOutput struct{ *pulumi.OutputState }

func (GetActionConnectionAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetActionConnectionAws)(nil)).Elem()
}

func (o GetActionConnectionAwsPtrOutput) ToGetActionConnectionAwsPtrOutput() GetActionConnectionAwsPtrOutput {
	return o
}

func (o GetActionConnectionAwsPtrOutput) ToGetActionConnectionAwsPtrOutputWithContext(ctx context.Context) GetActionConnectionAwsPtrOutput {
	return o
}

func (o GetActionConnectionAwsPtrOutput) Elem() GetActionConnectionAwsOutput {
	return o.ApplyT(func(v *GetActionConnectionAws) GetActionConnectionAws {
		if v != nil {
			return *v
		}
		var ret GetActionConnectionAws
		return ret
	}).(GetActionConnectionAwsOutput)
}

// Configuration for an assume role AWS connection
func (o GetActionConnectionAwsPtrOutput) AssumeRole() GetActionConnectionAwsAssumeRolePtrOutput {
	return o.ApplyT(func(v *GetActionConnectionAws) *GetActionConnectionAwsAssumeRole {
		if v == nil {
			return nil
		}
		return v.AssumeRole
	}).(GetActionConnectionAwsAssumeRolePtrOutput)
}

type GetActionConnectionAwsAssumeRole struct {
	// AWS account that the connection is created for
	AccountId string `pulumi:"accountId"`
	// External ID that specifies which connection can be used to assume the role
	ExternalId string `pulumi:"externalId"`
	// AWS account that will assume the role
	PrincipalId string `pulumi:"principalId"`
	// Role to assume
	Role string `pulumi:"role"`
}

// GetActionConnectionAwsAssumeRoleInput is an input type that accepts GetActionConnectionAwsAssumeRoleArgs and GetActionConnectionAwsAssumeRoleOutput values.
// You can construct a concrete instance of `GetActionConnectionAwsAssumeRoleInput` via:
//
//	GetActionConnectionAwsAssumeRoleArgs{...}
type GetActionConnectionAwsAssumeRoleInput interface {
	pulumi.Input

	ToGetActionConnectionAwsAssumeRoleOutput() GetActionConnectionAwsAssumeRoleOutput
	ToGetActionConnectionAwsAssumeRoleOutputWithContext(context.Context) GetActionConnectionAwsAssumeRoleOutput
}

type GetActionConnectionAwsAssumeRoleArgs struct {
	// AWS account that the connection is created for
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// External ID that specifies which connection can be used to assume the role
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// AWS account that will assume the role
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// Role to assume
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetActionConnectionAwsAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionAwsAssumeRole)(nil)).Elem()
}

func (i GetActionConnectionAwsAssumeRoleArgs) ToGetActionConnectionAwsAssumeRoleOutput() GetActionConnectionAwsAssumeRoleOutput {
	return i.ToGetActionConnectionAwsAssumeRoleOutputWithContext(context.Background())
}

func (i GetActionConnectionAwsAssumeRoleArgs) ToGetActionConnectionAwsAssumeRoleOutputWithContext(ctx context.Context) GetActionConnectionAwsAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionAwsAssumeRoleOutput)
}

func (i GetActionConnectionAwsAssumeRoleArgs) ToGetActionConnectionAwsAssumeRolePtrOutput() GetActionConnectionAwsAssumeRolePtrOutput {
	return i.ToGetActionConnectionAwsAssumeRolePtrOutputWithContext(context.Background())
}

func (i GetActionConnectionAwsAssumeRoleArgs) ToGetActionConnectionAwsAssumeRolePtrOutputWithContext(ctx context.Context) GetActionConnectionAwsAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionAwsAssumeRoleOutput).ToGetActionConnectionAwsAssumeRolePtrOutputWithContext(ctx)
}

// GetActionConnectionAwsAssumeRolePtrInput is an input type that accepts GetActionConnectionAwsAssumeRoleArgs, GetActionConnectionAwsAssumeRolePtr and GetActionConnectionAwsAssumeRolePtrOutput values.
// You can construct a concrete instance of `GetActionConnectionAwsAssumeRolePtrInput` via:
//
//	        GetActionConnectionAwsAssumeRoleArgs{...}
//
//	or:
//
//	        nil
type GetActionConnectionAwsAssumeRolePtrInput interface {
	pulumi.Input

	ToGetActionConnectionAwsAssumeRolePtrOutput() GetActionConnectionAwsAssumeRolePtrOutput
	ToGetActionConnectionAwsAssumeRolePtrOutputWithContext(context.Context) GetActionConnectionAwsAssumeRolePtrOutput
}

type getActionConnectionAwsAssumeRolePtrType GetActionConnectionAwsAssumeRoleArgs

func GetActionConnectionAwsAssumeRolePtr(v *GetActionConnectionAwsAssumeRoleArgs) GetActionConnectionAwsAssumeRolePtrInput {
	return (*getActionConnectionAwsAssumeRolePtrType)(v)
}

func (*getActionConnectionAwsAssumeRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetActionConnectionAwsAssumeRole)(nil)).Elem()
}

func (i *getActionConnectionAwsAssumeRolePtrType) ToGetActionConnectionAwsAssumeRolePtrOutput() GetActionConnectionAwsAssumeRolePtrOutput {
	return i.ToGetActionConnectionAwsAssumeRolePtrOutputWithContext(context.Background())
}

func (i *getActionConnectionAwsAssumeRolePtrType) ToGetActionConnectionAwsAssumeRolePtrOutputWithContext(ctx context.Context) GetActionConnectionAwsAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionAwsAssumeRolePtrOutput)
}

type GetActionConnectionAwsAssumeRoleOutput struct{ *pulumi.OutputState }

func (GetActionConnectionAwsAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionAwsAssumeRole)(nil)).Elem()
}

func (o GetActionConnectionAwsAssumeRoleOutput) ToGetActionConnectionAwsAssumeRoleOutput() GetActionConnectionAwsAssumeRoleOutput {
	return o
}

func (o GetActionConnectionAwsAssumeRoleOutput) ToGetActionConnectionAwsAssumeRoleOutputWithContext(ctx context.Context) GetActionConnectionAwsAssumeRoleOutput {
	return o
}

func (o GetActionConnectionAwsAssumeRoleOutput) ToGetActionConnectionAwsAssumeRolePtrOutput() GetActionConnectionAwsAssumeRolePtrOutput {
	return o.ToGetActionConnectionAwsAssumeRolePtrOutputWithContext(context.Background())
}

func (o GetActionConnectionAwsAssumeRoleOutput) ToGetActionConnectionAwsAssumeRolePtrOutputWithContext(ctx context.Context) GetActionConnectionAwsAssumeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetActionConnectionAwsAssumeRole) *GetActionConnectionAwsAssumeRole {
		return &v
	}).(GetActionConnectionAwsAssumeRolePtrOutput)
}

// AWS account that the connection is created for
func (o GetActionConnectionAwsAssumeRoleOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionAwsAssumeRole) string { return v.AccountId }).(pulumi.StringOutput)
}

// External ID that specifies which connection can be used to assume the role
func (o GetActionConnectionAwsAssumeRoleOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionAwsAssumeRole) string { return v.ExternalId }).(pulumi.StringOutput)
}

// AWS account that will assume the role
func (o GetActionConnectionAwsAssumeRoleOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionAwsAssumeRole) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// Role to assume
func (o GetActionConnectionAwsAssumeRoleOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionAwsAssumeRole) string { return v.Role }).(pulumi.StringOutput)
}

type GetActionConnectionAwsAssumeRolePtrOutput struct{ *pulumi.OutputState }

func (GetActionConnectionAwsAssumeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetActionConnectionAwsAssumeRole)(nil)).Elem()
}

func (o GetActionConnectionAwsAssumeRolePtrOutput) ToGetActionConnectionAwsAssumeRolePtrOutput() GetActionConnectionAwsAssumeRolePtrOutput {
	return o
}

func (o GetActionConnectionAwsAssumeRolePtrOutput) ToGetActionConnectionAwsAssumeRolePtrOutputWithContext(ctx context.Context) GetActionConnectionAwsAssumeRolePtrOutput {
	return o
}

func (o GetActionConnectionAwsAssumeRolePtrOutput) Elem() GetActionConnectionAwsAssumeRoleOutput {
	return o.ApplyT(func(v *GetActionConnectionAwsAssumeRole) GetActionConnectionAwsAssumeRole {
		if v != nil {
			return *v
		}
		var ret GetActionConnectionAwsAssumeRole
		return ret
	}).(GetActionConnectionAwsAssumeRoleOutput)
}

// AWS account that the connection is created for
func (o GetActionConnectionAwsAssumeRolePtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetActionConnectionAwsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return &v.AccountId
	}).(pulumi.StringPtrOutput)
}

// External ID that specifies which connection can be used to assume the role
func (o GetActionConnectionAwsAssumeRolePtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetActionConnectionAwsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return &v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// AWS account that will assume the role
func (o GetActionConnectionAwsAssumeRolePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetActionConnectionAwsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// Role to assume
func (o GetActionConnectionAwsAssumeRolePtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetActionConnectionAwsAssumeRole) *string {
		if v == nil {
			return nil
		}
		return &v.Role
	}).(pulumi.StringPtrOutput)
}

type GetActionConnectionHttp struct {
	// Base HTTP url for the integration
	BaseUrl string `pulumi:"baseUrl"`
	// Configuration for an HTTP connection that uses token auth
	TokenAuth *GetActionConnectionHttpTokenAuth `pulumi:"tokenAuth"`
}

// GetActionConnectionHttpInput is an input type that accepts GetActionConnectionHttpArgs and GetActionConnectionHttpOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpInput` via:
//
//	GetActionConnectionHttpArgs{...}
type GetActionConnectionHttpInput interface {
	pulumi.Input

	ToGetActionConnectionHttpOutput() GetActionConnectionHttpOutput
	ToGetActionConnectionHttpOutputWithContext(context.Context) GetActionConnectionHttpOutput
}

type GetActionConnectionHttpArgs struct {
	// Base HTTP url for the integration
	BaseUrl pulumi.StringInput `pulumi:"baseUrl"`
	// Configuration for an HTTP connection that uses token auth
	TokenAuth GetActionConnectionHttpTokenAuthPtrInput `pulumi:"tokenAuth"`
}

func (GetActionConnectionHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttp)(nil)).Elem()
}

func (i GetActionConnectionHttpArgs) ToGetActionConnectionHttpOutput() GetActionConnectionHttpOutput {
	return i.ToGetActionConnectionHttpOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpArgs) ToGetActionConnectionHttpOutputWithContext(ctx context.Context) GetActionConnectionHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpOutput)
}

func (i GetActionConnectionHttpArgs) ToGetActionConnectionHttpPtrOutput() GetActionConnectionHttpPtrOutput {
	return i.ToGetActionConnectionHttpPtrOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpArgs) ToGetActionConnectionHttpPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpOutput).ToGetActionConnectionHttpPtrOutputWithContext(ctx)
}

// GetActionConnectionHttpPtrInput is an input type that accepts GetActionConnectionHttpArgs, GetActionConnectionHttpPtr and GetActionConnectionHttpPtrOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpPtrInput` via:
//
//	        GetActionConnectionHttpArgs{...}
//
//	or:
//
//	        nil
type GetActionConnectionHttpPtrInput interface {
	pulumi.Input

	ToGetActionConnectionHttpPtrOutput() GetActionConnectionHttpPtrOutput
	ToGetActionConnectionHttpPtrOutputWithContext(context.Context) GetActionConnectionHttpPtrOutput
}

type getActionConnectionHttpPtrType GetActionConnectionHttpArgs

func GetActionConnectionHttpPtr(v *GetActionConnectionHttpArgs) GetActionConnectionHttpPtrInput {
	return (*getActionConnectionHttpPtrType)(v)
}

func (*getActionConnectionHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetActionConnectionHttp)(nil)).Elem()
}

func (i *getActionConnectionHttpPtrType) ToGetActionConnectionHttpPtrOutput() GetActionConnectionHttpPtrOutput {
	return i.ToGetActionConnectionHttpPtrOutputWithContext(context.Background())
}

func (i *getActionConnectionHttpPtrType) ToGetActionConnectionHttpPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpPtrOutput)
}

type GetActionConnectionHttpOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttp)(nil)).Elem()
}

func (o GetActionConnectionHttpOutput) ToGetActionConnectionHttpOutput() GetActionConnectionHttpOutput {
	return o
}

func (o GetActionConnectionHttpOutput) ToGetActionConnectionHttpOutputWithContext(ctx context.Context) GetActionConnectionHttpOutput {
	return o
}

func (o GetActionConnectionHttpOutput) ToGetActionConnectionHttpPtrOutput() GetActionConnectionHttpPtrOutput {
	return o.ToGetActionConnectionHttpPtrOutputWithContext(context.Background())
}

func (o GetActionConnectionHttpOutput) ToGetActionConnectionHttpPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetActionConnectionHttp) *GetActionConnectionHttp {
		return &v
	}).(GetActionConnectionHttpPtrOutput)
}

// Base HTTP url for the integration
func (o GetActionConnectionHttpOutput) BaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionHttp) string { return v.BaseUrl }).(pulumi.StringOutput)
}

// Configuration for an HTTP connection that uses token auth
func (o GetActionConnectionHttpOutput) TokenAuth() GetActionConnectionHttpTokenAuthPtrOutput {
	return o.ApplyT(func(v GetActionConnectionHttp) *GetActionConnectionHttpTokenAuth { return v.TokenAuth }).(GetActionConnectionHttpTokenAuthPtrOutput)
}

type GetActionConnectionHttpPtrOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetActionConnectionHttp)(nil)).Elem()
}

func (o GetActionConnectionHttpPtrOutput) ToGetActionConnectionHttpPtrOutput() GetActionConnectionHttpPtrOutput {
	return o
}

func (o GetActionConnectionHttpPtrOutput) ToGetActionConnectionHttpPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpPtrOutput {
	return o
}

func (o GetActionConnectionHttpPtrOutput) Elem() GetActionConnectionHttpOutput {
	return o.ApplyT(func(v *GetActionConnectionHttp) GetActionConnectionHttp {
		if v != nil {
			return *v
		}
		var ret GetActionConnectionHttp
		return ret
	}).(GetActionConnectionHttpOutput)
}

// Base HTTP url for the integration
func (o GetActionConnectionHttpPtrOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetActionConnectionHttp) *string {
		if v == nil {
			return nil
		}
		return &v.BaseUrl
	}).(pulumi.StringPtrOutput)
}

// Configuration for an HTTP connection that uses token auth
func (o GetActionConnectionHttpPtrOutput) TokenAuth() GetActionConnectionHttpTokenAuthPtrOutput {
	return o.ApplyT(func(v *GetActionConnectionHttp) *GetActionConnectionHttpTokenAuth {
		if v == nil {
			return nil
		}
		return v.TokenAuth
	}).(GetActionConnectionHttpTokenAuthPtrOutput)
}

type GetActionConnectionHttpTokenAuth struct {
	// Body for HTTP authentication
	Body *GetActionConnectionHttpTokenAuthBody `pulumi:"body"`
	// Header for HTTP authentication
	Headers []GetActionConnectionHttpTokenAuthHeader `pulumi:"headers"`
	// Token for HTTP authentication
	Tokens []GetActionConnectionHttpTokenAuthToken `pulumi:"tokens"`
	// URL parameter for HTTP authentication
	UrlParameters []GetActionConnectionHttpTokenAuthUrlParameter `pulumi:"urlParameters"`
}

// GetActionConnectionHttpTokenAuthInput is an input type that accepts GetActionConnectionHttpTokenAuthArgs and GetActionConnectionHttpTokenAuthOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpTokenAuthInput` via:
//
//	GetActionConnectionHttpTokenAuthArgs{...}
type GetActionConnectionHttpTokenAuthInput interface {
	pulumi.Input

	ToGetActionConnectionHttpTokenAuthOutput() GetActionConnectionHttpTokenAuthOutput
	ToGetActionConnectionHttpTokenAuthOutputWithContext(context.Context) GetActionConnectionHttpTokenAuthOutput
}

type GetActionConnectionHttpTokenAuthArgs struct {
	// Body for HTTP authentication
	Body GetActionConnectionHttpTokenAuthBodyPtrInput `pulumi:"body"`
	// Header for HTTP authentication
	Headers GetActionConnectionHttpTokenAuthHeaderArrayInput `pulumi:"headers"`
	// Token for HTTP authentication
	Tokens GetActionConnectionHttpTokenAuthTokenArrayInput `pulumi:"tokens"`
	// URL parameter for HTTP authentication
	UrlParameters GetActionConnectionHttpTokenAuthUrlParameterArrayInput `pulumi:"urlParameters"`
}

func (GetActionConnectionHttpTokenAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttpTokenAuth)(nil)).Elem()
}

func (i GetActionConnectionHttpTokenAuthArgs) ToGetActionConnectionHttpTokenAuthOutput() GetActionConnectionHttpTokenAuthOutput {
	return i.ToGetActionConnectionHttpTokenAuthOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpTokenAuthArgs) ToGetActionConnectionHttpTokenAuthOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthOutput)
}

func (i GetActionConnectionHttpTokenAuthArgs) ToGetActionConnectionHttpTokenAuthPtrOutput() GetActionConnectionHttpTokenAuthPtrOutput {
	return i.ToGetActionConnectionHttpTokenAuthPtrOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpTokenAuthArgs) ToGetActionConnectionHttpTokenAuthPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthOutput).ToGetActionConnectionHttpTokenAuthPtrOutputWithContext(ctx)
}

// GetActionConnectionHttpTokenAuthPtrInput is an input type that accepts GetActionConnectionHttpTokenAuthArgs, GetActionConnectionHttpTokenAuthPtr and GetActionConnectionHttpTokenAuthPtrOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpTokenAuthPtrInput` via:
//
//	        GetActionConnectionHttpTokenAuthArgs{...}
//
//	or:
//
//	        nil
type GetActionConnectionHttpTokenAuthPtrInput interface {
	pulumi.Input

	ToGetActionConnectionHttpTokenAuthPtrOutput() GetActionConnectionHttpTokenAuthPtrOutput
	ToGetActionConnectionHttpTokenAuthPtrOutputWithContext(context.Context) GetActionConnectionHttpTokenAuthPtrOutput
}

type getActionConnectionHttpTokenAuthPtrType GetActionConnectionHttpTokenAuthArgs

func GetActionConnectionHttpTokenAuthPtr(v *GetActionConnectionHttpTokenAuthArgs) GetActionConnectionHttpTokenAuthPtrInput {
	return (*getActionConnectionHttpTokenAuthPtrType)(v)
}

func (*getActionConnectionHttpTokenAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetActionConnectionHttpTokenAuth)(nil)).Elem()
}

func (i *getActionConnectionHttpTokenAuthPtrType) ToGetActionConnectionHttpTokenAuthPtrOutput() GetActionConnectionHttpTokenAuthPtrOutput {
	return i.ToGetActionConnectionHttpTokenAuthPtrOutputWithContext(context.Background())
}

func (i *getActionConnectionHttpTokenAuthPtrType) ToGetActionConnectionHttpTokenAuthPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthPtrOutput)
}

type GetActionConnectionHttpTokenAuthOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpTokenAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttpTokenAuth)(nil)).Elem()
}

func (o GetActionConnectionHttpTokenAuthOutput) ToGetActionConnectionHttpTokenAuthOutput() GetActionConnectionHttpTokenAuthOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthOutput) ToGetActionConnectionHttpTokenAuthOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthOutput) ToGetActionConnectionHttpTokenAuthPtrOutput() GetActionConnectionHttpTokenAuthPtrOutput {
	return o.ToGetActionConnectionHttpTokenAuthPtrOutputWithContext(context.Background())
}

func (o GetActionConnectionHttpTokenAuthOutput) ToGetActionConnectionHttpTokenAuthPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetActionConnectionHttpTokenAuth) *GetActionConnectionHttpTokenAuth {
		return &v
	}).(GetActionConnectionHttpTokenAuthPtrOutput)
}

// Body for HTTP authentication
func (o GetActionConnectionHttpTokenAuthOutput) Body() GetActionConnectionHttpTokenAuthBodyPtrOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuth) *GetActionConnectionHttpTokenAuthBody { return v.Body }).(GetActionConnectionHttpTokenAuthBodyPtrOutput)
}

// Header for HTTP authentication
func (o GetActionConnectionHttpTokenAuthOutput) Headers() GetActionConnectionHttpTokenAuthHeaderArrayOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuth) []GetActionConnectionHttpTokenAuthHeader { return v.Headers }).(GetActionConnectionHttpTokenAuthHeaderArrayOutput)
}

// Token for HTTP authentication
func (o GetActionConnectionHttpTokenAuthOutput) Tokens() GetActionConnectionHttpTokenAuthTokenArrayOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuth) []GetActionConnectionHttpTokenAuthToken { return v.Tokens }).(GetActionConnectionHttpTokenAuthTokenArrayOutput)
}

// URL parameter for HTTP authentication
func (o GetActionConnectionHttpTokenAuthOutput) UrlParameters() GetActionConnectionHttpTokenAuthUrlParameterArrayOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuth) []GetActionConnectionHttpTokenAuthUrlParameter {
		return v.UrlParameters
	}).(GetActionConnectionHttpTokenAuthUrlParameterArrayOutput)
}

type GetActionConnectionHttpTokenAuthPtrOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpTokenAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetActionConnectionHttpTokenAuth)(nil)).Elem()
}

func (o GetActionConnectionHttpTokenAuthPtrOutput) ToGetActionConnectionHttpTokenAuthPtrOutput() GetActionConnectionHttpTokenAuthPtrOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthPtrOutput) ToGetActionConnectionHttpTokenAuthPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthPtrOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthPtrOutput) Elem() GetActionConnectionHttpTokenAuthOutput {
	return o.ApplyT(func(v *GetActionConnectionHttpTokenAuth) GetActionConnectionHttpTokenAuth {
		if v != nil {
			return *v
		}
		var ret GetActionConnectionHttpTokenAuth
		return ret
	}).(GetActionConnectionHttpTokenAuthOutput)
}

// Body for HTTP authentication
func (o GetActionConnectionHttpTokenAuthPtrOutput) Body() GetActionConnectionHttpTokenAuthBodyPtrOutput {
	return o.ApplyT(func(v *GetActionConnectionHttpTokenAuth) *GetActionConnectionHttpTokenAuthBody {
		if v == nil {
			return nil
		}
		return v.Body
	}).(GetActionConnectionHttpTokenAuthBodyPtrOutput)
}

// Header for HTTP authentication
func (o GetActionConnectionHttpTokenAuthPtrOutput) Headers() GetActionConnectionHttpTokenAuthHeaderArrayOutput {
	return o.ApplyT(func(v *GetActionConnectionHttpTokenAuth) []GetActionConnectionHttpTokenAuthHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(GetActionConnectionHttpTokenAuthHeaderArrayOutput)
}

// Token for HTTP authentication
func (o GetActionConnectionHttpTokenAuthPtrOutput) Tokens() GetActionConnectionHttpTokenAuthTokenArrayOutput {
	return o.ApplyT(func(v *GetActionConnectionHttpTokenAuth) []GetActionConnectionHttpTokenAuthToken {
		if v == nil {
			return nil
		}
		return v.Tokens
	}).(GetActionConnectionHttpTokenAuthTokenArrayOutput)
}

// URL parameter for HTTP authentication
func (o GetActionConnectionHttpTokenAuthPtrOutput) UrlParameters() GetActionConnectionHttpTokenAuthUrlParameterArrayOutput {
	return o.ApplyT(func(v *GetActionConnectionHttpTokenAuth) []GetActionConnectionHttpTokenAuthUrlParameter {
		if v == nil {
			return nil
		}
		return v.UrlParameters
	}).(GetActionConnectionHttpTokenAuthUrlParameterArrayOutput)
}

type GetActionConnectionHttpTokenAuthBody struct {
	// Serialized body content
	Content string `pulumi:"content"`
	// Content type of the body
	ContentType string `pulumi:"contentType"`
}

// GetActionConnectionHttpTokenAuthBodyInput is an input type that accepts GetActionConnectionHttpTokenAuthBodyArgs and GetActionConnectionHttpTokenAuthBodyOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpTokenAuthBodyInput` via:
//
//	GetActionConnectionHttpTokenAuthBodyArgs{...}
type GetActionConnectionHttpTokenAuthBodyInput interface {
	pulumi.Input

	ToGetActionConnectionHttpTokenAuthBodyOutput() GetActionConnectionHttpTokenAuthBodyOutput
	ToGetActionConnectionHttpTokenAuthBodyOutputWithContext(context.Context) GetActionConnectionHttpTokenAuthBodyOutput
}

type GetActionConnectionHttpTokenAuthBodyArgs struct {
	// Serialized body content
	Content pulumi.StringInput `pulumi:"content"`
	// Content type of the body
	ContentType pulumi.StringInput `pulumi:"contentType"`
}

func (GetActionConnectionHttpTokenAuthBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttpTokenAuthBody)(nil)).Elem()
}

func (i GetActionConnectionHttpTokenAuthBodyArgs) ToGetActionConnectionHttpTokenAuthBodyOutput() GetActionConnectionHttpTokenAuthBodyOutput {
	return i.ToGetActionConnectionHttpTokenAuthBodyOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpTokenAuthBodyArgs) ToGetActionConnectionHttpTokenAuthBodyOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthBodyOutput)
}

func (i GetActionConnectionHttpTokenAuthBodyArgs) ToGetActionConnectionHttpTokenAuthBodyPtrOutput() GetActionConnectionHttpTokenAuthBodyPtrOutput {
	return i.ToGetActionConnectionHttpTokenAuthBodyPtrOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpTokenAuthBodyArgs) ToGetActionConnectionHttpTokenAuthBodyPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthBodyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthBodyOutput).ToGetActionConnectionHttpTokenAuthBodyPtrOutputWithContext(ctx)
}

// GetActionConnectionHttpTokenAuthBodyPtrInput is an input type that accepts GetActionConnectionHttpTokenAuthBodyArgs, GetActionConnectionHttpTokenAuthBodyPtr and GetActionConnectionHttpTokenAuthBodyPtrOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpTokenAuthBodyPtrInput` via:
//
//	        GetActionConnectionHttpTokenAuthBodyArgs{...}
//
//	or:
//
//	        nil
type GetActionConnectionHttpTokenAuthBodyPtrInput interface {
	pulumi.Input

	ToGetActionConnectionHttpTokenAuthBodyPtrOutput() GetActionConnectionHttpTokenAuthBodyPtrOutput
	ToGetActionConnectionHttpTokenAuthBodyPtrOutputWithContext(context.Context) GetActionConnectionHttpTokenAuthBodyPtrOutput
}

type getActionConnectionHttpTokenAuthBodyPtrType GetActionConnectionHttpTokenAuthBodyArgs

func GetActionConnectionHttpTokenAuthBodyPtr(v *GetActionConnectionHttpTokenAuthBodyArgs) GetActionConnectionHttpTokenAuthBodyPtrInput {
	return (*getActionConnectionHttpTokenAuthBodyPtrType)(v)
}

func (*getActionConnectionHttpTokenAuthBodyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetActionConnectionHttpTokenAuthBody)(nil)).Elem()
}

func (i *getActionConnectionHttpTokenAuthBodyPtrType) ToGetActionConnectionHttpTokenAuthBodyPtrOutput() GetActionConnectionHttpTokenAuthBodyPtrOutput {
	return i.ToGetActionConnectionHttpTokenAuthBodyPtrOutputWithContext(context.Background())
}

func (i *getActionConnectionHttpTokenAuthBodyPtrType) ToGetActionConnectionHttpTokenAuthBodyPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthBodyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthBodyPtrOutput)
}

type GetActionConnectionHttpTokenAuthBodyOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpTokenAuthBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttpTokenAuthBody)(nil)).Elem()
}

func (o GetActionConnectionHttpTokenAuthBodyOutput) ToGetActionConnectionHttpTokenAuthBodyOutput() GetActionConnectionHttpTokenAuthBodyOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthBodyOutput) ToGetActionConnectionHttpTokenAuthBodyOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthBodyOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthBodyOutput) ToGetActionConnectionHttpTokenAuthBodyPtrOutput() GetActionConnectionHttpTokenAuthBodyPtrOutput {
	return o.ToGetActionConnectionHttpTokenAuthBodyPtrOutputWithContext(context.Background())
}

func (o GetActionConnectionHttpTokenAuthBodyOutput) ToGetActionConnectionHttpTokenAuthBodyPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthBodyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetActionConnectionHttpTokenAuthBody) *GetActionConnectionHttpTokenAuthBody {
		return &v
	}).(GetActionConnectionHttpTokenAuthBodyPtrOutput)
}

// Serialized body content
func (o GetActionConnectionHttpTokenAuthBodyOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuthBody) string { return v.Content }).(pulumi.StringOutput)
}

// Content type of the body
func (o GetActionConnectionHttpTokenAuthBodyOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuthBody) string { return v.ContentType }).(pulumi.StringOutput)
}

type GetActionConnectionHttpTokenAuthBodyPtrOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpTokenAuthBodyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetActionConnectionHttpTokenAuthBody)(nil)).Elem()
}

func (o GetActionConnectionHttpTokenAuthBodyPtrOutput) ToGetActionConnectionHttpTokenAuthBodyPtrOutput() GetActionConnectionHttpTokenAuthBodyPtrOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthBodyPtrOutput) ToGetActionConnectionHttpTokenAuthBodyPtrOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthBodyPtrOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthBodyPtrOutput) Elem() GetActionConnectionHttpTokenAuthBodyOutput {
	return o.ApplyT(func(v *GetActionConnectionHttpTokenAuthBody) GetActionConnectionHttpTokenAuthBody {
		if v != nil {
			return *v
		}
		var ret GetActionConnectionHttpTokenAuthBody
		return ret
	}).(GetActionConnectionHttpTokenAuthBodyOutput)
}

// Serialized body content
func (o GetActionConnectionHttpTokenAuthBodyPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetActionConnectionHttpTokenAuthBody) *string {
		if v == nil {
			return nil
		}
		return &v.Content
	}).(pulumi.StringPtrOutput)
}

// Content type of the body
func (o GetActionConnectionHttpTokenAuthBodyPtrOutput) ContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetActionConnectionHttpTokenAuthBody) *string {
		if v == nil {
			return nil
		}
		return &v.ContentType
	}).(pulumi.StringPtrOutput)
}

type GetActionConnectionHttpTokenAuthHeader struct {
	// Header name
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetActionConnectionHttpTokenAuthHeaderInput is an input type that accepts GetActionConnectionHttpTokenAuthHeaderArgs and GetActionConnectionHttpTokenAuthHeaderOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpTokenAuthHeaderInput` via:
//
//	GetActionConnectionHttpTokenAuthHeaderArgs{...}
type GetActionConnectionHttpTokenAuthHeaderInput interface {
	pulumi.Input

	ToGetActionConnectionHttpTokenAuthHeaderOutput() GetActionConnectionHttpTokenAuthHeaderOutput
	ToGetActionConnectionHttpTokenAuthHeaderOutputWithContext(context.Context) GetActionConnectionHttpTokenAuthHeaderOutput
}

type GetActionConnectionHttpTokenAuthHeaderArgs struct {
	// Header name
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetActionConnectionHttpTokenAuthHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttpTokenAuthHeader)(nil)).Elem()
}

func (i GetActionConnectionHttpTokenAuthHeaderArgs) ToGetActionConnectionHttpTokenAuthHeaderOutput() GetActionConnectionHttpTokenAuthHeaderOutput {
	return i.ToGetActionConnectionHttpTokenAuthHeaderOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpTokenAuthHeaderArgs) ToGetActionConnectionHttpTokenAuthHeaderOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthHeaderOutput)
}

// GetActionConnectionHttpTokenAuthHeaderArrayInput is an input type that accepts GetActionConnectionHttpTokenAuthHeaderArray and GetActionConnectionHttpTokenAuthHeaderArrayOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpTokenAuthHeaderArrayInput` via:
//
//	GetActionConnectionHttpTokenAuthHeaderArray{ GetActionConnectionHttpTokenAuthHeaderArgs{...} }
type GetActionConnectionHttpTokenAuthHeaderArrayInput interface {
	pulumi.Input

	ToGetActionConnectionHttpTokenAuthHeaderArrayOutput() GetActionConnectionHttpTokenAuthHeaderArrayOutput
	ToGetActionConnectionHttpTokenAuthHeaderArrayOutputWithContext(context.Context) GetActionConnectionHttpTokenAuthHeaderArrayOutput
}

type GetActionConnectionHttpTokenAuthHeaderArray []GetActionConnectionHttpTokenAuthHeaderInput

func (GetActionConnectionHttpTokenAuthHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionConnectionHttpTokenAuthHeader)(nil)).Elem()
}

func (i GetActionConnectionHttpTokenAuthHeaderArray) ToGetActionConnectionHttpTokenAuthHeaderArrayOutput() GetActionConnectionHttpTokenAuthHeaderArrayOutput {
	return i.ToGetActionConnectionHttpTokenAuthHeaderArrayOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpTokenAuthHeaderArray) ToGetActionConnectionHttpTokenAuthHeaderArrayOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthHeaderArrayOutput)
}

type GetActionConnectionHttpTokenAuthHeaderOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpTokenAuthHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttpTokenAuthHeader)(nil)).Elem()
}

func (o GetActionConnectionHttpTokenAuthHeaderOutput) ToGetActionConnectionHttpTokenAuthHeaderOutput() GetActionConnectionHttpTokenAuthHeaderOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthHeaderOutput) ToGetActionConnectionHttpTokenAuthHeaderOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthHeaderOutput {
	return o
}

// Header name
func (o GetActionConnectionHttpTokenAuthHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuthHeader) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetActionConnectionHttpTokenAuthHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuthHeader) string { return v.Value }).(pulumi.StringOutput)
}

type GetActionConnectionHttpTokenAuthHeaderArrayOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpTokenAuthHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionConnectionHttpTokenAuthHeader)(nil)).Elem()
}

func (o GetActionConnectionHttpTokenAuthHeaderArrayOutput) ToGetActionConnectionHttpTokenAuthHeaderArrayOutput() GetActionConnectionHttpTokenAuthHeaderArrayOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthHeaderArrayOutput) ToGetActionConnectionHttpTokenAuthHeaderArrayOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthHeaderArrayOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthHeaderArrayOutput) Index(i pulumi.IntInput) GetActionConnectionHttpTokenAuthHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionConnectionHttpTokenAuthHeader {
		return vs[0].([]GetActionConnectionHttpTokenAuthHeader)[vs[1].(int)]
	}).(GetActionConnectionHttpTokenAuthHeaderOutput)
}

type GetActionConnectionHttpTokenAuthToken struct {
	// Token name
	Name string `pulumi:"name"`
	// Token type
	Type string `pulumi:"type"`
	// Token value
	Value string `pulumi:"value"`
}

// GetActionConnectionHttpTokenAuthTokenInput is an input type that accepts GetActionConnectionHttpTokenAuthTokenArgs and GetActionConnectionHttpTokenAuthTokenOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpTokenAuthTokenInput` via:
//
//	GetActionConnectionHttpTokenAuthTokenArgs{...}
type GetActionConnectionHttpTokenAuthTokenInput interface {
	pulumi.Input

	ToGetActionConnectionHttpTokenAuthTokenOutput() GetActionConnectionHttpTokenAuthTokenOutput
	ToGetActionConnectionHttpTokenAuthTokenOutputWithContext(context.Context) GetActionConnectionHttpTokenAuthTokenOutput
}

type GetActionConnectionHttpTokenAuthTokenArgs struct {
	// Token name
	Name pulumi.StringInput `pulumi:"name"`
	// Token type
	Type pulumi.StringInput `pulumi:"type"`
	// Token value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetActionConnectionHttpTokenAuthTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttpTokenAuthToken)(nil)).Elem()
}

func (i GetActionConnectionHttpTokenAuthTokenArgs) ToGetActionConnectionHttpTokenAuthTokenOutput() GetActionConnectionHttpTokenAuthTokenOutput {
	return i.ToGetActionConnectionHttpTokenAuthTokenOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpTokenAuthTokenArgs) ToGetActionConnectionHttpTokenAuthTokenOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthTokenOutput)
}

// GetActionConnectionHttpTokenAuthTokenArrayInput is an input type that accepts GetActionConnectionHttpTokenAuthTokenArray and GetActionConnectionHttpTokenAuthTokenArrayOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpTokenAuthTokenArrayInput` via:
//
//	GetActionConnectionHttpTokenAuthTokenArray{ GetActionConnectionHttpTokenAuthTokenArgs{...} }
type GetActionConnectionHttpTokenAuthTokenArrayInput interface {
	pulumi.Input

	ToGetActionConnectionHttpTokenAuthTokenArrayOutput() GetActionConnectionHttpTokenAuthTokenArrayOutput
	ToGetActionConnectionHttpTokenAuthTokenArrayOutputWithContext(context.Context) GetActionConnectionHttpTokenAuthTokenArrayOutput
}

type GetActionConnectionHttpTokenAuthTokenArray []GetActionConnectionHttpTokenAuthTokenInput

func (GetActionConnectionHttpTokenAuthTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionConnectionHttpTokenAuthToken)(nil)).Elem()
}

func (i GetActionConnectionHttpTokenAuthTokenArray) ToGetActionConnectionHttpTokenAuthTokenArrayOutput() GetActionConnectionHttpTokenAuthTokenArrayOutput {
	return i.ToGetActionConnectionHttpTokenAuthTokenArrayOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpTokenAuthTokenArray) ToGetActionConnectionHttpTokenAuthTokenArrayOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthTokenArrayOutput)
}

type GetActionConnectionHttpTokenAuthTokenOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpTokenAuthTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttpTokenAuthToken)(nil)).Elem()
}

func (o GetActionConnectionHttpTokenAuthTokenOutput) ToGetActionConnectionHttpTokenAuthTokenOutput() GetActionConnectionHttpTokenAuthTokenOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthTokenOutput) ToGetActionConnectionHttpTokenAuthTokenOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthTokenOutput {
	return o
}

// Token name
func (o GetActionConnectionHttpTokenAuthTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuthToken) string { return v.Name }).(pulumi.StringOutput)
}

// Token type
func (o GetActionConnectionHttpTokenAuthTokenOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuthToken) string { return v.Type }).(pulumi.StringOutput)
}

// Token value
func (o GetActionConnectionHttpTokenAuthTokenOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuthToken) string { return v.Value }).(pulumi.StringOutput)
}

type GetActionConnectionHttpTokenAuthTokenArrayOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpTokenAuthTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionConnectionHttpTokenAuthToken)(nil)).Elem()
}

func (o GetActionConnectionHttpTokenAuthTokenArrayOutput) ToGetActionConnectionHttpTokenAuthTokenArrayOutput() GetActionConnectionHttpTokenAuthTokenArrayOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthTokenArrayOutput) ToGetActionConnectionHttpTokenAuthTokenArrayOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthTokenArrayOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthTokenArrayOutput) Index(i pulumi.IntInput) GetActionConnectionHttpTokenAuthTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionConnectionHttpTokenAuthToken {
		return vs[0].([]GetActionConnectionHttpTokenAuthToken)[vs[1].(int)]
	}).(GetActionConnectionHttpTokenAuthTokenOutput)
}

type GetActionConnectionHttpTokenAuthUrlParameter struct {
	// URL parameter name
	Name string `pulumi:"name"`
	// URL parameter value
	Value string `pulumi:"value"`
}

// GetActionConnectionHttpTokenAuthUrlParameterInput is an input type that accepts GetActionConnectionHttpTokenAuthUrlParameterArgs and GetActionConnectionHttpTokenAuthUrlParameterOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpTokenAuthUrlParameterInput` via:
//
//	GetActionConnectionHttpTokenAuthUrlParameterArgs{...}
type GetActionConnectionHttpTokenAuthUrlParameterInput interface {
	pulumi.Input

	ToGetActionConnectionHttpTokenAuthUrlParameterOutput() GetActionConnectionHttpTokenAuthUrlParameterOutput
	ToGetActionConnectionHttpTokenAuthUrlParameterOutputWithContext(context.Context) GetActionConnectionHttpTokenAuthUrlParameterOutput
}

type GetActionConnectionHttpTokenAuthUrlParameterArgs struct {
	// URL parameter name
	Name pulumi.StringInput `pulumi:"name"`
	// URL parameter value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetActionConnectionHttpTokenAuthUrlParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttpTokenAuthUrlParameter)(nil)).Elem()
}

func (i GetActionConnectionHttpTokenAuthUrlParameterArgs) ToGetActionConnectionHttpTokenAuthUrlParameterOutput() GetActionConnectionHttpTokenAuthUrlParameterOutput {
	return i.ToGetActionConnectionHttpTokenAuthUrlParameterOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpTokenAuthUrlParameterArgs) ToGetActionConnectionHttpTokenAuthUrlParameterOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthUrlParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthUrlParameterOutput)
}

// GetActionConnectionHttpTokenAuthUrlParameterArrayInput is an input type that accepts GetActionConnectionHttpTokenAuthUrlParameterArray and GetActionConnectionHttpTokenAuthUrlParameterArrayOutput values.
// You can construct a concrete instance of `GetActionConnectionHttpTokenAuthUrlParameterArrayInput` via:
//
//	GetActionConnectionHttpTokenAuthUrlParameterArray{ GetActionConnectionHttpTokenAuthUrlParameterArgs{...} }
type GetActionConnectionHttpTokenAuthUrlParameterArrayInput interface {
	pulumi.Input

	ToGetActionConnectionHttpTokenAuthUrlParameterArrayOutput() GetActionConnectionHttpTokenAuthUrlParameterArrayOutput
	ToGetActionConnectionHttpTokenAuthUrlParameterArrayOutputWithContext(context.Context) GetActionConnectionHttpTokenAuthUrlParameterArrayOutput
}

type GetActionConnectionHttpTokenAuthUrlParameterArray []GetActionConnectionHttpTokenAuthUrlParameterInput

func (GetActionConnectionHttpTokenAuthUrlParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionConnectionHttpTokenAuthUrlParameter)(nil)).Elem()
}

func (i GetActionConnectionHttpTokenAuthUrlParameterArray) ToGetActionConnectionHttpTokenAuthUrlParameterArrayOutput() GetActionConnectionHttpTokenAuthUrlParameterArrayOutput {
	return i.ToGetActionConnectionHttpTokenAuthUrlParameterArrayOutputWithContext(context.Background())
}

func (i GetActionConnectionHttpTokenAuthUrlParameterArray) ToGetActionConnectionHttpTokenAuthUrlParameterArrayOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthUrlParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetActionConnectionHttpTokenAuthUrlParameterArrayOutput)
}

type GetActionConnectionHttpTokenAuthUrlParameterOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpTokenAuthUrlParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionConnectionHttpTokenAuthUrlParameter)(nil)).Elem()
}

func (o GetActionConnectionHttpTokenAuthUrlParameterOutput) ToGetActionConnectionHttpTokenAuthUrlParameterOutput() GetActionConnectionHttpTokenAuthUrlParameterOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthUrlParameterOutput) ToGetActionConnectionHttpTokenAuthUrlParameterOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthUrlParameterOutput {
	return o
}

// URL parameter name
func (o GetActionConnectionHttpTokenAuthUrlParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuthUrlParameter) string { return v.Name }).(pulumi.StringOutput)
}

// URL parameter value
func (o GetActionConnectionHttpTokenAuthUrlParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetActionConnectionHttpTokenAuthUrlParameter) string { return v.Value }).(pulumi.StringOutput)
}

type GetActionConnectionHttpTokenAuthUrlParameterArrayOutput struct{ *pulumi.OutputState }

func (GetActionConnectionHttpTokenAuthUrlParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetActionConnectionHttpTokenAuthUrlParameter)(nil)).Elem()
}

func (o GetActionConnectionHttpTokenAuthUrlParameterArrayOutput) ToGetActionConnectionHttpTokenAuthUrlParameterArrayOutput() GetActionConnectionHttpTokenAuthUrlParameterArrayOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthUrlParameterArrayOutput) ToGetActionConnectionHttpTokenAuthUrlParameterArrayOutputWithContext(ctx context.Context) GetActionConnectionHttpTokenAuthUrlParameterArrayOutput {
	return o
}

func (o GetActionConnectionHttpTokenAuthUrlParameterArrayOutput) Index(i pulumi.IntInput) GetActionConnectionHttpTokenAuthUrlParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetActionConnectionHttpTokenAuthUrlParameter {
		return vs[0].([]GetActionConnectionHttpTokenAuthUrlParameter)[vs[1].(int)]
	}).(GetActionConnectionHttpTokenAuthUrlParameterOutput)
}

type GetCloudWorkloadSecurityAgentRulesAgentRule struct {
	// The description of the Agent rule.
	Description string `pulumi:"description"`
	// Whether the Agent rule is enabled.
	Enabled bool `pulumi:"enabled"`
	// The SECL expression of the Agent rule.
	Expression string `pulumi:"expression"`
	// The id of the Agent rule.
	Id string `pulumi:"id"`
	// The name of the Agent rule.
	Name string `pulumi:"name"`
}

// GetCloudWorkloadSecurityAgentRulesAgentRuleInput is an input type that accepts GetCloudWorkloadSecurityAgentRulesAgentRuleArgs and GetCloudWorkloadSecurityAgentRulesAgentRuleOutput values.
// You can construct a concrete instance of `GetCloudWorkloadSecurityAgentRulesAgentRuleInput` via:
//
//	GetCloudWorkloadSecurityAgentRulesAgentRuleArgs{...}
type GetCloudWorkloadSecurityAgentRulesAgentRuleInput interface {
	pulumi.Input

	ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleOutput
	ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleArgs struct {
	// The description of the Agent rule.
	Description pulumi.StringInput `pulumi:"description"`
	// Whether the Agent rule is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The SECL expression of the Agent rule.
	Expression pulumi.StringInput `pulumi:"expression"`
	// The id of the Agent rule.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Agent rule.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetCloudWorkloadSecurityAgentRulesAgentRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArgs) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return i.ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(context.Background())
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArgs) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudWorkloadSecurityAgentRulesAgentRuleOutput)
}

// GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput is an input type that accepts GetCloudWorkloadSecurityAgentRulesAgentRuleArray and GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput values.
// You can construct a concrete instance of `GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput` via:
//
//	GetCloudWorkloadSecurityAgentRulesAgentRuleArray{ GetCloudWorkloadSecurityAgentRulesAgentRuleArgs{...} }
type GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput interface {
	pulumi.Input

	ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput
	ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleArray []GetCloudWorkloadSecurityAgentRulesAgentRuleInput

func (GetCloudWorkloadSecurityAgentRulesAgentRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArray) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return i.ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(context.Background())
}

func (i GetCloudWorkloadSecurityAgentRulesAgentRuleArray) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput)
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleOutput struct{ *pulumi.OutputState }

func (GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return o
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return o
}

// The description of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Description }).(pulumi.StringOutput)
}

// Whether the Agent rule is enabled.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The SECL expression of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Expression }).(pulumi.StringOutput)
}

// The id of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Agent rule.
func (o GetCloudWorkloadSecurityAgentRulesAgentRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudWorkloadSecurityAgentRulesAgentRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudWorkloadSecurityAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput() GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) ToGetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput) Index(i pulumi.IntInput) GetCloudWorkloadSecurityAgentRulesAgentRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudWorkloadSecurityAgentRulesAgentRule {
		return vs[0].([]GetCloudWorkloadSecurityAgentRulesAgentRule)[vs[1].(int)]
	}).(GetCloudWorkloadSecurityAgentRulesAgentRuleOutput)
}

type GetCsmThreatsAgentRulesAgentRule struct {
	Description string `pulumi:"description"`
	Enabled     bool   `pulumi:"enabled"`
	Expression  string `pulumi:"expression"`
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
}

// GetCsmThreatsAgentRulesAgentRuleInput is an input type that accepts GetCsmThreatsAgentRulesAgentRuleArgs and GetCsmThreatsAgentRulesAgentRuleOutput values.
// You can construct a concrete instance of `GetCsmThreatsAgentRulesAgentRuleInput` via:
//
//	GetCsmThreatsAgentRulesAgentRuleArgs{...}
type GetCsmThreatsAgentRulesAgentRuleInput interface {
	pulumi.Input

	ToGetCsmThreatsAgentRulesAgentRuleOutput() GetCsmThreatsAgentRulesAgentRuleOutput
	ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(context.Context) GetCsmThreatsAgentRulesAgentRuleOutput
}

type GetCsmThreatsAgentRulesAgentRuleArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Enabled     pulumi.BoolInput   `pulumi:"enabled"`
	Expression  pulumi.StringInput `pulumi:"expression"`
	Id          pulumi.StringInput `pulumi:"id"`
	Name        pulumi.StringInput `pulumi:"name"`
}

func (GetCsmThreatsAgentRulesAgentRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCsmThreatsAgentRulesAgentRuleArgs) ToGetCsmThreatsAgentRulesAgentRuleOutput() GetCsmThreatsAgentRulesAgentRuleOutput {
	return i.ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(context.Background())
}

func (i GetCsmThreatsAgentRulesAgentRuleArgs) ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsmThreatsAgentRulesAgentRuleOutput)
}

// GetCsmThreatsAgentRulesAgentRuleArrayInput is an input type that accepts GetCsmThreatsAgentRulesAgentRuleArray and GetCsmThreatsAgentRulesAgentRuleArrayOutput values.
// You can construct a concrete instance of `GetCsmThreatsAgentRulesAgentRuleArrayInput` via:
//
//	GetCsmThreatsAgentRulesAgentRuleArray{ GetCsmThreatsAgentRulesAgentRuleArgs{...} }
type GetCsmThreatsAgentRulesAgentRuleArrayInput interface {
	pulumi.Input

	ToGetCsmThreatsAgentRulesAgentRuleArrayOutput() GetCsmThreatsAgentRulesAgentRuleArrayOutput
	ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(context.Context) GetCsmThreatsAgentRulesAgentRuleArrayOutput
}

type GetCsmThreatsAgentRulesAgentRuleArray []GetCsmThreatsAgentRulesAgentRuleInput

func (GetCsmThreatsAgentRulesAgentRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (i GetCsmThreatsAgentRulesAgentRuleArray) ToGetCsmThreatsAgentRulesAgentRuleArrayOutput() GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return i.ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(context.Background())
}

func (i GetCsmThreatsAgentRulesAgentRuleArray) ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCsmThreatsAgentRulesAgentRuleArrayOutput)
}

type GetCsmThreatsAgentRulesAgentRuleOutput struct{ *pulumi.OutputState }

func (GetCsmThreatsAgentRulesAgentRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) ToGetCsmThreatsAgentRulesAgentRuleOutput() GetCsmThreatsAgentRulesAgentRuleOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) ToGetCsmThreatsAgentRulesAgentRuleOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Expression }).(pulumi.StringOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCsmThreatsAgentRulesAgentRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCsmThreatsAgentRulesAgentRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetCsmThreatsAgentRulesAgentRuleArrayOutput struct{ *pulumi.OutputState }

func (GetCsmThreatsAgentRulesAgentRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCsmThreatsAgentRulesAgentRule)(nil)).Elem()
}

func (o GetCsmThreatsAgentRulesAgentRuleArrayOutput) ToGetCsmThreatsAgentRulesAgentRuleArrayOutput() GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleArrayOutput) ToGetCsmThreatsAgentRulesAgentRuleArrayOutputWithContext(ctx context.Context) GetCsmThreatsAgentRulesAgentRuleArrayOutput {
	return o
}

func (o GetCsmThreatsAgentRulesAgentRuleArrayOutput) Index(i pulumi.IntInput) GetCsmThreatsAgentRulesAgentRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCsmThreatsAgentRulesAgentRule {
		return vs[0].([]GetCsmThreatsAgentRulesAgentRule)[vs[1].(int)]
	}).(GetCsmThreatsAgentRulesAgentRuleOutput)
}

type GetHostsHostList struct {
	Aliases          []string                `pulumi:"aliases"`
	Apps             []string                `pulumi:"apps"`
	AwsName          string                  `pulumi:"awsName"`
	HostName         string                  `pulumi:"hostName"`
	Id               int                     `pulumi:"id"`
	IsMuted          bool                    `pulumi:"isMuted"`
	LastReportedTime int                     `pulumi:"lastReportedTime"`
	Meta             GetHostsHostListMeta    `pulumi:"meta"`
	Metrics          GetHostsHostListMetrics `pulumi:"metrics"`
	MuteTimeout      int                     `pulumi:"muteTimeout"`
	Name             string                  `pulumi:"name"`
	Sources          []string                `pulumi:"sources"`
	TagsBySource     map[string][]string     `pulumi:"tagsBySource"`
	Up               bool                    `pulumi:"up"`
}

// GetHostsHostListInput is an input type that accepts GetHostsHostListArgs and GetHostsHostListOutput values.
// You can construct a concrete instance of `GetHostsHostListInput` via:
//
//	GetHostsHostListArgs{...}
type GetHostsHostListInput interface {
	pulumi.Input

	ToGetHostsHostListOutput() GetHostsHostListOutput
	ToGetHostsHostListOutputWithContext(context.Context) GetHostsHostListOutput
}

type GetHostsHostListArgs struct {
	Aliases          pulumi.StringArrayInput      `pulumi:"aliases"`
	Apps             pulumi.StringArrayInput      `pulumi:"apps"`
	AwsName          pulumi.StringInput           `pulumi:"awsName"`
	HostName         pulumi.StringInput           `pulumi:"hostName"`
	Id               pulumi.IntInput              `pulumi:"id"`
	IsMuted          pulumi.BoolInput             `pulumi:"isMuted"`
	LastReportedTime pulumi.IntInput              `pulumi:"lastReportedTime"`
	Meta             GetHostsHostListMetaInput    `pulumi:"meta"`
	Metrics          GetHostsHostListMetricsInput `pulumi:"metrics"`
	MuteTimeout      pulumi.IntInput              `pulumi:"muteTimeout"`
	Name             pulumi.StringInput           `pulumi:"name"`
	Sources          pulumi.StringArrayInput      `pulumi:"sources"`
	TagsBySource     pulumi.StringArrayMapInput   `pulumi:"tagsBySource"`
	Up               pulumi.BoolInput             `pulumi:"up"`
}

func (GetHostsHostListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostList)(nil)).Elem()
}

func (i GetHostsHostListArgs) ToGetHostsHostListOutput() GetHostsHostListOutput {
	return i.ToGetHostsHostListOutputWithContext(context.Background())
}

func (i GetHostsHostListArgs) ToGetHostsHostListOutputWithContext(ctx context.Context) GetHostsHostListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListOutput)
}

// GetHostsHostListArrayInput is an input type that accepts GetHostsHostListArray and GetHostsHostListArrayOutput values.
// You can construct a concrete instance of `GetHostsHostListArrayInput` via:
//
//	GetHostsHostListArray{ GetHostsHostListArgs{...} }
type GetHostsHostListArrayInput interface {
	pulumi.Input

	ToGetHostsHostListArrayOutput() GetHostsHostListArrayOutput
	ToGetHostsHostListArrayOutputWithContext(context.Context) GetHostsHostListArrayOutput
}

type GetHostsHostListArray []GetHostsHostListInput

func (GetHostsHostListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHostList)(nil)).Elem()
}

func (i GetHostsHostListArray) ToGetHostsHostListArrayOutput() GetHostsHostListArrayOutput {
	return i.ToGetHostsHostListArrayOutputWithContext(context.Background())
}

func (i GetHostsHostListArray) ToGetHostsHostListArrayOutputWithContext(ctx context.Context) GetHostsHostListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListArrayOutput)
}

type GetHostsHostListOutput struct{ *pulumi.OutputState }

func (GetHostsHostListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostList)(nil)).Elem()
}

func (o GetHostsHostListOutput) ToGetHostsHostListOutput() GetHostsHostListOutput {
	return o
}

func (o GetHostsHostListOutput) ToGetHostsHostListOutputWithContext(ctx context.Context) GetHostsHostListOutput {
	return o
}

func (o GetHostsHostListOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostsHostList) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

func (o GetHostsHostListOutput) Apps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostsHostList) []string { return v.Apps }).(pulumi.StringArrayOutput)
}

func (o GetHostsHostListOutput) AwsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostList) string { return v.AwsName }).(pulumi.StringOutput)
}

func (o GetHostsHostListOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostList) string { return v.HostName }).(pulumi.StringOutput)
}

func (o GetHostsHostListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostList) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetHostsHostListOutput) IsMuted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostsHostList) bool { return v.IsMuted }).(pulumi.BoolOutput)
}

func (o GetHostsHostListOutput) LastReportedTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostList) int { return v.LastReportedTime }).(pulumi.IntOutput)
}

func (o GetHostsHostListOutput) Meta() GetHostsHostListMetaOutput {
	return o.ApplyT(func(v GetHostsHostList) GetHostsHostListMeta { return v.Meta }).(GetHostsHostListMetaOutput)
}

func (o GetHostsHostListOutput) Metrics() GetHostsHostListMetricsOutput {
	return o.ApplyT(func(v GetHostsHostList) GetHostsHostListMetrics { return v.Metrics }).(GetHostsHostListMetricsOutput)
}

func (o GetHostsHostListOutput) MuteTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostList) int { return v.MuteTimeout }).(pulumi.IntOutput)
}

func (o GetHostsHostListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostList) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetHostsHostListOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHostsHostList) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

func (o GetHostsHostListOutput) TagsBySource() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetHostsHostList) map[string][]string { return v.TagsBySource }).(pulumi.StringArrayMapOutput)
}

func (o GetHostsHostListOutput) Up() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHostsHostList) bool { return v.Up }).(pulumi.BoolOutput)
}

type GetHostsHostListArrayOutput struct{ *pulumi.OutputState }

func (GetHostsHostListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHostsHostList)(nil)).Elem()
}

func (o GetHostsHostListArrayOutput) ToGetHostsHostListArrayOutput() GetHostsHostListArrayOutput {
	return o
}

func (o GetHostsHostListArrayOutput) ToGetHostsHostListArrayOutputWithContext(ctx context.Context) GetHostsHostListArrayOutput {
	return o
}

func (o GetHostsHostListArrayOutput) Index(i pulumi.IntInput) GetHostsHostListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHostsHostList {
		return vs[0].([]GetHostsHostList)[vs[1].(int)]
	}).(GetHostsHostListOutput)
}

type GetHostsHostListMeta struct {
	AgentVersion   string `pulumi:"agentVersion"`
	CpuCores       int    `pulumi:"cpuCores"`
	Gohai          string `pulumi:"gohai"`
	Machine        string `pulumi:"machine"`
	Platform       string `pulumi:"platform"`
	Processor      string `pulumi:"processor"`
	PythonVersion  string `pulumi:"pythonVersion"`
	SocketFqdn     string `pulumi:"socketFqdn"`
	SocketHostname string `pulumi:"socketHostname"`
}

// GetHostsHostListMetaInput is an input type that accepts GetHostsHostListMetaArgs and GetHostsHostListMetaOutput values.
// You can construct a concrete instance of `GetHostsHostListMetaInput` via:
//
//	GetHostsHostListMetaArgs{...}
type GetHostsHostListMetaInput interface {
	pulumi.Input

	ToGetHostsHostListMetaOutput() GetHostsHostListMetaOutput
	ToGetHostsHostListMetaOutputWithContext(context.Context) GetHostsHostListMetaOutput
}

type GetHostsHostListMetaArgs struct {
	AgentVersion   pulumi.StringInput `pulumi:"agentVersion"`
	CpuCores       pulumi.IntInput    `pulumi:"cpuCores"`
	Gohai          pulumi.StringInput `pulumi:"gohai"`
	Machine        pulumi.StringInput `pulumi:"machine"`
	Platform       pulumi.StringInput `pulumi:"platform"`
	Processor      pulumi.StringInput `pulumi:"processor"`
	PythonVersion  pulumi.StringInput `pulumi:"pythonVersion"`
	SocketFqdn     pulumi.StringInput `pulumi:"socketFqdn"`
	SocketHostname pulumi.StringInput `pulumi:"socketHostname"`
}

func (GetHostsHostListMetaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMeta)(nil)).Elem()
}

func (i GetHostsHostListMetaArgs) ToGetHostsHostListMetaOutput() GetHostsHostListMetaOutput {
	return i.ToGetHostsHostListMetaOutputWithContext(context.Background())
}

func (i GetHostsHostListMetaArgs) ToGetHostsHostListMetaOutputWithContext(ctx context.Context) GetHostsHostListMetaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListMetaOutput)
}

type GetHostsHostListMetaOutput struct{ *pulumi.OutputState }

func (GetHostsHostListMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMeta)(nil)).Elem()
}

func (o GetHostsHostListMetaOutput) ToGetHostsHostListMetaOutput() GetHostsHostListMetaOutput {
	return o
}

func (o GetHostsHostListMetaOutput) ToGetHostsHostListMetaOutputWithContext(ctx context.Context) GetHostsHostListMetaOutput {
	return o
}

func (o GetHostsHostListMetaOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.AgentVersion }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) CpuCores() pulumi.IntOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) int { return v.CpuCores }).(pulumi.IntOutput)
}

func (o GetHostsHostListMetaOutput) Gohai() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Gohai }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) Machine() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Machine }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Platform }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) Processor() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.Processor }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) PythonVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.PythonVersion }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) SocketFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.SocketFqdn }).(pulumi.StringOutput)
}

func (o GetHostsHostListMetaOutput) SocketHostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetHostsHostListMeta) string { return v.SocketHostname }).(pulumi.StringOutput)
}

type GetHostsHostListMetrics struct {
	Cpu    float64 `pulumi:"cpu"`
	Iowait float64 `pulumi:"iowait"`
	Load   float64 `pulumi:"load"`
}

// GetHostsHostListMetricsInput is an input type that accepts GetHostsHostListMetricsArgs and GetHostsHostListMetricsOutput values.
// You can construct a concrete instance of `GetHostsHostListMetricsInput` via:
//
//	GetHostsHostListMetricsArgs{...}
type GetHostsHostListMetricsInput interface {
	pulumi.Input

	ToGetHostsHostListMetricsOutput() GetHostsHostListMetricsOutput
	ToGetHostsHostListMetricsOutputWithContext(context.Context) GetHostsHostListMetricsOutput
}

type GetHostsHostListMetricsArgs struct {
	Cpu    pulumi.Float64Input `pulumi:"cpu"`
	Iowait pulumi.Float64Input `pulumi:"iowait"`
	Load   pulumi.Float64Input `pulumi:"load"`
}

func (GetHostsHostListMetricsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMetrics)(nil)).Elem()
}

func (i GetHostsHostListMetricsArgs) ToGetHostsHostListMetricsOutput() GetHostsHostListMetricsOutput {
	return i.ToGetHostsHostListMetricsOutputWithContext(context.Background())
}

func (i GetHostsHostListMetricsArgs) ToGetHostsHostListMetricsOutputWithContext(ctx context.Context) GetHostsHostListMetricsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHostsHostListMetricsOutput)
}

type GetHostsHostListMetricsOutput struct{ *pulumi.OutputState }

func (GetHostsHostListMetricsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHostsHostListMetrics)(nil)).Elem()
}

func (o GetHostsHostListMetricsOutput) ToGetHostsHostListMetricsOutput() GetHostsHostListMetricsOutput {
	return o
}

func (o GetHostsHostListMetricsOutput) ToGetHostsHostListMetricsOutputWithContext(ctx context.Context) GetHostsHostListMetricsOutput {
	return o
}

func (o GetHostsHostListMetricsOutput) Cpu() pulumi.Float64Output {
	return o.ApplyT(func(v GetHostsHostListMetrics) float64 { return v.Cpu }).(pulumi.Float64Output)
}

func (o GetHostsHostListMetricsOutput) Iowait() pulumi.Float64Output {
	return o.ApplyT(func(v GetHostsHostListMetrics) float64 { return v.Iowait }).(pulumi.Float64Output)
}

func (o GetHostsHostListMetricsOutput) Load() pulumi.Float64Output {
	return o.ApplyT(func(v GetHostsHostListMetrics) float64 { return v.Load }).(pulumi.Float64Output)
}

type GetLogsIndexesLogsIndex struct {
	// The number of log events you can send in this index per day before you are rate-limited.
	DailyLimit int `pulumi:"dailyLimit"`
	// Object containing options to override the default daily limit reset time.
	DailyLimitResets []GetLogsIndexesLogsIndexDailyLimitReset `pulumi:"dailyLimitResets"`
	// The percentage threshold of the daily quota at which a Datadog warning event is generated.
	DailyLimitWarningThresholdPercentage float64 `pulumi:"dailyLimitWarningThresholdPercentage"`
	// List of exclusion filters.
	ExclusionFilters []GetLogsIndexesLogsIndexExclusionFilter `pulumi:"exclusionFilters"`
	// Logs filter
	Filters []GetLogsIndexesLogsIndexFilter `pulumi:"filters"`
	// The total number of days logs are stored in Standard and Flex Tier before being deleted from the index.
	FlexRetentionDays int `pulumi:"flexRetentionDays"`
	// The name of the index.
	Name string `pulumi:"name"`
	// The number of days logs are stored in Standard Tier before aging into the Flex Tier or being deleted from the index.
	RetentionDays int `pulumi:"retentionDays"`
}

// GetLogsIndexesLogsIndexInput is an input type that accepts GetLogsIndexesLogsIndexArgs and GetLogsIndexesLogsIndexOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexInput` via:
//
//	GetLogsIndexesLogsIndexArgs{...}
type GetLogsIndexesLogsIndexInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexOutput() GetLogsIndexesLogsIndexOutput
	ToGetLogsIndexesLogsIndexOutputWithContext(context.Context) GetLogsIndexesLogsIndexOutput
}

type GetLogsIndexesLogsIndexArgs struct {
	// The number of log events you can send in this index per day before you are rate-limited.
	DailyLimit pulumi.IntInput `pulumi:"dailyLimit"`
	// Object containing options to override the default daily limit reset time.
	DailyLimitResets GetLogsIndexesLogsIndexDailyLimitResetArrayInput `pulumi:"dailyLimitResets"`
	// The percentage threshold of the daily quota at which a Datadog warning event is generated.
	DailyLimitWarningThresholdPercentage pulumi.Float64Input `pulumi:"dailyLimitWarningThresholdPercentage"`
	// List of exclusion filters.
	ExclusionFilters GetLogsIndexesLogsIndexExclusionFilterArrayInput `pulumi:"exclusionFilters"`
	// Logs filter
	Filters GetLogsIndexesLogsIndexFilterArrayInput `pulumi:"filters"`
	// The total number of days logs are stored in Standard and Flex Tier before being deleted from the index.
	FlexRetentionDays pulumi.IntInput `pulumi:"flexRetentionDays"`
	// The name of the index.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of days logs are stored in Standard Tier before aging into the Flex Tier or being deleted from the index.
	RetentionDays pulumi.IntInput `pulumi:"retentionDays"`
}

func (GetLogsIndexesLogsIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexArgs) ToGetLogsIndexesLogsIndexOutput() GetLogsIndexesLogsIndexOutput {
	return i.ToGetLogsIndexesLogsIndexOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexArgs) ToGetLogsIndexesLogsIndexOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexOutput)
}

// GetLogsIndexesLogsIndexArrayInput is an input type that accepts GetLogsIndexesLogsIndexArray and GetLogsIndexesLogsIndexArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexArrayInput` via:
//
//	GetLogsIndexesLogsIndexArray{ GetLogsIndexesLogsIndexArgs{...} }
type GetLogsIndexesLogsIndexArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexArrayOutput() GetLogsIndexesLogsIndexArrayOutput
	ToGetLogsIndexesLogsIndexArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexArrayOutput
}

type GetLogsIndexesLogsIndexArray []GetLogsIndexesLogsIndexInput

func (GetLogsIndexesLogsIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexArray) ToGetLogsIndexesLogsIndexArrayOutput() GetLogsIndexesLogsIndexArrayOutput {
	return i.ToGetLogsIndexesLogsIndexArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexArray) ToGetLogsIndexesLogsIndexArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexArrayOutput)
}

type GetLogsIndexesLogsIndexOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexOutput) ToGetLogsIndexesLogsIndexOutput() GetLogsIndexesLogsIndexOutput {
	return o
}

func (o GetLogsIndexesLogsIndexOutput) ToGetLogsIndexesLogsIndexOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexOutput {
	return o
}

// The number of log events you can send in this index per day before you are rate-limited.
func (o GetLogsIndexesLogsIndexOutput) DailyLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) int { return v.DailyLimit }).(pulumi.IntOutput)
}

// Object containing options to override the default daily limit reset time.
func (o GetLogsIndexesLogsIndexOutput) DailyLimitResets() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) []GetLogsIndexesLogsIndexDailyLimitReset { return v.DailyLimitResets }).(GetLogsIndexesLogsIndexDailyLimitResetArrayOutput)
}

// The percentage threshold of the daily quota at which a Datadog warning event is generated.
func (o GetLogsIndexesLogsIndexOutput) DailyLimitWarningThresholdPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) float64 { return v.DailyLimitWarningThresholdPercentage }).(pulumi.Float64Output)
}

// List of exclusion filters.
func (o GetLogsIndexesLogsIndexOutput) ExclusionFilters() GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) []GetLogsIndexesLogsIndexExclusionFilter { return v.ExclusionFilters }).(GetLogsIndexesLogsIndexExclusionFilterArrayOutput)
}

// Logs filter
func (o GetLogsIndexesLogsIndexOutput) Filters() GetLogsIndexesLogsIndexFilterArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) []GetLogsIndexesLogsIndexFilter { return v.Filters }).(GetLogsIndexesLogsIndexFilterArrayOutput)
}

// The total number of days logs are stored in Standard and Flex Tier before being deleted from the index.
func (o GetLogsIndexesLogsIndexOutput) FlexRetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) int { return v.FlexRetentionDays }).(pulumi.IntOutput)
}

// The name of the index.
func (o GetLogsIndexesLogsIndexOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) string { return v.Name }).(pulumi.StringOutput)
}

// The number of days logs are stored in Standard Tier before aging into the Flex Tier or being deleted from the index.
func (o GetLogsIndexesLogsIndexOutput) RetentionDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndex) int { return v.RetentionDays }).(pulumi.IntOutput)
}

type GetLogsIndexesLogsIndexArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndex)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexArrayOutput) ToGetLogsIndexesLogsIndexArrayOutput() GetLogsIndexesLogsIndexArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexArrayOutput) ToGetLogsIndexesLogsIndexArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndex {
		return vs[0].([]GetLogsIndexesLogsIndex)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexOutput)
}

type GetLogsIndexesLogsIndexDailyLimitReset struct {
	// String in `HH:00` format representing the time of day the daily limit should be reset. The hours between 00 and 23 (inclusive).
	ResetTime string `pulumi:"resetTime"`
	// String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours between -12 and +14 (inclusive).
	ResetUtcOffset string `pulumi:"resetUtcOffset"`
}

// GetLogsIndexesLogsIndexDailyLimitResetInput is an input type that accepts GetLogsIndexesLogsIndexDailyLimitResetArgs and GetLogsIndexesLogsIndexDailyLimitResetOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexDailyLimitResetInput` via:
//
//	GetLogsIndexesLogsIndexDailyLimitResetArgs{...}
type GetLogsIndexesLogsIndexDailyLimitResetInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexDailyLimitResetOutput() GetLogsIndexesLogsIndexDailyLimitResetOutput
	ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(context.Context) GetLogsIndexesLogsIndexDailyLimitResetOutput
}

type GetLogsIndexesLogsIndexDailyLimitResetArgs struct {
	// String in `HH:00` format representing the time of day the daily limit should be reset. The hours between 00 and 23 (inclusive).
	ResetTime pulumi.StringInput `pulumi:"resetTime"`
	// String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours between -12 and +14 (inclusive).
	ResetUtcOffset pulumi.StringInput `pulumi:"resetUtcOffset"`
}

func (GetLogsIndexesLogsIndexDailyLimitResetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArgs) ToGetLogsIndexesLogsIndexDailyLimitResetOutput() GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return i.ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArgs) ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexDailyLimitResetOutput)
}

// GetLogsIndexesLogsIndexDailyLimitResetArrayInput is an input type that accepts GetLogsIndexesLogsIndexDailyLimitResetArray and GetLogsIndexesLogsIndexDailyLimitResetArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexDailyLimitResetArrayInput` via:
//
//	GetLogsIndexesLogsIndexDailyLimitResetArray{ GetLogsIndexesLogsIndexDailyLimitResetArgs{...} }
type GetLogsIndexesLogsIndexDailyLimitResetArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutput() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput
	ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexDailyLimitResetArrayOutput
}

type GetLogsIndexesLogsIndexDailyLimitResetArray []GetLogsIndexesLogsIndexDailyLimitResetInput

func (GetLogsIndexesLogsIndexDailyLimitResetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArray) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutput() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return i.ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexDailyLimitResetArray) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexDailyLimitResetArrayOutput)
}

type GetLogsIndexesLogsIndexDailyLimitResetOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexDailyLimitResetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ToGetLogsIndexesLogsIndexDailyLimitResetOutput() GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return o
}

func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ToGetLogsIndexesLogsIndexDailyLimitResetOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return o
}

// String in `HH:00` format representing the time of day the daily limit should be reset. The hours between 00 and 23 (inclusive).
func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ResetTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexDailyLimitReset) string { return v.ResetTime }).(pulumi.StringOutput)
}

// String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours between -12 and +14 (inclusive).
func (o GetLogsIndexesLogsIndexDailyLimitResetOutput) ResetUtcOffset() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexDailyLimitReset) string { return v.ResetUtcOffset }).(pulumi.StringOutput)
}

type GetLogsIndexesLogsIndexDailyLimitResetArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexDailyLimitReset)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutput() GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) ToGetLogsIndexesLogsIndexDailyLimitResetArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexDailyLimitResetArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexDailyLimitResetArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexDailyLimitResetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexDailyLimitReset {
		return vs[0].([]GetLogsIndexesLogsIndexDailyLimitReset)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexDailyLimitResetOutput)
}

type GetLogsIndexesLogsIndexExclusionFilter struct {
	Filters []GetLogsIndexesLogsIndexExclusionFilterFilter `pulumi:"filters"`
	// A boolean stating if the exclusion is active or not.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the exclusion filter.
	Name string `pulumi:"name"`
}

// GetLogsIndexesLogsIndexExclusionFilterInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterArgs and GetLogsIndexesLogsIndexExclusionFilterOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterArgs{...}
type GetLogsIndexesLogsIndexExclusionFilterInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterOutput() GetLogsIndexesLogsIndexExclusionFilterOutput
	ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterOutput
}

type GetLogsIndexesLogsIndexExclusionFilterArgs struct {
	Filters GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput `pulumi:"filters"`
	// A boolean stating if the exclusion is active or not.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the exclusion filter.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLogsIndexesLogsIndexExclusionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterOutput() GetLogsIndexesLogsIndexExclusionFilterOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterOutput)
}

// GetLogsIndexesLogsIndexExclusionFilterArrayInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterArray and GetLogsIndexesLogsIndexExclusionFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterArrayInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterArray{ GetLogsIndexesLogsIndexExclusionFilterArgs{...} }
type GetLogsIndexesLogsIndexExclusionFilterArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterArrayOutput
	ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterArrayOutput
}

type GetLogsIndexesLogsIndexExclusionFilterArray []GetLogsIndexesLogsIndexExclusionFilterInput

func (GetLogsIndexesLogsIndexExclusionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterArrayOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterOutput() GetLogsIndexesLogsIndexExclusionFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterOutput) Filters() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilter) []GetLogsIndexesLogsIndexExclusionFilterFilter {
		return v.Filters
	}).(GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput)
}

// A boolean stating if the exclusion is active or not.
func (o GetLogsIndexesLogsIndexExclusionFilterOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilter) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the exclusion filter.
func (o GetLogsIndexesLogsIndexExclusionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilter) string { return v.Name }).(pulumi.StringOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexExclusionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexExclusionFilter {
		return vs[0].([]GetLogsIndexesLogsIndexExclusionFilter)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexExclusionFilterOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterFilter struct {
	// Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.
	Query string `pulumi:"query"`
	// The fraction of logs excluded by the exclusion filter, when active.
	SampleRate float64 `pulumi:"sampleRate"`
}

// GetLogsIndexesLogsIndexExclusionFilterFilterInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterFilterArgs and GetLogsIndexesLogsIndexExclusionFilterFilterOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterFilterInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterFilterArgs{...}
type GetLogsIndexesLogsIndexExclusionFilterFilterInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterFilterOutput() GetLogsIndexesLogsIndexExclusionFilterFilterOutput
	ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterOutput
}

type GetLogsIndexesLogsIndexExclusionFilterFilterArgs struct {
	// Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.
	Query pulumi.StringInput `pulumi:"query"`
	// The fraction of logs excluded by the exclusion filter, when active.
	SampleRate pulumi.Float64Input `pulumi:"sampleRate"`
}

func (GetLogsIndexesLogsIndexExclusionFilterFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutput() GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArgs) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterFilterOutput)
}

// GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput is an input type that accepts GetLogsIndexesLogsIndexExclusionFilterFilterArray and GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput` via:
//
//	GetLogsIndexesLogsIndexExclusionFilterFilterArray{ GetLogsIndexesLogsIndexExclusionFilterFilterArgs{...} }
type GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput
	ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput
}

type GetLogsIndexesLogsIndexExclusionFilterFilterArray []GetLogsIndexesLogsIndexExclusionFilterFilterInput

func (GetLogsIndexesLogsIndexExclusionFilterFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return i.ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexExclusionFilterFilterArray) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput)
}

type GetLogsIndexesLogsIndexExclusionFilterFilterOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutput() GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return o
}

// Only logs matching the filter criteria and the query of the parent index will be considered for this exclusion filter.
func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilterFilter) string { return v.Query }).(pulumi.StringOutput)
}

// The fraction of logs excluded by the exclusion filter, when active.
func (o GetLogsIndexesLogsIndexExclusionFilterFilterOutput) SampleRate() pulumi.Float64Output {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexExclusionFilterFilter) float64 { return v.SampleRate }).(pulumi.Float64Output)
}

type GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexExclusionFilterFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput() GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) ToGetLogsIndexesLogsIndexExclusionFilterFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexExclusionFilterFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexExclusionFilterFilter {
		return vs[0].([]GetLogsIndexesLogsIndexExclusionFilterFilter)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexExclusionFilterFilterOutput)
}

type GetLogsIndexesLogsIndexFilter struct {
	// Logs filter criteria. Only logs matching this filter criteria are considered for this index.
	Query string `pulumi:"query"`
}

// GetLogsIndexesLogsIndexFilterInput is an input type that accepts GetLogsIndexesLogsIndexFilterArgs and GetLogsIndexesLogsIndexFilterOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexFilterInput` via:
//
//	GetLogsIndexesLogsIndexFilterArgs{...}
type GetLogsIndexesLogsIndexFilterInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexFilterOutput() GetLogsIndexesLogsIndexFilterOutput
	ToGetLogsIndexesLogsIndexFilterOutputWithContext(context.Context) GetLogsIndexesLogsIndexFilterOutput
}

type GetLogsIndexesLogsIndexFilterArgs struct {
	// Logs filter criteria. Only logs matching this filter criteria are considered for this index.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetLogsIndexesLogsIndexFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexFilterArgs) ToGetLogsIndexesLogsIndexFilterOutput() GetLogsIndexesLogsIndexFilterOutput {
	return i.ToGetLogsIndexesLogsIndexFilterOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexFilterArgs) ToGetLogsIndexesLogsIndexFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexFilterOutput)
}

// GetLogsIndexesLogsIndexFilterArrayInput is an input type that accepts GetLogsIndexesLogsIndexFilterArray and GetLogsIndexesLogsIndexFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsIndexesLogsIndexFilterArrayInput` via:
//
//	GetLogsIndexesLogsIndexFilterArray{ GetLogsIndexesLogsIndexFilterArgs{...} }
type GetLogsIndexesLogsIndexFilterArrayInput interface {
	pulumi.Input

	ToGetLogsIndexesLogsIndexFilterArrayOutput() GetLogsIndexesLogsIndexFilterArrayOutput
	ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(context.Context) GetLogsIndexesLogsIndexFilterArrayOutput
}

type GetLogsIndexesLogsIndexFilterArray []GetLogsIndexesLogsIndexFilterInput

func (GetLogsIndexesLogsIndexFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (i GetLogsIndexesLogsIndexFilterArray) ToGetLogsIndexesLogsIndexFilterArrayOutput() GetLogsIndexesLogsIndexFilterArrayOutput {
	return i.ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsIndexesLogsIndexFilterArray) ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsIndexesLogsIndexFilterArrayOutput)
}

type GetLogsIndexesLogsIndexFilterOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexFilterOutput) ToGetLogsIndexesLogsIndexFilterOutput() GetLogsIndexesLogsIndexFilterOutput {
	return o
}

func (o GetLogsIndexesLogsIndexFilterOutput) ToGetLogsIndexesLogsIndexFilterOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterOutput {
	return o
}

// Logs filter criteria. Only logs matching this filter criteria are considered for this index.
func (o GetLogsIndexesLogsIndexFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsIndexesLogsIndexFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetLogsIndexesLogsIndexFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsIndexesLogsIndexFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsIndexesLogsIndexFilter)(nil)).Elem()
}

func (o GetLogsIndexesLogsIndexFilterArrayOutput) ToGetLogsIndexesLogsIndexFilterArrayOutput() GetLogsIndexesLogsIndexFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexFilterArrayOutput) ToGetLogsIndexesLogsIndexFilterArrayOutputWithContext(ctx context.Context) GetLogsIndexesLogsIndexFilterArrayOutput {
	return o
}

func (o GetLogsIndexesLogsIndexFilterArrayOutput) Index(i pulumi.IntInput) GetLogsIndexesLogsIndexFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsIndexesLogsIndexFilter {
		return vs[0].([]GetLogsIndexesLogsIndexFilter)[vs[1].(int)]
	}).(GetLogsIndexesLogsIndexFilterOutput)
}

type GetLogsPipelinesLogsPipeline struct {
	// Description of the pipeline
	Description string `pulumi:"description"`
	// Pipelines filter
	Filters []GetLogsPipelinesLogsPipelineFilter `pulumi:"filters"`
	// ID of the pipeline
	Id string `pulumi:"id"`
	// Whether or not the pipeline is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// Whether or not the pipeline can be edited.
	IsReadOnly bool `pulumi:"isReadOnly"`
	// The name of the pipeline.
	Name string `pulumi:"name"`
	// Tags of the pipeline
	Tags []string `pulumi:"tags"`
	// Whether or not the pipeline can be edited.
	Type string `pulumi:"type"`
}

// GetLogsPipelinesLogsPipelineInput is an input type that accepts GetLogsPipelinesLogsPipelineArgs and GetLogsPipelinesLogsPipelineOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineInput` via:
//
//	GetLogsPipelinesLogsPipelineArgs{...}
type GetLogsPipelinesLogsPipelineInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineOutput() GetLogsPipelinesLogsPipelineOutput
	ToGetLogsPipelinesLogsPipelineOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineOutput
}

type GetLogsPipelinesLogsPipelineArgs struct {
	// Description of the pipeline
	Description pulumi.StringInput `pulumi:"description"`
	// Pipelines filter
	Filters GetLogsPipelinesLogsPipelineFilterArrayInput `pulumi:"filters"`
	// ID of the pipeline
	Id pulumi.StringInput `pulumi:"id"`
	// Whether or not the pipeline is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// Whether or not the pipeline can be edited.
	IsReadOnly pulumi.BoolInput `pulumi:"isReadOnly"`
	// The name of the pipeline.
	Name pulumi.StringInput `pulumi:"name"`
	// Tags of the pipeline
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Whether or not the pipeline can be edited.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLogsPipelinesLogsPipelineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineArgs) ToGetLogsPipelinesLogsPipelineOutput() GetLogsPipelinesLogsPipelineOutput {
	return i.ToGetLogsPipelinesLogsPipelineOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineArgs) ToGetLogsPipelinesLogsPipelineOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineOutput)
}

// GetLogsPipelinesLogsPipelineArrayInput is an input type that accepts GetLogsPipelinesLogsPipelineArray and GetLogsPipelinesLogsPipelineArrayOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineArrayInput` via:
//
//	GetLogsPipelinesLogsPipelineArray{ GetLogsPipelinesLogsPipelineArgs{...} }
type GetLogsPipelinesLogsPipelineArrayInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineArrayOutput() GetLogsPipelinesLogsPipelineArrayOutput
	ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineArrayOutput
}

type GetLogsPipelinesLogsPipelineArray []GetLogsPipelinesLogsPipelineInput

func (GetLogsPipelinesLogsPipelineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineArray) ToGetLogsPipelinesLogsPipelineArrayOutput() GetLogsPipelinesLogsPipelineArrayOutput {
	return i.ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineArray) ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineArrayOutput)
}

type GetLogsPipelinesLogsPipelineOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineOutput) ToGetLogsPipelinesLogsPipelineOutput() GetLogsPipelinesLogsPipelineOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineOutput) ToGetLogsPipelinesLogsPipelineOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineOutput {
	return o
}

// Description of the pipeline
func (o GetLogsPipelinesLogsPipelineOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) string { return v.Description }).(pulumi.StringOutput)
}

// Pipelines filter
func (o GetLogsPipelinesLogsPipelineOutput) Filters() GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) []GetLogsPipelinesLogsPipelineFilter { return v.Filters }).(GetLogsPipelinesLogsPipelineFilterArrayOutput)
}

// ID of the pipeline
func (o GetLogsPipelinesLogsPipelineOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) string { return v.Id }).(pulumi.StringOutput)
}

// Whether or not the pipeline is enabled.
func (o GetLogsPipelinesLogsPipelineOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// Whether or not the pipeline can be edited.
func (o GetLogsPipelinesLogsPipelineOutput) IsReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) bool { return v.IsReadOnly }).(pulumi.BoolOutput)
}

// The name of the pipeline.
func (o GetLogsPipelinesLogsPipelineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) string { return v.Name }).(pulumi.StringOutput)
}

// Tags of the pipeline
func (o GetLogsPipelinesLogsPipelineOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Whether or not the pipeline can be edited.
func (o GetLogsPipelinesLogsPipelineOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipeline) string { return v.Type }).(pulumi.StringOutput)
}

type GetLogsPipelinesLogsPipelineArrayOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipeline)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineArrayOutput) ToGetLogsPipelinesLogsPipelineArrayOutput() GetLogsPipelinesLogsPipelineArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineArrayOutput) ToGetLogsPipelinesLogsPipelineArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineArrayOutput) Index(i pulumi.IntInput) GetLogsPipelinesLogsPipelineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsPipelinesLogsPipeline {
		return vs[0].([]GetLogsPipelinesLogsPipeline)[vs[1].(int)]
	}).(GetLogsPipelinesLogsPipelineOutput)
}

type GetLogsPipelinesLogsPipelineFilter struct {
	// Pipeline filter criteria.
	Query string `pulumi:"query"`
}

// GetLogsPipelinesLogsPipelineFilterInput is an input type that accepts GetLogsPipelinesLogsPipelineFilterArgs and GetLogsPipelinesLogsPipelineFilterOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineFilterInput` via:
//
//	GetLogsPipelinesLogsPipelineFilterArgs{...}
type GetLogsPipelinesLogsPipelineFilterInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineFilterOutput() GetLogsPipelinesLogsPipelineFilterOutput
	ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineFilterOutput
}

type GetLogsPipelinesLogsPipelineFilterArgs struct {
	// Pipeline filter criteria.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetLogsPipelinesLogsPipelineFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineFilterArgs) ToGetLogsPipelinesLogsPipelineFilterOutput() GetLogsPipelinesLogsPipelineFilterOutput {
	return i.ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineFilterArgs) ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineFilterOutput)
}

// GetLogsPipelinesLogsPipelineFilterArrayInput is an input type that accepts GetLogsPipelinesLogsPipelineFilterArray and GetLogsPipelinesLogsPipelineFilterArrayOutput values.
// You can construct a concrete instance of `GetLogsPipelinesLogsPipelineFilterArrayInput` via:
//
//	GetLogsPipelinesLogsPipelineFilterArray{ GetLogsPipelinesLogsPipelineFilterArgs{...} }
type GetLogsPipelinesLogsPipelineFilterArrayInput interface {
	pulumi.Input

	ToGetLogsPipelinesLogsPipelineFilterArrayOutput() GetLogsPipelinesLogsPipelineFilterArrayOutput
	ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(context.Context) GetLogsPipelinesLogsPipelineFilterArrayOutput
}

type GetLogsPipelinesLogsPipelineFilterArray []GetLogsPipelinesLogsPipelineFilterInput

func (GetLogsPipelinesLogsPipelineFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (i GetLogsPipelinesLogsPipelineFilterArray) ToGetLogsPipelinesLogsPipelineFilterArrayOutput() GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return i.ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(context.Background())
}

func (i GetLogsPipelinesLogsPipelineFilterArray) ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogsPipelinesLogsPipelineFilterArrayOutput)
}

type GetLogsPipelinesLogsPipelineFilterOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineFilterOutput) ToGetLogsPipelinesLogsPipelineFilterOutput() GetLogsPipelinesLogsPipelineFilterOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineFilterOutput) ToGetLogsPipelinesLogsPipelineFilterOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterOutput {
	return o
}

// Pipeline filter criteria.
func (o GetLogsPipelinesLogsPipelineFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogsPipelinesLogsPipelineFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetLogsPipelinesLogsPipelineFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLogsPipelinesLogsPipelineFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogsPipelinesLogsPipelineFilter)(nil)).Elem()
}

func (o GetLogsPipelinesLogsPipelineFilterArrayOutput) ToGetLogsPipelinesLogsPipelineFilterArrayOutput() GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineFilterArrayOutput) ToGetLogsPipelinesLogsPipelineFilterArrayOutputWithContext(ctx context.Context) GetLogsPipelinesLogsPipelineFilterArrayOutput {
	return o
}

func (o GetLogsPipelinesLogsPipelineFilterArrayOutput) Index(i pulumi.IntInput) GetLogsPipelinesLogsPipelineFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogsPipelinesLogsPipelineFilter {
		return vs[0].([]GetLogsPipelinesLogsPipelineFilter)[vs[1].(int)]
	}).(GetLogsPipelinesLogsPipelineFilterOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicy struct {
	// ID of the monitor config policy
	Id string `pulumi:"id"`
	// The monitor config policy type
	PolicyType string `pulumi:"policyType"`
	// Config for a tag policy. Only set if `policyType` is `tag`.
	TagPolicy GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy `pulumi:"tagPolicy"`
}

// GetMonitorConfigPoliciesMonitorConfigPolicyInput is an input type that accepts GetMonitorConfigPoliciesMonitorConfigPolicyArgs and GetMonitorConfigPoliciesMonitorConfigPolicyOutput values.
// You can construct a concrete instance of `GetMonitorConfigPoliciesMonitorConfigPolicyInput` via:
//
//	GetMonitorConfigPoliciesMonitorConfigPolicyArgs{...}
type GetMonitorConfigPoliciesMonitorConfigPolicyInput interface {
	pulumi.Input

	ToGetMonitorConfigPoliciesMonitorConfigPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyOutput
	ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyOutput
}

type GetMonitorConfigPoliciesMonitorConfigPolicyArgs struct {
	// ID of the monitor config policy
	Id pulumi.StringInput `pulumi:"id"`
	// The monitor config policy type
	PolicyType pulumi.StringInput `pulumi:"policyType"`
	// Config for a tag policy. Only set if `policyType` is `tag`.
	TagPolicy GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput `pulumi:"tagPolicy"`
}

func (GetMonitorConfigPoliciesMonitorConfigPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return i.ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(context.Background())
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigPoliciesMonitorConfigPolicyOutput)
}

// GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput is an input type that accepts GetMonitorConfigPoliciesMonitorConfigPolicyArray and GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput values.
// You can construct a concrete instance of `GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput` via:
//
//	GetMonitorConfigPoliciesMonitorConfigPolicyArray{ GetMonitorConfigPoliciesMonitorConfigPolicyArgs{...} }
type GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput interface {
	pulumi.Input

	ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput() GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput
	ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput
}

type GetMonitorConfigPoliciesMonitorConfigPolicyArray []GetMonitorConfigPoliciesMonitorConfigPolicyInput

func (GetMonitorConfigPoliciesMonitorConfigPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArray) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput() GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return i.ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(context.Background())
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyArray) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigPoliciesMonitorConfigPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return o
}

// ID of the monitor config policy
func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The monitor config policy type
func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicy) string { return v.PolicyType }).(pulumi.StringOutput)
}

// Config for a tag policy. Only set if `policyType` is `tag`.
func (o GetMonitorConfigPoliciesMonitorConfigPolicyOutput) TagPolicy() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicy) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy {
		return v.TagPolicy
	}).(GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorConfigPoliciesMonitorConfigPolicy)(nil)).Elem()
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput() GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyArrayOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput) Index(i pulumi.IntInput) GetMonitorConfigPoliciesMonitorConfigPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorConfigPoliciesMonitorConfigPolicy {
		return vs[0].([]GetMonitorConfigPoliciesMonitorConfigPolicy)[vs[1].(int)]
	}).(GetMonitorConfigPoliciesMonitorConfigPolicyOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy struct {
	// The key of the tag
	TagKey string `pulumi:"tagKey"`
	// If a tag key is required for monitor creation
	TagKeyRequired bool `pulumi:"tagKeyRequired"`
	// Valid values for the tag
	ValidTagValues []string `pulumi:"validTagValues"`
}

// GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput is an input type that accepts GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs and GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput values.
// You can construct a concrete instance of `GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput` via:
//
//	GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs{...}
type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput interface {
	pulumi.Input

	ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput
	ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput
}

type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs struct {
	// The key of the tag
	TagKey pulumi.StringInput `pulumi:"tagKey"`
	// If a tag key is required for monitor creation
	TagKeyRequired pulumi.BoolInput `pulumi:"tagKeyRequired"`
	// Valid values for the tag
	ValidTagValues pulumi.StringArrayInput `pulumi:"validTagValues"`
}

func (GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy)(nil)).Elem()
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return i.ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(context.Background())
}

func (i GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput)
}

type GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput struct{ *pulumi.OutputState }

func (GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy)(nil)).Elem()
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput() GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return o
}

func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ToGetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutputWithContext(ctx context.Context) GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput {
	return o
}

// The key of the tag
func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy) string { return v.TagKey }).(pulumi.StringOutput)
}

// If a tag key is required for monitor creation
func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) TagKeyRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy) bool { return v.TagKeyRequired }).(pulumi.BoolOutput)
}

// Valid values for the tag
func (o GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput) ValidTagValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicy) []string { return v.ValidTagValues }).(pulumi.StringArrayOutput)
}

type GetMonitorMonitorThreshold struct {
	Critical         string `pulumi:"critical"`
	CriticalRecovery string `pulumi:"criticalRecovery"`
	Ok               string `pulumi:"ok"`
	Unknown          string `pulumi:"unknown"`
	Warning          string `pulumi:"warning"`
	WarningRecovery  string `pulumi:"warningRecovery"`
}

// GetMonitorMonitorThresholdInput is an input type that accepts GetMonitorMonitorThresholdArgs and GetMonitorMonitorThresholdOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdInput` via:
//
//	GetMonitorMonitorThresholdArgs{...}
type GetMonitorMonitorThresholdInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdOutput() GetMonitorMonitorThresholdOutput
	ToGetMonitorMonitorThresholdOutputWithContext(context.Context) GetMonitorMonitorThresholdOutput
}

type GetMonitorMonitorThresholdArgs struct {
	Critical         pulumi.StringInput `pulumi:"critical"`
	CriticalRecovery pulumi.StringInput `pulumi:"criticalRecovery"`
	Ok               pulumi.StringInput `pulumi:"ok"`
	Unknown          pulumi.StringInput `pulumi:"unknown"`
	Warning          pulumi.StringInput `pulumi:"warning"`
	WarningRecovery  pulumi.StringInput `pulumi:"warningRecovery"`
}

func (GetMonitorMonitorThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThreshold)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdArgs) ToGetMonitorMonitorThresholdOutput() GetMonitorMonitorThresholdOutput {
	return i.ToGetMonitorMonitorThresholdOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdArgs) ToGetMonitorMonitorThresholdOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdOutput)
}

// GetMonitorMonitorThresholdArrayInput is an input type that accepts GetMonitorMonitorThresholdArray and GetMonitorMonitorThresholdArrayOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdArrayInput` via:
//
//	GetMonitorMonitorThresholdArray{ GetMonitorMonitorThresholdArgs{...} }
type GetMonitorMonitorThresholdArrayInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdArrayOutput() GetMonitorMonitorThresholdArrayOutput
	ToGetMonitorMonitorThresholdArrayOutputWithContext(context.Context) GetMonitorMonitorThresholdArrayOutput
}

type GetMonitorMonitorThresholdArray []GetMonitorMonitorThresholdInput

func (GetMonitorMonitorThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThreshold)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdArray) ToGetMonitorMonitorThresholdArrayOutput() GetMonitorMonitorThresholdArrayOutput {
	return i.ToGetMonitorMonitorThresholdArrayOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdArray) ToGetMonitorMonitorThresholdArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdArrayOutput)
}

type GetMonitorMonitorThresholdOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThreshold)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdOutput) ToGetMonitorMonitorThresholdOutput() GetMonitorMonitorThresholdOutput {
	return o
}

func (o GetMonitorMonitorThresholdOutput) ToGetMonitorMonitorThresholdOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdOutput {
	return o
}

func (o GetMonitorMonitorThresholdOutput) Critical() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Critical }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) CriticalRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.CriticalRecovery }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) Ok() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Ok }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) Unknown() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Unknown }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) Warning() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.Warning }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdOutput) WarningRecovery() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThreshold) string { return v.WarningRecovery }).(pulumi.StringOutput)
}

type GetMonitorMonitorThresholdArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThreshold)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdArrayOutput) ToGetMonitorMonitorThresholdArrayOutput() GetMonitorMonitorThresholdArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdArrayOutput) ToGetMonitorMonitorThresholdArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdArrayOutput) Index(i pulumi.IntInput) GetMonitorMonitorThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorMonitorThreshold {
		return vs[0].([]GetMonitorMonitorThreshold)[vs[1].(int)]
	}).(GetMonitorMonitorThresholdOutput)
}

type GetMonitorMonitorThresholdWindow struct {
	RecoveryWindow string `pulumi:"recoveryWindow"`
	TriggerWindow  string `pulumi:"triggerWindow"`
}

// GetMonitorMonitorThresholdWindowInput is an input type that accepts GetMonitorMonitorThresholdWindowArgs and GetMonitorMonitorThresholdWindowOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdWindowInput` via:
//
//	GetMonitorMonitorThresholdWindowArgs{...}
type GetMonitorMonitorThresholdWindowInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdWindowOutput() GetMonitorMonitorThresholdWindowOutput
	ToGetMonitorMonitorThresholdWindowOutputWithContext(context.Context) GetMonitorMonitorThresholdWindowOutput
}

type GetMonitorMonitorThresholdWindowArgs struct {
	RecoveryWindow pulumi.StringInput `pulumi:"recoveryWindow"`
	TriggerWindow  pulumi.StringInput `pulumi:"triggerWindow"`
}

func (GetMonitorMonitorThresholdWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdWindowArgs) ToGetMonitorMonitorThresholdWindowOutput() GetMonitorMonitorThresholdWindowOutput {
	return i.ToGetMonitorMonitorThresholdWindowOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdWindowArgs) ToGetMonitorMonitorThresholdWindowOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdWindowOutput)
}

// GetMonitorMonitorThresholdWindowArrayInput is an input type that accepts GetMonitorMonitorThresholdWindowArray and GetMonitorMonitorThresholdWindowArrayOutput values.
// You can construct a concrete instance of `GetMonitorMonitorThresholdWindowArrayInput` via:
//
//	GetMonitorMonitorThresholdWindowArray{ GetMonitorMonitorThresholdWindowArgs{...} }
type GetMonitorMonitorThresholdWindowArrayInput interface {
	pulumi.Input

	ToGetMonitorMonitorThresholdWindowArrayOutput() GetMonitorMonitorThresholdWindowArrayOutput
	ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(context.Context) GetMonitorMonitorThresholdWindowArrayOutput
}

type GetMonitorMonitorThresholdWindowArray []GetMonitorMonitorThresholdWindowInput

func (GetMonitorMonitorThresholdWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (i GetMonitorMonitorThresholdWindowArray) ToGetMonitorMonitorThresholdWindowArrayOutput() GetMonitorMonitorThresholdWindowArrayOutput {
	return i.ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(context.Background())
}

func (i GetMonitorMonitorThresholdWindowArray) ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorMonitorThresholdWindowArrayOutput)
}

type GetMonitorMonitorThresholdWindowOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdWindowOutput) ToGetMonitorMonitorThresholdWindowOutput() GetMonitorMonitorThresholdWindowOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowOutput) ToGetMonitorMonitorThresholdWindowOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowOutput) RecoveryWindow() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThresholdWindow) string { return v.RecoveryWindow }).(pulumi.StringOutput)
}

func (o GetMonitorMonitorThresholdWindowOutput) TriggerWindow() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorMonitorThresholdWindow) string { return v.TriggerWindow }).(pulumi.StringOutput)
}

type GetMonitorMonitorThresholdWindowArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorMonitorThresholdWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorMonitorThresholdWindow)(nil)).Elem()
}

func (o GetMonitorMonitorThresholdWindowArrayOutput) ToGetMonitorMonitorThresholdWindowArrayOutput() GetMonitorMonitorThresholdWindowArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowArrayOutput) ToGetMonitorMonitorThresholdWindowArrayOutputWithContext(ctx context.Context) GetMonitorMonitorThresholdWindowArrayOutput {
	return o
}

func (o GetMonitorMonitorThresholdWindowArrayOutput) Index(i pulumi.IntInput) GetMonitorMonitorThresholdWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorMonitorThresholdWindow {
		return vs[0].([]GetMonitorMonitorThresholdWindow)[vs[1].(int)]
	}).(GetMonitorMonitorThresholdWindowOutput)
}

type GetMonitorSchedulingOption struct {
	// Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
	CustomSchedules []GetMonitorSchedulingOptionCustomSchedule `pulumi:"customSchedules"`
	// Configuration options for the evaluation window. If `hourStarts` is set, no other fields may be set. Otherwise, `dayStarts` and `monthStarts` must be set together.
	EvaluationWindows []GetMonitorSchedulingOptionEvaluationWindow `pulumi:"evaluationWindows"`
}

// GetMonitorSchedulingOptionInput is an input type that accepts GetMonitorSchedulingOptionArgs and GetMonitorSchedulingOptionOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionInput` via:
//
//	GetMonitorSchedulingOptionArgs{...}
type GetMonitorSchedulingOptionInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionOutput() GetMonitorSchedulingOptionOutput
	ToGetMonitorSchedulingOptionOutputWithContext(context.Context) GetMonitorSchedulingOptionOutput
}

type GetMonitorSchedulingOptionArgs struct {
	// Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
	CustomSchedules GetMonitorSchedulingOptionCustomScheduleArrayInput `pulumi:"customSchedules"`
	// Configuration options for the evaluation window. If `hourStarts` is set, no other fields may be set. Otherwise, `dayStarts` and `monthStarts` must be set together.
	EvaluationWindows GetMonitorSchedulingOptionEvaluationWindowArrayInput `pulumi:"evaluationWindows"`
}

func (GetMonitorSchedulingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOption)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionArgs) ToGetMonitorSchedulingOptionOutput() GetMonitorSchedulingOptionOutput {
	return i.ToGetMonitorSchedulingOptionOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionArgs) ToGetMonitorSchedulingOptionOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionOutput)
}

// GetMonitorSchedulingOptionArrayInput is an input type that accepts GetMonitorSchedulingOptionArray and GetMonitorSchedulingOptionArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionArrayInput` via:
//
//	GetMonitorSchedulingOptionArray{ GetMonitorSchedulingOptionArgs{...} }
type GetMonitorSchedulingOptionArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionArrayOutput() GetMonitorSchedulingOptionArrayOutput
	ToGetMonitorSchedulingOptionArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionArrayOutput
}

type GetMonitorSchedulingOptionArray []GetMonitorSchedulingOptionInput

func (GetMonitorSchedulingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOption)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionArray) ToGetMonitorSchedulingOptionArrayOutput() GetMonitorSchedulingOptionArrayOutput {
	return i.ToGetMonitorSchedulingOptionArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionArray) ToGetMonitorSchedulingOptionArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionArrayOutput)
}

type GetMonitorSchedulingOptionOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOption)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionOutput) ToGetMonitorSchedulingOptionOutput() GetMonitorSchedulingOptionOutput {
	return o
}

func (o GetMonitorSchedulingOptionOutput) ToGetMonitorSchedulingOptionOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionOutput {
	return o
}

// Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
func (o GetMonitorSchedulingOptionOutput) CustomSchedules() GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOption) []GetMonitorSchedulingOptionCustomSchedule {
		return v.CustomSchedules
	}).(GetMonitorSchedulingOptionCustomScheduleArrayOutput)
}

// Configuration options for the evaluation window. If `hourStarts` is set, no other fields may be set. Otherwise, `dayStarts` and `monthStarts` must be set together.
func (o GetMonitorSchedulingOptionOutput) EvaluationWindows() GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOption) []GetMonitorSchedulingOptionEvaluationWindow {
		return v.EvaluationWindows
	}).(GetMonitorSchedulingOptionEvaluationWindowArrayOutput)
}

type GetMonitorSchedulingOptionArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOption)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionArrayOutput) ToGetMonitorSchedulingOptionArrayOutput() GetMonitorSchedulingOptionArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionArrayOutput) ToGetMonitorSchedulingOptionArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOption {
		return vs[0].([]GetMonitorSchedulingOption)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionOutput)
}

type GetMonitorSchedulingOptionCustomSchedule struct {
	// A list of recurrence definitions. Length must be 1.
	Recurrences []GetMonitorSchedulingOptionCustomScheduleRecurrence `pulumi:"recurrences"`
}

// GetMonitorSchedulingOptionCustomScheduleInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleArgs and GetMonitorSchedulingOptionCustomScheduleOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleArgs{...}
type GetMonitorSchedulingOptionCustomScheduleInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleOutput() GetMonitorSchedulingOptionCustomScheduleOutput
	ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleOutput
}

type GetMonitorSchedulingOptionCustomScheduleArgs struct {
	// A list of recurrence definitions. Length must be 1.
	Recurrences GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput `pulumi:"recurrences"`
}

func (GetMonitorSchedulingOptionCustomScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleArgs) ToGetMonitorSchedulingOptionCustomScheduleOutput() GetMonitorSchedulingOptionCustomScheduleOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleArgs) ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleOutput)
}

// GetMonitorSchedulingOptionCustomScheduleArrayInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleArray and GetMonitorSchedulingOptionCustomScheduleArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleArrayInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleArray{ GetMonitorSchedulingOptionCustomScheduleArgs{...} }
type GetMonitorSchedulingOptionCustomScheduleArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleArrayOutput() GetMonitorSchedulingOptionCustomScheduleArrayOutput
	ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleArrayOutput
}

type GetMonitorSchedulingOptionCustomScheduleArray []GetMonitorSchedulingOptionCustomScheduleInput

func (GetMonitorSchedulingOptionCustomScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleArray) ToGetMonitorSchedulingOptionCustomScheduleArrayOutput() GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleArray) ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleArrayOutput)
}

type GetMonitorSchedulingOptionCustomScheduleOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleOutput) ToGetMonitorSchedulingOptionCustomScheduleOutput() GetMonitorSchedulingOptionCustomScheduleOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleOutput) ToGetMonitorSchedulingOptionCustomScheduleOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleOutput {
	return o
}

// A list of recurrence definitions. Length must be 1.
func (o GetMonitorSchedulingOptionCustomScheduleOutput) Recurrences() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomSchedule) []GetMonitorSchedulingOptionCustomScheduleRecurrence {
		return v.Recurrences
	}).(GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput)
}

type GetMonitorSchedulingOptionCustomScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomSchedule)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleArrayOutput() GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionCustomScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOptionCustomSchedule {
		return vs[0].([]GetMonitorSchedulingOptionCustomSchedule)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionCustomScheduleOutput)
}

type GetMonitorSchedulingOptionCustomScheduleRecurrence struct {
	// Must be a valid rrule. See api docs for supported fields
	Rrule string `pulumi:"rrule"`
	// Time to start recurrence cycle. Similar to DTSTART. Expected format 'YYYY-MM-DDThh:mm:ss'
	Start string `pulumi:"start"`
	// 'tz database' format. ex: 'America/New_York' or UTC
	Timezone string `pulumi:"timezone"`
}

// GetMonitorSchedulingOptionCustomScheduleRecurrenceInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs and GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleRecurrenceInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs{...}
type GetMonitorSchedulingOptionCustomScheduleRecurrenceInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput
	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs struct {
	// Must be a valid rrule. See api docs for supported fields
	Rrule pulumi.StringInput `pulumi:"rrule"`
	// Time to start recurrence cycle. Similar to DTSTART. Expected format 'YYYY-MM-DDThh:mm:ss'
	Start pulumi.StringInput `pulumi:"start"`
	// 'tz database' format. ex: 'America/New_York' or UTC
	Timezone pulumi.StringInput `pulumi:"timezone"`
}

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput)
}

// GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput is an input type that accepts GetMonitorSchedulingOptionCustomScheduleRecurrenceArray and GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput` via:
//
//	GetMonitorSchedulingOptionCustomScheduleRecurrenceArray{ GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs{...} }
type GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput
	ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceArray []GetMonitorSchedulingOptionCustomScheduleRecurrenceInput

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArray) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return i.ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionCustomScheduleRecurrenceArray) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput)
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return o
}

// Must be a valid rrule. See api docs for supported fields
func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) Rrule() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomScheduleRecurrence) string { return v.Rrule }).(pulumi.StringOutput)
}

// Time to start recurrence cycle. Similar to DTSTART. Expected format 'YYYY-MM-DDThh:mm:ss'
func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomScheduleRecurrence) string { return v.Start }).(pulumi.StringOutput)
}

// 'tz database' format. ex: 'America/New_York' or UTC
func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionCustomScheduleRecurrence) string { return v.Timezone }).(pulumi.StringOutput)
}

type GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionCustomScheduleRecurrence)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput() GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) ToGetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOptionCustomScheduleRecurrence {
		return vs[0].([]GetMonitorSchedulingOptionCustomScheduleRecurrence)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput)
}

type GetMonitorSchedulingOptionEvaluationWindow struct {
	// The time of the day at which a one day cumulative evaluation window starts. Must be defined in UTC time in `HH:mm` format.
	DayStarts string `pulumi:"dayStarts"`
	// The minute of the hour at which a one hour cumulative evaluation window starts. Must be between 0 and 59.
	HourStarts int `pulumi:"hourStarts"`
	// The day of the month at which a one month cumulative evaluation window starts. Must be a value of 1.
	MonthStarts int `pulumi:"monthStarts"`
}

// GetMonitorSchedulingOptionEvaluationWindowInput is an input type that accepts GetMonitorSchedulingOptionEvaluationWindowArgs and GetMonitorSchedulingOptionEvaluationWindowOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionEvaluationWindowInput` via:
//
//	GetMonitorSchedulingOptionEvaluationWindowArgs{...}
type GetMonitorSchedulingOptionEvaluationWindowInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionEvaluationWindowOutput() GetMonitorSchedulingOptionEvaluationWindowOutput
	ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(context.Context) GetMonitorSchedulingOptionEvaluationWindowOutput
}

type GetMonitorSchedulingOptionEvaluationWindowArgs struct {
	// The time of the day at which a one day cumulative evaluation window starts. Must be defined in UTC time in `HH:mm` format.
	DayStarts pulumi.StringInput `pulumi:"dayStarts"`
	// The minute of the hour at which a one hour cumulative evaluation window starts. Must be between 0 and 59.
	HourStarts pulumi.IntInput `pulumi:"hourStarts"`
	// The day of the month at which a one month cumulative evaluation window starts. Must be a value of 1.
	MonthStarts pulumi.IntInput `pulumi:"monthStarts"`
}

func (GetMonitorSchedulingOptionEvaluationWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionEvaluationWindowArgs) ToGetMonitorSchedulingOptionEvaluationWindowOutput() GetMonitorSchedulingOptionEvaluationWindowOutput {
	return i.ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionEvaluationWindowArgs) ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionEvaluationWindowOutput)
}

// GetMonitorSchedulingOptionEvaluationWindowArrayInput is an input type that accepts GetMonitorSchedulingOptionEvaluationWindowArray and GetMonitorSchedulingOptionEvaluationWindowArrayOutput values.
// You can construct a concrete instance of `GetMonitorSchedulingOptionEvaluationWindowArrayInput` via:
//
//	GetMonitorSchedulingOptionEvaluationWindowArray{ GetMonitorSchedulingOptionEvaluationWindowArgs{...} }
type GetMonitorSchedulingOptionEvaluationWindowArrayInput interface {
	pulumi.Input

	ToGetMonitorSchedulingOptionEvaluationWindowArrayOutput() GetMonitorSchedulingOptionEvaluationWindowArrayOutput
	ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(context.Context) GetMonitorSchedulingOptionEvaluationWindowArrayOutput
}

type GetMonitorSchedulingOptionEvaluationWindowArray []GetMonitorSchedulingOptionEvaluationWindowInput

func (GetMonitorSchedulingOptionEvaluationWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (i GetMonitorSchedulingOptionEvaluationWindowArray) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutput() GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return i.ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(context.Background())
}

func (i GetMonitorSchedulingOptionEvaluationWindowArray) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorSchedulingOptionEvaluationWindowArrayOutput)
}

type GetMonitorSchedulingOptionEvaluationWindowOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionEvaluationWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionEvaluationWindowOutput) ToGetMonitorSchedulingOptionEvaluationWindowOutput() GetMonitorSchedulingOptionEvaluationWindowOutput {
	return o
}

func (o GetMonitorSchedulingOptionEvaluationWindowOutput) ToGetMonitorSchedulingOptionEvaluationWindowOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowOutput {
	return o
}

// The time of the day at which a one day cumulative evaluation window starts. Must be defined in UTC time in `HH:mm` format.
func (o GetMonitorSchedulingOptionEvaluationWindowOutput) DayStarts() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionEvaluationWindow) string { return v.DayStarts }).(pulumi.StringOutput)
}

// The minute of the hour at which a one hour cumulative evaluation window starts. Must be between 0 and 59.
func (o GetMonitorSchedulingOptionEvaluationWindowOutput) HourStarts() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionEvaluationWindow) int { return v.HourStarts }).(pulumi.IntOutput)
}

// The day of the month at which a one month cumulative evaluation window starts. Must be a value of 1.
func (o GetMonitorSchedulingOptionEvaluationWindowOutput) MonthStarts() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorSchedulingOptionEvaluationWindow) int { return v.MonthStarts }).(pulumi.IntOutput)
}

type GetMonitorSchedulingOptionEvaluationWindowArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorSchedulingOptionEvaluationWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorSchedulingOptionEvaluationWindow)(nil)).Elem()
}

func (o GetMonitorSchedulingOptionEvaluationWindowArrayOutput) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutput() GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionEvaluationWindowArrayOutput) ToGetMonitorSchedulingOptionEvaluationWindowArrayOutputWithContext(ctx context.Context) GetMonitorSchedulingOptionEvaluationWindowArrayOutput {
	return o
}

func (o GetMonitorSchedulingOptionEvaluationWindowArrayOutput) Index(i pulumi.IntInput) GetMonitorSchedulingOptionEvaluationWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorSchedulingOptionEvaluationWindow {
		return vs[0].([]GetMonitorSchedulingOptionEvaluationWindow)[vs[1].(int)]
	}).(GetMonitorSchedulingOptionEvaluationWindowOutput)
}

type GetMonitorsMonitor struct {
	// ID of the monitor
	Id int `pulumi:"id"`
	// Name of the monitor
	Name string `pulumi:"name"`
	// Type of the monitor.
	Type string `pulumi:"type"`
}

// GetMonitorsMonitorInput is an input type that accepts GetMonitorsMonitorArgs and GetMonitorsMonitorOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorInput` via:
//
//	GetMonitorsMonitorArgs{...}
type GetMonitorsMonitorInput interface {
	pulumi.Input

	ToGetMonitorsMonitorOutput() GetMonitorsMonitorOutput
	ToGetMonitorsMonitorOutputWithContext(context.Context) GetMonitorsMonitorOutput
}

type GetMonitorsMonitorArgs struct {
	// ID of the monitor
	Id pulumi.IntInput `pulumi:"id"`
	// Name of the monitor
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the monitor.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetMonitorsMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitor)(nil)).Elem()
}

func (i GetMonitorsMonitorArgs) ToGetMonitorsMonitorOutput() GetMonitorsMonitorOutput {
	return i.ToGetMonitorsMonitorOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorArgs) ToGetMonitorsMonitorOutputWithContext(ctx context.Context) GetMonitorsMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorOutput)
}

// GetMonitorsMonitorArrayInput is an input type that accepts GetMonitorsMonitorArray and GetMonitorsMonitorArrayOutput values.
// You can construct a concrete instance of `GetMonitorsMonitorArrayInput` via:
//
//	GetMonitorsMonitorArray{ GetMonitorsMonitorArgs{...} }
type GetMonitorsMonitorArrayInput interface {
	pulumi.Input

	ToGetMonitorsMonitorArrayOutput() GetMonitorsMonitorArrayOutput
	ToGetMonitorsMonitorArrayOutputWithContext(context.Context) GetMonitorsMonitorArrayOutput
}

type GetMonitorsMonitorArray []GetMonitorsMonitorInput

func (GetMonitorsMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitor)(nil)).Elem()
}

func (i GetMonitorsMonitorArray) ToGetMonitorsMonitorArrayOutput() GetMonitorsMonitorArrayOutput {
	return i.ToGetMonitorsMonitorArrayOutputWithContext(context.Background())
}

func (i GetMonitorsMonitorArray) ToGetMonitorsMonitorArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMonitorsMonitorArrayOutput)
}

type GetMonitorsMonitorOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorsMonitor)(nil)).Elem()
}

func (o GetMonitorsMonitorOutput) ToGetMonitorsMonitorOutput() GetMonitorsMonitorOutput {
	return o
}

func (o GetMonitorsMonitorOutput) ToGetMonitorsMonitorOutputWithContext(ctx context.Context) GetMonitorsMonitorOutput {
	return o
}

// ID of the monitor
func (o GetMonitorsMonitorOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetMonitorsMonitor) int { return v.Id }).(pulumi.IntOutput)
}

// Name of the monitor
func (o GetMonitorsMonitorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitor) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the monitor.
func (o GetMonitorsMonitorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorsMonitor) string { return v.Type }).(pulumi.StringOutput)
}

type GetMonitorsMonitorArrayOutput struct{ *pulumi.OutputState }

func (GetMonitorsMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMonitorsMonitor)(nil)).Elem()
}

func (o GetMonitorsMonitorArrayOutput) ToGetMonitorsMonitorArrayOutput() GetMonitorsMonitorArrayOutput {
	return o
}

func (o GetMonitorsMonitorArrayOutput) ToGetMonitorsMonitorArrayOutputWithContext(ctx context.Context) GetMonitorsMonitorArrayOutput {
	return o
}

func (o GetMonitorsMonitorArrayOutput) Index(i pulumi.IntInput) GetMonitorsMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMonitorsMonitor {
		return vs[0].([]GetMonitorsMonitor)[vs[1].(int)]
	}).(GetMonitorsMonitorOutput)
}

type GetRoleUsersRoleUser struct {
	RoleId string `pulumi:"roleId"`
	UserId string `pulumi:"userId"`
}

// GetRoleUsersRoleUserInput is an input type that accepts GetRoleUsersRoleUserArgs and GetRoleUsersRoleUserOutput values.
// You can construct a concrete instance of `GetRoleUsersRoleUserInput` via:
//
//	GetRoleUsersRoleUserArgs{...}
type GetRoleUsersRoleUserInput interface {
	pulumi.Input

	ToGetRoleUsersRoleUserOutput() GetRoleUsersRoleUserOutput
	ToGetRoleUsersRoleUserOutputWithContext(context.Context) GetRoleUsersRoleUserOutput
}

type GetRoleUsersRoleUserArgs struct {
	RoleId pulumi.StringInput `pulumi:"roleId"`
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetRoleUsersRoleUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleUsersRoleUser)(nil)).Elem()
}

func (i GetRoleUsersRoleUserArgs) ToGetRoleUsersRoleUserOutput() GetRoleUsersRoleUserOutput {
	return i.ToGetRoleUsersRoleUserOutputWithContext(context.Background())
}

func (i GetRoleUsersRoleUserArgs) ToGetRoleUsersRoleUserOutputWithContext(ctx context.Context) GetRoleUsersRoleUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleUsersRoleUserOutput)
}

// GetRoleUsersRoleUserArrayInput is an input type that accepts GetRoleUsersRoleUserArray and GetRoleUsersRoleUserArrayOutput values.
// You can construct a concrete instance of `GetRoleUsersRoleUserArrayInput` via:
//
//	GetRoleUsersRoleUserArray{ GetRoleUsersRoleUserArgs{...} }
type GetRoleUsersRoleUserArrayInput interface {
	pulumi.Input

	ToGetRoleUsersRoleUserArrayOutput() GetRoleUsersRoleUserArrayOutput
	ToGetRoleUsersRoleUserArrayOutputWithContext(context.Context) GetRoleUsersRoleUserArrayOutput
}

type GetRoleUsersRoleUserArray []GetRoleUsersRoleUserInput

func (GetRoleUsersRoleUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleUsersRoleUser)(nil)).Elem()
}

func (i GetRoleUsersRoleUserArray) ToGetRoleUsersRoleUserArrayOutput() GetRoleUsersRoleUserArrayOutput {
	return i.ToGetRoleUsersRoleUserArrayOutputWithContext(context.Background())
}

func (i GetRoleUsersRoleUserArray) ToGetRoleUsersRoleUserArrayOutputWithContext(ctx context.Context) GetRoleUsersRoleUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRoleUsersRoleUserArrayOutput)
}

type GetRoleUsersRoleUserOutput struct{ *pulumi.OutputState }

func (GetRoleUsersRoleUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleUsersRoleUser)(nil)).Elem()
}

func (o GetRoleUsersRoleUserOutput) ToGetRoleUsersRoleUserOutput() GetRoleUsersRoleUserOutput {
	return o
}

func (o GetRoleUsersRoleUserOutput) ToGetRoleUsersRoleUserOutputWithContext(ctx context.Context) GetRoleUsersRoleUserOutput {
	return o
}

func (o GetRoleUsersRoleUserOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleUsersRoleUser) string { return v.RoleId }).(pulumi.StringOutput)
}

func (o GetRoleUsersRoleUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleUsersRoleUser) string { return v.UserId }).(pulumi.StringOutput)
}

type GetRoleUsersRoleUserArrayOutput struct{ *pulumi.OutputState }

func (GetRoleUsersRoleUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRoleUsersRoleUser)(nil)).Elem()
}

func (o GetRoleUsersRoleUserArrayOutput) ToGetRoleUsersRoleUserArrayOutput() GetRoleUsersRoleUserArrayOutput {
	return o
}

func (o GetRoleUsersRoleUserArrayOutput) ToGetRoleUsersRoleUserArrayOutputWithContext(ctx context.Context) GetRoleUsersRoleUserArrayOutput {
	return o
}

func (o GetRoleUsersRoleUserArrayOutput) Index(i pulumi.IntInput) GetRoleUsersRoleUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRoleUsersRoleUser {
		return vs[0].([]GetRoleUsersRoleUser)[vs[1].(int)]
	}).(GetRoleUsersRoleUserOutput)
}

type GetRolesRole struct {
	// ID of the Datadog role
	Id string `pulumi:"id"`
	// Name of the Datadog role
	Name string `pulumi:"name"`
	// Number of users that have this role.
	UserCount int `pulumi:"userCount"`
}

// GetRolesRoleInput is an input type that accepts GetRolesRoleArgs and GetRolesRoleOutput values.
// You can construct a concrete instance of `GetRolesRoleInput` via:
//
//	GetRolesRoleArgs{...}
type GetRolesRoleInput interface {
	pulumi.Input

	ToGetRolesRoleOutput() GetRolesRoleOutput
	ToGetRolesRoleOutputWithContext(context.Context) GetRolesRoleOutput
}

type GetRolesRoleArgs struct {
	// ID of the Datadog role
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the Datadog role
	Name pulumi.StringInput `pulumi:"name"`
	// Number of users that have this role.
	UserCount pulumi.IntInput `pulumi:"userCount"`
}

func (GetRolesRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesRole)(nil)).Elem()
}

func (i GetRolesRoleArgs) ToGetRolesRoleOutput() GetRolesRoleOutput {
	return i.ToGetRolesRoleOutputWithContext(context.Background())
}

func (i GetRolesRoleArgs) ToGetRolesRoleOutputWithContext(ctx context.Context) GetRolesRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesRoleOutput)
}

// GetRolesRoleArrayInput is an input type that accepts GetRolesRoleArray and GetRolesRoleArrayOutput values.
// You can construct a concrete instance of `GetRolesRoleArrayInput` via:
//
//	GetRolesRoleArray{ GetRolesRoleArgs{...} }
type GetRolesRoleArrayInput interface {
	pulumi.Input

	ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput
	ToGetRolesRoleArrayOutputWithContext(context.Context) GetRolesRoleArrayOutput
}

type GetRolesRoleArray []GetRolesRoleInput

func (GetRolesRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesRole)(nil)).Elem()
}

func (i GetRolesRoleArray) ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput {
	return i.ToGetRolesRoleArrayOutputWithContext(context.Background())
}

func (i GetRolesRoleArray) ToGetRolesRoleArrayOutputWithContext(ctx context.Context) GetRolesRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolesRoleArrayOutput)
}

type GetRolesRoleOutput struct{ *pulumi.OutputState }

func (GetRolesRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolesRole)(nil)).Elem()
}

func (o GetRolesRoleOutput) ToGetRolesRoleOutput() GetRolesRoleOutput {
	return o
}

func (o GetRolesRoleOutput) ToGetRolesRoleOutputWithContext(ctx context.Context) GetRolesRoleOutput {
	return o
}

// ID of the Datadog role
func (o GetRolesRoleOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Datadog role
func (o GetRolesRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolesRole) string { return v.Name }).(pulumi.StringOutput)
}

// Number of users that have this role.
func (o GetRolesRoleOutput) UserCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRolesRole) int { return v.UserCount }).(pulumi.IntOutput)
}

type GetRolesRoleArrayOutput struct{ *pulumi.OutputState }

func (GetRolesRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolesRole)(nil)).Elem()
}

func (o GetRolesRoleArrayOutput) ToGetRolesRoleArrayOutput() GetRolesRoleArrayOutput {
	return o
}

func (o GetRolesRoleArrayOutput) ToGetRolesRoleArrayOutputWithContext(ctx context.Context) GetRolesRoleArrayOutput {
	return o
}

func (o GetRolesRoleArrayOutput) Index(i pulumi.IntInput) GetRolesRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRolesRole {
		return vs[0].([]GetRolesRole)[vs[1].(int)]
	}).(GetRolesRoleOutput)
}

type GetRumRetentionFiltersRetentionFilter struct {
	Enabled    bool   `pulumi:"enabled"`
	EventType  string `pulumi:"eventType"`
	Id         string `pulumi:"id"`
	Name       string `pulumi:"name"`
	Query      string `pulumi:"query"`
	SampleRate int    `pulumi:"sampleRate"`
}

// GetRumRetentionFiltersRetentionFilterInput is an input type that accepts GetRumRetentionFiltersRetentionFilterArgs and GetRumRetentionFiltersRetentionFilterOutput values.
// You can construct a concrete instance of `GetRumRetentionFiltersRetentionFilterInput` via:
//
//	GetRumRetentionFiltersRetentionFilterArgs{...}
type GetRumRetentionFiltersRetentionFilterInput interface {
	pulumi.Input

	ToGetRumRetentionFiltersRetentionFilterOutput() GetRumRetentionFiltersRetentionFilterOutput
	ToGetRumRetentionFiltersRetentionFilterOutputWithContext(context.Context) GetRumRetentionFiltersRetentionFilterOutput
}

type GetRumRetentionFiltersRetentionFilterArgs struct {
	Enabled    pulumi.BoolInput   `pulumi:"enabled"`
	EventType  pulumi.StringInput `pulumi:"eventType"`
	Id         pulumi.StringInput `pulumi:"id"`
	Name       pulumi.StringInput `pulumi:"name"`
	Query      pulumi.StringInput `pulumi:"query"`
	SampleRate pulumi.IntInput    `pulumi:"sampleRate"`
}

func (GetRumRetentionFiltersRetentionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRumRetentionFiltersRetentionFilter)(nil)).Elem()
}

func (i GetRumRetentionFiltersRetentionFilterArgs) ToGetRumRetentionFiltersRetentionFilterOutput() GetRumRetentionFiltersRetentionFilterOutput {
	return i.ToGetRumRetentionFiltersRetentionFilterOutputWithContext(context.Background())
}

func (i GetRumRetentionFiltersRetentionFilterArgs) ToGetRumRetentionFiltersRetentionFilterOutputWithContext(ctx context.Context) GetRumRetentionFiltersRetentionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRumRetentionFiltersRetentionFilterOutput)
}

// GetRumRetentionFiltersRetentionFilterArrayInput is an input type that accepts GetRumRetentionFiltersRetentionFilterArray and GetRumRetentionFiltersRetentionFilterArrayOutput values.
// You can construct a concrete instance of `GetRumRetentionFiltersRetentionFilterArrayInput` via:
//
//	GetRumRetentionFiltersRetentionFilterArray{ GetRumRetentionFiltersRetentionFilterArgs{...} }
type GetRumRetentionFiltersRetentionFilterArrayInput interface {
	pulumi.Input

	ToGetRumRetentionFiltersRetentionFilterArrayOutput() GetRumRetentionFiltersRetentionFilterArrayOutput
	ToGetRumRetentionFiltersRetentionFilterArrayOutputWithContext(context.Context) GetRumRetentionFiltersRetentionFilterArrayOutput
}

type GetRumRetentionFiltersRetentionFilterArray []GetRumRetentionFiltersRetentionFilterInput

func (GetRumRetentionFiltersRetentionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRumRetentionFiltersRetentionFilter)(nil)).Elem()
}

func (i GetRumRetentionFiltersRetentionFilterArray) ToGetRumRetentionFiltersRetentionFilterArrayOutput() GetRumRetentionFiltersRetentionFilterArrayOutput {
	return i.ToGetRumRetentionFiltersRetentionFilterArrayOutputWithContext(context.Background())
}

func (i GetRumRetentionFiltersRetentionFilterArray) ToGetRumRetentionFiltersRetentionFilterArrayOutputWithContext(ctx context.Context) GetRumRetentionFiltersRetentionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRumRetentionFiltersRetentionFilterArrayOutput)
}

type GetRumRetentionFiltersRetentionFilterOutput struct{ *pulumi.OutputState }

func (GetRumRetentionFiltersRetentionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRumRetentionFiltersRetentionFilter)(nil)).Elem()
}

func (o GetRumRetentionFiltersRetentionFilterOutput) ToGetRumRetentionFiltersRetentionFilterOutput() GetRumRetentionFiltersRetentionFilterOutput {
	return o
}

func (o GetRumRetentionFiltersRetentionFilterOutput) ToGetRumRetentionFiltersRetentionFilterOutputWithContext(ctx context.Context) GetRumRetentionFiltersRetentionFilterOutput {
	return o
}

func (o GetRumRetentionFiltersRetentionFilterOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRumRetentionFiltersRetentionFilter) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetRumRetentionFiltersRetentionFilterOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v GetRumRetentionFiltersRetentionFilter) string { return v.EventType }).(pulumi.StringOutput)
}

func (o GetRumRetentionFiltersRetentionFilterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRumRetentionFiltersRetentionFilter) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRumRetentionFiltersRetentionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRumRetentionFiltersRetentionFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRumRetentionFiltersRetentionFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetRumRetentionFiltersRetentionFilter) string { return v.Query }).(pulumi.StringOutput)
}

func (o GetRumRetentionFiltersRetentionFilterOutput) SampleRate() pulumi.IntOutput {
	return o.ApplyT(func(v GetRumRetentionFiltersRetentionFilter) int { return v.SampleRate }).(pulumi.IntOutput)
}

type GetRumRetentionFiltersRetentionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRumRetentionFiltersRetentionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRumRetentionFiltersRetentionFilter)(nil)).Elem()
}

func (o GetRumRetentionFiltersRetentionFilterArrayOutput) ToGetRumRetentionFiltersRetentionFilterArrayOutput() GetRumRetentionFiltersRetentionFilterArrayOutput {
	return o
}

func (o GetRumRetentionFiltersRetentionFilterArrayOutput) ToGetRumRetentionFiltersRetentionFilterArrayOutputWithContext(ctx context.Context) GetRumRetentionFiltersRetentionFilterArrayOutput {
	return o
}

func (o GetRumRetentionFiltersRetentionFilterArrayOutput) Index(i pulumi.IntInput) GetRumRetentionFiltersRetentionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRumRetentionFiltersRetentionFilter {
		return vs[0].([]GetRumRetentionFiltersRetentionFilter)[vs[1].(int)]
	}).(GetRumRetentionFiltersRetentionFilterOutput)
}

type GetSecurityMonitoringFiltersFilter struct {
	// Exclusion filters to exclude some logs from the security filter.
	ExclusionFilters []GetSecurityMonitoringFiltersFilterExclusionFilter `pulumi:"exclusionFilters"`
	// The filtered data type.
	FilteredDataType *string `pulumi:"filteredDataType"`
	// Whether the security filter is enabled.
	IsEnabled bool `pulumi:"isEnabled"`
	// The name of the security filter.
	Name string `pulumi:"name"`
	// The query of the security filter.
	Query string `pulumi:"query"`
	// The version of the security filter.
	Version int `pulumi:"version"`
}

// GetSecurityMonitoringFiltersFilterInput is an input type that accepts GetSecurityMonitoringFiltersFilterArgs and GetSecurityMonitoringFiltersFilterOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterInput` via:
//
//	GetSecurityMonitoringFiltersFilterArgs{...}
type GetSecurityMonitoringFiltersFilterInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterOutput() GetSecurityMonitoringFiltersFilterOutput
	ToGetSecurityMonitoringFiltersFilterOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterOutput
}

type GetSecurityMonitoringFiltersFilterArgs struct {
	// Exclusion filters to exclude some logs from the security filter.
	ExclusionFilters GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput `pulumi:"exclusionFilters"`
	// The filtered data type.
	FilteredDataType pulumi.StringPtrInput `pulumi:"filteredDataType"`
	// Whether the security filter is enabled.
	IsEnabled pulumi.BoolInput `pulumi:"isEnabled"`
	// The name of the security filter.
	Name pulumi.StringInput `pulumi:"name"`
	// The query of the security filter.
	Query pulumi.StringInput `pulumi:"query"`
	// The version of the security filter.
	Version pulumi.IntInput `pulumi:"version"`
}

func (GetSecurityMonitoringFiltersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterArgs) ToGetSecurityMonitoringFiltersFilterOutput() GetSecurityMonitoringFiltersFilterOutput {
	return i.ToGetSecurityMonitoringFiltersFilterOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterArgs) ToGetSecurityMonitoringFiltersFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterOutput)
}

// GetSecurityMonitoringFiltersFilterArrayInput is an input type that accepts GetSecurityMonitoringFiltersFilterArray and GetSecurityMonitoringFiltersFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterArrayInput` via:
//
//	GetSecurityMonitoringFiltersFilterArray{ GetSecurityMonitoringFiltersFilterArgs{...} }
type GetSecurityMonitoringFiltersFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterArrayOutput() GetSecurityMonitoringFiltersFilterArrayOutput
	ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterArrayOutput
}

type GetSecurityMonitoringFiltersFilterArray []GetSecurityMonitoringFiltersFilterInput

func (GetSecurityMonitoringFiltersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterArray) ToGetSecurityMonitoringFiltersFilterArrayOutput() GetSecurityMonitoringFiltersFilterArrayOutput {
	return i.ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterArray) ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterArrayOutput)
}

type GetSecurityMonitoringFiltersFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterOutput) ToGetSecurityMonitoringFiltersFilterOutput() GetSecurityMonitoringFiltersFilterOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterOutput) ToGetSecurityMonitoringFiltersFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterOutput {
	return o
}

// Exclusion filters to exclude some logs from the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) ExclusionFilters() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) []GetSecurityMonitoringFiltersFilterExclusionFilter {
		return v.ExclusionFilters
	}).(GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput)
}

// The filtered data type.
func (o GetSecurityMonitoringFiltersFilterOutput) FilteredDataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) *string { return v.FilteredDataType }).(pulumi.StringPtrOutput)
}

// Whether the security filter is enabled.
func (o GetSecurityMonitoringFiltersFilterOutput) IsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) bool { return v.IsEnabled }).(pulumi.BoolOutput)
}

// The name of the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) string { return v.Name }).(pulumi.StringOutput)
}

// The query of the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) string { return v.Query }).(pulumi.StringOutput)
}

// The version of the security filter.
func (o GetSecurityMonitoringFiltersFilterOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilter) int { return v.Version }).(pulumi.IntOutput)
}

type GetSecurityMonitoringFiltersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterArrayOutput() GetSecurityMonitoringFiltersFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringFiltersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringFiltersFilter {
		return vs[0].([]GetSecurityMonitoringFiltersFilter)[vs[1].(int)]
	}).(GetSecurityMonitoringFiltersFilterOutput)
}

type GetSecurityMonitoringFiltersFilterExclusionFilter struct {
	// Exclusion filter name.
	Name string `pulumi:"name"`
	// Exclusion filter query. Logs that match this query are excluded from the security filter.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringFiltersFilterExclusionFilterInput is an input type that accepts GetSecurityMonitoringFiltersFilterExclusionFilterArgs and GetSecurityMonitoringFiltersFilterExclusionFilterOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterExclusionFilterInput` via:
//
//	GetSecurityMonitoringFiltersFilterExclusionFilterArgs{...}
type GetSecurityMonitoringFiltersFilterExclusionFilterInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterExclusionFilterOutput() GetSecurityMonitoringFiltersFilterExclusionFilterOutput
	ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterOutput
}

type GetSecurityMonitoringFiltersFilterExclusionFilterArgs struct {
	// Exclusion filter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Exclusion filter query. Logs that match this query are excluded from the security filter.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringFiltersFilterExclusionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArgs) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutput() GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return i.ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArgs) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterExclusionFilterOutput)
}

// GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput is an input type that accepts GetSecurityMonitoringFiltersFilterExclusionFilterArray and GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput` via:
//
//	GetSecurityMonitoringFiltersFilterExclusionFilterArray{ GetSecurityMonitoringFiltersFilterExclusionFilterArgs{...} }
type GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput
	ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput
}

type GetSecurityMonitoringFiltersFilterExclusionFilterArray []GetSecurityMonitoringFiltersFilterExclusionFilterInput

func (GetSecurityMonitoringFiltersFilterExclusionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArray) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return i.ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringFiltersFilterExclusionFilterArray) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput)
}

type GetSecurityMonitoringFiltersFilterExclusionFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterExclusionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutput() GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return o
}

// Exclusion filter name.
func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilterExclusionFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Exclusion filter query. Logs that match this query are excluded from the security filter.
func (o GetSecurityMonitoringFiltersFilterExclusionFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringFiltersFilterExclusionFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringFiltersFilterExclusionFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput() GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) ToGetSecurityMonitoringFiltersFilterExclusionFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringFiltersFilterExclusionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringFiltersFilterExclusionFilter {
		return vs[0].([]GetSecurityMonitoringFiltersFilterExclusionFilter)[vs[1].(int)]
	}).(GetSecurityMonitoringFiltersFilterExclusionFilterOutput)
}

type GetSecurityMonitoringRulesRule struct {
	// Cases for generating signals.
	Cases []GetSecurityMonitoringRulesRuleCase `pulumi:"cases"`
	// Whether the rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.
	Filters []GetSecurityMonitoringRulesRuleFilter `pulumi:"filters"`
	// Additional grouping to perform on top of the query grouping.
	GroupSignalsBies []string `pulumi:"groupSignalsBies"`
	// Whether the notifications include the triggering group-by values in their title.
	HasExtendedTitle *bool `pulumi:"hasExtendedTitle"`
	// Message for generated signals.
	Message string `pulumi:"message"`
	// The name of the rule.
	Name string `pulumi:"name"`
	// Options on rules.
	Options *GetSecurityMonitoringRulesRuleOptions `pulumi:"options"`
	// Queries for selecting logs which are part of the rule.
	Queries []GetSecurityMonitoringRulesRuleQuery `pulumi:"queries"`
	// Reference tables for filtering query results.
	ReferenceTables []GetSecurityMonitoringRulesRuleReferenceTable `pulumi:"referenceTables"`
	// Queries for selecting logs which are part of the rule.
	SignalQueries []GetSecurityMonitoringRulesRuleSignalQuery `pulumi:"signalQueries"`
	// Tags for generated signals.
	Tags []string `pulumi:"tags"`
	// Cases for generating signals for third-party rules. Only required and accepted for third-party rules
	ThirdPartyCases []GetSecurityMonitoringRulesRuleThirdPartyCase `pulumi:"thirdPartyCases"`
	// The rule type.
	Type *string `pulumi:"type"`
}

// GetSecurityMonitoringRulesRuleInput is an input type that accepts GetSecurityMonitoringRulesRuleArgs and GetSecurityMonitoringRulesRuleOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleInput` via:
//
//	GetSecurityMonitoringRulesRuleArgs{...}
type GetSecurityMonitoringRulesRuleInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOutput() GetSecurityMonitoringRulesRuleOutput
	ToGetSecurityMonitoringRulesRuleOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOutput
}

type GetSecurityMonitoringRulesRuleArgs struct {
	// Cases for generating signals.
	Cases GetSecurityMonitoringRulesRuleCaseArrayInput `pulumi:"cases"`
	// Whether the rule is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.
	Filters GetSecurityMonitoringRulesRuleFilterArrayInput `pulumi:"filters"`
	// Additional grouping to perform on top of the query grouping.
	GroupSignalsBies pulumi.StringArrayInput `pulumi:"groupSignalsBies"`
	// Whether the notifications include the triggering group-by values in their title.
	HasExtendedTitle pulumi.BoolPtrInput `pulumi:"hasExtendedTitle"`
	// Message for generated signals.
	Message pulumi.StringInput `pulumi:"message"`
	// The name of the rule.
	Name pulumi.StringInput `pulumi:"name"`
	// Options on rules.
	Options GetSecurityMonitoringRulesRuleOptionsPtrInput `pulumi:"options"`
	// Queries for selecting logs which are part of the rule.
	Queries GetSecurityMonitoringRulesRuleQueryArrayInput `pulumi:"queries"`
	// Reference tables for filtering query results.
	ReferenceTables GetSecurityMonitoringRulesRuleReferenceTableArrayInput `pulumi:"referenceTables"`
	// Queries for selecting logs which are part of the rule.
	SignalQueries GetSecurityMonitoringRulesRuleSignalQueryArrayInput `pulumi:"signalQueries"`
	// Tags for generated signals.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Cases for generating signals for third-party rules. Only required and accepted for third-party rules
	ThirdPartyCases GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput `pulumi:"thirdPartyCases"`
	// The rule type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSecurityMonitoringRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleArgs) ToGetSecurityMonitoringRulesRuleOutput() GetSecurityMonitoringRulesRuleOutput {
	return i.ToGetSecurityMonitoringRulesRuleOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleArgs) ToGetSecurityMonitoringRulesRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOutput)
}

// GetSecurityMonitoringRulesRuleArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleArray and GetSecurityMonitoringRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleArray{ GetSecurityMonitoringRulesRuleArgs{...} }
type GetSecurityMonitoringRulesRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleArrayOutput() GetSecurityMonitoringRulesRuleArrayOutput
	ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleArrayOutput
}

type GetSecurityMonitoringRulesRuleArray []GetSecurityMonitoringRulesRuleInput

func (GetSecurityMonitoringRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleArray) ToGetSecurityMonitoringRulesRuleArrayOutput() GetSecurityMonitoringRulesRuleArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleArray) ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleArrayOutput)
}

type GetSecurityMonitoringRulesRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOutput) ToGetSecurityMonitoringRulesRuleOutput() GetSecurityMonitoringRulesRuleOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOutput) ToGetSecurityMonitoringRulesRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOutput {
	return o
}

// Cases for generating signals.
func (o GetSecurityMonitoringRulesRuleOutput) Cases() GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleCase { return v.Cases }).(GetSecurityMonitoringRulesRuleCaseArrayOutput)
}

// Whether the rule is enabled.
func (o GetSecurityMonitoringRulesRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Additional queries to filter matched events before they are processed. **Note**: This field is deprecated for log detection, signal correlation, and workload security rules.
func (o GetSecurityMonitoringRulesRuleOutput) Filters() GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleFilter { return v.Filters }).(GetSecurityMonitoringRulesRuleFilterArrayOutput)
}

// Additional grouping to perform on top of the query grouping.
func (o GetSecurityMonitoringRulesRuleOutput) GroupSignalsBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []string { return v.GroupSignalsBies }).(pulumi.StringArrayOutput)
}

// Whether the notifications include the triggering group-by values in their title.
func (o GetSecurityMonitoringRulesRuleOutput) HasExtendedTitle() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *bool { return v.HasExtendedTitle }).(pulumi.BoolPtrOutput)
}

// Message for generated signals.
func (o GetSecurityMonitoringRulesRuleOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) string { return v.Message }).(pulumi.StringOutput)
}

// The name of the rule.
func (o GetSecurityMonitoringRulesRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) string { return v.Name }).(pulumi.StringOutput)
}

// Options on rules.
func (o GetSecurityMonitoringRulesRuleOutput) Options() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *GetSecurityMonitoringRulesRuleOptions { return v.Options }).(GetSecurityMonitoringRulesRuleOptionsPtrOutput)
}

// Queries for selecting logs which are part of the rule.
func (o GetSecurityMonitoringRulesRuleOutput) Queries() GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleQuery { return v.Queries }).(GetSecurityMonitoringRulesRuleQueryArrayOutput)
}

// Reference tables for filtering query results.
func (o GetSecurityMonitoringRulesRuleOutput) ReferenceTables() GetSecurityMonitoringRulesRuleReferenceTableArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleReferenceTable {
		return v.ReferenceTables
	}).(GetSecurityMonitoringRulesRuleReferenceTableArrayOutput)
}

// Queries for selecting logs which are part of the rule.
func (o GetSecurityMonitoringRulesRuleOutput) SignalQueries() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleSignalQuery {
		return v.SignalQueries
	}).(GetSecurityMonitoringRulesRuleSignalQueryArrayOutput)
}

// Tags for generated signals.
func (o GetSecurityMonitoringRulesRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Cases for generating signals for third-party rules. Only required and accepted for third-party rules
func (o GetSecurityMonitoringRulesRuleOutput) ThirdPartyCases() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) []GetSecurityMonitoringRulesRuleThirdPartyCase {
		return v.ThirdPartyCases
	}).(GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput)
}

// The rule type.
func (o GetSecurityMonitoringRulesRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetSecurityMonitoringRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleArrayOutput) ToGetSecurityMonitoringRulesRuleArrayOutput() GetSecurityMonitoringRulesRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleArrayOutput) ToGetSecurityMonitoringRulesRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRule {
		return vs[0].([]GetSecurityMonitoringRulesRule)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleOutput)
}

type GetSecurityMonitoringRulesRuleCase struct {
	// Action to perform when the case trigger
	Actions []GetSecurityMonitoringRulesRuleCaseAction `pulumi:"actions"`
	// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
	Condition *string `pulumi:"condition"`
	// Name of the case.
	Name *string `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications []string `pulumi:"notifications"`
	// Severity of the Security Signal.
	Status string `pulumi:"status"`
}

// GetSecurityMonitoringRulesRuleCaseInput is an input type that accepts GetSecurityMonitoringRulesRuleCaseArgs and GetSecurityMonitoringRulesRuleCaseOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleCaseInput` via:
//
//	GetSecurityMonitoringRulesRuleCaseArgs{...}
type GetSecurityMonitoringRulesRuleCaseInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleCaseOutput() GetSecurityMonitoringRulesRuleCaseOutput
	ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleCaseOutput
}

type GetSecurityMonitoringRulesRuleCaseArgs struct {
	// Action to perform when the case trigger
	Actions GetSecurityMonitoringRulesRuleCaseActionArrayInput `pulumi:"actions"`
	// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
	Condition pulumi.StringPtrInput `pulumi:"condition"`
	// Name of the case.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications pulumi.StringArrayInput `pulumi:"notifications"`
	// Severity of the Security Signal.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSecurityMonitoringRulesRuleCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleCaseArgs) ToGetSecurityMonitoringRulesRuleCaseOutput() GetSecurityMonitoringRulesRuleCaseOutput {
	return i.ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleCaseArgs) ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleCaseOutput)
}

// GetSecurityMonitoringRulesRuleCaseArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleCaseArray and GetSecurityMonitoringRulesRuleCaseArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleCaseArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleCaseArray{ GetSecurityMonitoringRulesRuleCaseArgs{...} }
type GetSecurityMonitoringRulesRuleCaseArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleCaseArrayOutput() GetSecurityMonitoringRulesRuleCaseArrayOutput
	ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleCaseArrayOutput
}

type GetSecurityMonitoringRulesRuleCaseArray []GetSecurityMonitoringRulesRuleCaseInput

func (GetSecurityMonitoringRulesRuleCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleCaseArray) ToGetSecurityMonitoringRulesRuleCaseArrayOutput() GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleCaseArray) ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleCaseArrayOutput)
}

type GetSecurityMonitoringRulesRuleCaseOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleCaseOutput) ToGetSecurityMonitoringRulesRuleCaseOutput() GetSecurityMonitoringRulesRuleCaseOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseOutput) ToGetSecurityMonitoringRulesRuleCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseOutput {
	return o
}

// Action to perform when the case trigger
func (o GetSecurityMonitoringRulesRuleCaseOutput) Actions() GetSecurityMonitoringRulesRuleCaseActionArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) []GetSecurityMonitoringRulesRuleCaseAction {
		return v.Actions
	}).(GetSecurityMonitoringRulesRuleCaseActionArrayOutput)
}

// A rule case contains logical operations (`>`,`>=`, `&&`, `||`) to determine if a signal should be generated based on the event counts in the previously defined queries.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

// Name of the case.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notification targets for each rule case.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) []string { return v.Notifications }).(pulumi.StringArrayOutput)
}

// Severity of the Security Signal.
func (o GetSecurityMonitoringRulesRuleCaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCase) string { return v.Status }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleCaseArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleCaseArrayOutput) ToGetSecurityMonitoringRulesRuleCaseArrayOutput() GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseArrayOutput) ToGetSecurityMonitoringRulesRuleCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleCase {
		return vs[0].([]GetSecurityMonitoringRulesRuleCase)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleCaseOutput)
}

type GetSecurityMonitoringRulesRuleCaseAction struct {
	// Options for the action.
	Options *GetSecurityMonitoringRulesRuleCaseActionOptions `pulumi:"options"`
	// Type of action to perform when the case triggers.
	Type string `pulumi:"type"`
}

// GetSecurityMonitoringRulesRuleCaseActionInput is an input type that accepts GetSecurityMonitoringRulesRuleCaseActionArgs and GetSecurityMonitoringRulesRuleCaseActionOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleCaseActionInput` via:
//
//	GetSecurityMonitoringRulesRuleCaseActionArgs{...}
type GetSecurityMonitoringRulesRuleCaseActionInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleCaseActionOutput() GetSecurityMonitoringRulesRuleCaseActionOutput
	ToGetSecurityMonitoringRulesRuleCaseActionOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleCaseActionOutput
}

type GetSecurityMonitoringRulesRuleCaseActionArgs struct {
	// Options for the action.
	Options GetSecurityMonitoringRulesRuleCaseActionOptionsPtrInput `pulumi:"options"`
	// Type of action to perform when the case triggers.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetSecurityMonitoringRulesRuleCaseActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseAction)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleCaseActionArgs) ToGetSecurityMonitoringRulesRuleCaseActionOutput() GetSecurityMonitoringRulesRuleCaseActionOutput {
	return i.ToGetSecurityMonitoringRulesRuleCaseActionOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleCaseActionArgs) ToGetSecurityMonitoringRulesRuleCaseActionOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleCaseActionOutput)
}

// GetSecurityMonitoringRulesRuleCaseActionArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleCaseActionArray and GetSecurityMonitoringRulesRuleCaseActionArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleCaseActionArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleCaseActionArray{ GetSecurityMonitoringRulesRuleCaseActionArgs{...} }
type GetSecurityMonitoringRulesRuleCaseActionArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleCaseActionArrayOutput() GetSecurityMonitoringRulesRuleCaseActionArrayOutput
	ToGetSecurityMonitoringRulesRuleCaseActionArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleCaseActionArrayOutput
}

type GetSecurityMonitoringRulesRuleCaseActionArray []GetSecurityMonitoringRulesRuleCaseActionInput

func (GetSecurityMonitoringRulesRuleCaseActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleCaseAction)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleCaseActionArray) ToGetSecurityMonitoringRulesRuleCaseActionArrayOutput() GetSecurityMonitoringRulesRuleCaseActionArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleCaseActionArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleCaseActionArray) ToGetSecurityMonitoringRulesRuleCaseActionArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleCaseActionArrayOutput)
}

type GetSecurityMonitoringRulesRuleCaseActionOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleCaseActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseAction)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleCaseActionOutput) ToGetSecurityMonitoringRulesRuleCaseActionOutput() GetSecurityMonitoringRulesRuleCaseActionOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseActionOutput) ToGetSecurityMonitoringRulesRuleCaseActionOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseActionOutput {
	return o
}

// Options for the action.
func (o GetSecurityMonitoringRulesRuleCaseActionOutput) Options() GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCaseAction) *GetSecurityMonitoringRulesRuleCaseActionOptions {
		return v.Options
	}).(GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput)
}

// Type of action to perform when the case triggers.
func (o GetSecurityMonitoringRulesRuleCaseActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCaseAction) string { return v.Type }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleCaseActionArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleCaseActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleCaseAction)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleCaseActionArrayOutput) ToGetSecurityMonitoringRulesRuleCaseActionArrayOutput() GetSecurityMonitoringRulesRuleCaseActionArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseActionArrayOutput) ToGetSecurityMonitoringRulesRuleCaseActionArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseActionArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseActionArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleCaseActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleCaseAction {
		return vs[0].([]GetSecurityMonitoringRulesRuleCaseAction)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleCaseActionOutput)
}

type GetSecurityMonitoringRulesRuleCaseActionOptions struct {
	// Duration of the action in seconds.
	Duration *int `pulumi:"duration"`
}

// GetSecurityMonitoringRulesRuleCaseActionOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleCaseActionOptionsArgs and GetSecurityMonitoringRulesRuleCaseActionOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleCaseActionOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleCaseActionOptionsArgs{...}
type GetSecurityMonitoringRulesRuleCaseActionOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleCaseActionOptionsOutput() GetSecurityMonitoringRulesRuleCaseActionOptionsOutput
	ToGetSecurityMonitoringRulesRuleCaseActionOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleCaseActionOptionsOutput
}

type GetSecurityMonitoringRulesRuleCaseActionOptionsArgs struct {
	// Duration of the action in seconds.
	Duration pulumi.IntPtrInput `pulumi:"duration"`
}

func (GetSecurityMonitoringRulesRuleCaseActionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseActionOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleCaseActionOptionsArgs) ToGetSecurityMonitoringRulesRuleCaseActionOptionsOutput() GetSecurityMonitoringRulesRuleCaseActionOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleCaseActionOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleCaseActionOptionsArgs) ToGetSecurityMonitoringRulesRuleCaseActionOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseActionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleCaseActionOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleCaseActionOptionsArgs) ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput() GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleCaseActionOptionsArgs) ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleCaseActionOptionsOutput).ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleCaseActionOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleCaseActionOptionsArgs, GetSecurityMonitoringRulesRuleCaseActionOptionsPtr and GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleCaseActionOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleCaseActionOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleCaseActionOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput() GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleCaseActionOptionsPtrType GetSecurityMonitoringRulesRuleCaseActionOptionsArgs

func GetSecurityMonitoringRulesRuleCaseActionOptionsPtr(v *GetSecurityMonitoringRulesRuleCaseActionOptionsArgs) GetSecurityMonitoringRulesRuleCaseActionOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleCaseActionOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleCaseActionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleCaseActionOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleCaseActionOptionsPtrType) ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput() GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleCaseActionOptionsPtrType) ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleCaseActionOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleCaseActionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseActionOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleCaseActionOptionsOutput) ToGetSecurityMonitoringRulesRuleCaseActionOptionsOutput() GetSecurityMonitoringRulesRuleCaseActionOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseActionOptionsOutput) ToGetSecurityMonitoringRulesRuleCaseActionOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseActionOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseActionOptionsOutput) ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput() GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleCaseActionOptionsOutput) ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleCaseActionOptions) *GetSecurityMonitoringRulesRuleCaseActionOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput)
}

// Duration of the action in seconds.
func (o GetSecurityMonitoringRulesRuleCaseActionOptionsOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleCaseActionOptions) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

type GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleCaseActionOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput() GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleCaseActionOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleCaseActionOptions) GetSecurityMonitoringRulesRuleCaseActionOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleCaseActionOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleCaseActionOptionsOutput)
}

// Duration of the action in seconds.
func (o GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleCaseActionOptions) *int {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.IntPtrOutput)
}

type GetSecurityMonitoringRulesRuleFilter struct {
	// The type of filtering action.
	Action string `pulumi:"action"`
	// Query for selecting logs to apply the filtering action.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringRulesRuleFilterInput is an input type that accepts GetSecurityMonitoringRulesRuleFilterArgs and GetSecurityMonitoringRulesRuleFilterOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleFilterInput` via:
//
//	GetSecurityMonitoringRulesRuleFilterArgs{...}
type GetSecurityMonitoringRulesRuleFilterInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleFilterOutput() GetSecurityMonitoringRulesRuleFilterOutput
	ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleFilterOutput
}

type GetSecurityMonitoringRulesRuleFilterArgs struct {
	// The type of filtering action.
	Action pulumi.StringInput `pulumi:"action"`
	// Query for selecting logs to apply the filtering action.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringRulesRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleFilterArgs) ToGetSecurityMonitoringRulesRuleFilterOutput() GetSecurityMonitoringRulesRuleFilterOutput {
	return i.ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleFilterArgs) ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleFilterOutput)
}

// GetSecurityMonitoringRulesRuleFilterArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleFilterArray and GetSecurityMonitoringRulesRuleFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleFilterArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleFilterArray{ GetSecurityMonitoringRulesRuleFilterArgs{...} }
type GetSecurityMonitoringRulesRuleFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleFilterArrayOutput() GetSecurityMonitoringRulesRuleFilterArrayOutput
	ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleFilterArrayOutput
}

type GetSecurityMonitoringRulesRuleFilterArray []GetSecurityMonitoringRulesRuleFilterInput

func (GetSecurityMonitoringRulesRuleFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleFilterArray) ToGetSecurityMonitoringRulesRuleFilterArrayOutput() GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleFilterArray) ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleFilterArrayOutput)
}

type GetSecurityMonitoringRulesRuleFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleFilterOutput) ToGetSecurityMonitoringRulesRuleFilterOutput() GetSecurityMonitoringRulesRuleFilterOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleFilterOutput) ToGetSecurityMonitoringRulesRuleFilterOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterOutput {
	return o
}

// The type of filtering action.
func (o GetSecurityMonitoringRulesRuleFilterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleFilter) string { return v.Action }).(pulumi.StringOutput)
}

// Query for selecting logs to apply the filtering action.
func (o GetSecurityMonitoringRulesRuleFilterOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleFilter) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleFilter)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleFilterArrayOutput) ToGetSecurityMonitoringRulesRuleFilterArrayOutput() GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleFilterArrayOutput) ToGetSecurityMonitoringRulesRuleFilterArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleFilterArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleFilter {
		return vs[0].([]GetSecurityMonitoringRulesRuleFilter)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleFilterOutput)
}

type GetSecurityMonitoringRulesRuleOptions struct {
	// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
	DecreaseCriticalityBasedOnEnv *bool `pulumi:"decreaseCriticalityBasedOnEnv"`
	// The detection method.
	DetectionMethod *string `pulumi:"detectionMethod"`
	// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
	EvaluationWindow *int `pulumi:"evaluationWindow"`
	// Options for rules using the impossible travel detection method.
	ImpossibleTravelOptions *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions `pulumi:"impossibleTravelOptions"`
	// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
	KeepAlive *int `pulumi:"keepAlive"`
	// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
	MaxSignalDuration *int `pulumi:"maxSignalDuration"`
	// New value rules specific options.
	NewValueOptions *GetSecurityMonitoringRulesRuleOptionsNewValueOptions `pulumi:"newValueOptions"`
	// Options for rules using the third-party detection method.
	ThirdPartyRuleOptions *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions `pulumi:"thirdPartyRuleOptions"`
}

// GetSecurityMonitoringRulesRuleOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsArgs and GetSecurityMonitoringRulesRuleOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsArgs struct {
	// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
	DecreaseCriticalityBasedOnEnv pulumi.BoolPtrInput `pulumi:"decreaseCriticalityBasedOnEnv"`
	// The detection method.
	DetectionMethod pulumi.StringPtrInput `pulumi:"detectionMethod"`
	// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
	EvaluationWindow pulumi.IntPtrInput `pulumi:"evaluationWindow"`
	// Options for rules using the impossible travel detection method.
	ImpossibleTravelOptions GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput `pulumi:"impossibleTravelOptions"`
	// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
	KeepAlive pulumi.IntPtrInput `pulumi:"keepAlive"`
	// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
	MaxSignalDuration pulumi.IntPtrInput `pulumi:"maxSignalDuration"`
	// New value rules specific options.
	NewValueOptions GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput `pulumi:"newValueOptions"`
	// Options for rules using the third-party detection method.
	ThirdPartyRuleOptions GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput `pulumi:"thirdPartyRuleOptions"`
}

func (GetSecurityMonitoringRulesRuleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsArgs, GetSecurityMonitoringRulesRuleOptionsPtr and GetSecurityMonitoringRulesRuleOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsPtrType GetSecurityMonitoringRulesRuleOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsArgs) GetSecurityMonitoringRulesRuleOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsPtrOutput)
}

// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) DecreaseCriticalityBasedOnEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *bool { return v.DecreaseCriticalityBasedOnEnv }).(pulumi.BoolPtrOutput)
}

// The detection method.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) DetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *string { return v.DetectionMethod }).(pulumi.StringPtrOutput)
}

// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) EvaluationWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *int { return v.EvaluationWindow }).(pulumi.IntPtrOutput)
}

// Options for rules using the impossible travel detection method.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) ImpossibleTravelOptions() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		return v.ImpossibleTravelOptions
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
func (o GetSecurityMonitoringRulesRuleOptionsOutput) KeepAlive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *int { return v.KeepAlive }).(pulumi.IntPtrOutput)
}

// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) MaxSignalDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *int { return v.MaxSignalDuration }).(pulumi.IntPtrOutput)
}

// New value rules specific options.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) NewValueOptions() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		return v.NewValueOptions
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

// Options for rules using the third-party detection method.
func (o GetSecurityMonitoringRulesRuleOptionsOutput) ThirdPartyRuleOptions() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		return v.ThirdPartyRuleOptions
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) GetSecurityMonitoringRulesRuleOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsOutput)
}

// If true, signals in non-production environments have a lower severity than what is defined by the rule case, which can reduce noise. The decrement is applied when the environment tag of the signal starts with `staging`, `test`, or `dev`. Only available when the rule type is `logDetection`.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) DecreaseCriticalityBasedOnEnv() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DecreaseCriticalityBasedOnEnv
	}).(pulumi.BoolPtrOutput)
}

// The detection method.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) DetectionMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMethod
	}).(pulumi.StringPtrOutput)
}

// A time window is specified to match when at least one of the cases matches true. This is a sliding window and evaluates in real time.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) EvaluationWindow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationWindow
	}).(pulumi.IntPtrOutput)
}

// Options for rules using the impossible travel detection method.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ImpossibleTravelOptions() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		if v == nil {
			return nil
		}
		return v.ImpossibleTravelOptions
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// Once a signal is generated, the signal will remain “open” if a case is matched at least once within this keep alive window (in seconds).
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) KeepAlive() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.KeepAlive
	}).(pulumi.IntPtrOutput)
}

// A signal will “close” regardless of the query being matched once the time exceeds the maximum duration (in seconds). This time is calculated from the first seen timestamp.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) MaxSignalDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *int {
		if v == nil {
			return nil
		}
		return v.MaxSignalDuration
	}).(pulumi.IntPtrOutput)
}

// New value rules specific options.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) NewValueOptions() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		if v == nil {
			return nil
		}
		return v.NewValueOptions
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

// Options for rules using the third-party detection method.
func (o GetSecurityMonitoringRulesRuleOptionsPtrOutput) ThirdPartyRuleOptions() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptions) *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		if v == nil {
			return nil
		}
		return v.ThirdPartyRuleOptions
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions struct {
	// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
	BaselineUserLocations *bool `pulumi:"baselineUserLocations"`
}

// GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs and GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs struct {
	// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
	BaselineUserLocations pulumi.BoolPtrInput `pulumi:"baselineUserLocations"`
}

func (GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs, GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtr and GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput)
}

// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput) BaselineUserLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) *bool {
		return v.BaselineUserLocations
	}).(pulumi.BoolPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput)
}

// If true, signals are suppressed for the first 24 hours. During that time, Datadog learns the user's regular access locations. This can be helpful to reduce noise and infer VPN usage or credentialed API access.
func (o GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput) BaselineUserLocations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptions) *bool {
		if v == nil {
			return nil
		}
		return v.BaselineUserLocations
	}).(pulumi.BoolPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptions struct {
	// The duration in days after which a learned value is forgotten.
	ForgetAfter int `pulumi:"forgetAfter"`
	// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
	LearningDuration *int `pulumi:"learningDuration"`
	// The learning method used to determine when signals should be generated for values that weren't learned.
	LearningMethod *string `pulumi:"learningMethod"`
	// A number of occurrences after which signals are generated for values that weren't learned.
	LearningThreshold *int `pulumi:"learningThreshold"`
}

// GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs and GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs struct {
	// The duration in days after which a learned value is forgotten.
	ForgetAfter pulumi.IntInput `pulumi:"forgetAfter"`
	// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
	LearningDuration pulumi.IntPtrInput `pulumi:"learningDuration"`
	// The learning method used to determine when signals should be generated for values that weren't learned.
	LearningMethod pulumi.StringPtrInput `pulumi:"learningMethod"`
	// A number of occurrences after which signals are generated for values that weren't learned.
	LearningThreshold pulumi.IntPtrInput `pulumi:"learningThreshold"`
}

func (GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs, GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtr and GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput)
}

// The duration in days after which a learned value is forgotten.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) ForgetAfter() pulumi.IntOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) int { return v.ForgetAfter }).(pulumi.IntOutput)
}

// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) LearningDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int { return v.LearningDuration }).(pulumi.IntPtrOutput)
}

// The learning method used to determine when signals should be generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) LearningMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *string { return v.LearningMethod }).(pulumi.StringPtrOutput)
}

// A number of occurrences after which signals are generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput) LearningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int { return v.LearningThreshold }).(pulumi.IntPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsNewValueOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) GetSecurityMonitoringRulesRuleOptionsNewValueOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptionsNewValueOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput)
}

// The duration in days after which a learned value is forgotten.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) ForgetAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return &v.ForgetAfter
	}).(pulumi.IntPtrOutput)
}

// The duration in days during which values are learned, and after which signals will be generated for values that weren't learned. If set to 0, a signal will be generated for all new values after the first value is learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) LearningDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return v.LearningDuration
	}).(pulumi.IntPtrOutput)
}

// The learning method used to determine when signals should be generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) LearningMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *string {
		if v == nil {
			return nil
		}
		return v.LearningMethod
	}).(pulumi.StringPtrOutput)
}

// A number of occurrences after which signals are generated for values that weren't learned.
func (o GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput) LearningThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsNewValueOptions) *int {
		if v == nil {
			return nil
		}
		return v.LearningThreshold
	}).(pulumi.IntPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions struct {
	// Notification targets for the default rule case, when none of the third-party cases match.
	DefaultNotifications []string `pulumi:"defaultNotifications"`
	// Severity of the default rule case, when none of the third-party cases match.
	DefaultStatus string `pulumi:"defaultStatus"`
	// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
	RootQueries []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery `pulumi:"rootQueries"`
	// A template for the signal title; if omitted, the title is generated based on the case name.
	SignalTitleTemplate *string `pulumi:"signalTitleTemplate"`
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{...}
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs struct {
	// Notification targets for the default rule case, when none of the third-party cases match.
	DefaultNotifications pulumi.StringArrayInput `pulumi:"defaultNotifications"`
	// Severity of the default rule case, when none of the third-party cases match.
	DefaultStatus pulumi.StringInput `pulumi:"defaultStatus"`
	// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
	RootQueries GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput `pulumi:"rootQueries"`
	// A template for the signal title; if omitted, the title is generated based on the case name.
	SignalTitleTemplate pulumi.StringPtrInput `pulumi:"signalTitleTemplate"`
}

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput)
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput).ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx)
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs, GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtr and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput` via:
//
//	        GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{...}
//
//	or:
//
//	        nil
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput
}

type getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs

func GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtr(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput {
	return (*getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType)(v)
}

func (*getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (i *getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (i *getSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrType) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(context.Background())
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		return &v
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput)
}

// Notification targets for the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) DefaultNotifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []string {
		return v.DefaultNotifications
	}).(pulumi.StringArrayOutput)
}

// Severity of the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) DefaultStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) string { return v.DefaultStatus }).(pulumi.StringOutput)
}

// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) RootQueries() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery {
		return v.RootQueries
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

// A template for the signal title; if omitted, the title is generated based on the case name.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput) SignalTitleTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *string {
		return v.SignalTitleTemplate
	}).(pulumi.StringPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) Elem() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions {
		if v != nil {
			return *v
		}
		var ret GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions
		return ret
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput)
}

// Notification targets for the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) DefaultNotifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []string {
		if v == nil {
			return nil
		}
		return v.DefaultNotifications
	}).(pulumi.StringArrayOutput)
}

// Severity of the default rule case, when none of the third-party cases match.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) DefaultStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultStatus
	}).(pulumi.StringPtrOutput)
}

// Queries to be combined with third-party case queries. Each of them can have different group by fields, to aggregate differently based on the type of alert.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) RootQueries() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery {
		if v == nil {
			return nil
		}
		return v.RootQueries
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

// A template for the signal title; if omitted, the title is generated based on the case name.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput) SignalTitleTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignalTitleTemplate
	}).(pulumi.StringPtrOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery struct {
	// Fields to group by. If empty, each log triggers a signal.
	GroupByFields []string `pulumi:"groupByFields"`
	// Query to filter logs.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs{...}
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs struct {
	// Fields to group by. If empty, each log triggers a signal.
	GroupByFields pulumi.StringArrayInput `pulumi:"groupByFields"`
	// Query to filter logs.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput)
}

// GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray and GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray{ GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs{...} }
type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput
	ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray []GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return o
}

// Fields to group by. If empty, each log triggers a signal.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) GroupByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery) []string {
		return v.GroupByFields
	}).(pulumi.StringArrayOutput)
}

// Query to filter logs.
func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput() GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) ToGetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery {
		return vs[0].([]GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQuery)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput)
}

type GetSecurityMonitoringRulesRuleQuery struct {
	// **Deprecated**. It won't be applied anymore.
	//
	// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
	AgentRules []GetSecurityMonitoringRulesRuleQueryAgentRule `pulumi:"agentRules"`
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation *string `pulumi:"aggregation"`
	// Field for which the cardinality is measured. Sent as an array.
	DistinctFields []string `pulumi:"distinctFields"`
	// Fields to group by.
	GroupByFields []string `pulumi:"groupByFields"`
	// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations.
	//
	// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
	Metric *string `pulumi:"metric"`
	// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
	Metrics []string `pulumi:"metrics"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name *string `pulumi:"name"`
	// Query to run on logs.
	Query string `pulumi:"query"`
}

// GetSecurityMonitoringRulesRuleQueryInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryArgs and GetSecurityMonitoringRulesRuleQueryOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryArgs{...}
type GetSecurityMonitoringRulesRuleQueryInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryOutput() GetSecurityMonitoringRulesRuleQueryOutput
	ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryOutput
}

type GetSecurityMonitoringRulesRuleQueryArgs struct {
	// **Deprecated**. It won't be applied anymore.
	//
	// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
	AgentRules GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput `pulumi:"agentRules"`
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Field for which the cardinality is measured. Sent as an array.
	DistinctFields pulumi.StringArrayInput `pulumi:"distinctFields"`
	// Fields to group by.
	GroupByFields pulumi.StringArrayInput `pulumi:"groupByFields"`
	// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations.
	//
	// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
	Metric pulumi.StringPtrInput `pulumi:"metric"`
	// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
	Metrics pulumi.StringArrayInput `pulumi:"metrics"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Query to run on logs.
	Query pulumi.StringInput `pulumi:"query"`
}

func (GetSecurityMonitoringRulesRuleQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryArgs) ToGetSecurityMonitoringRulesRuleQueryOutput() GetSecurityMonitoringRulesRuleQueryOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryArgs) ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryOutput)
}

// GetSecurityMonitoringRulesRuleQueryArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryArray and GetSecurityMonitoringRulesRuleQueryArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryArray{ GetSecurityMonitoringRulesRuleQueryArgs{...} }
type GetSecurityMonitoringRulesRuleQueryArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryArrayOutput() GetSecurityMonitoringRulesRuleQueryArrayOutput
	ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryArrayOutput
}

type GetSecurityMonitoringRulesRuleQueryArray []GetSecurityMonitoringRulesRuleQueryInput

func (GetSecurityMonitoringRulesRuleQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryArray) ToGetSecurityMonitoringRulesRuleQueryArrayOutput() GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryArray) ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryArrayOutput)
}

type GetSecurityMonitoringRulesRuleQueryOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryOutput) ToGetSecurityMonitoringRulesRuleQueryOutput() GetSecurityMonitoringRulesRuleQueryOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryOutput) ToGetSecurityMonitoringRulesRuleQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryOutput {
	return o
}

// **Deprecated**. It won't be applied anymore.
//
// Deprecated: `agentRule` has been deprecated in favor of new Agent Rule resource.
func (o GetSecurityMonitoringRulesRuleQueryOutput) AgentRules() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []GetSecurityMonitoringRulesRuleQueryAgentRule {
		return v.AgentRules
	}).(GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput)
}

// The aggregation type. For Signal Correlation rules, it must be event_count.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Field for which the cardinality is measured. Sent as an array.
func (o GetSecurityMonitoringRulesRuleQueryOutput) DistinctFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []string { return v.DistinctFields }).(pulumi.StringArrayOutput)
}

// Fields to group by.
func (o GetSecurityMonitoringRulesRuleQueryOutput) GroupByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []string { return v.GroupByFields }).(pulumi.StringArrayOutput)
}

// The target field to aggregate over when using the `sum`, `max`, or `geoData` aggregations.
//
// Deprecated: Configure `metrics` instead. This attribute will be removed in the next major version of the provider.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

// Group of target fields to aggregate over when using the `sum`, `max`, `geoData`, or `newValue` aggregations. The `sum`, `max`, and `geoData` aggregations only accept one value in this list, whereas the `newValue` aggregation accepts up to five values.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Metrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) []string { return v.Metrics }).(pulumi.StringArrayOutput)
}

// Name of the query. Not compatible with `newValue` aggregations.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Query to run on logs.
func (o GetSecurityMonitoringRulesRuleQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQuery) string { return v.Query }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryArrayOutput) ToGetSecurityMonitoringRulesRuleQueryArrayOutput() GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryArrayOutput) ToGetSecurityMonitoringRulesRuleQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleQuery {
		return vs[0].([]GetSecurityMonitoringRulesRuleQuery)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleQueryOutput)
}

type GetSecurityMonitoringRulesRuleQueryAgentRule struct {
	// **Deprecated**. It won't be applied anymore.
	AgentRuleId string `pulumi:"agentRuleId"`
	// **Deprecated**. It won't be applied anymore.
	Expression string `pulumi:"expression"`
}

// GetSecurityMonitoringRulesRuleQueryAgentRuleInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryAgentRuleArgs and GetSecurityMonitoringRulesRuleQueryAgentRuleOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryAgentRuleInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryAgentRuleArgs{...}
type GetSecurityMonitoringRulesRuleQueryAgentRuleInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleOutput
	ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleArgs struct {
	// **Deprecated**. It won't be applied anymore.
	AgentRuleId pulumi.StringInput `pulumi:"agentRuleId"`
	// **Deprecated**. It won't be applied anymore.
	Expression pulumi.StringInput `pulumi:"expression"`
}

func (GetSecurityMonitoringRulesRuleQueryAgentRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArgs) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArgs) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryAgentRuleOutput)
}

// GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleQueryAgentRuleArray and GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleQueryAgentRuleArray{ GetSecurityMonitoringRulesRuleQueryAgentRuleArgs{...} }
type GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput
	ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleArray []GetSecurityMonitoringRulesRuleQueryAgentRuleInput

func (GetSecurityMonitoringRulesRuleQueryAgentRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArray) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleQueryAgentRuleArray) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput)
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return o
}

// **Deprecated**. It won't be applied anymore.
func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) AgentRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQueryAgentRule) string { return v.AgentRuleId }).(pulumi.StringOutput)
}

// **Deprecated**. It won't be applied anymore.
func (o GetSecurityMonitoringRulesRuleQueryAgentRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleQueryAgentRule) string { return v.Expression }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleQueryAgentRule)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput() GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) ToGetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleQueryAgentRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleQueryAgentRule {
		return vs[0].([]GetSecurityMonitoringRulesRuleQueryAgentRule)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleQueryAgentRuleOutput)
}

type GetSecurityMonitoringRulesRuleReferenceTable struct {
	// Whether to include or exclude logs that match the reference table.
	CheckPresence bool `pulumi:"checkPresence"`
	// The name of the column in the reference table.
	ColumnName string `pulumi:"columnName"`
	// The field in the log that should be matched against the reference table.
	LogFieldPath string `pulumi:"logFieldPath"`
	// The name of the query to filter.
	RuleQueryName string `pulumi:"ruleQueryName"`
	// The name of the reference table.
	TableName string `pulumi:"tableName"`
}

// GetSecurityMonitoringRulesRuleReferenceTableInput is an input type that accepts GetSecurityMonitoringRulesRuleReferenceTableArgs and GetSecurityMonitoringRulesRuleReferenceTableOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleReferenceTableInput` via:
//
//	GetSecurityMonitoringRulesRuleReferenceTableArgs{...}
type GetSecurityMonitoringRulesRuleReferenceTableInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleReferenceTableOutput() GetSecurityMonitoringRulesRuleReferenceTableOutput
	ToGetSecurityMonitoringRulesRuleReferenceTableOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleReferenceTableOutput
}

type GetSecurityMonitoringRulesRuleReferenceTableArgs struct {
	// Whether to include or exclude logs that match the reference table.
	CheckPresence pulumi.BoolInput `pulumi:"checkPresence"`
	// The name of the column in the reference table.
	ColumnName pulumi.StringInput `pulumi:"columnName"`
	// The field in the log that should be matched against the reference table.
	LogFieldPath pulumi.StringInput `pulumi:"logFieldPath"`
	// The name of the query to filter.
	RuleQueryName pulumi.StringInput `pulumi:"ruleQueryName"`
	// The name of the reference table.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (GetSecurityMonitoringRulesRuleReferenceTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleReferenceTable)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleReferenceTableArgs) ToGetSecurityMonitoringRulesRuleReferenceTableOutput() GetSecurityMonitoringRulesRuleReferenceTableOutput {
	return i.ToGetSecurityMonitoringRulesRuleReferenceTableOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleReferenceTableArgs) ToGetSecurityMonitoringRulesRuleReferenceTableOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleReferenceTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleReferenceTableOutput)
}

// GetSecurityMonitoringRulesRuleReferenceTableArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleReferenceTableArray and GetSecurityMonitoringRulesRuleReferenceTableArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleReferenceTableArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleReferenceTableArray{ GetSecurityMonitoringRulesRuleReferenceTableArgs{...} }
type GetSecurityMonitoringRulesRuleReferenceTableArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleReferenceTableArrayOutput() GetSecurityMonitoringRulesRuleReferenceTableArrayOutput
	ToGetSecurityMonitoringRulesRuleReferenceTableArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleReferenceTableArrayOutput
}

type GetSecurityMonitoringRulesRuleReferenceTableArray []GetSecurityMonitoringRulesRuleReferenceTableInput

func (GetSecurityMonitoringRulesRuleReferenceTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleReferenceTable)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleReferenceTableArray) ToGetSecurityMonitoringRulesRuleReferenceTableArrayOutput() GetSecurityMonitoringRulesRuleReferenceTableArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleReferenceTableArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleReferenceTableArray) ToGetSecurityMonitoringRulesRuleReferenceTableArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleReferenceTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleReferenceTableArrayOutput)
}

type GetSecurityMonitoringRulesRuleReferenceTableOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleReferenceTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleReferenceTable)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleReferenceTableOutput) ToGetSecurityMonitoringRulesRuleReferenceTableOutput() GetSecurityMonitoringRulesRuleReferenceTableOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleReferenceTableOutput) ToGetSecurityMonitoringRulesRuleReferenceTableOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleReferenceTableOutput {
	return o
}

// Whether to include or exclude logs that match the reference table.
func (o GetSecurityMonitoringRulesRuleReferenceTableOutput) CheckPresence() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleReferenceTable) bool { return v.CheckPresence }).(pulumi.BoolOutput)
}

// The name of the column in the reference table.
func (o GetSecurityMonitoringRulesRuleReferenceTableOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleReferenceTable) string { return v.ColumnName }).(pulumi.StringOutput)
}

// The field in the log that should be matched against the reference table.
func (o GetSecurityMonitoringRulesRuleReferenceTableOutput) LogFieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleReferenceTable) string { return v.LogFieldPath }).(pulumi.StringOutput)
}

// The name of the query to filter.
func (o GetSecurityMonitoringRulesRuleReferenceTableOutput) RuleQueryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleReferenceTable) string { return v.RuleQueryName }).(pulumi.StringOutput)
}

// The name of the reference table.
func (o GetSecurityMonitoringRulesRuleReferenceTableOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleReferenceTable) string { return v.TableName }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleReferenceTableArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleReferenceTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleReferenceTable)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleReferenceTableArrayOutput) ToGetSecurityMonitoringRulesRuleReferenceTableArrayOutput() GetSecurityMonitoringRulesRuleReferenceTableArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleReferenceTableArrayOutput) ToGetSecurityMonitoringRulesRuleReferenceTableArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleReferenceTableArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleReferenceTableArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleReferenceTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleReferenceTable {
		return vs[0].([]GetSecurityMonitoringRulesRuleReferenceTable)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleReferenceTableOutput)
}

type GetSecurityMonitoringRulesRuleSignalQuery struct {
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation *string `pulumi:"aggregation"`
	// Fields to correlate by.
	CorrelatedByFields []string `pulumi:"correlatedByFields"`
	// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule.
	CorrelatedQueryIndex *string `pulumi:"correlatedQueryIndex"`
	// Default Rule ID of the signal to correlate. This value is READ-ONLY.
	DefaultRuleId *string `pulumi:"defaultRuleId"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name *string `pulumi:"name"`
	// Rule ID of the signal to correlate.
	RuleId string `pulumi:"ruleId"`
}

// GetSecurityMonitoringRulesRuleSignalQueryInput is an input type that accepts GetSecurityMonitoringRulesRuleSignalQueryArgs and GetSecurityMonitoringRulesRuleSignalQueryOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleSignalQueryInput` via:
//
//	GetSecurityMonitoringRulesRuleSignalQueryArgs{...}
type GetSecurityMonitoringRulesRuleSignalQueryInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleSignalQueryOutput() GetSecurityMonitoringRulesRuleSignalQueryOutput
	ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleSignalQueryOutput
}

type GetSecurityMonitoringRulesRuleSignalQueryArgs struct {
	// The aggregation type. For Signal Correlation rules, it must be event_count.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Fields to correlate by.
	CorrelatedByFields pulumi.StringArrayInput `pulumi:"correlatedByFields"`
	// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule.
	CorrelatedQueryIndex pulumi.StringPtrInput `pulumi:"correlatedQueryIndex"`
	// Default Rule ID of the signal to correlate. This value is READ-ONLY.
	DefaultRuleId pulumi.StringPtrInput `pulumi:"defaultRuleId"`
	// Name of the query. Not compatible with `newValue` aggregations.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule ID of the signal to correlate.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
}

func (GetSecurityMonitoringRulesRuleSignalQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArgs) ToGetSecurityMonitoringRulesRuleSignalQueryOutput() GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return i.ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArgs) ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleSignalQueryOutput)
}

// GetSecurityMonitoringRulesRuleSignalQueryArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleSignalQueryArray and GetSecurityMonitoringRulesRuleSignalQueryArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleSignalQueryArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleSignalQueryArray{ GetSecurityMonitoringRulesRuleSignalQueryArgs{...} }
type GetSecurityMonitoringRulesRuleSignalQueryArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutput() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput
	ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleSignalQueryArrayOutput
}

type GetSecurityMonitoringRulesRuleSignalQueryArray []GetSecurityMonitoringRulesRuleSignalQueryInput

func (GetSecurityMonitoringRulesRuleSignalQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArray) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutput() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleSignalQueryArray) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleSignalQueryArrayOutput)
}

type GetSecurityMonitoringRulesRuleSignalQueryOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleSignalQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) ToGetSecurityMonitoringRulesRuleSignalQueryOutput() GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) ToGetSecurityMonitoringRulesRuleSignalQueryOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return o
}

// The aggregation type. For Signal Correlation rules, it must be event_count.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Fields to correlate by.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) CorrelatedByFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) []string { return v.CorrelatedByFields }).(pulumi.StringArrayOutput)
}

// Index of the rule query used to retrieve the correlated field. An empty string applies correlation on the non-projected per query attributes of the rule.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) CorrelatedQueryIndex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.CorrelatedQueryIndex }).(pulumi.StringPtrOutput)
}

// Default Rule ID of the signal to correlate. This value is READ-ONLY.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) DefaultRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.DefaultRuleId }).(pulumi.StringPtrOutput)
}

// Name of the query. Not compatible with `newValue` aggregations.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule ID of the signal to correlate.
func (o GetSecurityMonitoringRulesRuleSignalQueryOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleSignalQuery) string { return v.RuleId }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleSignalQueryArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleSignalQuery)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutput() GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) ToGetSecurityMonitoringRulesRuleSignalQueryArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleSignalQueryArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleSignalQueryArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleSignalQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleSignalQuery {
		return vs[0].([]GetSecurityMonitoringRulesRuleSignalQuery)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleSignalQueryOutput)
}

type GetSecurityMonitoringRulesRuleThirdPartyCase struct {
	// Name of the case.
	Name *string `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications []string `pulumi:"notifications"`
	// A query to associate a third-party event to this case.
	Query *string `pulumi:"query"`
	// Severity of the Security Signal.
	Status string `pulumi:"status"`
}

// GetSecurityMonitoringRulesRuleThirdPartyCaseInput is an input type that accepts GetSecurityMonitoringRulesRuleThirdPartyCaseArgs and GetSecurityMonitoringRulesRuleThirdPartyCaseOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleThirdPartyCaseInput` via:
//
//	GetSecurityMonitoringRulesRuleThirdPartyCaseArgs{...}
type GetSecurityMonitoringRulesRuleThirdPartyCaseInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseOutput
	ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseArgs struct {
	// Name of the case.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Notification targets for each rule case.
	Notifications pulumi.StringArrayInput `pulumi:"notifications"`
	// A query to associate a third-party event to this case.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Severity of the Security Signal.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetSecurityMonitoringRulesRuleThirdPartyCaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArgs) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return i.ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArgs) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleThirdPartyCaseOutput)
}

// GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput is an input type that accepts GetSecurityMonitoringRulesRuleThirdPartyCaseArray and GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput` via:
//
//	GetSecurityMonitoringRulesRuleThirdPartyCaseArray{ GetSecurityMonitoringRulesRuleThirdPartyCaseArgs{...} }
type GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput
	ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseArray []GetSecurityMonitoringRulesRuleThirdPartyCaseInput

func (GetSecurityMonitoringRulesRuleThirdPartyCaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArray) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return i.ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringRulesRuleThirdPartyCaseArray) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput)
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return o
}

// Name of the case.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Notification targets for each rule case.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Notifications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) []string { return v.Notifications }).(pulumi.StringArrayOutput)
}

// A query to associate a third-party event to this case.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Severity of the Security Signal.
func (o GetSecurityMonitoringRulesRuleThirdPartyCaseOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringRulesRuleThirdPartyCase) string { return v.Status }).(pulumi.StringOutput)
}

type GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringRulesRuleThirdPartyCase)(nil)).Elem()
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput() GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) ToGetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput {
	return o
}

func (o GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringRulesRuleThirdPartyCaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringRulesRuleThirdPartyCase {
		return vs[0].([]GetSecurityMonitoringRulesRuleThirdPartyCase)[vs[1].(int)]
	}).(GetSecurityMonitoringRulesRuleThirdPartyCaseOutput)
}

type GetSecurityMonitoringSuppressionsSuppression struct {
	DataExclusionQuery string `pulumi:"dataExclusionQuery"`
	Description        string `pulumi:"description"`
	Enabled            bool   `pulumi:"enabled"`
	ExpirationDate     string `pulumi:"expirationDate"`
	Id                 string `pulumi:"id"`
	Name               string `pulumi:"name"`
	RuleQuery          string `pulumi:"ruleQuery"`
	StartDate          string `pulumi:"startDate"`
	SuppressionQuery   string `pulumi:"suppressionQuery"`
}

// GetSecurityMonitoringSuppressionsSuppressionInput is an input type that accepts GetSecurityMonitoringSuppressionsSuppressionArgs and GetSecurityMonitoringSuppressionsSuppressionOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringSuppressionsSuppressionInput` via:
//
//	GetSecurityMonitoringSuppressionsSuppressionArgs{...}
type GetSecurityMonitoringSuppressionsSuppressionInput interface {
	pulumi.Input

	ToGetSecurityMonitoringSuppressionsSuppressionOutput() GetSecurityMonitoringSuppressionsSuppressionOutput
	ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(context.Context) GetSecurityMonitoringSuppressionsSuppressionOutput
}

type GetSecurityMonitoringSuppressionsSuppressionArgs struct {
	DataExclusionQuery pulumi.StringInput `pulumi:"dataExclusionQuery"`
	Description        pulumi.StringInput `pulumi:"description"`
	Enabled            pulumi.BoolInput   `pulumi:"enabled"`
	ExpirationDate     pulumi.StringInput `pulumi:"expirationDate"`
	Id                 pulumi.StringInput `pulumi:"id"`
	Name               pulumi.StringInput `pulumi:"name"`
	RuleQuery          pulumi.StringInput `pulumi:"ruleQuery"`
	StartDate          pulumi.StringInput `pulumi:"startDate"`
	SuppressionQuery   pulumi.StringInput `pulumi:"suppressionQuery"`
}

func (GetSecurityMonitoringSuppressionsSuppressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (i GetSecurityMonitoringSuppressionsSuppressionArgs) ToGetSecurityMonitoringSuppressionsSuppressionOutput() GetSecurityMonitoringSuppressionsSuppressionOutput {
	return i.ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringSuppressionsSuppressionArgs) ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringSuppressionsSuppressionOutput)
}

// GetSecurityMonitoringSuppressionsSuppressionArrayInput is an input type that accepts GetSecurityMonitoringSuppressionsSuppressionArray and GetSecurityMonitoringSuppressionsSuppressionArrayOutput values.
// You can construct a concrete instance of `GetSecurityMonitoringSuppressionsSuppressionArrayInput` via:
//
//	GetSecurityMonitoringSuppressionsSuppressionArray{ GetSecurityMonitoringSuppressionsSuppressionArgs{...} }
type GetSecurityMonitoringSuppressionsSuppressionArrayInput interface {
	pulumi.Input

	ToGetSecurityMonitoringSuppressionsSuppressionArrayOutput() GetSecurityMonitoringSuppressionsSuppressionArrayOutput
	ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(context.Context) GetSecurityMonitoringSuppressionsSuppressionArrayOutput
}

type GetSecurityMonitoringSuppressionsSuppressionArray []GetSecurityMonitoringSuppressionsSuppressionInput

func (GetSecurityMonitoringSuppressionsSuppressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (i GetSecurityMonitoringSuppressionsSuppressionArray) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutput() GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return i.ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(context.Background())
}

func (i GetSecurityMonitoringSuppressionsSuppressionArray) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityMonitoringSuppressionsSuppressionArrayOutput)
}

type GetSecurityMonitoringSuppressionsSuppressionOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringSuppressionsSuppressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) ToGetSecurityMonitoringSuppressionsSuppressionOutput() GetSecurityMonitoringSuppressionsSuppressionOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) ToGetSecurityMonitoringSuppressionsSuppressionOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) DataExclusionQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.DataExclusionQuery }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.ExpirationDate }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) RuleQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.RuleQuery }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.StartDate }).(pulumi.StringOutput)
}

func (o GetSecurityMonitoringSuppressionsSuppressionOutput) SuppressionQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityMonitoringSuppressionsSuppression) string { return v.SuppressionQuery }).(pulumi.StringOutput)
}

type GetSecurityMonitoringSuppressionsSuppressionArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityMonitoringSuppressionsSuppressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityMonitoringSuppressionsSuppression)(nil)).Elem()
}

func (o GetSecurityMonitoringSuppressionsSuppressionArrayOutput) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutput() GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionArrayOutput) ToGetSecurityMonitoringSuppressionsSuppressionArrayOutputWithContext(ctx context.Context) GetSecurityMonitoringSuppressionsSuppressionArrayOutput {
	return o
}

func (o GetSecurityMonitoringSuppressionsSuppressionArrayOutput) Index(i pulumi.IntInput) GetSecurityMonitoringSuppressionsSuppressionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityMonitoringSuppressionsSuppression {
		return vs[0].([]GetSecurityMonitoringSuppressionsSuppression)[vs[1].(int)]
	}).(GetSecurityMonitoringSuppressionsSuppressionOutput)
}

type GetServiceLevelObjectiveQuery struct {
	// The sum of the `total` events.
	Denominator string `pulumi:"denominator"`
	// The sum of all the `good` events.
	Numerator string `pulumi:"numerator"`
}

// GetServiceLevelObjectiveQueryInput is an input type that accepts GetServiceLevelObjectiveQueryArgs and GetServiceLevelObjectiveQueryOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectiveQueryInput` via:
//
//	GetServiceLevelObjectiveQueryArgs{...}
type GetServiceLevelObjectiveQueryInput interface {
	pulumi.Input

	ToGetServiceLevelObjectiveQueryOutput() GetServiceLevelObjectiveQueryOutput
	ToGetServiceLevelObjectiveQueryOutputWithContext(context.Context) GetServiceLevelObjectiveQueryOutput
}

type GetServiceLevelObjectiveQueryArgs struct {
	// The sum of the `total` events.
	Denominator pulumi.StringInput `pulumi:"denominator"`
	// The sum of all the `good` events.
	Numerator pulumi.StringInput `pulumi:"numerator"`
}

func (GetServiceLevelObjectiveQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (i GetServiceLevelObjectiveQueryArgs) ToGetServiceLevelObjectiveQueryOutput() GetServiceLevelObjectiveQueryOutput {
	return i.ToGetServiceLevelObjectiveQueryOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectiveQueryArgs) ToGetServiceLevelObjectiveQueryOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectiveQueryOutput)
}

// GetServiceLevelObjectiveQueryArrayInput is an input type that accepts GetServiceLevelObjectiveQueryArray and GetServiceLevelObjectiveQueryArrayOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectiveQueryArrayInput` via:
//
//	GetServiceLevelObjectiveQueryArray{ GetServiceLevelObjectiveQueryArgs{...} }
type GetServiceLevelObjectiveQueryArrayInput interface {
	pulumi.Input

	ToGetServiceLevelObjectiveQueryArrayOutput() GetServiceLevelObjectiveQueryArrayOutput
	ToGetServiceLevelObjectiveQueryArrayOutputWithContext(context.Context) GetServiceLevelObjectiveQueryArrayOutput
}

type GetServiceLevelObjectiveQueryArray []GetServiceLevelObjectiveQueryInput

func (GetServiceLevelObjectiveQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (i GetServiceLevelObjectiveQueryArray) ToGetServiceLevelObjectiveQueryArrayOutput() GetServiceLevelObjectiveQueryArrayOutput {
	return i.ToGetServiceLevelObjectiveQueryArrayOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectiveQueryArray) ToGetServiceLevelObjectiveQueryArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectiveQueryArrayOutput)
}

type GetServiceLevelObjectiveQueryOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectiveQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (o GetServiceLevelObjectiveQueryOutput) ToGetServiceLevelObjectiveQueryOutput() GetServiceLevelObjectiveQueryOutput {
	return o
}

func (o GetServiceLevelObjectiveQueryOutput) ToGetServiceLevelObjectiveQueryOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryOutput {
	return o
}

// The sum of the `total` events.
func (o GetServiceLevelObjectiveQueryOutput) Denominator() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectiveQuery) string { return v.Denominator }).(pulumi.StringOutput)
}

// The sum of all the `good` events.
func (o GetServiceLevelObjectiveQueryOutput) Numerator() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectiveQuery) string { return v.Numerator }).(pulumi.StringOutput)
}

type GetServiceLevelObjectiveQueryArrayOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectiveQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectiveQuery)(nil)).Elem()
}

func (o GetServiceLevelObjectiveQueryArrayOutput) ToGetServiceLevelObjectiveQueryArrayOutput() GetServiceLevelObjectiveQueryArrayOutput {
	return o
}

func (o GetServiceLevelObjectiveQueryArrayOutput) ToGetServiceLevelObjectiveQueryArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectiveQueryArrayOutput {
	return o
}

func (o GetServiceLevelObjectiveQueryArrayOutput) Index(i pulumi.IntInput) GetServiceLevelObjectiveQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceLevelObjectiveQuery {
		return vs[0].([]GetServiceLevelObjectiveQuery)[vs[1].(int)]
	}).(GetServiceLevelObjectiveQueryOutput)
}

type GetServiceLevelObjectivesSlo struct {
	// ID of the Datadog service level objective
	Id string `pulumi:"id"`
	// Name of the Datadog service level objective
	Name string `pulumi:"name"`
	// The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.
	Type string `pulumi:"type"`
}

// GetServiceLevelObjectivesSloInput is an input type that accepts GetServiceLevelObjectivesSloArgs and GetServiceLevelObjectivesSloOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectivesSloInput` via:
//
//	GetServiceLevelObjectivesSloArgs{...}
type GetServiceLevelObjectivesSloInput interface {
	pulumi.Input

	ToGetServiceLevelObjectivesSloOutput() GetServiceLevelObjectivesSloOutput
	ToGetServiceLevelObjectivesSloOutputWithContext(context.Context) GetServiceLevelObjectivesSloOutput
}

type GetServiceLevelObjectivesSloArgs struct {
	// ID of the Datadog service level objective
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the Datadog service level objective
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServiceLevelObjectivesSloArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (i GetServiceLevelObjectivesSloArgs) ToGetServiceLevelObjectivesSloOutput() GetServiceLevelObjectivesSloOutput {
	return i.ToGetServiceLevelObjectivesSloOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectivesSloArgs) ToGetServiceLevelObjectivesSloOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectivesSloOutput)
}

// GetServiceLevelObjectivesSloArrayInput is an input type that accepts GetServiceLevelObjectivesSloArray and GetServiceLevelObjectivesSloArrayOutput values.
// You can construct a concrete instance of `GetServiceLevelObjectivesSloArrayInput` via:
//
//	GetServiceLevelObjectivesSloArray{ GetServiceLevelObjectivesSloArgs{...} }
type GetServiceLevelObjectivesSloArrayInput interface {
	pulumi.Input

	ToGetServiceLevelObjectivesSloArrayOutput() GetServiceLevelObjectivesSloArrayOutput
	ToGetServiceLevelObjectivesSloArrayOutputWithContext(context.Context) GetServiceLevelObjectivesSloArrayOutput
}

type GetServiceLevelObjectivesSloArray []GetServiceLevelObjectivesSloInput

func (GetServiceLevelObjectivesSloArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (i GetServiceLevelObjectivesSloArray) ToGetServiceLevelObjectivesSloArrayOutput() GetServiceLevelObjectivesSloArrayOutput {
	return i.ToGetServiceLevelObjectivesSloArrayOutputWithContext(context.Background())
}

func (i GetServiceLevelObjectivesSloArray) ToGetServiceLevelObjectivesSloArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceLevelObjectivesSloArrayOutput)
}

type GetServiceLevelObjectivesSloOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectivesSloOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (o GetServiceLevelObjectivesSloOutput) ToGetServiceLevelObjectivesSloOutput() GetServiceLevelObjectivesSloOutput {
	return o
}

func (o GetServiceLevelObjectivesSloOutput) ToGetServiceLevelObjectivesSloOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloOutput {
	return o
}

// ID of the Datadog service level objective
func (o GetServiceLevelObjectivesSloOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectivesSlo) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the Datadog service level objective
func (o GetServiceLevelObjectivesSloOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectivesSlo) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Available options to choose from are: `metric` and `monitor`.
func (o GetServiceLevelObjectivesSloOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceLevelObjectivesSlo) string { return v.Type }).(pulumi.StringOutput)
}

type GetServiceLevelObjectivesSloArrayOutput struct{ *pulumi.OutputState }

func (GetServiceLevelObjectivesSloArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceLevelObjectivesSlo)(nil)).Elem()
}

func (o GetServiceLevelObjectivesSloArrayOutput) ToGetServiceLevelObjectivesSloArrayOutput() GetServiceLevelObjectivesSloArrayOutput {
	return o
}

func (o GetServiceLevelObjectivesSloArrayOutput) ToGetServiceLevelObjectivesSloArrayOutputWithContext(ctx context.Context) GetServiceLevelObjectivesSloArrayOutput {
	return o
}

func (o GetServiceLevelObjectivesSloArrayOutput) Index(i pulumi.IntInput) GetServiceLevelObjectivesSloOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceLevelObjectivesSlo {
		return vs[0].([]GetServiceLevelObjectivesSlo)[vs[1].(int)]
	}).(GetServiceLevelObjectivesSloOutput)
}

type GetSoftwareCatalogEntity struct {
	DisplayName string   `pulumi:"displayName"`
	Id          string   `pulumi:"id"`
	Kind        string   `pulumi:"kind"`
	Name        string   `pulumi:"name"`
	Namespace   string   `pulumi:"namespace"`
	Owner       string   `pulumi:"owner"`
	Tags        []string `pulumi:"tags"`
}

// GetSoftwareCatalogEntityInput is an input type that accepts GetSoftwareCatalogEntityArgs and GetSoftwareCatalogEntityOutput values.
// You can construct a concrete instance of `GetSoftwareCatalogEntityInput` via:
//
//	GetSoftwareCatalogEntityArgs{...}
type GetSoftwareCatalogEntityInput interface {
	pulumi.Input

	ToGetSoftwareCatalogEntityOutput() GetSoftwareCatalogEntityOutput
	ToGetSoftwareCatalogEntityOutputWithContext(context.Context) GetSoftwareCatalogEntityOutput
}

type GetSoftwareCatalogEntityArgs struct {
	DisplayName pulumi.StringInput      `pulumi:"displayName"`
	Id          pulumi.StringInput      `pulumi:"id"`
	Kind        pulumi.StringInput      `pulumi:"kind"`
	Name        pulumi.StringInput      `pulumi:"name"`
	Namespace   pulumi.StringInput      `pulumi:"namespace"`
	Owner       pulumi.StringInput      `pulumi:"owner"`
	Tags        pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetSoftwareCatalogEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareCatalogEntity)(nil)).Elem()
}

func (i GetSoftwareCatalogEntityArgs) ToGetSoftwareCatalogEntityOutput() GetSoftwareCatalogEntityOutput {
	return i.ToGetSoftwareCatalogEntityOutputWithContext(context.Background())
}

func (i GetSoftwareCatalogEntityArgs) ToGetSoftwareCatalogEntityOutputWithContext(ctx context.Context) GetSoftwareCatalogEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareCatalogEntityOutput)
}

// GetSoftwareCatalogEntityArrayInput is an input type that accepts GetSoftwareCatalogEntityArray and GetSoftwareCatalogEntityArrayOutput values.
// You can construct a concrete instance of `GetSoftwareCatalogEntityArrayInput` via:
//
//	GetSoftwareCatalogEntityArray{ GetSoftwareCatalogEntityArgs{...} }
type GetSoftwareCatalogEntityArrayInput interface {
	pulumi.Input

	ToGetSoftwareCatalogEntityArrayOutput() GetSoftwareCatalogEntityArrayOutput
	ToGetSoftwareCatalogEntityArrayOutputWithContext(context.Context) GetSoftwareCatalogEntityArrayOutput
}

type GetSoftwareCatalogEntityArray []GetSoftwareCatalogEntityInput

func (GetSoftwareCatalogEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareCatalogEntity)(nil)).Elem()
}

func (i GetSoftwareCatalogEntityArray) ToGetSoftwareCatalogEntityArrayOutput() GetSoftwareCatalogEntityArrayOutput {
	return i.ToGetSoftwareCatalogEntityArrayOutputWithContext(context.Background())
}

func (i GetSoftwareCatalogEntityArray) ToGetSoftwareCatalogEntityArrayOutputWithContext(ctx context.Context) GetSoftwareCatalogEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSoftwareCatalogEntityArrayOutput)
}

type GetSoftwareCatalogEntityOutput struct{ *pulumi.OutputState }

func (GetSoftwareCatalogEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSoftwareCatalogEntity)(nil)).Elem()
}

func (o GetSoftwareCatalogEntityOutput) ToGetSoftwareCatalogEntityOutput() GetSoftwareCatalogEntityOutput {
	return o
}

func (o GetSoftwareCatalogEntityOutput) ToGetSoftwareCatalogEntityOutputWithContext(ctx context.Context) GetSoftwareCatalogEntityOutput {
	return o
}

func (o GetSoftwareCatalogEntityOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareCatalogEntity) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o GetSoftwareCatalogEntityOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareCatalogEntity) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSoftwareCatalogEntityOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareCatalogEntity) string { return v.Kind }).(pulumi.StringOutput)
}

func (o GetSoftwareCatalogEntityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareCatalogEntity) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSoftwareCatalogEntityOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareCatalogEntity) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o GetSoftwareCatalogEntityOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetSoftwareCatalogEntity) string { return v.Owner }).(pulumi.StringOutput)
}

func (o GetSoftwareCatalogEntityOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSoftwareCatalogEntity) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetSoftwareCatalogEntityArrayOutput struct{ *pulumi.OutputState }

func (GetSoftwareCatalogEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSoftwareCatalogEntity)(nil)).Elem()
}

func (o GetSoftwareCatalogEntityArrayOutput) ToGetSoftwareCatalogEntityArrayOutput() GetSoftwareCatalogEntityArrayOutput {
	return o
}

func (o GetSoftwareCatalogEntityArrayOutput) ToGetSoftwareCatalogEntityArrayOutputWithContext(ctx context.Context) GetSoftwareCatalogEntityArrayOutput {
	return o
}

func (o GetSoftwareCatalogEntityArrayOutput) Index(i pulumi.IntInput) GetSoftwareCatalogEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSoftwareCatalogEntity {
		return vs[0].([]GetSoftwareCatalogEntity)[vs[1].(int)]
	}).(GetSoftwareCatalogEntityOutput)
}

type GetTeamMembershipsTeamMembership struct {
	Id     string `pulumi:"id"`
	Role   string `pulumi:"role"`
	TeamId string `pulumi:"teamId"`
	UserId string `pulumi:"userId"`
}

// GetTeamMembershipsTeamMembershipInput is an input type that accepts GetTeamMembershipsTeamMembershipArgs and GetTeamMembershipsTeamMembershipOutput values.
// You can construct a concrete instance of `GetTeamMembershipsTeamMembershipInput` via:
//
//	GetTeamMembershipsTeamMembershipArgs{...}
type GetTeamMembershipsTeamMembershipInput interface {
	pulumi.Input

	ToGetTeamMembershipsTeamMembershipOutput() GetTeamMembershipsTeamMembershipOutput
	ToGetTeamMembershipsTeamMembershipOutputWithContext(context.Context) GetTeamMembershipsTeamMembershipOutput
}

type GetTeamMembershipsTeamMembershipArgs struct {
	Id     pulumi.StringInput `pulumi:"id"`
	Role   pulumi.StringInput `pulumi:"role"`
	TeamId pulumi.StringInput `pulumi:"teamId"`
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetTeamMembershipsTeamMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (i GetTeamMembershipsTeamMembershipArgs) ToGetTeamMembershipsTeamMembershipOutput() GetTeamMembershipsTeamMembershipOutput {
	return i.ToGetTeamMembershipsTeamMembershipOutputWithContext(context.Background())
}

func (i GetTeamMembershipsTeamMembershipArgs) ToGetTeamMembershipsTeamMembershipOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamMembershipsTeamMembershipOutput)
}

// GetTeamMembershipsTeamMembershipArrayInput is an input type that accepts GetTeamMembershipsTeamMembershipArray and GetTeamMembershipsTeamMembershipArrayOutput values.
// You can construct a concrete instance of `GetTeamMembershipsTeamMembershipArrayInput` via:
//
//	GetTeamMembershipsTeamMembershipArray{ GetTeamMembershipsTeamMembershipArgs{...} }
type GetTeamMembershipsTeamMembershipArrayInput interface {
	pulumi.Input

	ToGetTeamMembershipsTeamMembershipArrayOutput() GetTeamMembershipsTeamMembershipArrayOutput
	ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(context.Context) GetTeamMembershipsTeamMembershipArrayOutput
}

type GetTeamMembershipsTeamMembershipArray []GetTeamMembershipsTeamMembershipInput

func (GetTeamMembershipsTeamMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (i GetTeamMembershipsTeamMembershipArray) ToGetTeamMembershipsTeamMembershipArrayOutput() GetTeamMembershipsTeamMembershipArrayOutput {
	return i.ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(context.Background())
}

func (i GetTeamMembershipsTeamMembershipArray) ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamMembershipsTeamMembershipArrayOutput)
}

type GetTeamMembershipsTeamMembershipOutput struct{ *pulumi.OutputState }

func (GetTeamMembershipsTeamMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (o GetTeamMembershipsTeamMembershipOutput) ToGetTeamMembershipsTeamMembershipOutput() GetTeamMembershipsTeamMembershipOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipOutput) ToGetTeamMembershipsTeamMembershipOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTeamMembershipsTeamMembershipOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.Role }).(pulumi.StringOutput)
}

func (o GetTeamMembershipsTeamMembershipOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.TeamId }).(pulumi.StringOutput)
}

func (o GetTeamMembershipsTeamMembershipOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamMembershipsTeamMembership) string { return v.UserId }).(pulumi.StringOutput)
}

type GetTeamMembershipsTeamMembershipArrayOutput struct{ *pulumi.OutputState }

func (GetTeamMembershipsTeamMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamMembershipsTeamMembership)(nil)).Elem()
}

func (o GetTeamMembershipsTeamMembershipArrayOutput) ToGetTeamMembershipsTeamMembershipArrayOutput() GetTeamMembershipsTeamMembershipArrayOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipArrayOutput) ToGetTeamMembershipsTeamMembershipArrayOutputWithContext(ctx context.Context) GetTeamMembershipsTeamMembershipArrayOutput {
	return o
}

func (o GetTeamMembershipsTeamMembershipArrayOutput) Index(i pulumi.IntInput) GetTeamMembershipsTeamMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTeamMembershipsTeamMembership {
		return vs[0].([]GetTeamMembershipsTeamMembership)[vs[1].(int)]
	}).(GetTeamMembershipsTeamMembershipOutput)
}

type GetTeamsTeam struct {
	// Free-form markdown description/content for the team's homepage.
	Description string `pulumi:"description"`
	// The team's handle.
	Handle string `pulumi:"handle"`
	// The team's identifier.
	Id string `pulumi:"id"`
	// The number of links belonging to the team.
	LinkCount int `pulumi:"linkCount"`
	// The name of the team.
	Name string `pulumi:"name"`
	// A brief summary of the team, derived from the `description`.
	Summary string `pulumi:"summary"`
	// The number of users belonging to the team.
	UserCount int `pulumi:"userCount"`
}

// GetTeamsTeamInput is an input type that accepts GetTeamsTeamArgs and GetTeamsTeamOutput values.
// You can construct a concrete instance of `GetTeamsTeamInput` via:
//
//	GetTeamsTeamArgs{...}
type GetTeamsTeamInput interface {
	pulumi.Input

	ToGetTeamsTeamOutput() GetTeamsTeamOutput
	ToGetTeamsTeamOutputWithContext(context.Context) GetTeamsTeamOutput
}

type GetTeamsTeamArgs struct {
	// Free-form markdown description/content for the team's homepage.
	Description pulumi.StringInput `pulumi:"description"`
	// The team's handle.
	Handle pulumi.StringInput `pulumi:"handle"`
	// The team's identifier.
	Id pulumi.StringInput `pulumi:"id"`
	// The number of links belonging to the team.
	LinkCount pulumi.IntInput `pulumi:"linkCount"`
	// The name of the team.
	Name pulumi.StringInput `pulumi:"name"`
	// A brief summary of the team, derived from the `description`.
	Summary pulumi.StringInput `pulumi:"summary"`
	// The number of users belonging to the team.
	UserCount pulumi.IntInput `pulumi:"userCount"`
}

func (GetTeamsTeamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsTeam)(nil)).Elem()
}

func (i GetTeamsTeamArgs) ToGetTeamsTeamOutput() GetTeamsTeamOutput {
	return i.ToGetTeamsTeamOutputWithContext(context.Background())
}

func (i GetTeamsTeamArgs) ToGetTeamsTeamOutputWithContext(ctx context.Context) GetTeamsTeamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamsTeamOutput)
}

// GetTeamsTeamArrayInput is an input type that accepts GetTeamsTeamArray and GetTeamsTeamArrayOutput values.
// You can construct a concrete instance of `GetTeamsTeamArrayInput` via:
//
//	GetTeamsTeamArray{ GetTeamsTeamArgs{...} }
type GetTeamsTeamArrayInput interface {
	pulumi.Input

	ToGetTeamsTeamArrayOutput() GetTeamsTeamArrayOutput
	ToGetTeamsTeamArrayOutputWithContext(context.Context) GetTeamsTeamArrayOutput
}

type GetTeamsTeamArray []GetTeamsTeamInput

func (GetTeamsTeamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamsTeam)(nil)).Elem()
}

func (i GetTeamsTeamArray) ToGetTeamsTeamArrayOutput() GetTeamsTeamArrayOutput {
	return i.ToGetTeamsTeamArrayOutputWithContext(context.Background())
}

func (i GetTeamsTeamArray) ToGetTeamsTeamArrayOutputWithContext(ctx context.Context) GetTeamsTeamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTeamsTeamArrayOutput)
}

type GetTeamsTeamOutput struct{ *pulumi.OutputState }

func (GetTeamsTeamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTeamsTeam)(nil)).Elem()
}

func (o GetTeamsTeamOutput) ToGetTeamsTeamOutput() GetTeamsTeamOutput {
	return o
}

func (o GetTeamsTeamOutput) ToGetTeamsTeamOutputWithContext(ctx context.Context) GetTeamsTeamOutput {
	return o
}

// Free-form markdown description/content for the team's homepage.
func (o GetTeamsTeamOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsTeam) string { return v.Description }).(pulumi.StringOutput)
}

// The team's handle.
func (o GetTeamsTeamOutput) Handle() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsTeam) string { return v.Handle }).(pulumi.StringOutput)
}

// The team's identifier.
func (o GetTeamsTeamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsTeam) string { return v.Id }).(pulumi.StringOutput)
}

// The number of links belonging to the team.
func (o GetTeamsTeamOutput) LinkCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTeamsTeam) int { return v.LinkCount }).(pulumi.IntOutput)
}

// The name of the team.
func (o GetTeamsTeamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsTeam) string { return v.Name }).(pulumi.StringOutput)
}

// A brief summary of the team, derived from the `description`.
func (o GetTeamsTeamOutput) Summary() pulumi.StringOutput {
	return o.ApplyT(func(v GetTeamsTeam) string { return v.Summary }).(pulumi.StringOutput)
}

// The number of users belonging to the team.
func (o GetTeamsTeamOutput) UserCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTeamsTeam) int { return v.UserCount }).(pulumi.IntOutput)
}

type GetTeamsTeamArrayOutput struct{ *pulumi.OutputState }

func (GetTeamsTeamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTeamsTeam)(nil)).Elem()
}

func (o GetTeamsTeamArrayOutput) ToGetTeamsTeamArrayOutput() GetTeamsTeamArrayOutput {
	return o
}

func (o GetTeamsTeamArrayOutput) ToGetTeamsTeamArrayOutputWithContext(ctx context.Context) GetTeamsTeamArrayOutput {
	return o
}

func (o GetTeamsTeamArrayOutput) Index(i pulumi.IntInput) GetTeamsTeamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTeamsTeam {
		return vs[0].([]GetTeamsTeam)[vs[1].(int)]
	}).(GetTeamsTeamOutput)
}

type GetUsersUser struct {
	CreatedAt      string `pulumi:"createdAt"`
	Disabled       bool   `pulumi:"disabled"`
	Email          string `pulumi:"email"`
	Handle         string `pulumi:"handle"`
	Icon           string `pulumi:"icon"`
	Id             string `pulumi:"id"`
	MfaEnabled     bool   `pulumi:"mfaEnabled"`
	ModifiedAt     string `pulumi:"modifiedAt"`
	Name           string `pulumi:"name"`
	ServiceAccount bool   `pulumi:"serviceAccount"`
	Status         string `pulumi:"status"`
	Title          string `pulumi:"title"`
	Verified       bool   `pulumi:"verified"`
}

// GetUsersUserInput is an input type that accepts GetUsersUserArgs and GetUsersUserOutput values.
// You can construct a concrete instance of `GetUsersUserInput` via:
//
//	GetUsersUserArgs{...}
type GetUsersUserInput interface {
	pulumi.Input

	ToGetUsersUserOutput() GetUsersUserOutput
	ToGetUsersUserOutputWithContext(context.Context) GetUsersUserOutput
}

type GetUsersUserArgs struct {
	CreatedAt      pulumi.StringInput `pulumi:"createdAt"`
	Disabled       pulumi.BoolInput   `pulumi:"disabled"`
	Email          pulumi.StringInput `pulumi:"email"`
	Handle         pulumi.StringInput `pulumi:"handle"`
	Icon           pulumi.StringInput `pulumi:"icon"`
	Id             pulumi.StringInput `pulumi:"id"`
	MfaEnabled     pulumi.BoolInput   `pulumi:"mfaEnabled"`
	ModifiedAt     pulumi.StringInput `pulumi:"modifiedAt"`
	Name           pulumi.StringInput `pulumi:"name"`
	ServiceAccount pulumi.BoolInput   `pulumi:"serviceAccount"`
	Status         pulumi.StringInput `pulumi:"status"`
	Title          pulumi.StringInput `pulumi:"title"`
	Verified       pulumi.BoolInput   `pulumi:"verified"`
}

func (GetUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArgs) ToGetUsersUserOutput() GetUsersUserOutput {
	return i.ToGetUsersUserOutputWithContext(context.Background())
}

func (i GetUsersUserArgs) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserOutput)
}

// GetUsersUserArrayInput is an input type that accepts GetUsersUserArray and GetUsersUserArrayOutput values.
// You can construct a concrete instance of `GetUsersUserArrayInput` via:
//
//	GetUsersUserArray{ GetUsersUserArgs{...} }
type GetUsersUserArrayInput interface {
	pulumi.Input

	ToGetUsersUserArrayOutput() GetUsersUserArrayOutput
	ToGetUsersUserArrayOutputWithContext(context.Context) GetUsersUserArrayOutput
}

type GetUsersUserArray []GetUsersUserInput

func (GetUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return i.ToGetUsersUserArrayOutputWithContext(context.Background())
}

func (i GetUsersUserArray) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUsersUserArrayOutput)
}

type GetUsersUserOutput struct{ *pulumi.OutputState }

func (GetUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserOutput) ToGetUsersUserOutput() GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) ToGetUsersUserOutputWithContext(ctx context.Context) GetUsersUserOutput {
	return o
}

func (o GetUsersUserOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Disabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.Disabled }).(pulumi.BoolOutput)
}

func (o GetUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Handle() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Handle }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Icon() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Icon }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) MfaEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.MfaEnabled }).(pulumi.BoolOutput)
}

func (o GetUsersUserOutput) ModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.ModifiedAt }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) ServiceAccount() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.ServiceAccount }).(pulumi.BoolOutput)
}

func (o GetUsersUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsersUser) string { return v.Title }).(pulumi.StringOutput)
}

func (o GetUsersUserOutput) Verified() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUsersUser) bool { return v.Verified }).(pulumi.BoolOutput)
}

type GetUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUsersUser)(nil)).Elem()
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutput() GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) ToGetUsersUserArrayOutputWithContext(ctx context.Context) GetUsersUserArrayOutput {
	return o
}

func (o GetUsersUserArrayOutput) Index(i pulumi.IntInput) GetUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUsersUser {
		return vs[0].([]GetUsersUser)[vs[1].(int)]
	}).(GetUsersUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestProcessQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestProcessQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryArrayInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestRumQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestStyleInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRequestStylePtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRequestStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRightYaxisInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRightYaxisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionRightYaxisPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionRightYaxisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionYaxisInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionYaxisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTimeseriesDefinitionYaxisPtrInput)(nil)).Elem(), PowerpackWidgetTimeseriesDefinitionYaxisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionCustomLinkInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionCustomLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionCustomLinkArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionCustomLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestApmQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestApmQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryGroupByInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestAuditQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestAuditQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestConditionalFormatInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestConditionalFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaLimitInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaStyleInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestFormulaStylePtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestFormulaStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestLogQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestLogQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryGroupByInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestProcessQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestProcessQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestProcessQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestProcessQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryEventQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryMetricQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryProcessQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQueryProcessQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQuerySloQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestQuerySloQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestRumQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestRumQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryGroupByInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestSecurityQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestStyleInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionRequestStylePtrInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionRequestStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionStyleInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionStyleArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionStyleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionStyleDisplayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionStyleDisplayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetToplistDefinitionStyleDisplayArrayInput)(nil)).Elem(), PowerpackWidgetToplistDefinitionStyleDisplayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionInput)(nil)).Elem(), PowerpackWidgetTopologyMapDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionPtrInput)(nil)).Elem(), PowerpackWidgetTopologyMapDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionCustomLinkInput)(nil)).Elem(), PowerpackWidgetTopologyMapDefinitionCustomLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionCustomLinkArrayInput)(nil)).Elem(), PowerpackWidgetTopologyMapDefinitionCustomLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionRequestInput)(nil)).Elem(), PowerpackWidgetTopologyMapDefinitionRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionRequestArrayInput)(nil)).Elem(), PowerpackWidgetTopologyMapDefinitionRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionRequestQueryInput)(nil)).Elem(), PowerpackWidgetTopologyMapDefinitionRequestQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTopologyMapDefinitionRequestQueryArrayInput)(nil)).Elem(), PowerpackWidgetTopologyMapDefinitionRequestQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTraceServiceDefinitionInput)(nil)).Elem(), PowerpackWidgetTraceServiceDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTraceServiceDefinitionPtrInput)(nil)).Elem(), PowerpackWidgetTraceServiceDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestArrayInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaArrayInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaLimitInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaStyleInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestFormulaStyleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryArrayInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryEventQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQuerySloQueryInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrInput)(nil)).Elem(), PowerpackWidgetTreemapDefinitionRequestQuerySloQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetWidgetLayoutInput)(nil)).Elem(), PowerpackWidgetWidgetLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PowerpackWidgetWidgetLayoutPtrInput)(nil)).Elem(), PowerpackWidgetWidgetLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderDefaultTagsInput)(nil)).Elem(), ProviderDefaultTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderDefaultTagsPtrInput)(nil)).Elem(), ProviderDefaultTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestrictionPolicyBindingInput)(nil)).Elem(), RestrictionPolicyBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestrictionPolicyBindingArrayInput)(nil)).Elem(), RestrictionPolicyBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePermissionInput)(nil)).Elem(), RolePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePermissionArrayInput)(nil)).Elem(), RolePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumMetricComputeInput)(nil)).Elem(), RumMetricComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumMetricComputePtrInput)(nil)).Elem(), RumMetricComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumMetricFilterInput)(nil)).Elem(), RumMetricFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumMetricFilterPtrInput)(nil)).Elem(), RumMetricFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumMetricGroupByInput)(nil)).Elem(), RumMetricGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumMetricGroupByArrayInput)(nil)).Elem(), RumMetricGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumMetricUniquenessInput)(nil)).Elem(), RumMetricUniquenessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumMetricUniquenessPtrInput)(nil)).Elem(), RumMetricUniquenessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringDefaultRuleCaseInput)(nil)).Elem(), SecurityMonitoringDefaultRuleCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringDefaultRuleCaseArrayInput)(nil)).Elem(), SecurityMonitoringDefaultRuleCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringDefaultRuleFilterInput)(nil)).Elem(), SecurityMonitoringDefaultRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringDefaultRuleFilterArrayInput)(nil)).Elem(), SecurityMonitoringDefaultRuleFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringDefaultRuleOptionsInput)(nil)).Elem(), SecurityMonitoringDefaultRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringDefaultRuleOptionsPtrInput)(nil)).Elem(), SecurityMonitoringDefaultRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringFilterExclusionFilterInput)(nil)).Elem(), SecurityMonitoringFilterExclusionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringFilterExclusionFilterArrayInput)(nil)).Elem(), SecurityMonitoringFilterExclusionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleCaseInput)(nil)).Elem(), SecurityMonitoringRuleCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleCaseArrayInput)(nil)).Elem(), SecurityMonitoringRuleCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleCaseActionInput)(nil)).Elem(), SecurityMonitoringRuleCaseActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleCaseActionArrayInput)(nil)).Elem(), SecurityMonitoringRuleCaseActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleCaseActionOptionsInput)(nil)).Elem(), SecurityMonitoringRuleCaseActionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleCaseActionOptionsPtrInput)(nil)).Elem(), SecurityMonitoringRuleCaseActionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleFilterInput)(nil)).Elem(), SecurityMonitoringRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleFilterArrayInput)(nil)).Elem(), SecurityMonitoringRuleFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleOptionsInput)(nil)).Elem(), SecurityMonitoringRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleOptionsPtrInput)(nil)).Elem(), SecurityMonitoringRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleOptionsImpossibleTravelOptionsInput)(nil)).Elem(), SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrInput)(nil)).Elem(), SecurityMonitoringRuleOptionsImpossibleTravelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleOptionsNewValueOptionsInput)(nil)).Elem(), SecurityMonitoringRuleOptionsNewValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleOptionsNewValueOptionsPtrInput)(nil)).Elem(), SecurityMonitoringRuleOptionsNewValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleOptionsThirdPartyRuleOptionsInput)(nil)).Elem(), SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrInput)(nil)).Elem(), SecurityMonitoringRuleOptionsThirdPartyRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryInput)(nil)).Elem(), SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput)(nil)).Elem(), SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleQueryInput)(nil)).Elem(), SecurityMonitoringRuleQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleQueryArrayInput)(nil)).Elem(), SecurityMonitoringRuleQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleQueryAgentRuleInput)(nil)).Elem(), SecurityMonitoringRuleQueryAgentRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleQueryAgentRuleArrayInput)(nil)).Elem(), SecurityMonitoringRuleQueryAgentRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleReferenceTableInput)(nil)).Elem(), SecurityMonitoringRuleReferenceTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleReferenceTableArrayInput)(nil)).Elem(), SecurityMonitoringRuleReferenceTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleSignalQueryInput)(nil)).Elem(), SecurityMonitoringRuleSignalQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleSignalQueryArrayInput)(nil)).Elem(), SecurityMonitoringRuleSignalQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleThirdPartyCaseInput)(nil)).Elem(), SecurityMonitoringRuleThirdPartyCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityMonitoringRuleThirdPartyCaseArrayInput)(nil)).Elem(), SecurityMonitoringRuleThirdPartyCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityNotificationRuleSelectorsInput)(nil)).Elem(), SecurityNotificationRuleSelectorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityNotificationRuleSelectorsPtrInput)(nil)).Elem(), SecurityNotificationRuleSelectorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataScannerGroupFilterInput)(nil)).Elem(), SensitiveDataScannerGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataScannerGroupFilterPtrInput)(nil)).Elem(), SensitiveDataScannerGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataScannerRuleIncludedKeywordConfigurationInput)(nil)).Elem(), SensitiveDataScannerRuleIncludedKeywordConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataScannerRuleIncludedKeywordConfigurationPtrInput)(nil)).Elem(), SensitiveDataScannerRuleIncludedKeywordConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataScannerRuleTextReplacementInput)(nil)).Elem(), SensitiveDataScannerRuleTextReplacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SensitiveDataScannerRuleTextReplacementPtrInput)(nil)).Elem(), SensitiveDataScannerRuleTextReplacementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveQueryInput)(nil)).Elem(), ServiceLevelObjectiveQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveQueryPtrInput)(nil)).Elem(), ServiceLevelObjectiveQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationPtrInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSlicePtrInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrInput)(nil)).Elem(), ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveThresholdInput)(nil)).Elem(), ServiceLevelObjectiveThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveThresholdArrayInput)(nil)).Elem(), ServiceLevelObjectiveThresholdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricComputeInput)(nil)).Elem(), SpansMetricComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricComputePtrInput)(nil)).Elem(), SpansMetricComputeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricFilterInput)(nil)).Elem(), SpansMetricFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricFilterPtrInput)(nil)).Elem(), SpansMetricFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricGroupByInput)(nil)).Elem(), SpansMetricGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpansMetricGroupByArrayInput)(nil)).Elem(), SpansMetricGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableOptionsInput)(nil)).Elem(), SyntheticsGlobalVariableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableOptionsPtrInput)(nil)).Elem(), SyntheticsGlobalVariableOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableOptionsTotpParametersInput)(nil)).Elem(), SyntheticsGlobalVariableOptionsTotpParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableOptionsTotpParametersPtrInput)(nil)).Elem(), SyntheticsGlobalVariableOptionsTotpParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsInput)(nil)).Elem(), SyntheticsGlobalVariableParseTestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsPtrInput)(nil)).Elem(), SyntheticsGlobalVariableParseTestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsParserInput)(nil)).Elem(), SyntheticsGlobalVariableParseTestOptionsParserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsGlobalVariableParseTestOptionsParserPtrInput)(nil)).Elem(), SyntheticsGlobalVariableParseTestOptionsParserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsPrivateLocationMetadataInput)(nil)).Elem(), SyntheticsPrivateLocationMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsPrivateLocationMetadataPtrInput)(nil)).Elem(), SyntheticsPrivateLocationMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepInput)(nil)).Elem(), SyntheticsTestApiStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepArrayInput)(nil)).Elem(), SyntheticsTestApiStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionInput)(nil)).Elem(), SyntheticsTestApiStepAssertionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionArrayInput)(nil)).Elem(), SyntheticsTestApiStepAssertionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonpathInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetjsonpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonpathPtrInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetjsonpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonschemaInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetjsonschemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetjsonschemaPtrInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetjsonschemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetxpathInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetxpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepAssertionTargetxpathPtrInput)(nil)).Elem(), SyntheticsTestApiStepAssertionTargetxpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepExtractedValueInput)(nil)).Elem(), SyntheticsTestApiStepExtractedValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepExtractedValueArrayInput)(nil)).Elem(), SyntheticsTestApiStepExtractedValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepExtractedValueParserInput)(nil)).Elem(), SyntheticsTestApiStepExtractedValueParserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestBasicauthInput)(nil)).Elem(), SyntheticsTestApiStepRequestBasicauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestBasicauthPtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestBasicauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificatePtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateCertInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateCertPtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateKeyInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestClientCertificateKeyPtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestClientCertificateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestDefinitionInput)(nil)).Elem(), SyntheticsTestApiStepRequestDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestDefinitionPtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestFileInput)(nil)).Elem(), SyntheticsTestApiStepRequestFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestFileArrayInput)(nil)).Elem(), SyntheticsTestApiStepRequestFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestProxyInput)(nil)).Elem(), SyntheticsTestApiStepRequestProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRequestProxyPtrInput)(nil)).Elem(), SyntheticsTestApiStepRequestProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRetryInput)(nil)).Elem(), SyntheticsTestApiStepRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestApiStepRetryPtrInput)(nil)).Elem(), SyntheticsTestApiStepRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionInput)(nil)).Elem(), SyntheticsTestAssertionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionArrayInput)(nil)).Elem(), SyntheticsTestAssertionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetjsonpathInput)(nil)).Elem(), SyntheticsTestAssertionTargetjsonpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetjsonpathPtrInput)(nil)).Elem(), SyntheticsTestAssertionTargetjsonpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetjsonschemaInput)(nil)).Elem(), SyntheticsTestAssertionTargetjsonschemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetjsonschemaPtrInput)(nil)).Elem(), SyntheticsTestAssertionTargetjsonschemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetxpathInput)(nil)).Elem(), SyntheticsTestAssertionTargetxpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestAssertionTargetxpathPtrInput)(nil)).Elem(), SyntheticsTestAssertionTargetxpathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepInput)(nil)).Elem(), SyntheticsTestBrowserStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepArrayInput)(nil)).Elem(), SyntheticsTestBrowserStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsElementUserLocatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorPtrInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsElementUserLocatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorValueInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsElementUserLocatorValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsVariableInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserStepParamsVariablePtrInput)(nil)).Elem(), SyntheticsTestBrowserStepParamsVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserVariableInput)(nil)).Elem(), SyntheticsTestBrowserVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestBrowserVariableArrayInput)(nil)).Elem(), SyntheticsTestBrowserVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestConfigVariableInput)(nil)).Elem(), SyntheticsTestConfigVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestConfigVariableArrayInput)(nil)).Elem(), SyntheticsTestConfigVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListInput)(nil)).Elem(), SyntheticsTestMobileOptionsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListPtrInput)(nil)).Elem(), SyntheticsTestMobileOptionsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListBindingInput)(nil)).Elem(), SyntheticsTestMobileOptionsListBindingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListBindingArrayInput)(nil)).Elem(), SyntheticsTestMobileOptionsListBindingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListCiInput)(nil)).Elem(), SyntheticsTestMobileOptionsListCiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListCiPtrInput)(nil)).Elem(), SyntheticsTestMobileOptionsListCiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListMobileApplicationInput)(nil)).Elem(), SyntheticsTestMobileOptionsListMobileApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListMobileApplicationPtrInput)(nil)).Elem(), SyntheticsTestMobileOptionsListMobileApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListMonitorOptionsInput)(nil)).Elem(), SyntheticsTestMobileOptionsListMonitorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListMonitorOptionsPtrInput)(nil)).Elem(), SyntheticsTestMobileOptionsListMonitorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListRetryInput)(nil)).Elem(), SyntheticsTestMobileOptionsListRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListRetryPtrInput)(nil)).Elem(), SyntheticsTestMobileOptionsListRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListSchedulingInput)(nil)).Elem(), SyntheticsTestMobileOptionsListSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListSchedulingPtrInput)(nil)).Elem(), SyntheticsTestMobileOptionsListSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListSchedulingTimeframeInput)(nil)).Elem(), SyntheticsTestMobileOptionsListSchedulingTimeframeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileOptionsListSchedulingTimeframeArrayInput)(nil)).Elem(), SyntheticsTestMobileOptionsListSchedulingTimeframeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepInput)(nil)).Elem(), SyntheticsTestMobileStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepArrayInput)(nil)).Elem(), SyntheticsTestMobileStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsInput)(nil)).Elem(), SyntheticsTestMobileStepParamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsElementInput)(nil)).Elem(), SyntheticsTestMobileStepParamsElementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsElementPtrInput)(nil)).Elem(), SyntheticsTestMobileStepParamsElementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsElementRelativePositionInput)(nil)).Elem(), SyntheticsTestMobileStepParamsElementRelativePositionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsElementRelativePositionPtrInput)(nil)).Elem(), SyntheticsTestMobileStepParamsElementRelativePositionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsElementUserLocatorInput)(nil)).Elem(), SyntheticsTestMobileStepParamsElementUserLocatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsElementUserLocatorPtrInput)(nil)).Elem(), SyntheticsTestMobileStepParamsElementUserLocatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsElementUserLocatorValueInput)(nil)).Elem(), SyntheticsTestMobileStepParamsElementUserLocatorValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsElementUserLocatorValueArrayInput)(nil)).Elem(), SyntheticsTestMobileStepParamsElementUserLocatorValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsPositionInput)(nil)).Elem(), SyntheticsTestMobileStepParamsPositionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsPositionArrayInput)(nil)).Elem(), SyntheticsTestMobileStepParamsPositionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsVariableInput)(nil)).Elem(), SyntheticsTestMobileStepParamsVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestMobileStepParamsVariablePtrInput)(nil)).Elem(), SyntheticsTestMobileStepParamsVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListInput)(nil)).Elem(), SyntheticsTestOptionsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListPtrInput)(nil)).Elem(), SyntheticsTestOptionsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListCiInput)(nil)).Elem(), SyntheticsTestOptionsListCiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListCiPtrInput)(nil)).Elem(), SyntheticsTestOptionsListCiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptionsInput)(nil)).Elem(), SyntheticsTestOptionsListMonitorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListMonitorOptionsPtrInput)(nil)).Elem(), SyntheticsTestOptionsListMonitorOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRetryInput)(nil)).Elem(), SyntheticsTestOptionsListRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRetryPtrInput)(nil)).Elem(), SyntheticsTestOptionsListRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRumSettingsInput)(nil)).Elem(), SyntheticsTestOptionsListRumSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListRumSettingsPtrInput)(nil)).Elem(), SyntheticsTestOptionsListRumSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingPtrInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframeInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingTimeframeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestOptionsListSchedulingTimeframeArrayInput)(nil)).Elem(), SyntheticsTestOptionsListSchedulingTimeframeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestBasicauthInput)(nil)).Elem(), SyntheticsTestRequestBasicauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestBasicauthPtrInput)(nil)).Elem(), SyntheticsTestRequestBasicauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificatePtrInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateCertInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateCertPtrInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateCertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateKeyInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestClientCertificateKeyPtrInput)(nil)).Elem(), SyntheticsTestRequestClientCertificateKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestDefinitionInput)(nil)).Elem(), SyntheticsTestRequestDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestDefinitionPtrInput)(nil)).Elem(), SyntheticsTestRequestDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestFileInput)(nil)).Elem(), SyntheticsTestRequestFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestFileArrayInput)(nil)).Elem(), SyntheticsTestRequestFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestProxyInput)(nil)).Elem(), SyntheticsTestRequestProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyntheticsTestRequestProxyPtrInput)(nil)).Elem(), SyntheticsTestRequestProxyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionAwsInput)(nil)).Elem(), GetActionConnectionAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionAwsPtrInput)(nil)).Elem(), GetActionConnectionAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionAwsAssumeRoleInput)(nil)).Elem(), GetActionConnectionAwsAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionAwsAssumeRolePtrInput)(nil)).Elem(), GetActionConnectionAwsAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpInput)(nil)).Elem(), GetActionConnectionHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpPtrInput)(nil)).Elem(), GetActionConnectionHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpTokenAuthInput)(nil)).Elem(), GetActionConnectionHttpTokenAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpTokenAuthPtrInput)(nil)).Elem(), GetActionConnectionHttpTokenAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpTokenAuthBodyInput)(nil)).Elem(), GetActionConnectionHttpTokenAuthBodyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpTokenAuthBodyPtrInput)(nil)).Elem(), GetActionConnectionHttpTokenAuthBodyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpTokenAuthHeaderInput)(nil)).Elem(), GetActionConnectionHttpTokenAuthHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpTokenAuthHeaderArrayInput)(nil)).Elem(), GetActionConnectionHttpTokenAuthHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpTokenAuthTokenInput)(nil)).Elem(), GetActionConnectionHttpTokenAuthTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpTokenAuthTokenArrayInput)(nil)).Elem(), GetActionConnectionHttpTokenAuthTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpTokenAuthUrlParameterInput)(nil)).Elem(), GetActionConnectionHttpTokenAuthUrlParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetActionConnectionHttpTokenAuthUrlParameterArrayInput)(nil)).Elem(), GetActionConnectionHttpTokenAuthUrlParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRuleInput)(nil)).Elem(), GetCloudWorkloadSecurityAgentRulesAgentRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudWorkloadSecurityAgentRulesAgentRuleArrayInput)(nil)).Elem(), GetCloudWorkloadSecurityAgentRulesAgentRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRuleInput)(nil)).Elem(), GetCsmThreatsAgentRulesAgentRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCsmThreatsAgentRulesAgentRuleArrayInput)(nil)).Elem(), GetCsmThreatsAgentRulesAgentRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListInput)(nil)).Elem(), GetHostsHostListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListArrayInput)(nil)).Elem(), GetHostsHostListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListMetaInput)(nil)).Elem(), GetHostsHostListMetaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHostsHostListMetricsInput)(nil)).Elem(), GetHostsHostListMetricsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexInput)(nil)).Elem(), GetLogsIndexesLogsIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitResetInput)(nil)).Elem(), GetLogsIndexesLogsIndexDailyLimitResetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexDailyLimitResetArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexDailyLimitResetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilterInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexExclusionFilterFilterArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexExclusionFilterFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexFilterInput)(nil)).Elem(), GetLogsIndexesLogsIndexFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsIndexesLogsIndexFilterArrayInput)(nil)).Elem(), GetLogsIndexesLogsIndexFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineArrayInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilterInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogsPipelinesLogsPipelineFilterArrayInput)(nil)).Elem(), GetLogsPipelinesLogsPipelineFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyInput)(nil)).Elem(), GetMonitorConfigPoliciesMonitorConfigPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyArrayInput)(nil)).Elem(), GetMonitorConfigPoliciesMonitorConfigPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyInput)(nil)).Elem(), GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdInput)(nil)).Elem(), GetMonitorMonitorThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdArrayInput)(nil)).Elem(), GetMonitorMonitorThresholdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdWindowInput)(nil)).Elem(), GetMonitorMonitorThresholdWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorMonitorThresholdWindowArrayInput)(nil)).Elem(), GetMonitorMonitorThresholdWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionInput)(nil)).Elem(), GetMonitorSchedulingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrenceInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionCustomScheduleRecurrenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindowInput)(nil)).Elem(), GetMonitorSchedulingOptionEvaluationWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorSchedulingOptionEvaluationWindowArrayInput)(nil)).Elem(), GetMonitorSchedulingOptionEvaluationWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorInput)(nil)).Elem(), GetMonitorsMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMonitorsMonitorArrayInput)(nil)).Elem(), GetMonitorsMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoleUsersRoleUserInput)(nil)).Elem(), GetRoleUsersRoleUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRoleUsersRoleUserArrayInput)(nil)).Elem(), GetRoleUsersRoleUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesRoleInput)(nil)).Elem(), GetRolesRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolesRoleArrayInput)(nil)).Elem(), GetRolesRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRumRetentionFiltersRetentionFilterInput)(nil)).Elem(), GetRumRetentionFiltersRetentionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRumRetentionFiltersRetentionFilterArrayInput)(nil)).Elem(), GetRumRetentionFiltersRetentionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterArrayInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilterInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterExclusionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringFiltersFilterExclusionFilterArrayInput)(nil)).Elem(), GetSecurityMonitoringFiltersFilterExclusionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseActionInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleCaseActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseActionArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleCaseActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseActionOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleCaseActionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleCaseActionOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleCaseActionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilterInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleFilterArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsNewValueOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRuleInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryAgentRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleQueryAgentRuleArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleQueryAgentRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleReferenceTableInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleReferenceTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleReferenceTableArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleReferenceTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQueryInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleSignalQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleSignalQueryArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleSignalQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCaseInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleThirdPartyCaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringRulesRuleThirdPartyCaseArrayInput)(nil)).Elem(), GetSecurityMonitoringRulesRuleThirdPartyCaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppressionInput)(nil)).Elem(), GetSecurityMonitoringSuppressionsSuppressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecurityMonitoringSuppressionsSuppressionArrayInput)(nil)).Elem(), GetSecurityMonitoringSuppressionsSuppressionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectiveQueryInput)(nil)).Elem(), GetServiceLevelObjectiveQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectiveQueryArrayInput)(nil)).Elem(), GetServiceLevelObjectiveQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectivesSloInput)(nil)).Elem(), GetServiceLevelObjectivesSloArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceLevelObjectivesSloArrayInput)(nil)).Elem(), GetServiceLevelObjectivesSloArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareCatalogEntityInput)(nil)).Elem(), GetSoftwareCatalogEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSoftwareCatalogEntityArrayInput)(nil)).Elem(), GetSoftwareCatalogEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamMembershipsTeamMembershipInput)(nil)).Elem(), GetTeamMembershipsTeamMembershipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamMembershipsTeamMembershipArrayInput)(nil)).Elem(), GetTeamMembershipsTeamMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamsTeamInput)(nil)).Elem(), GetTeamsTeamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTeamsTeamArrayInput)(nil)).Elem(), GetTeamsTeamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserInput)(nil)).Elem(), GetUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUsersUserArrayInput)(nil)).Elem(), GetUsersUserArray{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryComputeQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupByArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryGroupBySortQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestNetworkQueryMultiComputeArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestProcessQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestProcessQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryApmDependencyStatsQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryApmResourceStatsQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryCloudCostQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryComputeArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupByArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQueryGroupBySortPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryEventQuerySearchPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryMetricQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQueryProcessQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestQuerySloQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestRumQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestRumQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestRumQueryComputeQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupByArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestRumQueryGroupBySortQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestRumQueryMultiComputeArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryComputeQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupByArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestSecurityQueryMultiComputeArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestStyleOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRequestStylePtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRightYaxisOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionRightYaxisPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionYaxisOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTimeseriesDefinitionYaxisPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionCustomLinkOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionCustomLinkArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestApmQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestApmQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestApmQueryComputeQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestApmQueryGroupByOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestApmQueryGroupByArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestApmQueryGroupBySortQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestApmQueryMultiComputeArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestAuditQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestAuditQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestAuditQueryComputeQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupByArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestAuditQueryGroupBySortQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestAuditQueryMultiComputeArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestConditionalFormatOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestConditionalFormatArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaConditionalFormatArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaLimitOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaLimitPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaNumberFormatUnitScalePtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaStyleOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestFormulaStylePtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestLogQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestLogQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestLogQueryComputeQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestLogQueryGroupByOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestLogQueryGroupByArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestLogQueryGroupBySortQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestLogQueryMultiComputeArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestProcessQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestProcessQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryApmDependencyStatsQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryApmResourceStatsQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryCloudCostQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryEventQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryEventQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryEventQueryComputeArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupByArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryEventQueryGroupBySortPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryEventQuerySearchPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryMetricQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryMetricQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryProcessQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQueryProcessQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQuerySloQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestQuerySloQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestRumQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestRumQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestRumQueryComputeQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestRumQueryGroupByOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestRumQueryGroupByArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestRumQueryGroupBySortQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestRumQueryMultiComputeArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestSecurityQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestSecurityQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestSecurityQueryComputeQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupByArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestSecurityQueryGroupBySortQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestSecurityQueryMultiComputeArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestStyleOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionRequestStylePtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionStyleOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionStyleArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionStyleDisplayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetToplistDefinitionStyleDisplayArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTopologyMapDefinitionOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTopologyMapDefinitionPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTopologyMapDefinitionCustomLinkOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTopologyMapDefinitionCustomLinkArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTopologyMapDefinitionRequestOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTopologyMapDefinitionRequestArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTopologyMapDefinitionRequestQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTopologyMapDefinitionRequestQueryArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTraceServiceDefinitionOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTraceServiceDefinitionPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaConditionalFormatArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaLimitOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaLimitPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCanonicalPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitCustomPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScaleOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaNumberFormatUnitScalePtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaStyleOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestFormulaStylePtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryApmDependencyStatsQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryApmResourceStatsQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryCloudCostQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryComputeArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupByArrayOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryEventQueryGroupBySortPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryEventQuerySearchPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryMetricQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQueryProcessQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQuerySloQueryOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetTreemapDefinitionRequestQuerySloQueryPtrOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetWidgetLayoutOutput{})
	pulumi.RegisterOutputType(PowerpackWidgetWidgetLayoutPtrOutput{})
	pulumi.RegisterOutputType(ProviderDefaultTagsOutput{})
	pulumi.RegisterOutputType(ProviderDefaultTagsPtrOutput{})
	pulumi.RegisterOutputType(RestrictionPolicyBindingOutput{})
	pulumi.RegisterOutputType(RestrictionPolicyBindingArrayOutput{})
	pulumi.RegisterOutputType(RolePermissionOutput{})
	pulumi.RegisterOutputType(RolePermissionArrayOutput{})
	pulumi.RegisterOutputType(RumMetricComputeOutput{})
	pulumi.RegisterOutputType(RumMetricComputePtrOutput{})
	pulumi.RegisterOutputType(RumMetricFilterOutput{})
	pulumi.RegisterOutputType(RumMetricFilterPtrOutput{})
	pulumi.RegisterOutputType(RumMetricGroupByOutput{})
	pulumi.RegisterOutputType(RumMetricGroupByArrayOutput{})
	pulumi.RegisterOutputType(RumMetricUniquenessOutput{})
	pulumi.RegisterOutputType(RumMetricUniquenessPtrOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringDefaultRuleCaseOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringDefaultRuleCaseArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringDefaultRuleFilterOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringDefaultRuleFilterArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringDefaultRuleOptionsOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringDefaultRuleOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringFilterExclusionFilterOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringFilterExclusionFilterArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleCaseOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleCaseArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleCaseActionOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleCaseActionArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleCaseActionOptionsOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleCaseActionOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleFilterOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleFilterArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleOptionsOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleOptionsImpossibleTravelOptionsOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleOptionsImpossibleTravelOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleOptionsNewValueOptionsOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleOptionsNewValueOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsPtrOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleQueryOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleQueryArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleQueryAgentRuleOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleQueryAgentRuleArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleReferenceTableOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleReferenceTableArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleSignalQueryOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleSignalQueryArrayOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleThirdPartyCaseOutput{})
	pulumi.RegisterOutputType(SecurityMonitoringRuleThirdPartyCaseArrayOutput{})
	pulumi.RegisterOutputType(SecurityNotificationRuleSelectorsOutput{})
	pulumi.RegisterOutputType(SecurityNotificationRuleSelectorsPtrOutput{})
	pulumi.RegisterOutputType(SensitiveDataScannerGroupFilterOutput{})
	pulumi.RegisterOutputType(SensitiveDataScannerGroupFilterPtrOutput{})
	pulumi.RegisterOutputType(SensitiveDataScannerRuleIncludedKeywordConfigurationOutput{})
	pulumi.RegisterOutputType(SensitiveDataScannerRuleIncludedKeywordConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SensitiveDataScannerRuleTextReplacementOutput{})
	pulumi.RegisterOutputType(SensitiveDataScannerRuleTextReplacementPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveQueryOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveQueryPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSlicePtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArrayOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryMetricQueryPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveThresholdOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveThresholdArrayOutput{})
	pulumi.RegisterOutputType(SpansMetricComputeOutput{})
	pulumi.RegisterOutputType(SpansMetricComputePtrOutput{})
	pulumi.RegisterOutputType(SpansMetricFilterOutput{})
	pulumi.RegisterOutputType(SpansMetricFilterPtrOutput{})
	pulumi.RegisterOutputType(SpansMetricGroupByOutput{})
	pulumi.RegisterOutputType(SpansMetricGroupByArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableOptionsOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableOptionsPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableOptionsTotpParametersOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableOptionsTotpParametersPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableParseTestOptionsOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableParseTestOptionsPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableParseTestOptionsParserOutput{})
	pulumi.RegisterOutputType(SyntheticsGlobalVariableParseTestOptionsParserPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsPrivateLocationMetadataOutput{})
	pulumi.RegisterOutputType(SyntheticsPrivateLocationMetadataPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetjsonpathOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetjsonpathPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetjsonschemaOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetjsonschemaPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetxpathOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepAssertionTargetxpathPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepExtractedValueOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepExtractedValueArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepExtractedValueParserOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestBasicauthOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestBasicauthPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificateOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificatePtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificateCertOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificateCertPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificateKeyOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestClientCertificateKeyPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestDefinitionOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestDefinitionPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestFileOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestFileArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestProxyOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRequestProxyPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRetryOutput{})
	pulumi.RegisterOutputType(SyntheticsTestApiStepRetryPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetjsonpathOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetjsonpathPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetjsonschemaOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetjsonschemaPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetxpathOutput{})
	pulumi.RegisterOutputType(SyntheticsTestAssertionTargetxpathPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsElementUserLocatorOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsElementUserLocatorPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsElementUserLocatorValueOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsElementUserLocatorValuePtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsVariableOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserStepParamsVariablePtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserVariableOutput{})
	pulumi.RegisterOutputType(SyntheticsTestBrowserVariableArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestConfigVariableOutput{})
	pulumi.RegisterOutputType(SyntheticsTestConfigVariableArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListBindingOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListBindingArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListCiOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListCiPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListMobileApplicationOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListMobileApplicationPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListMonitorOptionsOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListMonitorOptionsPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListRetryOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListRetryPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListSchedulingOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListSchedulingPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListSchedulingTimeframeOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileOptionsListSchedulingTimeframeArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsElementOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsElementPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsElementRelativePositionOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsElementRelativePositionPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsElementUserLocatorOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsElementUserLocatorPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsElementUserLocatorValueOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsElementUserLocatorValueArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsPositionOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsPositionArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsVariableOutput{})
	pulumi.RegisterOutputType(SyntheticsTestMobileStepParamsVariablePtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListCiOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListCiPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListMonitorOptionsOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListMonitorOptionsPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRetryOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRetryPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRumSettingsOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListRumSettingsPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingTimeframeOutput{})
	pulumi.RegisterOutputType(SyntheticsTestOptionsListSchedulingTimeframeArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestBasicauthOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestBasicauthPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificatePtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateCertOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateCertPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateKeyOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestClientCertificateKeyPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestDefinitionOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestDefinitionPtrOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestFileOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestFileArrayOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestProxyOutput{})
	pulumi.RegisterOutputType(SyntheticsTestRequestProxyPtrOutput{})
	pulumi.RegisterOutputType(GetActionConnectionAwsOutput{})
	pulumi.RegisterOutputType(GetActionConnectionAwsPtrOutput{})
	pulumi.RegisterOutputType(GetActionConnectionAwsAssumeRoleOutput{})
	pulumi.RegisterOutputType(GetActionConnectionAwsAssumeRolePtrOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpPtrOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpTokenAuthOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpTokenAuthPtrOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpTokenAuthBodyOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpTokenAuthBodyPtrOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpTokenAuthHeaderOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpTokenAuthHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpTokenAuthTokenOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpTokenAuthTokenArrayOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpTokenAuthUrlParameterOutput{})
	pulumi.RegisterOutputType(GetActionConnectionHttpTokenAuthUrlParameterArrayOutput{})
	pulumi.RegisterOutputType(GetCloudWorkloadSecurityAgentRulesAgentRuleOutput{})
	pulumi.RegisterOutputType(GetCloudWorkloadSecurityAgentRulesAgentRuleArrayOutput{})
	pulumi.RegisterOutputType(GetCsmThreatsAgentRulesAgentRuleOutput{})
	pulumi.RegisterOutputType(GetCsmThreatsAgentRulesAgentRuleArrayOutput{})
	pulumi.RegisterOutputType(GetHostsHostListOutput{})
	pulumi.RegisterOutputType(GetHostsHostListArrayOutput{})
	pulumi.RegisterOutputType(GetHostsHostListMetaOutput{})
	pulumi.RegisterOutputType(GetHostsHostListMetricsOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexDailyLimitResetOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexDailyLimitResetArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterFilterOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexExclusionFilterFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexFilterOutput{})
	pulumi.RegisterOutputType(GetLogsIndexesLogsIndexFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineArrayOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineFilterOutput{})
	pulumi.RegisterOutputType(GetLogsPipelinesLogsPipelineFilterArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigPoliciesMonitorConfigPolicyOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigPoliciesMonitorConfigPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorConfigPoliciesMonitorConfigPolicyTagPolicyOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdWindowOutput{})
	pulumi.RegisterOutputType(GetMonitorMonitorThresholdWindowArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleRecurrenceOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionCustomScheduleRecurrenceArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionEvaluationWindowOutput{})
	pulumi.RegisterOutputType(GetMonitorSchedulingOptionEvaluationWindowArrayOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorOutput{})
	pulumi.RegisterOutputType(GetMonitorsMonitorArrayOutput{})
	pulumi.RegisterOutputType(GetRoleUsersRoleUserOutput{})
	pulumi.RegisterOutputType(GetRoleUsersRoleUserArrayOutput{})
	pulumi.RegisterOutputType(GetRolesRoleOutput{})
	pulumi.RegisterOutputType(GetRolesRoleArrayOutput{})
	pulumi.RegisterOutputType(GetRumRetentionFiltersRetentionFilterOutput{})
	pulumi.RegisterOutputType(GetRumRetentionFiltersRetentionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterExclusionFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringFiltersFilterExclusionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleCaseOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleCaseArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleCaseActionOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleCaseActionArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleCaseActionOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleCaseActionOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsImpossibleTravelOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsNewValueOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleOptionsThirdPartyRuleOptionsRootQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryAgentRuleOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleQueryAgentRuleArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleReferenceTableOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleReferenceTableArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleSignalQueryOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleSignalQueryArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleThirdPartyCaseOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringRulesRuleThirdPartyCaseArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringSuppressionsSuppressionOutput{})
	pulumi.RegisterOutputType(GetSecurityMonitoringSuppressionsSuppressionArrayOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectiveQueryOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectiveQueryArrayOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectivesSloOutput{})
	pulumi.RegisterOutputType(GetServiceLevelObjectivesSloArrayOutput{})
	pulumi.RegisterOutputType(GetSoftwareCatalogEntityOutput{})
	pulumi.RegisterOutputType(GetSoftwareCatalogEntityArrayOutput{})
	pulumi.RegisterOutputType(GetTeamMembershipsTeamMembershipOutput{})
	pulumi.RegisterOutputType(GetTeamMembershipsTeamMembershipArrayOutput{})
	pulumi.RegisterOutputType(GetTeamsTeamOutput{})
	pulumi.RegisterOutputType(GetTeamsTeamArrayOutput{})
	pulumi.RegisterOutputType(GetUsersUserOutput{})
	pulumi.RegisterOutputType(GetUsersUserArrayOutput{})
}
