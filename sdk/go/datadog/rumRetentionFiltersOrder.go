// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog RumRetentionFiltersOrder resource. This is used to manage the order of Datadog RUM retention filters. Please note that retentionFilterIds should contain all IDs of retention filters, including the default ones created internally for a given RUM application.
//
// ## Import
//
// ```sh
// $ pulumi import datadog:index/rumRetentionFiltersOrder:RumRetentionFiltersOrder testing_rum_retention_filters_order "<application_id>"
// ```
type RumRetentionFiltersOrder struct {
	pulumi.CustomResourceState

	// RUM application ID.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
	RetentionFilterIds pulumi.StringArrayOutput `pulumi:"retentionFilterIds"`
}

// NewRumRetentionFiltersOrder registers a new resource with the given unique name, arguments, and options.
func NewRumRetentionFiltersOrder(ctx *pulumi.Context,
	name string, args *RumRetentionFiltersOrderArgs, opts ...pulumi.ResourceOption) (*RumRetentionFiltersOrder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.RetentionFilterIds == nil {
		return nil, errors.New("invalid value for required argument 'RetentionFilterIds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RumRetentionFiltersOrder
	err := ctx.RegisterResource("datadog:index/rumRetentionFiltersOrder:RumRetentionFiltersOrder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRumRetentionFiltersOrder gets an existing RumRetentionFiltersOrder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRumRetentionFiltersOrder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RumRetentionFiltersOrderState, opts ...pulumi.ResourceOption) (*RumRetentionFiltersOrder, error) {
	var resource RumRetentionFiltersOrder
	err := ctx.ReadResource("datadog:index/rumRetentionFiltersOrder:RumRetentionFiltersOrder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RumRetentionFiltersOrder resources.
type rumRetentionFiltersOrderState struct {
	// RUM application ID.
	ApplicationId *string `pulumi:"applicationId"`
	// RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
	RetentionFilterIds []string `pulumi:"retentionFilterIds"`
}

type RumRetentionFiltersOrderState struct {
	// RUM application ID.
	ApplicationId pulumi.StringPtrInput
	// RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
	RetentionFilterIds pulumi.StringArrayInput
}

func (RumRetentionFiltersOrderState) ElementType() reflect.Type {
	return reflect.TypeOf((*rumRetentionFiltersOrderState)(nil)).Elem()
}

type rumRetentionFiltersOrderArgs struct {
	// RUM application ID.
	ApplicationId string `pulumi:"applicationId"`
	// RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
	RetentionFilterIds []string `pulumi:"retentionFilterIds"`
}

// The set of arguments for constructing a RumRetentionFiltersOrder resource.
type RumRetentionFiltersOrderArgs struct {
	// RUM application ID.
	ApplicationId pulumi.StringInput
	// RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
	RetentionFilterIds pulumi.StringArrayInput
}

func (RumRetentionFiltersOrderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rumRetentionFiltersOrderArgs)(nil)).Elem()
}

type RumRetentionFiltersOrderInput interface {
	pulumi.Input

	ToRumRetentionFiltersOrderOutput() RumRetentionFiltersOrderOutput
	ToRumRetentionFiltersOrderOutputWithContext(ctx context.Context) RumRetentionFiltersOrderOutput
}

func (*RumRetentionFiltersOrder) ElementType() reflect.Type {
	return reflect.TypeOf((**RumRetentionFiltersOrder)(nil)).Elem()
}

func (i *RumRetentionFiltersOrder) ToRumRetentionFiltersOrderOutput() RumRetentionFiltersOrderOutput {
	return i.ToRumRetentionFiltersOrderOutputWithContext(context.Background())
}

func (i *RumRetentionFiltersOrder) ToRumRetentionFiltersOrderOutputWithContext(ctx context.Context) RumRetentionFiltersOrderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumRetentionFiltersOrderOutput)
}

// RumRetentionFiltersOrderArrayInput is an input type that accepts RumRetentionFiltersOrderArray and RumRetentionFiltersOrderArrayOutput values.
// You can construct a concrete instance of `RumRetentionFiltersOrderArrayInput` via:
//
//	RumRetentionFiltersOrderArray{ RumRetentionFiltersOrderArgs{...} }
type RumRetentionFiltersOrderArrayInput interface {
	pulumi.Input

	ToRumRetentionFiltersOrderArrayOutput() RumRetentionFiltersOrderArrayOutput
	ToRumRetentionFiltersOrderArrayOutputWithContext(context.Context) RumRetentionFiltersOrderArrayOutput
}

type RumRetentionFiltersOrderArray []RumRetentionFiltersOrderInput

func (RumRetentionFiltersOrderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RumRetentionFiltersOrder)(nil)).Elem()
}

func (i RumRetentionFiltersOrderArray) ToRumRetentionFiltersOrderArrayOutput() RumRetentionFiltersOrderArrayOutput {
	return i.ToRumRetentionFiltersOrderArrayOutputWithContext(context.Background())
}

func (i RumRetentionFiltersOrderArray) ToRumRetentionFiltersOrderArrayOutputWithContext(ctx context.Context) RumRetentionFiltersOrderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumRetentionFiltersOrderArrayOutput)
}

// RumRetentionFiltersOrderMapInput is an input type that accepts RumRetentionFiltersOrderMap and RumRetentionFiltersOrderMapOutput values.
// You can construct a concrete instance of `RumRetentionFiltersOrderMapInput` via:
//
//	RumRetentionFiltersOrderMap{ "key": RumRetentionFiltersOrderArgs{...} }
type RumRetentionFiltersOrderMapInput interface {
	pulumi.Input

	ToRumRetentionFiltersOrderMapOutput() RumRetentionFiltersOrderMapOutput
	ToRumRetentionFiltersOrderMapOutputWithContext(context.Context) RumRetentionFiltersOrderMapOutput
}

type RumRetentionFiltersOrderMap map[string]RumRetentionFiltersOrderInput

func (RumRetentionFiltersOrderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RumRetentionFiltersOrder)(nil)).Elem()
}

func (i RumRetentionFiltersOrderMap) ToRumRetentionFiltersOrderMapOutput() RumRetentionFiltersOrderMapOutput {
	return i.ToRumRetentionFiltersOrderMapOutputWithContext(context.Background())
}

func (i RumRetentionFiltersOrderMap) ToRumRetentionFiltersOrderMapOutputWithContext(ctx context.Context) RumRetentionFiltersOrderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RumRetentionFiltersOrderMapOutput)
}

type RumRetentionFiltersOrderOutput struct{ *pulumi.OutputState }

func (RumRetentionFiltersOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RumRetentionFiltersOrder)(nil)).Elem()
}

func (o RumRetentionFiltersOrderOutput) ToRumRetentionFiltersOrderOutput() RumRetentionFiltersOrderOutput {
	return o
}

func (o RumRetentionFiltersOrderOutput) ToRumRetentionFiltersOrderOutputWithContext(ctx context.Context) RumRetentionFiltersOrderOutput {
	return o
}

// RUM application ID.
func (o RumRetentionFiltersOrderOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *RumRetentionFiltersOrder) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
func (o RumRetentionFiltersOrderOutput) RetentionFilterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RumRetentionFiltersOrder) pulumi.StringArrayOutput { return v.RetentionFilterIds }).(pulumi.StringArrayOutput)
}

type RumRetentionFiltersOrderArrayOutput struct{ *pulumi.OutputState }

func (RumRetentionFiltersOrderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RumRetentionFiltersOrder)(nil)).Elem()
}

func (o RumRetentionFiltersOrderArrayOutput) ToRumRetentionFiltersOrderArrayOutput() RumRetentionFiltersOrderArrayOutput {
	return o
}

func (o RumRetentionFiltersOrderArrayOutput) ToRumRetentionFiltersOrderArrayOutputWithContext(ctx context.Context) RumRetentionFiltersOrderArrayOutput {
	return o
}

func (o RumRetentionFiltersOrderArrayOutput) Index(i pulumi.IntInput) RumRetentionFiltersOrderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RumRetentionFiltersOrder {
		return vs[0].([]*RumRetentionFiltersOrder)[vs[1].(int)]
	}).(RumRetentionFiltersOrderOutput)
}

type RumRetentionFiltersOrderMapOutput struct{ *pulumi.OutputState }

func (RumRetentionFiltersOrderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RumRetentionFiltersOrder)(nil)).Elem()
}

func (o RumRetentionFiltersOrderMapOutput) ToRumRetentionFiltersOrderMapOutput() RumRetentionFiltersOrderMapOutput {
	return o
}

func (o RumRetentionFiltersOrderMapOutput) ToRumRetentionFiltersOrderMapOutputWithContext(ctx context.Context) RumRetentionFiltersOrderMapOutput {
	return o
}

func (o RumRetentionFiltersOrderMapOutput) MapIndex(k pulumi.StringInput) RumRetentionFiltersOrderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RumRetentionFiltersOrder {
		return vs[0].(map[string]*RumRetentionFiltersOrder)[vs[1].(string)]
	}).(RumRetentionFiltersOrderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RumRetentionFiltersOrderInput)(nil)).Elem(), &RumRetentionFiltersOrder{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumRetentionFiltersOrderArrayInput)(nil)).Elem(), RumRetentionFiltersOrderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RumRetentionFiltersOrderMapInput)(nil)).Elem(), RumRetentionFiltersOrderMap{})
	pulumi.RegisterOutputType(RumRetentionFiltersOrderOutput{})
	pulumi.RegisterOutputType(RumRetentionFiltersOrderArrayOutput{})
	pulumi.RegisterOutputType(RumRetentionFiltersOrderMapOutput{})
}
