// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about an existing api key.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.LookupApiKey(ctx, &GetApiKeyArgs{
//				Name: pulumi.StringRef("foo-application"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupApiKey(ctx *pulumi.Context, args *LookupApiKeyArgs, opts ...pulumi.InvokeOption) (*LookupApiKeyResult, error) {
	var rv LookupApiKeyResult
	err := ctx.Invoke("datadog:index/getApiKey:getApiKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApiKey.
type LookupApiKeyArgs struct {
	Id   *string `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// A collection of values returned by getApiKey.
type LookupApiKeyResult struct {
	Id   *string `pulumi:"id"`
	Key  string  `pulumi:"key"`
	Name *string `pulumi:"name"`
}

func LookupApiKeyOutput(ctx *pulumi.Context, args LookupApiKeyOutputArgs, opts ...pulumi.InvokeOption) LookupApiKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApiKeyResult, error) {
			args := v.(LookupApiKeyArgs)
			r, err := LookupApiKey(ctx, &args, opts...)
			var s LookupApiKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupApiKeyResultOutput)
}

// A collection of arguments for invoking getApiKey.
type LookupApiKeyOutputArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupApiKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiKeyArgs)(nil)).Elem()
}

// A collection of values returned by getApiKey.
type LookupApiKeyResultOutput struct{ *pulumi.OutputState }

func (LookupApiKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApiKeyResult)(nil)).Elem()
}

func (o LookupApiKeyResultOutput) ToLookupApiKeyResultOutput() LookupApiKeyResultOutput {
	return o
}

func (o LookupApiKeyResultOutput) ToLookupApiKeyResultOutputWithContext(ctx context.Context) LookupApiKeyResultOutput {
	return o
}

func (o LookupApiKeyResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiKeyResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupApiKeyResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupApiKeyResult) string { return v.Key }).(pulumi.StringOutput)
}

func (o LookupApiKeyResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApiKeyResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApiKeyResultOutput{})
}
