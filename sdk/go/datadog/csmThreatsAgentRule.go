// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog CSM Threats Agent Rule API resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.NewCsmThreatsAgentRule(ctx, "my_agent_rule", &datadog.CsmThreatsAgentRuleArgs{
//				Name:        pulumi.String("my_agent_rule"),
//				Enabled:     pulumi.Bool(true),
//				Description: pulumi.String("im a rule"),
//				Expression:  pulumi.String("open.file.name == \"etc/shadow/password\""),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// CSM Agent Rules can be imported using ID. For example:
//
// ```sh
// $ pulumi import datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule my_agent_rule m0o-hto-lkb
// ```
type CsmThreatsAgentRule struct {
	pulumi.CustomResourceState

	// A description for the Agent rule. Defaults to `""`.
	Description pulumi.StringOutput `pulumi:"description"`
	// Indicates Whether the Agent rule is enabled.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The SECL expression of the Agent rule
	Expression pulumi.StringOutput `pulumi:"expression"`
	// The name of the Agent rule.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewCsmThreatsAgentRule registers a new resource with the given unique name, arguments, and options.
func NewCsmThreatsAgentRule(ctx *pulumi.Context,
	name string, args *CsmThreatsAgentRuleArgs, opts ...pulumi.ResourceOption) (*CsmThreatsAgentRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Expression == nil {
		return nil, errors.New("invalid value for required argument 'Expression'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CsmThreatsAgentRule
	err := ctx.RegisterResource("datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCsmThreatsAgentRule gets an existing CsmThreatsAgentRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCsmThreatsAgentRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CsmThreatsAgentRuleState, opts ...pulumi.ResourceOption) (*CsmThreatsAgentRule, error) {
	var resource CsmThreatsAgentRule
	err := ctx.ReadResource("datadog:index/csmThreatsAgentRule:CsmThreatsAgentRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CsmThreatsAgentRule resources.
type csmThreatsAgentRuleState struct {
	// A description for the Agent rule. Defaults to `""`.
	Description *string `pulumi:"description"`
	// Indicates Whether the Agent rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The SECL expression of the Agent rule
	Expression *string `pulumi:"expression"`
	// The name of the Agent rule.
	Name *string `pulumi:"name"`
}

type CsmThreatsAgentRuleState struct {
	// A description for the Agent rule. Defaults to `""`.
	Description pulumi.StringPtrInput
	// Indicates Whether the Agent rule is enabled.
	Enabled pulumi.BoolPtrInput
	// The SECL expression of the Agent rule
	Expression pulumi.StringPtrInput
	// The name of the Agent rule.
	Name pulumi.StringPtrInput
}

func (CsmThreatsAgentRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*csmThreatsAgentRuleState)(nil)).Elem()
}

type csmThreatsAgentRuleArgs struct {
	// A description for the Agent rule. Defaults to `""`.
	Description *string `pulumi:"description"`
	// Indicates Whether the Agent rule is enabled.
	Enabled bool `pulumi:"enabled"`
	// The SECL expression of the Agent rule
	Expression string `pulumi:"expression"`
	// The name of the Agent rule.
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a CsmThreatsAgentRule resource.
type CsmThreatsAgentRuleArgs struct {
	// A description for the Agent rule. Defaults to `""`.
	Description pulumi.StringPtrInput
	// Indicates Whether the Agent rule is enabled.
	Enabled pulumi.BoolInput
	// The SECL expression of the Agent rule
	Expression pulumi.StringInput
	// The name of the Agent rule.
	Name pulumi.StringInput
}

func (CsmThreatsAgentRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*csmThreatsAgentRuleArgs)(nil)).Elem()
}

type CsmThreatsAgentRuleInput interface {
	pulumi.Input

	ToCsmThreatsAgentRuleOutput() CsmThreatsAgentRuleOutput
	ToCsmThreatsAgentRuleOutputWithContext(ctx context.Context) CsmThreatsAgentRuleOutput
}

func (*CsmThreatsAgentRule) ElementType() reflect.Type {
	return reflect.TypeOf((**CsmThreatsAgentRule)(nil)).Elem()
}

func (i *CsmThreatsAgentRule) ToCsmThreatsAgentRuleOutput() CsmThreatsAgentRuleOutput {
	return i.ToCsmThreatsAgentRuleOutputWithContext(context.Background())
}

func (i *CsmThreatsAgentRule) ToCsmThreatsAgentRuleOutputWithContext(ctx context.Context) CsmThreatsAgentRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsmThreatsAgentRuleOutput)
}

// CsmThreatsAgentRuleArrayInput is an input type that accepts CsmThreatsAgentRuleArray and CsmThreatsAgentRuleArrayOutput values.
// You can construct a concrete instance of `CsmThreatsAgentRuleArrayInput` via:
//
//	CsmThreatsAgentRuleArray{ CsmThreatsAgentRuleArgs{...} }
type CsmThreatsAgentRuleArrayInput interface {
	pulumi.Input

	ToCsmThreatsAgentRuleArrayOutput() CsmThreatsAgentRuleArrayOutput
	ToCsmThreatsAgentRuleArrayOutputWithContext(context.Context) CsmThreatsAgentRuleArrayOutput
}

type CsmThreatsAgentRuleArray []CsmThreatsAgentRuleInput

func (CsmThreatsAgentRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CsmThreatsAgentRule)(nil)).Elem()
}

func (i CsmThreatsAgentRuleArray) ToCsmThreatsAgentRuleArrayOutput() CsmThreatsAgentRuleArrayOutput {
	return i.ToCsmThreatsAgentRuleArrayOutputWithContext(context.Background())
}

func (i CsmThreatsAgentRuleArray) ToCsmThreatsAgentRuleArrayOutputWithContext(ctx context.Context) CsmThreatsAgentRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsmThreatsAgentRuleArrayOutput)
}

// CsmThreatsAgentRuleMapInput is an input type that accepts CsmThreatsAgentRuleMap and CsmThreatsAgentRuleMapOutput values.
// You can construct a concrete instance of `CsmThreatsAgentRuleMapInput` via:
//
//	CsmThreatsAgentRuleMap{ "key": CsmThreatsAgentRuleArgs{...} }
type CsmThreatsAgentRuleMapInput interface {
	pulumi.Input

	ToCsmThreatsAgentRuleMapOutput() CsmThreatsAgentRuleMapOutput
	ToCsmThreatsAgentRuleMapOutputWithContext(context.Context) CsmThreatsAgentRuleMapOutput
}

type CsmThreatsAgentRuleMap map[string]CsmThreatsAgentRuleInput

func (CsmThreatsAgentRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CsmThreatsAgentRule)(nil)).Elem()
}

func (i CsmThreatsAgentRuleMap) ToCsmThreatsAgentRuleMapOutput() CsmThreatsAgentRuleMapOutput {
	return i.ToCsmThreatsAgentRuleMapOutputWithContext(context.Background())
}

func (i CsmThreatsAgentRuleMap) ToCsmThreatsAgentRuleMapOutputWithContext(ctx context.Context) CsmThreatsAgentRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CsmThreatsAgentRuleMapOutput)
}

type CsmThreatsAgentRuleOutput struct{ *pulumi.OutputState }

func (CsmThreatsAgentRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CsmThreatsAgentRule)(nil)).Elem()
}

func (o CsmThreatsAgentRuleOutput) ToCsmThreatsAgentRuleOutput() CsmThreatsAgentRuleOutput {
	return o
}

func (o CsmThreatsAgentRuleOutput) ToCsmThreatsAgentRuleOutputWithContext(ctx context.Context) CsmThreatsAgentRuleOutput {
	return o
}

// A description for the Agent rule. Defaults to `""`.
func (o CsmThreatsAgentRuleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *CsmThreatsAgentRule) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Indicates Whether the Agent rule is enabled.
func (o CsmThreatsAgentRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CsmThreatsAgentRule) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The SECL expression of the Agent rule
func (o CsmThreatsAgentRuleOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v *CsmThreatsAgentRule) pulumi.StringOutput { return v.Expression }).(pulumi.StringOutput)
}

// The name of the Agent rule.
func (o CsmThreatsAgentRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CsmThreatsAgentRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type CsmThreatsAgentRuleArrayOutput struct{ *pulumi.OutputState }

func (CsmThreatsAgentRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CsmThreatsAgentRule)(nil)).Elem()
}

func (o CsmThreatsAgentRuleArrayOutput) ToCsmThreatsAgentRuleArrayOutput() CsmThreatsAgentRuleArrayOutput {
	return o
}

func (o CsmThreatsAgentRuleArrayOutput) ToCsmThreatsAgentRuleArrayOutputWithContext(ctx context.Context) CsmThreatsAgentRuleArrayOutput {
	return o
}

func (o CsmThreatsAgentRuleArrayOutput) Index(i pulumi.IntInput) CsmThreatsAgentRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CsmThreatsAgentRule {
		return vs[0].([]*CsmThreatsAgentRule)[vs[1].(int)]
	}).(CsmThreatsAgentRuleOutput)
}

type CsmThreatsAgentRuleMapOutput struct{ *pulumi.OutputState }

func (CsmThreatsAgentRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CsmThreatsAgentRule)(nil)).Elem()
}

func (o CsmThreatsAgentRuleMapOutput) ToCsmThreatsAgentRuleMapOutput() CsmThreatsAgentRuleMapOutput {
	return o
}

func (o CsmThreatsAgentRuleMapOutput) ToCsmThreatsAgentRuleMapOutputWithContext(ctx context.Context) CsmThreatsAgentRuleMapOutput {
	return o
}

func (o CsmThreatsAgentRuleMapOutput) MapIndex(k pulumi.StringInput) CsmThreatsAgentRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CsmThreatsAgentRule {
		return vs[0].(map[string]*CsmThreatsAgentRule)[vs[1].(string)]
	}).(CsmThreatsAgentRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CsmThreatsAgentRuleInput)(nil)).Elem(), &CsmThreatsAgentRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsmThreatsAgentRuleArrayInput)(nil)).Elem(), CsmThreatsAgentRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CsmThreatsAgentRuleMapInput)(nil)).Elem(), CsmThreatsAgentRuleMap{})
	pulumi.RegisterOutputType(CsmThreatsAgentRuleOutput{})
	pulumi.RegisterOutputType(CsmThreatsAgentRuleArrayOutput{})
	pulumi.RegisterOutputType(CsmThreatsAgentRuleMapOutput{})
}
