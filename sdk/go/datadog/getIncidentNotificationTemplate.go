// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about an existing incident notification template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.LookupIncidentNotificationTemplate(ctx, &datadog.LookupIncidentNotificationTemplateArgs{
//				Id: pulumi.StringRef("52600bb1-e83a-48a1-aa77-6889ddb269b2"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupIncidentNotificationTemplate(ctx *pulumi.Context, args *LookupIncidentNotificationTemplateArgs, opts ...pulumi.InvokeOption) (*LookupIncidentNotificationTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIncidentNotificationTemplateResult
	err := ctx.Invoke("datadog:index/getIncidentNotificationTemplate:getIncidentNotificationTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIncidentNotificationTemplate.
type LookupIncidentNotificationTemplateArgs struct {
	// The ID of the incident notification template.
	Id *string `pulumi:"id"`
	// The name of the notification template.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getIncidentNotificationTemplate.
type LookupIncidentNotificationTemplateResult struct {
	// The category of the notification template.
	Category string `pulumi:"category"`
	// The content body of the notification template.
	Content string `pulumi:"content"`
	// Timestamp when the notification template was created.
	Created string `pulumi:"created"`
	// The ID of the incident notification template.
	Id string `pulumi:"id"`
	// The ID of the incident type this notification template is associated with.
	IncidentType string `pulumi:"incidentType"`
	// Timestamp when the notification template was last modified.
	Modified string `pulumi:"modified"`
	// The name of the notification template.
	Name string `pulumi:"name"`
	// The subject line of the notification template.
	Subject string `pulumi:"subject"`
}

func LookupIncidentNotificationTemplateOutput(ctx *pulumi.Context, args LookupIncidentNotificationTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupIncidentNotificationTemplateResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIncidentNotificationTemplateResultOutput, error) {
			args := v.(LookupIncidentNotificationTemplateArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("datadog:index/getIncidentNotificationTemplate:getIncidentNotificationTemplate", args, LookupIncidentNotificationTemplateResultOutput{}, options).(LookupIncidentNotificationTemplateResultOutput), nil
		}).(LookupIncidentNotificationTemplateResultOutput)
}

// A collection of arguments for invoking getIncidentNotificationTemplate.
type LookupIncidentNotificationTemplateOutputArgs struct {
	// The ID of the incident notification template.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the notification template.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupIncidentNotificationTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIncidentNotificationTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getIncidentNotificationTemplate.
type LookupIncidentNotificationTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupIncidentNotificationTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIncidentNotificationTemplateResult)(nil)).Elem()
}

func (o LookupIncidentNotificationTemplateResultOutput) ToLookupIncidentNotificationTemplateResultOutput() LookupIncidentNotificationTemplateResultOutput {
	return o
}

func (o LookupIncidentNotificationTemplateResultOutput) ToLookupIncidentNotificationTemplateResultOutputWithContext(ctx context.Context) LookupIncidentNotificationTemplateResultOutput {
	return o
}

// The category of the notification template.
func (o LookupIncidentNotificationTemplateResultOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIncidentNotificationTemplateResult) string { return v.Category }).(pulumi.StringOutput)
}

// The content body of the notification template.
func (o LookupIncidentNotificationTemplateResultOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIncidentNotificationTemplateResult) string { return v.Content }).(pulumi.StringOutput)
}

// Timestamp when the notification template was created.
func (o LookupIncidentNotificationTemplateResultOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIncidentNotificationTemplateResult) string { return v.Created }).(pulumi.StringOutput)
}

// The ID of the incident notification template.
func (o LookupIncidentNotificationTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIncidentNotificationTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the incident type this notification template is associated with.
func (o LookupIncidentNotificationTemplateResultOutput) IncidentType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIncidentNotificationTemplateResult) string { return v.IncidentType }).(pulumi.StringOutput)
}

// Timestamp when the notification template was last modified.
func (o LookupIncidentNotificationTemplateResultOutput) Modified() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIncidentNotificationTemplateResult) string { return v.Modified }).(pulumi.StringOutput)
}

// The name of the notification template.
func (o LookupIncidentNotificationTemplateResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIncidentNotificationTemplateResult) string { return v.Name }).(pulumi.StringOutput)
}

// The subject line of the notification template.
func (o LookupIncidentNotificationTemplateResultOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIncidentNotificationTemplateResult) string { return v.Subject }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIncidentNotificationTemplateResultOutput{})
}
