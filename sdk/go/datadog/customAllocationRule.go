// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog Custom Allocation Rule resource. Custom allocation rules allow you to allocate cloud costs based on tags and filters.
//
// ## Example Usage
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import datadog:index/customAllocationRule:CustomAllocationRule new_list <rule_id>
// ```
type CustomAllocationRule struct {
	pulumi.CustomResourceState

	CostsToAllocates CustomAllocationRuleCostsToAllocateArrayOutput `pulumi:"costsToAllocates"`
	// The timestamp (in ISO 8601 format) when the rule was created.
	Created pulumi.StringOutput `pulumi:"created"`
	// Whether the custom allocation rule is enabled.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The UUID of the user who last modified the rule.
	LastModifiedUserUuid pulumi.StringOutput `pulumi:"lastModifiedUserUuid"`
	// The order of the rule in the list of custom allocation rules. This field is read-only. Use the `CustomAllocationRules` resource to manage rule order.
	OrderId pulumi.IntOutput `pulumi:"orderId"`
	// List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
	Providernames pulumi.StringArrayOutput `pulumi:"providernames"`
	// Whether the rule was rejected by the API during creation due to validation errors. This field is read-only.
	Rejected pulumi.BoolOutput `pulumi:"rejected"`
	// The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
	RuleName pulumi.StringOutput                   `pulumi:"ruleName"`
	Strategy CustomAllocationRuleStrategyPtrOutput `pulumi:"strategy"`
	// The timestamp (in ISO 8601 format) when the rule was last updated.
	Updated pulumi.StringOutput `pulumi:"updated"`
	// The version number of the rule. This increments each time the rule is updated.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewCustomAllocationRule registers a new resource with the given unique name, arguments, and options.
func NewCustomAllocationRule(ctx *pulumi.Context,
	name string, args *CustomAllocationRuleArgs, opts ...pulumi.ResourceOption) (*CustomAllocationRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Providernames == nil {
		return nil, errors.New("invalid value for required argument 'Providernames'")
	}
	if args.RuleName == nil {
		return nil, errors.New("invalid value for required argument 'RuleName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomAllocationRule
	err := ctx.RegisterResource("datadog:index/customAllocationRule:CustomAllocationRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomAllocationRule gets an existing CustomAllocationRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomAllocationRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomAllocationRuleState, opts ...pulumi.ResourceOption) (*CustomAllocationRule, error) {
	var resource CustomAllocationRule
	err := ctx.ReadResource("datadog:index/customAllocationRule:CustomAllocationRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomAllocationRule resources.
type customAllocationRuleState struct {
	CostsToAllocates []CustomAllocationRuleCostsToAllocate `pulumi:"costsToAllocates"`
	// The timestamp (in ISO 8601 format) when the rule was created.
	Created *string `pulumi:"created"`
	// Whether the custom allocation rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The UUID of the user who last modified the rule.
	LastModifiedUserUuid *string `pulumi:"lastModifiedUserUuid"`
	// The order of the rule in the list of custom allocation rules. This field is read-only. Use the `CustomAllocationRules` resource to manage rule order.
	OrderId *int `pulumi:"orderId"`
	// List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
	Providernames []string `pulumi:"providernames"`
	// Whether the rule was rejected by the API during creation due to validation errors. This field is read-only.
	Rejected *bool `pulumi:"rejected"`
	// The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
	RuleName *string                       `pulumi:"ruleName"`
	Strategy *CustomAllocationRuleStrategy `pulumi:"strategy"`
	// The timestamp (in ISO 8601 format) when the rule was last updated.
	Updated *string `pulumi:"updated"`
	// The version number of the rule. This increments each time the rule is updated.
	Version *int `pulumi:"version"`
}

type CustomAllocationRuleState struct {
	CostsToAllocates CustomAllocationRuleCostsToAllocateArrayInput
	// The timestamp (in ISO 8601 format) when the rule was created.
	Created pulumi.StringPtrInput
	// Whether the custom allocation rule is enabled.
	Enabled pulumi.BoolPtrInput
	// The UUID of the user who last modified the rule.
	LastModifiedUserUuid pulumi.StringPtrInput
	// The order of the rule in the list of custom allocation rules. This field is read-only. Use the `CustomAllocationRules` resource to manage rule order.
	OrderId pulumi.IntPtrInput
	// List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
	Providernames pulumi.StringArrayInput
	// Whether the rule was rejected by the API during creation due to validation errors. This field is read-only.
	Rejected pulumi.BoolPtrInput
	// The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
	RuleName pulumi.StringPtrInput
	Strategy CustomAllocationRuleStrategyPtrInput
	// The timestamp (in ISO 8601 format) when the rule was last updated.
	Updated pulumi.StringPtrInput
	// The version number of the rule. This increments each time the rule is updated.
	Version pulumi.IntPtrInput
}

func (CustomAllocationRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*customAllocationRuleState)(nil)).Elem()
}

type customAllocationRuleArgs struct {
	CostsToAllocates []CustomAllocationRuleCostsToAllocate `pulumi:"costsToAllocates"`
	// Whether the custom allocation rule is enabled.
	Enabled bool `pulumi:"enabled"`
	// List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
	Providernames []string `pulumi:"providernames"`
	// The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
	RuleName string                        `pulumi:"ruleName"`
	Strategy *CustomAllocationRuleStrategy `pulumi:"strategy"`
}

// The set of arguments for constructing a CustomAllocationRule resource.
type CustomAllocationRuleArgs struct {
	CostsToAllocates CustomAllocationRuleCostsToAllocateArrayInput
	// Whether the custom allocation rule is enabled.
	Enabled pulumi.BoolInput
	// List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
	Providernames pulumi.StringArrayInput
	// The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
	RuleName pulumi.StringInput
	Strategy CustomAllocationRuleStrategyPtrInput
}

func (CustomAllocationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customAllocationRuleArgs)(nil)).Elem()
}

type CustomAllocationRuleInput interface {
	pulumi.Input

	ToCustomAllocationRuleOutput() CustomAllocationRuleOutput
	ToCustomAllocationRuleOutputWithContext(ctx context.Context) CustomAllocationRuleOutput
}

func (*CustomAllocationRule) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAllocationRule)(nil)).Elem()
}

func (i *CustomAllocationRule) ToCustomAllocationRuleOutput() CustomAllocationRuleOutput {
	return i.ToCustomAllocationRuleOutputWithContext(context.Background())
}

func (i *CustomAllocationRule) ToCustomAllocationRuleOutputWithContext(ctx context.Context) CustomAllocationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAllocationRuleOutput)
}

// CustomAllocationRuleArrayInput is an input type that accepts CustomAllocationRuleArray and CustomAllocationRuleArrayOutput values.
// You can construct a concrete instance of `CustomAllocationRuleArrayInput` via:
//
//	CustomAllocationRuleArray{ CustomAllocationRuleArgs{...} }
type CustomAllocationRuleArrayInput interface {
	pulumi.Input

	ToCustomAllocationRuleArrayOutput() CustomAllocationRuleArrayOutput
	ToCustomAllocationRuleArrayOutputWithContext(context.Context) CustomAllocationRuleArrayOutput
}

type CustomAllocationRuleArray []CustomAllocationRuleInput

func (CustomAllocationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomAllocationRule)(nil)).Elem()
}

func (i CustomAllocationRuleArray) ToCustomAllocationRuleArrayOutput() CustomAllocationRuleArrayOutput {
	return i.ToCustomAllocationRuleArrayOutputWithContext(context.Background())
}

func (i CustomAllocationRuleArray) ToCustomAllocationRuleArrayOutputWithContext(ctx context.Context) CustomAllocationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAllocationRuleArrayOutput)
}

// CustomAllocationRuleMapInput is an input type that accepts CustomAllocationRuleMap and CustomAllocationRuleMapOutput values.
// You can construct a concrete instance of `CustomAllocationRuleMapInput` via:
//
//	CustomAllocationRuleMap{ "key": CustomAllocationRuleArgs{...} }
type CustomAllocationRuleMapInput interface {
	pulumi.Input

	ToCustomAllocationRuleMapOutput() CustomAllocationRuleMapOutput
	ToCustomAllocationRuleMapOutputWithContext(context.Context) CustomAllocationRuleMapOutput
}

type CustomAllocationRuleMap map[string]CustomAllocationRuleInput

func (CustomAllocationRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomAllocationRule)(nil)).Elem()
}

func (i CustomAllocationRuleMap) ToCustomAllocationRuleMapOutput() CustomAllocationRuleMapOutput {
	return i.ToCustomAllocationRuleMapOutputWithContext(context.Background())
}

func (i CustomAllocationRuleMap) ToCustomAllocationRuleMapOutputWithContext(ctx context.Context) CustomAllocationRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomAllocationRuleMapOutput)
}

type CustomAllocationRuleOutput struct{ *pulumi.OutputState }

func (CustomAllocationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAllocationRule)(nil)).Elem()
}

func (o CustomAllocationRuleOutput) ToCustomAllocationRuleOutput() CustomAllocationRuleOutput {
	return o
}

func (o CustomAllocationRuleOutput) ToCustomAllocationRuleOutputWithContext(ctx context.Context) CustomAllocationRuleOutput {
	return o
}

func (o CustomAllocationRuleOutput) CostsToAllocates() CustomAllocationRuleCostsToAllocateArrayOutput {
	return o.ApplyT(func(v *CustomAllocationRule) CustomAllocationRuleCostsToAllocateArrayOutput {
		return v.CostsToAllocates
	}).(CustomAllocationRuleCostsToAllocateArrayOutput)
}

// The timestamp (in ISO 8601 format) when the rule was created.
func (o CustomAllocationRuleOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAllocationRule) pulumi.StringOutput { return v.Created }).(pulumi.StringOutput)
}

// Whether the custom allocation rule is enabled.
func (o CustomAllocationRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CustomAllocationRule) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The UUID of the user who last modified the rule.
func (o CustomAllocationRuleOutput) LastModifiedUserUuid() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAllocationRule) pulumi.StringOutput { return v.LastModifiedUserUuid }).(pulumi.StringOutput)
}

// The order of the rule in the list of custom allocation rules. This field is read-only. Use the `CustomAllocationRules` resource to manage rule order.
func (o CustomAllocationRuleOutput) OrderId() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomAllocationRule) pulumi.IntOutput { return v.OrderId }).(pulumi.IntOutput)
}

// List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
func (o CustomAllocationRuleOutput) Providernames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomAllocationRule) pulumi.StringArrayOutput { return v.Providernames }).(pulumi.StringArrayOutput)
}

// Whether the rule was rejected by the API during creation due to validation errors. This field is read-only.
func (o CustomAllocationRuleOutput) Rejected() pulumi.BoolOutput {
	return o.ApplyT(func(v *CustomAllocationRule) pulumi.BoolOutput { return v.Rejected }).(pulumi.BoolOutput)
}

// The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
func (o CustomAllocationRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAllocationRule) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

func (o CustomAllocationRuleOutput) Strategy() CustomAllocationRuleStrategyPtrOutput {
	return o.ApplyT(func(v *CustomAllocationRule) CustomAllocationRuleStrategyPtrOutput { return v.Strategy }).(CustomAllocationRuleStrategyPtrOutput)
}

// The timestamp (in ISO 8601 format) when the rule was last updated.
func (o CustomAllocationRuleOutput) Updated() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAllocationRule) pulumi.StringOutput { return v.Updated }).(pulumi.StringOutput)
}

// The version number of the rule. This increments each time the rule is updated.
func (o CustomAllocationRuleOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomAllocationRule) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type CustomAllocationRuleArrayOutput struct{ *pulumi.OutputState }

func (CustomAllocationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomAllocationRule)(nil)).Elem()
}

func (o CustomAllocationRuleArrayOutput) ToCustomAllocationRuleArrayOutput() CustomAllocationRuleArrayOutput {
	return o
}

func (o CustomAllocationRuleArrayOutput) ToCustomAllocationRuleArrayOutputWithContext(ctx context.Context) CustomAllocationRuleArrayOutput {
	return o
}

func (o CustomAllocationRuleArrayOutput) Index(i pulumi.IntInput) CustomAllocationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomAllocationRule {
		return vs[0].([]*CustomAllocationRule)[vs[1].(int)]
	}).(CustomAllocationRuleOutput)
}

type CustomAllocationRuleMapOutput struct{ *pulumi.OutputState }

func (CustomAllocationRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomAllocationRule)(nil)).Elem()
}

func (o CustomAllocationRuleMapOutput) ToCustomAllocationRuleMapOutput() CustomAllocationRuleMapOutput {
	return o
}

func (o CustomAllocationRuleMapOutput) ToCustomAllocationRuleMapOutputWithContext(ctx context.Context) CustomAllocationRuleMapOutput {
	return o
}

func (o CustomAllocationRuleMapOutput) MapIndex(k pulumi.StringInput) CustomAllocationRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomAllocationRule {
		return vs[0].(map[string]*CustomAllocationRule)[vs[1].(string)]
	}).(CustomAllocationRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAllocationRuleInput)(nil)).Elem(), &CustomAllocationRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAllocationRuleArrayInput)(nil)).Elem(), CustomAllocationRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomAllocationRuleMapInput)(nil)).Elem(), CustomAllocationRuleMap{})
	pulumi.RegisterOutputType(CustomAllocationRuleOutput{})
	pulumi.RegisterOutputType(CustomAllocationRuleArrayOutput{})
	pulumi.RegisterOutputType(CustomAllocationRuleMapOutput{})
}
