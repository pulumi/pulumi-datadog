// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog RestrictionPolicy resource. This can be used to create and manage Datadog restriction policies. See this page for more details https://docs.datadoghq.com/api/latest/restriction-policies/#supported-relations-for-resources.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datadog.NewRestrictionPolicy(ctx, "foo", &datadog.RestrictionPolicyArgs{
//				Bindings: datadog.RestrictionPolicyBindingArray{
//					&datadog.RestrictionPolicyBindingArgs{
//						Principals: pulumi.StringArray{
//							pulumi.String("role:00000000-0000-1111-0000-000000000000"),
//						},
//						Relation: pulumi.String("editor"),
//					},
//					&datadog.RestrictionPolicyBindingArgs{
//						Principals: pulumi.StringArray{
//							pulumi.String("org:10000000-0000-1111-0000-000000000000"),
//						},
//						Relation: pulumi.String("viewer"),
//					},
//				},
//				ResourceId: pulumi.String("security-rule:abc-def-ghi"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import datadog:index/restrictionPolicy:RestrictionPolicy new_list ""
//
// ```
type RestrictionPolicy struct {
	pulumi.CustomResourceState

	Bindings RestrictionPolicyBindingArrayOutput `pulumi:"bindings"`
	// Identifier for the resource, formatted as resource*type:resource*id.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
}

// NewRestrictionPolicy registers a new resource with the given unique name, arguments, and options.
func NewRestrictionPolicy(ctx *pulumi.Context,
	name string, args *RestrictionPolicyArgs, opts ...pulumi.ResourceOption) (*RestrictionPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceId == nil {
		return nil, errors.New("invalid value for required argument 'ResourceId'")
	}
	var resource RestrictionPolicy
	err := ctx.RegisterResource("datadog:index/restrictionPolicy:RestrictionPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestrictionPolicy gets an existing RestrictionPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestrictionPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestrictionPolicyState, opts ...pulumi.ResourceOption) (*RestrictionPolicy, error) {
	var resource RestrictionPolicy
	err := ctx.ReadResource("datadog:index/restrictionPolicy:RestrictionPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestrictionPolicy resources.
type restrictionPolicyState struct {
	Bindings []RestrictionPolicyBinding `pulumi:"bindings"`
	// Identifier for the resource, formatted as resource*type:resource*id.
	ResourceId *string `pulumi:"resourceId"`
}

type RestrictionPolicyState struct {
	Bindings RestrictionPolicyBindingArrayInput
	// Identifier for the resource, formatted as resource*type:resource*id.
	ResourceId pulumi.StringPtrInput
}

func (RestrictionPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*restrictionPolicyState)(nil)).Elem()
}

type restrictionPolicyArgs struct {
	Bindings []RestrictionPolicyBinding `pulumi:"bindings"`
	// Identifier for the resource, formatted as resource*type:resource*id.
	ResourceId string `pulumi:"resourceId"`
}

// The set of arguments for constructing a RestrictionPolicy resource.
type RestrictionPolicyArgs struct {
	Bindings RestrictionPolicyBindingArrayInput
	// Identifier for the resource, formatted as resource*type:resource*id.
	ResourceId pulumi.StringInput
}

func (RestrictionPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restrictionPolicyArgs)(nil)).Elem()
}

type RestrictionPolicyInput interface {
	pulumi.Input

	ToRestrictionPolicyOutput() RestrictionPolicyOutput
	ToRestrictionPolicyOutputWithContext(ctx context.Context) RestrictionPolicyOutput
}

func (*RestrictionPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**RestrictionPolicy)(nil)).Elem()
}

func (i *RestrictionPolicy) ToRestrictionPolicyOutput() RestrictionPolicyOutput {
	return i.ToRestrictionPolicyOutputWithContext(context.Background())
}

func (i *RestrictionPolicy) ToRestrictionPolicyOutputWithContext(ctx context.Context) RestrictionPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionPolicyOutput)
}

// RestrictionPolicyArrayInput is an input type that accepts RestrictionPolicyArray and RestrictionPolicyArrayOutput values.
// You can construct a concrete instance of `RestrictionPolicyArrayInput` via:
//
//	RestrictionPolicyArray{ RestrictionPolicyArgs{...} }
type RestrictionPolicyArrayInput interface {
	pulumi.Input

	ToRestrictionPolicyArrayOutput() RestrictionPolicyArrayOutput
	ToRestrictionPolicyArrayOutputWithContext(context.Context) RestrictionPolicyArrayOutput
}

type RestrictionPolicyArray []RestrictionPolicyInput

func (RestrictionPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestrictionPolicy)(nil)).Elem()
}

func (i RestrictionPolicyArray) ToRestrictionPolicyArrayOutput() RestrictionPolicyArrayOutput {
	return i.ToRestrictionPolicyArrayOutputWithContext(context.Background())
}

func (i RestrictionPolicyArray) ToRestrictionPolicyArrayOutputWithContext(ctx context.Context) RestrictionPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionPolicyArrayOutput)
}

// RestrictionPolicyMapInput is an input type that accepts RestrictionPolicyMap and RestrictionPolicyMapOutput values.
// You can construct a concrete instance of `RestrictionPolicyMapInput` via:
//
//	RestrictionPolicyMap{ "key": RestrictionPolicyArgs{...} }
type RestrictionPolicyMapInput interface {
	pulumi.Input

	ToRestrictionPolicyMapOutput() RestrictionPolicyMapOutput
	ToRestrictionPolicyMapOutputWithContext(context.Context) RestrictionPolicyMapOutput
}

type RestrictionPolicyMap map[string]RestrictionPolicyInput

func (RestrictionPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestrictionPolicy)(nil)).Elem()
}

func (i RestrictionPolicyMap) ToRestrictionPolicyMapOutput() RestrictionPolicyMapOutput {
	return i.ToRestrictionPolicyMapOutputWithContext(context.Background())
}

func (i RestrictionPolicyMap) ToRestrictionPolicyMapOutputWithContext(ctx context.Context) RestrictionPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestrictionPolicyMapOutput)
}

type RestrictionPolicyOutput struct{ *pulumi.OutputState }

func (RestrictionPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestrictionPolicy)(nil)).Elem()
}

func (o RestrictionPolicyOutput) ToRestrictionPolicyOutput() RestrictionPolicyOutput {
	return o
}

func (o RestrictionPolicyOutput) ToRestrictionPolicyOutputWithContext(ctx context.Context) RestrictionPolicyOutput {
	return o
}

func (o RestrictionPolicyOutput) Bindings() RestrictionPolicyBindingArrayOutput {
	return o.ApplyT(func(v *RestrictionPolicy) RestrictionPolicyBindingArrayOutput { return v.Bindings }).(RestrictionPolicyBindingArrayOutput)
}

// Identifier for the resource, formatted as resource*type:resource*id.
func (o RestrictionPolicyOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RestrictionPolicy) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

type RestrictionPolicyArrayOutput struct{ *pulumi.OutputState }

func (RestrictionPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestrictionPolicy)(nil)).Elem()
}

func (o RestrictionPolicyArrayOutput) ToRestrictionPolicyArrayOutput() RestrictionPolicyArrayOutput {
	return o
}

func (o RestrictionPolicyArrayOutput) ToRestrictionPolicyArrayOutputWithContext(ctx context.Context) RestrictionPolicyArrayOutput {
	return o
}

func (o RestrictionPolicyArrayOutput) Index(i pulumi.IntInput) RestrictionPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RestrictionPolicy {
		return vs[0].([]*RestrictionPolicy)[vs[1].(int)]
	}).(RestrictionPolicyOutput)
}

type RestrictionPolicyMapOutput struct{ *pulumi.OutputState }

func (RestrictionPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestrictionPolicy)(nil)).Elem()
}

func (o RestrictionPolicyMapOutput) ToRestrictionPolicyMapOutput() RestrictionPolicyMapOutput {
	return o
}

func (o RestrictionPolicyMapOutput) ToRestrictionPolicyMapOutputWithContext(ctx context.Context) RestrictionPolicyMapOutput {
	return o
}

func (o RestrictionPolicyMapOutput) MapIndex(k pulumi.StringInput) RestrictionPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RestrictionPolicy {
		return vs[0].(map[string]*RestrictionPolicy)[vs[1].(string)]
	}).(RestrictionPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestrictionPolicyInput)(nil)).Elem(), &RestrictionPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestrictionPolicyArrayInput)(nil)).Elem(), RestrictionPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestrictionPolicyMapInput)(nil)).Elem(), RestrictionPolicyMap{})
	pulumi.RegisterOutputType(RestrictionPolicyOutput{})
	pulumi.RegisterOutputType(RestrictionPolicyArrayOutput{})
	pulumi.RegisterOutputType(RestrictionPolicyMapOutput{})
}
