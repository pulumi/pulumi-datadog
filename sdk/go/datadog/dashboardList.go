// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Datadog dashboardList resource. This can be used to create and manage Datadog Dashboard Lists and the individual dashboards within them.
type DashboardList struct {
	pulumi.CustomResourceState

	// An individual dashboard object to add to this Dashboard List. If present, must contain the following:
	DashItems DashboardListDashItemArrayOutput `pulumi:"dashItems"`
	// The name of this Dashbaord List.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewDashboardList registers a new resource with the given unique name, arguments, and options.
func NewDashboardList(ctx *pulumi.Context,
	name string, args *DashboardListArgs, opts ...pulumi.ResourceOption) (*DashboardList, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil {
		args = &DashboardListArgs{}
	}
	var resource DashboardList
	err := ctx.RegisterResource("datadog:index/dashboardList:DashboardList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDashboardList gets an existing DashboardList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDashboardList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DashboardListState, opts ...pulumi.ResourceOption) (*DashboardList, error) {
	var resource DashboardList
	err := ctx.ReadResource("datadog:index/dashboardList:DashboardList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DashboardList resources.
type dashboardListState struct {
	// An individual dashboard object to add to this Dashboard List. If present, must contain the following:
	DashItems []DashboardListDashItem `pulumi:"dashItems"`
	// The name of this Dashbaord List.
	Name *string `pulumi:"name"`
}

type DashboardListState struct {
	// An individual dashboard object to add to this Dashboard List. If present, must contain the following:
	DashItems DashboardListDashItemArrayInput
	// The name of this Dashbaord List.
	Name pulumi.StringPtrInput
}

func (DashboardListState) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardListState)(nil)).Elem()
}

type dashboardListArgs struct {
	// An individual dashboard object to add to this Dashboard List. If present, must contain the following:
	DashItems []DashboardListDashItem `pulumi:"dashItems"`
	// The name of this Dashbaord List.
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a DashboardList resource.
type DashboardListArgs struct {
	// An individual dashboard object to add to this Dashboard List. If present, must contain the following:
	DashItems DashboardListDashItemArrayInput
	// The name of this Dashbaord List.
	Name pulumi.StringInput
}

func (DashboardListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardListArgs)(nil)).Elem()
}
