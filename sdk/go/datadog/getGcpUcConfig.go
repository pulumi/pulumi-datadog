// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about a specific Datadog GCP Usage Cost configuration. This allows you to fetch details about an existing Cloud Cost Management configuration for GCP billing data access.
func LookupGcpUcConfig(ctx *pulumi.Context, args *LookupGcpUcConfigArgs, opts ...pulumi.InvokeOption) (*LookupGcpUcConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGcpUcConfigResult
	err := ctx.Invoke("datadog:index/getGcpUcConfig:getGcpUcConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGcpUcConfig.
type LookupGcpUcConfigArgs struct {
	// The Datadog cloud account ID for the GCP Usage Cost configuration you want to retrieve information about.
	CloudAccountId int `pulumi:"cloudAccountId"`
}

// A collection of values returned by getGcpUcConfig.
type LookupGcpUcConfigResult struct {
	// The internal account identifier for this GCP Usage Cost configuration.
	AccountId string `pulumi:"accountId"`
	// The Google Cloud Storage bucket name where Usage Cost export files are stored.
	BucketName string `pulumi:"bucketName"`
	// The Datadog cloud account ID for the GCP Usage Cost configuration you want to retrieve information about.
	CloudAccountId int `pulumi:"cloudAccountId"`
	// The timestamp when the GCP Usage Cost configuration was created.
	CreatedAt string `pulumi:"createdAt"`
	// The resolved BigQuery dataset name used for the Usage Cost export.
	Dataset string `pulumi:"dataset"`
	// List of error messages if the GCP Usage Cost configuration encountered any issues during setup or data processing.
	ErrorMessages []string `pulumi:"errorMessages"`
	// The prefix path within the storage bucket where Usage Cost export files are organized.
	ExportPrefix string `pulumi:"exportPrefix"`
	// The Google Cloud Project ID where the Usage Cost export is configured.
	ExportProjectName string `pulumi:"exportProjectName"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The number of months of historical cost data available for analysis.
	Months int `pulumi:"months"`
	// The Google Cloud service account email that Datadog uses to access the Usage Cost export data.
	ServiceAccount string `pulumi:"serviceAccount"`
	// The current status of the GCP Usage Cost configuration (for example, active, error, or archived).
	Status string `pulumi:"status"`
	// The timestamp when the configuration status was last updated.
	StatusUpdatedAt string `pulumi:"statusUpdatedAt"`
	// The timestamp when the GCP Usage Cost configuration was last modified.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupGcpUcConfigOutput(ctx *pulumi.Context, args LookupGcpUcConfigOutputArgs, opts ...pulumi.InvokeOption) LookupGcpUcConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGcpUcConfigResultOutput, error) {
			args := v.(LookupGcpUcConfigArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("datadog:index/getGcpUcConfig:getGcpUcConfig", args, LookupGcpUcConfigResultOutput{}, options).(LookupGcpUcConfigResultOutput), nil
		}).(LookupGcpUcConfigResultOutput)
}

// A collection of arguments for invoking getGcpUcConfig.
type LookupGcpUcConfigOutputArgs struct {
	// The Datadog cloud account ID for the GCP Usage Cost configuration you want to retrieve information about.
	CloudAccountId pulumi.IntInput `pulumi:"cloudAccountId"`
}

func (LookupGcpUcConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGcpUcConfigArgs)(nil)).Elem()
}

// A collection of values returned by getGcpUcConfig.
type LookupGcpUcConfigResultOutput struct{ *pulumi.OutputState }

func (LookupGcpUcConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGcpUcConfigResult)(nil)).Elem()
}

func (o LookupGcpUcConfigResultOutput) ToLookupGcpUcConfigResultOutput() LookupGcpUcConfigResultOutput {
	return o
}

func (o LookupGcpUcConfigResultOutput) ToLookupGcpUcConfigResultOutputWithContext(ctx context.Context) LookupGcpUcConfigResultOutput {
	return o
}

// The internal account identifier for this GCP Usage Cost configuration.
func (o LookupGcpUcConfigResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The Google Cloud Storage bucket name where Usage Cost export files are stored.
func (o LookupGcpUcConfigResultOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) string { return v.BucketName }).(pulumi.StringOutput)
}

// The Datadog cloud account ID for the GCP Usage Cost configuration you want to retrieve information about.
func (o LookupGcpUcConfigResultOutput) CloudAccountId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) int { return v.CloudAccountId }).(pulumi.IntOutput)
}

// The timestamp when the GCP Usage Cost configuration was created.
func (o LookupGcpUcConfigResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The resolved BigQuery dataset name used for the Usage Cost export.
func (o LookupGcpUcConfigResultOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) string { return v.Dataset }).(pulumi.StringOutput)
}

// List of error messages if the GCP Usage Cost configuration encountered any issues during setup or data processing.
func (o LookupGcpUcConfigResultOutput) ErrorMessages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) []string { return v.ErrorMessages }).(pulumi.StringArrayOutput)
}

// The prefix path within the storage bucket where Usage Cost export files are organized.
func (o LookupGcpUcConfigResultOutput) ExportPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) string { return v.ExportPrefix }).(pulumi.StringOutput)
}

// The Google Cloud Project ID where the Usage Cost export is configured.
func (o LookupGcpUcConfigResultOutput) ExportProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) string { return v.ExportProjectName }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o LookupGcpUcConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// The number of months of historical cost data available for analysis.
func (o LookupGcpUcConfigResultOutput) Months() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) int { return v.Months }).(pulumi.IntOutput)
}

// The Google Cloud service account email that Datadog uses to access the Usage Cost export data.
func (o LookupGcpUcConfigResultOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) string { return v.ServiceAccount }).(pulumi.StringOutput)
}

// The current status of the GCP Usage Cost configuration (for example, active, error, or archived).
func (o LookupGcpUcConfigResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) string { return v.Status }).(pulumi.StringOutput)
}

// The timestamp when the configuration status was last updated.
func (o LookupGcpUcConfigResultOutput) StatusUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) string { return v.StatusUpdatedAt }).(pulumi.StringOutput)
}

// The timestamp when the GCP Usage Cost configuration was last modified.
func (o LookupGcpUcConfigResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGcpUcConfigResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGcpUcConfigResultOutput{})
}
