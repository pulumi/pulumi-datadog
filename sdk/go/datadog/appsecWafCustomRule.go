// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog AppsecWafCustomRule resource. This can be used to create and manage Datadog appsec_waf_custom_rule.
//
// ## Import
//
// ```sh
// $ pulumi import datadog:index/appsecWafCustomRule:AppsecWafCustomRule new_list ""
// ```
type AppsecWafCustomRule struct {
	pulumi.CustomResourceState

	Action AppsecWafCustomRuleActionPtrOutput `pulumi:"action"`
	// Indicates whether the WAF custom rule will block the request.
	Blocking   pulumi.BoolOutput                       `pulumi:"blocking"`
	Conditions AppsecWafCustomRuleConditionArrayOutput `pulumi:"conditions"`
	// Indicates whether the WAF custom rule is enabled.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The Name of the WAF custom rule.
	Name pulumi.StringOutput `pulumi:"name"`
	// The path glob for the WAF custom rule.
	PathGlob pulumi.StringPtrOutput              `pulumi:"pathGlob"`
	Scopes   AppsecWafCustomRuleScopeArrayOutput `pulumi:"scopes"`
	// Tags associated with the WAF custom rule. `category` and `type` tags are required. Supported categories include `businessLogic`, `attackAttempt` and `securityResponse`.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewAppsecWafCustomRule registers a new resource with the given unique name, arguments, and options.
func NewAppsecWafCustomRule(ctx *pulumi.Context,
	name string, args *AppsecWafCustomRuleArgs, opts ...pulumi.ResourceOption) (*AppsecWafCustomRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Blocking == nil {
		return nil, errors.New("invalid value for required argument 'Blocking'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Tags == nil {
		return nil, errors.New("invalid value for required argument 'Tags'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppsecWafCustomRule
	err := ctx.RegisterResource("datadog:index/appsecWafCustomRule:AppsecWafCustomRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppsecWafCustomRule gets an existing AppsecWafCustomRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppsecWafCustomRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppsecWafCustomRuleState, opts ...pulumi.ResourceOption) (*AppsecWafCustomRule, error) {
	var resource AppsecWafCustomRule
	err := ctx.ReadResource("datadog:index/appsecWafCustomRule:AppsecWafCustomRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppsecWafCustomRule resources.
type appsecWafCustomRuleState struct {
	Action *AppsecWafCustomRuleAction `pulumi:"action"`
	// Indicates whether the WAF custom rule will block the request.
	Blocking   *bool                          `pulumi:"blocking"`
	Conditions []AppsecWafCustomRuleCondition `pulumi:"conditions"`
	// Indicates whether the WAF custom rule is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The Name of the WAF custom rule.
	Name *string `pulumi:"name"`
	// The path glob for the WAF custom rule.
	PathGlob *string                    `pulumi:"pathGlob"`
	Scopes   []AppsecWafCustomRuleScope `pulumi:"scopes"`
	// Tags associated with the WAF custom rule. `category` and `type` tags are required. Supported categories include `businessLogic`, `attackAttempt` and `securityResponse`.
	Tags map[string]string `pulumi:"tags"`
}

type AppsecWafCustomRuleState struct {
	Action AppsecWafCustomRuleActionPtrInput
	// Indicates whether the WAF custom rule will block the request.
	Blocking   pulumi.BoolPtrInput
	Conditions AppsecWafCustomRuleConditionArrayInput
	// Indicates whether the WAF custom rule is enabled.
	Enabled pulumi.BoolPtrInput
	// The Name of the WAF custom rule.
	Name pulumi.StringPtrInput
	// The path glob for the WAF custom rule.
	PathGlob pulumi.StringPtrInput
	Scopes   AppsecWafCustomRuleScopeArrayInput
	// Tags associated with the WAF custom rule. `category` and `type` tags are required. Supported categories include `businessLogic`, `attackAttempt` and `securityResponse`.
	Tags pulumi.StringMapInput
}

func (AppsecWafCustomRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecWafCustomRuleState)(nil)).Elem()
}

type appsecWafCustomRuleArgs struct {
	Action *AppsecWafCustomRuleAction `pulumi:"action"`
	// Indicates whether the WAF custom rule will block the request.
	Blocking   bool                           `pulumi:"blocking"`
	Conditions []AppsecWafCustomRuleCondition `pulumi:"conditions"`
	// Indicates whether the WAF custom rule is enabled.
	Enabled bool `pulumi:"enabled"`
	// The Name of the WAF custom rule.
	Name string `pulumi:"name"`
	// The path glob for the WAF custom rule.
	PathGlob *string                    `pulumi:"pathGlob"`
	Scopes   []AppsecWafCustomRuleScope `pulumi:"scopes"`
	// Tags associated with the WAF custom rule. `category` and `type` tags are required. Supported categories include `businessLogic`, `attackAttempt` and `securityResponse`.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AppsecWafCustomRule resource.
type AppsecWafCustomRuleArgs struct {
	Action AppsecWafCustomRuleActionPtrInput
	// Indicates whether the WAF custom rule will block the request.
	Blocking   pulumi.BoolInput
	Conditions AppsecWafCustomRuleConditionArrayInput
	// Indicates whether the WAF custom rule is enabled.
	Enabled pulumi.BoolInput
	// The Name of the WAF custom rule.
	Name pulumi.StringInput
	// The path glob for the WAF custom rule.
	PathGlob pulumi.StringPtrInput
	Scopes   AppsecWafCustomRuleScopeArrayInput
	// Tags associated with the WAF custom rule. `category` and `type` tags are required. Supported categories include `businessLogic`, `attackAttempt` and `securityResponse`.
	Tags pulumi.StringMapInput
}

func (AppsecWafCustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecWafCustomRuleArgs)(nil)).Elem()
}

type AppsecWafCustomRuleInput interface {
	pulumi.Input

	ToAppsecWafCustomRuleOutput() AppsecWafCustomRuleOutput
	ToAppsecWafCustomRuleOutputWithContext(ctx context.Context) AppsecWafCustomRuleOutput
}

func (*AppsecWafCustomRule) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecWafCustomRule)(nil)).Elem()
}

func (i *AppsecWafCustomRule) ToAppsecWafCustomRuleOutput() AppsecWafCustomRuleOutput {
	return i.ToAppsecWafCustomRuleOutputWithContext(context.Background())
}

func (i *AppsecWafCustomRule) ToAppsecWafCustomRuleOutputWithContext(ctx context.Context) AppsecWafCustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecWafCustomRuleOutput)
}

// AppsecWafCustomRuleArrayInput is an input type that accepts AppsecWafCustomRuleArray and AppsecWafCustomRuleArrayOutput values.
// You can construct a concrete instance of `AppsecWafCustomRuleArrayInput` via:
//
//	AppsecWafCustomRuleArray{ AppsecWafCustomRuleArgs{...} }
type AppsecWafCustomRuleArrayInput interface {
	pulumi.Input

	ToAppsecWafCustomRuleArrayOutput() AppsecWafCustomRuleArrayOutput
	ToAppsecWafCustomRuleArrayOutputWithContext(context.Context) AppsecWafCustomRuleArrayOutput
}

type AppsecWafCustomRuleArray []AppsecWafCustomRuleInput

func (AppsecWafCustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecWafCustomRule)(nil)).Elem()
}

func (i AppsecWafCustomRuleArray) ToAppsecWafCustomRuleArrayOutput() AppsecWafCustomRuleArrayOutput {
	return i.ToAppsecWafCustomRuleArrayOutputWithContext(context.Background())
}

func (i AppsecWafCustomRuleArray) ToAppsecWafCustomRuleArrayOutputWithContext(ctx context.Context) AppsecWafCustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecWafCustomRuleArrayOutput)
}

// AppsecWafCustomRuleMapInput is an input type that accepts AppsecWafCustomRuleMap and AppsecWafCustomRuleMapOutput values.
// You can construct a concrete instance of `AppsecWafCustomRuleMapInput` via:
//
//	AppsecWafCustomRuleMap{ "key": AppsecWafCustomRuleArgs{...} }
type AppsecWafCustomRuleMapInput interface {
	pulumi.Input

	ToAppsecWafCustomRuleMapOutput() AppsecWafCustomRuleMapOutput
	ToAppsecWafCustomRuleMapOutputWithContext(context.Context) AppsecWafCustomRuleMapOutput
}

type AppsecWafCustomRuleMap map[string]AppsecWafCustomRuleInput

func (AppsecWafCustomRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecWafCustomRule)(nil)).Elem()
}

func (i AppsecWafCustomRuleMap) ToAppsecWafCustomRuleMapOutput() AppsecWafCustomRuleMapOutput {
	return i.ToAppsecWafCustomRuleMapOutputWithContext(context.Background())
}

func (i AppsecWafCustomRuleMap) ToAppsecWafCustomRuleMapOutputWithContext(ctx context.Context) AppsecWafCustomRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecWafCustomRuleMapOutput)
}

type AppsecWafCustomRuleOutput struct{ *pulumi.OutputState }

func (AppsecWafCustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecWafCustomRule)(nil)).Elem()
}

func (o AppsecWafCustomRuleOutput) ToAppsecWafCustomRuleOutput() AppsecWafCustomRuleOutput {
	return o
}

func (o AppsecWafCustomRuleOutput) ToAppsecWafCustomRuleOutputWithContext(ctx context.Context) AppsecWafCustomRuleOutput {
	return o
}

func (o AppsecWafCustomRuleOutput) Action() AppsecWafCustomRuleActionPtrOutput {
	return o.ApplyT(func(v *AppsecWafCustomRule) AppsecWafCustomRuleActionPtrOutput { return v.Action }).(AppsecWafCustomRuleActionPtrOutput)
}

// Indicates whether the WAF custom rule will block the request.
func (o AppsecWafCustomRuleOutput) Blocking() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppsecWafCustomRule) pulumi.BoolOutput { return v.Blocking }).(pulumi.BoolOutput)
}

func (o AppsecWafCustomRuleOutput) Conditions() AppsecWafCustomRuleConditionArrayOutput {
	return o.ApplyT(func(v *AppsecWafCustomRule) AppsecWafCustomRuleConditionArrayOutput { return v.Conditions }).(AppsecWafCustomRuleConditionArrayOutput)
}

// Indicates whether the WAF custom rule is enabled.
func (o AppsecWafCustomRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppsecWafCustomRule) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The Name of the WAF custom rule.
func (o AppsecWafCustomRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecWafCustomRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The path glob for the WAF custom rule.
func (o AppsecWafCustomRuleOutput) PathGlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsecWafCustomRule) pulumi.StringPtrOutput { return v.PathGlob }).(pulumi.StringPtrOutput)
}

func (o AppsecWafCustomRuleOutput) Scopes() AppsecWafCustomRuleScopeArrayOutput {
	return o.ApplyT(func(v *AppsecWafCustomRule) AppsecWafCustomRuleScopeArrayOutput { return v.Scopes }).(AppsecWafCustomRuleScopeArrayOutput)
}

// Tags associated with the WAF custom rule. `category` and `type` tags are required. Supported categories include `businessLogic`, `attackAttempt` and `securityResponse`.
func (o AppsecWafCustomRuleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AppsecWafCustomRule) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

type AppsecWafCustomRuleArrayOutput struct{ *pulumi.OutputState }

func (AppsecWafCustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecWafCustomRule)(nil)).Elem()
}

func (o AppsecWafCustomRuleArrayOutput) ToAppsecWafCustomRuleArrayOutput() AppsecWafCustomRuleArrayOutput {
	return o
}

func (o AppsecWafCustomRuleArrayOutput) ToAppsecWafCustomRuleArrayOutputWithContext(ctx context.Context) AppsecWafCustomRuleArrayOutput {
	return o
}

func (o AppsecWafCustomRuleArrayOutput) Index(i pulumi.IntInput) AppsecWafCustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppsecWafCustomRule {
		return vs[0].([]*AppsecWafCustomRule)[vs[1].(int)]
	}).(AppsecWafCustomRuleOutput)
}

type AppsecWafCustomRuleMapOutput struct{ *pulumi.OutputState }

func (AppsecWafCustomRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecWafCustomRule)(nil)).Elem()
}

func (o AppsecWafCustomRuleMapOutput) ToAppsecWafCustomRuleMapOutput() AppsecWafCustomRuleMapOutput {
	return o
}

func (o AppsecWafCustomRuleMapOutput) ToAppsecWafCustomRuleMapOutputWithContext(ctx context.Context) AppsecWafCustomRuleMapOutput {
	return o
}

func (o AppsecWafCustomRuleMapOutput) MapIndex(k pulumi.StringInput) AppsecWafCustomRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppsecWafCustomRule {
		return vs[0].(map[string]*AppsecWafCustomRule)[vs[1].(string)]
	}).(AppsecWafCustomRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecWafCustomRuleInput)(nil)).Elem(), &AppsecWafCustomRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecWafCustomRuleArrayInput)(nil)).Elem(), AppsecWafCustomRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecWafCustomRuleMapInput)(nil)).Elem(), AppsecWafCustomRuleMap{})
	pulumi.RegisterOutputType(AppsecWafCustomRuleOutput{})
	pulumi.RegisterOutputType(AppsecWafCustomRuleArrayOutput{})
	pulumi.RegisterOutputType(AppsecWafCustomRuleMapOutput{})
}
