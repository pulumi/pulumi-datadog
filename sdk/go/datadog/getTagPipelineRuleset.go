// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about an existing Datadog tag pipeline ruleset.
func LookupTagPipelineRuleset(ctx *pulumi.Context, args *LookupTagPipelineRulesetArgs, opts ...pulumi.InvokeOption) (*LookupTagPipelineRulesetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTagPipelineRulesetResult
	err := ctx.Invoke("datadog:index/getTagPipelineRuleset:getTagPipelineRuleset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTagPipelineRuleset.
type LookupTagPipelineRulesetArgs struct {
	// The ID of the ruleset.
	Id string `pulumi:"id"`
	// The rules in the ruleset.
	Rules []GetTagPipelineRulesetRule `pulumi:"rules"`
}

// A collection of values returned by getTagPipelineRuleset.
type LookupTagPipelineRulesetResult struct {
	// Whether the ruleset is enabled.
	Enabled bool `pulumi:"enabled"`
	// The ID of the ruleset.
	Id string `pulumi:"id"`
	// The name of the ruleset.
	Name string `pulumi:"name"`
	// The position of the ruleset in the pipeline.
	Position int `pulumi:"position"`
	// The rules in the ruleset.
	Rules []GetTagPipelineRulesetRule `pulumi:"rules"`
	// The version of the ruleset.
	Version int `pulumi:"version"`
}

func LookupTagPipelineRulesetOutput(ctx *pulumi.Context, args LookupTagPipelineRulesetOutputArgs, opts ...pulumi.InvokeOption) LookupTagPipelineRulesetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTagPipelineRulesetResultOutput, error) {
			args := v.(LookupTagPipelineRulesetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("datadog:index/getTagPipelineRuleset:getTagPipelineRuleset", args, LookupTagPipelineRulesetResultOutput{}, options).(LookupTagPipelineRulesetResultOutput), nil
		}).(LookupTagPipelineRulesetResultOutput)
}

// A collection of arguments for invoking getTagPipelineRuleset.
type LookupTagPipelineRulesetOutputArgs struct {
	// The ID of the ruleset.
	Id pulumi.StringInput `pulumi:"id"`
	// The rules in the ruleset.
	Rules GetTagPipelineRulesetRuleArrayInput `pulumi:"rules"`
}

func (LookupTagPipelineRulesetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagPipelineRulesetArgs)(nil)).Elem()
}

// A collection of values returned by getTagPipelineRuleset.
type LookupTagPipelineRulesetResultOutput struct{ *pulumi.OutputState }

func (LookupTagPipelineRulesetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagPipelineRulesetResult)(nil)).Elem()
}

func (o LookupTagPipelineRulesetResultOutput) ToLookupTagPipelineRulesetResultOutput() LookupTagPipelineRulesetResultOutput {
	return o
}

func (o LookupTagPipelineRulesetResultOutput) ToLookupTagPipelineRulesetResultOutputWithContext(ctx context.Context) LookupTagPipelineRulesetResultOutput {
	return o
}

// Whether the ruleset is enabled.
func (o LookupTagPipelineRulesetResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupTagPipelineRulesetResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The ID of the ruleset.
func (o LookupTagPipelineRulesetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagPipelineRulesetResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the ruleset.
func (o LookupTagPipelineRulesetResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTagPipelineRulesetResult) string { return v.Name }).(pulumi.StringOutput)
}

// The position of the ruleset in the pipeline.
func (o LookupTagPipelineRulesetResultOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTagPipelineRulesetResult) int { return v.Position }).(pulumi.IntOutput)
}

// The rules in the ruleset.
func (o LookupTagPipelineRulesetResultOutput) Rules() GetTagPipelineRulesetRuleArrayOutput {
	return o.ApplyT(func(v LookupTagPipelineRulesetResult) []GetTagPipelineRulesetRule { return v.Rules }).(GetTagPipelineRulesetRuleArrayOutput)
}

// The version of the ruleset.
func (o LookupTagPipelineRulesetResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v LookupTagPipelineRulesetResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTagPipelineRulesetResultOutput{})
}
