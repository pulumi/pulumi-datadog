// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gcp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This resource is deprecated â€” use the `gcp.IntegrationSts resource` instead. Provides a Datadog - Google Cloud Platform integration resource. This can be used to create and manage Datadog - Google Cloud Platform integration.
//
// ## Import
//
// Google Cloud Platform integrations can be imported using their project ID, e.g.
//
// ```sh
// $ pulumi import datadog:gcp/integration:Integration awesome_gcp_project_integration project_id
// ```
type Integration struct {
	pulumi.CustomResourceState

	// Silence monitors for expected GCE instance shutdowns. Defaults to `false`.
	Automute pulumi.BoolPtrOutput `pulumi:"automute"`
	// Your email found in your JSON service account key.
	ClientEmail pulumi.StringOutput `pulumi:"clientEmail"`
	// Your ID found in your JSON service account key.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// Whether Datadog collects cloud security posture management resources from your GCP project. Defaults to `false`.
	CspmResourceCollectionEnabled pulumi.BoolPtrOutput `pulumi:"cspmResourceCollectionEnabled"`
	// Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.
	HostFilters pulumi.StringPtrOutput `pulumi:"hostFilters"`
	// Your private key name found in your JSON service account key.
	PrivateKey pulumi.StringOutput `pulumi:"privateKey"`
	// Your private key ID found in your JSON service account key.
	PrivateKeyId pulumi.StringOutput `pulumi:"privateKeyId"`
	// Your Google Cloud project ID found in your JSON service account key.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
}

// NewIntegration registers a new resource with the given unique name, arguments, and options.
func NewIntegration(ctx *pulumi.Context,
	name string, args *IntegrationArgs, opts ...pulumi.ResourceOption) (*Integration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientEmail == nil {
		return nil, errors.New("invalid value for required argument 'ClientEmail'")
	}
	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.PrivateKey == nil {
		return nil, errors.New("invalid value for required argument 'PrivateKey'")
	}
	if args.PrivateKeyId == nil {
		return nil, errors.New("invalid value for required argument 'PrivateKeyId'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.PrivateKey != nil {
		args.PrivateKey = pulumi.ToSecret(args.PrivateKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"privateKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Integration
	err := ctx.RegisterResource("datadog:gcp/integration:Integration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegration gets an existing Integration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationState, opts ...pulumi.ResourceOption) (*Integration, error) {
	var resource Integration
	err := ctx.ReadResource("datadog:gcp/integration:Integration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Integration resources.
type integrationState struct {
	// Silence monitors for expected GCE instance shutdowns. Defaults to `false`.
	Automute *bool `pulumi:"automute"`
	// Your email found in your JSON service account key.
	ClientEmail *string `pulumi:"clientEmail"`
	// Your ID found in your JSON service account key.
	ClientId *string `pulumi:"clientId"`
	// Whether Datadog collects cloud security posture management resources from your GCP project. Defaults to `false`.
	CspmResourceCollectionEnabled *bool `pulumi:"cspmResourceCollectionEnabled"`
	// Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.
	HostFilters *string `pulumi:"hostFilters"`
	// Your private key name found in your JSON service account key.
	PrivateKey *string `pulumi:"privateKey"`
	// Your private key ID found in your JSON service account key.
	PrivateKeyId *string `pulumi:"privateKeyId"`
	// Your Google Cloud project ID found in your JSON service account key.
	ProjectId *string `pulumi:"projectId"`
}

type IntegrationState struct {
	// Silence monitors for expected GCE instance shutdowns. Defaults to `false`.
	Automute pulumi.BoolPtrInput
	// Your email found in your JSON service account key.
	ClientEmail pulumi.StringPtrInput
	// Your ID found in your JSON service account key.
	ClientId pulumi.StringPtrInput
	// Whether Datadog collects cloud security posture management resources from your GCP project. Defaults to `false`.
	CspmResourceCollectionEnabled pulumi.BoolPtrInput
	// Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.
	HostFilters pulumi.StringPtrInput
	// Your private key name found in your JSON service account key.
	PrivateKey pulumi.StringPtrInput
	// Your private key ID found in your JSON service account key.
	PrivateKeyId pulumi.StringPtrInput
	// Your Google Cloud project ID found in your JSON service account key.
	ProjectId pulumi.StringPtrInput
}

func (IntegrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationState)(nil)).Elem()
}

type integrationArgs struct {
	// Silence monitors for expected GCE instance shutdowns. Defaults to `false`.
	Automute *bool `pulumi:"automute"`
	// Your email found in your JSON service account key.
	ClientEmail string `pulumi:"clientEmail"`
	// Your ID found in your JSON service account key.
	ClientId string `pulumi:"clientId"`
	// Whether Datadog collects cloud security posture management resources from your GCP project. Defaults to `false`.
	CspmResourceCollectionEnabled *bool `pulumi:"cspmResourceCollectionEnabled"`
	// Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.
	HostFilters *string `pulumi:"hostFilters"`
	// Your private key name found in your JSON service account key.
	PrivateKey string `pulumi:"privateKey"`
	// Your private key ID found in your JSON service account key.
	PrivateKeyId string `pulumi:"privateKeyId"`
	// Your Google Cloud project ID found in your JSON service account key.
	ProjectId string `pulumi:"projectId"`
}

// The set of arguments for constructing a Integration resource.
type IntegrationArgs struct {
	// Silence monitors for expected GCE instance shutdowns. Defaults to `false`.
	Automute pulumi.BoolPtrInput
	// Your email found in your JSON service account key.
	ClientEmail pulumi.StringInput
	// Your ID found in your JSON service account key.
	ClientId pulumi.StringInput
	// Whether Datadog collects cloud security posture management resources from your GCP project. Defaults to `false`.
	CspmResourceCollectionEnabled pulumi.BoolPtrInput
	// Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.
	HostFilters pulumi.StringPtrInput
	// Your private key name found in your JSON service account key.
	PrivateKey pulumi.StringInput
	// Your private key ID found in your JSON service account key.
	PrivateKeyId pulumi.StringInput
	// Your Google Cloud project ID found in your JSON service account key.
	ProjectId pulumi.StringInput
}

func (IntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationArgs)(nil)).Elem()
}

type IntegrationInput interface {
	pulumi.Input

	ToIntegrationOutput() IntegrationOutput
	ToIntegrationOutputWithContext(ctx context.Context) IntegrationOutput
}

func (*Integration) ElementType() reflect.Type {
	return reflect.TypeOf((**Integration)(nil)).Elem()
}

func (i *Integration) ToIntegrationOutput() IntegrationOutput {
	return i.ToIntegrationOutputWithContext(context.Background())
}

func (i *Integration) ToIntegrationOutputWithContext(ctx context.Context) IntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationOutput)
}

// IntegrationArrayInput is an input type that accepts IntegrationArray and IntegrationArrayOutput values.
// You can construct a concrete instance of `IntegrationArrayInput` via:
//
//	IntegrationArray{ IntegrationArgs{...} }
type IntegrationArrayInput interface {
	pulumi.Input

	ToIntegrationArrayOutput() IntegrationArrayOutput
	ToIntegrationArrayOutputWithContext(context.Context) IntegrationArrayOutput
}

type IntegrationArray []IntegrationInput

func (IntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Integration)(nil)).Elem()
}

func (i IntegrationArray) ToIntegrationArrayOutput() IntegrationArrayOutput {
	return i.ToIntegrationArrayOutputWithContext(context.Background())
}

func (i IntegrationArray) ToIntegrationArrayOutputWithContext(ctx context.Context) IntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationArrayOutput)
}

// IntegrationMapInput is an input type that accepts IntegrationMap and IntegrationMapOutput values.
// You can construct a concrete instance of `IntegrationMapInput` via:
//
//	IntegrationMap{ "key": IntegrationArgs{...} }
type IntegrationMapInput interface {
	pulumi.Input

	ToIntegrationMapOutput() IntegrationMapOutput
	ToIntegrationMapOutputWithContext(context.Context) IntegrationMapOutput
}

type IntegrationMap map[string]IntegrationInput

func (IntegrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Integration)(nil)).Elem()
}

func (i IntegrationMap) ToIntegrationMapOutput() IntegrationMapOutput {
	return i.ToIntegrationMapOutputWithContext(context.Background())
}

func (i IntegrationMap) ToIntegrationMapOutputWithContext(ctx context.Context) IntegrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationMapOutput)
}

type IntegrationOutput struct{ *pulumi.OutputState }

func (IntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Integration)(nil)).Elem()
}

func (o IntegrationOutput) ToIntegrationOutput() IntegrationOutput {
	return o
}

func (o IntegrationOutput) ToIntegrationOutputWithContext(ctx context.Context) IntegrationOutput {
	return o
}

// Silence monitors for expected GCE instance shutdowns. Defaults to `false`.
func (o IntegrationOutput) Automute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Integration) pulumi.BoolPtrOutput { return v.Automute }).(pulumi.BoolPtrOutput)
}

// Your email found in your JSON service account key.
func (o IntegrationOutput) ClientEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *Integration) pulumi.StringOutput { return v.ClientEmail }).(pulumi.StringOutput)
}

// Your ID found in your JSON service account key.
func (o IntegrationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *Integration) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// Whether Datadog collects cloud security posture management resources from your GCP project. Defaults to `false`.
func (o IntegrationOutput) CspmResourceCollectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Integration) pulumi.BoolPtrOutput { return v.CspmResourceCollectionEnabled }).(pulumi.BoolPtrOutput)
}

// Limit the GCE instances that are pulled into Datadog by using tags. Only hosts that match one of the defined tags are imported into Datadog.
func (o IntegrationOutput) HostFilters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Integration) pulumi.StringPtrOutput { return v.HostFilters }).(pulumi.StringPtrOutput)
}

// Your private key name found in your JSON service account key.
func (o IntegrationOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Integration) pulumi.StringOutput { return v.PrivateKey }).(pulumi.StringOutput)
}

// Your private key ID found in your JSON service account key.
func (o IntegrationOutput) PrivateKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *Integration) pulumi.StringOutput { return v.PrivateKeyId }).(pulumi.StringOutput)
}

// Your Google Cloud project ID found in your JSON service account key.
func (o IntegrationOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *Integration) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

type IntegrationArrayOutput struct{ *pulumi.OutputState }

func (IntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Integration)(nil)).Elem()
}

func (o IntegrationArrayOutput) ToIntegrationArrayOutput() IntegrationArrayOutput {
	return o
}

func (o IntegrationArrayOutput) ToIntegrationArrayOutputWithContext(ctx context.Context) IntegrationArrayOutput {
	return o
}

func (o IntegrationArrayOutput) Index(i pulumi.IntInput) IntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Integration {
		return vs[0].([]*Integration)[vs[1].(int)]
	}).(IntegrationOutput)
}

type IntegrationMapOutput struct{ *pulumi.OutputState }

func (IntegrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Integration)(nil)).Elem()
}

func (o IntegrationMapOutput) ToIntegrationMapOutput() IntegrationMapOutput {
	return o
}

func (o IntegrationMapOutput) ToIntegrationMapOutputWithContext(ctx context.Context) IntegrationMapOutput {
	return o
}

func (o IntegrationMapOutput) MapIndex(k pulumi.StringInput) IntegrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Integration {
		return vs[0].(map[string]*Integration)[vs[1].(string)]
	}).(IntegrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationInput)(nil)).Elem(), &Integration{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationArrayInput)(nil)).Elem(), IntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationMapInput)(nil)).Elem(), IntegrationMap{})
	pulumi.RegisterOutputType(IntegrationOutput{})
	pulumi.RegisterOutputType(IntegrationArrayOutput{})
	pulumi.RegisterOutputType(IntegrationMapOutput{})
}
