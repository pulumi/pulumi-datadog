// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog GcpUcConfig resource. This can be used to create and manage Datadog gcp_uc_config.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create new GCP Usage Cost configuration resource
//			_, err := datadog.NewGcpUcConfig(ctx, "example", &datadog.GcpUcConfigArgs{
//				BillingAccountId:  pulumi.String("123456_ABCDEF_123456"),
//				BucketName:        pulumi.String("my-gcp-cost-bucket"),
//				ExportDatasetName: pulumi.String("billing_export"),
//				ExportPrefix:      pulumi.String("datadog_cloud_cost_detailed_usage_export"),
//				ExportProjectName: pulumi.String("my-gcp-project"),
//				ServiceAccount:    pulumi.String("datadog-cost-management@my-gcp-project.iam.gserviceaccount.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// The `pulumi import` command can be used, for example:
//
// ```sh
// $ pulumi import datadog:index/gcpUcConfig:GcpUcConfig example <cloud_account_id>
// ```
type GcpUcConfig struct {
	pulumi.CustomResourceState

	// The Google Cloud account ID.
	BillingAccountId pulumi.StringOutput `pulumi:"billingAccountId"`
	// The Google Cloud bucket name used to store the Usage Cost export.
	BucketName pulumi.StringOutput `pulumi:"bucketName"`
	// The timestamp when the GCP UC configuration was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The dataset name used for the GCP Usage Cost export.
	Dataset pulumi.StringOutput `pulumi:"dataset"`
	// List of error messages if the GCP UC configuration encountered any issues during setup or data processing.
	ErrorMessages pulumi.StringArrayOutput `pulumi:"errorMessages"`
	// The export dataset name used for the Google Cloud Usage Cost report.
	ExportDatasetName pulumi.StringOutput `pulumi:"exportDatasetName"`
	// The export prefix used for the Google Cloud Usage Cost report.
	ExportPrefix pulumi.StringPtrOutput `pulumi:"exportPrefix"`
	// The name of the Google Cloud Usage Cost report.
	ExportProjectName pulumi.StringOutput `pulumi:"exportProjectName"`
	// The number of months of usage data to include in the export.
	Months pulumi.IntOutput `pulumi:"months"`
	// The unique Google Cloud service account email.
	ServiceAccount pulumi.StringOutput `pulumi:"serviceAccount"`
	// The current status of the GCP UC configuration.
	Status pulumi.StringOutput `pulumi:"status"`
	// The timestamp when the configuration status was last updated.
	StatusUpdatedAt pulumi.StringOutput `pulumi:"statusUpdatedAt"`
	// The timestamp when the GCP UC configuration was last modified.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewGcpUcConfig registers a new resource with the given unique name, arguments, and options.
func NewGcpUcConfig(ctx *pulumi.Context,
	name string, args *GcpUcConfigArgs, opts ...pulumi.ResourceOption) (*GcpUcConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingAccountId == nil {
		return nil, errors.New("invalid value for required argument 'BillingAccountId'")
	}
	if args.BucketName == nil {
		return nil, errors.New("invalid value for required argument 'BucketName'")
	}
	if args.ExportDatasetName == nil {
		return nil, errors.New("invalid value for required argument 'ExportDatasetName'")
	}
	if args.ExportProjectName == nil {
		return nil, errors.New("invalid value for required argument 'ExportProjectName'")
	}
	if args.ServiceAccount == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccount'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GcpUcConfig
	err := ctx.RegisterResource("datadog:index/gcpUcConfig:GcpUcConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGcpUcConfig gets an existing GcpUcConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGcpUcConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GcpUcConfigState, opts ...pulumi.ResourceOption) (*GcpUcConfig, error) {
	var resource GcpUcConfig
	err := ctx.ReadResource("datadog:index/gcpUcConfig:GcpUcConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GcpUcConfig resources.
type gcpUcConfigState struct {
	// The Google Cloud account ID.
	BillingAccountId *string `pulumi:"billingAccountId"`
	// The Google Cloud bucket name used to store the Usage Cost export.
	BucketName *string `pulumi:"bucketName"`
	// The timestamp when the GCP UC configuration was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The dataset name used for the GCP Usage Cost export.
	Dataset *string `pulumi:"dataset"`
	// List of error messages if the GCP UC configuration encountered any issues during setup or data processing.
	ErrorMessages []string `pulumi:"errorMessages"`
	// The export dataset name used for the Google Cloud Usage Cost report.
	ExportDatasetName *string `pulumi:"exportDatasetName"`
	// The export prefix used for the Google Cloud Usage Cost report.
	ExportPrefix *string `pulumi:"exportPrefix"`
	// The name of the Google Cloud Usage Cost report.
	ExportProjectName *string `pulumi:"exportProjectName"`
	// The number of months of usage data to include in the export.
	Months *int `pulumi:"months"`
	// The unique Google Cloud service account email.
	ServiceAccount *string `pulumi:"serviceAccount"`
	// The current status of the GCP UC configuration.
	Status *string `pulumi:"status"`
	// The timestamp when the configuration status was last updated.
	StatusUpdatedAt *string `pulumi:"statusUpdatedAt"`
	// The timestamp when the GCP UC configuration was last modified.
	UpdatedAt *string `pulumi:"updatedAt"`
}

type GcpUcConfigState struct {
	// The Google Cloud account ID.
	BillingAccountId pulumi.StringPtrInput
	// The Google Cloud bucket name used to store the Usage Cost export.
	BucketName pulumi.StringPtrInput
	// The timestamp when the GCP UC configuration was created.
	CreatedAt pulumi.StringPtrInput
	// The dataset name used for the GCP Usage Cost export.
	Dataset pulumi.StringPtrInput
	// List of error messages if the GCP UC configuration encountered any issues during setup or data processing.
	ErrorMessages pulumi.StringArrayInput
	// The export dataset name used for the Google Cloud Usage Cost report.
	ExportDatasetName pulumi.StringPtrInput
	// The export prefix used for the Google Cloud Usage Cost report.
	ExportPrefix pulumi.StringPtrInput
	// The name of the Google Cloud Usage Cost report.
	ExportProjectName pulumi.StringPtrInput
	// The number of months of usage data to include in the export.
	Months pulumi.IntPtrInput
	// The unique Google Cloud service account email.
	ServiceAccount pulumi.StringPtrInput
	// The current status of the GCP UC configuration.
	Status pulumi.StringPtrInput
	// The timestamp when the configuration status was last updated.
	StatusUpdatedAt pulumi.StringPtrInput
	// The timestamp when the GCP UC configuration was last modified.
	UpdatedAt pulumi.StringPtrInput
}

func (GcpUcConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpUcConfigState)(nil)).Elem()
}

type gcpUcConfigArgs struct {
	// The Google Cloud account ID.
	BillingAccountId string `pulumi:"billingAccountId"`
	// The Google Cloud bucket name used to store the Usage Cost export.
	BucketName string `pulumi:"bucketName"`
	// The export dataset name used for the Google Cloud Usage Cost report.
	ExportDatasetName string `pulumi:"exportDatasetName"`
	// The export prefix used for the Google Cloud Usage Cost report.
	ExportPrefix *string `pulumi:"exportPrefix"`
	// The name of the Google Cloud Usage Cost report.
	ExportProjectName string `pulumi:"exportProjectName"`
	// The unique Google Cloud service account email.
	ServiceAccount string `pulumi:"serviceAccount"`
}

// The set of arguments for constructing a GcpUcConfig resource.
type GcpUcConfigArgs struct {
	// The Google Cloud account ID.
	BillingAccountId pulumi.StringInput
	// The Google Cloud bucket name used to store the Usage Cost export.
	BucketName pulumi.StringInput
	// The export dataset name used for the Google Cloud Usage Cost report.
	ExportDatasetName pulumi.StringInput
	// The export prefix used for the Google Cloud Usage Cost report.
	ExportPrefix pulumi.StringPtrInput
	// The name of the Google Cloud Usage Cost report.
	ExportProjectName pulumi.StringInput
	// The unique Google Cloud service account email.
	ServiceAccount pulumi.StringInput
}

func (GcpUcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gcpUcConfigArgs)(nil)).Elem()
}

type GcpUcConfigInput interface {
	pulumi.Input

	ToGcpUcConfigOutput() GcpUcConfigOutput
	ToGcpUcConfigOutputWithContext(ctx context.Context) GcpUcConfigOutput
}

func (*GcpUcConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpUcConfig)(nil)).Elem()
}

func (i *GcpUcConfig) ToGcpUcConfigOutput() GcpUcConfigOutput {
	return i.ToGcpUcConfigOutputWithContext(context.Background())
}

func (i *GcpUcConfig) ToGcpUcConfigOutputWithContext(ctx context.Context) GcpUcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpUcConfigOutput)
}

// GcpUcConfigArrayInput is an input type that accepts GcpUcConfigArray and GcpUcConfigArrayOutput values.
// You can construct a concrete instance of `GcpUcConfigArrayInput` via:
//
//	GcpUcConfigArray{ GcpUcConfigArgs{...} }
type GcpUcConfigArrayInput interface {
	pulumi.Input

	ToGcpUcConfigArrayOutput() GcpUcConfigArrayOutput
	ToGcpUcConfigArrayOutputWithContext(context.Context) GcpUcConfigArrayOutput
}

type GcpUcConfigArray []GcpUcConfigInput

func (GcpUcConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpUcConfig)(nil)).Elem()
}

func (i GcpUcConfigArray) ToGcpUcConfigArrayOutput() GcpUcConfigArrayOutput {
	return i.ToGcpUcConfigArrayOutputWithContext(context.Background())
}

func (i GcpUcConfigArray) ToGcpUcConfigArrayOutputWithContext(ctx context.Context) GcpUcConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpUcConfigArrayOutput)
}

// GcpUcConfigMapInput is an input type that accepts GcpUcConfigMap and GcpUcConfigMapOutput values.
// You can construct a concrete instance of `GcpUcConfigMapInput` via:
//
//	GcpUcConfigMap{ "key": GcpUcConfigArgs{...} }
type GcpUcConfigMapInput interface {
	pulumi.Input

	ToGcpUcConfigMapOutput() GcpUcConfigMapOutput
	ToGcpUcConfigMapOutputWithContext(context.Context) GcpUcConfigMapOutput
}

type GcpUcConfigMap map[string]GcpUcConfigInput

func (GcpUcConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpUcConfig)(nil)).Elem()
}

func (i GcpUcConfigMap) ToGcpUcConfigMapOutput() GcpUcConfigMapOutput {
	return i.ToGcpUcConfigMapOutputWithContext(context.Background())
}

func (i GcpUcConfigMap) ToGcpUcConfigMapOutputWithContext(ctx context.Context) GcpUcConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GcpUcConfigMapOutput)
}

type GcpUcConfigOutput struct{ *pulumi.OutputState }

func (GcpUcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GcpUcConfig)(nil)).Elem()
}

func (o GcpUcConfigOutput) ToGcpUcConfigOutput() GcpUcConfigOutput {
	return o
}

func (o GcpUcConfigOutput) ToGcpUcConfigOutputWithContext(ctx context.Context) GcpUcConfigOutput {
	return o
}

// The Google Cloud account ID.
func (o GcpUcConfigOutput) BillingAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringOutput { return v.BillingAccountId }).(pulumi.StringOutput)
}

// The Google Cloud bucket name used to store the Usage Cost export.
func (o GcpUcConfigOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringOutput { return v.BucketName }).(pulumi.StringOutput)
}

// The timestamp when the GCP UC configuration was created.
func (o GcpUcConfigOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The dataset name used for the GCP Usage Cost export.
func (o GcpUcConfigOutput) Dataset() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringOutput { return v.Dataset }).(pulumi.StringOutput)
}

// List of error messages if the GCP UC configuration encountered any issues during setup or data processing.
func (o GcpUcConfigOutput) ErrorMessages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringArrayOutput { return v.ErrorMessages }).(pulumi.StringArrayOutput)
}

// The export dataset name used for the Google Cloud Usage Cost report.
func (o GcpUcConfigOutput) ExportDatasetName() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringOutput { return v.ExportDatasetName }).(pulumi.StringOutput)
}

// The export prefix used for the Google Cloud Usage Cost report.
func (o GcpUcConfigOutput) ExportPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringPtrOutput { return v.ExportPrefix }).(pulumi.StringPtrOutput)
}

// The name of the Google Cloud Usage Cost report.
func (o GcpUcConfigOutput) ExportProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringOutput { return v.ExportProjectName }).(pulumi.StringOutput)
}

// The number of months of usage data to include in the export.
func (o GcpUcConfigOutput) Months() pulumi.IntOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.IntOutput { return v.Months }).(pulumi.IntOutput)
}

// The unique Google Cloud service account email.
func (o GcpUcConfigOutput) ServiceAccount() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringOutput { return v.ServiceAccount }).(pulumi.StringOutput)
}

// The current status of the GCP UC configuration.
func (o GcpUcConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The timestamp when the configuration status was last updated.
func (o GcpUcConfigOutput) StatusUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringOutput { return v.StatusUpdatedAt }).(pulumi.StringOutput)
}

// The timestamp when the GCP UC configuration was last modified.
func (o GcpUcConfigOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *GcpUcConfig) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GcpUcConfigArrayOutput struct{ *pulumi.OutputState }

func (GcpUcConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GcpUcConfig)(nil)).Elem()
}

func (o GcpUcConfigArrayOutput) ToGcpUcConfigArrayOutput() GcpUcConfigArrayOutput {
	return o
}

func (o GcpUcConfigArrayOutput) ToGcpUcConfigArrayOutputWithContext(ctx context.Context) GcpUcConfigArrayOutput {
	return o
}

func (o GcpUcConfigArrayOutput) Index(i pulumi.IntInput) GcpUcConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GcpUcConfig {
		return vs[0].([]*GcpUcConfig)[vs[1].(int)]
	}).(GcpUcConfigOutput)
}

type GcpUcConfigMapOutput struct{ *pulumi.OutputState }

func (GcpUcConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GcpUcConfig)(nil)).Elem()
}

func (o GcpUcConfigMapOutput) ToGcpUcConfigMapOutput() GcpUcConfigMapOutput {
	return o
}

func (o GcpUcConfigMapOutput) ToGcpUcConfigMapOutputWithContext(ctx context.Context) GcpUcConfigMapOutput {
	return o
}

func (o GcpUcConfigMapOutput) MapIndex(k pulumi.StringInput) GcpUcConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GcpUcConfig {
		return vs[0].(map[string]*GcpUcConfig)[vs[1].(string)]
	}).(GcpUcConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GcpUcConfigInput)(nil)).Elem(), &GcpUcConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpUcConfigArrayInput)(nil)).Elem(), GcpUcConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GcpUcConfigMapInput)(nil)).Elem(), GcpUcConfigMap{})
	pulumi.RegisterOutputType(GcpUcConfigOutput{})
	pulumi.RegisterOutputType(GcpUcConfigArrayOutput{})
	pulumi.RegisterOutputType(GcpUcConfigMapOutput{})
}
