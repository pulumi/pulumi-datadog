// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about existing Datadog role users assignments. This data source is in beta and is subject to change.
func GetRoleUsers(ctx *pulumi.Context, args *GetRoleUsersArgs, opts ...pulumi.InvokeOption) (*GetRoleUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRoleUsersResult
	err := ctx.Invoke("datadog:index/getRoleUsers:getRoleUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRoleUsers.
type GetRoleUsersArgs struct {
	// When true, `filterKeyword` string is exact matched against the user's `name`.
	ExactMatch *bool `pulumi:"exactMatch"`
	// Search query, can be user name.
	Filter *string `pulumi:"filter"`
	// The role's identifier.
	RoleId string `pulumi:"roleId"`
}

// A collection of values returned by getRoleUsers.
type GetRoleUsersResult struct {
	// When true, `filterKeyword` string is exact matched against the user's `name`.
	ExactMatch *bool `pulumi:"exactMatch"`
	// Search query, can be user name.
	Filter *string `pulumi:"filter"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The role's identifier.
	RoleId string `pulumi:"roleId"`
	// List of users assigned to role.
	RoleUsers []GetRoleUsersRoleUser `pulumi:"roleUsers"`
}

func GetRoleUsersOutput(ctx *pulumi.Context, args GetRoleUsersOutputArgs, opts ...pulumi.InvokeOption) GetRoleUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRoleUsersResult, error) {
			args := v.(GetRoleUsersArgs)
			r, err := GetRoleUsers(ctx, &args, opts...)
			var s GetRoleUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRoleUsersResultOutput)
}

// A collection of arguments for invoking getRoleUsers.
type GetRoleUsersOutputArgs struct {
	// When true, `filterKeyword` string is exact matched against the user's `name`.
	ExactMatch pulumi.BoolPtrInput `pulumi:"exactMatch"`
	// Search query, can be user name.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// The role's identifier.
	RoleId pulumi.StringInput `pulumi:"roleId"`
}

func (GetRoleUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleUsersArgs)(nil)).Elem()
}

// A collection of values returned by getRoleUsers.
type GetRoleUsersResultOutput struct{ *pulumi.OutputState }

func (GetRoleUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRoleUsersResult)(nil)).Elem()
}

func (o GetRoleUsersResultOutput) ToGetRoleUsersResultOutput() GetRoleUsersResultOutput {
	return o
}

func (o GetRoleUsersResultOutput) ToGetRoleUsersResultOutputWithContext(ctx context.Context) GetRoleUsersResultOutput {
	return o
}

// When true, `filterKeyword` string is exact matched against the user's `name`.
func (o GetRoleUsersResultOutput) ExactMatch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRoleUsersResult) *bool { return v.ExactMatch }).(pulumi.BoolPtrOutput)
}

// Search query, can be user name.
func (o GetRoleUsersResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRoleUsersResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The ID of this resource.
func (o GetRoleUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

// The role's identifier.
func (o GetRoleUsersResultOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRoleUsersResult) string { return v.RoleId }).(pulumi.StringOutput)
}

// List of users assigned to role.
func (o GetRoleUsersResultOutput) RoleUsers() GetRoleUsersRoleUserArrayOutput {
	return o.ApplyT(func(v GetRoleUsersResult) []GetRoleUsersRoleUser { return v.RoleUsers }).(GetRoleUsersRoleUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRoleUsersResultOutput{})
}
