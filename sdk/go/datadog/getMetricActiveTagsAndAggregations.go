// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve active tags and aggregations associated with a metric to use in other resources.
func GetMetricActiveTagsAndAggregations(ctx *pulumi.Context, args *GetMetricActiveTagsAndAggregationsArgs, opts ...pulumi.InvokeOption) (*GetMetricActiveTagsAndAggregationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMetricActiveTagsAndAggregationsResult
	err := ctx.Invoke("datadog:index/getMetricActiveTagsAndAggregations:getMetricActiveTagsAndAggregations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetricActiveTagsAndAggregations.
type GetMetricActiveTagsAndAggregationsArgs struct {
	// The metric for which to fetch tags.
	Metric string `pulumi:"metric"`
	// The number of seconds to look back from now.
	Window *int `pulumi:"window"`
}

// A collection of values returned by getMetricActiveTagsAndAggregations.
type GetMetricActiveTagsAndAggregationsResult struct {
	// The active aggregations associated with the metric.
	ActiveAggregations []GetMetricActiveTagsAndAggregationsActiveAggregation `pulumi:"activeAggregations"`
	// The active tags associated with the metric.
	ActiveTags []string `pulumi:"activeTags"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The metric for which to fetch tags.
	Metric string `pulumi:"metric"`
	// The number of seconds to look back from now.
	Window *int `pulumi:"window"`
}

func GetMetricActiveTagsAndAggregationsOutput(ctx *pulumi.Context, args GetMetricActiveTagsAndAggregationsOutputArgs, opts ...pulumi.InvokeOption) GetMetricActiveTagsAndAggregationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMetricActiveTagsAndAggregationsResultOutput, error) {
			args := v.(GetMetricActiveTagsAndAggregationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("datadog:index/getMetricActiveTagsAndAggregations:getMetricActiveTagsAndAggregations", args, GetMetricActiveTagsAndAggregationsResultOutput{}, options).(GetMetricActiveTagsAndAggregationsResultOutput), nil
		}).(GetMetricActiveTagsAndAggregationsResultOutput)
}

// A collection of arguments for invoking getMetricActiveTagsAndAggregations.
type GetMetricActiveTagsAndAggregationsOutputArgs struct {
	// The metric for which to fetch tags.
	Metric pulumi.StringInput `pulumi:"metric"`
	// The number of seconds to look back from now.
	Window pulumi.IntPtrInput `pulumi:"window"`
}

func (GetMetricActiveTagsAndAggregationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricActiveTagsAndAggregationsArgs)(nil)).Elem()
}

// A collection of values returned by getMetricActiveTagsAndAggregations.
type GetMetricActiveTagsAndAggregationsResultOutput struct{ *pulumi.OutputState }

func (GetMetricActiveTagsAndAggregationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricActiveTagsAndAggregationsResult)(nil)).Elem()
}

func (o GetMetricActiveTagsAndAggregationsResultOutput) ToGetMetricActiveTagsAndAggregationsResultOutput() GetMetricActiveTagsAndAggregationsResultOutput {
	return o
}

func (o GetMetricActiveTagsAndAggregationsResultOutput) ToGetMetricActiveTagsAndAggregationsResultOutputWithContext(ctx context.Context) GetMetricActiveTagsAndAggregationsResultOutput {
	return o
}

// The active aggregations associated with the metric.
func (o GetMetricActiveTagsAndAggregationsResultOutput) ActiveAggregations() GetMetricActiveTagsAndAggregationsActiveAggregationArrayOutput {
	return o.ApplyT(func(v GetMetricActiveTagsAndAggregationsResult) []GetMetricActiveTagsAndAggregationsActiveAggregation {
		return v.ActiveAggregations
	}).(GetMetricActiveTagsAndAggregationsActiveAggregationArrayOutput)
}

// The active tags associated with the metric.
func (o GetMetricActiveTagsAndAggregationsResultOutput) ActiveTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMetricActiveTagsAndAggregationsResult) []string { return v.ActiveTags }).(pulumi.StringArrayOutput)
}

// The ID of this resource.
func (o GetMetricActiveTagsAndAggregationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricActiveTagsAndAggregationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The metric for which to fetch tags.
func (o GetMetricActiveTagsAndAggregationsResultOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricActiveTagsAndAggregationsResult) string { return v.Metric }).(pulumi.StringOutput)
}

// The number of seconds to look back from now.
func (o GetMetricActiveTagsAndAggregationsResultOutput) Window() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMetricActiveTagsAndAggregationsResult) *int { return v.Window }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMetricActiveTagsAndAggregationsResultOutput{})
}
