// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datadog

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about a specific Datadog AWS CUR (Cost and Usage Report) configuration. This allows you to fetch details about an existing Cloud Cost Management configuration for AWS billing data access.
func LookupAwsCurConfig(ctx *pulumi.Context, args *LookupAwsCurConfigArgs, opts ...pulumi.InvokeOption) (*LookupAwsCurConfigResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAwsCurConfigResult
	err := ctx.Invoke("datadog:index/getAwsCurConfig:getAwsCurConfig", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsCurConfig.
type LookupAwsCurConfigArgs struct {
	AccountFilters *GetAwsCurConfigAccountFilters `pulumi:"accountFilters"`
	// The Datadog cloud account ID for the AWS CUR configuration you want to retrieve information about.
	CloudAccountId int `pulumi:"cloudAccountId"`
}

// A collection of values returned by getAwsCurConfig.
type LookupAwsCurConfigResult struct {
	AccountFilters *GetAwsCurConfigAccountFilters `pulumi:"accountFilters"`
	// The AWS account ID associated with this CUR configuration.
	AccountId string `pulumi:"accountId"`
	// The S3 bucket name where Cost and Usage Report files are stored.
	BucketName string `pulumi:"bucketName"`
	// The AWS region where the S3 bucket is located.
	BucketRegion string `pulumi:"bucketRegion"`
	// The Datadog cloud account ID for the AWS CUR configuration you want to retrieve information about.
	CloudAccountId int `pulumi:"cloudAccountId"`
	// The timestamp when the CUR configuration was created.
	CreatedAt string `pulumi:"createdAt"`
	// List of error messages if the CUR configuration encountered any issues.
	ErrorMessages []string `pulumi:"errorMessages"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// The name of the AWS Cost and Usage Report.
	ReportName string `pulumi:"reportName"`
	// The S3 key prefix where CUR files are stored within the bucket.
	ReportPrefix string `pulumi:"reportPrefix"`
	// The current status of the CUR configuration (e.g., active, archived).
	Status string `pulumi:"status"`
	// The timestamp when the CUR configuration status was last updated.
	StatusUpdatedAt string `pulumi:"statusUpdatedAt"`
	// The timestamp when the CUR configuration was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupAwsCurConfigOutput(ctx *pulumi.Context, args LookupAwsCurConfigOutputArgs, opts ...pulumi.InvokeOption) LookupAwsCurConfigResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAwsCurConfigResultOutput, error) {
			args := v.(LookupAwsCurConfigArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("datadog:index/getAwsCurConfig:getAwsCurConfig", args, LookupAwsCurConfigResultOutput{}, options).(LookupAwsCurConfigResultOutput), nil
		}).(LookupAwsCurConfigResultOutput)
}

// A collection of arguments for invoking getAwsCurConfig.
type LookupAwsCurConfigOutputArgs struct {
	AccountFilters GetAwsCurConfigAccountFiltersPtrInput `pulumi:"accountFilters"`
	// The Datadog cloud account ID for the AWS CUR configuration you want to retrieve information about.
	CloudAccountId pulumi.IntInput `pulumi:"cloudAccountId"`
}

func (LookupAwsCurConfigOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsCurConfigArgs)(nil)).Elem()
}

// A collection of values returned by getAwsCurConfig.
type LookupAwsCurConfigResultOutput struct{ *pulumi.OutputState }

func (LookupAwsCurConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsCurConfigResult)(nil)).Elem()
}

func (o LookupAwsCurConfigResultOutput) ToLookupAwsCurConfigResultOutput() LookupAwsCurConfigResultOutput {
	return o
}

func (o LookupAwsCurConfigResultOutput) ToLookupAwsCurConfigResultOutputWithContext(ctx context.Context) LookupAwsCurConfigResultOutput {
	return o
}

func (o LookupAwsCurConfigResultOutput) AccountFilters() GetAwsCurConfigAccountFiltersPtrOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) *GetAwsCurConfigAccountFilters { return v.AccountFilters }).(GetAwsCurConfigAccountFiltersPtrOutput)
}

// The AWS account ID associated with this CUR configuration.
func (o LookupAwsCurConfigResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The S3 bucket name where Cost and Usage Report files are stored.
func (o LookupAwsCurConfigResultOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) string { return v.BucketName }).(pulumi.StringOutput)
}

// The AWS region where the S3 bucket is located.
func (o LookupAwsCurConfigResultOutput) BucketRegion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) string { return v.BucketRegion }).(pulumi.StringOutput)
}

// The Datadog cloud account ID for the AWS CUR configuration you want to retrieve information about.
func (o LookupAwsCurConfigResultOutput) CloudAccountId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) int { return v.CloudAccountId }).(pulumi.IntOutput)
}

// The timestamp when the CUR configuration was created.
func (o LookupAwsCurConfigResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// List of error messages if the CUR configuration encountered any issues.
func (o LookupAwsCurConfigResultOutput) ErrorMessages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) []string { return v.ErrorMessages }).(pulumi.StringArrayOutput)
}

// The ID of this resource.
func (o LookupAwsCurConfigResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the AWS Cost and Usage Report.
func (o LookupAwsCurConfigResultOutput) ReportName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) string { return v.ReportName }).(pulumi.StringOutput)
}

// The S3 key prefix where CUR files are stored within the bucket.
func (o LookupAwsCurConfigResultOutput) ReportPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) string { return v.ReportPrefix }).(pulumi.StringOutput)
}

// The current status of the CUR configuration (e.g., active, archived).
func (o LookupAwsCurConfigResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) string { return v.Status }).(pulumi.StringOutput)
}

// The timestamp when the CUR configuration status was last updated.
func (o LookupAwsCurConfigResultOutput) StatusUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) string { return v.StatusUpdatedAt }).(pulumi.StringOutput)
}

// The timestamp when the CUR configuration was last updated.
func (o LookupAwsCurConfigResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAwsCurConfigResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwsCurConfigResultOutput{})
}
