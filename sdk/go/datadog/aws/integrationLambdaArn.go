// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a Datadog - Amazon Web Services integration Lambda ARN resource. This can be used to create and manage the
// log collection Lambdas for an account.
//
// Update operations are currently not supported with datadog API so any change forces a new resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-datadog/sdk/v2/go/datadog/aws"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := aws.NewIntegrationLambdaArn(ctx, "mainCollector", &aws.IntegrationLambdaArnArgs{
// 			AccountId: pulumi.String("1234567890"),
// 			LambdaArn: pulumi.String("arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type IntegrationLambdaArn struct {
	pulumi.CustomResourceState

	// Your AWS Account ID without dashes.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The ARN of the Datadog forwarder Lambda.
	LambdaArn pulumi.StringOutput `pulumi:"lambdaArn"`
}

// NewIntegrationLambdaArn registers a new resource with the given unique name, arguments, and options.
func NewIntegrationLambdaArn(ctx *pulumi.Context,
	name string, args *IntegrationLambdaArnArgs, opts ...pulumi.ResourceOption) (*IntegrationLambdaArn, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.LambdaArn == nil {
		return nil, errors.New("missing required argument 'LambdaArn'")
	}
	if args == nil {
		args = &IntegrationLambdaArnArgs{}
	}
	var resource IntegrationLambdaArn
	err := ctx.RegisterResource("datadog:aws/integrationLambdaArn:IntegrationLambdaArn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationLambdaArn gets an existing IntegrationLambdaArn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationLambdaArn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationLambdaArnState, opts ...pulumi.ResourceOption) (*IntegrationLambdaArn, error) {
	var resource IntegrationLambdaArn
	err := ctx.ReadResource("datadog:aws/integrationLambdaArn:IntegrationLambdaArn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationLambdaArn resources.
type integrationLambdaArnState struct {
	// Your AWS Account ID without dashes.
	AccountId *string `pulumi:"accountId"`
	// The ARN of the Datadog forwarder Lambda.
	LambdaArn *string `pulumi:"lambdaArn"`
}

type IntegrationLambdaArnState struct {
	// Your AWS Account ID without dashes.
	AccountId pulumi.StringPtrInput
	// The ARN of the Datadog forwarder Lambda.
	LambdaArn pulumi.StringPtrInput
}

func (IntegrationLambdaArnState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationLambdaArnState)(nil)).Elem()
}

type integrationLambdaArnArgs struct {
	// Your AWS Account ID without dashes.
	AccountId string `pulumi:"accountId"`
	// The ARN of the Datadog forwarder Lambda.
	LambdaArn string `pulumi:"lambdaArn"`
}

// The set of arguments for constructing a IntegrationLambdaArn resource.
type IntegrationLambdaArnArgs struct {
	// Your AWS Account ID without dashes.
	AccountId pulumi.StringInput
	// The ARN of the Datadog forwarder Lambda.
	LambdaArn pulumi.StringInput
}

func (IntegrationLambdaArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationLambdaArnArgs)(nil)).Elem()
}
