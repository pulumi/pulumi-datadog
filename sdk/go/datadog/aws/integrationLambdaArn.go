// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Datadog - Amazon Web Services integration Lambda ARN resource. This can be used to create and manage the log collection Lambdas for an account.
//
// Update operations are currently not supported with datadog API so any change forces a new resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create a new Datadog - Amazon Web Services integration Lambda ARN
//			_, err := aws.NewIntegrationLambdaArn(ctx, "main_collector", &aws.IntegrationLambdaArnArgs{
//				AccountId: pulumi.String("1234567890"),
//				LambdaArn: pulumi.String("arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Amazon Web Services Lambda ARN integrations can be imported using their account_id and lambda_arn separated with a space (` `).
//
// ```sh
// $ pulumi import datadog:aws/integrationLambdaArn:IntegrationLambdaArn test "1234567890 arn:aws:lambda:us-east-1:1234567890:function:datadog-forwarder-Forwarder"
// ```
type IntegrationLambdaArn struct {
	pulumi.CustomResourceState

	// Your AWS Account ID without dashes.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The ARN of the Datadog forwarder Lambda.
	LambdaArn pulumi.StringOutput `pulumi:"lambdaArn"`
}

// NewIntegrationLambdaArn registers a new resource with the given unique name, arguments, and options.
func NewIntegrationLambdaArn(ctx *pulumi.Context,
	name string, args *IntegrationLambdaArnArgs, opts ...pulumi.ResourceOption) (*IntegrationLambdaArn, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.LambdaArn == nil {
		return nil, errors.New("invalid value for required argument 'LambdaArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IntegrationLambdaArn
	err := ctx.RegisterResource("datadog:aws/integrationLambdaArn:IntegrationLambdaArn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationLambdaArn gets an existing IntegrationLambdaArn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationLambdaArn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationLambdaArnState, opts ...pulumi.ResourceOption) (*IntegrationLambdaArn, error) {
	var resource IntegrationLambdaArn
	err := ctx.ReadResource("datadog:aws/integrationLambdaArn:IntegrationLambdaArn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationLambdaArn resources.
type integrationLambdaArnState struct {
	// Your AWS Account ID without dashes.
	AccountId *string `pulumi:"accountId"`
	// The ARN of the Datadog forwarder Lambda.
	LambdaArn *string `pulumi:"lambdaArn"`
}

type IntegrationLambdaArnState struct {
	// Your AWS Account ID without dashes.
	AccountId pulumi.StringPtrInput
	// The ARN of the Datadog forwarder Lambda.
	LambdaArn pulumi.StringPtrInput
}

func (IntegrationLambdaArnState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationLambdaArnState)(nil)).Elem()
}

type integrationLambdaArnArgs struct {
	// Your AWS Account ID without dashes.
	AccountId string `pulumi:"accountId"`
	// The ARN of the Datadog forwarder Lambda.
	LambdaArn string `pulumi:"lambdaArn"`
}

// The set of arguments for constructing a IntegrationLambdaArn resource.
type IntegrationLambdaArnArgs struct {
	// Your AWS Account ID without dashes.
	AccountId pulumi.StringInput
	// The ARN of the Datadog forwarder Lambda.
	LambdaArn pulumi.StringInput
}

func (IntegrationLambdaArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationLambdaArnArgs)(nil)).Elem()
}

type IntegrationLambdaArnInput interface {
	pulumi.Input

	ToIntegrationLambdaArnOutput() IntegrationLambdaArnOutput
	ToIntegrationLambdaArnOutputWithContext(ctx context.Context) IntegrationLambdaArnOutput
}

func (*IntegrationLambdaArn) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationLambdaArn)(nil)).Elem()
}

func (i *IntegrationLambdaArn) ToIntegrationLambdaArnOutput() IntegrationLambdaArnOutput {
	return i.ToIntegrationLambdaArnOutputWithContext(context.Background())
}

func (i *IntegrationLambdaArn) ToIntegrationLambdaArnOutputWithContext(ctx context.Context) IntegrationLambdaArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLambdaArnOutput)
}

// IntegrationLambdaArnArrayInput is an input type that accepts IntegrationLambdaArnArray and IntegrationLambdaArnArrayOutput values.
// You can construct a concrete instance of `IntegrationLambdaArnArrayInput` via:
//
//	IntegrationLambdaArnArray{ IntegrationLambdaArnArgs{...} }
type IntegrationLambdaArnArrayInput interface {
	pulumi.Input

	ToIntegrationLambdaArnArrayOutput() IntegrationLambdaArnArrayOutput
	ToIntegrationLambdaArnArrayOutputWithContext(context.Context) IntegrationLambdaArnArrayOutput
}

type IntegrationLambdaArnArray []IntegrationLambdaArnInput

func (IntegrationLambdaArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntegrationLambdaArn)(nil)).Elem()
}

func (i IntegrationLambdaArnArray) ToIntegrationLambdaArnArrayOutput() IntegrationLambdaArnArrayOutput {
	return i.ToIntegrationLambdaArnArrayOutputWithContext(context.Background())
}

func (i IntegrationLambdaArnArray) ToIntegrationLambdaArnArrayOutputWithContext(ctx context.Context) IntegrationLambdaArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLambdaArnArrayOutput)
}

// IntegrationLambdaArnMapInput is an input type that accepts IntegrationLambdaArnMap and IntegrationLambdaArnMapOutput values.
// You can construct a concrete instance of `IntegrationLambdaArnMapInput` via:
//
//	IntegrationLambdaArnMap{ "key": IntegrationLambdaArnArgs{...} }
type IntegrationLambdaArnMapInput interface {
	pulumi.Input

	ToIntegrationLambdaArnMapOutput() IntegrationLambdaArnMapOutput
	ToIntegrationLambdaArnMapOutputWithContext(context.Context) IntegrationLambdaArnMapOutput
}

type IntegrationLambdaArnMap map[string]IntegrationLambdaArnInput

func (IntegrationLambdaArnMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntegrationLambdaArn)(nil)).Elem()
}

func (i IntegrationLambdaArnMap) ToIntegrationLambdaArnMapOutput() IntegrationLambdaArnMapOutput {
	return i.ToIntegrationLambdaArnMapOutputWithContext(context.Background())
}

func (i IntegrationLambdaArnMap) ToIntegrationLambdaArnMapOutputWithContext(ctx context.Context) IntegrationLambdaArnMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationLambdaArnMapOutput)
}

type IntegrationLambdaArnOutput struct{ *pulumi.OutputState }

func (IntegrationLambdaArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationLambdaArn)(nil)).Elem()
}

func (o IntegrationLambdaArnOutput) ToIntegrationLambdaArnOutput() IntegrationLambdaArnOutput {
	return o
}

func (o IntegrationLambdaArnOutput) ToIntegrationLambdaArnOutputWithContext(ctx context.Context) IntegrationLambdaArnOutput {
	return o
}

// Your AWS Account ID without dashes.
func (o IntegrationLambdaArnOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationLambdaArn) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The ARN of the Datadog forwarder Lambda.
func (o IntegrationLambdaArnOutput) LambdaArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IntegrationLambdaArn) pulumi.StringOutput { return v.LambdaArn }).(pulumi.StringOutput)
}

type IntegrationLambdaArnArrayOutput struct{ *pulumi.OutputState }

func (IntegrationLambdaArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntegrationLambdaArn)(nil)).Elem()
}

func (o IntegrationLambdaArnArrayOutput) ToIntegrationLambdaArnArrayOutput() IntegrationLambdaArnArrayOutput {
	return o
}

func (o IntegrationLambdaArnArrayOutput) ToIntegrationLambdaArnArrayOutputWithContext(ctx context.Context) IntegrationLambdaArnArrayOutput {
	return o
}

func (o IntegrationLambdaArnArrayOutput) Index(i pulumi.IntInput) IntegrationLambdaArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IntegrationLambdaArn {
		return vs[0].([]*IntegrationLambdaArn)[vs[1].(int)]
	}).(IntegrationLambdaArnOutput)
}

type IntegrationLambdaArnMapOutput struct{ *pulumi.OutputState }

func (IntegrationLambdaArnMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntegrationLambdaArn)(nil)).Elem()
}

func (o IntegrationLambdaArnMapOutput) ToIntegrationLambdaArnMapOutput() IntegrationLambdaArnMapOutput {
	return o
}

func (o IntegrationLambdaArnMapOutput) ToIntegrationLambdaArnMapOutputWithContext(ctx context.Context) IntegrationLambdaArnMapOutput {
	return o
}

func (o IntegrationLambdaArnMapOutput) MapIndex(k pulumi.StringInput) IntegrationLambdaArnOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IntegrationLambdaArn {
		return vs[0].(map[string]*IntegrationLambdaArn)[vs[1].(string)]
	}).(IntegrationLambdaArnOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationLambdaArnInput)(nil)).Elem(), &IntegrationLambdaArn{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationLambdaArnArrayInput)(nil)).Elem(), IntegrationLambdaArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationLambdaArnMapInput)(nil)).Elem(), IntegrationLambdaArnMap{})
	pulumi.RegisterOutputType(IntegrationLambdaArnOutput{})
	pulumi.RegisterOutputType(IntegrationLambdaArnArrayOutput{})
	pulumi.RegisterOutputType(IntegrationLambdaArnMapOutput{})
}
