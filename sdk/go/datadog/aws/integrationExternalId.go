// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-datadog/sdk/v4/go/datadog/aws"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Create new integration_aws_external_id resource
//			_, err := aws.NewIntegrationExternalId(ctx, "foo", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Amazon Web Services external IDs can be imported using the ID value.
//
// ```sh
// $ pulumi import datadog:aws/integrationExternalId:IntegrationExternalId foo ${id}
// ```
type IntegrationExternalId struct {
	pulumi.CustomResourceState
}

// NewIntegrationExternalId registers a new resource with the given unique name, arguments, and options.
func NewIntegrationExternalId(ctx *pulumi.Context,
	name string, args *IntegrationExternalIdArgs, opts ...pulumi.ResourceOption) (*IntegrationExternalId, error) {
	if args == nil {
		args = &IntegrationExternalIdArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IntegrationExternalId
	err := ctx.RegisterResource("datadog:aws/integrationExternalId:IntegrationExternalId", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntegrationExternalId gets an existing IntegrationExternalId resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegrationExternalId(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntegrationExternalIdState, opts ...pulumi.ResourceOption) (*IntegrationExternalId, error) {
	var resource IntegrationExternalId
	err := ctx.ReadResource("datadog:aws/integrationExternalId:IntegrationExternalId", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IntegrationExternalId resources.
type integrationExternalIdState struct {
}

type IntegrationExternalIdState struct {
}

func (IntegrationExternalIdState) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationExternalIdState)(nil)).Elem()
}

type integrationExternalIdArgs struct {
}

// The set of arguments for constructing a IntegrationExternalId resource.
type IntegrationExternalIdArgs struct {
}

func (IntegrationExternalIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*integrationExternalIdArgs)(nil)).Elem()
}

type IntegrationExternalIdInput interface {
	pulumi.Input

	ToIntegrationExternalIdOutput() IntegrationExternalIdOutput
	ToIntegrationExternalIdOutputWithContext(ctx context.Context) IntegrationExternalIdOutput
}

func (*IntegrationExternalId) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationExternalId)(nil)).Elem()
}

func (i *IntegrationExternalId) ToIntegrationExternalIdOutput() IntegrationExternalIdOutput {
	return i.ToIntegrationExternalIdOutputWithContext(context.Background())
}

func (i *IntegrationExternalId) ToIntegrationExternalIdOutputWithContext(ctx context.Context) IntegrationExternalIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationExternalIdOutput)
}

// IntegrationExternalIdArrayInput is an input type that accepts IntegrationExternalIdArray and IntegrationExternalIdArrayOutput values.
// You can construct a concrete instance of `IntegrationExternalIdArrayInput` via:
//
//	IntegrationExternalIdArray{ IntegrationExternalIdArgs{...} }
type IntegrationExternalIdArrayInput interface {
	pulumi.Input

	ToIntegrationExternalIdArrayOutput() IntegrationExternalIdArrayOutput
	ToIntegrationExternalIdArrayOutputWithContext(context.Context) IntegrationExternalIdArrayOutput
}

type IntegrationExternalIdArray []IntegrationExternalIdInput

func (IntegrationExternalIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntegrationExternalId)(nil)).Elem()
}

func (i IntegrationExternalIdArray) ToIntegrationExternalIdArrayOutput() IntegrationExternalIdArrayOutput {
	return i.ToIntegrationExternalIdArrayOutputWithContext(context.Background())
}

func (i IntegrationExternalIdArray) ToIntegrationExternalIdArrayOutputWithContext(ctx context.Context) IntegrationExternalIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationExternalIdArrayOutput)
}

// IntegrationExternalIdMapInput is an input type that accepts IntegrationExternalIdMap and IntegrationExternalIdMapOutput values.
// You can construct a concrete instance of `IntegrationExternalIdMapInput` via:
//
//	IntegrationExternalIdMap{ "key": IntegrationExternalIdArgs{...} }
type IntegrationExternalIdMapInput interface {
	pulumi.Input

	ToIntegrationExternalIdMapOutput() IntegrationExternalIdMapOutput
	ToIntegrationExternalIdMapOutputWithContext(context.Context) IntegrationExternalIdMapOutput
}

type IntegrationExternalIdMap map[string]IntegrationExternalIdInput

func (IntegrationExternalIdMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntegrationExternalId)(nil)).Elem()
}

func (i IntegrationExternalIdMap) ToIntegrationExternalIdMapOutput() IntegrationExternalIdMapOutput {
	return i.ToIntegrationExternalIdMapOutputWithContext(context.Background())
}

func (i IntegrationExternalIdMap) ToIntegrationExternalIdMapOutputWithContext(ctx context.Context) IntegrationExternalIdMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationExternalIdMapOutput)
}

type IntegrationExternalIdOutput struct{ *pulumi.OutputState }

func (IntegrationExternalIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationExternalId)(nil)).Elem()
}

func (o IntegrationExternalIdOutput) ToIntegrationExternalIdOutput() IntegrationExternalIdOutput {
	return o
}

func (o IntegrationExternalIdOutput) ToIntegrationExternalIdOutputWithContext(ctx context.Context) IntegrationExternalIdOutput {
	return o
}

type IntegrationExternalIdArrayOutput struct{ *pulumi.OutputState }

func (IntegrationExternalIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IntegrationExternalId)(nil)).Elem()
}

func (o IntegrationExternalIdArrayOutput) ToIntegrationExternalIdArrayOutput() IntegrationExternalIdArrayOutput {
	return o
}

func (o IntegrationExternalIdArrayOutput) ToIntegrationExternalIdArrayOutputWithContext(ctx context.Context) IntegrationExternalIdArrayOutput {
	return o
}

func (o IntegrationExternalIdArrayOutput) Index(i pulumi.IntInput) IntegrationExternalIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IntegrationExternalId {
		return vs[0].([]*IntegrationExternalId)[vs[1].(int)]
	}).(IntegrationExternalIdOutput)
}

type IntegrationExternalIdMapOutput struct{ *pulumi.OutputState }

func (IntegrationExternalIdMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IntegrationExternalId)(nil)).Elem()
}

func (o IntegrationExternalIdMapOutput) ToIntegrationExternalIdMapOutput() IntegrationExternalIdMapOutput {
	return o
}

func (o IntegrationExternalIdMapOutput) ToIntegrationExternalIdMapOutputWithContext(ctx context.Context) IntegrationExternalIdMapOutput {
	return o
}

func (o IntegrationExternalIdMapOutput) MapIndex(k pulumi.StringInput) IntegrationExternalIdOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IntegrationExternalId {
		return vs[0].(map[string]*IntegrationExternalId)[vs[1].(string)]
	}).(IntegrationExternalIdOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationExternalIdInput)(nil)).Elem(), &IntegrationExternalId{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationExternalIdArrayInput)(nil)).Elem(), IntegrationExternalIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntegrationExternalIdMapInput)(nil)).Elem(), IntegrationExternalIdMap{})
	pulumi.RegisterOutputType(IntegrationExternalIdOutput{})
	pulumi.RegisterOutputType(IntegrationExternalIdArrayOutput{})
	pulumi.RegisterOutputType(IntegrationExternalIdMapOutput{})
}
