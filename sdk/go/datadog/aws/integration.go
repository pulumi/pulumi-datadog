// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Datadog - Amazon Web Services integration resource. This can be used to create and manage Datadog - Amazon Web Services integration.
// 
// Update operations are currently not supported with datadog API so any change forces a new resource.
type Integration struct {
	s *pulumi.ResourceState
}

// NewIntegration registers a new resource with the given unique name, arguments, and options.
func NewIntegration(ctx *pulumi.Context,
	name string, args *IntegrationArgs, opts ...pulumi.ResourceOpt) (*Integration, error) {
	if args == nil || args.AccountId == nil {
		return nil, errors.New("missing required argument 'AccountId'")
	}
	if args == nil || args.RoleName == nil {
		return nil, errors.New("missing required argument 'RoleName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["accountId"] = nil
		inputs["accountSpecificNamespaceRules"] = nil
		inputs["filterTags"] = nil
		inputs["hostTags"] = nil
		inputs["roleName"] = nil
	} else {
		inputs["accountId"] = args.AccountId
		inputs["accountSpecificNamespaceRules"] = args.AccountSpecificNamespaceRules
		inputs["filterTags"] = args.FilterTags
		inputs["hostTags"] = args.HostTags
		inputs["roleName"] = args.RoleName
	}
	inputs["externalId"] = nil
	s, err := ctx.RegisterResource("index:aws/integration:Integration", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Integration{s: s}, nil
}

// GetIntegration gets an existing Integration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntegration(ctx *pulumi.Context,
	name string, id pulumi.ID, state *IntegrationState, opts ...pulumi.ResourceOpt) (*Integration, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["accountId"] = state.AccountId
		inputs["accountSpecificNamespaceRules"] = state.AccountSpecificNamespaceRules
		inputs["externalId"] = state.ExternalId
		inputs["filterTags"] = state.FilterTags
		inputs["hostTags"] = state.HostTags
		inputs["roleName"] = state.RoleName
	}
	s, err := ctx.ReadResource("index:aws/integration:Integration", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Integration{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Integration) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Integration) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Your AWS Account ID without dashes.
func (r *Integration) AccountId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["accountId"])
}

// Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules).
func (r *Integration) AccountSpecificNamespaceRules() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["accountSpecificNamespaceRules"])
}

// AWS External ID
func (r *Integration) ExternalId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["externalId"])
}

// Array of EC2 tags (in the form `key:value`) defines a filter that Datadog use when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used.
func (r *Integration) FilterTags() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["filterTags"])
}

// Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.
func (r *Integration) HostTags() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["hostTags"])
}

// Your Datadog role delegation name.
func (r *Integration) RoleName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["roleName"])
}

// Input properties used for looking up and filtering Integration resources.
type IntegrationState struct {
	// Your AWS Account ID without dashes.
	AccountId interface{}
	// Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules).
	AccountSpecificNamespaceRules interface{}
	// AWS External ID
	ExternalId interface{}
	// Array of EC2 tags (in the form `key:value`) defines a filter that Datadog use when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used.
	FilterTags interface{}
	// Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.
	HostTags interface{}
	// Your Datadog role delegation name.
	RoleName interface{}
}

// The set of arguments for constructing a Integration resource.
type IntegrationArgs struct {
	// Your AWS Account ID without dashes.
	AccountId interface{}
	// Enables or disables metric collection for specific AWS namespaces for this AWS account only. A list of namespaces can be found at the [available namespace rules API endpoint](https://api.datadoghq.com/api/v1/integration/aws/available_namespace_rules).
	AccountSpecificNamespaceRules interface{}
	// Array of EC2 tags (in the form `key:value`) defines a filter that Datadog use when collecting metrics from EC2. Wildcards, such as `?` (for single characters) and `*` (for multiple characters) can also be used.
	FilterTags interface{}
	// Array of tags (in the form key:value) to add to all hosts and metrics reporting through this integration.
	HostTags interface{}
	// Your Datadog role delegation name.
	RoleName interface{}
}
