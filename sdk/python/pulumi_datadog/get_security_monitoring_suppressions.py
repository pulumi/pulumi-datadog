# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetSecurityMonitoringSuppressionsResult',
    'AwaitableGetSecurityMonitoringSuppressionsResult',
    'get_security_monitoring_suppressions',
    'get_security_monitoring_suppressions_output',
]

@pulumi.output_type
class GetSecurityMonitoringSuppressionsResult:
    """
    A collection of values returned by getSecurityMonitoringSuppressions.
    """
    def __init__(__self__, id=None, suppression_ids=None, suppressions=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if suppression_ids and not isinstance(suppression_ids, list):
            raise TypeError("Expected argument 'suppression_ids' to be a list")
        pulumi.set(__self__, "suppression_ids", suppression_ids)
        if suppressions and not isinstance(suppressions, list):
            raise TypeError("Expected argument 'suppressions' to be a list")
        pulumi.set(__self__, "suppressions", suppressions)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="suppressionIds")
    def suppression_ids(self) -> Sequence[str]:
        """
        List of IDs of suppressions
        """
        return pulumi.get(self, "suppression_ids")

    @property
    @pulumi.getter
    def suppressions(self) -> Sequence['outputs.GetSecurityMonitoringSuppressionsSuppressionResult']:
        """
        List of suppressions
        """
        return pulumi.get(self, "suppressions")


class AwaitableGetSecurityMonitoringSuppressionsResult(GetSecurityMonitoringSuppressionsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSecurityMonitoringSuppressionsResult(
            id=self.id,
            suppression_ids=self.suppression_ids,
            suppressions=self.suppressions)


def get_security_monitoring_suppressions(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSecurityMonitoringSuppressionsResult:
    """
    Use this data source to retrieve information about existing suppression rules, and use them in other resources.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('datadog:index/getSecurityMonitoringSuppressions:getSecurityMonitoringSuppressions', __args__, opts=opts, typ=GetSecurityMonitoringSuppressionsResult).value

    return AwaitableGetSecurityMonitoringSuppressionsResult(
        id=pulumi.get(__ret__, 'id'),
        suppression_ids=pulumi.get(__ret__, 'suppression_ids'),
        suppressions=pulumi.get(__ret__, 'suppressions'))


@_utilities.lift_output_func(get_security_monitoring_suppressions)
def get_security_monitoring_suppressions_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSecurityMonitoringSuppressionsResult]:
    """
    Use this data source to retrieve information about existing suppression rules, and use them in other resources.
    """
    ...
