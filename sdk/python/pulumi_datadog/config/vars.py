# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

import types

__config__ = pulumi.Config('datadog')


class _ExportableConfig(types.ModuleType):
    @property
    def api_key(self) -> Optional[str]:
        """
        (Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.
        """
        return __config__.get('apiKey')

    @property
    def api_url(self) -> Optional[str]:
        """
        The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the /api/
        path. For example, https://api.datadoghq.com/ is a correct value, while https://api.datadoghq.com/api/ is not. And if
        you're working with "EU" version of Datadog, use https://api.datadoghq.eu/.
        """
        return __config__.get('apiUrl')

    @property
    def app_key(self) -> Optional[str]:
        """
        (Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.
        """
        return __config__.get('appKey')

    @property
    def http_client_retry_enabled(self) -> Optional[bool]:
        """
        Enables request retries on HTTP status codes 429 and 5xx. Defaults to `true`.
        """
        return __config__.get_bool('httpClientRetryEnabled')

    @property
    def http_client_retry_timeout(self) -> Optional[int]:
        """
        The HTTP request retry timeout period. Defaults to 60 seconds.
        """
        return __config__.get_int('httpClientRetryTimeout')

    @property
    def validate(self) -> Optional[bool]:
        """
        Enables validation of the provided API and APP keys during provider initialization. Default is true. When false, api_key
        and app_key won't be checked.
        """
        return __config__.get_bool('validate')

