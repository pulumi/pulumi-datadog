# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetIntegrationNamespaceRulesResult',
    'AwaitableGetIntegrationNamespaceRulesResult',
    'get_integration_namespace_rules',
    'get_integration_namespace_rules_output',
]

@pulumi.output_type
class GetIntegrationNamespaceRulesResult:
    """
    A collection of values returned by getIntegrationNamespaceRules.
    """
    def __init__(__self__, id=None, namespace_rules=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if namespace_rules and not isinstance(namespace_rules, list):
            raise TypeError("Expected argument 'namespace_rules' to be a list")
        pulumi.set(__self__, "namespace_rules", namespace_rules)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="namespaceRules")
    def namespace_rules(self) -> Sequence[str]:
        """
        The list of available namespace rules for a Datadog-AWS integration.
        """
        return pulumi.get(self, "namespace_rules")


class AwaitableGetIntegrationNamespaceRulesResult(GetIntegrationNamespaceRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetIntegrationNamespaceRulesResult(
            id=self.id,
            namespace_rules=self.namespace_rules)


def get_integration_namespace_rules(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetIntegrationNamespaceRulesResult:
    """
    Provides a Datadog AWS Integration Namespace Rules data source. This can be used to retrieve all available namespace rules for a Datadog-AWS integration.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_datadog as datadog

    rules = datadog.aws.get_integration_namespace_rules()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('datadog:aws/getIntegrationNamespaceRules:getIntegrationNamespaceRules', __args__, opts=opts, typ=GetIntegrationNamespaceRulesResult).value

    return AwaitableGetIntegrationNamespaceRulesResult(
        id=pulumi.get(__ret__, 'id'),
        namespace_rules=pulumi.get(__ret__, 'namespace_rules'))


@_utilities.lift_output_func(get_integration_namespace_rules)
def get_integration_namespace_rules_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetIntegrationNamespaceRulesResult]:
    """
    Provides a Datadog AWS Integration Namespace Rules data source. This can be used to retrieve all available namespace rules for a Datadog-AWS integration.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_datadog as datadog

    rules = datadog.aws.get_integration_namespace_rules()
    ```
    """
    ...
