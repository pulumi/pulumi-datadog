# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables


class Integration(pulumi.CustomResource):
    client_id: pulumi.Output[str]
    """
    Your Azure web application ID.
    """
    client_secret: pulumi.Output[str]
    """
    Your Azure web application secret key.
    """
    host_filters: pulumi.Output[str]
    """
    String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure.
    """
    tenant_name: pulumi.Output[str]
    """
    Your Azure Active Directory ID.
    """
    def __init__(__self__, resource_name, opts=None, client_id=None, client_secret=None, host_filters=None, tenant_name=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a Datadog - Microsoft Azure integration resource. This can be used to create and manage the integrations.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_datadog as datadog

        # Create a new Datadog - Microsoft Azure integration
        sandbox = datadog.azure.Integration("sandbox",
            client_id="<azure_client_id>",
            client_secret="<azure_client_secret_key>",
            host_filters="examplefilter:true,example:true",
            tenant_name="<azure_tenant_name>")
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] client_id: Your Azure web application ID.
        :param pulumi.Input[str] client_secret: Your Azure web application secret key.
        :param pulumi.Input[str] host_filters: String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure.
        :param pulumi.Input[str] tenant_name: Your Azure Active Directory ID.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if client_id is None:
                raise TypeError("Missing required property 'client_id'")
            __props__['client_id'] = client_id
            if client_secret is None:
                raise TypeError("Missing required property 'client_secret'")
            __props__['client_secret'] = client_secret
            __props__['host_filters'] = host_filters
            if tenant_name is None:
                raise TypeError("Missing required property 'tenant_name'")
            __props__['tenant_name'] = tenant_name
        super(Integration, __self__).__init__(
            'datadog:azure/integration:Integration',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, client_id=None, client_secret=None, host_filters=None, tenant_name=None):
        """
        Get an existing Integration resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] client_id: Your Azure web application ID.
        :param pulumi.Input[str] client_secret: Your Azure web application secret key.
        :param pulumi.Input[str] host_filters: String of host tag(s) (in the form `key:value,key:value`) defines a filter that Datadog will use when collecting metrics from Azure.
        :param pulumi.Input[str] tenant_name: Your Azure Active Directory ID.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["client_id"] = client_id
        __props__["client_secret"] = client_secret
        __props__["host_filters"] = host_filters
        __props__["tenant_name"] = tenant_name
        return Integration(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
