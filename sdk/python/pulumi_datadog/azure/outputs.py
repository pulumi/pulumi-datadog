# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'IntegrationResourceProviderConfig',
]

@pulumi.output_type
class IntegrationResourceProviderConfig(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "metricsEnabled":
            suggest = "metrics_enabled"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IntegrationResourceProviderConfig. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IntegrationResourceProviderConfig.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IntegrationResourceProviderConfig.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 metrics_enabled: bool,
                 namespace: str):
        pulumi.set(__self__, "metrics_enabled", metrics_enabled)
        pulumi.set(__self__, "namespace", namespace)

    @property
    @pulumi.getter(name="metricsEnabled")
    def metrics_enabled(self) -> bool:
        return pulumi.get(self, "metrics_enabled")

    @property
    @pulumi.getter
    def namespace(self) -> str:
        return pulumi.get(self, "namespace")


