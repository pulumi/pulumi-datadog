# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetLogsIndexesOrderResult',
    'AwaitableGetLogsIndexesOrderResult',
    'get_logs_indexes_order',
    'get_logs_indexes_order_output',
]

@pulumi.output_type
class GetLogsIndexesOrderResult:
    """
    A collection of values returned by getLogsIndexesOrder.
    """
    def __init__(__self__, id=None, index_names=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if index_names and not isinstance(index_names, list):
            raise TypeError("Expected argument 'index_names' to be a list")
        pulumi.set(__self__, "index_names", index_names)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="indexNames")
    def index_names(self) -> Sequence[str]:
        """
        Array of strings identifying by their name(s) the index(es) of your organization. Logs are tested against the query filter of each index one by one, following the order of the array. Logs are eventually stored in the first matching index.
        """
        return pulumi.get(self, "index_names")


class AwaitableGetLogsIndexesOrderResult(GetLogsIndexesOrderResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLogsIndexesOrderResult(
            id=self.id,
            index_names=self.index_names)


def get_logs_indexes_order(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLogsIndexesOrderResult:
    """
    Get the current order of your log indexes.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_datadog as datadog

    test = datadog.get_logs_indexes_order()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('datadog:index/getLogsIndexesOrder:getLogsIndexesOrder', __args__, opts=opts, typ=GetLogsIndexesOrderResult).value

    return AwaitableGetLogsIndexesOrderResult(
        id=pulumi.get(__ret__, 'id'),
        index_names=pulumi.get(__ret__, 'index_names'))


@_utilities.lift_output_func(get_logs_indexes_order)
def get_logs_indexes_order_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetLogsIndexesOrderResult]:
    """
    Get the current order of your log indexes.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_datadog as datadog

    test = datadog.get_logs_indexes_order()
    ```
    """
    ...
