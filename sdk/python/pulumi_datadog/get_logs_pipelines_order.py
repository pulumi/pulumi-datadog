# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetLogsPipelinesOrderResult',
    'AwaitableGetLogsPipelinesOrderResult',
    'get_logs_pipelines_order',
    'get_logs_pipelines_order_output',
]

@pulumi.output_type
class GetLogsPipelinesOrderResult:
    """
    A collection of values returned by getLogsPipelinesOrder.
    """
    def __init__(__self__, id=None, pipeline_ids=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if pipeline_ids and not isinstance(pipeline_ids, list):
            raise TypeError("Expected argument 'pipeline_ids' to be a list")
        pulumi.set(__self__, "pipeline_ids", pipeline_ids)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="pipelineIds")
    def pipeline_ids(self) -> Sequence[str]:
        """
        Array of strings identifying by their id(s) the pipeline(s) of your organization. For each pipeline, following the order of the array, logs are tested against the query filter and processed if matching.
        """
        return pulumi.get(self, "pipeline_ids")


class AwaitableGetLogsPipelinesOrderResult(GetLogsPipelinesOrderResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetLogsPipelinesOrderResult(
            id=self.id,
            pipeline_ids=self.pipeline_ids)


def get_logs_pipelines_order(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetLogsPipelinesOrderResult:
    """
    Use this data source to retrieve the current order of your log pipelines.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_datadog as datadog

    test = datadog.get_logs_pipelines_order()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('datadog:index/getLogsPipelinesOrder:getLogsPipelinesOrder', __args__, opts=opts, typ=GetLogsPipelinesOrderResult).value

    return AwaitableGetLogsPipelinesOrderResult(
        id=pulumi.get(__ret__, 'id'),
        pipeline_ids=pulumi.get(__ret__, 'pipeline_ids'))
def get_logs_pipelines_order_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetLogsPipelinesOrderResult]:
    """
    Use this data source to retrieve the current order of your log pipelines.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_datadog as datadog

    test = datadog.get_logs_pipelines_order()
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('datadog:index/getLogsPipelinesOrder:getLogsPipelinesOrder', __args__, opts=opts, typ=GetLogsPipelinesOrderResult)
    return __ret__.apply(lambda __response__: GetLogsPipelinesOrderResult(
        id=pulumi.get(__response__, 'id'),
        pipeline_ids=pulumi.get(__response__, 'pipeline_ids')))
