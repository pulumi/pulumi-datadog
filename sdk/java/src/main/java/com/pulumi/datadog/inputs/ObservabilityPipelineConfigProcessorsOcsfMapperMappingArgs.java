// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs Empty = new ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs();

    /**
     * Search query for selecting which logs the mapping applies to.
     * 
     */
    @Import(name="include", required=true)
    private Output<String> include;

    /**
     * @return Search query for selecting which logs the mapping applies to.
     * 
     */
    public Output<String> include() {
        return this.include;
    }

    /**
     * Predefined library mapping for log transformation.
     * 
     */
    @Import(name="libraryMapping", required=true)
    private Output<String> libraryMapping;

    /**
     * @return Predefined library mapping for log transformation.
     * 
     */
    public Output<String> libraryMapping() {
        return this.libraryMapping;
    }

    private ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs() {}

    private ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs(ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs $) {
        this.include = $.include;
        this.libraryMapping = $.libraryMapping;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs();
        }

        public Builder(ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs defaults) {
            $ = new ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param include Search query for selecting which logs the mapping applies to.
         * 
         * @return builder
         * 
         */
        public Builder include(Output<String> include) {
            $.include = include;
            return this;
        }

        /**
         * @param include Search query for selecting which logs the mapping applies to.
         * 
         * @return builder
         * 
         */
        public Builder include(String include) {
            return include(Output.of(include));
        }

        /**
         * @param libraryMapping Predefined library mapping for log transformation.
         * 
         * @return builder
         * 
         */
        public Builder libraryMapping(Output<String> libraryMapping) {
            $.libraryMapping = libraryMapping;
            return this;
        }

        /**
         * @param libraryMapping Predefined library mapping for log transformation.
         * 
         * @return builder
         * 
         */
        public Builder libraryMapping(String libraryMapping) {
            return libraryMapping(Output.of(libraryMapping));
        }

        public ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs build() {
            if ($.include == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs", "include");
            }
            if ($.libraryMapping == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs", "libraryMapping");
            }
            return $;
        }
    }

}
