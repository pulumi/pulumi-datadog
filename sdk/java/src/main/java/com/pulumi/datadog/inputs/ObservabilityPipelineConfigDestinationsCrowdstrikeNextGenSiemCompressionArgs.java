// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs Empty = new ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs();

    /**
     * Compression algorithm for log events.
     * 
     */
    @Import(name="algorithm")
    private @Nullable Output<String> algorithm;

    /**
     * @return Compression algorithm for log events.
     * 
     */
    public Optional<Output<String>> algorithm() {
        return Optional.ofNullable(this.algorithm);
    }

    /**
     * Compression level.
     * 
     */
    @Import(name="level")
    private @Nullable Output<Integer> level;

    /**
     * @return Compression level.
     * 
     */
    public Optional<Output<Integer>> level() {
        return Optional.ofNullable(this.level);
    }

    private ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs() {}

    private ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs(ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs $) {
        this.algorithm = $.algorithm;
        this.level = $.level;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs();
        }

        public Builder(ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs defaults) {
            $ = new ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param algorithm Compression algorithm for log events.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(@Nullable Output<String> algorithm) {
            $.algorithm = algorithm;
            return this;
        }

        /**
         * @param algorithm Compression algorithm for log events.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(String algorithm) {
            return algorithm(Output.of(algorithm));
        }

        /**
         * @param level Compression level.
         * 
         * @return builder
         * 
         */
        public Builder level(@Nullable Output<Integer> level) {
            $.level = level;
            return this;
        }

        /**
         * @param level Compression level.
         * 
         * @return builder
         * 
         */
        public Builder level(Integer level) {
            return level(Output.of(level));
        }

        public ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompressionArgs build() {
            return $;
        }
    }

}
