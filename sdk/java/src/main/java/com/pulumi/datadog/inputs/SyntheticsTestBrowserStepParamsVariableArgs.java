// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsTestBrowserStepParamsVariableArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsTestBrowserStepParamsVariableArgs Empty = new SyntheticsTestBrowserStepParamsVariableArgs();

    /**
     * Example of the extracted variable. Defaults to `&#34;&#34;`.
     * 
     */
    @Import(name="example")
    private @Nullable Output<String> example;

    /**
     * @return Example of the extracted variable. Defaults to `&#34;&#34;`.
     * 
     */
    public Optional<Output<String>> example() {
        return Optional.ofNullable(this.example);
    }

    /**
     * Name of the extracted variable.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the extracted variable.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
     * 
     */
    @Import(name="secure")
    private @Nullable Output<Boolean> secure;

    /**
     * @return Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> secure() {
        return Optional.ofNullable(this.secure);
    }

    private SyntheticsTestBrowserStepParamsVariableArgs() {}

    private SyntheticsTestBrowserStepParamsVariableArgs(SyntheticsTestBrowserStepParamsVariableArgs $) {
        this.example = $.example;
        this.name = $.name;
        this.secure = $.secure;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsTestBrowserStepParamsVariableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsTestBrowserStepParamsVariableArgs $;

        public Builder() {
            $ = new SyntheticsTestBrowserStepParamsVariableArgs();
        }

        public Builder(SyntheticsTestBrowserStepParamsVariableArgs defaults) {
            $ = new SyntheticsTestBrowserStepParamsVariableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param example Example of the extracted variable. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder example(@Nullable Output<String> example) {
            $.example = example;
            return this;
        }

        /**
         * @param example Example of the extracted variable. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder example(String example) {
            return example(Output.of(example));
        }

        /**
         * @param name Name of the extracted variable.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the extracted variable.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param secure Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder secure(@Nullable Output<Boolean> secure) {
            $.secure = secure;
            return this;
        }

        /**
         * @param secure Whether the value of this variable will be obfuscated in test results. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder secure(Boolean secure) {
            return secure(Output.of(secure));
        }

        public SyntheticsTestBrowserStepParamsVariableArgs build() {
            return $;
        }
    }

}
