// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OnCallScheduleLayerIntervalArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnCallScheduleLayerIntervalArgs Empty = new OnCallScheduleLayerIntervalArgs();

    /**
     * The number of full days in each rotation period.
     * 
     */
    @Import(name="days")
    private @Nullable Output<Integer> days;

    /**
     * @return The number of full days in each rotation period.
     * 
     */
    public Optional<Output<Integer>> days() {
        return Optional.ofNullable(this.days);
    }

    /**
     * For intervals that are not expressible in whole days, this will be added to `days`. Defaults to `0`.
     * 
     */
    @Import(name="seconds")
    private @Nullable Output<Integer> seconds;

    /**
     * @return For intervals that are not expressible in whole days, this will be added to `days`. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> seconds() {
        return Optional.ofNullable(this.seconds);
    }

    private OnCallScheduleLayerIntervalArgs() {}

    private OnCallScheduleLayerIntervalArgs(OnCallScheduleLayerIntervalArgs $) {
        this.days = $.days;
        this.seconds = $.seconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnCallScheduleLayerIntervalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnCallScheduleLayerIntervalArgs $;

        public Builder() {
            $ = new OnCallScheduleLayerIntervalArgs();
        }

        public Builder(OnCallScheduleLayerIntervalArgs defaults) {
            $ = new OnCallScheduleLayerIntervalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param days The number of full days in each rotation period.
         * 
         * @return builder
         * 
         */
        public Builder days(@Nullable Output<Integer> days) {
            $.days = days;
            return this;
        }

        /**
         * @param days The number of full days in each rotation period.
         * 
         * @return builder
         * 
         */
        public Builder days(Integer days) {
            return days(Output.of(days));
        }

        /**
         * @param seconds For intervals that are not expressible in whole days, this will be added to `days`. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder seconds(@Nullable Output<Integer> seconds) {
            $.seconds = seconds;
            return this;
        }

        /**
         * @param seconds For intervals that are not expressible in whole days, this will be added to `days`. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder seconds(Integer seconds) {
            return seconds(Output.of(seconds));
        }

        public OnCallScheduleLayerIntervalArgs build() {
            return $;
        }
    }

}
