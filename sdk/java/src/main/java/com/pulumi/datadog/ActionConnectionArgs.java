// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ActionConnectionAwsArgs;
import com.pulumi.datadog.inputs.ActionConnectionHttpArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionConnectionArgs Empty = new ActionConnectionArgs();

    /**
     * Configuration for an AWS connection
     * 
     */
    @Import(name="aws")
    private @Nullable Output<ActionConnectionAwsArgs> aws;

    /**
     * @return Configuration for an AWS connection
     * 
     */
    public Optional<Output<ActionConnectionAwsArgs>> aws() {
        return Optional.ofNullable(this.aws);
    }

    /**
     * Configuration for an HTTP connection
     * 
     */
    @Import(name="http")
    private @Nullable Output<ActionConnectionHttpArgs> http;

    /**
     * @return Configuration for an HTTP connection
     * 
     */
    public Optional<Output<ActionConnectionHttpArgs>> http() {
        return Optional.ofNullable(this.http);
    }

    /**
     * Name of the connection
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the connection
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ActionConnectionArgs() {}

    private ActionConnectionArgs(ActionConnectionArgs $) {
        this.aws = $.aws;
        this.http = $.http;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionConnectionArgs $;

        public Builder() {
            $ = new ActionConnectionArgs();
        }

        public Builder(ActionConnectionArgs defaults) {
            $ = new ActionConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aws Configuration for an AWS connection
         * 
         * @return builder
         * 
         */
        public Builder aws(@Nullable Output<ActionConnectionAwsArgs> aws) {
            $.aws = aws;
            return this;
        }

        /**
         * @param aws Configuration for an AWS connection
         * 
         * @return builder
         * 
         */
        public Builder aws(ActionConnectionAwsArgs aws) {
            return aws(Output.of(aws));
        }

        /**
         * @param http Configuration for an HTTP connection
         * 
         * @return builder
         * 
         */
        public Builder http(@Nullable Output<ActionConnectionHttpArgs> http) {
            $.http = http;
            return this;
        }

        /**
         * @param http Configuration for an HTTP connection
         * 
         * @return builder
         * 
         */
        public Builder http(ActionConnectionHttpArgs http) {
            return http(Output.of(http));
        }

        /**
         * @param name Name of the connection
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the connection
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ActionConnectionArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ActionConnectionArgs", "name");
            }
            return $;
        }
    }

}
