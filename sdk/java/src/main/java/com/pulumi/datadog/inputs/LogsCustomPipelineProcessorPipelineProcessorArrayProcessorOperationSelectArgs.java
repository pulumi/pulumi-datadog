// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs Empty = new LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs();

    /**
     * Filter expression (e.g. key1:value1 OR key2:value2) used to find the matching element.
     * 
     */
    @Import(name="filter", required=true)
    private Output<String> filter;

    /**
     * @return Filter expression (e.g. key1:value1 OR key2:value2) used to find the matching element.
     * 
     */
    public Output<String> filter() {
        return this.filter;
    }

    /**
     * Attribute path of the array to search into.
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return Attribute path of the array to search into.
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    /**
     * Attribute that receives the extracted value.
     * 
     */
    @Import(name="target", required=true)
    private Output<String> target;

    /**
     * @return Attribute that receives the extracted value.
     * 
     */
    public Output<String> target() {
        return this.target;
    }

    /**
     * Attribute key from the matching object that should be extracted.
     * 
     */
    @Import(name="valueToExtract", required=true)
    private Output<String> valueToExtract;

    /**
     * @return Attribute key from the matching object that should be extracted.
     * 
     */
    public Output<String> valueToExtract() {
        return this.valueToExtract;
    }

    private LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs() {}

    private LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs(LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs $) {
        this.filter = $.filter;
        this.source = $.source;
        this.target = $.target;
        this.valueToExtract = $.valueToExtract;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs $;

        public Builder() {
            $ = new LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs();
        }

        public Builder(LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs defaults) {
            $ = new LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter Filter expression (e.g. key1:value1 OR key2:value2) used to find the matching element.
         * 
         * @return builder
         * 
         */
        public Builder filter(Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter Filter expression (e.g. key1:value1 OR key2:value2) used to find the matching element.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param source Attribute path of the array to search into.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Attribute path of the array to search into.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param target Attribute that receives the extracted value.
         * 
         * @return builder
         * 
         */
        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target Attribute that receives the extracted value.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        /**
         * @param valueToExtract Attribute key from the matching object that should be extracted.
         * 
         * @return builder
         * 
         */
        public Builder valueToExtract(Output<String> valueToExtract) {
            $.valueToExtract = valueToExtract;
            return this;
        }

        /**
         * @param valueToExtract Attribute key from the matching object that should be extracted.
         * 
         * @return builder
         * 
         */
        public Builder valueToExtract(String valueToExtract) {
            return valueToExtract(Output.of(valueToExtract));
        }

        public LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs build() {
            if ($.filter == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs", "filter");
            }
            if ($.source == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs", "source");
            }
            if ($.target == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs", "target");
            }
            if ($.valueToExtract == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorPipelineProcessorArrayProcessorOperationSelectArgs", "valueToExtract");
            }
            return $;
        }
    }

}
