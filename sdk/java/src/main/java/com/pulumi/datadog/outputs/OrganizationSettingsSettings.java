// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.OrganizationSettingsSettingsSaml;
import com.pulumi.datadog.outputs.OrganizationSettingsSettingsSamlAutocreateUsersDomains;
import com.pulumi.datadog.outputs.OrganizationSettingsSettingsSamlIdpInitiatedLogin;
import com.pulumi.datadog.outputs.OrganizationSettingsSettingsSamlStrictMode;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OrganizationSettingsSettings {
    /**
     * @return Whether or not the organization users can share widgets outside of Datadog. Defaults to `false`.
     * 
     */
    private @Nullable Boolean privateWidgetShare;
    /**
     * @return SAML properties
     * 
     */
    private OrganizationSettingsSettingsSaml saml;
    /**
     * @return The access role of the user. Options are `st` (standard user), `adm` (admin user), or `ro` (read-only user). Allowed enum values: `st`, `adm` , `ro`, `ERROR` Defaults to `&#34;st&#34;`.
     * 
     */
    private @Nullable String samlAutocreateAccessRole;
    /**
     * @return List of domains where the SAML automated user creation is enabled.
     * 
     */
    private OrganizationSettingsSettingsSamlAutocreateUsersDomains samlAutocreateUsersDomains;
    /**
     * @return Whether or not SAML can be enabled for this organization.
     * 
     */
    private @Nullable Boolean samlCanBeEnabled;
    /**
     * @return Identity provider endpoint for SAML authentication.
     * 
     */
    private @Nullable String samlIdpEndpoint;
    /**
     * @return Whether or not a SAML identity provider metadata file was provided to the Datadog organization.
     * 
     */
    private OrganizationSettingsSettingsSamlIdpInitiatedLogin samlIdpInitiatedLogin;
    /**
     * @return Whether or not a SAML identity provider metadata file was provided to the Datadog organization.
     * 
     */
    private @Nullable Boolean samlIdpMetadataUploaded;
    /**
     * @return URL for SAML logging.
     * 
     */
    private @Nullable String samlLoginUrl;
    /**
     * @return Whether or not the SAML strict mode is enabled. If true, all users must log in with SAML.
     * 
     */
    private OrganizationSettingsSettingsSamlStrictMode samlStrictMode;

    private OrganizationSettingsSettings() {}
    /**
     * @return Whether or not the organization users can share widgets outside of Datadog. Defaults to `false`.
     * 
     */
    public Optional<Boolean> privateWidgetShare() {
        return Optional.ofNullable(this.privateWidgetShare);
    }
    /**
     * @return SAML properties
     * 
     */
    public OrganizationSettingsSettingsSaml saml() {
        return this.saml;
    }
    /**
     * @return The access role of the user. Options are `st` (standard user), `adm` (admin user), or `ro` (read-only user). Allowed enum values: `st`, `adm` , `ro`, `ERROR` Defaults to `&#34;st&#34;`.
     * 
     */
    public Optional<String> samlAutocreateAccessRole() {
        return Optional.ofNullable(this.samlAutocreateAccessRole);
    }
    /**
     * @return List of domains where the SAML automated user creation is enabled.
     * 
     */
    public OrganizationSettingsSettingsSamlAutocreateUsersDomains samlAutocreateUsersDomains() {
        return this.samlAutocreateUsersDomains;
    }
    /**
     * @return Whether or not SAML can be enabled for this organization.
     * 
     */
    public Optional<Boolean> samlCanBeEnabled() {
        return Optional.ofNullable(this.samlCanBeEnabled);
    }
    /**
     * @return Identity provider endpoint for SAML authentication.
     * 
     */
    public Optional<String> samlIdpEndpoint() {
        return Optional.ofNullable(this.samlIdpEndpoint);
    }
    /**
     * @return Whether or not a SAML identity provider metadata file was provided to the Datadog organization.
     * 
     */
    public OrganizationSettingsSettingsSamlIdpInitiatedLogin samlIdpInitiatedLogin() {
        return this.samlIdpInitiatedLogin;
    }
    /**
     * @return Whether or not a SAML identity provider metadata file was provided to the Datadog organization.
     * 
     */
    public Optional<Boolean> samlIdpMetadataUploaded() {
        return Optional.ofNullable(this.samlIdpMetadataUploaded);
    }
    /**
     * @return URL for SAML logging.
     * 
     */
    public Optional<String> samlLoginUrl() {
        return Optional.ofNullable(this.samlLoginUrl);
    }
    /**
     * @return Whether or not the SAML strict mode is enabled. If true, all users must log in with SAML.
     * 
     */
    public OrganizationSettingsSettingsSamlStrictMode samlStrictMode() {
        return this.samlStrictMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrganizationSettingsSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean privateWidgetShare;
        private OrganizationSettingsSettingsSaml saml;
        private @Nullable String samlAutocreateAccessRole;
        private OrganizationSettingsSettingsSamlAutocreateUsersDomains samlAutocreateUsersDomains;
        private @Nullable Boolean samlCanBeEnabled;
        private @Nullable String samlIdpEndpoint;
        private OrganizationSettingsSettingsSamlIdpInitiatedLogin samlIdpInitiatedLogin;
        private @Nullable Boolean samlIdpMetadataUploaded;
        private @Nullable String samlLoginUrl;
        private OrganizationSettingsSettingsSamlStrictMode samlStrictMode;
        public Builder() {}
        public Builder(OrganizationSettingsSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.privateWidgetShare = defaults.privateWidgetShare;
    	      this.saml = defaults.saml;
    	      this.samlAutocreateAccessRole = defaults.samlAutocreateAccessRole;
    	      this.samlAutocreateUsersDomains = defaults.samlAutocreateUsersDomains;
    	      this.samlCanBeEnabled = defaults.samlCanBeEnabled;
    	      this.samlIdpEndpoint = defaults.samlIdpEndpoint;
    	      this.samlIdpInitiatedLogin = defaults.samlIdpInitiatedLogin;
    	      this.samlIdpMetadataUploaded = defaults.samlIdpMetadataUploaded;
    	      this.samlLoginUrl = defaults.samlLoginUrl;
    	      this.samlStrictMode = defaults.samlStrictMode;
        }

        @CustomType.Setter
        public Builder privateWidgetShare(@Nullable Boolean privateWidgetShare) {
            this.privateWidgetShare = privateWidgetShare;
            return this;
        }
        @CustomType.Setter
        public Builder saml(OrganizationSettingsSettingsSaml saml) {
            this.saml = Objects.requireNonNull(saml);
            return this;
        }
        @CustomType.Setter
        public Builder samlAutocreateAccessRole(@Nullable String samlAutocreateAccessRole) {
            this.samlAutocreateAccessRole = samlAutocreateAccessRole;
            return this;
        }
        @CustomType.Setter
        public Builder samlAutocreateUsersDomains(OrganizationSettingsSettingsSamlAutocreateUsersDomains samlAutocreateUsersDomains) {
            this.samlAutocreateUsersDomains = Objects.requireNonNull(samlAutocreateUsersDomains);
            return this;
        }
        @CustomType.Setter
        public Builder samlCanBeEnabled(@Nullable Boolean samlCanBeEnabled) {
            this.samlCanBeEnabled = samlCanBeEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder samlIdpEndpoint(@Nullable String samlIdpEndpoint) {
            this.samlIdpEndpoint = samlIdpEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder samlIdpInitiatedLogin(OrganizationSettingsSettingsSamlIdpInitiatedLogin samlIdpInitiatedLogin) {
            this.samlIdpInitiatedLogin = Objects.requireNonNull(samlIdpInitiatedLogin);
            return this;
        }
        @CustomType.Setter
        public Builder samlIdpMetadataUploaded(@Nullable Boolean samlIdpMetadataUploaded) {
            this.samlIdpMetadataUploaded = samlIdpMetadataUploaded;
            return this;
        }
        @CustomType.Setter
        public Builder samlLoginUrl(@Nullable String samlLoginUrl) {
            this.samlLoginUrl = samlLoginUrl;
            return this;
        }
        @CustomType.Setter
        public Builder samlStrictMode(OrganizationSettingsSettingsSamlStrictMode samlStrictMode) {
            this.samlStrictMode = Objects.requireNonNull(samlStrictMode);
            return this;
        }
        public OrganizationSettingsSettings build() {
            final var o = new OrganizationSettingsSettings();
            o.privateWidgetShare = privateWidgetShare;
            o.saml = saml;
            o.samlAutocreateAccessRole = samlAutocreateAccessRole;
            o.samlAutocreateUsersDomains = samlAutocreateUsersDomains;
            o.samlCanBeEnabled = samlCanBeEnabled;
            o.samlIdpEndpoint = samlIdpEndpoint;
            o.samlIdpInitiatedLogin = samlIdpInitiatedLogin;
            o.samlIdpMetadataUploaded = samlIdpMetadataUploaded;
            o.samlLoginUrl = samlLoginUrl;
            o.samlStrictMode = samlStrictMode;
            return o;
        }
    }
}
