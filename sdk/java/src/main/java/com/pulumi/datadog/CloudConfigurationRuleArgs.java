// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.CloudConfigurationRuleFilterArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudConfigurationRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudConfigurationRuleArgs Empty = new CloudConfigurationRuleArgs();

    /**
     * Whether the cloud configuration rule is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether the cloud configuration rule is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Additional queries to filter matched events before they are processed. Defaults to empty list
     * 
     */
    @Import(name="filters")
    private @Nullable Output<List<CloudConfigurationRuleFilterArgs>> filters;

    /**
     * @return Additional queries to filter matched events before they are processed. Defaults to empty list
     * 
     */
    public Optional<Output<List<CloudConfigurationRuleFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Defaults to empty list. This function will be deprecated soon. Use the notification rules function instead. Fields to group by when generating signals, e.g. {@literal @}resource.
     * 
     */
    @Import(name="groupBies")
    private @Nullable Output<List<String>> groupBies;

    /**
     * @return Defaults to empty list. This function will be deprecated soon. Use the notification rules function instead. Fields to group by when generating signals, e.g. {@literal @}resource.
     * 
     */
    public Optional<Output<List<String>>> groupBies() {
        return Optional.ofNullable(this.groupBies);
    }

    /**
     * The message associated to the rule that will be shown in findings and signals.
     * 
     */
    @Import(name="message", required=true)
    private Output<String> message;

    /**
     * @return The message associated to the rule that will be shown in findings and signals.
     * 
     */
    public Output<String> message() {
        return this.message;
    }

    /**
     * The name of the cloud configuration rule.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the cloud configuration rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * This function will be deprecated soon. Use the notification rules function instead. Notification targets for signals. Defaults to empty list.
     * 
     */
    @Import(name="notifications")
    private @Nullable Output<List<String>> notifications;

    /**
     * @return This function will be deprecated soon. Use the notification rules function instead. Notification targets for signals. Defaults to empty list.
     * 
     */
    public Optional<Output<List<String>>> notifications() {
        return Optional.ofNullable(this.notifications);
    }

    /**
     * Policy written in Rego format.
     * 
     */
    @Import(name="policy", required=true)
    private Output<String> policy;

    /**
     * @return Policy written in Rego format.
     * 
     */
    public Output<String> policy() {
        return this.policy;
    }

    /**
     * Related resource types to be checked by the rule. Defaults to empty list.
     * 
     */
    @Import(name="relatedResourceTypes")
    private @Nullable Output<List<String>> relatedResourceTypes;

    /**
     * @return Related resource types to be checked by the rule. Defaults to empty list.
     * 
     */
    public Optional<Output<List<String>>> relatedResourceTypes() {
        return Optional.ofNullable(this.relatedResourceTypes);
    }

    /**
     * Main resource type to be checked by the rule.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return Main resource type to be checked by the rule.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     * Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.
     * 
     */
    @Import(name="severity", required=true)
    private Output<String> severity;

    /**
     * @return Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.
     * 
     */
    public Output<String> severity() {
        return this.severity;
    }

    /**
     * Tags of the rule, propagated to findings and signals. Defaults to empty list.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return Tags of the rule, propagated to findings and signals. Defaults to empty list.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private CloudConfigurationRuleArgs() {}

    private CloudConfigurationRuleArgs(CloudConfigurationRuleArgs $) {
        this.enabled = $.enabled;
        this.filters = $.filters;
        this.groupBies = $.groupBies;
        this.message = $.message;
        this.name = $.name;
        this.notifications = $.notifications;
        this.policy = $.policy;
        this.relatedResourceTypes = $.relatedResourceTypes;
        this.resourceType = $.resourceType;
        this.severity = $.severity;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudConfigurationRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudConfigurationRuleArgs $;

        public Builder() {
            $ = new CloudConfigurationRuleArgs();
        }

        public Builder(CloudConfigurationRuleArgs defaults) {
            $ = new CloudConfigurationRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether the cloud configuration rule is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the cloud configuration rule is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param filters Additional queries to filter matched events before they are processed. Defaults to empty list
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<List<CloudConfigurationRuleFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Additional queries to filter matched events before they are processed. Defaults to empty list
         * 
         * @return builder
         * 
         */
        public Builder filters(List<CloudConfigurationRuleFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Additional queries to filter matched events before they are processed. Defaults to empty list
         * 
         * @return builder
         * 
         */
        public Builder filters(CloudConfigurationRuleFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param groupBies Defaults to empty list. This function will be deprecated soon. Use the notification rules function instead. Fields to group by when generating signals, e.g. {@literal @}resource.
         * 
         * @return builder
         * 
         */
        public Builder groupBies(@Nullable Output<List<String>> groupBies) {
            $.groupBies = groupBies;
            return this;
        }

        /**
         * @param groupBies Defaults to empty list. This function will be deprecated soon. Use the notification rules function instead. Fields to group by when generating signals, e.g. {@literal @}resource.
         * 
         * @return builder
         * 
         */
        public Builder groupBies(List<String> groupBies) {
            return groupBies(Output.of(groupBies));
        }

        /**
         * @param groupBies Defaults to empty list. This function will be deprecated soon. Use the notification rules function instead. Fields to group by when generating signals, e.g. {@literal @}resource.
         * 
         * @return builder
         * 
         */
        public Builder groupBies(String... groupBies) {
            return groupBies(List.of(groupBies));
        }

        /**
         * @param message The message associated to the rule that will be shown in findings and signals.
         * 
         * @return builder
         * 
         */
        public Builder message(Output<String> message) {
            $.message = message;
            return this;
        }

        /**
         * @param message The message associated to the rule that will be shown in findings and signals.
         * 
         * @return builder
         * 
         */
        public Builder message(String message) {
            return message(Output.of(message));
        }

        /**
         * @param name The name of the cloud configuration rule.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the cloud configuration rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param notifications This function will be deprecated soon. Use the notification rules function instead. Notification targets for signals. Defaults to empty list.
         * 
         * @return builder
         * 
         */
        public Builder notifications(@Nullable Output<List<String>> notifications) {
            $.notifications = notifications;
            return this;
        }

        /**
         * @param notifications This function will be deprecated soon. Use the notification rules function instead. Notification targets for signals. Defaults to empty list.
         * 
         * @return builder
         * 
         */
        public Builder notifications(List<String> notifications) {
            return notifications(Output.of(notifications));
        }

        /**
         * @param notifications This function will be deprecated soon. Use the notification rules function instead. Notification targets for signals. Defaults to empty list.
         * 
         * @return builder
         * 
         */
        public Builder notifications(String... notifications) {
            return notifications(List.of(notifications));
        }

        /**
         * @param policy Policy written in Rego format.
         * 
         * @return builder
         * 
         */
        public Builder policy(Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy Policy written in Rego format.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param relatedResourceTypes Related resource types to be checked by the rule. Defaults to empty list.
         * 
         * @return builder
         * 
         */
        public Builder relatedResourceTypes(@Nullable Output<List<String>> relatedResourceTypes) {
            $.relatedResourceTypes = relatedResourceTypes;
            return this;
        }

        /**
         * @param relatedResourceTypes Related resource types to be checked by the rule. Defaults to empty list.
         * 
         * @return builder
         * 
         */
        public Builder relatedResourceTypes(List<String> relatedResourceTypes) {
            return relatedResourceTypes(Output.of(relatedResourceTypes));
        }

        /**
         * @param relatedResourceTypes Related resource types to be checked by the rule. Defaults to empty list.
         * 
         * @return builder
         * 
         */
        public Builder relatedResourceTypes(String... relatedResourceTypes) {
            return relatedResourceTypes(List.of(relatedResourceTypes));
        }

        /**
         * @param resourceType Main resource type to be checked by the rule.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType Main resource type to be checked by the rule.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param severity Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.
         * 
         * @return builder
         * 
         */
        public Builder severity(Output<String> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.
         * 
         * @return builder
         * 
         */
        public Builder severity(String severity) {
            return severity(Output.of(severity));
        }

        /**
         * @param tags Tags of the rule, propagated to findings and signals. Defaults to empty list.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags of the rule, propagated to findings and signals. Defaults to empty list.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags of the rule, propagated to findings and signals. Defaults to empty list.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public CloudConfigurationRuleArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("CloudConfigurationRuleArgs", "enabled");
            }
            if ($.message == null) {
                throw new MissingRequiredPropertyException("CloudConfigurationRuleArgs", "message");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("CloudConfigurationRuleArgs", "name");
            }
            if ($.policy == null) {
                throw new MissingRequiredPropertyException("CloudConfigurationRuleArgs", "policy");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("CloudConfigurationRuleArgs", "resourceType");
            }
            if ($.severity == null) {
                throw new MissingRequiredPropertyException("CloudConfigurationRuleArgs", "severity");
            }
            return $;
        }
    }

}
