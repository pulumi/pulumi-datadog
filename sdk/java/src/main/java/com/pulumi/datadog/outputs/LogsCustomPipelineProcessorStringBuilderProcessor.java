// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LogsCustomPipelineProcessorStringBuilderProcessor {
    /**
     * @return If the processor is enabled or not.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return If it replaces all missing attributes of template by an empty string.
     * 
     */
    private @Nullable Boolean isReplaceMissing;
    /**
     * @return The name of the processor.
     * 
     */
    private @Nullable String name;
    /**
     * @return The name of the attribute that contains the result of the template.
     * 
     */
    private String target;
    /**
     * @return The formula with one or more attributes and raw text.
     * 
     */
    private String template;

    private LogsCustomPipelineProcessorStringBuilderProcessor() {}
    /**
     * @return If the processor is enabled or not.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return If it replaces all missing attributes of template by an empty string.
     * 
     */
    public Optional<Boolean> isReplaceMissing() {
        return Optional.ofNullable(this.isReplaceMissing);
    }
    /**
     * @return The name of the processor.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The name of the attribute that contains the result of the template.
     * 
     */
    public String target() {
        return this.target;
    }
    /**
     * @return The formula with one or more attributes and raw text.
     * 
     */
    public String template() {
        return this.template;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogsCustomPipelineProcessorStringBuilderProcessor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isEnabled;
        private @Nullable Boolean isReplaceMissing;
        private @Nullable String name;
        private String target;
        private String template;
        public Builder() {}
        public Builder(LogsCustomPipelineProcessorStringBuilderProcessor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isEnabled = defaults.isEnabled;
    	      this.isReplaceMissing = defaults.isReplaceMissing;
    	      this.name = defaults.name;
    	      this.target = defaults.target;
    	      this.template = defaults.template;
        }

        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {

            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isReplaceMissing(@Nullable Boolean isReplaceMissing) {

            this.isReplaceMissing = isReplaceMissing;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder target(String target) {
            if (target == null) {
              throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorStringBuilderProcessor", "target");
            }
            this.target = target;
            return this;
        }
        @CustomType.Setter
        public Builder template(String template) {
            if (template == null) {
              throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorStringBuilderProcessor", "template");
            }
            this.template = template;
            return this;
        }
        public LogsCustomPipelineProcessorStringBuilderProcessor build() {
            final var _resultValue = new LogsCustomPipelineProcessorStringBuilderProcessor();
            _resultValue.isEnabled = isEnabled;
            _resultValue.isReplaceMissing = isReplaceMissing;
            _resultValue.name = name;
            _resultValue.target = target;
            _resultValue.template = template;
            return _resultValue;
        }
    }
}
