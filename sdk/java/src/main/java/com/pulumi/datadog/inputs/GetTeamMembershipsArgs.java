// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTeamMembershipsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTeamMembershipsArgs Empty = new GetTeamMembershipsArgs();

    /**
     * When true, `filter_keyword` string is exact matched against the user&#39;s `email`, followed by `name`.
     * 
     */
    @Import(name="exactMatch")
    private @Nullable Output<Boolean> exactMatch;

    /**
     * @return When true, `filter_keyword` string is exact matched against the user&#39;s `email`, followed by `name`.
     * 
     */
    public Optional<Output<Boolean>> exactMatch() {
        return Optional.ofNullable(this.exactMatch);
    }

    /**
     * Search query, can be user email or name.
     * 
     */
    @Import(name="filterKeyword")
    private @Nullable Output<String> filterKeyword;

    /**
     * @return Search query, can be user email or name.
     * 
     */
    public Optional<Output<String>> filterKeyword() {
        return Optional.ofNullable(this.filterKeyword);
    }

    /**
     * The team&#39;s identifier.
     * 
     */
    @Import(name="teamId", required=true)
    private Output<String> teamId;

    /**
     * @return The team&#39;s identifier.
     * 
     */
    public Output<String> teamId() {
        return this.teamId;
    }

    private GetTeamMembershipsArgs() {}

    private GetTeamMembershipsArgs(GetTeamMembershipsArgs $) {
        this.exactMatch = $.exactMatch;
        this.filterKeyword = $.filterKeyword;
        this.teamId = $.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTeamMembershipsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTeamMembershipsArgs $;

        public Builder() {
            $ = new GetTeamMembershipsArgs();
        }

        public Builder(GetTeamMembershipsArgs defaults) {
            $ = new GetTeamMembershipsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exactMatch When true, `filter_keyword` string is exact matched against the user&#39;s `email`, followed by `name`.
         * 
         * @return builder
         * 
         */
        public Builder exactMatch(@Nullable Output<Boolean> exactMatch) {
            $.exactMatch = exactMatch;
            return this;
        }

        /**
         * @param exactMatch When true, `filter_keyword` string is exact matched against the user&#39;s `email`, followed by `name`.
         * 
         * @return builder
         * 
         */
        public Builder exactMatch(Boolean exactMatch) {
            return exactMatch(Output.of(exactMatch));
        }

        /**
         * @param filterKeyword Search query, can be user email or name.
         * 
         * @return builder
         * 
         */
        public Builder filterKeyword(@Nullable Output<String> filterKeyword) {
            $.filterKeyword = filterKeyword;
            return this;
        }

        /**
         * @param filterKeyword Search query, can be user email or name.
         * 
         * @return builder
         * 
         */
        public Builder filterKeyword(String filterKeyword) {
            return filterKeyword(Output.of(filterKeyword));
        }

        /**
         * @param teamId The team&#39;s identifier.
         * 
         * @return builder
         * 
         */
        public Builder teamId(Output<String> teamId) {
            $.teamId = teamId;
            return this;
        }

        /**
         * @param teamId The team&#39;s identifier.
         * 
         * @return builder
         * 
         */
        public Builder teamId(String teamId) {
            return teamId(Output.of(teamId));
        }

        public GetTeamMembershipsArgs build() {
            if ($.teamId == null) {
                throw new MissingRequiredPropertyException("GetTeamMembershipsArgs", "teamId");
            }
            return $;
        }
    }

}
