// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTeamMembershipsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTeamMembershipsArgs Empty = new GetTeamMembershipsArgs();

    /**
     * Search query, can be user email or name.
     * 
     */
    @Import(name="filterKeyword")
    private @Nullable Output<String> filterKeyword;

    /**
     * @return Search query, can be user email or name.
     * 
     */
    public Optional<Output<String>> filterKeyword() {
        return Optional.ofNullable(this.filterKeyword);
    }

    @Import(name="teamId", required=true)
    private Output<String> teamId;

    public Output<String> teamId() {
        return this.teamId;
    }

    private GetTeamMembershipsArgs() {}

    private GetTeamMembershipsArgs(GetTeamMembershipsArgs $) {
        this.filterKeyword = $.filterKeyword;
        this.teamId = $.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTeamMembershipsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTeamMembershipsArgs $;

        public Builder() {
            $ = new GetTeamMembershipsArgs();
        }

        public Builder(GetTeamMembershipsArgs defaults) {
            $ = new GetTeamMembershipsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filterKeyword Search query, can be user email or name.
         * 
         * @return builder
         * 
         */
        public Builder filterKeyword(@Nullable Output<String> filterKeyword) {
            $.filterKeyword = filterKeyword;
            return this;
        }

        /**
         * @param filterKeyword Search query, can be user email or name.
         * 
         * @return builder
         * 
         */
        public Builder filterKeyword(String filterKeyword) {
            return filterKeyword(Output.of(filterKeyword));
        }

        public Builder teamId(Output<String> teamId) {
            $.teamId = teamId;
            return this;
        }

        public Builder teamId(String teamId) {
            return teamId(Output.of(teamId));
        }

        public GetTeamMembershipsArgs build() {
            if ($.teamId == null) {
                throw new MissingRequiredPropertyException("GetTeamMembershipsArgs", "teamId");
            }
            return $;
        }
    }

}
