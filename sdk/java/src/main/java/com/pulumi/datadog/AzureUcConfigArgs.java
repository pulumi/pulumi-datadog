// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.AzureUcConfigActualBillConfigArgs;
import com.pulumi.datadog.inputs.AzureUcConfigAmortizedBillConfigArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureUcConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureUcConfigArgs Empty = new AzureUcConfigArgs();

    /**
     * The tenant ID of the Azure account.
     * 
     */
    @Import(name="accountId", required=true)
    private Output<String> accountId;

    /**
     * @return The tenant ID of the Azure account.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }

    /**
     * Configuration for the actual cost export.
     * 
     */
    @Import(name="actualBillConfig")
    private @Nullable Output<AzureUcConfigActualBillConfigArgs> actualBillConfig;

    /**
     * @return Configuration for the actual cost export.
     * 
     */
    public Optional<Output<AzureUcConfigActualBillConfigArgs>> actualBillConfig() {
        return Optional.ofNullable(this.actualBillConfig);
    }

    /**
     * Configuration for the amortized cost export.
     * 
     */
    @Import(name="amortizedBillConfig")
    private @Nullable Output<AzureUcConfigAmortizedBillConfigArgs> amortizedBillConfig;

    /**
     * @return Configuration for the amortized cost export.
     * 
     */
    public Optional<Output<AzureUcConfigAmortizedBillConfigArgs>> amortizedBillConfig() {
        return Optional.ofNullable(this.amortizedBillConfig);
    }

    /**
     * The client ID of the Azure account.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return The client ID of the Azure account.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * The scope of your observed subscription.
     * 
     */
    @Import(name="scope", required=true)
    private Output<String> scope;

    /**
     * @return The scope of your observed subscription.
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    private AzureUcConfigArgs() {}

    private AzureUcConfigArgs(AzureUcConfigArgs $) {
        this.accountId = $.accountId;
        this.actualBillConfig = $.actualBillConfig;
        this.amortizedBillConfig = $.amortizedBillConfig;
        this.clientId = $.clientId;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureUcConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureUcConfigArgs $;

        public Builder() {
            $ = new AzureUcConfigArgs();
        }

        public Builder(AzureUcConfigArgs defaults) {
            $ = new AzureUcConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The tenant ID of the Azure account.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The tenant ID of the Azure account.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param actualBillConfig Configuration for the actual cost export.
         * 
         * @return builder
         * 
         */
        public Builder actualBillConfig(@Nullable Output<AzureUcConfigActualBillConfigArgs> actualBillConfig) {
            $.actualBillConfig = actualBillConfig;
            return this;
        }

        /**
         * @param actualBillConfig Configuration for the actual cost export.
         * 
         * @return builder
         * 
         */
        public Builder actualBillConfig(AzureUcConfigActualBillConfigArgs actualBillConfig) {
            return actualBillConfig(Output.of(actualBillConfig));
        }

        /**
         * @param amortizedBillConfig Configuration for the amortized cost export.
         * 
         * @return builder
         * 
         */
        public Builder amortizedBillConfig(@Nullable Output<AzureUcConfigAmortizedBillConfigArgs> amortizedBillConfig) {
            $.amortizedBillConfig = amortizedBillConfig;
            return this;
        }

        /**
         * @param amortizedBillConfig Configuration for the amortized cost export.
         * 
         * @return builder
         * 
         */
        public Builder amortizedBillConfig(AzureUcConfigAmortizedBillConfigArgs amortizedBillConfig) {
            return amortizedBillConfig(Output.of(amortizedBillConfig));
        }

        /**
         * @param clientId The client ID of the Azure account.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The client ID of the Azure account.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param scope The scope of your observed subscription.
         * 
         * @return builder
         * 
         */
        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope of your observed subscription.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public AzureUcConfigArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("AzureUcConfigArgs", "accountId");
            }
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("AzureUcConfigArgs", "clientId");
            }
            if ($.scope == null) {
                throw new MissingRequiredPropertyException("AzureUcConfigArgs", "scope");
            }
            return $;
        }
    }

}
