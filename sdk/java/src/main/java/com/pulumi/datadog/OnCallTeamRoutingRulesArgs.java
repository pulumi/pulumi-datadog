// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.OnCallTeamRoutingRulesRuleArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OnCallTeamRoutingRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnCallTeamRoutingRulesArgs Empty = new OnCallTeamRoutingRulesArgs();

    /**
     * List of team routing rules.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<OnCallTeamRoutingRulesRuleArgs>> rules;

    /**
     * @return List of team routing rules.
     * 
     */
    public Optional<Output<List<OnCallTeamRoutingRulesRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * ID of the team to associate the routing rules with.
     * 
     */
    @Import(name="teamId", required=true)
    private Output<String> teamId;

    /**
     * @return ID of the team to associate the routing rules with.
     * 
     */
    public Output<String> teamId() {
        return this.teamId;
    }

    private OnCallTeamRoutingRulesArgs() {}

    private OnCallTeamRoutingRulesArgs(OnCallTeamRoutingRulesArgs $) {
        this.rules = $.rules;
        this.teamId = $.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnCallTeamRoutingRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnCallTeamRoutingRulesArgs $;

        public Builder() {
            $ = new OnCallTeamRoutingRulesArgs();
        }

        public Builder(OnCallTeamRoutingRulesArgs defaults) {
            $ = new OnCallTeamRoutingRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rules List of team routing rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<OnCallTeamRoutingRulesRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules List of team routing rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<OnCallTeamRoutingRulesRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules List of team routing rules.
         * 
         * @return builder
         * 
         */
        public Builder rules(OnCallTeamRoutingRulesRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param teamId ID of the team to associate the routing rules with.
         * 
         * @return builder
         * 
         */
        public Builder teamId(Output<String> teamId) {
            $.teamId = teamId;
            return this;
        }

        /**
         * @param teamId ID of the team to associate the routing rules with.
         * 
         * @return builder
         * 
         */
        public Builder teamId(String teamId) {
            return teamId(Output.of(teamId));
        }

        public OnCallTeamRoutingRulesArgs build() {
            if ($.teamId == null) {
                throw new MissingRequiredPropertyException("OnCallTeamRoutingRulesArgs", "teamId");
            }
            return $;
        }
    }

}
