// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ActionConnectionHttpTokenAuthArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionConnectionHttpArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionConnectionHttpArgs Empty = new ActionConnectionHttpArgs();

    /**
     * Base HTTP url for the integration. String length must be at least 1.
     * 
     */
    @Import(name="baseUrl")
    private @Nullable Output<String> baseUrl;

    /**
     * @return Base HTTP url for the integration. String length must be at least 1.
     * 
     */
    public Optional<Output<String>> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }

    /**
     * Configuration for an HTTP connection that uses token auth
     * 
     */
    @Import(name="tokenAuth")
    private @Nullable Output<ActionConnectionHttpTokenAuthArgs> tokenAuth;

    /**
     * @return Configuration for an HTTP connection that uses token auth
     * 
     */
    public Optional<Output<ActionConnectionHttpTokenAuthArgs>> tokenAuth() {
        return Optional.ofNullable(this.tokenAuth);
    }

    private ActionConnectionHttpArgs() {}

    private ActionConnectionHttpArgs(ActionConnectionHttpArgs $) {
        this.baseUrl = $.baseUrl;
        this.tokenAuth = $.tokenAuth;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionConnectionHttpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionConnectionHttpArgs $;

        public Builder() {
            $ = new ActionConnectionHttpArgs();
        }

        public Builder(ActionConnectionHttpArgs defaults) {
            $ = new ActionConnectionHttpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param baseUrl Base HTTP url for the integration. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(@Nullable Output<String> baseUrl) {
            $.baseUrl = baseUrl;
            return this;
        }

        /**
         * @param baseUrl Base HTTP url for the integration. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(String baseUrl) {
            return baseUrl(Output.of(baseUrl));
        }

        /**
         * @param tokenAuth Configuration for an HTTP connection that uses token auth
         * 
         * @return builder
         * 
         */
        public Builder tokenAuth(@Nullable Output<ActionConnectionHttpTokenAuthArgs> tokenAuth) {
            $.tokenAuth = tokenAuth;
            return this;
        }

        /**
         * @param tokenAuth Configuration for an HTTP connection that uses token auth
         * 
         * @return builder
         * 
         */
        public Builder tokenAuth(ActionConnectionHttpTokenAuthArgs tokenAuth) {
            return tokenAuth(Output.of(tokenAuth));
        }

        public ActionConnectionHttpArgs build() {
            return $;
        }
    }

}
