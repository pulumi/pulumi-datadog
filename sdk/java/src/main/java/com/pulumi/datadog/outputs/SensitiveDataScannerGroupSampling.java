// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SensitiveDataScannerGroupSampling {
    /**
     * @return Product that the sampling rate applies to. Valid values are `logs`, `rum`, `events`, `apm`.
     * 
     */
    private String product;
    /**
     * @return Percentage rate at which data for the product type is scanned.
     * 
     */
    private Double rate;

    private SensitiveDataScannerGroupSampling() {}
    /**
     * @return Product that the sampling rate applies to. Valid values are `logs`, `rum`, `events`, `apm`.
     * 
     */
    public String product() {
        return this.product;
    }
    /**
     * @return Percentage rate at which data for the product type is scanned.
     * 
     */
    public Double rate() {
        return this.rate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SensitiveDataScannerGroupSampling defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String product;
        private Double rate;
        public Builder() {}
        public Builder(SensitiveDataScannerGroupSampling defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.product = defaults.product;
    	      this.rate = defaults.rate;
        }

        @CustomType.Setter
        public Builder product(String product) {
            if (product == null) {
              throw new MissingRequiredPropertyException("SensitiveDataScannerGroupSampling", "product");
            }
            this.product = product;
            return this;
        }
        @CustomType.Setter
        public Builder rate(Double rate) {
            if (rate == null) {
              throw new MissingRequiredPropertyException("SensitiveDataScannerGroupSampling", "rate");
            }
            this.rate = rate;
            return this;
        }
        public SensitiveDataScannerGroupSampling build() {
            final var _resultValue = new SensitiveDataScannerGroupSampling();
            _resultValue.product = product;
            _resultValue.rate = rate;
            return _resultValue;
        }
    }
}
