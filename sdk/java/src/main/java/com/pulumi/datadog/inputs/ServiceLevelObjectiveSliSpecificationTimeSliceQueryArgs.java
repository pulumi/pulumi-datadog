// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs;
import com.pulumi.datadog.inputs.ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;


public final class ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs Empty = new ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs();

    /**
     * A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
     * 
     */
    @Import(name="formula", required=true)
    private Output<ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs> formula;

    /**
     * @return A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
     * 
     */
    public Output<ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs> formula() {
        return this.formula;
    }

    /**
     * A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
     * 
     */
    @Import(name="queries", required=true)
    private Output<List<ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs>> queries;

    /**
     * @return A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
     * 
     */
    public Output<List<ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs>> queries() {
        return this.queries;
    }

    private ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs() {}

    private ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs(ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs $) {
        this.formula = $.formula;
        this.queries = $.queries;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs $;

        public Builder() {
            $ = new ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs();
        }

        public Builder(ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs defaults) {
            $ = new ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param formula A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
         * 
         * @return builder
         * 
         */
        public Builder formula(Output<ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs> formula) {
            $.formula = formula;
            return this;
        }

        /**
         * @param formula A list that contains exactly one formula, as only a single formula may be used to define a timeseries query for a time-slice SLO.
         * 
         * @return builder
         * 
         */
        public Builder formula(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs formula) {
            return formula(Output.of(formula));
        }

        /**
         * @param queries A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
         * 
         * @return builder
         * 
         */
        public Builder queries(Output<List<ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs>> queries) {
            $.queries = queries;
            return this;
        }

        /**
         * @param queries A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
         * 
         * @return builder
         * 
         */
        public Builder queries(List<ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs> queries) {
            return queries(Output.of(queries));
        }

        /**
         * @param queries A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
         * 
         * @return builder
         * 
         */
        public Builder queries(ServiceLevelObjectiveSliSpecificationTimeSliceQueryQueryArgs... queries) {
            return queries(List.of(queries));
        }

        public ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs build() {
            if ($.formula == null) {
                throw new MissingRequiredPropertyException("ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs", "formula");
            }
            if ($.queries == null) {
                throw new MissingRequiredPropertyException("ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs", "queries");
            }
            return $;
        }
    }

}
