// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsTestOptionsListRetryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsTestOptionsListRetryArgs Empty = new SyntheticsTestOptionsListRetryArgs();

    /**
     * Number of retries needed to consider a location as failed before sending a notification alert.
     * 
     */
    @Import(name="count")
    private @Nullable Output<Integer> count;

    /**
     * @return Number of retries needed to consider a location as failed before sending a notification alert.
     * 
     */
    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    /**
     * Interval between a failed test and the next retry in milliseconds.
     * 
     */
    @Import(name="interval")
    private @Nullable Output<Integer> interval;

    /**
     * @return Interval between a failed test and the next retry in milliseconds.
     * 
     */
    public Optional<Output<Integer>> interval() {
        return Optional.ofNullable(this.interval);
    }

    private SyntheticsTestOptionsListRetryArgs() {}

    private SyntheticsTestOptionsListRetryArgs(SyntheticsTestOptionsListRetryArgs $) {
        this.count = $.count;
        this.interval = $.interval;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsTestOptionsListRetryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsTestOptionsListRetryArgs $;

        public Builder() {
            $ = new SyntheticsTestOptionsListRetryArgs();
        }

        public Builder(SyntheticsTestOptionsListRetryArgs defaults) {
            $ = new SyntheticsTestOptionsListRetryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param count Number of retries needed to consider a location as failed before sending a notification alert.
         * 
         * @return builder
         * 
         */
        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        /**
         * @param count Number of retries needed to consider a location as failed before sending a notification alert.
         * 
         * @return builder
         * 
         */
        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        /**
         * @param interval Interval between a failed test and the next retry in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder interval(@Nullable Output<Integer> interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param interval Interval between a failed test and the next retry in milliseconds.
         * 
         * @return builder
         * 
         */
        public Builder interval(Integer interval) {
            return interval(Output.of(interval));
        }

        public SyntheticsTestOptionsListRetryArgs build() {
            return $;
        }
    }

}
