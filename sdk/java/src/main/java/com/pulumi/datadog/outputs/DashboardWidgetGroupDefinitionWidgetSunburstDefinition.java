// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetSunburstDefinitionCustomLink;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendInline;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendTable;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequest;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetGroupDefinitionWidgetSunburstDefinition {
    /**
     * @return A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.
     * 
     */
    private @Nullable List<DashboardWidgetGroupDefinitionWidgetSunburstDefinitionCustomLink> customLinks;
    /**
     * @return Whether or not to show the total value in the widget.
     * 
     */
    private @Nullable Boolean hideTotal;
    /**
     * @return Used to configure the inline legend. Cannot be used in conjunction with legend*table.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendInline legendInline;
    /**
     * @return Used to configure the table legend. Cannot be used in conjunction with legend*inline.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendTable legendTable;
    /**
     * @return The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `1y`, `alert`.
     * 
     */
    private @Nullable String liveSpan;
    /**
     * @return A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).
     * 
     */
    private @Nullable List<DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequest> requests;
    /**
     * @return The title of the widget.
     * 
     */
    private @Nullable String title;
    /**
     * @return The alignment of the widget&#39;s title. Valid values are `center`, `left`, `right`.
     * 
     */
    private @Nullable String titleAlign;
    /**
     * @return The size of the widget&#39;s title (defaults to 16).
     * 
     */
    private @Nullable String titleSize;

    private DashboardWidgetGroupDefinitionWidgetSunburstDefinition() {}
    /**
     * @return A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.
     * 
     */
    public List<DashboardWidgetGroupDefinitionWidgetSunburstDefinitionCustomLink> customLinks() {
        return this.customLinks == null ? List.of() : this.customLinks;
    }
    /**
     * @return Whether or not to show the total value in the widget.
     * 
     */
    public Optional<Boolean> hideTotal() {
        return Optional.ofNullable(this.hideTotal);
    }
    /**
     * @return Used to configure the inline legend. Cannot be used in conjunction with legend*table.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendInline> legendInline() {
        return Optional.ofNullable(this.legendInline);
    }
    /**
     * @return Used to configure the table legend. Cannot be used in conjunction with legend*inline.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendTable> legendTable() {
        return Optional.ofNullable(this.legendTable);
    }
    /**
     * @return The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `1y`, `alert`.
     * 
     */
    public Optional<String> liveSpan() {
        return Optional.ofNullable(this.liveSpan);
    }
    /**
     * @return A nested block describing the request to use when displaying the widget. Multiple request blocks are allowed using the structure below (exactly one of `q`, `apm_query`, `log_query`, `rum_query`, `security_query` or `process_query` is required within the request block).
     * 
     */
    public List<DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequest> requests() {
        return this.requests == null ? List.of() : this.requests;
    }
    /**
     * @return The title of the widget.
     * 
     */
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    /**
     * @return The alignment of the widget&#39;s title. Valid values are `center`, `left`, `right`.
     * 
     */
    public Optional<String> titleAlign() {
        return Optional.ofNullable(this.titleAlign);
    }
    /**
     * @return The size of the widget&#39;s title (defaults to 16).
     * 
     */
    public Optional<String> titleSize() {
        return Optional.ofNullable(this.titleSize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetGroupDefinitionWidgetSunburstDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DashboardWidgetGroupDefinitionWidgetSunburstDefinitionCustomLink> customLinks;
        private @Nullable Boolean hideTotal;
        private @Nullable DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendInline legendInline;
        private @Nullable DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendTable legendTable;
        private @Nullable String liveSpan;
        private @Nullable List<DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequest> requests;
        private @Nullable String title;
        private @Nullable String titleAlign;
        private @Nullable String titleSize;
        public Builder() {}
        public Builder(DashboardWidgetGroupDefinitionWidgetSunburstDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customLinks = defaults.customLinks;
    	      this.hideTotal = defaults.hideTotal;
    	      this.legendInline = defaults.legendInline;
    	      this.legendTable = defaults.legendTable;
    	      this.liveSpan = defaults.liveSpan;
    	      this.requests = defaults.requests;
    	      this.title = defaults.title;
    	      this.titleAlign = defaults.titleAlign;
    	      this.titleSize = defaults.titleSize;
        }

        @CustomType.Setter
        public Builder customLinks(@Nullable List<DashboardWidgetGroupDefinitionWidgetSunburstDefinitionCustomLink> customLinks) {
            this.customLinks = customLinks;
            return this;
        }
        public Builder customLinks(DashboardWidgetGroupDefinitionWidgetSunburstDefinitionCustomLink... customLinks) {
            return customLinks(List.of(customLinks));
        }
        @CustomType.Setter
        public Builder hideTotal(@Nullable Boolean hideTotal) {
            this.hideTotal = hideTotal;
            return this;
        }
        @CustomType.Setter
        public Builder legendInline(@Nullable DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendInline legendInline) {
            this.legendInline = legendInline;
            return this;
        }
        @CustomType.Setter
        public Builder legendTable(@Nullable DashboardWidgetGroupDefinitionWidgetSunburstDefinitionLegendTable legendTable) {
            this.legendTable = legendTable;
            return this;
        }
        @CustomType.Setter
        public Builder liveSpan(@Nullable String liveSpan) {
            this.liveSpan = liveSpan;
            return this;
        }
        @CustomType.Setter
        public Builder requests(@Nullable List<DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequest> requests) {
            this.requests = requests;
            return this;
        }
        public Builder requests(DashboardWidgetGroupDefinitionWidgetSunburstDefinitionRequest... requests) {
            return requests(List.of(requests));
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {
            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder titleAlign(@Nullable String titleAlign) {
            this.titleAlign = titleAlign;
            return this;
        }
        @CustomType.Setter
        public Builder titleSize(@Nullable String titleSize) {
            this.titleSize = titleSize;
            return this;
        }
        public DashboardWidgetGroupDefinitionWidgetSunburstDefinition build() {
            final var o = new DashboardWidgetGroupDefinitionWidgetSunburstDefinition();
            o.customLinks = customLinks;
            o.hideTotal = hideTotal;
            o.legendInline = legendInline;
            o.legendTable = legendTable;
            o.liveSpan = liveSpan;
            o.requests = requests;
            o.title = title;
            o.titleAlign = titleAlign;
            o.titleSize = titleSize;
            return o;
        }
    }
}
