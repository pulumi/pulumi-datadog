// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LogsArchiveAzureArchive {
    /**
     * @return Your client id.
     * 
     */
    private String clientId;
    /**
     * @return The container where the archive is stored.
     * 
     */
    private String container;
    /**
     * @return The path where the archive is stored.
     * 
     */
    private @Nullable String path;
    /**
     * @return The associated storage account.
     * 
     */
    private String storageAccount;
    /**
     * @return Your tenant id.
     * 
     */
    private String tenantId;

    private LogsArchiveAzureArchive() {}
    /**
     * @return Your client id.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return The container where the archive is stored.
     * 
     */
    public String container() {
        return this.container;
    }
    /**
     * @return The path where the archive is stored.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return The associated storage account.
     * 
     */
    public String storageAccount() {
        return this.storageAccount;
    }
    /**
     * @return Your tenant id.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogsArchiveAzureArchive defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private String container;
        private @Nullable String path;
        private String storageAccount;
        private String tenantId;
        public Builder() {}
        public Builder(LogsArchiveAzureArchive defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.container = defaults.container;
    	      this.path = defaults.path;
    	      this.storageAccount = defaults.storageAccount;
    	      this.tenantId = defaults.tenantId;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("LogsArchiveAzureArchive", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder container(String container) {
            if (container == null) {
              throw new MissingRequiredPropertyException("LogsArchiveAzureArchive", "container");
            }
            this.container = container;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccount(String storageAccount) {
            if (storageAccount == null) {
              throw new MissingRequiredPropertyException("LogsArchiveAzureArchive", "storageAccount");
            }
            this.storageAccount = storageAccount;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            if (tenantId == null) {
              throw new MissingRequiredPropertyException("LogsArchiveAzureArchive", "tenantId");
            }
            this.tenantId = tenantId;
            return this;
        }
        public LogsArchiveAzureArchive build() {
            final var _resultValue = new LogsArchiveAzureArchive();
            _resultValue.clientId = clientId;
            _resultValue.container = container;
            _resultValue.path = path;
            _resultValue.storageAccount = storageAccount;
            _resultValue.tenantId = tenantId;
            return _resultValue;
        }
    }
}
