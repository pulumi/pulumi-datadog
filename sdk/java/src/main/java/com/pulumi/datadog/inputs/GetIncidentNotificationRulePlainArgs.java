// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.GetIncidentNotificationRuleCondition;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIncidentNotificationRulePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIncidentNotificationRulePlainArgs Empty = new GetIncidentNotificationRulePlainArgs();

    /**
     * The conditions that trigger this notification rule.
     * 
     */
    @Import(name="conditions")
    private @Nullable List<GetIncidentNotificationRuleCondition> conditions;

    /**
     * @return The conditions that trigger this notification rule.
     * 
     */
    public Optional<List<GetIncidentNotificationRuleCondition>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * The ID of the incident notification rule.
     * 
     */
    @Import(name="id", required=true)
    private String id;

    /**
     * @return The ID of the incident notification rule.
     * 
     */
    public String id() {
        return this.id;
    }

    private GetIncidentNotificationRulePlainArgs() {}

    private GetIncidentNotificationRulePlainArgs(GetIncidentNotificationRulePlainArgs $) {
        this.conditions = $.conditions;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIncidentNotificationRulePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIncidentNotificationRulePlainArgs $;

        public Builder() {
            $ = new GetIncidentNotificationRulePlainArgs();
        }

        public Builder(GetIncidentNotificationRulePlainArgs defaults) {
            $ = new GetIncidentNotificationRulePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conditions The conditions that trigger this notification rule.
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable List<GetIncidentNotificationRuleCondition> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions The conditions that trigger this notification rule.
         * 
         * @return builder
         * 
         */
        public Builder conditions(GetIncidentNotificationRuleCondition... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param id The ID of the incident notification rule.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            $.id = id;
            return this;
        }

        public GetIncidentNotificationRulePlainArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetIncidentNotificationRulePlainArgs", "id");
            }
            return $;
        }
    }

}
