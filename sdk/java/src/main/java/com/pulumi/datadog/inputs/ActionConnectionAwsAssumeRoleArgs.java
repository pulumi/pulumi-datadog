// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionConnectionAwsAssumeRoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionConnectionAwsAssumeRoleArgs Empty = new ActionConnectionAwsAssumeRoleArgs();

    /**
     * AWS account that the connection is created for. String length must be at least 1.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return AWS account that the connection is created for. String length must be at least 1.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * External ID that specifies which connection can be used to assume the role
     * 
     */
    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    /**
     * @return External ID that specifies which connection can be used to assume the role
     * 
     */
    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * AWS account that will assume the role
     * 
     */
    @Import(name="principalId")
    private @Nullable Output<String> principalId;

    /**
     * @return AWS account that will assume the role
     * 
     */
    public Optional<Output<String>> principalId() {
        return Optional.ofNullable(this.principalId);
    }

    /**
     * Role to assume. String length must be at least 1.
     * 
     */
    @Import(name="role")
    private @Nullable Output<String> role;

    /**
     * @return Role to assume. String length must be at least 1.
     * 
     */
    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    private ActionConnectionAwsAssumeRoleArgs() {}

    private ActionConnectionAwsAssumeRoleArgs(ActionConnectionAwsAssumeRoleArgs $) {
        this.accountId = $.accountId;
        this.externalId = $.externalId;
        this.principalId = $.principalId;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionConnectionAwsAssumeRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionConnectionAwsAssumeRoleArgs $;

        public Builder() {
            $ = new ActionConnectionAwsAssumeRoleArgs();
        }

        public Builder(ActionConnectionAwsAssumeRoleArgs defaults) {
            $ = new ActionConnectionAwsAssumeRoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId AWS account that the connection is created for. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId AWS account that the connection is created for. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param externalId External ID that specifies which connection can be used to assume the role
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId External ID that specifies which connection can be used to assume the role
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param principalId AWS account that will assume the role
         * 
         * @return builder
         * 
         */
        public Builder principalId(@Nullable Output<String> principalId) {
            $.principalId = principalId;
            return this;
        }

        /**
         * @param principalId AWS account that will assume the role
         * 
         * @return builder
         * 
         */
        public Builder principalId(String principalId) {
            return principalId(Output.of(principalId));
        }

        /**
         * @param role Role to assume. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        /**
         * @param role Role to assume. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            return role(Output.of(role));
        }

        public ActionConnectionAwsAssumeRoleArgs build() {
            return $;
        }
    }

}
