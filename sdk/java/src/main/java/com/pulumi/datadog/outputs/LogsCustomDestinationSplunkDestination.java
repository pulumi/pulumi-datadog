// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LogsCustomDestinationSplunkDestination {
    /**
     * @return Access token of the Splunk HTTP Event Collector. This field is not returned by the API.
     * 
     */
    private String accessToken;
    /**
     * @return The destination for which logs will be forwarded to. Must have HTTPS scheme. Forwarding back to Datadog is not allowed.
     * 
     */
    private String endpoint;

    private LogsCustomDestinationSplunkDestination() {}
    /**
     * @return Access token of the Splunk HTTP Event Collector. This field is not returned by the API.
     * 
     */
    public String accessToken() {
        return this.accessToken;
    }
    /**
     * @return The destination for which logs will be forwarded to. Must have HTTPS scheme. Forwarding back to Datadog is not allowed.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogsCustomDestinationSplunkDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessToken;
        private String endpoint;
        public Builder() {}
        public Builder(LogsCustomDestinationSplunkDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessToken = defaults.accessToken;
    	      this.endpoint = defaults.endpoint;
        }

        @CustomType.Setter
        public Builder accessToken(String accessToken) {
            if (accessToken == null) {
              throw new MissingRequiredPropertyException("LogsCustomDestinationSplunkDestination", "accessToken");
            }
            this.accessToken = accessToken;
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            if (endpoint == null) {
              throw new MissingRequiredPropertyException("LogsCustomDestinationSplunkDestination", "endpoint");
            }
            this.endpoint = endpoint;
            return this;
        }
        public LogsCustomDestinationSplunkDestination build() {
            final var _resultValue = new LogsCustomDestinationSplunkDestination();
            _resultValue.accessToken = accessToken;
            _resultValue.endpoint = endpoint;
            return _resultValue;
        }
    }
}
