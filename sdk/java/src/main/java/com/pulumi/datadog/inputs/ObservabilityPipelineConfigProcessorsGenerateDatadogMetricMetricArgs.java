// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricValueArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs Empty = new ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs();

    /**
     * Optional fields used to group the metric series.
     * 
     */
    @Import(name="groupBies")
    private @Nullable Output<List<String>> groupBies;

    /**
     * @return Optional fields used to group the metric series.
     * 
     */
    public Optional<Output<List<String>>> groupBies() {
        return Optional.ofNullable(this.groupBies);
    }

    /**
     * Datadog filter query to match logs for metric generation.
     * 
     */
    @Import(name="include", required=true)
    private Output<String> include;

    /**
     * @return Datadog filter query to match logs for metric generation.
     * 
     */
    public Output<String> include() {
        return this.include;
    }

    /**
     * Type of metric to create.
     * 
     */
    @Import(name="metricType", required=true)
    private Output<String> metricType;

    /**
     * @return Type of metric to create.
     * 
     */
    public Output<String> metricType() {
        return this.metricType;
    }

    /**
     * Name of the custom metric to be created.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the custom metric to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Specifies how the value of the generated metric is computed.
     * 
     */
    @Import(name="value")
    private @Nullable Output<ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricValueArgs> value;

    /**
     * @return Specifies how the value of the generated metric is computed.
     * 
     */
    public Optional<Output<ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricValueArgs>> value() {
        return Optional.ofNullable(this.value);
    }

    private ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs() {}

    private ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs(ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs $) {
        this.groupBies = $.groupBies;
        this.include = $.include;
        this.metricType = $.metricType;
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs();
        }

        public Builder(ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs defaults) {
            $ = new ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupBies Optional fields used to group the metric series.
         * 
         * @return builder
         * 
         */
        public Builder groupBies(@Nullable Output<List<String>> groupBies) {
            $.groupBies = groupBies;
            return this;
        }

        /**
         * @param groupBies Optional fields used to group the metric series.
         * 
         * @return builder
         * 
         */
        public Builder groupBies(List<String> groupBies) {
            return groupBies(Output.of(groupBies));
        }

        /**
         * @param groupBies Optional fields used to group the metric series.
         * 
         * @return builder
         * 
         */
        public Builder groupBies(String... groupBies) {
            return groupBies(List.of(groupBies));
        }

        /**
         * @param include Datadog filter query to match logs for metric generation.
         * 
         * @return builder
         * 
         */
        public Builder include(Output<String> include) {
            $.include = include;
            return this;
        }

        /**
         * @param include Datadog filter query to match logs for metric generation.
         * 
         * @return builder
         * 
         */
        public Builder include(String include) {
            return include(Output.of(include));
        }

        /**
         * @param metricType Type of metric to create.
         * 
         * @return builder
         * 
         */
        public Builder metricType(Output<String> metricType) {
            $.metricType = metricType;
            return this;
        }

        /**
         * @param metricType Type of metric to create.
         * 
         * @return builder
         * 
         */
        public Builder metricType(String metricType) {
            return metricType(Output.of(metricType));
        }

        /**
         * @param name Name of the custom metric to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the custom metric to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param value Specifies how the value of the generated metric is computed.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricValueArgs> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Specifies how the value of the generated metric is computed.
         * 
         * @return builder
         * 
         */
        public Builder value(ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricValueArgs value) {
            return value(Output.of(value));
        }

        public ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs build() {
            if ($.include == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs", "include");
            }
            if ($.metricType == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs", "metricType");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsGenerateDatadogMetricMetricArgs", "name");
            }
            return $;
        }
    }

}
