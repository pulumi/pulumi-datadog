// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DashboardWidgetTopologyMapDefinitionRequestQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetTopologyMapDefinitionRequestQueryArgs Empty = new DashboardWidgetTopologyMapDefinitionRequestQueryArgs();

    /**
     * The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.
     * 
     */
    @Import(name="dataSource", required=true)
    private Output<String> dataSource;

    /**
     * @return The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.
     * 
     */
    public Output<String> dataSource() {
        return this.dataSource;
    }

    /**
     * Your environment and primary tag (or `*` if enabled for your account).
     * 
     */
    @Import(name="filters", required=true)
    private Output<List<String>> filters;

    /**
     * @return Your environment and primary tag (or `*` if enabled for your account).
     * 
     */
    public Output<List<String>> filters() {
        return this.filters;
    }

    /**
     * APM service.
     * 
     */
    @Import(name="service", required=true)
    private Output<String> service;

    /**
     * @return APM service.
     * 
     */
    public Output<String> service() {
        return this.service;
    }

    private DashboardWidgetTopologyMapDefinitionRequestQueryArgs() {}

    private DashboardWidgetTopologyMapDefinitionRequestQueryArgs(DashboardWidgetTopologyMapDefinitionRequestQueryArgs $) {
        this.dataSource = $.dataSource;
        this.filters = $.filters;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetTopologyMapDefinitionRequestQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetTopologyMapDefinitionRequestQueryArgs $;

        public Builder() {
            $ = new DashboardWidgetTopologyMapDefinitionRequestQueryArgs();
        }

        public Builder(DashboardWidgetTopologyMapDefinitionRequestQueryArgs defaults) {
            $ = new DashboardWidgetTopologyMapDefinitionRequestQueryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataSource The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.
         * 
         * @return builder
         * 
         */
        public Builder dataSource(Output<String> dataSource) {
            $.dataSource = dataSource;
            return this;
        }

        /**
         * @param dataSource The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.
         * 
         * @return builder
         * 
         */
        public Builder dataSource(String dataSource) {
            return dataSource(Output.of(dataSource));
        }

        /**
         * @param filters Your environment and primary tag (or `*` if enabled for your account).
         * 
         * @return builder
         * 
         */
        public Builder filters(Output<List<String>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Your environment and primary tag (or `*` if enabled for your account).
         * 
         * @return builder
         * 
         */
        public Builder filters(List<String> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Your environment and primary tag (or `*` if enabled for your account).
         * 
         * @return builder
         * 
         */
        public Builder filters(String... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param service APM service.
         * 
         * @return builder
         * 
         */
        public Builder service(Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service APM service.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        public DashboardWidgetTopologyMapDefinitionRequestQueryArgs build() {
            $.dataSource = Objects.requireNonNull($.dataSource, "expected parameter 'dataSource' to be non-null");
            $.filters = Objects.requireNonNull($.filters, "expected parameter 'filters' to be non-null");
            $.service = Objects.requireNonNull($.service, "expected parameter 'service' to be non-null");
            return $;
        }
    }

}
