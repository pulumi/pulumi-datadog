// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ComplianceCustomFrameworkRequirementArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ComplianceCustomFrameworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final ComplianceCustomFrameworkArgs Empty = new ComplianceCustomFrameworkArgs();

    /**
     * The framework handle. String length must be at least 1. This field is immutable.
     * 
     */
    @Import(name="handle", required=true)
    private Output<String> handle;

    /**
     * @return The framework handle. String length must be at least 1. This field is immutable.
     * 
     */
    public Output<String> handle() {
        return this.handle;
    }

    /**
     * The URL of the icon representing the framework
     * 
     */
    @Import(name="iconUrl")
    private @Nullable Output<String> iconUrl;

    /**
     * @return The URL of the icon representing the framework
     * 
     */
    public Optional<Output<String>> iconUrl() {
        return Optional.ofNullable(this.iconUrl);
    }

    /**
     * The framework name. String length must be at least 1.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The framework name. String length must be at least 1.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The requirements of the framework. Length must be at least 1.
     * 
     */
    @Import(name="requirements")
    private @Nullable Output<List<ComplianceCustomFrameworkRequirementArgs>> requirements;

    /**
     * @return The requirements of the framework. Length must be at least 1.
     * 
     */
    public Optional<Output<List<ComplianceCustomFrameworkRequirementArgs>>> requirements() {
        return Optional.ofNullable(this.requirements);
    }

    /**
     * The framework version. String length must be at least 1. This field is immutable.
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    /**
     * @return The framework version. String length must be at least 1. This field is immutable.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    private ComplianceCustomFrameworkArgs() {}

    private ComplianceCustomFrameworkArgs(ComplianceCustomFrameworkArgs $) {
        this.handle = $.handle;
        this.iconUrl = $.iconUrl;
        this.name = $.name;
        this.requirements = $.requirements;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComplianceCustomFrameworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComplianceCustomFrameworkArgs $;

        public Builder() {
            $ = new ComplianceCustomFrameworkArgs();
        }

        public Builder(ComplianceCustomFrameworkArgs defaults) {
            $ = new ComplianceCustomFrameworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param handle The framework handle. String length must be at least 1. This field is immutable.
         * 
         * @return builder
         * 
         */
        public Builder handle(Output<String> handle) {
            $.handle = handle;
            return this;
        }

        /**
         * @param handle The framework handle. String length must be at least 1. This field is immutable.
         * 
         * @return builder
         * 
         */
        public Builder handle(String handle) {
            return handle(Output.of(handle));
        }

        /**
         * @param iconUrl The URL of the icon representing the framework
         * 
         * @return builder
         * 
         */
        public Builder iconUrl(@Nullable Output<String> iconUrl) {
            $.iconUrl = iconUrl;
            return this;
        }

        /**
         * @param iconUrl The URL of the icon representing the framework
         * 
         * @return builder
         * 
         */
        public Builder iconUrl(String iconUrl) {
            return iconUrl(Output.of(iconUrl));
        }

        /**
         * @param name The framework name. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The framework name. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param requirements The requirements of the framework. Length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder requirements(@Nullable Output<List<ComplianceCustomFrameworkRequirementArgs>> requirements) {
            $.requirements = requirements;
            return this;
        }

        /**
         * @param requirements The requirements of the framework. Length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder requirements(List<ComplianceCustomFrameworkRequirementArgs> requirements) {
            return requirements(Output.of(requirements));
        }

        /**
         * @param requirements The requirements of the framework. Length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder requirements(ComplianceCustomFrameworkRequirementArgs... requirements) {
            return requirements(List.of(requirements));
        }

        /**
         * @param version The framework version. String length must be at least 1. This field is immutable.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The framework version. String length must be at least 1. This field is immutable.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ComplianceCustomFrameworkArgs build() {
            if ($.handle == null) {
                throw new MissingRequiredPropertyException("ComplianceCustomFrameworkArgs", "handle");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ComplianceCustomFrameworkArgs", "name");
            }
            if ($.version == null) {
                throw new MissingRequiredPropertyException("ComplianceCustomFrameworkArgs", "version");
            }
            return $;
        }
    }

}
