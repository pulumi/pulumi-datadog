// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.IncidentNotificationRuleArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.IncidentNotificationRuleState;
import com.pulumi.datadog.outputs.IncidentNotificationRuleCondition;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Datadog incident notification rule resource. This can be used to create and manage Datadog incident notification rules.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.IncidentType;
 * import com.pulumi.datadog.IncidentTypeArgs;
 * import com.pulumi.datadog.IncidentNotificationTemplate;
 * import com.pulumi.datadog.IncidentNotificationTemplateArgs;
 * import com.pulumi.datadog.IncidentNotificationRule;
 * import com.pulumi.datadog.IncidentNotificationRuleArgs;
 * import com.pulumi.datadog.inputs.IncidentNotificationRuleConditionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var example = new IncidentType("example", IncidentTypeArgs.builder()
 *             .name("My Incident Type")
 *             .description("Incident type for critical production issues")
 *             .build());
 * 
 *         var exampleIncidentNotificationTemplate = new IncidentNotificationTemplate("exampleIncidentNotificationTemplate", IncidentNotificationTemplateArgs.builder()
 *             .name("My Notification Template")
 *             .subject("SEV-1 Incident: }{{{@code incident.title}}}{@code ")
 *             .content("""
 * An incident has been declared.
 * 
 * Title: }{{{@code incident.title}}}{@code
 * Severity: }{{{@code incident.severity}}}{@code
 * Status: }{{{@code incident.status}}}{@code
 * 
 * Please join the incident channel for updates.
 *             """)
 *             .category("alert")
 *             .incidentType(example.id())
 *             .build());
 * 
 *         var exampleIncidentNotificationRule = new IncidentNotificationRule("exampleIncidentNotificationRule", IncidentNotificationRuleArgs.builder()
 *             .enabled(true)
 *             .trigger("incident_created_trigger")
 *             .visibility("organization")
 *             .handles(            
 *                 "}{@literal @}{@code team-email}{@literal @}{@code company.com",
 *                 "}{@literal @}{@code slack-channel-alerts",
 *                 "}{@literal @}{@code pagerduty-service")
 *             .conditions(            
 *                 IncidentNotificationRuleConditionArgs.builder()
 *                     .field("severity")
 *                     .values(                    
 *                         "SEV-1",
 *                         "SEV-2")
 *                     .build(),
 *                 IncidentNotificationRuleConditionArgs.builder()
 *                     .field("services")
 *                     .values(                    
 *                         "web-service",
 *                         "api-service",
 *                         "database-service")
 *                     .build())
 *             .renotifyOns(            
 *                 "status",
 *                 "severity")
 *             .incidentType(example.id())
 *             .notificationTemplate(exampleIncidentNotificationTemplate.id())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * The `pulumi import` command can be used, for example:
 * 
 * ```sh
 * $ pulumi import datadog:index/incidentNotificationRule:IncidentNotificationRule example &#34;00000000-0000-0000-0000-000000000000&#34;
 * ```
 * 
 */
@ResourceType(type="datadog:index/incidentNotificationRule:IncidentNotificationRule")
public class IncidentNotificationRule extends com.pulumi.resources.CustomResource {
    /**
     * The conditions that trigger this notification rule. At least one condition is required.
     * 
     */
    @Export(name="conditions", refs={List.class,IncidentNotificationRuleCondition.class}, tree="[0,1]")
    private Output</* @Nullable */ List<IncidentNotificationRuleCondition>> conditions;

    /**
     * @return The conditions that trigger this notification rule. At least one condition is required.
     * 
     */
    public Output<Optional<List<IncidentNotificationRuleCondition>>> conditions() {
        return Codegen.optional(this.conditions);
    }
    /**
     * Timestamp when the notification rule was created.
     * 
     */
    @Export(name="created", refs={String.class}, tree="[0]")
    private Output<String> created;

    /**
     * @return Timestamp when the notification rule was created.
     * 
     */
    public Output<String> created() {
        return this.created;
    }
    /**
     * Whether the notification rule is enabled. Defaults to `false`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Whether the notification rule is enabled. Defaults to `false`.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * The notification handles (targets) for this rule. Examples: {@literal @}team-email{@literal @}company.com, {@literal @}slack-channel.
     * 
     */
    @Export(name="handles", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> handles;

    /**
     * @return The notification handles (targets) for this rule. Examples: {@literal @}team-email{@literal @}company.com, {@literal @}slack-channel.
     * 
     */
    public Output<List<String>> handles() {
        return this.handles;
    }
    /**
     * The ID of the incident type this notification rule is associated with.
     * 
     */
    @Export(name="incidentType", refs={String.class}, tree="[0]")
    private Output<String> incidentType;

    /**
     * @return The ID of the incident type this notification rule is associated with.
     * 
     */
    public Output<String> incidentType() {
        return this.incidentType;
    }
    /**
     * Timestamp when the notification rule was last modified.
     * 
     */
    @Export(name="modified", refs={String.class}, tree="[0]")
    private Output<String> modified;

    /**
     * @return Timestamp when the notification rule was last modified.
     * 
     */
    public Output<String> modified() {
        return this.modified;
    }
    /**
     * The ID of the notification template to use for this rule.
     * 
     */
    @Export(name="notificationTemplate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> notificationTemplate;

    /**
     * @return The ID of the notification template to use for this rule.
     * 
     */
    public Output<Optional<String>> notificationTemplate() {
        return Codegen.optional(this.notificationTemplate);
    }
    /**
     * List of incident fields that trigger re-notification when changed. Valid values are: status, severity, customer*impact, title, description, detected, root*cause, services, state.
     * 
     */
    @Export(name="renotifyOns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> renotifyOns;

    /**
     * @return List of incident fields that trigger re-notification when changed. Valid values are: status, severity, customer*impact, title, description, detected, root*cause, services, state.
     * 
     */
    public Output<Optional<List<String>>> renotifyOns() {
        return Codegen.optional(this.renotifyOns);
    }
    /**
     * The trigger event for this notification rule. Valid values are: incident*created*trigger, incident*saved*trigger.
     * 
     */
    @Export(name="trigger", refs={String.class}, tree="[0]")
    private Output<String> trigger;

    /**
     * @return The trigger event for this notification rule. Valid values are: incident*created*trigger, incident*saved*trigger.
     * 
     */
    public Output<String> trigger() {
        return this.trigger;
    }
    /**
     * The visibility of the notification rule. Valid values are: all, organization, private. Defaults to organization.
     * 
     */
    @Export(name="visibility", refs={String.class}, tree="[0]")
    private Output<String> visibility;

    /**
     * @return The visibility of the notification rule. Valid values are: all, organization, private. Defaults to organization.
     * 
     */
    public Output<String> visibility() {
        return this.visibility;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IncidentNotificationRule(java.lang.String name) {
        this(name, IncidentNotificationRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IncidentNotificationRule(java.lang.String name, IncidentNotificationRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IncidentNotificationRule(java.lang.String name, IncidentNotificationRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/incidentNotificationRule:IncidentNotificationRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private IncidentNotificationRule(java.lang.String name, Output<java.lang.String> id, @Nullable IncidentNotificationRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/incidentNotificationRule:IncidentNotificationRule", name, state, makeResourceOptions(options, id), false);
    }

    private static IncidentNotificationRuleArgs makeArgs(IncidentNotificationRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? IncidentNotificationRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IncidentNotificationRule get(java.lang.String name, Output<java.lang.String> id, @Nullable IncidentNotificationRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IncidentNotificationRule(name, id, state, options);
    }
}
