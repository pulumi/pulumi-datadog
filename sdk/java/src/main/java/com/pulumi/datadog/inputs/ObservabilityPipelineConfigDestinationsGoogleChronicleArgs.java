// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsGoogleChronicleAuthArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigDestinationsGoogleChronicleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigDestinationsGoogleChronicleArgs Empty = new ObservabilityPipelineConfigDestinationsGoogleChronicleArgs();

    /**
     * GCP credentials used to authenticate with Google Cloud Storage.
     * 
     */
    @Import(name="auth")
    private @Nullable Output<ObservabilityPipelineConfigDestinationsGoogleChronicleAuthArgs> auth;

    /**
     * @return GCP credentials used to authenticate with Google Cloud Storage.
     * 
     */
    public Optional<Output<ObservabilityPipelineConfigDestinationsGoogleChronicleAuthArgs>> auth() {
        return Optional.ofNullable(this.auth);
    }

    /**
     * The Google Chronicle customer ID.
     * 
     */
    @Import(name="customerId")
    private @Nullable Output<String> customerId;

    /**
     * @return The Google Chronicle customer ID.
     * 
     */
    public Optional<Output<String>> customerId() {
        return Optional.ofNullable(this.customerId);
    }

    /**
     * The encoding format for the logs sent to Chronicle.
     * 
     */
    @Import(name="encoding")
    private @Nullable Output<String> encoding;

    /**
     * @return The encoding format for the logs sent to Chronicle.
     * 
     */
    public Optional<Output<String>> encoding() {
        return Optional.ofNullable(this.encoding);
    }

    /**
     * The unique identifier for this component.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The unique identifier for this component.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    @Import(name="inputs", required=true)
    private Output<List<String>> inputs;

    /**
     * @return A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    public Output<List<String>> inputs() {
        return this.inputs;
    }

    /**
     * The log type metadata associated with the Chronicle destination.
     * 
     */
    @Import(name="logType")
    private @Nullable Output<String> logType;

    /**
     * @return The log type metadata associated with the Chronicle destination.
     * 
     */
    public Optional<Output<String>> logType() {
        return Optional.ofNullable(this.logType);
    }

    private ObservabilityPipelineConfigDestinationsGoogleChronicleArgs() {}

    private ObservabilityPipelineConfigDestinationsGoogleChronicleArgs(ObservabilityPipelineConfigDestinationsGoogleChronicleArgs $) {
        this.auth = $.auth;
        this.customerId = $.customerId;
        this.encoding = $.encoding;
        this.id = $.id;
        this.inputs = $.inputs;
        this.logType = $.logType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigDestinationsGoogleChronicleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigDestinationsGoogleChronicleArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigDestinationsGoogleChronicleArgs();
        }

        public Builder(ObservabilityPipelineConfigDestinationsGoogleChronicleArgs defaults) {
            $ = new ObservabilityPipelineConfigDestinationsGoogleChronicleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auth GCP credentials used to authenticate with Google Cloud Storage.
         * 
         * @return builder
         * 
         */
        public Builder auth(@Nullable Output<ObservabilityPipelineConfigDestinationsGoogleChronicleAuthArgs> auth) {
            $.auth = auth;
            return this;
        }

        /**
         * @param auth GCP credentials used to authenticate with Google Cloud Storage.
         * 
         * @return builder
         * 
         */
        public Builder auth(ObservabilityPipelineConfigDestinationsGoogleChronicleAuthArgs auth) {
            return auth(Output.of(auth));
        }

        /**
         * @param customerId The Google Chronicle customer ID.
         * 
         * @return builder
         * 
         */
        public Builder customerId(@Nullable Output<String> customerId) {
            $.customerId = customerId;
            return this;
        }

        /**
         * @param customerId The Google Chronicle customer ID.
         * 
         * @return builder
         * 
         */
        public Builder customerId(String customerId) {
            return customerId(Output.of(customerId));
        }

        /**
         * @param encoding The encoding format for the logs sent to Chronicle.
         * 
         * @return builder
         * 
         */
        public Builder encoding(@Nullable Output<String> encoding) {
            $.encoding = encoding;
            return this;
        }

        /**
         * @param encoding The encoding format for the logs sent to Chronicle.
         * 
         * @return builder
         * 
         */
        public Builder encoding(String encoding) {
            return encoding(Output.of(encoding));
        }

        /**
         * @param id The unique identifier for this component.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique identifier for this component.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param inputs A list of component IDs whose output is used as the `input` for this component.
         * 
         * @return builder
         * 
         */
        public Builder inputs(Output<List<String>> inputs) {
            $.inputs = inputs;
            return this;
        }

        /**
         * @param inputs A list of component IDs whose output is used as the `input` for this component.
         * 
         * @return builder
         * 
         */
        public Builder inputs(List<String> inputs) {
            return inputs(Output.of(inputs));
        }

        /**
         * @param inputs A list of component IDs whose output is used as the `input` for this component.
         * 
         * @return builder
         * 
         */
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }

        /**
         * @param logType The log type metadata associated with the Chronicle destination.
         * 
         * @return builder
         * 
         */
        public Builder logType(@Nullable Output<String> logType) {
            $.logType = logType;
            return this;
        }

        /**
         * @param logType The log type metadata associated with the Chronicle destination.
         * 
         * @return builder
         * 
         */
        public Builder logType(String logType) {
            return logType(Output.of(logType));
        }

        public ObservabilityPipelineConfigDestinationsGoogleChronicleArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsGoogleChronicleArgs", "id");
            }
            if ($.inputs == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsGoogleChronicleArgs", "inputs");
            }
            return $;
        }
    }

}
