// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineState extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineState Empty = new ObservabilityPipelineState();

    /**
     * Configuration for the pipeline.
     * 
     */
    @Import(name="config")
    private @Nullable Output<ObservabilityPipelineConfigArgs> config;

    /**
     * @return Configuration for the pipeline.
     * 
     */
    public Optional<Output<ObservabilityPipelineConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The pipeline name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The pipeline name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private ObservabilityPipelineState() {}

    private ObservabilityPipelineState(ObservabilityPipelineState $) {
        this.config = $.config;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineState $;

        public Builder() {
            $ = new ObservabilityPipelineState();
        }

        public Builder(ObservabilityPipelineState defaults) {
            $ = new ObservabilityPipelineState(Objects.requireNonNull(defaults));
        }

        /**
         * @param config Configuration for the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<ObservabilityPipelineConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config Configuration for the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder config(ObservabilityPipelineConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param name The pipeline name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The pipeline name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ObservabilityPipelineState build() {
            return $;
        }
    }

}
