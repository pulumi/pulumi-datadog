// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class MonitorNotificationRuleFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorNotificationRuleFilterArgs Empty = new MonitorNotificationRuleFilterArgs();

    /**
     * All tags that target monitors must match.
     * 
     */
    @Import(name="tags", required=true)
    private Output<List<String>> tags;

    /**
     * @return All tags that target monitors must match.
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }

    private MonitorNotificationRuleFilterArgs() {}

    private MonitorNotificationRuleFilterArgs(MonitorNotificationRuleFilterArgs $) {
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorNotificationRuleFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorNotificationRuleFilterArgs $;

        public Builder() {
            $ = new MonitorNotificationRuleFilterArgs();
        }

        public Builder(MonitorNotificationRuleFilterArgs defaults) {
            $ = new MonitorNotificationRuleFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param tags All tags that target monitors must match.
         * 
         * @return builder
         * 
         */
        public Builder tags(Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags All tags that target monitors must match.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags All tags that target monitors must match.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public MonitorNotificationRuleFilterArgs build() {
            if ($.tags == null) {
                throw new MissingRequiredPropertyException("MonitorNotificationRuleFilterArgs", "tags");
            }
            return $;
        }
    }

}
