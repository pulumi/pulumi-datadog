// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.GetTeamsTeam;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTeamsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTeamsPlainArgs Empty = new GetTeamsPlainArgs();

    /**
     * Search query. Can be team name, team handle, or email of team member.
     * 
     */
    @Import(name="filterKeyword")
    private @Nullable String filterKeyword;

    /**
     * @return Search query. Can be team name, team handle, or email of team member.
     * 
     */
    public Optional<String> filterKeyword() {
        return Optional.ofNullable(this.filterKeyword);
    }

    /**
     * When true, only returns teams the current user belongs to.
     * 
     */
    @Import(name="filterMe")
    private @Nullable Boolean filterMe;

    /**
     * @return When true, only returns teams the current user belongs to.
     * 
     */
    public Optional<Boolean> filterMe() {
        return Optional.ofNullable(this.filterMe);
    }

    /**
     * List of teams
     * 
     */
    @Import(name="teams")
    private @Nullable List<GetTeamsTeam> teams;

    /**
     * @return List of teams
     * 
     */
    public Optional<List<GetTeamsTeam>> teams() {
        return Optional.ofNullable(this.teams);
    }

    private GetTeamsPlainArgs() {}

    private GetTeamsPlainArgs(GetTeamsPlainArgs $) {
        this.filterKeyword = $.filterKeyword;
        this.filterMe = $.filterMe;
        this.teams = $.teams;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTeamsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTeamsPlainArgs $;

        public Builder() {
            $ = new GetTeamsPlainArgs();
        }

        public Builder(GetTeamsPlainArgs defaults) {
            $ = new GetTeamsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filterKeyword Search query. Can be team name, team handle, or email of team member.
         * 
         * @return builder
         * 
         */
        public Builder filterKeyword(@Nullable String filterKeyword) {
            $.filterKeyword = filterKeyword;
            return this;
        }

        /**
         * @param filterMe When true, only returns teams the current user belongs to.
         * 
         * @return builder
         * 
         */
        public Builder filterMe(@Nullable Boolean filterMe) {
            $.filterMe = filterMe;
            return this;
        }

        /**
         * @param teams List of teams
         * 
         * @return builder
         * 
         */
        public Builder teams(@Nullable List<GetTeamsTeam> teams) {
            $.teams = teams;
            return this;
        }

        /**
         * @param teams List of teams
         * 
         * @return builder
         * 
         */
        public Builder teams(GetTeamsTeam... teams) {
            return teams(List.of(teams));
        }

        public GetTeamsPlainArgs build() {
            return $;
        }
    }

}
