// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigDestinationsAmazonS3Auth;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObservabilityPipelineConfigDestinationsAmazonS3 {
    /**
     * @return AWS authentication credentials used for accessing AWS services. If omitted, the system&#39;s default credentials are used (for example, the IAM role and environment variables).
     * 
     */
    private @Nullable ObservabilityPipelineConfigDestinationsAmazonS3Auth auth;
    /**
     * @return S3 bucket name.
     * 
     */
    private String bucket;
    /**
     * @return Unique identifier for the destination component.
     * 
     */
    private String id;
    /**
     * @return A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    private List<String> inputs;
    /**
     * @return Prefix for object keys.
     * 
     */
    private String keyPrefix;
    /**
     * @return AWS region of the S3 bucket.
     * 
     */
    private String region;
    /**
     * @return S3 storage class. Valid values are `STANDARD`, `REDUCED_REDUNDANCY`, `INTELLIGENT_TIERING`, `STANDARD_IA`, `EXPRESS_ONEZONE`, `ONEZONE_IA`, `GLACIER`, `GLACIER_IR`, `DEEP_ARCHIVE`.
     * 
     */
    private String storageClass;

    private ObservabilityPipelineConfigDestinationsAmazonS3() {}
    /**
     * @return AWS authentication credentials used for accessing AWS services. If omitted, the system&#39;s default credentials are used (for example, the IAM role and environment variables).
     * 
     */
    public Optional<ObservabilityPipelineConfigDestinationsAmazonS3Auth> auth() {
        return Optional.ofNullable(this.auth);
    }
    /**
     * @return S3 bucket name.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return Unique identifier for the destination component.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    public List<String> inputs() {
        return this.inputs;
    }
    /**
     * @return Prefix for object keys.
     * 
     */
    public String keyPrefix() {
        return this.keyPrefix;
    }
    /**
     * @return AWS region of the S3 bucket.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return S3 storage class. Valid values are `STANDARD`, `REDUCED_REDUNDANCY`, `INTELLIGENT_TIERING`, `STANDARD_IA`, `EXPRESS_ONEZONE`, `ONEZONE_IA`, `GLACIER`, `GLACIER_IR`, `DEEP_ARCHIVE`.
     * 
     */
    public String storageClass() {
        return this.storageClass;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservabilityPipelineConfigDestinationsAmazonS3 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ObservabilityPipelineConfigDestinationsAmazonS3Auth auth;
        private String bucket;
        private String id;
        private List<String> inputs;
        private String keyPrefix;
        private String region;
        private String storageClass;
        public Builder() {}
        public Builder(ObservabilityPipelineConfigDestinationsAmazonS3 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auth = defaults.auth;
    	      this.bucket = defaults.bucket;
    	      this.id = defaults.id;
    	      this.inputs = defaults.inputs;
    	      this.keyPrefix = defaults.keyPrefix;
    	      this.region = defaults.region;
    	      this.storageClass = defaults.storageClass;
        }

        @CustomType.Setter
        public Builder auth(@Nullable ObservabilityPipelineConfigDestinationsAmazonS3Auth auth) {

            this.auth = auth;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inputs(List<String> inputs) {
            if (inputs == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3", "inputs");
            }
            this.inputs = inputs;
            return this;
        }
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }
        @CustomType.Setter
        public Builder keyPrefix(String keyPrefix) {
            if (keyPrefix == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3", "keyPrefix");
            }
            this.keyPrefix = keyPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder storageClass(String storageClass) {
            if (storageClass == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3", "storageClass");
            }
            this.storageClass = storageClass;
            return this;
        }
        public ObservabilityPipelineConfigDestinationsAmazonS3 build() {
            final var _resultValue = new ObservabilityPipelineConfigDestinationsAmazonS3();
            _resultValue.auth = auth;
            _resultValue.bucket = bucket;
            _resultValue.id = id;
            _resultValue.inputs = inputs;
            _resultValue.keyPrefix = keyPrefix;
            _resultValue.region = region;
            _resultValue.storageClass = storageClass;
            return _resultValue;
        }
    }
}
