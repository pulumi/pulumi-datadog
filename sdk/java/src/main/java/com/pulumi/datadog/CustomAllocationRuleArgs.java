// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.CustomAllocationRuleCostsToAllocateArgs;
import com.pulumi.datadog.inputs.CustomAllocationRuleStrategyArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomAllocationRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomAllocationRuleArgs Empty = new CustomAllocationRuleArgs();

    @Import(name="costsToAllocates")
    private @Nullable Output<List<CustomAllocationRuleCostsToAllocateArgs>> costsToAllocates;

    public Optional<Output<List<CustomAllocationRuleCostsToAllocateArgs>>> costsToAllocates() {
        return Optional.ofNullable(this.costsToAllocates);
    }

    /**
     * Whether the custom allocation rule is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether the custom allocation rule is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
     * 
     */
    @Import(name="providernames", required=true)
    private Output<List<String>> providernames;

    /**
     * @return List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
     * 
     */
    public Output<List<String>> providernames() {
        return this.providernames;
    }

    /**
     * The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
     * 
     */
    @Import(name="ruleName", required=true)
    private Output<String> ruleName;

    /**
     * @return The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
     * 
     */
    public Output<String> ruleName() {
        return this.ruleName;
    }

    @Import(name="strategy")
    private @Nullable Output<CustomAllocationRuleStrategyArgs> strategy;

    public Optional<Output<CustomAllocationRuleStrategyArgs>> strategy() {
        return Optional.ofNullable(this.strategy);
    }

    private CustomAllocationRuleArgs() {}

    private CustomAllocationRuleArgs(CustomAllocationRuleArgs $) {
        this.costsToAllocates = $.costsToAllocates;
        this.enabled = $.enabled;
        this.providernames = $.providernames;
        this.ruleName = $.ruleName;
        this.strategy = $.strategy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomAllocationRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomAllocationRuleArgs $;

        public Builder() {
            $ = new CustomAllocationRuleArgs();
        }

        public Builder(CustomAllocationRuleArgs defaults) {
            $ = new CustomAllocationRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder costsToAllocates(@Nullable Output<List<CustomAllocationRuleCostsToAllocateArgs>> costsToAllocates) {
            $.costsToAllocates = costsToAllocates;
            return this;
        }

        public Builder costsToAllocates(List<CustomAllocationRuleCostsToAllocateArgs> costsToAllocates) {
            return costsToAllocates(Output.of(costsToAllocates));
        }

        public Builder costsToAllocates(CustomAllocationRuleCostsToAllocateArgs... costsToAllocates) {
            return costsToAllocates(List.of(costsToAllocates));
        }

        /**
         * @param enabled Whether the custom allocation rule is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the custom allocation rule is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param providernames List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
         * 
         * @return builder
         * 
         */
        public Builder providernames(Output<List<String>> providernames) {
            $.providernames = providernames;
            return this;
        }

        /**
         * @param providernames List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
         * 
         * @return builder
         * 
         */
        public Builder providernames(List<String> providernames) {
            return providernames(Output.of(providernames));
        }

        /**
         * @param providernames List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
         * 
         * @return builder
         * 
         */
        public Builder providernames(String... providernames) {
            return providernames(List.of(providernames));
        }

        /**
         * @param ruleName The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        public Builder strategy(@Nullable Output<CustomAllocationRuleStrategyArgs> strategy) {
            $.strategy = strategy;
            return this;
        }

        public Builder strategy(CustomAllocationRuleStrategyArgs strategy) {
            return strategy(Output.of(strategy));
        }

        public CustomAllocationRuleArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("CustomAllocationRuleArgs", "enabled");
            }
            if ($.providernames == null) {
                throw new MissingRequiredPropertyException("CustomAllocationRuleArgs", "providernames");
            }
            if ($.ruleName == null) {
                throw new MissingRequiredPropertyException("CustomAllocationRuleArgs", "ruleName");
            }
            return $;
        }
    }

}
