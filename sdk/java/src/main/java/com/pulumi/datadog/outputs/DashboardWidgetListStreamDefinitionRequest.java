// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetListStreamDefinitionRequestColumn;
import com.pulumi.datadog.outputs.DashboardWidgetListStreamDefinitionRequestQuery;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class DashboardWidgetListStreamDefinitionRequest {
    /**
     * @return Column properties used by the front end for display.
     * 
     */
    private List<DashboardWidgetListStreamDefinitionRequestColumn> columns;
    private DashboardWidgetListStreamDefinitionRequestQuery query;
    /**
     * @return Widget response format. Valid values are `event_list`.
     * 
     */
    private String responseFormat;

    private DashboardWidgetListStreamDefinitionRequest() {}
    /**
     * @return Column properties used by the front end for display.
     * 
     */
    public List<DashboardWidgetListStreamDefinitionRequestColumn> columns() {
        return this.columns;
    }
    public DashboardWidgetListStreamDefinitionRequestQuery query() {
        return this.query;
    }
    /**
     * @return Widget response format. Valid values are `event_list`.
     * 
     */
    public String responseFormat() {
        return this.responseFormat;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetListStreamDefinitionRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<DashboardWidgetListStreamDefinitionRequestColumn> columns;
        private DashboardWidgetListStreamDefinitionRequestQuery query;
        private String responseFormat;
        public Builder() {}
        public Builder(DashboardWidgetListStreamDefinitionRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columns = defaults.columns;
    	      this.query = defaults.query;
    	      this.responseFormat = defaults.responseFormat;
        }

        @CustomType.Setter
        public Builder columns(List<DashboardWidgetListStreamDefinitionRequestColumn> columns) {
            this.columns = Objects.requireNonNull(columns);
            return this;
        }
        public Builder columns(DashboardWidgetListStreamDefinitionRequestColumn... columns) {
            return columns(List.of(columns));
        }
        @CustomType.Setter
        public Builder query(DashboardWidgetListStreamDefinitionRequestQuery query) {
            this.query = Objects.requireNonNull(query);
            return this;
        }
        @CustomType.Setter
        public Builder responseFormat(String responseFormat) {
            this.responseFormat = Objects.requireNonNull(responseFormat);
            return this;
        }
        public DashboardWidgetListStreamDefinitionRequest build() {
            final var _resultValue = new DashboardWidgetListStreamDefinitionRequest();
            _resultValue.columns = columns;
            _resultValue.query = query;
            _resultValue.responseFormat = responseFormat;
            return _resultValue;
        }
    }
}
