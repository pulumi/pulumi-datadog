// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetGeomapDefinitionRequestFormula;
import com.pulumi.datadog.outputs.DashboardWidgetGeomapDefinitionRequestLogQuery;
import com.pulumi.datadog.outputs.DashboardWidgetGeomapDefinitionRequestQuery;
import com.pulumi.datadog.outputs.DashboardWidgetGeomapDefinitionRequestRumQuery;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetGeomapDefinitionRequest {
    private @Nullable List<DashboardWidgetGeomapDefinitionRequestFormula> formulas;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetGeomapDefinitionRequestLogQuery logQuery;
    /**
     * @return The metric query to use for this widget.
     * 
     */
    private @Nullable String q;
    private @Nullable List<DashboardWidgetGeomapDefinitionRequestQuery> queries;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetGeomapDefinitionRequestRumQuery rumQuery;

    private DashboardWidgetGeomapDefinitionRequest() {}
    public List<DashboardWidgetGeomapDefinitionRequestFormula> formulas() {
        return this.formulas == null ? List.of() : this.formulas;
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetGeomapDefinitionRequestLogQuery> logQuery() {
        return Optional.ofNullable(this.logQuery);
    }
    /**
     * @return The metric query to use for this widget.
     * 
     */
    public Optional<String> q() {
        return Optional.ofNullable(this.q);
    }
    public List<DashboardWidgetGeomapDefinitionRequestQuery> queries() {
        return this.queries == null ? List.of() : this.queries;
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetGeomapDefinitionRequestRumQuery> rumQuery() {
        return Optional.ofNullable(this.rumQuery);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetGeomapDefinitionRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DashboardWidgetGeomapDefinitionRequestFormula> formulas;
        private @Nullable DashboardWidgetGeomapDefinitionRequestLogQuery logQuery;
        private @Nullable String q;
        private @Nullable List<DashboardWidgetGeomapDefinitionRequestQuery> queries;
        private @Nullable DashboardWidgetGeomapDefinitionRequestRumQuery rumQuery;
        public Builder() {}
        public Builder(DashboardWidgetGeomapDefinitionRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.formulas = defaults.formulas;
    	      this.logQuery = defaults.logQuery;
    	      this.q = defaults.q;
    	      this.queries = defaults.queries;
    	      this.rumQuery = defaults.rumQuery;
        }

        @CustomType.Setter
        public Builder formulas(@Nullable List<DashboardWidgetGeomapDefinitionRequestFormula> formulas) {
            this.formulas = formulas;
            return this;
        }
        public Builder formulas(DashboardWidgetGeomapDefinitionRequestFormula... formulas) {
            return formulas(List.of(formulas));
        }
        @CustomType.Setter
        public Builder logQuery(@Nullable DashboardWidgetGeomapDefinitionRequestLogQuery logQuery) {
            this.logQuery = logQuery;
            return this;
        }
        @CustomType.Setter
        public Builder q(@Nullable String q) {
            this.q = q;
            return this;
        }
        @CustomType.Setter
        public Builder queries(@Nullable List<DashboardWidgetGeomapDefinitionRequestQuery> queries) {
            this.queries = queries;
            return this;
        }
        public Builder queries(DashboardWidgetGeomapDefinitionRequestQuery... queries) {
            return queries(List.of(queries));
        }
        @CustomType.Setter
        public Builder rumQuery(@Nullable DashboardWidgetGeomapDefinitionRequestRumQuery rumQuery) {
            this.rumQuery = rumQuery;
            return this;
        }
        public DashboardWidgetGeomapDefinitionRequest build() {
            final var _resultValue = new DashboardWidgetGeomapDefinitionRequest();
            _resultValue.formulas = formulas;
            _resultValue.logQuery = logQuery;
            _resultValue.q = q;
            _resultValue.queries = queries;
            _resultValue.rumQuery = rumQuery;
            return _resultValue;
        }
    }
}
