// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.ProviderArgs;
import com.pulumi.datadog.Utilities;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The provider type for the datadog package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 * 
 */
@ResourceType(type="pulumi:providers:datadog")
public class Provider extends com.pulumi.resources.ProviderResource {
    /**
     * (Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.
     * 
     */
    @Export(name="apiKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> apiKey;

    /**
     * @return (Required unless validate is false) Datadog API key. This can also be set via the DD_API_KEY environment variable.
     * 
     */
    public Output<Optional<String>> apiKey() {
        return Codegen.optional(this.apiKey);
    }
    /**
     * The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the `/api/`
     * path. For example, `https://api.datadoghq.com/` is a correct value, while `https://api.datadoghq.com/api/` is not. And
     * if you&#39;re working with &#34;EU&#34; version of Datadog, use `https://api.datadoghq.eu/`. Other Datadog region examples:
     * `https://api.us5.datadoghq.com/`, `https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See
     * https://docs.datadoghq.com/getting_started/site/ for all available regions.
     * 
     */
    @Export(name="apiUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> apiUrl;

    /**
     * @return The API URL. This can also be set via the DD_HOST environment variable. Note that this URL must not end with the `/api/`
     * path. For example, `https://api.datadoghq.com/` is a correct value, while `https://api.datadoghq.com/api/` is not. And
     * if you&#39;re working with &#34;EU&#34; version of Datadog, use `https://api.datadoghq.eu/`. Other Datadog region examples:
     * `https://api.us5.datadoghq.com/`, `https://api.us3.datadoghq.com/` and `https://api.ddog-gov.com/`. See
     * https://docs.datadoghq.com/getting_started/site/ for all available regions.
     * 
     */
    public Output<Optional<String>> apiUrl() {
        return Codegen.optional(this.apiUrl);
    }
    /**
     * (Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.
     * 
     */
    @Export(name="appKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> appKey;

    /**
     * @return (Required unless validate is false) Datadog APP key. This can also be set via the DD_APP_KEY environment variable.
     * 
     */
    public Output<Optional<String>> appKey() {
        return Codegen.optional(this.appKey);
    }
    /**
     * Enables request retries on HTTP status codes 429 and 5xx. Valid values are [`true`, `false`]. Defaults to `true`.
     * 
     */
    @Export(name="httpClientRetryEnabled", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> httpClientRetryEnabled;

    /**
     * @return Enables request retries on HTTP status codes 429 and 5xx. Valid values are [`true`, `false`]. Defaults to `true`.
     * 
     */
    public Output<Optional<String>> httpClientRetryEnabled() {
        return Codegen.optional(this.httpClientRetryEnabled);
    }
    /**
     * Enables validation of the provided API key during provider initialization. Valid values are [`true`, `false`]. Default
     * is true. When false, api_key won&#39;t be checked.
     * 
     */
    @Export(name="validate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> validate;

    /**
     * @return Enables validation of the provided API key during provider initialization. Valid values are [`true`, `false`]. Default
     * is true. When false, api_key won&#39;t be checked.
     * 
     */
    public Output<Optional<String>> validate() {
        return Codegen.optional(this.validate);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Provider(String name) {
        this(name, ProviderArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Provider(String name, @Nullable ProviderArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Provider(String name, @Nullable ProviderArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog", name, args == null ? ProviderArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "apiKey",
                "appKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

}
