// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs Empty = new ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs();

    /**
     * Whether to drop events that cause errors during transformation.
     * 
     */
    @Import(name="dropOnError", required=true)
    private Output<Boolean> dropOnError;

    /**
     * @return Whether to drop events that cause errors during transformation.
     * 
     */
    public Output<Boolean> dropOnError() {
        return this.dropOnError;
    }

    /**
     * Whether this remap rule is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether this remap rule is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * A Datadog search query used to filter events for this specific remap rule.
     * 
     */
    @Import(name="include", required=true)
    private Output<String> include;

    /**
     * @return A Datadog search query used to filter events for this specific remap rule.
     * 
     */
    public Output<String> include() {
        return this.include;
    }

    /**
     * A descriptive name for this remap rule.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return A descriptive name for this remap rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The VRL script source code that defines the transformation logic.
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return The VRL script source code that defines the transformation logic.
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    private ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs() {}

    private ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs(ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs $) {
        this.dropOnError = $.dropOnError;
        this.enabled = $.enabled;
        this.include = $.include;
        this.name = $.name;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs();
        }

        public Builder(ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs defaults) {
            $ = new ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dropOnError Whether to drop events that cause errors during transformation.
         * 
         * @return builder
         * 
         */
        public Builder dropOnError(Output<Boolean> dropOnError) {
            $.dropOnError = dropOnError;
            return this;
        }

        /**
         * @param dropOnError Whether to drop events that cause errors during transformation.
         * 
         * @return builder
         * 
         */
        public Builder dropOnError(Boolean dropOnError) {
            return dropOnError(Output.of(dropOnError));
        }

        /**
         * @param enabled Whether this remap rule is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether this remap rule is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param include A Datadog search query used to filter events for this specific remap rule.
         * 
         * @return builder
         * 
         */
        public Builder include(Output<String> include) {
            $.include = include;
            return this;
        }

        /**
         * @param include A Datadog search query used to filter events for this specific remap rule.
         * 
         * @return builder
         * 
         */
        public Builder include(String include) {
            return include(Output.of(include));
        }

        /**
         * @param name A descriptive name for this remap rule.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A descriptive name for this remap rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param source The VRL script source code that defines the transformation logic.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The VRL script source code that defines the transformation logic.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs build() {
            if ($.dropOnError == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs", "dropOnError");
            }
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs", "enabled");
            }
            if ($.include == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs", "include");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs", "name");
            }
            if ($.source == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs", "source");
            }
            return $;
        }
    }

}
