// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.opsgenie;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceObjectArgs Empty = new ServiceObjectArgs();

    /**
     * The custom url for a custom region.
     * 
     */
    @Import(name="customUrl")
    private @Nullable Output<String> customUrl;

    /**
     * @return The custom url for a custom region.
     * 
     */
    public Optional<Output<String>> customUrl() {
        return Optional.ofNullable(this.customUrl);
    }

    /**
     * The name for the Opsgenie service.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name for the Opsgenie service.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    @Import(name="opsgenieApiKey", required=true)
    private Output<String> opsgenieApiKey;

    public Output<String> opsgenieApiKey() {
        return this.opsgenieApiKey;
    }

    /**
     * The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    private ServiceObjectArgs() {}

    private ServiceObjectArgs(ServiceObjectArgs $) {
        this.customUrl = $.customUrl;
        this.name = $.name;
        this.opsgenieApiKey = $.opsgenieApiKey;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceObjectArgs $;

        public Builder() {
            $ = new ServiceObjectArgs();
        }

        public Builder(ServiceObjectArgs defaults) {
            $ = new ServiceObjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customUrl The custom url for a custom region.
         * 
         * @return builder
         * 
         */
        public Builder customUrl(@Nullable Output<String> customUrl) {
            $.customUrl = customUrl;
            return this;
        }

        /**
         * @param customUrl The custom url for a custom region.
         * 
         * @return builder
         * 
         */
        public Builder customUrl(String customUrl) {
            return customUrl(Output.of(customUrl));
        }

        /**
         * @param name The name for the Opsgenie service.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name for the Opsgenie service.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder opsgenieApiKey(Output<String> opsgenieApiKey) {
            $.opsgenieApiKey = opsgenieApiKey;
            return this;
        }

        public Builder opsgenieApiKey(String opsgenieApiKey) {
            return opsgenieApiKey(Output.of(opsgenieApiKey));
        }

        /**
         * @param region The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region for the Opsgenie service. Valid values are `us`, `eu`, `custom`.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public ServiceObjectArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ServiceObjectArgs", "name");
            }
            if ($.opsgenieApiKey == null) {
                throw new MissingRequiredPropertyException("ServiceObjectArgs", "opsgenieApiKey");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("ServiceObjectArgs", "region");
            }
            return $;
        }
    }

}
