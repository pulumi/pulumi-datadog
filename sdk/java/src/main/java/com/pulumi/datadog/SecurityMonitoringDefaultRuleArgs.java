// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.SecurityMonitoringDefaultRuleCaseArgs;
import com.pulumi.datadog.inputs.SecurityMonitoringDefaultRuleFilterArgs;
import com.pulumi.datadog.inputs.SecurityMonitoringDefaultRuleOptionsArgs;
import com.pulumi.datadog.inputs.SecurityMonitoringDefaultRuleQueryArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityMonitoringDefaultRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityMonitoringDefaultRuleArgs Empty = new SecurityMonitoringDefaultRuleArgs();

    /**
     * Cases of the rule, this is used to update notifications.
     * 
     */
    @Import(name="cases")
    private @Nullable Output<List<SecurityMonitoringDefaultRuleCaseArgs>> cases;

    /**
     * @return Cases of the rule, this is used to update notifications.
     * 
     */
    public Optional<Output<List<SecurityMonitoringDefaultRuleCaseArgs>>> cases() {
        return Optional.ofNullable(this.cases);
    }

    /**
     * Custom Message (will override default message) for generated signals.
     * 
     */
    @Import(name="customMessage")
    private @Nullable Output<String> customMessage;

    /**
     * @return Custom Message (will override default message) for generated signals.
     * 
     */
    public Optional<Output<String>> customMessage() {
        return Optional.ofNullable(this.customMessage);
    }

    /**
     * The name (will override default name) of the rule.
     * 
     */
    @Import(name="customName")
    private @Nullable Output<String> customName;

    /**
     * @return The name (will override default name) of the rule.
     * 
     */
    public Optional<Output<String>> customName() {
        return Optional.ofNullable(this.customName);
    }

    /**
     * Custom tags for generated signals.
     * 
     */
    @Import(name="customTags")
    private @Nullable Output<List<String>> customTags;

    /**
     * @return Custom tags for generated signals.
     * 
     */
    public Optional<Output<List<String>>> customTags() {
        return Optional.ofNullable(this.customTags);
    }

    /**
     * Enable the rule. Defaults to `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable the rule. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Additional queries to filter matched events before they are processed.
     * 
     */
    @Import(name="filters")
    private @Nullable Output<List<SecurityMonitoringDefaultRuleFilterArgs>> filters;

    /**
     * @return Additional queries to filter matched events before they are processed.
     * 
     */
    public Optional<Output<List<SecurityMonitoringDefaultRuleFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Options on default rules. Note that only a subset of fields can be updated on default rule options.
     * 
     */
    @Import(name="options")
    private @Nullable Output<SecurityMonitoringDefaultRuleOptionsArgs> options;

    /**
     * @return Options on default rules. Note that only a subset of fields can be updated on default rule options.
     * 
     */
    public Optional<Output<SecurityMonitoringDefaultRuleOptionsArgs>> options() {
        return Optional.ofNullable(this.options);
    }

    /**
     * Queries for selecting logs which are part of the rule.
     * 
     */
    @Import(name="queries")
    private @Nullable Output<List<SecurityMonitoringDefaultRuleQueryArgs>> queries;

    /**
     * @return Queries for selecting logs which are part of the rule.
     * 
     */
    public Optional<Output<List<SecurityMonitoringDefaultRuleQueryArgs>>> queries() {
        return Optional.ofNullable(this.queries);
    }

    private SecurityMonitoringDefaultRuleArgs() {}

    private SecurityMonitoringDefaultRuleArgs(SecurityMonitoringDefaultRuleArgs $) {
        this.cases = $.cases;
        this.customMessage = $.customMessage;
        this.customName = $.customName;
        this.customTags = $.customTags;
        this.enabled = $.enabled;
        this.filters = $.filters;
        this.options = $.options;
        this.queries = $.queries;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityMonitoringDefaultRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityMonitoringDefaultRuleArgs $;

        public Builder() {
            $ = new SecurityMonitoringDefaultRuleArgs();
        }

        public Builder(SecurityMonitoringDefaultRuleArgs defaults) {
            $ = new SecurityMonitoringDefaultRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cases Cases of the rule, this is used to update notifications.
         * 
         * @return builder
         * 
         */
        public Builder cases(@Nullable Output<List<SecurityMonitoringDefaultRuleCaseArgs>> cases) {
            $.cases = cases;
            return this;
        }

        /**
         * @param cases Cases of the rule, this is used to update notifications.
         * 
         * @return builder
         * 
         */
        public Builder cases(List<SecurityMonitoringDefaultRuleCaseArgs> cases) {
            return cases(Output.of(cases));
        }

        /**
         * @param cases Cases of the rule, this is used to update notifications.
         * 
         * @return builder
         * 
         */
        public Builder cases(SecurityMonitoringDefaultRuleCaseArgs... cases) {
            return cases(List.of(cases));
        }

        /**
         * @param customMessage Custom Message (will override default message) for generated signals.
         * 
         * @return builder
         * 
         */
        public Builder customMessage(@Nullable Output<String> customMessage) {
            $.customMessage = customMessage;
            return this;
        }

        /**
         * @param customMessage Custom Message (will override default message) for generated signals.
         * 
         * @return builder
         * 
         */
        public Builder customMessage(String customMessage) {
            return customMessage(Output.of(customMessage));
        }

        /**
         * @param customName The name (will override default name) of the rule.
         * 
         * @return builder
         * 
         */
        public Builder customName(@Nullable Output<String> customName) {
            $.customName = customName;
            return this;
        }

        /**
         * @param customName The name (will override default name) of the rule.
         * 
         * @return builder
         * 
         */
        public Builder customName(String customName) {
            return customName(Output.of(customName));
        }

        /**
         * @param customTags Custom tags for generated signals.
         * 
         * @return builder
         * 
         */
        public Builder customTags(@Nullable Output<List<String>> customTags) {
            $.customTags = customTags;
            return this;
        }

        /**
         * @param customTags Custom tags for generated signals.
         * 
         * @return builder
         * 
         */
        public Builder customTags(List<String> customTags) {
            return customTags(Output.of(customTags));
        }

        /**
         * @param customTags Custom tags for generated signals.
         * 
         * @return builder
         * 
         */
        public Builder customTags(String... customTags) {
            return customTags(List.of(customTags));
        }

        /**
         * @param enabled Enable the rule. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable the rule. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param filters Additional queries to filter matched events before they are processed.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<List<SecurityMonitoringDefaultRuleFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters Additional queries to filter matched events before they are processed.
         * 
         * @return builder
         * 
         */
        public Builder filters(List<SecurityMonitoringDefaultRuleFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters Additional queries to filter matched events before they are processed.
         * 
         * @return builder
         * 
         */
        public Builder filters(SecurityMonitoringDefaultRuleFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param options Options on default rules. Note that only a subset of fields can be updated on default rule options.
         * 
         * @return builder
         * 
         */
        public Builder options(@Nullable Output<SecurityMonitoringDefaultRuleOptionsArgs> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options Options on default rules. Note that only a subset of fields can be updated on default rule options.
         * 
         * @return builder
         * 
         */
        public Builder options(SecurityMonitoringDefaultRuleOptionsArgs options) {
            return options(Output.of(options));
        }

        /**
         * @param queries Queries for selecting logs which are part of the rule.
         * 
         * @return builder
         * 
         */
        public Builder queries(@Nullable Output<List<SecurityMonitoringDefaultRuleQueryArgs>> queries) {
            $.queries = queries;
            return this;
        }

        /**
         * @param queries Queries for selecting logs which are part of the rule.
         * 
         * @return builder
         * 
         */
        public Builder queries(List<SecurityMonitoringDefaultRuleQueryArgs> queries) {
            return queries(Output.of(queries));
        }

        /**
         * @param queries Queries for selecting logs which are part of the rule.
         * 
         * @return builder
         * 
         */
        public Builder queries(SecurityMonitoringDefaultRuleQueryArgs... queries) {
            return queries(List.of(queries));
        }

        public SecurityMonitoringDefaultRuleArgs build() {
            return $;
        }
    }

}
