// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomField;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObservabilityPipelineConfigDestinationsSumoLogic {
    /**
     * @return The output encoding format.
     * 
     */
    private @Nullable String encoding;
    /**
     * @return A list of custom headers to include in the request to Sumo Logic.
     * 
     */
    private @Nullable List<ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomField> headerCustomFields;
    /**
     * @return Optional override for the host name header.
     * 
     */
    private @Nullable String headerHostName;
    /**
     * @return Optional override for the source category header.
     * 
     */
    private @Nullable String headerSourceCategory;
    /**
     * @return Optional override for the source name header.
     * 
     */
    private @Nullable String headerSourceName;
    /**
     * @return The unique identifier for this component.
     * 
     */
    private String id;
    /**
     * @return A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    private List<String> inputs;

    private ObservabilityPipelineConfigDestinationsSumoLogic() {}
    /**
     * @return The output encoding format.
     * 
     */
    public Optional<String> encoding() {
        return Optional.ofNullable(this.encoding);
    }
    /**
     * @return A list of custom headers to include in the request to Sumo Logic.
     * 
     */
    public List<ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomField> headerCustomFields() {
        return this.headerCustomFields == null ? List.of() : this.headerCustomFields;
    }
    /**
     * @return Optional override for the host name header.
     * 
     */
    public Optional<String> headerHostName() {
        return Optional.ofNullable(this.headerHostName);
    }
    /**
     * @return Optional override for the source category header.
     * 
     */
    public Optional<String> headerSourceCategory() {
        return Optional.ofNullable(this.headerSourceCategory);
    }
    /**
     * @return Optional override for the source name header.
     * 
     */
    public Optional<String> headerSourceName() {
        return Optional.ofNullable(this.headerSourceName);
    }
    /**
     * @return The unique identifier for this component.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    public List<String> inputs() {
        return this.inputs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservabilityPipelineConfigDestinationsSumoLogic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String encoding;
        private @Nullable List<ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomField> headerCustomFields;
        private @Nullable String headerHostName;
        private @Nullable String headerSourceCategory;
        private @Nullable String headerSourceName;
        private String id;
        private List<String> inputs;
        public Builder() {}
        public Builder(ObservabilityPipelineConfigDestinationsSumoLogic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encoding = defaults.encoding;
    	      this.headerCustomFields = defaults.headerCustomFields;
    	      this.headerHostName = defaults.headerHostName;
    	      this.headerSourceCategory = defaults.headerSourceCategory;
    	      this.headerSourceName = defaults.headerSourceName;
    	      this.id = defaults.id;
    	      this.inputs = defaults.inputs;
        }

        @CustomType.Setter
        public Builder encoding(@Nullable String encoding) {

            this.encoding = encoding;
            return this;
        }
        @CustomType.Setter
        public Builder headerCustomFields(@Nullable List<ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomField> headerCustomFields) {

            this.headerCustomFields = headerCustomFields;
            return this;
        }
        public Builder headerCustomFields(ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomField... headerCustomFields) {
            return headerCustomFields(List.of(headerCustomFields));
        }
        @CustomType.Setter
        public Builder headerHostName(@Nullable String headerHostName) {

            this.headerHostName = headerHostName;
            return this;
        }
        @CustomType.Setter
        public Builder headerSourceCategory(@Nullable String headerSourceCategory) {

            this.headerSourceCategory = headerSourceCategory;
            return this;
        }
        @CustomType.Setter
        public Builder headerSourceName(@Nullable String headerSourceName) {

            this.headerSourceName = headerSourceName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsSumoLogic", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inputs(List<String> inputs) {
            if (inputs == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsSumoLogic", "inputs");
            }
            this.inputs = inputs;
            return this;
        }
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }
        public ObservabilityPipelineConfigDestinationsSumoLogic build() {
            final var _resultValue = new ObservabilityPipelineConfigDestinationsSumoLogic();
            _resultValue.encoding = encoding;
            _resultValue.headerCustomFields = headerCustomFields;
            _resultValue.headerHostName = headerHostName;
            _resultValue.headerSourceCategory = headerSourceCategory;
            _resultValue.headerSourceName = headerSourceName;
            _resultValue.id = id;
            _resultValue.inputs = inputs;
            return _resultValue;
        }
    }
}
