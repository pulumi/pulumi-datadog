// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.RumMetricArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.RumMetricState;
import com.pulumi.datadog.outputs.RumMetricCompute;
import com.pulumi.datadog.outputs.RumMetricFilter;
import com.pulumi.datadog.outputs.RumMetricGroupBy;
import com.pulumi.datadog.outputs.RumMetricUniqueness;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Datadog RumMetric resource. This can be used to create and manage Datadog rum_metric.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import datadog:index/rumMetric:RumMetric testing_rum_metric &#34;testing.rum.metric&#34;
 * ```
 * 
 */
@ResourceType(type="datadog:index/rumMetric:RumMetric")
public class RumMetric extends com.pulumi.resources.CustomResource {
    @Export(name="compute", refs={RumMetricCompute.class}, tree="[0]")
    private Output</* @Nullable */ RumMetricCompute> compute;

    public Output<Optional<RumMetricCompute>> compute() {
        return Codegen.optional(this.compute);
    }
    /**
     * The type of RUM events to filter on.
     * 
     */
    @Export(name="eventType", refs={String.class}, tree="[0]")
    private Output<String> eventType;

    /**
     * @return The type of RUM events to filter on.
     * 
     */
    public Output<String> eventType() {
        return this.eventType;
    }
    @Export(name="filter", refs={RumMetricFilter.class}, tree="[0]")
    private Output</* @Nullable */ RumMetricFilter> filter;

    public Output<Optional<RumMetricFilter>> filter() {
        return Codegen.optional(this.filter);
    }
    @Export(name="groupBies", refs={List.class,RumMetricGroupBy.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RumMetricGroupBy>> groupBies;

    public Output<Optional<List<RumMetricGroupBy>>> groupBies() {
        return Codegen.optional(this.groupBies);
    }
    /**
     * The name of the RUM-based metric. This field can&#39;t be updated after creation.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the RUM-based metric. This field can&#39;t be updated after creation.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="uniqueness", refs={RumMetricUniqueness.class}, tree="[0]")
    private Output</* @Nullable */ RumMetricUniqueness> uniqueness;

    public Output<Optional<RumMetricUniqueness>> uniqueness() {
        return Codegen.optional(this.uniqueness);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RumMetric(java.lang.String name) {
        this(name, RumMetricArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RumMetric(java.lang.String name, RumMetricArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RumMetric(java.lang.String name, RumMetricArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/rumMetric:RumMetric", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RumMetric(java.lang.String name, Output<java.lang.String> id, @Nullable RumMetricState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/rumMetric:RumMetric", name, state, makeResourceOptions(options, id), false);
    }

    private static RumMetricArgs makeArgs(RumMetricArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RumMetricArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RumMetric get(java.lang.String name, Output<java.lang.String> id, @Nullable RumMetricState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RumMetric(name, id, state, options);
    }
}
