// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsTestApiStepAssertionTargetjsonpathArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsTestApiStepAssertionTargetjsonpathArgs Empty = new SyntheticsTestApiStepAssertionTargetjsonpathArgs();

    /**
     * The JSON path to assert.
     * 
     */
    @Import(name="jsonpath", required=true)
    private Output<String> jsonpath;

    /**
     * @return The JSON path to assert.
     * 
     */
    public Output<String> jsonpath() {
        return this.jsonpath;
    }

    /**
     * The specific operator to use on the path.
     * 
     */
    @Import(name="operator", required=true)
    private Output<String> operator;

    /**
     * @return The specific operator to use on the path.
     * 
     */
    public Output<String> operator() {
        return this.operator;
    }

    /**
     * Expected matching value.
     * 
     */
    @Import(name="targetvalue")
    private @Nullable Output<String> targetvalue;

    /**
     * @return Expected matching value.
     * 
     */
    public Optional<Output<String>> targetvalue() {
        return Optional.ofNullable(this.targetvalue);
    }

    private SyntheticsTestApiStepAssertionTargetjsonpathArgs() {}

    private SyntheticsTestApiStepAssertionTargetjsonpathArgs(SyntheticsTestApiStepAssertionTargetjsonpathArgs $) {
        this.jsonpath = $.jsonpath;
        this.operator = $.operator;
        this.targetvalue = $.targetvalue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsTestApiStepAssertionTargetjsonpathArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsTestApiStepAssertionTargetjsonpathArgs $;

        public Builder() {
            $ = new SyntheticsTestApiStepAssertionTargetjsonpathArgs();
        }

        public Builder(SyntheticsTestApiStepAssertionTargetjsonpathArgs defaults) {
            $ = new SyntheticsTestApiStepAssertionTargetjsonpathArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jsonpath The JSON path to assert.
         * 
         * @return builder
         * 
         */
        public Builder jsonpath(Output<String> jsonpath) {
            $.jsonpath = jsonpath;
            return this;
        }

        /**
         * @param jsonpath The JSON path to assert.
         * 
         * @return builder
         * 
         */
        public Builder jsonpath(String jsonpath) {
            return jsonpath(Output.of(jsonpath));
        }

        /**
         * @param operator The specific operator to use on the path.
         * 
         * @return builder
         * 
         */
        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator The specific operator to use on the path.
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param targetvalue Expected matching value.
         * 
         * @return builder
         * 
         */
        public Builder targetvalue(@Nullable Output<String> targetvalue) {
            $.targetvalue = targetvalue;
            return this;
        }

        /**
         * @param targetvalue Expected matching value.
         * 
         * @return builder
         * 
         */
        public Builder targetvalue(String targetvalue) {
            return targetvalue(Output.of(targetvalue));
        }

        public SyntheticsTestApiStepAssertionTargetjsonpathArgs build() {
            if ($.jsonpath == null) {
                throw new MissingRequiredPropertyException("SyntheticsTestApiStepAssertionTargetjsonpathArgs", "jsonpath");
            }
            if ($.operator == null) {
                throw new MissingRequiredPropertyException("SyntheticsTestApiStepAssertionTargetjsonpathArgs", "operator");
            }
            return $;
        }
    }

}
