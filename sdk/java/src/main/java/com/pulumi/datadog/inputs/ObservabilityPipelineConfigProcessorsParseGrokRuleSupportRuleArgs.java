// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs Empty = new ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs();

    /**
     * The name of the helper Grok rule.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the helper Grok rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The definition of the helper Grok rule.
     * 
     */
    @Import(name="rule", required=true)
    private Output<String> rule;

    /**
     * @return The definition of the helper Grok rule.
     * 
     */
    public Output<String> rule() {
        return this.rule;
    }

    private ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs() {}

    private ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs(ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs $) {
        this.name = $.name;
        this.rule = $.rule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs();
        }

        public Builder(ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs defaults) {
            $ = new ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the helper Grok rule.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the helper Grok rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rule The definition of the helper Grok rule.
         * 
         * @return builder
         * 
         */
        public Builder rule(Output<String> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule The definition of the helper Grok rule.
         * 
         * @return builder
         * 
         */
        public Builder rule(String rule) {
            return rule(Output.of(rule));
        }

        public ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs", "name");
            }
            if ($.rule == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsParseGrokRuleSupportRuleArgs", "rule");
            }
            return $;
        }
    }

}
