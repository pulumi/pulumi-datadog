// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery {
    /**
     * @return The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.
     * 
     */
    private String dataSource;
    /**
     * @return Your environment and primary tag (or `*` if enabled for your account).
     * 
     */
    private List<String> filters;
    /**
     * @return APM service.
     * 
     */
    private String service;

    private DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery() {}
    /**
     * @return The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.
     * 
     */
    public String dataSource() {
        return this.dataSource;
    }
    /**
     * @return Your environment and primary tag (or `*` if enabled for your account).
     * 
     */
    public List<String> filters() {
        return this.filters;
    }
    /**
     * @return APM service.
     * 
     */
    public String service() {
        return this.service;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataSource;
        private List<String> filters;
        private String service;
        public Builder() {}
        public Builder(DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataSource = defaults.dataSource;
    	      this.filters = defaults.filters;
    	      this.service = defaults.service;
        }

        @CustomType.Setter
        public Builder dataSource(String dataSource) {
            if (dataSource == null) {
              throw new MissingRequiredPropertyException("DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery", "dataSource");
            }
            this.dataSource = dataSource;
            return this;
        }
        @CustomType.Setter
        public Builder filters(List<String> filters) {
            if (filters == null) {
              throw new MissingRequiredPropertyException("DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery", "filters");
            }
            this.filters = filters;
            return this;
        }
        public Builder filters(String... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder service(String service) {
            if (service == null) {
              throw new MissingRequiredPropertyException("DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery", "service");
            }
            this.service = service;
            return this;
        }
        public DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery build() {
            final var _resultValue = new DashboardWidgetGroupDefinitionWidgetTopologyMapDefinitionRequestQuery();
            _resultValue.dataSource = dataSource;
            _resultValue.filters = filters;
            _resultValue.service = service;
            return _resultValue;
        }
    }
}
