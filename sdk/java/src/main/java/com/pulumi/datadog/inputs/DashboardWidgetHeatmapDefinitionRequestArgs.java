// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionRequestApmQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionRequestFormulaArgs;
import com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionRequestLogQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionRequestProcessQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionRequestQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionRequestRumQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionRequestSecurityQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetHeatmapDefinitionRequestStyleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetHeatmapDefinitionRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetHeatmapDefinitionRequestArgs Empty = new DashboardWidgetHeatmapDefinitionRequestArgs();

    /**
     * The query to use for this widget.
     * 
     */
    @Import(name="apmQuery")
    private @Nullable Output<DashboardWidgetHeatmapDefinitionRequestApmQueryArgs> apmQuery;

    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<Output<DashboardWidgetHeatmapDefinitionRequestApmQueryArgs>> apmQuery() {
        return Optional.ofNullable(this.apmQuery);
    }

    @Import(name="formulas")
    private @Nullable Output<List<DashboardWidgetHeatmapDefinitionRequestFormulaArgs>> formulas;

    public Optional<Output<List<DashboardWidgetHeatmapDefinitionRequestFormulaArgs>>> formulas() {
        return Optional.ofNullable(this.formulas);
    }

    /**
     * The query to use for this widget.
     * 
     */
    @Import(name="logQuery")
    private @Nullable Output<DashboardWidgetHeatmapDefinitionRequestLogQueryArgs> logQuery;

    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<Output<DashboardWidgetHeatmapDefinitionRequestLogQueryArgs>> logQuery() {
        return Optional.ofNullable(this.logQuery);
    }

    /**
     * The process query to use in the widget. The structure of this block is described below.
     * 
     */
    @Import(name="processQuery")
    private @Nullable Output<DashboardWidgetHeatmapDefinitionRequestProcessQueryArgs> processQuery;

    /**
     * @return The process query to use in the widget. The structure of this block is described below.
     * 
     */
    public Optional<Output<DashboardWidgetHeatmapDefinitionRequestProcessQueryArgs>> processQuery() {
        return Optional.ofNullable(this.processQuery);
    }

    /**
     * The metric query to use for this widget.
     * 
     */
    @Import(name="q")
    private @Nullable Output<String> q;

    /**
     * @return The metric query to use for this widget.
     * 
     */
    public Optional<Output<String>> q() {
        return Optional.ofNullable(this.q);
    }

    @Import(name="queries")
    private @Nullable Output<List<DashboardWidgetHeatmapDefinitionRequestQueryArgs>> queries;

    public Optional<Output<List<DashboardWidgetHeatmapDefinitionRequestQueryArgs>>> queries() {
        return Optional.ofNullable(this.queries);
    }

    /**
     * The query to use for this widget.
     * 
     */
    @Import(name="rumQuery")
    private @Nullable Output<DashboardWidgetHeatmapDefinitionRequestRumQueryArgs> rumQuery;

    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<Output<DashboardWidgetHeatmapDefinitionRequestRumQueryArgs>> rumQuery() {
        return Optional.ofNullable(this.rumQuery);
    }

    /**
     * The query to use for this widget.
     * 
     */
    @Import(name="securityQuery")
    private @Nullable Output<DashboardWidgetHeatmapDefinitionRequestSecurityQueryArgs> securityQuery;

    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<Output<DashboardWidgetHeatmapDefinitionRequestSecurityQueryArgs>> securityQuery() {
        return Optional.ofNullable(this.securityQuery);
    }

    /**
     * The style of the widget graph. One nested block is allowed using the structure below.
     * 
     */
    @Import(name="style")
    private @Nullable Output<DashboardWidgetHeatmapDefinitionRequestStyleArgs> style;

    /**
     * @return The style of the widget graph. One nested block is allowed using the structure below.
     * 
     */
    public Optional<Output<DashboardWidgetHeatmapDefinitionRequestStyleArgs>> style() {
        return Optional.ofNullable(this.style);
    }

    private DashboardWidgetHeatmapDefinitionRequestArgs() {}

    private DashboardWidgetHeatmapDefinitionRequestArgs(DashboardWidgetHeatmapDefinitionRequestArgs $) {
        this.apmQuery = $.apmQuery;
        this.formulas = $.formulas;
        this.logQuery = $.logQuery;
        this.processQuery = $.processQuery;
        this.q = $.q;
        this.queries = $.queries;
        this.rumQuery = $.rumQuery;
        this.securityQuery = $.securityQuery;
        this.style = $.style;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetHeatmapDefinitionRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetHeatmapDefinitionRequestArgs $;

        public Builder() {
            $ = new DashboardWidgetHeatmapDefinitionRequestArgs();
        }

        public Builder(DashboardWidgetHeatmapDefinitionRequestArgs defaults) {
            $ = new DashboardWidgetHeatmapDefinitionRequestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apmQuery The query to use for this widget.
         * 
         * @return builder
         * 
         */
        public Builder apmQuery(@Nullable Output<DashboardWidgetHeatmapDefinitionRequestApmQueryArgs> apmQuery) {
            $.apmQuery = apmQuery;
            return this;
        }

        /**
         * @param apmQuery The query to use for this widget.
         * 
         * @return builder
         * 
         */
        public Builder apmQuery(DashboardWidgetHeatmapDefinitionRequestApmQueryArgs apmQuery) {
            return apmQuery(Output.of(apmQuery));
        }

        public Builder formulas(@Nullable Output<List<DashboardWidgetHeatmapDefinitionRequestFormulaArgs>> formulas) {
            $.formulas = formulas;
            return this;
        }

        public Builder formulas(List<DashboardWidgetHeatmapDefinitionRequestFormulaArgs> formulas) {
            return formulas(Output.of(formulas));
        }

        public Builder formulas(DashboardWidgetHeatmapDefinitionRequestFormulaArgs... formulas) {
            return formulas(List.of(formulas));
        }

        /**
         * @param logQuery The query to use for this widget.
         * 
         * @return builder
         * 
         */
        public Builder logQuery(@Nullable Output<DashboardWidgetHeatmapDefinitionRequestLogQueryArgs> logQuery) {
            $.logQuery = logQuery;
            return this;
        }

        /**
         * @param logQuery The query to use for this widget.
         * 
         * @return builder
         * 
         */
        public Builder logQuery(DashboardWidgetHeatmapDefinitionRequestLogQueryArgs logQuery) {
            return logQuery(Output.of(logQuery));
        }

        /**
         * @param processQuery The process query to use in the widget. The structure of this block is described below.
         * 
         * @return builder
         * 
         */
        public Builder processQuery(@Nullable Output<DashboardWidgetHeatmapDefinitionRequestProcessQueryArgs> processQuery) {
            $.processQuery = processQuery;
            return this;
        }

        /**
         * @param processQuery The process query to use in the widget. The structure of this block is described below.
         * 
         * @return builder
         * 
         */
        public Builder processQuery(DashboardWidgetHeatmapDefinitionRequestProcessQueryArgs processQuery) {
            return processQuery(Output.of(processQuery));
        }

        /**
         * @param q The metric query to use for this widget.
         * 
         * @return builder
         * 
         */
        public Builder q(@Nullable Output<String> q) {
            $.q = q;
            return this;
        }

        /**
         * @param q The metric query to use for this widget.
         * 
         * @return builder
         * 
         */
        public Builder q(String q) {
            return q(Output.of(q));
        }

        public Builder queries(@Nullable Output<List<DashboardWidgetHeatmapDefinitionRequestQueryArgs>> queries) {
            $.queries = queries;
            return this;
        }

        public Builder queries(List<DashboardWidgetHeatmapDefinitionRequestQueryArgs> queries) {
            return queries(Output.of(queries));
        }

        public Builder queries(DashboardWidgetHeatmapDefinitionRequestQueryArgs... queries) {
            return queries(List.of(queries));
        }

        /**
         * @param rumQuery The query to use for this widget.
         * 
         * @return builder
         * 
         */
        public Builder rumQuery(@Nullable Output<DashboardWidgetHeatmapDefinitionRequestRumQueryArgs> rumQuery) {
            $.rumQuery = rumQuery;
            return this;
        }

        /**
         * @param rumQuery The query to use for this widget.
         * 
         * @return builder
         * 
         */
        public Builder rumQuery(DashboardWidgetHeatmapDefinitionRequestRumQueryArgs rumQuery) {
            return rumQuery(Output.of(rumQuery));
        }

        /**
         * @param securityQuery The query to use for this widget.
         * 
         * @return builder
         * 
         */
        public Builder securityQuery(@Nullable Output<DashboardWidgetHeatmapDefinitionRequestSecurityQueryArgs> securityQuery) {
            $.securityQuery = securityQuery;
            return this;
        }

        /**
         * @param securityQuery The query to use for this widget.
         * 
         * @return builder
         * 
         */
        public Builder securityQuery(DashboardWidgetHeatmapDefinitionRequestSecurityQueryArgs securityQuery) {
            return securityQuery(Output.of(securityQuery));
        }

        /**
         * @param style The style of the widget graph. One nested block is allowed using the structure below.
         * 
         * @return builder
         * 
         */
        public Builder style(@Nullable Output<DashboardWidgetHeatmapDefinitionRequestStyleArgs> style) {
            $.style = style;
            return this;
        }

        /**
         * @param style The style of the widget graph. One nested block is allowed using the structure below.
         * 
         * @return builder
         * 
         */
        public Builder style(DashboardWidgetHeatmapDefinitionRequestStyleArgs style) {
            return style(Output.of(style));
        }

        public DashboardWidgetHeatmapDefinitionRequestArgs build() {
            return $;
        }
    }

}
