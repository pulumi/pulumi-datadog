// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetCustomAllocationRuleStrategyAllocatedByAllocatedTag extends com.pulumi.resources.InvokeArgs {

    public static final GetCustomAllocationRuleStrategyAllocatedByAllocatedTag Empty = new GetCustomAllocationRuleStrategyAllocatedByAllocatedTag();

    /**
     * The tag key for cost allocation.
     * 
     */
    @Import(name="key", required=true)
    private String key;

    /**
     * @return The tag key for cost allocation.
     * 
     */
    public String key() {
        return this.key;
    }

    /**
     * The tag value used in the filter (for single-value conditions).
     * 
     */
    @Import(name="value", required=true)
    private String value;

    /**
     * @return The tag value used in the filter (for single-value conditions).
     * 
     */
    public String value() {
        return this.value;
    }

    private GetCustomAllocationRuleStrategyAllocatedByAllocatedTag() {}

    private GetCustomAllocationRuleStrategyAllocatedByAllocatedTag(GetCustomAllocationRuleStrategyAllocatedByAllocatedTag $) {
        this.key = $.key;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCustomAllocationRuleStrategyAllocatedByAllocatedTag defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCustomAllocationRuleStrategyAllocatedByAllocatedTag $;

        public Builder() {
            $ = new GetCustomAllocationRuleStrategyAllocatedByAllocatedTag();
        }

        public Builder(GetCustomAllocationRuleStrategyAllocatedByAllocatedTag defaults) {
            $ = new GetCustomAllocationRuleStrategyAllocatedByAllocatedTag(Objects.requireNonNull(defaults));
        }

        /**
         * @param key The tag key for cost allocation.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            $.key = key;
            return this;
        }

        /**
         * @param value The tag value used in the filter (for single-value conditions).
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            $.value = value;
            return this;
        }

        public GetCustomAllocationRuleStrategyAllocatedByAllocatedTag build() {
            if ($.key == null) {
                throw new MissingRequiredPropertyException("GetCustomAllocationRuleStrategyAllocatedByAllocatedTag", "key");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("GetCustomAllocationRuleStrategyAllocatedByAllocatedTag", "value");
            }
            return $;
        }
    }

}
