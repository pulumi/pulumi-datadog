// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.OnCallEscalationPolicyStepArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OnCallEscalationPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final OnCallEscalationPolicyState Empty = new OnCallEscalationPolicyState();

    /**
     * A human-readable name for the escalation policy.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A human-readable name for the escalation policy.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
     * 
     */
    @Import(name="resolvePageOnPolicyEnd")
    private @Nullable Output<Boolean> resolvePageOnPolicyEnd;

    /**
     * @return If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> resolvePageOnPolicyEnd() {
        return Optional.ofNullable(this.resolvePageOnPolicyEnd);
    }

    /**
     * If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
     * 
     */
    @Import(name="retries")
    private @Nullable Output<Integer> retries;

    /**
     * @return If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> retries() {
        return Optional.ofNullable(this.retries);
    }

    /**
     * List of steps for the escalation policy.
     * 
     */
    @Import(name="steps")
    private @Nullable Output<List<OnCallEscalationPolicyStepArgs>> steps;

    /**
     * @return List of steps for the escalation policy.
     * 
     */
    public Optional<Output<List<OnCallEscalationPolicyStepArgs>>> steps() {
        return Optional.ofNullable(this.steps);
    }

    /**
     * A list of team ids associated with the escalation policy.
     * 
     */
    @Import(name="teams")
    private @Nullable Output<List<String>> teams;

    /**
     * @return A list of team ids associated with the escalation policy.
     * 
     */
    public Optional<Output<List<String>>> teams() {
        return Optional.ofNullable(this.teams);
    }

    private OnCallEscalationPolicyState() {}

    private OnCallEscalationPolicyState(OnCallEscalationPolicyState $) {
        this.name = $.name;
        this.resolvePageOnPolicyEnd = $.resolvePageOnPolicyEnd;
        this.retries = $.retries;
        this.steps = $.steps;
        this.teams = $.teams;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnCallEscalationPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnCallEscalationPolicyState $;

        public Builder() {
            $ = new OnCallEscalationPolicyState();
        }

        public Builder(OnCallEscalationPolicyState defaults) {
            $ = new OnCallEscalationPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name A human-readable name for the escalation policy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A human-readable name for the escalation policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resolvePageOnPolicyEnd If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder resolvePageOnPolicyEnd(@Nullable Output<Boolean> resolvePageOnPolicyEnd) {
            $.resolvePageOnPolicyEnd = resolvePageOnPolicyEnd;
            return this;
        }

        /**
         * @param resolvePageOnPolicyEnd If true, pages will be automatically resolved if unacknowledged after the final step. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder resolvePageOnPolicyEnd(Boolean resolvePageOnPolicyEnd) {
            return resolvePageOnPolicyEnd(Output.of(resolvePageOnPolicyEnd));
        }

        /**
         * @param retries If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder retries(@Nullable Output<Integer> retries) {
            $.retries = retries;
            return this;
        }

        /**
         * @param retries If set, policy will be retried this many times after the final step. Must be in the range 0-10. Value must be between 0 and 10. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder retries(Integer retries) {
            return retries(Output.of(retries));
        }

        /**
         * @param steps List of steps for the escalation policy.
         * 
         * @return builder
         * 
         */
        public Builder steps(@Nullable Output<List<OnCallEscalationPolicyStepArgs>> steps) {
            $.steps = steps;
            return this;
        }

        /**
         * @param steps List of steps for the escalation policy.
         * 
         * @return builder
         * 
         */
        public Builder steps(List<OnCallEscalationPolicyStepArgs> steps) {
            return steps(Output.of(steps));
        }

        /**
         * @param steps List of steps for the escalation policy.
         * 
         * @return builder
         * 
         */
        public Builder steps(OnCallEscalationPolicyStepArgs... steps) {
            return steps(List.of(steps));
        }

        /**
         * @param teams A list of team ids associated with the escalation policy.
         * 
         * @return builder
         * 
         */
        public Builder teams(@Nullable Output<List<String>> teams) {
            $.teams = teams;
            return this;
        }

        /**
         * @param teams A list of team ids associated with the escalation policy.
         * 
         * @return builder
         * 
         */
        public Builder teams(List<String> teams) {
            return teams(Output.of(teams));
        }

        /**
         * @param teams A list of team ids associated with the escalation policy.
         * 
         * @return builder
         * 
         */
        public Builder teams(String... teams) {
            return teams(List.of(teams));
        }

        public OnCallEscalationPolicyState build() {
            return $;
        }
    }

}
