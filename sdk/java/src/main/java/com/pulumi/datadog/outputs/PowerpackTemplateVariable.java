// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class PowerpackTemplateVariable {
    /**
     * @return One or many default values for powerpack template variables on load. If more than one default is specified, they will be unioned together with `OR`.
     * 
     */
    private @Nullable List<String> defaults;
    /**
     * @return The name of the powerpack template variable.
     * 
     */
    private String name;

    private PowerpackTemplateVariable() {}
    /**
     * @return One or many default values for powerpack template variables on load. If more than one default is specified, they will be unioned together with `OR`.
     * 
     */
    public List<String> defaults() {
        return this.defaults == null ? List.of() : this.defaults;
    }
    /**
     * @return The name of the powerpack template variable.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PowerpackTemplateVariable defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> defaults;
        private String name;
        public Builder() {}
        public Builder(PowerpackTemplateVariable defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaults = defaults.defaults;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder defaults(@Nullable List<String> defaults) {

            this.defaults = defaults;
            return this;
        }
        public Builder defaults(String... defaults) {
            return defaults(List.of(defaults));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("PowerpackTemplateVariable", "name");
            }
            this.name = name;
            return this;
        }
        public PowerpackTemplateVariable build() {
            final var _resultValue = new PowerpackTemplateVariable();
            _resultValue.defaults = defaults;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
