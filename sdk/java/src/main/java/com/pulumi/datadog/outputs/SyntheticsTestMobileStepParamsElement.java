// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.SyntheticsTestMobileStepParamsElementRelativePosition;
import com.pulumi.datadog.outputs.SyntheticsTestMobileStepParamsElementUserLocator;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SyntheticsTestMobileStepParamsElement {
    private @Nullable String context;
    /**
     * @return Valid values are `native`, `web`.
     * 
     */
    private @Nullable String contextType;
    private @Nullable String elementDescription;
    private @Nullable Map<String,String> multiLocator;
    private @Nullable SyntheticsTestMobileStepParamsElementRelativePosition relativePosition;
    private @Nullable String textContent;
    private @Nullable SyntheticsTestMobileStepParamsElementUserLocator userLocator;
    private @Nullable String viewName;

    private SyntheticsTestMobileStepParamsElement() {}
    public Optional<String> context() {
        return Optional.ofNullable(this.context);
    }
    /**
     * @return Valid values are `native`, `web`.
     * 
     */
    public Optional<String> contextType() {
        return Optional.ofNullable(this.contextType);
    }
    public Optional<String> elementDescription() {
        return Optional.ofNullable(this.elementDescription);
    }
    public Map<String,String> multiLocator() {
        return this.multiLocator == null ? Map.of() : this.multiLocator;
    }
    public Optional<SyntheticsTestMobileStepParamsElementRelativePosition> relativePosition() {
        return Optional.ofNullable(this.relativePosition);
    }
    public Optional<String> textContent() {
        return Optional.ofNullable(this.textContent);
    }
    public Optional<SyntheticsTestMobileStepParamsElementUserLocator> userLocator() {
        return Optional.ofNullable(this.userLocator);
    }
    public Optional<String> viewName() {
        return Optional.ofNullable(this.viewName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SyntheticsTestMobileStepParamsElement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String context;
        private @Nullable String contextType;
        private @Nullable String elementDescription;
        private @Nullable Map<String,String> multiLocator;
        private @Nullable SyntheticsTestMobileStepParamsElementRelativePosition relativePosition;
        private @Nullable String textContent;
        private @Nullable SyntheticsTestMobileStepParamsElementUserLocator userLocator;
        private @Nullable String viewName;
        public Builder() {}
        public Builder(SyntheticsTestMobileStepParamsElement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.context = defaults.context;
    	      this.contextType = defaults.contextType;
    	      this.elementDescription = defaults.elementDescription;
    	      this.multiLocator = defaults.multiLocator;
    	      this.relativePosition = defaults.relativePosition;
    	      this.textContent = defaults.textContent;
    	      this.userLocator = defaults.userLocator;
    	      this.viewName = defaults.viewName;
        }

        @CustomType.Setter
        public Builder context(@Nullable String context) {

            this.context = context;
            return this;
        }
        @CustomType.Setter
        public Builder contextType(@Nullable String contextType) {

            this.contextType = contextType;
            return this;
        }
        @CustomType.Setter
        public Builder elementDescription(@Nullable String elementDescription) {

            this.elementDescription = elementDescription;
            return this;
        }
        @CustomType.Setter
        public Builder multiLocator(@Nullable Map<String,String> multiLocator) {

            this.multiLocator = multiLocator;
            return this;
        }
        @CustomType.Setter
        public Builder relativePosition(@Nullable SyntheticsTestMobileStepParamsElementRelativePosition relativePosition) {

            this.relativePosition = relativePosition;
            return this;
        }
        @CustomType.Setter
        public Builder textContent(@Nullable String textContent) {

            this.textContent = textContent;
            return this;
        }
        @CustomType.Setter
        public Builder userLocator(@Nullable SyntheticsTestMobileStepParamsElementUserLocator userLocator) {

            this.userLocator = userLocator;
            return this;
        }
        @CustomType.Setter
        public Builder viewName(@Nullable String viewName) {

            this.viewName = viewName;
            return this;
        }
        public SyntheticsTestMobileStepParamsElement build() {
            final var _resultValue = new SyntheticsTestMobileStepParamsElement();
            _resultValue.context = context;
            _resultValue.contextType = contextType;
            _resultValue.elementDescription = elementDescription;
            _resultValue.multiLocator = multiLocator;
            _resultValue.relativePosition = relativePosition;
            _resultValue.textContent = textContent;
            _resultValue.userLocator = userLocator;
            _resultValue.viewName = viewName;
            return _resultValue;
        }
    }
}
