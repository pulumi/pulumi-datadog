// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogsCustomPipelineProcessorDecoderProcessorArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsCustomPipelineProcessorDecoderProcessorArgs Empty = new LogsCustomPipelineProcessorDecoderProcessorArgs();

    /**
     * Encoding type: base64 or base16
     * 
     */
    @Import(name="binaryToTextEncoding", required=true)
    private Output<String> binaryToTextEncoding;

    /**
     * @return Encoding type: base64 or base16
     * 
     */
    public Output<String> binaryToTextEncoding() {
        return this.binaryToTextEncoding;
    }

    /**
     * Input representation: utf-8 or integer
     * 
     */
    @Import(name="inputRepresentation", required=true)
    private Output<String> inputRepresentation;

    /**
     * @return Input representation: utf-8 or integer
     * 
     */
    public Output<String> inputRepresentation() {
        return this.inputRepresentation;
    }

    /**
     * If the processor is enabled or not.
     * 
     */
    @Import(name="isEnabled")
    private @Nullable Output<Boolean> isEnabled;

    /**
     * @return If the processor is enabled or not.
     * 
     */
    public Optional<Output<Boolean>> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }

    /**
     * Name of the processor.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the processor.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Encoded message
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return Encoded message
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    /**
     * Decoded message
     * 
     */
    @Import(name="target", required=true)
    private Output<String> target;

    /**
     * @return Decoded message
     * 
     */
    public Output<String> target() {
        return this.target;
    }

    private LogsCustomPipelineProcessorDecoderProcessorArgs() {}

    private LogsCustomPipelineProcessorDecoderProcessorArgs(LogsCustomPipelineProcessorDecoderProcessorArgs $) {
        this.binaryToTextEncoding = $.binaryToTextEncoding;
        this.inputRepresentation = $.inputRepresentation;
        this.isEnabled = $.isEnabled;
        this.name = $.name;
        this.source = $.source;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsCustomPipelineProcessorDecoderProcessorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsCustomPipelineProcessorDecoderProcessorArgs $;

        public Builder() {
            $ = new LogsCustomPipelineProcessorDecoderProcessorArgs();
        }

        public Builder(LogsCustomPipelineProcessorDecoderProcessorArgs defaults) {
            $ = new LogsCustomPipelineProcessorDecoderProcessorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param binaryToTextEncoding Encoding type: base64 or base16
         * 
         * @return builder
         * 
         */
        public Builder binaryToTextEncoding(Output<String> binaryToTextEncoding) {
            $.binaryToTextEncoding = binaryToTextEncoding;
            return this;
        }

        /**
         * @param binaryToTextEncoding Encoding type: base64 or base16
         * 
         * @return builder
         * 
         */
        public Builder binaryToTextEncoding(String binaryToTextEncoding) {
            return binaryToTextEncoding(Output.of(binaryToTextEncoding));
        }

        /**
         * @param inputRepresentation Input representation: utf-8 or integer
         * 
         * @return builder
         * 
         */
        public Builder inputRepresentation(Output<String> inputRepresentation) {
            $.inputRepresentation = inputRepresentation;
            return this;
        }

        /**
         * @param inputRepresentation Input representation: utf-8 or integer
         * 
         * @return builder
         * 
         */
        public Builder inputRepresentation(String inputRepresentation) {
            return inputRepresentation(Output.of(inputRepresentation));
        }

        /**
         * @param isEnabled If the processor is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(@Nullable Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled If the processor is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param name Name of the processor.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the processor.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param source Encoded message
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Encoded message
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param target Decoded message
         * 
         * @return builder
         * 
         */
        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target Decoded message
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        public LogsCustomPipelineProcessorDecoderProcessorArgs build() {
            if ($.binaryToTextEncoding == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorDecoderProcessorArgs", "binaryToTextEncoding");
            }
            if ($.inputRepresentation == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorDecoderProcessorArgs", "inputRepresentation");
            }
            if ($.source == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorDecoderProcessorArgs", "source");
            }
            if ($.target == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorDecoderProcessorArgs", "target");
            }
            return $;
        }
    }

}
