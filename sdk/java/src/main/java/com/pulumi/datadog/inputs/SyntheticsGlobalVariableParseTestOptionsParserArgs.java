// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsGlobalVariableParseTestOptionsParserArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsGlobalVariableParseTestOptionsParserArgs Empty = new SyntheticsGlobalVariableParseTestOptionsParserArgs();

    /**
     * Type of parser to extract the value. Valid values are `raw`, `json_path`, `regex`, `x_path`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of parser to extract the value. Valid values are `raw`, `json_path`, `regex`, `x_path`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * Value for the parser to use, required for type `json_path` or `regex`.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Value for the parser to use, required for type `json_path` or `regex`.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private SyntheticsGlobalVariableParseTestOptionsParserArgs() {}

    private SyntheticsGlobalVariableParseTestOptionsParserArgs(SyntheticsGlobalVariableParseTestOptionsParserArgs $) {
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsGlobalVariableParseTestOptionsParserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsGlobalVariableParseTestOptionsParserArgs $;

        public Builder() {
            $ = new SyntheticsGlobalVariableParseTestOptionsParserArgs();
        }

        public Builder(SyntheticsGlobalVariableParseTestOptionsParserArgs defaults) {
            $ = new SyntheticsGlobalVariableParseTestOptionsParserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type Type of parser to extract the value. Valid values are `raw`, `json_path`, `regex`, `x_path`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of parser to extract the value. Valid values are `raw`, `json_path`, `regex`, `x_path`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value Value for the parser to use, required for type `json_path` or `regex`.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value for the parser to use, required for type `json_path` or `regex`.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public SyntheticsGlobalVariableParseTestOptionsParserArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
