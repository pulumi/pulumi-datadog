// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.CloudConfigurationRuleArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.CloudConfigurationRuleState;
import com.pulumi.datadog.outputs.CloudConfigurationRuleFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Datadog Cloud Configuration Rule resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.CloudConfigurationRule;
 * import com.pulumi.datadog.CloudConfigurationRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myrule = new CloudConfigurationRule("myrule", CloudConfigurationRuleArgs.builder()        
 *             .name("My cloud configuration rule")
 *             .message("Rule has triggered")
 *             .enabled(true)
 *             .policy("""
 * package datadog
 * 
 * import data.datadog.output as dd_output
 * 
 * import future.keywords.contains
 * import future.keywords.if
 * import future.keywords.in
 * 
 * eval(resource) = "skip" if {
 *     # Logic that evaluates to true if the resource should be skipped
 *     true
 * } else = "pass" {
 *     # Logic that evaluates to true if the resource is compliant
 *     true
 * } else = "fail" {
 *     # Logic that evaluates to true if the resource is not compliant
 *     true
 * }
 * 
 * # This part remains unchanged for all rules
 * results contains result if {
 *     some resource in input.resources[input.main_resource_type]
 *     result := dd_output.format(resource, eval(resource))
 * }
 *             """)
 *             .resourceType("aws_s3_bucket")
 *             .relatedResourceTypes()
 *             .severity("high")
 *             .groupBies("{@literal @}resource")
 *             .notifications("{@literal @}channel")
 *             .tags("some:tag")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Security monitoring rules can be imported using ID, e.g.
 * 
 * ```sh
 * $ pulumi import datadog:index/cloudConfigurationRule:CloudConfigurationRule my_rule m0o-hto-lkb
 * ```
 * 
 */
@ResourceType(type="datadog:index/cloudConfigurationRule:CloudConfigurationRule")
public class CloudConfigurationRule extends com.pulumi.resources.CustomResource {
    /**
     * Whether the cloud configuration rule is enabled.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return Whether the cloud configuration rule is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * Additional queries to filter matched events before they are processed. Defaults to empty list
     * 
     */
    @Export(name="filters", refs={List.class,CloudConfigurationRuleFilter.class}, tree="[0,1]")
    private Output</* @Nullable */ List<CloudConfigurationRuleFilter>> filters;

    /**
     * @return Additional queries to filter matched events before they are processed. Defaults to empty list
     * 
     */
    public Output<Optional<List<CloudConfigurationRuleFilter>>> filters() {
        return Codegen.optional(this.filters);
    }
    /**
     * Defaults to empty list. This function will be deprecated soon. Use the notification rules function instead. Fields to group by when generating signals, e.g.{@literal @}resource.
     * 
     */
    @Export(name="groupBies", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> groupBies;

    /**
     * @return Defaults to empty list. This function will be deprecated soon. Use the notification rules function instead. Fields to group by when generating signals, e.g.{@literal @}resource.
     * 
     */
    public Output<Optional<List<String>>> groupBies() {
        return Codegen.optional(this.groupBies);
    }
    /**
     * The message associated to the rule that will be shown in findings and signals.
     * 
     */
    @Export(name="message", refs={String.class}, tree="[0]")
    private Output<String> message;

    /**
     * @return The message associated to the rule that will be shown in findings and signals.
     * 
     */
    public Output<String> message() {
        return this.message;
    }
    /**
     * The name of the cloud configuration rule.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the cloud configuration rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * This function will be deprecated soon. Use the notification rules function instead. Notification targets for signals. Defaults to empty list.
     * 
     */
    @Export(name="notifications", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> notifications;

    /**
     * @return This function will be deprecated soon. Use the notification rules function instead. Notification targets for signals. Defaults to empty list.
     * 
     */
    public Output<Optional<List<String>>> notifications() {
        return Codegen.optional(this.notifications);
    }
    /**
     * Policy written in Rego format.
     * 
     */
    @Export(name="policy", refs={String.class}, tree="[0]")
    private Output<String> policy;

    /**
     * @return Policy written in Rego format.
     * 
     */
    public Output<String> policy() {
        return this.policy;
    }
    /**
     * Related resource types to be checked by the rule. Defaults to empty list.
     * 
     */
    @Export(name="relatedResourceTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> relatedResourceTypes;

    /**
     * @return Related resource types to be checked by the rule. Defaults to empty list.
     * 
     */
    public Output<Optional<List<String>>> relatedResourceTypes() {
        return Codegen.optional(this.relatedResourceTypes);
    }
    /**
     * Main resource type to be checked by the rule.
     * 
     */
    @Export(name="resourceType", refs={String.class}, tree="[0]")
    private Output<String> resourceType;

    /**
     * @return Main resource type to be checked by the rule.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }
    /**
     * Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.
     * 
     */
    @Export(name="severity", refs={String.class}, tree="[0]")
    private Output<String> severity;

    /**
     * @return Severity of the rule and associated signals. Valid values are `info`, `low`, `medium`, `high`, `critical`.
     * 
     */
    public Output<String> severity() {
        return this.severity;
    }
    /**
     * Tags of the rule, propagated to findings and signals. Defaults to empty list.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags of the rule, propagated to findings and signals. Defaults to empty list.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CloudConfigurationRule(String name) {
        this(name, CloudConfigurationRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CloudConfigurationRule(String name, CloudConfigurationRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CloudConfigurationRule(String name, CloudConfigurationRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/cloudConfigurationRule:CloudConfigurationRule", name, args == null ? CloudConfigurationRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CloudConfigurationRule(String name, Output<String> id, @Nullable CloudConfigurationRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/cloudConfigurationRule:CloudConfigurationRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CloudConfigurationRule get(String name, Output<String> id, @Nullable CloudConfigurationRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CloudConfigurationRule(name, id, state, options);
    }
}
