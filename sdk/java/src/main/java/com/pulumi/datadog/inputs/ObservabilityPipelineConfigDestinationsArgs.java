// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsAmazonOpensearchArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsAmazonS3Args;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsAmazonSecurityLakeArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsAzureStorageArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsDatadogLogArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsElasticsearchArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsGoogleChronicleArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsGoogleCloudStorageArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsGooglePubsubArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsMicrosoftSentinelArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsNewRelicArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsOpensearchArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsRsyslogArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsSentinelOneArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsSocketArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsSplunkHecArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsSumoLogicArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsSyslogNgArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigDestinationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigDestinationsArgs Empty = new ObservabilityPipelineConfigDestinationsArgs();

    /**
     * The `amazonOpensearch` destination writes logs to Amazon OpenSearch.
     * 
     */
    @Import(name="amazonOpensearches")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsAmazonOpensearchArgs>> amazonOpensearches;

    /**
     * @return The `amazonOpensearch` destination writes logs to Amazon OpenSearch.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsAmazonOpensearchArgs>>> amazonOpensearches() {
        return Optional.ofNullable(this.amazonOpensearches);
    }

    /**
     * The `amazonS3` destination sends your logs in Datadog-rehydratable format to an Amazon S3 bucket for archiving.
     * 
     */
    @Import(name="amazonS3s")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsAmazonS3Args>> amazonS3s;

    /**
     * @return The `amazonS3` destination sends your logs in Datadog-rehydratable format to an Amazon S3 bucket for archiving.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsAmazonS3Args>>> amazonS3s() {
        return Optional.ofNullable(this.amazonS3s);
    }

    /**
     * The `amazonSecurityLake` destination sends your logs to Amazon Security Lake.
     * 
     */
    @Import(name="amazonSecurityLakes")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsAmazonSecurityLakeArgs>> amazonSecurityLakes;

    /**
     * @return The `amazonSecurityLake` destination sends your logs to Amazon Security Lake.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsAmazonSecurityLakeArgs>>> amazonSecurityLakes() {
        return Optional.ofNullable(this.amazonSecurityLakes);
    }

    /**
     * The `azureStorage` destination forwards logs to an Azure Blob Storage container.
     * 
     */
    @Import(name="azureStorages")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsAzureStorageArgs>> azureStorages;

    /**
     * @return The `azureStorage` destination forwards logs to an Azure Blob Storage container.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsAzureStorageArgs>>> azureStorages() {
        return Optional.ofNullable(this.azureStorages);
    }

    /**
     * The `crowdstrikeNextGenSiem` destination forwards logs to CrowdStrike Next Gen SIEM.
     * 
     */
    @Import(name="crowdstrikeNextGenSiems")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemArgs>> crowdstrikeNextGenSiems;

    /**
     * @return The `crowdstrikeNextGenSiem` destination forwards logs to CrowdStrike Next Gen SIEM.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemArgs>>> crowdstrikeNextGenSiems() {
        return Optional.ofNullable(this.crowdstrikeNextGenSiems);
    }

    /**
     * The `datadogLogs` destination forwards logs to Datadog Log Management.
     * 
     */
    @Import(name="datadogLogs")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsDatadogLogArgs>> datadogLogs;

    /**
     * @return The `datadogLogs` destination forwards logs to Datadog Log Management.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsDatadogLogArgs>>> datadogLogs() {
        return Optional.ofNullable(this.datadogLogs);
    }

    /**
     * The `elasticsearch` destination writes logs to an Elasticsearch cluster.
     * 
     */
    @Import(name="elasticsearches")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsElasticsearchArgs>> elasticsearches;

    /**
     * @return The `elasticsearch` destination writes logs to an Elasticsearch cluster.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsElasticsearchArgs>>> elasticsearches() {
        return Optional.ofNullable(this.elasticsearches);
    }

    /**
     * The `googleChronicle` destination sends logs to Google Chronicle.
     * 
     */
    @Import(name="googleChronicles")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsGoogleChronicleArgs>> googleChronicles;

    /**
     * @return The `googleChronicle` destination sends logs to Google Chronicle.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsGoogleChronicleArgs>>> googleChronicles() {
        return Optional.ofNullable(this.googleChronicles);
    }

    /**
     * The `googleCloudStorage` destination stores logs in a Google Cloud Storage (GCS) bucket.
     * 
     */
    @Import(name="googleCloudStorages")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsGoogleCloudStorageArgs>> googleCloudStorages;

    /**
     * @return The `googleCloudStorage` destination stores logs in a Google Cloud Storage (GCS) bucket.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsGoogleCloudStorageArgs>>> googleCloudStorages() {
        return Optional.ofNullable(this.googleCloudStorages);
    }

    /**
     * The `googlePubsub` destination publishes logs to a Google Cloud Pub/Sub topic.
     * 
     */
    @Import(name="googlePubsubs")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsGooglePubsubArgs>> googlePubsubs;

    /**
     * @return The `googlePubsub` destination publishes logs to a Google Cloud Pub/Sub topic.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsGooglePubsubArgs>>> googlePubsubs() {
        return Optional.ofNullable(this.googlePubsubs);
    }

    /**
     * The `microsoftSentinel` destination forwards logs to Microsoft Sentinel.
     * 
     */
    @Import(name="microsoftSentinels")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsMicrosoftSentinelArgs>> microsoftSentinels;

    /**
     * @return The `microsoftSentinel` destination forwards logs to Microsoft Sentinel.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsMicrosoftSentinelArgs>>> microsoftSentinels() {
        return Optional.ofNullable(this.microsoftSentinels);
    }

    /**
     * The `newRelic` destination sends logs to the New Relic platform.
     * 
     */
    @Import(name="newRelics")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsNewRelicArgs>> newRelics;

    /**
     * @return The `newRelic` destination sends logs to the New Relic platform.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsNewRelicArgs>>> newRelics() {
        return Optional.ofNullable(this.newRelics);
    }

    /**
     * The `opensearch` destination writes logs to an OpenSearch cluster.
     * 
     */
    @Import(name="opensearches")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsOpensearchArgs>> opensearches;

    /**
     * @return The `opensearch` destination writes logs to an OpenSearch cluster.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsOpensearchArgs>>> opensearches() {
        return Optional.ofNullable(this.opensearches);
    }

    /**
     * The `rsyslog` destination forwards logs to an external `rsyslog` server over TCP or UDP using the syslog protocol.
     * 
     */
    @Import(name="rsyslogs")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsRsyslogArgs>> rsyslogs;

    /**
     * @return The `rsyslog` destination forwards logs to an external `rsyslog` server over TCP or UDP using the syslog protocol.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsRsyslogArgs>>> rsyslogs() {
        return Optional.ofNullable(this.rsyslogs);
    }

    /**
     * The `sentinelOne` destination sends logs to SentinelOne.
     * 
     */
    @Import(name="sentinelOnes")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsSentinelOneArgs>> sentinelOnes;

    /**
     * @return The `sentinelOne` destination sends logs to SentinelOne.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsSentinelOneArgs>>> sentinelOnes() {
        return Optional.ofNullable(this.sentinelOnes);
    }

    /**
     * The `socket` destination sends logs over TCP or UDP to a remote server.
     * 
     */
    @Import(name="sockets")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsSocketArgs>> sockets;

    /**
     * @return The `socket` destination sends logs over TCP or UDP to a remote server.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsSocketArgs>>> sockets() {
        return Optional.ofNullable(this.sockets);
    }

    /**
     * The `splunkHec` destination forwards logs to Splunk using the HTTP Event Collector (HEC).
     * 
     */
    @Import(name="splunkHecs")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsSplunkHecArgs>> splunkHecs;

    /**
     * @return The `splunkHec` destination forwards logs to Splunk using the HTTP Event Collector (HEC).
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsSplunkHecArgs>>> splunkHecs() {
        return Optional.ofNullable(this.splunkHecs);
    }

    /**
     * The `sumoLogic` destination forwards logs to Sumo Logic.
     * 
     */
    @Import(name="sumoLogics")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsSumoLogicArgs>> sumoLogics;

    /**
     * @return The `sumoLogic` destination forwards logs to Sumo Logic.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsSumoLogicArgs>>> sumoLogics() {
        return Optional.ofNullable(this.sumoLogics);
    }

    /**
     * The `syslogNg` destination forwards logs to an external `syslog-ng` server over TCP or UDP using the syslog protocol.
     * 
     */
    @Import(name="syslogNgs")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsSyslogNgArgs>> syslogNgs;

    /**
     * @return The `syslogNg` destination forwards logs to an external `syslog-ng` server over TCP or UDP using the syslog protocol.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsSyslogNgArgs>>> syslogNgs() {
        return Optional.ofNullable(this.syslogNgs);
    }

    private ObservabilityPipelineConfigDestinationsArgs() {}

    private ObservabilityPipelineConfigDestinationsArgs(ObservabilityPipelineConfigDestinationsArgs $) {
        this.amazonOpensearches = $.amazonOpensearches;
        this.amazonS3s = $.amazonS3s;
        this.amazonSecurityLakes = $.amazonSecurityLakes;
        this.azureStorages = $.azureStorages;
        this.crowdstrikeNextGenSiems = $.crowdstrikeNextGenSiems;
        this.datadogLogs = $.datadogLogs;
        this.elasticsearches = $.elasticsearches;
        this.googleChronicles = $.googleChronicles;
        this.googleCloudStorages = $.googleCloudStorages;
        this.googlePubsubs = $.googlePubsubs;
        this.microsoftSentinels = $.microsoftSentinels;
        this.newRelics = $.newRelics;
        this.opensearches = $.opensearches;
        this.rsyslogs = $.rsyslogs;
        this.sentinelOnes = $.sentinelOnes;
        this.sockets = $.sockets;
        this.splunkHecs = $.splunkHecs;
        this.sumoLogics = $.sumoLogics;
        this.syslogNgs = $.syslogNgs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigDestinationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigDestinationsArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigDestinationsArgs();
        }

        public Builder(ObservabilityPipelineConfigDestinationsArgs defaults) {
            $ = new ObservabilityPipelineConfigDestinationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param amazonOpensearches The `amazonOpensearch` destination writes logs to Amazon OpenSearch.
         * 
         * @return builder
         * 
         */
        public Builder amazonOpensearches(@Nullable Output<List<ObservabilityPipelineConfigDestinationsAmazonOpensearchArgs>> amazonOpensearches) {
            $.amazonOpensearches = amazonOpensearches;
            return this;
        }

        /**
         * @param amazonOpensearches The `amazonOpensearch` destination writes logs to Amazon OpenSearch.
         * 
         * @return builder
         * 
         */
        public Builder amazonOpensearches(List<ObservabilityPipelineConfigDestinationsAmazonOpensearchArgs> amazonOpensearches) {
            return amazonOpensearches(Output.of(amazonOpensearches));
        }

        /**
         * @param amazonOpensearches The `amazonOpensearch` destination writes logs to Amazon OpenSearch.
         * 
         * @return builder
         * 
         */
        public Builder amazonOpensearches(ObservabilityPipelineConfigDestinationsAmazonOpensearchArgs... amazonOpensearches) {
            return amazonOpensearches(List.of(amazonOpensearches));
        }

        /**
         * @param amazonS3s The `amazonS3` destination sends your logs in Datadog-rehydratable format to an Amazon S3 bucket for archiving.
         * 
         * @return builder
         * 
         */
        public Builder amazonS3s(@Nullable Output<List<ObservabilityPipelineConfigDestinationsAmazonS3Args>> amazonS3s) {
            $.amazonS3s = amazonS3s;
            return this;
        }

        /**
         * @param amazonS3s The `amazonS3` destination sends your logs in Datadog-rehydratable format to an Amazon S3 bucket for archiving.
         * 
         * @return builder
         * 
         */
        public Builder amazonS3s(List<ObservabilityPipelineConfigDestinationsAmazonS3Args> amazonS3s) {
            return amazonS3s(Output.of(amazonS3s));
        }

        /**
         * @param amazonS3s The `amazonS3` destination sends your logs in Datadog-rehydratable format to an Amazon S3 bucket for archiving.
         * 
         * @return builder
         * 
         */
        public Builder amazonS3s(ObservabilityPipelineConfigDestinationsAmazonS3Args... amazonS3s) {
            return amazonS3s(List.of(amazonS3s));
        }

        /**
         * @param amazonSecurityLakes The `amazonSecurityLake` destination sends your logs to Amazon Security Lake.
         * 
         * @return builder
         * 
         */
        public Builder amazonSecurityLakes(@Nullable Output<List<ObservabilityPipelineConfigDestinationsAmazonSecurityLakeArgs>> amazonSecurityLakes) {
            $.amazonSecurityLakes = amazonSecurityLakes;
            return this;
        }

        /**
         * @param amazonSecurityLakes The `amazonSecurityLake` destination sends your logs to Amazon Security Lake.
         * 
         * @return builder
         * 
         */
        public Builder amazonSecurityLakes(List<ObservabilityPipelineConfigDestinationsAmazonSecurityLakeArgs> amazonSecurityLakes) {
            return amazonSecurityLakes(Output.of(amazonSecurityLakes));
        }

        /**
         * @param amazonSecurityLakes The `amazonSecurityLake` destination sends your logs to Amazon Security Lake.
         * 
         * @return builder
         * 
         */
        public Builder amazonSecurityLakes(ObservabilityPipelineConfigDestinationsAmazonSecurityLakeArgs... amazonSecurityLakes) {
            return amazonSecurityLakes(List.of(amazonSecurityLakes));
        }

        /**
         * @param azureStorages The `azureStorage` destination forwards logs to an Azure Blob Storage container.
         * 
         * @return builder
         * 
         */
        public Builder azureStorages(@Nullable Output<List<ObservabilityPipelineConfigDestinationsAzureStorageArgs>> azureStorages) {
            $.azureStorages = azureStorages;
            return this;
        }

        /**
         * @param azureStorages The `azureStorage` destination forwards logs to an Azure Blob Storage container.
         * 
         * @return builder
         * 
         */
        public Builder azureStorages(List<ObservabilityPipelineConfigDestinationsAzureStorageArgs> azureStorages) {
            return azureStorages(Output.of(azureStorages));
        }

        /**
         * @param azureStorages The `azureStorage` destination forwards logs to an Azure Blob Storage container.
         * 
         * @return builder
         * 
         */
        public Builder azureStorages(ObservabilityPipelineConfigDestinationsAzureStorageArgs... azureStorages) {
            return azureStorages(List.of(azureStorages));
        }

        /**
         * @param crowdstrikeNextGenSiems The `crowdstrikeNextGenSiem` destination forwards logs to CrowdStrike Next Gen SIEM.
         * 
         * @return builder
         * 
         */
        public Builder crowdstrikeNextGenSiems(@Nullable Output<List<ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemArgs>> crowdstrikeNextGenSiems) {
            $.crowdstrikeNextGenSiems = crowdstrikeNextGenSiems;
            return this;
        }

        /**
         * @param crowdstrikeNextGenSiems The `crowdstrikeNextGenSiem` destination forwards logs to CrowdStrike Next Gen SIEM.
         * 
         * @return builder
         * 
         */
        public Builder crowdstrikeNextGenSiems(List<ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemArgs> crowdstrikeNextGenSiems) {
            return crowdstrikeNextGenSiems(Output.of(crowdstrikeNextGenSiems));
        }

        /**
         * @param crowdstrikeNextGenSiems The `crowdstrikeNextGenSiem` destination forwards logs to CrowdStrike Next Gen SIEM.
         * 
         * @return builder
         * 
         */
        public Builder crowdstrikeNextGenSiems(ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemArgs... crowdstrikeNextGenSiems) {
            return crowdstrikeNextGenSiems(List.of(crowdstrikeNextGenSiems));
        }

        /**
         * @param datadogLogs The `datadogLogs` destination forwards logs to Datadog Log Management.
         * 
         * @return builder
         * 
         */
        public Builder datadogLogs(@Nullable Output<List<ObservabilityPipelineConfigDestinationsDatadogLogArgs>> datadogLogs) {
            $.datadogLogs = datadogLogs;
            return this;
        }

        /**
         * @param datadogLogs The `datadogLogs` destination forwards logs to Datadog Log Management.
         * 
         * @return builder
         * 
         */
        public Builder datadogLogs(List<ObservabilityPipelineConfigDestinationsDatadogLogArgs> datadogLogs) {
            return datadogLogs(Output.of(datadogLogs));
        }

        /**
         * @param datadogLogs The `datadogLogs` destination forwards logs to Datadog Log Management.
         * 
         * @return builder
         * 
         */
        public Builder datadogLogs(ObservabilityPipelineConfigDestinationsDatadogLogArgs... datadogLogs) {
            return datadogLogs(List.of(datadogLogs));
        }

        /**
         * @param elasticsearches The `elasticsearch` destination writes logs to an Elasticsearch cluster.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearches(@Nullable Output<List<ObservabilityPipelineConfigDestinationsElasticsearchArgs>> elasticsearches) {
            $.elasticsearches = elasticsearches;
            return this;
        }

        /**
         * @param elasticsearches The `elasticsearch` destination writes logs to an Elasticsearch cluster.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearches(List<ObservabilityPipelineConfigDestinationsElasticsearchArgs> elasticsearches) {
            return elasticsearches(Output.of(elasticsearches));
        }

        /**
         * @param elasticsearches The `elasticsearch` destination writes logs to an Elasticsearch cluster.
         * 
         * @return builder
         * 
         */
        public Builder elasticsearches(ObservabilityPipelineConfigDestinationsElasticsearchArgs... elasticsearches) {
            return elasticsearches(List.of(elasticsearches));
        }

        /**
         * @param googleChronicles The `googleChronicle` destination sends logs to Google Chronicle.
         * 
         * @return builder
         * 
         */
        public Builder googleChronicles(@Nullable Output<List<ObservabilityPipelineConfigDestinationsGoogleChronicleArgs>> googleChronicles) {
            $.googleChronicles = googleChronicles;
            return this;
        }

        /**
         * @param googleChronicles The `googleChronicle` destination sends logs to Google Chronicle.
         * 
         * @return builder
         * 
         */
        public Builder googleChronicles(List<ObservabilityPipelineConfigDestinationsGoogleChronicleArgs> googleChronicles) {
            return googleChronicles(Output.of(googleChronicles));
        }

        /**
         * @param googleChronicles The `googleChronicle` destination sends logs to Google Chronicle.
         * 
         * @return builder
         * 
         */
        public Builder googleChronicles(ObservabilityPipelineConfigDestinationsGoogleChronicleArgs... googleChronicles) {
            return googleChronicles(List.of(googleChronicles));
        }

        /**
         * @param googleCloudStorages The `googleCloudStorage` destination stores logs in a Google Cloud Storage (GCS) bucket.
         * 
         * @return builder
         * 
         */
        public Builder googleCloudStorages(@Nullable Output<List<ObservabilityPipelineConfigDestinationsGoogleCloudStorageArgs>> googleCloudStorages) {
            $.googleCloudStorages = googleCloudStorages;
            return this;
        }

        /**
         * @param googleCloudStorages The `googleCloudStorage` destination stores logs in a Google Cloud Storage (GCS) bucket.
         * 
         * @return builder
         * 
         */
        public Builder googleCloudStorages(List<ObservabilityPipelineConfigDestinationsGoogleCloudStorageArgs> googleCloudStorages) {
            return googleCloudStorages(Output.of(googleCloudStorages));
        }

        /**
         * @param googleCloudStorages The `googleCloudStorage` destination stores logs in a Google Cloud Storage (GCS) bucket.
         * 
         * @return builder
         * 
         */
        public Builder googleCloudStorages(ObservabilityPipelineConfigDestinationsGoogleCloudStorageArgs... googleCloudStorages) {
            return googleCloudStorages(List.of(googleCloudStorages));
        }

        /**
         * @param googlePubsubs The `googlePubsub` destination publishes logs to a Google Cloud Pub/Sub topic.
         * 
         * @return builder
         * 
         */
        public Builder googlePubsubs(@Nullable Output<List<ObservabilityPipelineConfigDestinationsGooglePubsubArgs>> googlePubsubs) {
            $.googlePubsubs = googlePubsubs;
            return this;
        }

        /**
         * @param googlePubsubs The `googlePubsub` destination publishes logs to a Google Cloud Pub/Sub topic.
         * 
         * @return builder
         * 
         */
        public Builder googlePubsubs(List<ObservabilityPipelineConfigDestinationsGooglePubsubArgs> googlePubsubs) {
            return googlePubsubs(Output.of(googlePubsubs));
        }

        /**
         * @param googlePubsubs The `googlePubsub` destination publishes logs to a Google Cloud Pub/Sub topic.
         * 
         * @return builder
         * 
         */
        public Builder googlePubsubs(ObservabilityPipelineConfigDestinationsGooglePubsubArgs... googlePubsubs) {
            return googlePubsubs(List.of(googlePubsubs));
        }

        /**
         * @param microsoftSentinels The `microsoftSentinel` destination forwards logs to Microsoft Sentinel.
         * 
         * @return builder
         * 
         */
        public Builder microsoftSentinels(@Nullable Output<List<ObservabilityPipelineConfigDestinationsMicrosoftSentinelArgs>> microsoftSentinels) {
            $.microsoftSentinels = microsoftSentinels;
            return this;
        }

        /**
         * @param microsoftSentinels The `microsoftSentinel` destination forwards logs to Microsoft Sentinel.
         * 
         * @return builder
         * 
         */
        public Builder microsoftSentinels(List<ObservabilityPipelineConfigDestinationsMicrosoftSentinelArgs> microsoftSentinels) {
            return microsoftSentinels(Output.of(microsoftSentinels));
        }

        /**
         * @param microsoftSentinels The `microsoftSentinel` destination forwards logs to Microsoft Sentinel.
         * 
         * @return builder
         * 
         */
        public Builder microsoftSentinels(ObservabilityPipelineConfigDestinationsMicrosoftSentinelArgs... microsoftSentinels) {
            return microsoftSentinels(List.of(microsoftSentinels));
        }

        /**
         * @param newRelics The `newRelic` destination sends logs to the New Relic platform.
         * 
         * @return builder
         * 
         */
        public Builder newRelics(@Nullable Output<List<ObservabilityPipelineConfigDestinationsNewRelicArgs>> newRelics) {
            $.newRelics = newRelics;
            return this;
        }

        /**
         * @param newRelics The `newRelic` destination sends logs to the New Relic platform.
         * 
         * @return builder
         * 
         */
        public Builder newRelics(List<ObservabilityPipelineConfigDestinationsNewRelicArgs> newRelics) {
            return newRelics(Output.of(newRelics));
        }

        /**
         * @param newRelics The `newRelic` destination sends logs to the New Relic platform.
         * 
         * @return builder
         * 
         */
        public Builder newRelics(ObservabilityPipelineConfigDestinationsNewRelicArgs... newRelics) {
            return newRelics(List.of(newRelics));
        }

        /**
         * @param opensearches The `opensearch` destination writes logs to an OpenSearch cluster.
         * 
         * @return builder
         * 
         */
        public Builder opensearches(@Nullable Output<List<ObservabilityPipelineConfigDestinationsOpensearchArgs>> opensearches) {
            $.opensearches = opensearches;
            return this;
        }

        /**
         * @param opensearches The `opensearch` destination writes logs to an OpenSearch cluster.
         * 
         * @return builder
         * 
         */
        public Builder opensearches(List<ObservabilityPipelineConfigDestinationsOpensearchArgs> opensearches) {
            return opensearches(Output.of(opensearches));
        }

        /**
         * @param opensearches The `opensearch` destination writes logs to an OpenSearch cluster.
         * 
         * @return builder
         * 
         */
        public Builder opensearches(ObservabilityPipelineConfigDestinationsOpensearchArgs... opensearches) {
            return opensearches(List.of(opensearches));
        }

        /**
         * @param rsyslogs The `rsyslog` destination forwards logs to an external `rsyslog` server over TCP or UDP using the syslog protocol.
         * 
         * @return builder
         * 
         */
        public Builder rsyslogs(@Nullable Output<List<ObservabilityPipelineConfigDestinationsRsyslogArgs>> rsyslogs) {
            $.rsyslogs = rsyslogs;
            return this;
        }

        /**
         * @param rsyslogs The `rsyslog` destination forwards logs to an external `rsyslog` server over TCP or UDP using the syslog protocol.
         * 
         * @return builder
         * 
         */
        public Builder rsyslogs(List<ObservabilityPipelineConfigDestinationsRsyslogArgs> rsyslogs) {
            return rsyslogs(Output.of(rsyslogs));
        }

        /**
         * @param rsyslogs The `rsyslog` destination forwards logs to an external `rsyslog` server over TCP or UDP using the syslog protocol.
         * 
         * @return builder
         * 
         */
        public Builder rsyslogs(ObservabilityPipelineConfigDestinationsRsyslogArgs... rsyslogs) {
            return rsyslogs(List.of(rsyslogs));
        }

        /**
         * @param sentinelOnes The `sentinelOne` destination sends logs to SentinelOne.
         * 
         * @return builder
         * 
         */
        public Builder sentinelOnes(@Nullable Output<List<ObservabilityPipelineConfigDestinationsSentinelOneArgs>> sentinelOnes) {
            $.sentinelOnes = sentinelOnes;
            return this;
        }

        /**
         * @param sentinelOnes The `sentinelOne` destination sends logs to SentinelOne.
         * 
         * @return builder
         * 
         */
        public Builder sentinelOnes(List<ObservabilityPipelineConfigDestinationsSentinelOneArgs> sentinelOnes) {
            return sentinelOnes(Output.of(sentinelOnes));
        }

        /**
         * @param sentinelOnes The `sentinelOne` destination sends logs to SentinelOne.
         * 
         * @return builder
         * 
         */
        public Builder sentinelOnes(ObservabilityPipelineConfigDestinationsSentinelOneArgs... sentinelOnes) {
            return sentinelOnes(List.of(sentinelOnes));
        }

        /**
         * @param sockets The `socket` destination sends logs over TCP or UDP to a remote server.
         * 
         * @return builder
         * 
         */
        public Builder sockets(@Nullable Output<List<ObservabilityPipelineConfigDestinationsSocketArgs>> sockets) {
            $.sockets = sockets;
            return this;
        }

        /**
         * @param sockets The `socket` destination sends logs over TCP or UDP to a remote server.
         * 
         * @return builder
         * 
         */
        public Builder sockets(List<ObservabilityPipelineConfigDestinationsSocketArgs> sockets) {
            return sockets(Output.of(sockets));
        }

        /**
         * @param sockets The `socket` destination sends logs over TCP or UDP to a remote server.
         * 
         * @return builder
         * 
         */
        public Builder sockets(ObservabilityPipelineConfigDestinationsSocketArgs... sockets) {
            return sockets(List.of(sockets));
        }

        /**
         * @param splunkHecs The `splunkHec` destination forwards logs to Splunk using the HTTP Event Collector (HEC).
         * 
         * @return builder
         * 
         */
        public Builder splunkHecs(@Nullable Output<List<ObservabilityPipelineConfigDestinationsSplunkHecArgs>> splunkHecs) {
            $.splunkHecs = splunkHecs;
            return this;
        }

        /**
         * @param splunkHecs The `splunkHec` destination forwards logs to Splunk using the HTTP Event Collector (HEC).
         * 
         * @return builder
         * 
         */
        public Builder splunkHecs(List<ObservabilityPipelineConfigDestinationsSplunkHecArgs> splunkHecs) {
            return splunkHecs(Output.of(splunkHecs));
        }

        /**
         * @param splunkHecs The `splunkHec` destination forwards logs to Splunk using the HTTP Event Collector (HEC).
         * 
         * @return builder
         * 
         */
        public Builder splunkHecs(ObservabilityPipelineConfigDestinationsSplunkHecArgs... splunkHecs) {
            return splunkHecs(List.of(splunkHecs));
        }

        /**
         * @param sumoLogics The `sumoLogic` destination forwards logs to Sumo Logic.
         * 
         * @return builder
         * 
         */
        public Builder sumoLogics(@Nullable Output<List<ObservabilityPipelineConfigDestinationsSumoLogicArgs>> sumoLogics) {
            $.sumoLogics = sumoLogics;
            return this;
        }

        /**
         * @param sumoLogics The `sumoLogic` destination forwards logs to Sumo Logic.
         * 
         * @return builder
         * 
         */
        public Builder sumoLogics(List<ObservabilityPipelineConfigDestinationsSumoLogicArgs> sumoLogics) {
            return sumoLogics(Output.of(sumoLogics));
        }

        /**
         * @param sumoLogics The `sumoLogic` destination forwards logs to Sumo Logic.
         * 
         * @return builder
         * 
         */
        public Builder sumoLogics(ObservabilityPipelineConfigDestinationsSumoLogicArgs... sumoLogics) {
            return sumoLogics(List.of(sumoLogics));
        }

        /**
         * @param syslogNgs The `syslogNg` destination forwards logs to an external `syslog-ng` server over TCP or UDP using the syslog protocol.
         * 
         * @return builder
         * 
         */
        public Builder syslogNgs(@Nullable Output<List<ObservabilityPipelineConfigDestinationsSyslogNgArgs>> syslogNgs) {
            $.syslogNgs = syslogNgs;
            return this;
        }

        /**
         * @param syslogNgs The `syslogNg` destination forwards logs to an external `syslog-ng` server over TCP or UDP using the syslog protocol.
         * 
         * @return builder
         * 
         */
        public Builder syslogNgs(List<ObservabilityPipelineConfigDestinationsSyslogNgArgs> syslogNgs) {
            return syslogNgs(Output.of(syslogNgs));
        }

        /**
         * @param syslogNgs The `syslogNg` destination forwards logs to an external `syslog-ng` server over TCP or UDP using the syslog protocol.
         * 
         * @return builder
         * 
         */
        public Builder syslogNgs(ObservabilityPipelineConfigDestinationsSyslogNgArgs... syslogNgs) {
            return syslogNgs(List.of(syslogNgs));
        }

        public ObservabilityPipelineConfigDestinationsArgs build() {
            return $;
        }
    }

}
