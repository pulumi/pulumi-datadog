// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DowntimeScheduleRecurringScheduleRecurrenceArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DowntimeScheduleRecurringScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DowntimeScheduleRecurringScheduleArgs Empty = new DowntimeScheduleRecurringScheduleArgs();

    @Import(name="recurrences")
    private @Nullable Output<List<DowntimeScheduleRecurringScheduleRecurrenceArgs>> recurrences;

    public Optional<Output<List<DowntimeScheduleRecurringScheduleRecurrenceArgs>>> recurrences() {
        return Optional.ofNullable(this.recurrences);
    }

    /**
     * The timezone in which to schedule the downtime.
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return The timezone in which to schedule the downtime.
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    private DowntimeScheduleRecurringScheduleArgs() {}

    private DowntimeScheduleRecurringScheduleArgs(DowntimeScheduleRecurringScheduleArgs $) {
        this.recurrences = $.recurrences;
        this.timezone = $.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DowntimeScheduleRecurringScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DowntimeScheduleRecurringScheduleArgs $;

        public Builder() {
            $ = new DowntimeScheduleRecurringScheduleArgs();
        }

        public Builder(DowntimeScheduleRecurringScheduleArgs defaults) {
            $ = new DowntimeScheduleRecurringScheduleArgs(Objects.requireNonNull(defaults));
        }

        public Builder recurrences(@Nullable Output<List<DowntimeScheduleRecurringScheduleRecurrenceArgs>> recurrences) {
            $.recurrences = recurrences;
            return this;
        }

        public Builder recurrences(List<DowntimeScheduleRecurringScheduleRecurrenceArgs> recurrences) {
            return recurrences(Output.of(recurrences));
        }

        public Builder recurrences(DowntimeScheduleRecurringScheduleRecurrenceArgs... recurrences) {
            return recurrences(List.of(recurrences));
        }

        /**
         * @param timezone The timezone in which to schedule the downtime.
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone The timezone in which to schedule the downtime.
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public DowntimeScheduleRecurringScheduleArgs build() {
            return $;
        }
    }

}
