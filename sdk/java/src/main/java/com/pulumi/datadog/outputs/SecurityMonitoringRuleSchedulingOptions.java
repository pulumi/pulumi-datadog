// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SecurityMonitoringRuleSchedulingOptions {
    /**
     * @return Schedule for the rule queries, written in RRULE syntax. See [RFC](https://icalendar.org/iCalendar-RFC-5545/3-8-5-3-recurrence-rule.html) for syntax reference.
     * 
     */
    private String rrule;
    /**
     * @return Start date for the schedule, in ISO 8601 format without timezone.
     * 
     */
    private String start;
    /**
     * @return Time zone of the start date, in the [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) format.
     * 
     */
    private String timezone;

    private SecurityMonitoringRuleSchedulingOptions() {}
    /**
     * @return Schedule for the rule queries, written in RRULE syntax. See [RFC](https://icalendar.org/iCalendar-RFC-5545/3-8-5-3-recurrence-rule.html) for syntax reference.
     * 
     */
    public String rrule() {
        return this.rrule;
    }
    /**
     * @return Start date for the schedule, in ISO 8601 format without timezone.
     * 
     */
    public String start() {
        return this.start;
    }
    /**
     * @return Time zone of the start date, in the [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) format.
     * 
     */
    public String timezone() {
        return this.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityMonitoringRuleSchedulingOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String rrule;
        private String start;
        private String timezone;
        public Builder() {}
        public Builder(SecurityMonitoringRuleSchedulingOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.rrule = defaults.rrule;
    	      this.start = defaults.start;
    	      this.timezone = defaults.timezone;
        }

        @CustomType.Setter
        public Builder rrule(String rrule) {
            if (rrule == null) {
              throw new MissingRequiredPropertyException("SecurityMonitoringRuleSchedulingOptions", "rrule");
            }
            this.rrule = rrule;
            return this;
        }
        @CustomType.Setter
        public Builder start(String start) {
            if (start == null) {
              throw new MissingRequiredPropertyException("SecurityMonitoringRuleSchedulingOptions", "start");
            }
            this.start = start;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(String timezone) {
            if (timezone == null) {
              throw new MissingRequiredPropertyException("SecurityMonitoringRuleSchedulingOptions", "timezone");
            }
            this.timezone = timezone;
            return this;
        }
        public SecurityMonitoringRuleSchedulingOptions build() {
            final var _resultValue = new SecurityMonitoringRuleSchedulingOptions();
            _resultValue.rrule = rrule;
            _resultValue.start = start;
            _resultValue.timezone = timezone;
            return _resultValue;
        }
    }
}
