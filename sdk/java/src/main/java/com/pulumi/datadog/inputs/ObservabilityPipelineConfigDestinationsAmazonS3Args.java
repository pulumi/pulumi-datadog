// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsAmazonS3AuthArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigDestinationsAmazonS3Args extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigDestinationsAmazonS3Args Empty = new ObservabilityPipelineConfigDestinationsAmazonS3Args();

    /**
     * AWS authentication credentials used for accessing AWS services. If omitted, the system&#39;s default credentials are used (for example, the IAM role and environment variables).
     * 
     */
    @Import(name="auth")
    private @Nullable Output<ObservabilityPipelineConfigDestinationsAmazonS3AuthArgs> auth;

    /**
     * @return AWS authentication credentials used for accessing AWS services. If omitted, the system&#39;s default credentials are used (for example, the IAM role and environment variables).
     * 
     */
    public Optional<Output<ObservabilityPipelineConfigDestinationsAmazonS3AuthArgs>> auth() {
        return Optional.ofNullable(this.auth);
    }

    /**
     * S3 bucket name.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return S3 bucket name.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * Unique identifier for the destination component.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Unique identifier for the destination component.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    @Import(name="inputs", required=true)
    private Output<List<String>> inputs;

    /**
     * @return A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    public Output<List<String>> inputs() {
        return this.inputs;
    }

    /**
     * Prefix for object keys.
     * 
     */
    @Import(name="keyPrefix", required=true)
    private Output<String> keyPrefix;

    /**
     * @return Prefix for object keys.
     * 
     */
    public Output<String> keyPrefix() {
        return this.keyPrefix;
    }

    /**
     * AWS region of the S3 bucket.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return AWS region of the S3 bucket.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * S3 storage class. Valid values are `STANDARD`, `REDUCED_REDUNDANCY`, `INTELLIGENT_TIERING`, `STANDARD_IA`, `EXPRESS_ONEZONE`, `ONEZONE_IA`, `GLACIER`, `GLACIER_IR`, `DEEP_ARCHIVE`.
     * 
     */
    @Import(name="storageClass", required=true)
    private Output<String> storageClass;

    /**
     * @return S3 storage class. Valid values are `STANDARD`, `REDUCED_REDUNDANCY`, `INTELLIGENT_TIERING`, `STANDARD_IA`, `EXPRESS_ONEZONE`, `ONEZONE_IA`, `GLACIER`, `GLACIER_IR`, `DEEP_ARCHIVE`.
     * 
     */
    public Output<String> storageClass() {
        return this.storageClass;
    }

    private ObservabilityPipelineConfigDestinationsAmazonS3Args() {}

    private ObservabilityPipelineConfigDestinationsAmazonS3Args(ObservabilityPipelineConfigDestinationsAmazonS3Args $) {
        this.auth = $.auth;
        this.bucket = $.bucket;
        this.id = $.id;
        this.inputs = $.inputs;
        this.keyPrefix = $.keyPrefix;
        this.region = $.region;
        this.storageClass = $.storageClass;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigDestinationsAmazonS3Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigDestinationsAmazonS3Args $;

        public Builder() {
            $ = new ObservabilityPipelineConfigDestinationsAmazonS3Args();
        }

        public Builder(ObservabilityPipelineConfigDestinationsAmazonS3Args defaults) {
            $ = new ObservabilityPipelineConfigDestinationsAmazonS3Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param auth AWS authentication credentials used for accessing AWS services. If omitted, the system&#39;s default credentials are used (for example, the IAM role and environment variables).
         * 
         * @return builder
         * 
         */
        public Builder auth(@Nullable Output<ObservabilityPipelineConfigDestinationsAmazonS3AuthArgs> auth) {
            $.auth = auth;
            return this;
        }

        /**
         * @param auth AWS authentication credentials used for accessing AWS services. If omitted, the system&#39;s default credentials are used (for example, the IAM role and environment variables).
         * 
         * @return builder
         * 
         */
        public Builder auth(ObservabilityPipelineConfigDestinationsAmazonS3AuthArgs auth) {
            return auth(Output.of(auth));
        }

        /**
         * @param bucket S3 bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket S3 bucket name.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param id Unique identifier for the destination component.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Unique identifier for the destination component.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param inputs A list of component IDs whose output is used as the `input` for this component.
         * 
         * @return builder
         * 
         */
        public Builder inputs(Output<List<String>> inputs) {
            $.inputs = inputs;
            return this;
        }

        /**
         * @param inputs A list of component IDs whose output is used as the `input` for this component.
         * 
         * @return builder
         * 
         */
        public Builder inputs(List<String> inputs) {
            return inputs(Output.of(inputs));
        }

        /**
         * @param inputs A list of component IDs whose output is used as the `input` for this component.
         * 
         * @return builder
         * 
         */
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }

        /**
         * @param keyPrefix Prefix for object keys.
         * 
         * @return builder
         * 
         */
        public Builder keyPrefix(Output<String> keyPrefix) {
            $.keyPrefix = keyPrefix;
            return this;
        }

        /**
         * @param keyPrefix Prefix for object keys.
         * 
         * @return builder
         * 
         */
        public Builder keyPrefix(String keyPrefix) {
            return keyPrefix(Output.of(keyPrefix));
        }

        /**
         * @param region AWS region of the S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region AWS region of the S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param storageClass S3 storage class. Valid values are `STANDARD`, `REDUCED_REDUNDANCY`, `INTELLIGENT_TIERING`, `STANDARD_IA`, `EXPRESS_ONEZONE`, `ONEZONE_IA`, `GLACIER`, `GLACIER_IR`, `DEEP_ARCHIVE`.
         * 
         * @return builder
         * 
         */
        public Builder storageClass(Output<String> storageClass) {
            $.storageClass = storageClass;
            return this;
        }

        /**
         * @param storageClass S3 storage class. Valid values are `STANDARD`, `REDUCED_REDUNDANCY`, `INTELLIGENT_TIERING`, `STANDARD_IA`, `EXPRESS_ONEZONE`, `ONEZONE_IA`, `GLACIER`, `GLACIER_IR`, `DEEP_ARCHIVE`.
         * 
         * @return builder
         * 
         */
        public Builder storageClass(String storageClass) {
            return storageClass(Output.of(storageClass));
        }

        public ObservabilityPipelineConfigDestinationsAmazonS3Args build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3Args", "bucket");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3Args", "id");
            }
            if ($.inputs == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3Args", "inputs");
            }
            if ($.keyPrefix == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3Args", "keyPrefix");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3Args", "region");
            }
            if ($.storageClass == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonS3Args", "storageClass");
            }
            return $;
        }
    }

}
