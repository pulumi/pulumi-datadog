// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTagPipelineRulesetRuleMapping {
    /**
     * @return The destination key for the mapping.
     * 
     */
    private String destinationKey;
    /**
     * @return Whether to apply the mapping only if the destination key doesn&#39;t exist.
     * 
     */
    private Boolean ifNotExists;
    /**
     * @return The source keys for the mapping.
     * 
     */
    private List<String> sourceKeys;

    private GetTagPipelineRulesetRuleMapping() {}
    /**
     * @return The destination key for the mapping.
     * 
     */
    public String destinationKey() {
        return this.destinationKey;
    }
    /**
     * @return Whether to apply the mapping only if the destination key doesn&#39;t exist.
     * 
     */
    public Boolean ifNotExists() {
        return this.ifNotExists;
    }
    /**
     * @return The source keys for the mapping.
     * 
     */
    public List<String> sourceKeys() {
        return this.sourceKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTagPipelineRulesetRuleMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String destinationKey;
        private Boolean ifNotExists;
        private List<String> sourceKeys;
        public Builder() {}
        public Builder(GetTagPipelineRulesetRuleMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationKey = defaults.destinationKey;
    	      this.ifNotExists = defaults.ifNotExists;
    	      this.sourceKeys = defaults.sourceKeys;
        }

        @CustomType.Setter
        public Builder destinationKey(String destinationKey) {
            if (destinationKey == null) {
              throw new MissingRequiredPropertyException("GetTagPipelineRulesetRuleMapping", "destinationKey");
            }
            this.destinationKey = destinationKey;
            return this;
        }
        @CustomType.Setter
        public Builder ifNotExists(Boolean ifNotExists) {
            if (ifNotExists == null) {
              throw new MissingRequiredPropertyException("GetTagPipelineRulesetRuleMapping", "ifNotExists");
            }
            this.ifNotExists = ifNotExists;
            return this;
        }
        @CustomType.Setter
        public Builder sourceKeys(List<String> sourceKeys) {
            if (sourceKeys == null) {
              throw new MissingRequiredPropertyException("GetTagPipelineRulesetRuleMapping", "sourceKeys");
            }
            this.sourceKeys = sourceKeys;
            return this;
        }
        public Builder sourceKeys(String... sourceKeys) {
            return sourceKeys(List.of(sourceKeys));
        }
        public GetTagPipelineRulesetRuleMapping build() {
            final var _resultValue = new GetTagPipelineRulesetRuleMapping();
            _resultValue.destinationKey = destinationKey;
            _resultValue.ifNotExists = ifNotExists;
            _resultValue.sourceKeys = sourceKeys;
            return _resultValue;
        }
    }
}
