// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetUserPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUserPlainArgs Empty = new GetUserPlainArgs();

    /**
     * When true, `filter` string is exact matched against the user&#39;s `email`, followed by `name` attribute.
     * 
     */
    @Import(name="exactMatch")
    private @Nullable Boolean exactMatch;

    /**
     * @return When true, `filter` string is exact matched against the user&#39;s `email`, followed by `name` attribute.
     * 
     */
    public Optional<Boolean> exactMatch() {
        return Optional.ofNullable(this.exactMatch);
    }

    /**
     * Filter all users by the given string.
     * 
     */
    @Import(name="filter", required=true)
    private String filter;

    /**
     * @return Filter all users by the given string.
     * 
     */
    public String filter() {
        return this.filter;
    }

    private GetUserPlainArgs() {}

    private GetUserPlainArgs(GetUserPlainArgs $) {
        this.exactMatch = $.exactMatch;
        this.filter = $.filter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUserPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUserPlainArgs $;

        public Builder() {
            $ = new GetUserPlainArgs();
        }

        public Builder(GetUserPlainArgs defaults) {
            $ = new GetUserPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exactMatch When true, `filter` string is exact matched against the user&#39;s `email`, followed by `name` attribute.
         * 
         * @return builder
         * 
         */
        public Builder exactMatch(@Nullable Boolean exactMatch) {
            $.exactMatch = exactMatch;
            return this;
        }

        /**
         * @param filter Filter all users by the given string.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            $.filter = filter;
            return this;
        }

        public GetUserPlainArgs build() {
            if ($.filter == null) {
                throw new MissingRequiredPropertyException("GetUserPlainArgs", "filter");
            }
            return $;
        }
    }

}
