// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTeamMembershipsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTeamMembershipsPlainArgs Empty = new GetTeamMembershipsPlainArgs();

    /**
     * Search query, can be user email or name.
     * 
     */
    @Import(name="filterKeyword")
    private @Nullable String filterKeyword;

    /**
     * @return Search query, can be user email or name.
     * 
     */
    public Optional<String> filterKeyword() {
        return Optional.ofNullable(this.filterKeyword);
    }

    /**
     * The team&#39;s identifier.
     * 
     */
    @Import(name="teamId", required=true)
    private String teamId;

    /**
     * @return The team&#39;s identifier.
     * 
     */
    public String teamId() {
        return this.teamId;
    }

    private GetTeamMembershipsPlainArgs() {}

    private GetTeamMembershipsPlainArgs(GetTeamMembershipsPlainArgs $) {
        this.filterKeyword = $.filterKeyword;
        this.teamId = $.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTeamMembershipsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTeamMembershipsPlainArgs $;

        public Builder() {
            $ = new GetTeamMembershipsPlainArgs();
        }

        public Builder(GetTeamMembershipsPlainArgs defaults) {
            $ = new GetTeamMembershipsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filterKeyword Search query, can be user email or name.
         * 
         * @return builder
         * 
         */
        public Builder filterKeyword(@Nullable String filterKeyword) {
            $.filterKeyword = filterKeyword;
            return this;
        }

        /**
         * @param teamId The team&#39;s identifier.
         * 
         * @return builder
         * 
         */
        public Builder teamId(String teamId) {
            $.teamId = teamId;
            return this;
        }

        public GetTeamMembershipsPlainArgs build() {
            $.teamId = Objects.requireNonNull($.teamId, "expected parameter 'teamId' to be non-null");
            return $;
        }
    }

}
