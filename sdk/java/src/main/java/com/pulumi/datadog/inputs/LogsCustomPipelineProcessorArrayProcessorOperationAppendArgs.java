// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs Empty = new LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs();

    /**
     * Remove or preserve the remapped source element. Defaults to `true`.
     * 
     */
    @Import(name="preserveSource")
    private @Nullable Output<Boolean> preserveSource;

    /**
     * @return Remove or preserve the remapped source element. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> preserveSource() {
        return Optional.ofNullable(this.preserveSource);
    }

    /**
     * Attribute path containing the value to append.
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return Attribute path containing the value to append.
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    /**
     * Attribute path of the array to append to.
     * 
     */
    @Import(name="target", required=true)
    private Output<String> target;

    /**
     * @return Attribute path of the array to append to.
     * 
     */
    public Output<String> target() {
        return this.target;
    }

    private LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs() {}

    private LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs(LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs $) {
        this.preserveSource = $.preserveSource;
        this.source = $.source;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs $;

        public Builder() {
            $ = new LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs();
        }

        public Builder(LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs defaults) {
            $ = new LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param preserveSource Remove or preserve the remapped source element. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder preserveSource(@Nullable Output<Boolean> preserveSource) {
            $.preserveSource = preserveSource;
            return this;
        }

        /**
         * @param preserveSource Remove or preserve the remapped source element. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder preserveSource(Boolean preserveSource) {
            return preserveSource(Output.of(preserveSource));
        }

        /**
         * @param source Attribute path containing the value to append.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Attribute path containing the value to append.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param target Attribute path of the array to append to.
         * 
         * @return builder
         * 
         */
        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target Attribute path of the array to append to.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        public LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs build() {
            if ($.source == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs", "source");
            }
            if ($.target == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorArrayProcessorOperationAppendArgs", "target");
            }
            return $;
        }
    }

}
