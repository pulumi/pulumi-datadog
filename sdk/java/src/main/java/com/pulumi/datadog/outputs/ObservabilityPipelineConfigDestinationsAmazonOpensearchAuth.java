// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObservabilityPipelineConfigDestinationsAmazonOpensearchAuth {
    /**
     * @return ARN of the role to assume.
     * 
     */
    private @Nullable String assumeRole;
    /**
     * @return AWS region override (if applicable).
     * 
     */
    private @Nullable String awsRegion;
    /**
     * @return External ID for assumed role.
     * 
     */
    private @Nullable String externalId;
    /**
     * @return Session name for assumed role.
     * 
     */
    private @Nullable String sessionName;
    /**
     * @return The authentication strategy to use (e.g. aws or basic).
     * 
     */
    private String strategy;

    private ObservabilityPipelineConfigDestinationsAmazonOpensearchAuth() {}
    /**
     * @return ARN of the role to assume.
     * 
     */
    public Optional<String> assumeRole() {
        return Optional.ofNullable(this.assumeRole);
    }
    /**
     * @return AWS region override (if applicable).
     * 
     */
    public Optional<String> awsRegion() {
        return Optional.ofNullable(this.awsRegion);
    }
    /**
     * @return External ID for assumed role.
     * 
     */
    public Optional<String> externalId() {
        return Optional.ofNullable(this.externalId);
    }
    /**
     * @return Session name for assumed role.
     * 
     */
    public Optional<String> sessionName() {
        return Optional.ofNullable(this.sessionName);
    }
    /**
     * @return The authentication strategy to use (e.g. aws or basic).
     * 
     */
    public String strategy() {
        return this.strategy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservabilityPipelineConfigDestinationsAmazonOpensearchAuth defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String assumeRole;
        private @Nullable String awsRegion;
        private @Nullable String externalId;
        private @Nullable String sessionName;
        private String strategy;
        public Builder() {}
        public Builder(ObservabilityPipelineConfigDestinationsAmazonOpensearchAuth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assumeRole = defaults.assumeRole;
    	      this.awsRegion = defaults.awsRegion;
    	      this.externalId = defaults.externalId;
    	      this.sessionName = defaults.sessionName;
    	      this.strategy = defaults.strategy;
        }

        @CustomType.Setter
        public Builder assumeRole(@Nullable String assumeRole) {

            this.assumeRole = assumeRole;
            return this;
        }
        @CustomType.Setter
        public Builder awsRegion(@Nullable String awsRegion) {

            this.awsRegion = awsRegion;
            return this;
        }
        @CustomType.Setter
        public Builder externalId(@Nullable String externalId) {

            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder sessionName(@Nullable String sessionName) {

            this.sessionName = sessionName;
            return this;
        }
        @CustomType.Setter
        public Builder strategy(String strategy) {
            if (strategy == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsAmazonOpensearchAuth", "strategy");
            }
            this.strategy = strategy;
            return this;
        }
        public ObservabilityPipelineConfigDestinationsAmazonOpensearchAuth build() {
            final var _resultValue = new ObservabilityPipelineConfigDestinationsAmazonOpensearchAuth();
            _resultValue.assumeRole = assumeRole;
            _resultValue.awsRegion = awsRegion;
            _resultValue.externalId = externalId;
            _resultValue.sessionName = sessionName;
            _resultValue.strategy = strategy;
            return _resultValue;
        }
    }
}
