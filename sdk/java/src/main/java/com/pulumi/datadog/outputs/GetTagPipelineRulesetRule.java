// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.GetTagPipelineRulesetRuleMapping;
import com.pulumi.datadog.outputs.GetTagPipelineRulesetRuleQuery;
import com.pulumi.datadog.outputs.GetTagPipelineRulesetRuleReferenceTable;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTagPipelineRulesetRule {
    /**
     * @return Whether the rule is enabled.
     * 
     */
    private Boolean enabled;
    /**
     * @return The mapping configuration for the rule.
     * 
     */
    private @Nullable GetTagPipelineRulesetRuleMapping mapping;
    /**
     * @return Rule metadata key-value pairs.
     * 
     */
    private Map<String,String> metadata;
    /**
     * @return The name of the rule.
     * 
     */
    private String name;
    /**
     * @return The query configuration for the rule.
     * 
     */
    private @Nullable GetTagPipelineRulesetRuleQuery query;
    /**
     * @return The reference table configuration for the rule.
     * 
     */
    private @Nullable GetTagPipelineRulesetRuleReferenceTable referenceTable;

    private GetTagPipelineRulesetRule() {}
    /**
     * @return Whether the rule is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The mapping configuration for the rule.
     * 
     */
    public Optional<GetTagPipelineRulesetRuleMapping> mapping() {
        return Optional.ofNullable(this.mapping);
    }
    /**
     * @return Rule metadata key-value pairs.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata;
    }
    /**
     * @return The name of the rule.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The query configuration for the rule.
     * 
     */
    public Optional<GetTagPipelineRulesetRuleQuery> query() {
        return Optional.ofNullable(this.query);
    }
    /**
     * @return The reference table configuration for the rule.
     * 
     */
    public Optional<GetTagPipelineRulesetRuleReferenceTable> referenceTable() {
        return Optional.ofNullable(this.referenceTable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTagPipelineRulesetRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable GetTagPipelineRulesetRuleMapping mapping;
        private Map<String,String> metadata;
        private String name;
        private @Nullable GetTagPipelineRulesetRuleQuery query;
        private @Nullable GetTagPipelineRulesetRuleReferenceTable referenceTable;
        public Builder() {}
        public Builder(GetTagPipelineRulesetRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.mapping = defaults.mapping;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.query = defaults.query;
    	      this.referenceTable = defaults.referenceTable;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetTagPipelineRulesetRule", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder mapping(@Nullable GetTagPipelineRulesetRuleMapping mapping) {

            this.mapping = mapping;
            return this;
        }
        @CustomType.Setter
        public Builder metadata(Map<String,String> metadata) {
            if (metadata == null) {
              throw new MissingRequiredPropertyException("GetTagPipelineRulesetRule", "metadata");
            }
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetTagPipelineRulesetRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder query(@Nullable GetTagPipelineRulesetRuleQuery query) {

            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder referenceTable(@Nullable GetTagPipelineRulesetRuleReferenceTable referenceTable) {

            this.referenceTable = referenceTable;
            return this;
        }
        public GetTagPipelineRulesetRule build() {
            final var _resultValue = new GetTagPipelineRulesetRule();
            _resultValue.enabled = enabled;
            _resultValue.mapping = mapping;
            _resultValue.metadata = metadata;
            _resultValue.name = name;
            _resultValue.query = query;
            _resultValue.referenceTable = referenceTable;
            return _resultValue;
        }
    }
}
