// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMetricTagsResult {
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    /**
     * @return The metric for which to fetch tags.
     * 
     */
    private String metric;
    /**
     * @return The tags associated with the metric.
     * 
     */
    private List<String> tags;

    private GetMetricTagsResult() {}
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The metric for which to fetch tags.
     * 
     */
    public String metric() {
        return this.metric;
    }
    /**
     * @return The tags associated with the metric.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetricTagsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String metric;
        private List<String> tags;
        public Builder() {}
        public Builder(GetMetricTagsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.metric = defaults.metric;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMetricTagsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metric(String metric) {
            if (metric == null) {
              throw new MissingRequiredPropertyException("GetMetricTagsResult", "metric");
            }
            this.metric = metric;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetMetricTagsResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetMetricTagsResult build() {
            final var _resultValue = new GetMetricTagsResult();
            _resultValue.id = id;
            _resultValue.metric = metric;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
