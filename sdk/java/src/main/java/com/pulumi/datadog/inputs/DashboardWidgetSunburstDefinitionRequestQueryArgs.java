// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetSunburstDefinitionRequestQueryEventQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetSunburstDefinitionRequestQueryMetricQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetSunburstDefinitionRequestQueryProcessQueryArgs;
import com.pulumi.datadog.inputs.DashboardWidgetSunburstDefinitionRequestQuerySloQueryArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetSunburstDefinitionRequestQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetSunburstDefinitionRequestQueryArgs Empty = new DashboardWidgetSunburstDefinitionRequestQueryArgs();

    @Import(name="apmDependencyStatsQuery")
    private @Nullable Output<DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQueryArgs> apmDependencyStatsQuery;

    public Optional<Output<DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQueryArgs>> apmDependencyStatsQuery() {
        return Optional.ofNullable(this.apmDependencyStatsQuery);
    }

    @Import(name="apmResourceStatsQuery")
    private @Nullable Output<DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQueryArgs> apmResourceStatsQuery;

    public Optional<Output<DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQueryArgs>> apmResourceStatsQuery() {
        return Optional.ofNullable(this.apmResourceStatsQuery);
    }

    @Import(name="eventQuery")
    private @Nullable Output<DashboardWidgetSunburstDefinitionRequestQueryEventQueryArgs> eventQuery;

    public Optional<Output<DashboardWidgetSunburstDefinitionRequestQueryEventQueryArgs>> eventQuery() {
        return Optional.ofNullable(this.eventQuery);
    }

    @Import(name="metricQuery")
    private @Nullable Output<DashboardWidgetSunburstDefinitionRequestQueryMetricQueryArgs> metricQuery;

    public Optional<Output<DashboardWidgetSunburstDefinitionRequestQueryMetricQueryArgs>> metricQuery() {
        return Optional.ofNullable(this.metricQuery);
    }

    @Import(name="processQuery")
    private @Nullable Output<DashboardWidgetSunburstDefinitionRequestQueryProcessQueryArgs> processQuery;

    public Optional<Output<DashboardWidgetSunburstDefinitionRequestQueryProcessQueryArgs>> processQuery() {
        return Optional.ofNullable(this.processQuery);
    }

    @Import(name="sloQuery")
    private @Nullable Output<DashboardWidgetSunburstDefinitionRequestQuerySloQueryArgs> sloQuery;

    public Optional<Output<DashboardWidgetSunburstDefinitionRequestQuerySloQueryArgs>> sloQuery() {
        return Optional.ofNullable(this.sloQuery);
    }

    private DashboardWidgetSunburstDefinitionRequestQueryArgs() {}

    private DashboardWidgetSunburstDefinitionRequestQueryArgs(DashboardWidgetSunburstDefinitionRequestQueryArgs $) {
        this.apmDependencyStatsQuery = $.apmDependencyStatsQuery;
        this.apmResourceStatsQuery = $.apmResourceStatsQuery;
        this.eventQuery = $.eventQuery;
        this.metricQuery = $.metricQuery;
        this.processQuery = $.processQuery;
        this.sloQuery = $.sloQuery;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetSunburstDefinitionRequestQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetSunburstDefinitionRequestQueryArgs $;

        public Builder() {
            $ = new DashboardWidgetSunburstDefinitionRequestQueryArgs();
        }

        public Builder(DashboardWidgetSunburstDefinitionRequestQueryArgs defaults) {
            $ = new DashboardWidgetSunburstDefinitionRequestQueryArgs(Objects.requireNonNull(defaults));
        }

        public Builder apmDependencyStatsQuery(@Nullable Output<DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQueryArgs> apmDependencyStatsQuery) {
            $.apmDependencyStatsQuery = apmDependencyStatsQuery;
            return this;
        }

        public Builder apmDependencyStatsQuery(DashboardWidgetSunburstDefinitionRequestQueryApmDependencyStatsQueryArgs apmDependencyStatsQuery) {
            return apmDependencyStatsQuery(Output.of(apmDependencyStatsQuery));
        }

        public Builder apmResourceStatsQuery(@Nullable Output<DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQueryArgs> apmResourceStatsQuery) {
            $.apmResourceStatsQuery = apmResourceStatsQuery;
            return this;
        }

        public Builder apmResourceStatsQuery(DashboardWidgetSunburstDefinitionRequestQueryApmResourceStatsQueryArgs apmResourceStatsQuery) {
            return apmResourceStatsQuery(Output.of(apmResourceStatsQuery));
        }

        public Builder eventQuery(@Nullable Output<DashboardWidgetSunburstDefinitionRequestQueryEventQueryArgs> eventQuery) {
            $.eventQuery = eventQuery;
            return this;
        }

        public Builder eventQuery(DashboardWidgetSunburstDefinitionRequestQueryEventQueryArgs eventQuery) {
            return eventQuery(Output.of(eventQuery));
        }

        public Builder metricQuery(@Nullable Output<DashboardWidgetSunburstDefinitionRequestQueryMetricQueryArgs> metricQuery) {
            $.metricQuery = metricQuery;
            return this;
        }

        public Builder metricQuery(DashboardWidgetSunburstDefinitionRequestQueryMetricQueryArgs metricQuery) {
            return metricQuery(Output.of(metricQuery));
        }

        public Builder processQuery(@Nullable Output<DashboardWidgetSunburstDefinitionRequestQueryProcessQueryArgs> processQuery) {
            $.processQuery = processQuery;
            return this;
        }

        public Builder processQuery(DashboardWidgetSunburstDefinitionRequestQueryProcessQueryArgs processQuery) {
            return processQuery(Output.of(processQuery));
        }

        public Builder sloQuery(@Nullable Output<DashboardWidgetSunburstDefinitionRequestQuerySloQueryArgs> sloQuery) {
            $.sloQuery = sloQuery;
            return this;
        }

        public Builder sloQuery(DashboardWidgetSunburstDefinitionRequestQuerySloQueryArgs sloQuery) {
            return sloQuery(Output.of(sloQuery));
        }

        public DashboardWidgetSunburstDefinitionRequestQueryArgs build() {
            return $;
        }
    }

}
