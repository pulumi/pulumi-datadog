// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomFieldArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigDestinationsSumoLogicArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigDestinationsSumoLogicArgs Empty = new ObservabilityPipelineConfigDestinationsSumoLogicArgs();

    /**
     * The output encoding format.
     * 
     */
    @Import(name="encoding")
    private @Nullable Output<String> encoding;

    /**
     * @return The output encoding format.
     * 
     */
    public Optional<Output<String>> encoding() {
        return Optional.ofNullable(this.encoding);
    }

    /**
     * A list of custom headers to include in the request to Sumo Logic.
     * 
     */
    @Import(name="headerCustomFields")
    private @Nullable Output<List<ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomFieldArgs>> headerCustomFields;

    /**
     * @return A list of custom headers to include in the request to Sumo Logic.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomFieldArgs>>> headerCustomFields() {
        return Optional.ofNullable(this.headerCustomFields);
    }

    /**
     * Optional override for the host name header.
     * 
     */
    @Import(name="headerHostName")
    private @Nullable Output<String> headerHostName;

    /**
     * @return Optional override for the host name header.
     * 
     */
    public Optional<Output<String>> headerHostName() {
        return Optional.ofNullable(this.headerHostName);
    }

    /**
     * Optional override for the source category header.
     * 
     */
    @Import(name="headerSourceCategory")
    private @Nullable Output<String> headerSourceCategory;

    /**
     * @return Optional override for the source category header.
     * 
     */
    public Optional<Output<String>> headerSourceCategory() {
        return Optional.ofNullable(this.headerSourceCategory);
    }

    /**
     * Optional override for the source name header.
     * 
     */
    @Import(name="headerSourceName")
    private @Nullable Output<String> headerSourceName;

    /**
     * @return Optional override for the source name header.
     * 
     */
    public Optional<Output<String>> headerSourceName() {
        return Optional.ofNullable(this.headerSourceName);
    }

    /**
     * The unique identifier for this component.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The unique identifier for this component.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    @Import(name="inputs", required=true)
    private Output<List<String>> inputs;

    /**
     * @return A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    public Output<List<String>> inputs() {
        return this.inputs;
    }

    private ObservabilityPipelineConfigDestinationsSumoLogicArgs() {}

    private ObservabilityPipelineConfigDestinationsSumoLogicArgs(ObservabilityPipelineConfigDestinationsSumoLogicArgs $) {
        this.encoding = $.encoding;
        this.headerCustomFields = $.headerCustomFields;
        this.headerHostName = $.headerHostName;
        this.headerSourceCategory = $.headerSourceCategory;
        this.headerSourceName = $.headerSourceName;
        this.id = $.id;
        this.inputs = $.inputs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigDestinationsSumoLogicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigDestinationsSumoLogicArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigDestinationsSumoLogicArgs();
        }

        public Builder(ObservabilityPipelineConfigDestinationsSumoLogicArgs defaults) {
            $ = new ObservabilityPipelineConfigDestinationsSumoLogicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param encoding The output encoding format.
         * 
         * @return builder
         * 
         */
        public Builder encoding(@Nullable Output<String> encoding) {
            $.encoding = encoding;
            return this;
        }

        /**
         * @param encoding The output encoding format.
         * 
         * @return builder
         * 
         */
        public Builder encoding(String encoding) {
            return encoding(Output.of(encoding));
        }

        /**
         * @param headerCustomFields A list of custom headers to include in the request to Sumo Logic.
         * 
         * @return builder
         * 
         */
        public Builder headerCustomFields(@Nullable Output<List<ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomFieldArgs>> headerCustomFields) {
            $.headerCustomFields = headerCustomFields;
            return this;
        }

        /**
         * @param headerCustomFields A list of custom headers to include in the request to Sumo Logic.
         * 
         * @return builder
         * 
         */
        public Builder headerCustomFields(List<ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomFieldArgs> headerCustomFields) {
            return headerCustomFields(Output.of(headerCustomFields));
        }

        /**
         * @param headerCustomFields A list of custom headers to include in the request to Sumo Logic.
         * 
         * @return builder
         * 
         */
        public Builder headerCustomFields(ObservabilityPipelineConfigDestinationsSumoLogicHeaderCustomFieldArgs... headerCustomFields) {
            return headerCustomFields(List.of(headerCustomFields));
        }

        /**
         * @param headerHostName Optional override for the host name header.
         * 
         * @return builder
         * 
         */
        public Builder headerHostName(@Nullable Output<String> headerHostName) {
            $.headerHostName = headerHostName;
            return this;
        }

        /**
         * @param headerHostName Optional override for the host name header.
         * 
         * @return builder
         * 
         */
        public Builder headerHostName(String headerHostName) {
            return headerHostName(Output.of(headerHostName));
        }

        /**
         * @param headerSourceCategory Optional override for the source category header.
         * 
         * @return builder
         * 
         */
        public Builder headerSourceCategory(@Nullable Output<String> headerSourceCategory) {
            $.headerSourceCategory = headerSourceCategory;
            return this;
        }

        /**
         * @param headerSourceCategory Optional override for the source category header.
         * 
         * @return builder
         * 
         */
        public Builder headerSourceCategory(String headerSourceCategory) {
            return headerSourceCategory(Output.of(headerSourceCategory));
        }

        /**
         * @param headerSourceName Optional override for the source name header.
         * 
         * @return builder
         * 
         */
        public Builder headerSourceName(@Nullable Output<String> headerSourceName) {
            $.headerSourceName = headerSourceName;
            return this;
        }

        /**
         * @param headerSourceName Optional override for the source name header.
         * 
         * @return builder
         * 
         */
        public Builder headerSourceName(String headerSourceName) {
            return headerSourceName(Output.of(headerSourceName));
        }

        /**
         * @param id The unique identifier for this component.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique identifier for this component.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param inputs A list of component IDs whose output is used as the `input` for this component.
         * 
         * @return builder
         * 
         */
        public Builder inputs(Output<List<String>> inputs) {
            $.inputs = inputs;
            return this;
        }

        /**
         * @param inputs A list of component IDs whose output is used as the `input` for this component.
         * 
         * @return builder
         * 
         */
        public Builder inputs(List<String> inputs) {
            return inputs(Output.of(inputs));
        }

        /**
         * @param inputs A list of component IDs whose output is used as the `input` for this component.
         * 
         * @return builder
         * 
         */
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }

        public ObservabilityPipelineConfigDestinationsSumoLogicArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsSumoLogicArgs", "id");
            }
            if ($.inputs == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsSumoLogicArgs", "inputs");
            }
            return $;
        }
    }

}
