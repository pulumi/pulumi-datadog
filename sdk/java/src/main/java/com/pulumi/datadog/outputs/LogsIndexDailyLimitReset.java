// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LogsIndexDailyLimitReset {
    /**
     * @return String in `HH:00` format representing the time of day the daily limit should be reset. The hours must be between 00 and 23 (inclusive).
     * 
     */
    private String resetTime;
    /**
     * @return String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours must be between -12 and +14 (inclusive).
     * 
     */
    private String resetUtcOffset;

    private LogsIndexDailyLimitReset() {}
    /**
     * @return String in `HH:00` format representing the time of day the daily limit should be reset. The hours must be between 00 and 23 (inclusive).
     * 
     */
    public String resetTime() {
        return this.resetTime;
    }
    /**
     * @return String in `(-|+)HH:00` format representing the UTC offset to apply to the given reset time. The hours must be between -12 and +14 (inclusive).
     * 
     */
    public String resetUtcOffset() {
        return this.resetUtcOffset;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogsIndexDailyLimitReset defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String resetTime;
        private String resetUtcOffset;
        public Builder() {}
        public Builder(LogsIndexDailyLimitReset defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resetTime = defaults.resetTime;
    	      this.resetUtcOffset = defaults.resetUtcOffset;
        }

        @CustomType.Setter
        public Builder resetTime(String resetTime) {
            if (resetTime == null) {
              throw new MissingRequiredPropertyException("LogsIndexDailyLimitReset", "resetTime");
            }
            this.resetTime = resetTime;
            return this;
        }
        @CustomType.Setter
        public Builder resetUtcOffset(String resetUtcOffset) {
            if (resetUtcOffset == null) {
              throw new MissingRequiredPropertyException("LogsIndexDailyLimitReset", "resetUtcOffset");
            }
            this.resetUtcOffset = resetUtcOffset;
            return this;
        }
        public LogsIndexDailyLimitReset build() {
            final var _resultValue = new LogsIndexDailyLimitReset();
            _resultValue.resetTime = resetTime;
            _resultValue.resetUtcOffset = resetUtcOffset;
            return _resultValue;
        }
    }
}
