// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class TeamArgs extends com.pulumi.resources.ResourceArgs {

    public static final TeamArgs Empty = new TeamArgs();

    /**
     * Free-form markdown description/content for the team&#39;s homepage.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return Free-form markdown description/content for the team&#39;s homepage.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * The team&#39;s identifier
     * 
     */
    @Import(name="handle", required=true)
    private Output<String> handle;

    /**
     * @return The team&#39;s identifier
     * 
     */
    public Output<String> handle() {
        return this.handle;
    }

    /**
     * The name of the team.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the team.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private TeamArgs() {}

    private TeamArgs(TeamArgs $) {
        this.description = $.description;
        this.handle = $.handle;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamArgs $;

        public Builder() {
            $ = new TeamArgs();
        }

        public Builder(TeamArgs defaults) {
            $ = new TeamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Free-form markdown description/content for the team&#39;s homepage.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Free-form markdown description/content for the team&#39;s homepage.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param handle The team&#39;s identifier
         * 
         * @return builder
         * 
         */
        public Builder handle(Output<String> handle) {
            $.handle = handle;
            return this;
        }

        /**
         * @param handle The team&#39;s identifier
         * 
         * @return builder
         * 
         */
        public Builder handle(String handle) {
            return handle(Output.of(handle));
        }

        /**
         * @param name The name of the team.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the team.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public TeamArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("TeamArgs", "description");
            }
            if ($.handle == null) {
                throw new MissingRequiredPropertyException("TeamArgs", "handle");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("TeamArgs", "name");
            }
            return $;
        }
    }

}
