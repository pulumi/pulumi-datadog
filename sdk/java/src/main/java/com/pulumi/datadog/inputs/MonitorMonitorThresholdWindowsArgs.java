// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorMonitorThresholdWindowsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorMonitorThresholdWindowsArgs Empty = new MonitorMonitorThresholdWindowsArgs();

    /**
     * Describes how long an anomalous metric must be normal before the alert recovers.
     * 
     */
    @Import(name="recoveryWindow")
    private @Nullable Output<String> recoveryWindow;

    /**
     * @return Describes how long an anomalous metric must be normal before the alert recovers.
     * 
     */
    public Optional<Output<String>> recoveryWindow() {
        return Optional.ofNullable(this.recoveryWindow);
    }

    /**
     * Describes how long a metric must be anomalous before an alert triggers.
     * 
     */
    @Import(name="triggerWindow")
    private @Nullable Output<String> triggerWindow;

    /**
     * @return Describes how long a metric must be anomalous before an alert triggers.
     * 
     */
    public Optional<Output<String>> triggerWindow() {
        return Optional.ofNullable(this.triggerWindow);
    }

    private MonitorMonitorThresholdWindowsArgs() {}

    private MonitorMonitorThresholdWindowsArgs(MonitorMonitorThresholdWindowsArgs $) {
        this.recoveryWindow = $.recoveryWindow;
        this.triggerWindow = $.triggerWindow;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorMonitorThresholdWindowsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorMonitorThresholdWindowsArgs $;

        public Builder() {
            $ = new MonitorMonitorThresholdWindowsArgs();
        }

        public Builder(MonitorMonitorThresholdWindowsArgs defaults) {
            $ = new MonitorMonitorThresholdWindowsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recoveryWindow Describes how long an anomalous metric must be normal before the alert recovers.
         * 
         * @return builder
         * 
         */
        public Builder recoveryWindow(@Nullable Output<String> recoveryWindow) {
            $.recoveryWindow = recoveryWindow;
            return this;
        }

        /**
         * @param recoveryWindow Describes how long an anomalous metric must be normal before the alert recovers.
         * 
         * @return builder
         * 
         */
        public Builder recoveryWindow(String recoveryWindow) {
            return recoveryWindow(Output.of(recoveryWindow));
        }

        /**
         * @param triggerWindow Describes how long a metric must be anomalous before an alert triggers.
         * 
         * @return builder
         * 
         */
        public Builder triggerWindow(@Nullable Output<String> triggerWindow) {
            $.triggerWindow = triggerWindow;
            return this;
        }

        /**
         * @param triggerWindow Describes how long a metric must be anomalous before an alert triggers.
         * 
         * @return builder
         * 
         */
        public Builder triggerWindow(String triggerWindow) {
            return triggerWindow(Output.of(triggerWindow));
        }

        public MonitorMonitorThresholdWindowsArgs build() {
            return $;
        }
    }

}
