// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVectorArgs;
import java.util.List;
import java.util.Objects;


public final class DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs Empty = new DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs();

    /**
     * The split graph list contains a graph for each value of the split dimension.
     * 
     */
    @Import(name="splitVectors", required=true)
    private Output<List<DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVectorArgs>> splitVectors;

    /**
     * @return The split graph list contains a graph for each value of the split dimension.
     * 
     */
    public Output<List<DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVectorArgs>> splitVectors() {
        return this.splitVectors;
    }

    private DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs() {}

    private DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs(DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs $) {
        this.splitVectors = $.splitVectors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs $;

        public Builder() {
            $ = new DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs();
        }

        public Builder(DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs defaults) {
            $ = new DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param splitVectors The split graph list contains a graph for each value of the split dimension.
         * 
         * @return builder
         * 
         */
        public Builder splitVectors(Output<List<DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVectorArgs>> splitVectors) {
            $.splitVectors = splitVectors;
            return this;
        }

        /**
         * @param splitVectors The split graph list contains a graph for each value of the split dimension.
         * 
         * @return builder
         * 
         */
        public Builder splitVectors(List<DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVectorArgs> splitVectors) {
            return splitVectors(Output.of(splitVectors));
        }

        /**
         * @param splitVectors The split graph list contains a graph for each value of the split dimension.
         * 
         * @return builder
         * 
         */
        public Builder splitVectors(DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVectorArgs... splitVectors) {
            return splitVectors(List.of(splitVectors));
        }

        public DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSplitConfigStaticSplitArgs build() {
            $.splitVectors = Objects.requireNonNull($.splitVectors, "expected parameter 'splitVectors' to be non-null");
            return $;
        }
    }

}
