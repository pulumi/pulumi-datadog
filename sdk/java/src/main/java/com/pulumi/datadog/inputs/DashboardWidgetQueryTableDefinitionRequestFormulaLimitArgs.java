// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs Empty = new DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs();

    /**
     * The number of results to return.
     * 
     */
    @Import(name="count")
    private @Nullable Output<Integer> count;

    /**
     * @return The number of results to return.
     * 
     */
    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    /**
     * Widget sorting methods. Valid values are `asc`, `desc`.
     * 
     */
    @Import(name="order")
    private @Nullable Output<String> order;

    /**
     * @return Widget sorting methods. Valid values are `asc`, `desc`.
     * 
     */
    public Optional<Output<String>> order() {
        return Optional.ofNullable(this.order);
    }

    private DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs() {}

    private DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs(DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs $) {
        this.count = $.count;
        this.order = $.order;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs $;

        public Builder() {
            $ = new DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs();
        }

        public Builder(DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs defaults) {
            $ = new DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param count The number of results to return.
         * 
         * @return builder
         * 
         */
        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        /**
         * @param count The number of results to return.
         * 
         * @return builder
         * 
         */
        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        /**
         * @param order Widget sorting methods. Valid values are `asc`, `desc`.
         * 
         * @return builder
         * 
         */
        public Builder order(@Nullable Output<String> order) {
            $.order = order;
            return this;
        }

        /**
         * @param order Widget sorting methods. Valid values are `asc`, `desc`.
         * 
         * @return builder
         * 
         */
        public Builder order(String order) {
            return order(Output.of(order));
        }

        public DashboardWidgetQueryTableDefinitionRequestFormulaLimitArgs build() {
            return $;
        }
    }

}
