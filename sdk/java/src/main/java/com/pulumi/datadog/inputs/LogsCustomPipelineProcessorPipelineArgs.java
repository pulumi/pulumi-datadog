// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.LogsCustomPipelineProcessorPipelineFilterArgs;
import com.pulumi.datadog.inputs.LogsCustomPipelineProcessorPipelineProcessorArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogsCustomPipelineProcessorPipelineArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsCustomPipelineProcessorPipelineArgs Empty = new LogsCustomPipelineProcessorPipelineArgs();

    @Import(name="filters", required=true)
    private Output<List<LogsCustomPipelineProcessorPipelineFilterArgs>> filters;

    public Output<List<LogsCustomPipelineProcessorPipelineFilterArgs>> filters() {
        return this.filters;
    }

    /**
     * Boolean value to enable your pipeline.
     * 
     */
    @Import(name="isEnabled")
    private @Nullable Output<Boolean> isEnabled;

    /**
     * @return Boolean value to enable your pipeline.
     * 
     */
    public Optional<Output<Boolean>> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }

    /**
     * Your pipeline name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Your pipeline name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    @Import(name="processors")
    private @Nullable Output<List<LogsCustomPipelineProcessorPipelineProcessorArgs>> processors;

    public Optional<Output<List<LogsCustomPipelineProcessorPipelineProcessorArgs>>> processors() {
        return Optional.ofNullable(this.processors);
    }

    private LogsCustomPipelineProcessorPipelineArgs() {}

    private LogsCustomPipelineProcessorPipelineArgs(LogsCustomPipelineProcessorPipelineArgs $) {
        this.filters = $.filters;
        this.isEnabled = $.isEnabled;
        this.name = $.name;
        this.processors = $.processors;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsCustomPipelineProcessorPipelineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsCustomPipelineProcessorPipelineArgs $;

        public Builder() {
            $ = new LogsCustomPipelineProcessorPipelineArgs();
        }

        public Builder(LogsCustomPipelineProcessorPipelineArgs defaults) {
            $ = new LogsCustomPipelineProcessorPipelineArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(Output<List<LogsCustomPipelineProcessorPipelineFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<LogsCustomPipelineProcessorPipelineFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(LogsCustomPipelineProcessorPipelineFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isEnabled Boolean value to enable your pipeline.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(@Nullable Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled Boolean value to enable your pipeline.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param name Your pipeline name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Your pipeline name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder processors(@Nullable Output<List<LogsCustomPipelineProcessorPipelineProcessorArgs>> processors) {
            $.processors = processors;
            return this;
        }

        public Builder processors(List<LogsCustomPipelineProcessorPipelineProcessorArgs> processors) {
            return processors(Output.of(processors));
        }

        public Builder processors(LogsCustomPipelineProcessorPipelineProcessorArgs... processors) {
            return processors(List.of(processors));
        }

        public LogsCustomPipelineProcessorPipelineArgs build() {
            if ($.filters == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorPipelineArgs", "filters");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorPipelineArgs", "name");
            }
            return $;
        }
    }

}
