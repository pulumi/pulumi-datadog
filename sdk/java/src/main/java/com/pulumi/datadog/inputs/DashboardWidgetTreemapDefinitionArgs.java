// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetTreemapDefinitionCustomLinkArgs;
import com.pulumi.datadog.inputs.DashboardWidgetTreemapDefinitionRequestArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetTreemapDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetTreemapDefinitionArgs Empty = new DashboardWidgetTreemapDefinitionArgs();

    /**
     * A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.
     * 
     */
    @Import(name="customLinks")
    private @Nullable Output<List<DashboardWidgetTreemapDefinitionCustomLinkArgs>> customLinks;

    /**
     * @return A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.
     * 
     */
    public Optional<Output<List<DashboardWidgetTreemapDefinitionCustomLinkArgs>>> customLinks() {
        return Optional.ofNullable(this.customLinks);
    }

    /**
     * Nested block describing the request to use when displaying the widget.
     * 
     */
    @Import(name="requests")
    private @Nullable Output<List<DashboardWidgetTreemapDefinitionRequestArgs>> requests;

    /**
     * @return Nested block describing the request to use when displaying the widget.
     * 
     */
    public Optional<Output<List<DashboardWidgetTreemapDefinitionRequestArgs>>> requests() {
        return Optional.ofNullable(this.requests);
    }

    /**
     * The title of the widget.
     * 
     */
    @Import(name="title")
    private @Nullable Output<String> title;

    /**
     * @return The title of the widget.
     * 
     */
    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    private DashboardWidgetTreemapDefinitionArgs() {}

    private DashboardWidgetTreemapDefinitionArgs(DashboardWidgetTreemapDefinitionArgs $) {
        this.customLinks = $.customLinks;
        this.requests = $.requests;
        this.title = $.title;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetTreemapDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetTreemapDefinitionArgs $;

        public Builder() {
            $ = new DashboardWidgetTreemapDefinitionArgs();
        }

        public Builder(DashboardWidgetTreemapDefinitionArgs defaults) {
            $ = new DashboardWidgetTreemapDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customLinks A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.
         * 
         * @return builder
         * 
         */
        public Builder customLinks(@Nullable Output<List<DashboardWidgetTreemapDefinitionCustomLinkArgs>> customLinks) {
            $.customLinks = customLinks;
            return this;
        }

        /**
         * @param customLinks A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.
         * 
         * @return builder
         * 
         */
        public Builder customLinks(List<DashboardWidgetTreemapDefinitionCustomLinkArgs> customLinks) {
            return customLinks(Output.of(customLinks));
        }

        /**
         * @param customLinks A nested block describing a custom link. Multiple `custom_link` blocks are allowed using the structure below.
         * 
         * @return builder
         * 
         */
        public Builder customLinks(DashboardWidgetTreemapDefinitionCustomLinkArgs... customLinks) {
            return customLinks(List.of(customLinks));
        }

        /**
         * @param requests Nested block describing the request to use when displaying the widget.
         * 
         * @return builder
         * 
         */
        public Builder requests(@Nullable Output<List<DashboardWidgetTreemapDefinitionRequestArgs>> requests) {
            $.requests = requests;
            return this;
        }

        /**
         * @param requests Nested block describing the request to use when displaying the widget.
         * 
         * @return builder
         * 
         */
        public Builder requests(List<DashboardWidgetTreemapDefinitionRequestArgs> requests) {
            return requests(Output.of(requests));
        }

        /**
         * @param requests Nested block describing the request to use when displaying the widget.
         * 
         * @return builder
         * 
         */
        public Builder requests(DashboardWidgetTreemapDefinitionRequestArgs... requests) {
            return requests(List.of(requests));
        }

        /**
         * @param title The title of the widget.
         * 
         * @return builder
         * 
         */
        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        /**
         * @param title The title of the widget.
         * 
         * @return builder
         * 
         */
        public Builder title(String title) {
            return title(Output.of(title));
        }

        public DashboardWidgetTreemapDefinitionArgs build() {
            return $;
        }
    }

}
