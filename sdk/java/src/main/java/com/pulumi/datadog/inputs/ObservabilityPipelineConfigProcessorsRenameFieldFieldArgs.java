// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs Empty = new ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs();

    /**
     * Destination field name.
     * 
     */
    @Import(name="destination", required=true)
    private Output<String> destination;

    /**
     * @return Destination field name.
     * 
     */
    public Output<String> destination() {
        return this.destination;
    }

    /**
     * Whether to keep the original field.
     * 
     */
    @Import(name="preserveSource", required=true)
    private Output<Boolean> preserveSource;

    /**
     * @return Whether to keep the original field.
     * 
     */
    public Output<Boolean> preserveSource() {
        return this.preserveSource;
    }

    /**
     * Source field to rename.
     * 
     */
    @Import(name="source", required=true)
    private Output<String> source;

    /**
     * @return Source field to rename.
     * 
     */
    public Output<String> source() {
        return this.source;
    }

    private ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs() {}

    private ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs(ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs $) {
        this.destination = $.destination;
        this.preserveSource = $.preserveSource;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs();
        }

        public Builder(ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs defaults) {
            $ = new ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destination Destination field name.
         * 
         * @return builder
         * 
         */
        public Builder destination(Output<String> destination) {
            $.destination = destination;
            return this;
        }

        /**
         * @param destination Destination field name.
         * 
         * @return builder
         * 
         */
        public Builder destination(String destination) {
            return destination(Output.of(destination));
        }

        /**
         * @param preserveSource Whether to keep the original field.
         * 
         * @return builder
         * 
         */
        public Builder preserveSource(Output<Boolean> preserveSource) {
            $.preserveSource = preserveSource;
            return this;
        }

        /**
         * @param preserveSource Whether to keep the original field.
         * 
         * @return builder
         * 
         */
        public Builder preserveSource(Boolean preserveSource) {
            return preserveSource(Output.of(preserveSource));
        }

        /**
         * @param source Source field to rename.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source Source field to rename.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        public ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs build() {
            if ($.destination == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs", "destination");
            }
            if ($.preserveSource == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs", "preserveSource");
            }
            if ($.source == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsRenameFieldFieldArgs", "source");
            }
            return $;
        }
    }

}
