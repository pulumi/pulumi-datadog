// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class LogsPipelineOrderArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsPipelineOrderArgs Empty = new LogsPipelineOrderArgs();

    /**
     * The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It&#39;s recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It&#39;s recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
     * 
     */
    @Import(name="pipelines", required=true)
    private Output<List<String>> pipelines;

    /**
     * @return The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
     * 
     */
    public Output<List<String>> pipelines() {
        return this.pipelines;
    }

    private LogsPipelineOrderArgs() {}

    private LogsPipelineOrderArgs(LogsPipelineOrderArgs $) {
        this.name = $.name;
        this.pipelines = $.pipelines;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsPipelineOrderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsPipelineOrderArgs $;

        public Builder() {
            $ = new LogsPipelineOrderArgs();
        }

        public Builder(LogsPipelineOrderArgs defaults) {
            $ = new LogsPipelineOrderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It&#39;s recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name attribute in the resource `datadog.LogsPipelineOrder` needs to be unique. It&#39;s recommended to use the same value as the resource name. No related field is available in [Logs Pipeline API](https://docs.datadoghq.com/api/v1/logs-pipelines/#get-pipeline-order).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param pipelines The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
         * 
         * @return builder
         * 
         */
        public Builder pipelines(Output<List<String>> pipelines) {
            $.pipelines = pipelines;
            return this;
        }

        /**
         * @param pipelines The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
         * 
         * @return builder
         * 
         */
        public Builder pipelines(List<String> pipelines) {
            return pipelines(Output.of(pipelines));
        }

        /**
         * @param pipelines The pipeline IDs list. The order of pipeline IDs in this attribute defines the overall pipeline order for logs.
         * 
         * @return builder
         * 
         */
        public Builder pipelines(String... pipelines) {
            return pipelines(List.of(pipelines));
        }

        public LogsPipelineOrderArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("LogsPipelineOrderArgs", "name");
            }
            if ($.pipelines == null) {
                throw new MissingRequiredPropertyException("LogsPipelineOrderArgs", "pipelines");
            }
            return $;
        }
    }

}
