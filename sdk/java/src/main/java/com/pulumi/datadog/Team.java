// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.TeamArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.TeamState;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Datadog Team resource. This can be used to create and manage Datadog team.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.Team;
 * import com.pulumi.datadog.TeamArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new Team(&#34;foo&#34;, TeamArgs.builder()        
 *             .description(&#34;Team description&#34;)
 *             .handle(&#34;example-team&#34;)
 *             .name(&#34;Example Team&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import datadog:index/team:Team foo &#34;bf064c56-edb0-11ed-ae91-da7ad0900002&#34;
 * ```
 * 
 */
@ResourceType(type="datadog:index/team:Team")
public class Team extends com.pulumi.resources.CustomResource {
    /**
     * Free-form markdown description/content for the team&#39;s homepage.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Free-form markdown description/content for the team&#39;s homepage.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The team&#39;s identifier
     * 
     */
    @Export(name="handle", refs={String.class}, tree="[0]")
    private Output<String> handle;

    /**
     * @return The team&#39;s identifier
     * 
     */
    public Output<String> handle() {
        return this.handle;
    }
    /**
     * The number of links belonging to the team.
     * 
     */
    @Export(name="linkCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> linkCount;

    /**
     * @return The number of links belonging to the team.
     * 
     */
    public Output<Integer> linkCount() {
        return this.linkCount;
    }
    /**
     * The name of the team.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the team.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A brief summary of the team, derived from the `description`.
     * 
     */
    @Export(name="summary", refs={String.class}, tree="[0]")
    private Output<String> summary;

    /**
     * @return A brief summary of the team, derived from the `description`.
     * 
     */
    public Output<String> summary() {
        return this.summary;
    }
    /**
     * The number of users belonging to the team.
     * 
     */
    @Export(name="userCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> userCount;

    /**
     * @return The number of users belonging to the team.
     * 
     */
    public Output<Integer> userCount() {
        return this.userCount;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Team(String name) {
        this(name, TeamArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Team(String name, TeamArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Team(String name, TeamArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/team:Team", name, args == null ? TeamArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Team(String name, Output<String> id, @Nullable TeamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/team:Team", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Team get(String name, Output<String> id, @Nullable TeamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Team(name, id, state, options);
    }
}
