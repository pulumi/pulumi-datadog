// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.PowerpackWidgetAlertGraphDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetAlertValueDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetChangeDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetCheckStatusDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetDistributionDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetEventStreamDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetEventTimelineDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetFreeTextDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetGeomapDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetHeatmapDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetHostmapDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetIframeDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetImageDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetListStreamDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetLogStreamDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetManageStatusDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetNoteDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetQueryTableDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetQueryValueDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetRunWorkflowDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetScatterplotDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetServiceLevelObjectiveDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetServicemapDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetSloListDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetSunburstDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetTimeseriesDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetToplistDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetTopologyMapDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetTraceServiceDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetTreemapDefinitionArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetWidgetLayoutArgs;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PowerpackWidgetArgs extends com.pulumi.resources.ResourceArgs {

    public static final PowerpackWidgetArgs Empty = new PowerpackWidgetArgs();

    /**
     * The definition for a Alert Graph widget.
     * 
     */
    @Import(name="alertGraphDefinition")
    private @Nullable Output<PowerpackWidgetAlertGraphDefinitionArgs> alertGraphDefinition;

    /**
     * @return The definition for a Alert Graph widget.
     * 
     */
    public Optional<Output<PowerpackWidgetAlertGraphDefinitionArgs>> alertGraphDefinition() {
        return Optional.ofNullable(this.alertGraphDefinition);
    }

    /**
     * The definition for a Alert Value widget.
     * 
     */
    @Import(name="alertValueDefinition")
    private @Nullable Output<PowerpackWidgetAlertValueDefinitionArgs> alertValueDefinition;

    /**
     * @return The definition for a Alert Value widget.
     * 
     */
    public Optional<Output<PowerpackWidgetAlertValueDefinitionArgs>> alertValueDefinition() {
        return Optional.ofNullable(this.alertValueDefinition);
    }

    /**
     * The definition for a Change widget.
     * 
     */
    @Import(name="changeDefinition")
    private @Nullable Output<PowerpackWidgetChangeDefinitionArgs> changeDefinition;

    /**
     * @return The definition for a Change widget.
     * 
     */
    public Optional<Output<PowerpackWidgetChangeDefinitionArgs>> changeDefinition() {
        return Optional.ofNullable(this.changeDefinition);
    }

    /**
     * The definition for a Check Status widget.
     * 
     */
    @Import(name="checkStatusDefinition")
    private @Nullable Output<PowerpackWidgetCheckStatusDefinitionArgs> checkStatusDefinition;

    /**
     * @return The definition for a Check Status widget.
     * 
     */
    public Optional<Output<PowerpackWidgetCheckStatusDefinitionArgs>> checkStatusDefinition() {
        return Optional.ofNullable(this.checkStatusDefinition);
    }

    /**
     * The definition for a Distribution widget.
     * 
     */
    @Import(name="distributionDefinition")
    private @Nullable Output<PowerpackWidgetDistributionDefinitionArgs> distributionDefinition;

    /**
     * @return The definition for a Distribution widget.
     * 
     */
    public Optional<Output<PowerpackWidgetDistributionDefinitionArgs>> distributionDefinition() {
        return Optional.ofNullable(this.distributionDefinition);
    }

    /**
     * The definition for a Event Stream widget.
     * 
     */
    @Import(name="eventStreamDefinition")
    private @Nullable Output<PowerpackWidgetEventStreamDefinitionArgs> eventStreamDefinition;

    /**
     * @return The definition for a Event Stream widget.
     * 
     */
    public Optional<Output<PowerpackWidgetEventStreamDefinitionArgs>> eventStreamDefinition() {
        return Optional.ofNullable(this.eventStreamDefinition);
    }

    /**
     * The definition for a Event Timeline widget.
     * 
     */
    @Import(name="eventTimelineDefinition")
    private @Nullable Output<PowerpackWidgetEventTimelineDefinitionArgs> eventTimelineDefinition;

    /**
     * @return The definition for a Event Timeline widget.
     * 
     */
    public Optional<Output<PowerpackWidgetEventTimelineDefinitionArgs>> eventTimelineDefinition() {
        return Optional.ofNullable(this.eventTimelineDefinition);
    }

    /**
     * The definition for a Free Text widget.
     * 
     */
    @Import(name="freeTextDefinition")
    private @Nullable Output<PowerpackWidgetFreeTextDefinitionArgs> freeTextDefinition;

    /**
     * @return The definition for a Free Text widget.
     * 
     */
    public Optional<Output<PowerpackWidgetFreeTextDefinitionArgs>> freeTextDefinition() {
        return Optional.ofNullable(this.freeTextDefinition);
    }

    /**
     * The definition for a Geomap widget.
     * 
     */
    @Import(name="geomapDefinition")
    private @Nullable Output<PowerpackWidgetGeomapDefinitionArgs> geomapDefinition;

    /**
     * @return The definition for a Geomap widget.
     * 
     */
    public Optional<Output<PowerpackWidgetGeomapDefinitionArgs>> geomapDefinition() {
        return Optional.ofNullable(this.geomapDefinition);
    }

    /**
     * The definition for a Heatmap widget.
     * 
     */
    @Import(name="heatmapDefinition")
    private @Nullable Output<PowerpackWidgetHeatmapDefinitionArgs> heatmapDefinition;

    /**
     * @return The definition for a Heatmap widget.
     * 
     */
    public Optional<Output<PowerpackWidgetHeatmapDefinitionArgs>> heatmapDefinition() {
        return Optional.ofNullable(this.heatmapDefinition);
    }

    /**
     * The definition for a Hostmap widget.
     * 
     */
    @Import(name="hostmapDefinition")
    private @Nullable Output<PowerpackWidgetHostmapDefinitionArgs> hostmapDefinition;

    /**
     * @return The definition for a Hostmap widget.
     * 
     */
    public Optional<Output<PowerpackWidgetHostmapDefinitionArgs>> hostmapDefinition() {
        return Optional.ofNullable(this.hostmapDefinition);
    }

    /**
     * The ID of the widget.
     * 
     */
    @Import(name="id")
    private @Nullable Output<Integer> id;

    /**
     * @return The ID of the widget.
     * 
     */
    public Optional<Output<Integer>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The definition for an Iframe widget.
     * 
     */
    @Import(name="iframeDefinition")
    private @Nullable Output<PowerpackWidgetIframeDefinitionArgs> iframeDefinition;

    /**
     * @return The definition for an Iframe widget.
     * 
     */
    public Optional<Output<PowerpackWidgetIframeDefinitionArgs>> iframeDefinition() {
        return Optional.ofNullable(this.iframeDefinition);
    }

    /**
     * The definition for an Image widget
     * 
     */
    @Import(name="imageDefinition")
    private @Nullable Output<PowerpackWidgetImageDefinitionArgs> imageDefinition;

    /**
     * @return The definition for an Image widget
     * 
     */
    public Optional<Output<PowerpackWidgetImageDefinitionArgs>> imageDefinition() {
        return Optional.ofNullable(this.imageDefinition);
    }

    /**
     * The definition for a List Stream widget.
     * 
     */
    @Import(name="listStreamDefinition")
    private @Nullable Output<PowerpackWidgetListStreamDefinitionArgs> listStreamDefinition;

    /**
     * @return The definition for a List Stream widget.
     * 
     */
    public Optional<Output<PowerpackWidgetListStreamDefinitionArgs>> listStreamDefinition() {
        return Optional.ofNullable(this.listStreamDefinition);
    }

    /**
     * The definition for an Log Stream widget.
     * 
     */
    @Import(name="logStreamDefinition")
    private @Nullable Output<PowerpackWidgetLogStreamDefinitionArgs> logStreamDefinition;

    /**
     * @return The definition for an Log Stream widget.
     * 
     */
    public Optional<Output<PowerpackWidgetLogStreamDefinitionArgs>> logStreamDefinition() {
        return Optional.ofNullable(this.logStreamDefinition);
    }

    /**
     * The definition for an Manage Status widget.
     * 
     */
    @Import(name="manageStatusDefinition")
    private @Nullable Output<PowerpackWidgetManageStatusDefinitionArgs> manageStatusDefinition;

    /**
     * @return The definition for an Manage Status widget.
     * 
     */
    public Optional<Output<PowerpackWidgetManageStatusDefinitionArgs>> manageStatusDefinition() {
        return Optional.ofNullable(this.manageStatusDefinition);
    }

    /**
     * The definition for a Note widget.
     * 
     */
    @Import(name="noteDefinition")
    private @Nullable Output<PowerpackWidgetNoteDefinitionArgs> noteDefinition;

    /**
     * @return The definition for a Note widget.
     * 
     */
    public Optional<Output<PowerpackWidgetNoteDefinitionArgs>> noteDefinition() {
        return Optional.ofNullable(this.noteDefinition);
    }

    /**
     * The definition for a Query Table widget.
     * 
     */
    @Import(name="queryTableDefinition")
    private @Nullable Output<PowerpackWidgetQueryTableDefinitionArgs> queryTableDefinition;

    /**
     * @return The definition for a Query Table widget.
     * 
     */
    public Optional<Output<PowerpackWidgetQueryTableDefinitionArgs>> queryTableDefinition() {
        return Optional.ofNullable(this.queryTableDefinition);
    }

    /**
     * The definition for a Query Value widget.
     * 
     */
    @Import(name="queryValueDefinition")
    private @Nullable Output<PowerpackWidgetQueryValueDefinitionArgs> queryValueDefinition;

    /**
     * @return The definition for a Query Value widget.
     * 
     */
    public Optional<Output<PowerpackWidgetQueryValueDefinitionArgs>> queryValueDefinition() {
        return Optional.ofNullable(this.queryValueDefinition);
    }

    /**
     * The definition for a Run Workflow widget.
     * 
     */
    @Import(name="runWorkflowDefinition")
    private @Nullable Output<PowerpackWidgetRunWorkflowDefinitionArgs> runWorkflowDefinition;

    /**
     * @return The definition for a Run Workflow widget.
     * 
     */
    public Optional<Output<PowerpackWidgetRunWorkflowDefinitionArgs>> runWorkflowDefinition() {
        return Optional.ofNullable(this.runWorkflowDefinition);
    }

    /**
     * The definition for a Scatterplot widget.
     * 
     */
    @Import(name="scatterplotDefinition")
    private @Nullable Output<PowerpackWidgetScatterplotDefinitionArgs> scatterplotDefinition;

    /**
     * @return The definition for a Scatterplot widget.
     * 
     */
    public Optional<Output<PowerpackWidgetScatterplotDefinitionArgs>> scatterplotDefinition() {
        return Optional.ofNullable(this.scatterplotDefinition);
    }

    /**
     * The definition for a Service Level Objective widget.
     * 
     */
    @Import(name="serviceLevelObjectiveDefinition")
    private @Nullable Output<PowerpackWidgetServiceLevelObjectiveDefinitionArgs> serviceLevelObjectiveDefinition;

    /**
     * @return The definition for a Service Level Objective widget.
     * 
     */
    public Optional<Output<PowerpackWidgetServiceLevelObjectiveDefinitionArgs>> serviceLevelObjectiveDefinition() {
        return Optional.ofNullable(this.serviceLevelObjectiveDefinition);
    }

    /**
     * The definition for a Service Map widget.
     * 
     */
    @Import(name="servicemapDefinition")
    private @Nullable Output<PowerpackWidgetServicemapDefinitionArgs> servicemapDefinition;

    /**
     * @return The definition for a Service Map widget.
     * 
     */
    public Optional<Output<PowerpackWidgetServicemapDefinitionArgs>> servicemapDefinition() {
        return Optional.ofNullable(this.servicemapDefinition);
    }

    /**
     * The definition for an SLO (Service Level Objective) List widget.
     * 
     */
    @Import(name="sloListDefinition")
    private @Nullable Output<PowerpackWidgetSloListDefinitionArgs> sloListDefinition;

    /**
     * @return The definition for an SLO (Service Level Objective) List widget.
     * 
     */
    public Optional<Output<PowerpackWidgetSloListDefinitionArgs>> sloListDefinition() {
        return Optional.ofNullable(this.sloListDefinition);
    }

    /**
     * The definition for a Sunburst widget.
     * 
     */
    @Import(name="sunburstDefinition")
    private @Nullable Output<PowerpackWidgetSunburstDefinitionArgs> sunburstDefinition;

    /**
     * @return The definition for a Sunburst widget.
     * 
     */
    public Optional<Output<PowerpackWidgetSunburstDefinitionArgs>> sunburstDefinition() {
        return Optional.ofNullable(this.sunburstDefinition);
    }

    /**
     * The definition for a Timeseries widget.
     * 
     */
    @Import(name="timeseriesDefinition")
    private @Nullable Output<PowerpackWidgetTimeseriesDefinitionArgs> timeseriesDefinition;

    /**
     * @return The definition for a Timeseries widget.
     * 
     */
    public Optional<Output<PowerpackWidgetTimeseriesDefinitionArgs>> timeseriesDefinition() {
        return Optional.ofNullable(this.timeseriesDefinition);
    }

    /**
     * The definition for a Toplist widget.
     * 
     */
    @Import(name="toplistDefinition")
    private @Nullable Output<PowerpackWidgetToplistDefinitionArgs> toplistDefinition;

    /**
     * @return The definition for a Toplist widget.
     * 
     */
    public Optional<Output<PowerpackWidgetToplistDefinitionArgs>> toplistDefinition() {
        return Optional.ofNullable(this.toplistDefinition);
    }

    /**
     * The definition for a Topology Map widget.
     * 
     */
    @Import(name="topologyMapDefinition")
    private @Nullable Output<PowerpackWidgetTopologyMapDefinitionArgs> topologyMapDefinition;

    /**
     * @return The definition for a Topology Map widget.
     * 
     */
    public Optional<Output<PowerpackWidgetTopologyMapDefinitionArgs>> topologyMapDefinition() {
        return Optional.ofNullable(this.topologyMapDefinition);
    }

    /**
     * The definition for a Trace Service widget.
     * 
     */
    @Import(name="traceServiceDefinition")
    private @Nullable Output<PowerpackWidgetTraceServiceDefinitionArgs> traceServiceDefinition;

    /**
     * @return The definition for a Trace Service widget.
     * 
     */
    public Optional<Output<PowerpackWidgetTraceServiceDefinitionArgs>> traceServiceDefinition() {
        return Optional.ofNullable(this.traceServiceDefinition);
    }

    /**
     * The definition for a Treemap widget.
     * 
     */
    @Import(name="treemapDefinition")
    private @Nullable Output<PowerpackWidgetTreemapDefinitionArgs> treemapDefinition;

    /**
     * @return The definition for a Treemap widget.
     * 
     */
    public Optional<Output<PowerpackWidgetTreemapDefinitionArgs>> treemapDefinition() {
        return Optional.ofNullable(this.treemapDefinition);
    }

    /**
     * The layout of the widget on a &#39;free&#39; dashboard.
     * 
     */
    @Import(name="widgetLayout")
    private @Nullable Output<PowerpackWidgetWidgetLayoutArgs> widgetLayout;

    /**
     * @return The layout of the widget on a &#39;free&#39; dashboard.
     * 
     */
    public Optional<Output<PowerpackWidgetWidgetLayoutArgs>> widgetLayout() {
        return Optional.ofNullable(this.widgetLayout);
    }

    private PowerpackWidgetArgs() {}

    private PowerpackWidgetArgs(PowerpackWidgetArgs $) {
        this.alertGraphDefinition = $.alertGraphDefinition;
        this.alertValueDefinition = $.alertValueDefinition;
        this.changeDefinition = $.changeDefinition;
        this.checkStatusDefinition = $.checkStatusDefinition;
        this.distributionDefinition = $.distributionDefinition;
        this.eventStreamDefinition = $.eventStreamDefinition;
        this.eventTimelineDefinition = $.eventTimelineDefinition;
        this.freeTextDefinition = $.freeTextDefinition;
        this.geomapDefinition = $.geomapDefinition;
        this.heatmapDefinition = $.heatmapDefinition;
        this.hostmapDefinition = $.hostmapDefinition;
        this.id = $.id;
        this.iframeDefinition = $.iframeDefinition;
        this.imageDefinition = $.imageDefinition;
        this.listStreamDefinition = $.listStreamDefinition;
        this.logStreamDefinition = $.logStreamDefinition;
        this.manageStatusDefinition = $.manageStatusDefinition;
        this.noteDefinition = $.noteDefinition;
        this.queryTableDefinition = $.queryTableDefinition;
        this.queryValueDefinition = $.queryValueDefinition;
        this.runWorkflowDefinition = $.runWorkflowDefinition;
        this.scatterplotDefinition = $.scatterplotDefinition;
        this.serviceLevelObjectiveDefinition = $.serviceLevelObjectiveDefinition;
        this.servicemapDefinition = $.servicemapDefinition;
        this.sloListDefinition = $.sloListDefinition;
        this.sunburstDefinition = $.sunburstDefinition;
        this.timeseriesDefinition = $.timeseriesDefinition;
        this.toplistDefinition = $.toplistDefinition;
        this.topologyMapDefinition = $.topologyMapDefinition;
        this.traceServiceDefinition = $.traceServiceDefinition;
        this.treemapDefinition = $.treemapDefinition;
        this.widgetLayout = $.widgetLayout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PowerpackWidgetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PowerpackWidgetArgs $;

        public Builder() {
            $ = new PowerpackWidgetArgs();
        }

        public Builder(PowerpackWidgetArgs defaults) {
            $ = new PowerpackWidgetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alertGraphDefinition The definition for a Alert Graph widget.
         * 
         * @return builder
         * 
         */
        public Builder alertGraphDefinition(@Nullable Output<PowerpackWidgetAlertGraphDefinitionArgs> alertGraphDefinition) {
            $.alertGraphDefinition = alertGraphDefinition;
            return this;
        }

        /**
         * @param alertGraphDefinition The definition for a Alert Graph widget.
         * 
         * @return builder
         * 
         */
        public Builder alertGraphDefinition(PowerpackWidgetAlertGraphDefinitionArgs alertGraphDefinition) {
            return alertGraphDefinition(Output.of(alertGraphDefinition));
        }

        /**
         * @param alertValueDefinition The definition for a Alert Value widget.
         * 
         * @return builder
         * 
         */
        public Builder alertValueDefinition(@Nullable Output<PowerpackWidgetAlertValueDefinitionArgs> alertValueDefinition) {
            $.alertValueDefinition = alertValueDefinition;
            return this;
        }

        /**
         * @param alertValueDefinition The definition for a Alert Value widget.
         * 
         * @return builder
         * 
         */
        public Builder alertValueDefinition(PowerpackWidgetAlertValueDefinitionArgs alertValueDefinition) {
            return alertValueDefinition(Output.of(alertValueDefinition));
        }

        /**
         * @param changeDefinition The definition for a Change widget.
         * 
         * @return builder
         * 
         */
        public Builder changeDefinition(@Nullable Output<PowerpackWidgetChangeDefinitionArgs> changeDefinition) {
            $.changeDefinition = changeDefinition;
            return this;
        }

        /**
         * @param changeDefinition The definition for a Change widget.
         * 
         * @return builder
         * 
         */
        public Builder changeDefinition(PowerpackWidgetChangeDefinitionArgs changeDefinition) {
            return changeDefinition(Output.of(changeDefinition));
        }

        /**
         * @param checkStatusDefinition The definition for a Check Status widget.
         * 
         * @return builder
         * 
         */
        public Builder checkStatusDefinition(@Nullable Output<PowerpackWidgetCheckStatusDefinitionArgs> checkStatusDefinition) {
            $.checkStatusDefinition = checkStatusDefinition;
            return this;
        }

        /**
         * @param checkStatusDefinition The definition for a Check Status widget.
         * 
         * @return builder
         * 
         */
        public Builder checkStatusDefinition(PowerpackWidgetCheckStatusDefinitionArgs checkStatusDefinition) {
            return checkStatusDefinition(Output.of(checkStatusDefinition));
        }

        /**
         * @param distributionDefinition The definition for a Distribution widget.
         * 
         * @return builder
         * 
         */
        public Builder distributionDefinition(@Nullable Output<PowerpackWidgetDistributionDefinitionArgs> distributionDefinition) {
            $.distributionDefinition = distributionDefinition;
            return this;
        }

        /**
         * @param distributionDefinition The definition for a Distribution widget.
         * 
         * @return builder
         * 
         */
        public Builder distributionDefinition(PowerpackWidgetDistributionDefinitionArgs distributionDefinition) {
            return distributionDefinition(Output.of(distributionDefinition));
        }

        /**
         * @param eventStreamDefinition The definition for a Event Stream widget.
         * 
         * @return builder
         * 
         */
        public Builder eventStreamDefinition(@Nullable Output<PowerpackWidgetEventStreamDefinitionArgs> eventStreamDefinition) {
            $.eventStreamDefinition = eventStreamDefinition;
            return this;
        }

        /**
         * @param eventStreamDefinition The definition for a Event Stream widget.
         * 
         * @return builder
         * 
         */
        public Builder eventStreamDefinition(PowerpackWidgetEventStreamDefinitionArgs eventStreamDefinition) {
            return eventStreamDefinition(Output.of(eventStreamDefinition));
        }

        /**
         * @param eventTimelineDefinition The definition for a Event Timeline widget.
         * 
         * @return builder
         * 
         */
        public Builder eventTimelineDefinition(@Nullable Output<PowerpackWidgetEventTimelineDefinitionArgs> eventTimelineDefinition) {
            $.eventTimelineDefinition = eventTimelineDefinition;
            return this;
        }

        /**
         * @param eventTimelineDefinition The definition for a Event Timeline widget.
         * 
         * @return builder
         * 
         */
        public Builder eventTimelineDefinition(PowerpackWidgetEventTimelineDefinitionArgs eventTimelineDefinition) {
            return eventTimelineDefinition(Output.of(eventTimelineDefinition));
        }

        /**
         * @param freeTextDefinition The definition for a Free Text widget.
         * 
         * @return builder
         * 
         */
        public Builder freeTextDefinition(@Nullable Output<PowerpackWidgetFreeTextDefinitionArgs> freeTextDefinition) {
            $.freeTextDefinition = freeTextDefinition;
            return this;
        }

        /**
         * @param freeTextDefinition The definition for a Free Text widget.
         * 
         * @return builder
         * 
         */
        public Builder freeTextDefinition(PowerpackWidgetFreeTextDefinitionArgs freeTextDefinition) {
            return freeTextDefinition(Output.of(freeTextDefinition));
        }

        /**
         * @param geomapDefinition The definition for a Geomap widget.
         * 
         * @return builder
         * 
         */
        public Builder geomapDefinition(@Nullable Output<PowerpackWidgetGeomapDefinitionArgs> geomapDefinition) {
            $.geomapDefinition = geomapDefinition;
            return this;
        }

        /**
         * @param geomapDefinition The definition for a Geomap widget.
         * 
         * @return builder
         * 
         */
        public Builder geomapDefinition(PowerpackWidgetGeomapDefinitionArgs geomapDefinition) {
            return geomapDefinition(Output.of(geomapDefinition));
        }

        /**
         * @param heatmapDefinition The definition for a Heatmap widget.
         * 
         * @return builder
         * 
         */
        public Builder heatmapDefinition(@Nullable Output<PowerpackWidgetHeatmapDefinitionArgs> heatmapDefinition) {
            $.heatmapDefinition = heatmapDefinition;
            return this;
        }

        /**
         * @param heatmapDefinition The definition for a Heatmap widget.
         * 
         * @return builder
         * 
         */
        public Builder heatmapDefinition(PowerpackWidgetHeatmapDefinitionArgs heatmapDefinition) {
            return heatmapDefinition(Output.of(heatmapDefinition));
        }

        /**
         * @param hostmapDefinition The definition for a Hostmap widget.
         * 
         * @return builder
         * 
         */
        public Builder hostmapDefinition(@Nullable Output<PowerpackWidgetHostmapDefinitionArgs> hostmapDefinition) {
            $.hostmapDefinition = hostmapDefinition;
            return this;
        }

        /**
         * @param hostmapDefinition The definition for a Hostmap widget.
         * 
         * @return builder
         * 
         */
        public Builder hostmapDefinition(PowerpackWidgetHostmapDefinitionArgs hostmapDefinition) {
            return hostmapDefinition(Output.of(hostmapDefinition));
        }

        /**
         * @param id The ID of the widget.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<Integer> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the widget.
         * 
         * @return builder
         * 
         */
        public Builder id(Integer id) {
            return id(Output.of(id));
        }

        /**
         * @param iframeDefinition The definition for an Iframe widget.
         * 
         * @return builder
         * 
         */
        public Builder iframeDefinition(@Nullable Output<PowerpackWidgetIframeDefinitionArgs> iframeDefinition) {
            $.iframeDefinition = iframeDefinition;
            return this;
        }

        /**
         * @param iframeDefinition The definition for an Iframe widget.
         * 
         * @return builder
         * 
         */
        public Builder iframeDefinition(PowerpackWidgetIframeDefinitionArgs iframeDefinition) {
            return iframeDefinition(Output.of(iframeDefinition));
        }

        /**
         * @param imageDefinition The definition for an Image widget
         * 
         * @return builder
         * 
         */
        public Builder imageDefinition(@Nullable Output<PowerpackWidgetImageDefinitionArgs> imageDefinition) {
            $.imageDefinition = imageDefinition;
            return this;
        }

        /**
         * @param imageDefinition The definition for an Image widget
         * 
         * @return builder
         * 
         */
        public Builder imageDefinition(PowerpackWidgetImageDefinitionArgs imageDefinition) {
            return imageDefinition(Output.of(imageDefinition));
        }

        /**
         * @param listStreamDefinition The definition for a List Stream widget.
         * 
         * @return builder
         * 
         */
        public Builder listStreamDefinition(@Nullable Output<PowerpackWidgetListStreamDefinitionArgs> listStreamDefinition) {
            $.listStreamDefinition = listStreamDefinition;
            return this;
        }

        /**
         * @param listStreamDefinition The definition for a List Stream widget.
         * 
         * @return builder
         * 
         */
        public Builder listStreamDefinition(PowerpackWidgetListStreamDefinitionArgs listStreamDefinition) {
            return listStreamDefinition(Output.of(listStreamDefinition));
        }

        /**
         * @param logStreamDefinition The definition for an Log Stream widget.
         * 
         * @return builder
         * 
         */
        public Builder logStreamDefinition(@Nullable Output<PowerpackWidgetLogStreamDefinitionArgs> logStreamDefinition) {
            $.logStreamDefinition = logStreamDefinition;
            return this;
        }

        /**
         * @param logStreamDefinition The definition for an Log Stream widget.
         * 
         * @return builder
         * 
         */
        public Builder logStreamDefinition(PowerpackWidgetLogStreamDefinitionArgs logStreamDefinition) {
            return logStreamDefinition(Output.of(logStreamDefinition));
        }

        /**
         * @param manageStatusDefinition The definition for an Manage Status widget.
         * 
         * @return builder
         * 
         */
        public Builder manageStatusDefinition(@Nullable Output<PowerpackWidgetManageStatusDefinitionArgs> manageStatusDefinition) {
            $.manageStatusDefinition = manageStatusDefinition;
            return this;
        }

        /**
         * @param manageStatusDefinition The definition for an Manage Status widget.
         * 
         * @return builder
         * 
         */
        public Builder manageStatusDefinition(PowerpackWidgetManageStatusDefinitionArgs manageStatusDefinition) {
            return manageStatusDefinition(Output.of(manageStatusDefinition));
        }

        /**
         * @param noteDefinition The definition for a Note widget.
         * 
         * @return builder
         * 
         */
        public Builder noteDefinition(@Nullable Output<PowerpackWidgetNoteDefinitionArgs> noteDefinition) {
            $.noteDefinition = noteDefinition;
            return this;
        }

        /**
         * @param noteDefinition The definition for a Note widget.
         * 
         * @return builder
         * 
         */
        public Builder noteDefinition(PowerpackWidgetNoteDefinitionArgs noteDefinition) {
            return noteDefinition(Output.of(noteDefinition));
        }

        /**
         * @param queryTableDefinition The definition for a Query Table widget.
         * 
         * @return builder
         * 
         */
        public Builder queryTableDefinition(@Nullable Output<PowerpackWidgetQueryTableDefinitionArgs> queryTableDefinition) {
            $.queryTableDefinition = queryTableDefinition;
            return this;
        }

        /**
         * @param queryTableDefinition The definition for a Query Table widget.
         * 
         * @return builder
         * 
         */
        public Builder queryTableDefinition(PowerpackWidgetQueryTableDefinitionArgs queryTableDefinition) {
            return queryTableDefinition(Output.of(queryTableDefinition));
        }

        /**
         * @param queryValueDefinition The definition for a Query Value widget.
         * 
         * @return builder
         * 
         */
        public Builder queryValueDefinition(@Nullable Output<PowerpackWidgetQueryValueDefinitionArgs> queryValueDefinition) {
            $.queryValueDefinition = queryValueDefinition;
            return this;
        }

        /**
         * @param queryValueDefinition The definition for a Query Value widget.
         * 
         * @return builder
         * 
         */
        public Builder queryValueDefinition(PowerpackWidgetQueryValueDefinitionArgs queryValueDefinition) {
            return queryValueDefinition(Output.of(queryValueDefinition));
        }

        /**
         * @param runWorkflowDefinition The definition for a Run Workflow widget.
         * 
         * @return builder
         * 
         */
        public Builder runWorkflowDefinition(@Nullable Output<PowerpackWidgetRunWorkflowDefinitionArgs> runWorkflowDefinition) {
            $.runWorkflowDefinition = runWorkflowDefinition;
            return this;
        }

        /**
         * @param runWorkflowDefinition The definition for a Run Workflow widget.
         * 
         * @return builder
         * 
         */
        public Builder runWorkflowDefinition(PowerpackWidgetRunWorkflowDefinitionArgs runWorkflowDefinition) {
            return runWorkflowDefinition(Output.of(runWorkflowDefinition));
        }

        /**
         * @param scatterplotDefinition The definition for a Scatterplot widget.
         * 
         * @return builder
         * 
         */
        public Builder scatterplotDefinition(@Nullable Output<PowerpackWidgetScatterplotDefinitionArgs> scatterplotDefinition) {
            $.scatterplotDefinition = scatterplotDefinition;
            return this;
        }

        /**
         * @param scatterplotDefinition The definition for a Scatterplot widget.
         * 
         * @return builder
         * 
         */
        public Builder scatterplotDefinition(PowerpackWidgetScatterplotDefinitionArgs scatterplotDefinition) {
            return scatterplotDefinition(Output.of(scatterplotDefinition));
        }

        /**
         * @param serviceLevelObjectiveDefinition The definition for a Service Level Objective widget.
         * 
         * @return builder
         * 
         */
        public Builder serviceLevelObjectiveDefinition(@Nullable Output<PowerpackWidgetServiceLevelObjectiveDefinitionArgs> serviceLevelObjectiveDefinition) {
            $.serviceLevelObjectiveDefinition = serviceLevelObjectiveDefinition;
            return this;
        }

        /**
         * @param serviceLevelObjectiveDefinition The definition for a Service Level Objective widget.
         * 
         * @return builder
         * 
         */
        public Builder serviceLevelObjectiveDefinition(PowerpackWidgetServiceLevelObjectiveDefinitionArgs serviceLevelObjectiveDefinition) {
            return serviceLevelObjectiveDefinition(Output.of(serviceLevelObjectiveDefinition));
        }

        /**
         * @param servicemapDefinition The definition for a Service Map widget.
         * 
         * @return builder
         * 
         */
        public Builder servicemapDefinition(@Nullable Output<PowerpackWidgetServicemapDefinitionArgs> servicemapDefinition) {
            $.servicemapDefinition = servicemapDefinition;
            return this;
        }

        /**
         * @param servicemapDefinition The definition for a Service Map widget.
         * 
         * @return builder
         * 
         */
        public Builder servicemapDefinition(PowerpackWidgetServicemapDefinitionArgs servicemapDefinition) {
            return servicemapDefinition(Output.of(servicemapDefinition));
        }

        /**
         * @param sloListDefinition The definition for an SLO (Service Level Objective) List widget.
         * 
         * @return builder
         * 
         */
        public Builder sloListDefinition(@Nullable Output<PowerpackWidgetSloListDefinitionArgs> sloListDefinition) {
            $.sloListDefinition = sloListDefinition;
            return this;
        }

        /**
         * @param sloListDefinition The definition for an SLO (Service Level Objective) List widget.
         * 
         * @return builder
         * 
         */
        public Builder sloListDefinition(PowerpackWidgetSloListDefinitionArgs sloListDefinition) {
            return sloListDefinition(Output.of(sloListDefinition));
        }

        /**
         * @param sunburstDefinition The definition for a Sunburst widget.
         * 
         * @return builder
         * 
         */
        public Builder sunburstDefinition(@Nullable Output<PowerpackWidgetSunburstDefinitionArgs> sunburstDefinition) {
            $.sunburstDefinition = sunburstDefinition;
            return this;
        }

        /**
         * @param sunburstDefinition The definition for a Sunburst widget.
         * 
         * @return builder
         * 
         */
        public Builder sunburstDefinition(PowerpackWidgetSunburstDefinitionArgs sunburstDefinition) {
            return sunburstDefinition(Output.of(sunburstDefinition));
        }

        /**
         * @param timeseriesDefinition The definition for a Timeseries widget.
         * 
         * @return builder
         * 
         */
        public Builder timeseriesDefinition(@Nullable Output<PowerpackWidgetTimeseriesDefinitionArgs> timeseriesDefinition) {
            $.timeseriesDefinition = timeseriesDefinition;
            return this;
        }

        /**
         * @param timeseriesDefinition The definition for a Timeseries widget.
         * 
         * @return builder
         * 
         */
        public Builder timeseriesDefinition(PowerpackWidgetTimeseriesDefinitionArgs timeseriesDefinition) {
            return timeseriesDefinition(Output.of(timeseriesDefinition));
        }

        /**
         * @param toplistDefinition The definition for a Toplist widget.
         * 
         * @return builder
         * 
         */
        public Builder toplistDefinition(@Nullable Output<PowerpackWidgetToplistDefinitionArgs> toplistDefinition) {
            $.toplistDefinition = toplistDefinition;
            return this;
        }

        /**
         * @param toplistDefinition The definition for a Toplist widget.
         * 
         * @return builder
         * 
         */
        public Builder toplistDefinition(PowerpackWidgetToplistDefinitionArgs toplistDefinition) {
            return toplistDefinition(Output.of(toplistDefinition));
        }

        /**
         * @param topologyMapDefinition The definition for a Topology Map widget.
         * 
         * @return builder
         * 
         */
        public Builder topologyMapDefinition(@Nullable Output<PowerpackWidgetTopologyMapDefinitionArgs> topologyMapDefinition) {
            $.topologyMapDefinition = topologyMapDefinition;
            return this;
        }

        /**
         * @param topologyMapDefinition The definition for a Topology Map widget.
         * 
         * @return builder
         * 
         */
        public Builder topologyMapDefinition(PowerpackWidgetTopologyMapDefinitionArgs topologyMapDefinition) {
            return topologyMapDefinition(Output.of(topologyMapDefinition));
        }

        /**
         * @param traceServiceDefinition The definition for a Trace Service widget.
         * 
         * @return builder
         * 
         */
        public Builder traceServiceDefinition(@Nullable Output<PowerpackWidgetTraceServiceDefinitionArgs> traceServiceDefinition) {
            $.traceServiceDefinition = traceServiceDefinition;
            return this;
        }

        /**
         * @param traceServiceDefinition The definition for a Trace Service widget.
         * 
         * @return builder
         * 
         */
        public Builder traceServiceDefinition(PowerpackWidgetTraceServiceDefinitionArgs traceServiceDefinition) {
            return traceServiceDefinition(Output.of(traceServiceDefinition));
        }

        /**
         * @param treemapDefinition The definition for a Treemap widget.
         * 
         * @return builder
         * 
         */
        public Builder treemapDefinition(@Nullable Output<PowerpackWidgetTreemapDefinitionArgs> treemapDefinition) {
            $.treemapDefinition = treemapDefinition;
            return this;
        }

        /**
         * @param treemapDefinition The definition for a Treemap widget.
         * 
         * @return builder
         * 
         */
        public Builder treemapDefinition(PowerpackWidgetTreemapDefinitionArgs treemapDefinition) {
            return treemapDefinition(Output.of(treemapDefinition));
        }

        /**
         * @param widgetLayout The layout of the widget on a &#39;free&#39; dashboard.
         * 
         * @return builder
         * 
         */
        public Builder widgetLayout(@Nullable Output<PowerpackWidgetWidgetLayoutArgs> widgetLayout) {
            $.widgetLayout = widgetLayout;
            return this;
        }

        /**
         * @param widgetLayout The layout of the widget on a &#39;free&#39; dashboard.
         * 
         * @return builder
         * 
         */
        public Builder widgetLayout(PowerpackWidgetWidgetLayoutArgs widgetLayout) {
            return widgetLayout(Output.of(widgetLayout));
        }

        public PowerpackWidgetArgs build() {
            return $;
        }
    }

}
