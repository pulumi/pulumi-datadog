// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.AuthnMappingArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.AuthnMappingState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Datadog AuthN Mappings resource. This feature lets you automatically assign roles to users based on their SAML attributes.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.DatadogFunctions;
 * import com.pulumi.datadog.inputs.GetRoleArgs;
 * import com.pulumi.datadog.AuthnMapping;
 * import com.pulumi.datadog.AuthnMappingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Source the role
 *         final var roRole = DatadogFunctions.getRole(GetRoleArgs.builder()
 *             .filter("Datadog Read Only Role")
 *             .build());
 * 
 *         // Create a new AuthN mapping
 *         var devRoRoleMapping = new AuthnMapping("devRoRoleMapping", AuthnMappingArgs.builder()        
 *             .key("Member-of")
 *             .value("Development")
 *             .role(roRole.applyValue(getRoleResult -> getRoleResult.id()))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * AuthN mappings can be imported using their ID, e.g.
 * 
 * ```sh
 * $ pulumi import datadog:index/authnMapping:AuthnMapping dev_ro_mapping 000000-0000-0000-0000-000000000000
 * ```
 * 
 */
@ResourceType(type="datadog:index/authnMapping:AuthnMapping")
public class AuthnMapping extends com.pulumi.resources.CustomResource {
    /**
     * Identity provider key.
     * 
     */
    @Export(name="key", refs={String.class}, tree="[0]")
    private Output<String> key;

    /**
     * @return Identity provider key.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * The ID of a role to attach to all users with the corresponding key and value.
     * 
     */
    @Export(name="role", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> role;

    /**
     * @return The ID of a role to attach to all users with the corresponding key and value.
     * 
     */
    public Output<Optional<String>> role() {
        return Codegen.optional(this.role);
    }
    /**
     * The ID of a team to add all users with the corresponding key and value to.
     * 
     */
    @Export(name="team", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> team;

    /**
     * @return The ID of a team to add all users with the corresponding key and value to.
     * 
     */
    public Output<Optional<String>> team() {
        return Codegen.optional(this.team);
    }
    /**
     * Identity provider value.
     * 
     */
    @Export(name="value", refs={String.class}, tree="[0]")
    private Output<String> value;

    /**
     * @return Identity provider value.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AuthnMapping(String name) {
        this(name, AuthnMappingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AuthnMapping(String name, AuthnMappingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AuthnMapping(String name, AuthnMappingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/authnMapping:AuthnMapping", name, args == null ? AuthnMappingArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AuthnMapping(String name, Output<String> id, @Nullable AuthnMappingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/authnMapping:AuthnMapping", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AuthnMapping get(String name, Output<String> id, @Nullable AuthnMappingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AuthnMapping(name, id, state, options);
    }
}
