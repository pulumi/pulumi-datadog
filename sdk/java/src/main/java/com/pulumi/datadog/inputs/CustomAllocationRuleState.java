// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.CustomAllocationRuleCostsToAllocateArgs;
import com.pulumi.datadog.inputs.CustomAllocationRuleStrategyArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomAllocationRuleState extends com.pulumi.resources.ResourceArgs {

    public static final CustomAllocationRuleState Empty = new CustomAllocationRuleState();

    @Import(name="costsToAllocates")
    private @Nullable Output<List<CustomAllocationRuleCostsToAllocateArgs>> costsToAllocates;

    public Optional<Output<List<CustomAllocationRuleCostsToAllocateArgs>>> costsToAllocates() {
        return Optional.ofNullable(this.costsToAllocates);
    }

    /**
     * The timestamp (in ISO 8601 format) when the rule was created.
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return The timestamp (in ISO 8601 format) when the rule was created.
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * Whether the custom allocation rule is enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the custom allocation rule is enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The UUID of the user who last modified the rule.
     * 
     */
    @Import(name="lastModifiedUserUuid")
    private @Nullable Output<String> lastModifiedUserUuid;

    /**
     * @return The UUID of the user who last modified the rule.
     * 
     */
    public Optional<Output<String>> lastModifiedUserUuid() {
        return Optional.ofNullable(this.lastModifiedUserUuid);
    }

    /**
     * The order of the rule in the list of custom allocation rules. This field is read-only. Use the `datadog.CustomAllocationRules` resource to manage rule order.
     * 
     */
    @Import(name="orderId")
    private @Nullable Output<Integer> orderId;

    /**
     * @return The order of the rule in the list of custom allocation rules. This field is read-only. Use the `datadog.CustomAllocationRules` resource to manage rule order.
     * 
     */
    public Optional<Output<Integer>> orderId() {
        return Optional.ofNullable(this.orderId);
    }

    /**
     * List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
     * 
     */
    @Import(name="providernames")
    private @Nullable Output<List<String>> providernames;

    /**
     * @return List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
     * 
     */
    public Optional<Output<List<String>>> providernames() {
        return Optional.ofNullable(this.providernames);
    }

    /**
     * Whether the rule was rejected by the API during creation due to validation errors. This field is read-only.
     * 
     */
    @Import(name="rejected")
    private @Nullable Output<Boolean> rejected;

    /**
     * @return Whether the rule was rejected by the API during creation due to validation errors. This field is read-only.
     * 
     */
    public Optional<Output<Boolean>> rejected() {
        return Optional.ofNullable(this.rejected);
    }

    /**
     * The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
     * 
     */
    @Import(name="ruleName")
    private @Nullable Output<String> ruleName;

    /**
     * @return The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
     * 
     */
    public Optional<Output<String>> ruleName() {
        return Optional.ofNullable(this.ruleName);
    }

    @Import(name="strategy")
    private @Nullable Output<CustomAllocationRuleStrategyArgs> strategy;

    public Optional<Output<CustomAllocationRuleStrategyArgs>> strategy() {
        return Optional.ofNullable(this.strategy);
    }

    /**
     * The timestamp (in ISO 8601 format) when the rule was last updated.
     * 
     */
    @Import(name="updated")
    private @Nullable Output<String> updated;

    /**
     * @return The timestamp (in ISO 8601 format) when the rule was last updated.
     * 
     */
    public Optional<Output<String>> updated() {
        return Optional.ofNullable(this.updated);
    }

    /**
     * The version number of the rule. This increments each time the rule is updated.
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version number of the rule. This increments each time the rule is updated.
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private CustomAllocationRuleState() {}

    private CustomAllocationRuleState(CustomAllocationRuleState $) {
        this.costsToAllocates = $.costsToAllocates;
        this.created = $.created;
        this.enabled = $.enabled;
        this.lastModifiedUserUuid = $.lastModifiedUserUuid;
        this.orderId = $.orderId;
        this.providernames = $.providernames;
        this.rejected = $.rejected;
        this.ruleName = $.ruleName;
        this.strategy = $.strategy;
        this.updated = $.updated;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomAllocationRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomAllocationRuleState $;

        public Builder() {
            $ = new CustomAllocationRuleState();
        }

        public Builder(CustomAllocationRuleState defaults) {
            $ = new CustomAllocationRuleState(Objects.requireNonNull(defaults));
        }

        public Builder costsToAllocates(@Nullable Output<List<CustomAllocationRuleCostsToAllocateArgs>> costsToAllocates) {
            $.costsToAllocates = costsToAllocates;
            return this;
        }

        public Builder costsToAllocates(List<CustomAllocationRuleCostsToAllocateArgs> costsToAllocates) {
            return costsToAllocates(Output.of(costsToAllocates));
        }

        public Builder costsToAllocates(CustomAllocationRuleCostsToAllocateArgs... costsToAllocates) {
            return costsToAllocates(List.of(costsToAllocates));
        }

        /**
         * @param created The timestamp (in ISO 8601 format) when the rule was created.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created The timestamp (in ISO 8601 format) when the rule was created.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param enabled Whether the custom allocation rule is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the custom allocation rule is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param lastModifiedUserUuid The UUID of the user who last modified the rule.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedUserUuid(@Nullable Output<String> lastModifiedUserUuid) {
            $.lastModifiedUserUuid = lastModifiedUserUuid;
            return this;
        }

        /**
         * @param lastModifiedUserUuid The UUID of the user who last modified the rule.
         * 
         * @return builder
         * 
         */
        public Builder lastModifiedUserUuid(String lastModifiedUserUuid) {
            return lastModifiedUserUuid(Output.of(lastModifiedUserUuid));
        }

        /**
         * @param orderId The order of the rule in the list of custom allocation rules. This field is read-only. Use the `datadog.CustomAllocationRules` resource to manage rule order.
         * 
         * @return builder
         * 
         */
        public Builder orderId(@Nullable Output<Integer> orderId) {
            $.orderId = orderId;
            return this;
        }

        /**
         * @param orderId The order of the rule in the list of custom allocation rules. This field is read-only. Use the `datadog.CustomAllocationRules` resource to manage rule order.
         * 
         * @return builder
         * 
         */
        public Builder orderId(Integer orderId) {
            return orderId(Output.of(orderId));
        }

        /**
         * @param providernames List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
         * 
         * @return builder
         * 
         */
        public Builder providernames(@Nullable Output<List<String>> providernames) {
            $.providernames = providernames;
            return this;
        }

        /**
         * @param providernames List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
         * 
         * @return builder
         * 
         */
        public Builder providernames(List<String> providernames) {
            return providernames(Output.of(providernames));
        }

        /**
         * @param providernames List of cloud providers the rule applies to. Valid values include `aws`, `azure`, and `gcp`.
         * 
         * @return builder
         * 
         */
        public Builder providernames(String... providernames) {
            return providernames(List.of(providernames));
        }

        /**
         * @param rejected Whether the rule was rejected by the API during creation due to validation errors. This field is read-only.
         * 
         * @return builder
         * 
         */
        public Builder rejected(@Nullable Output<Boolean> rejected) {
            $.rejected = rejected;
            return this;
        }

        /**
         * @param rejected Whether the rule was rejected by the API during creation due to validation errors. This field is read-only.
         * 
         * @return builder
         * 
         */
        public Builder rejected(Boolean rejected) {
            return rejected(Output.of(rejected));
        }

        /**
         * @param ruleName The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(@Nullable Output<String> ruleName) {
            $.ruleName = ruleName;
            return this;
        }

        /**
         * @param ruleName The name of the custom allocation rule. This field is immutable - changing it will force replacement of the resource.
         * 
         * @return builder
         * 
         */
        public Builder ruleName(String ruleName) {
            return ruleName(Output.of(ruleName));
        }

        public Builder strategy(@Nullable Output<CustomAllocationRuleStrategyArgs> strategy) {
            $.strategy = strategy;
            return this;
        }

        public Builder strategy(CustomAllocationRuleStrategyArgs strategy) {
            return strategy(Output.of(strategy));
        }

        /**
         * @param updated The timestamp (in ISO 8601 format) when the rule was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updated(@Nullable Output<String> updated) {
            $.updated = updated;
            return this;
        }

        /**
         * @param updated The timestamp (in ISO 8601 format) when the rule was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updated(String updated) {
            return updated(Output.of(updated));
        }

        /**
         * @param version The version number of the rule. This increments each time the rule is updated.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version number of the rule. This increments each time the rule is updated.
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public CustomAllocationRuleState build() {
            return $;
        }
    }

}
