// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardListDashItemArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardListArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardListArgs Empty = new DashboardListArgs();

    /**
     * A set of dashboard items that belong to this list
     * 
     */
    @Import(name="dashItems")
    private @Nullable Output<List<DashboardListDashItemArgs>> dashItems;

    /**
     * @return A set of dashboard items that belong to this list
     * 
     */
    public Optional<Output<List<DashboardListDashItemArgs>>> dashItems() {
        return Optional.ofNullable(this.dashItems);
    }

    /**
     * The name of the Dashboard List
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the Dashboard List
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private DashboardListArgs() {}

    private DashboardListArgs(DashboardListArgs $) {
        this.dashItems = $.dashItems;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardListArgs $;

        public Builder() {
            $ = new DashboardListArgs();
        }

        public Builder(DashboardListArgs defaults) {
            $ = new DashboardListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dashItems A set of dashboard items that belong to this list
         * 
         * @return builder
         * 
         */
        public Builder dashItems(@Nullable Output<List<DashboardListDashItemArgs>> dashItems) {
            $.dashItems = dashItems;
            return this;
        }

        /**
         * @param dashItems A set of dashboard items that belong to this list
         * 
         * @return builder
         * 
         */
        public Builder dashItems(List<DashboardListDashItemArgs> dashItems) {
            return dashItems(Output.of(dashItems));
        }

        /**
         * @param dashItems A set of dashboard items that belong to this list
         * 
         * @return builder
         * 
         */
        public Builder dashItems(DashboardListDashItemArgs... dashItems) {
            return dashItems(List.of(dashItems));
        }

        /**
         * @param name The name of the Dashboard List
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Dashboard List
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public DashboardListArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("DashboardListArgs", "name");
            }
            return $;
        }
    }

}
