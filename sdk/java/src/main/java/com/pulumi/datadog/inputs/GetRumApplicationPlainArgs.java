// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRumApplicationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRumApplicationPlainArgs Empty = new GetRumApplicationPlainArgs();

    /**
     * ID of the RUM application. Cannot be used with name and type filters.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return ID of the RUM application. Cannot be used with name and type filters.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name used to search for a RUM application.
     * 
     */
    @Import(name="nameFilter")
    private @Nullable String nameFilter;

    /**
     * @return The name used to search for a RUM application.
     * 
     */
    public Optional<String> nameFilter() {
        return Optional.ofNullable(this.nameFilter);
    }

    /**
     * The type used to search for a RUM application.
     * 
     */
    @Import(name="typeFilter")
    private @Nullable String typeFilter;

    /**
     * @return The type used to search for a RUM application.
     * 
     */
    public Optional<String> typeFilter() {
        return Optional.ofNullable(this.typeFilter);
    }

    private GetRumApplicationPlainArgs() {}

    private GetRumApplicationPlainArgs(GetRumApplicationPlainArgs $) {
        this.id = $.id;
        this.nameFilter = $.nameFilter;
        this.typeFilter = $.typeFilter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRumApplicationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRumApplicationPlainArgs $;

        public Builder() {
            $ = new GetRumApplicationPlainArgs();
        }

        public Builder(GetRumApplicationPlainArgs defaults) {
            $ = new GetRumApplicationPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id ID of the RUM application. Cannot be used with name and type filters.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param nameFilter The name used to search for a RUM application.
         * 
         * @return builder
         * 
         */
        public Builder nameFilter(@Nullable String nameFilter) {
            $.nameFilter = nameFilter;
            return this;
        }

        /**
         * @param typeFilter The type used to search for a RUM application.
         * 
         * @return builder
         * 
         */
        public Builder typeFilter(@Nullable String typeFilter) {
            $.typeFilter = typeFilter;
            return this;
        }

        public GetRumApplicationPlainArgs build() {
            return $;
        }
    }

}
