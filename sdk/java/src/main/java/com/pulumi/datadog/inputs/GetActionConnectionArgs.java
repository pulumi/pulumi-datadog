// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.GetActionConnectionAwsArgs;
import com.pulumi.datadog.inputs.GetActionConnectionHttpArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetActionConnectionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetActionConnectionArgs Empty = new GetActionConnectionArgs();

    /**
     * Configuration for an AWS connection
     * 
     */
    @Import(name="aws")
    private @Nullable Output<GetActionConnectionAwsArgs> aws;

    /**
     * @return Configuration for an AWS connection
     * 
     */
    public Optional<Output<GetActionConnectionAwsArgs>> aws() {
        return Optional.ofNullable(this.aws);
    }

    /**
     * Configuration for an HTTP connection
     * 
     */
    @Import(name="http")
    private @Nullable Output<GetActionConnectionHttpArgs> http;

    /**
     * @return Configuration for an HTTP connection
     * 
     */
    public Optional<Output<GetActionConnectionHttpArgs>> http() {
        return Optional.ofNullable(this.http);
    }

    /**
     * ID for Connection.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return ID for Connection.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    private GetActionConnectionArgs() {}

    private GetActionConnectionArgs(GetActionConnectionArgs $) {
        this.aws = $.aws;
        this.http = $.http;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetActionConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetActionConnectionArgs $;

        public Builder() {
            $ = new GetActionConnectionArgs();
        }

        public Builder(GetActionConnectionArgs defaults) {
            $ = new GetActionConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aws Configuration for an AWS connection
         * 
         * @return builder
         * 
         */
        public Builder aws(@Nullable Output<GetActionConnectionAwsArgs> aws) {
            $.aws = aws;
            return this;
        }

        /**
         * @param aws Configuration for an AWS connection
         * 
         * @return builder
         * 
         */
        public Builder aws(GetActionConnectionAwsArgs aws) {
            return aws(Output.of(aws));
        }

        /**
         * @param http Configuration for an HTTP connection
         * 
         * @return builder
         * 
         */
        public Builder http(@Nullable Output<GetActionConnectionHttpArgs> http) {
            $.http = http;
            return this;
        }

        /**
         * @param http Configuration for an HTTP connection
         * 
         * @return builder
         * 
         */
        public Builder http(GetActionConnectionHttpArgs http) {
            return http(Output.of(http));
        }

        /**
         * @param id ID for Connection.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id ID for Connection.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public GetActionConnectionArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetActionConnectionArgs", "id");
            }
            return $;
        }
    }

}
