// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.OnCallTeamRoutingRulesRuleAction;
import com.pulumi.datadog.outputs.OnCallTeamRoutingRulesRuleTimeRestrictions;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OnCallTeamRoutingRulesRule {
    /**
     * @return Specifies the list of actions to perform when the routing rule is matched.
     * 
     */
    private @Nullable List<OnCallTeamRoutingRulesRuleAction> actions;
    /**
     * @return ID of the policy to be applied when this routing rule matches.
     * 
     */
    private @Nullable String escalationPolicy;
    /**
     * @return The ID of this rule.
     * 
     */
    private @Nullable String id;
    /**
     * @return Defines the query or condition that triggers this routing rule. Defaults to `&#34;&#34;`.
     * 
     */
    private @Nullable String query;
    /**
     * @return Holds time zone information and a list of time restrictions for a routing rule.
     * 
     */
    private @Nullable OnCallTeamRoutingRulesRuleTimeRestrictions timeRestrictions;
    /**
     * @return Defines the urgency for pages created via this rule. Only valid if `escalation_policy` is set. Valid values are `high`, `low`, `dynamic`.
     * 
     */
    private @Nullable String urgency;

    private OnCallTeamRoutingRulesRule() {}
    /**
     * @return Specifies the list of actions to perform when the routing rule is matched.
     * 
     */
    public List<OnCallTeamRoutingRulesRuleAction> actions() {
        return this.actions == null ? List.of() : this.actions;
    }
    /**
     * @return ID of the policy to be applied when this routing rule matches.
     * 
     */
    public Optional<String> escalationPolicy() {
        return Optional.ofNullable(this.escalationPolicy);
    }
    /**
     * @return The ID of this rule.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Defines the query or condition that triggers this routing rule. Defaults to `&#34;&#34;`.
     * 
     */
    public Optional<String> query() {
        return Optional.ofNullable(this.query);
    }
    /**
     * @return Holds time zone information and a list of time restrictions for a routing rule.
     * 
     */
    public Optional<OnCallTeamRoutingRulesRuleTimeRestrictions> timeRestrictions() {
        return Optional.ofNullable(this.timeRestrictions);
    }
    /**
     * @return Defines the urgency for pages created via this rule. Only valid if `escalation_policy` is set. Valid values are `high`, `low`, `dynamic`.
     * 
     */
    public Optional<String> urgency() {
        return Optional.ofNullable(this.urgency);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OnCallTeamRoutingRulesRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<OnCallTeamRoutingRulesRuleAction> actions;
        private @Nullable String escalationPolicy;
        private @Nullable String id;
        private @Nullable String query;
        private @Nullable OnCallTeamRoutingRulesRuleTimeRestrictions timeRestrictions;
        private @Nullable String urgency;
        public Builder() {}
        public Builder(OnCallTeamRoutingRulesRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.escalationPolicy = defaults.escalationPolicy;
    	      this.id = defaults.id;
    	      this.query = defaults.query;
    	      this.timeRestrictions = defaults.timeRestrictions;
    	      this.urgency = defaults.urgency;
        }

        @CustomType.Setter
        public Builder actions(@Nullable List<OnCallTeamRoutingRulesRuleAction> actions) {

            this.actions = actions;
            return this;
        }
        public Builder actions(OnCallTeamRoutingRulesRuleAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder escalationPolicy(@Nullable String escalationPolicy) {

            this.escalationPolicy = escalationPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder query(@Nullable String query) {

            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder timeRestrictions(@Nullable OnCallTeamRoutingRulesRuleTimeRestrictions timeRestrictions) {

            this.timeRestrictions = timeRestrictions;
            return this;
        }
        @CustomType.Setter
        public Builder urgency(@Nullable String urgency) {

            this.urgency = urgency;
            return this;
        }
        public OnCallTeamRoutingRulesRule build() {
            final var _resultValue = new OnCallTeamRoutingRulesRule();
            _resultValue.actions = actions;
            _resultValue.escalationPolicy = escalationPolicy;
            _resultValue.id = id;
            _resultValue.query = query;
            _resultValue.timeRestrictions = timeRestrictions;
            _resultValue.urgency = urgency;
            return _resultValue;
        }
    }
}
