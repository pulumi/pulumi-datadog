// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.LogsIndexExclusionFilterFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogsIndexExclusionFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsIndexExclusionFilterArgs Empty = new LogsIndexExclusionFilterArgs();

    @Import(name="filters")
    private @Nullable Output<List<LogsIndexExclusionFilterFilterArgs>> filters;

    public Optional<Output<List<LogsIndexExclusionFilterFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A boolean stating if the exclusion is active or not.
     * 
     */
    @Import(name="isEnabled")
    private @Nullable Output<Boolean> isEnabled;

    /**
     * @return A boolean stating if the exclusion is active or not.
     * 
     */
    public Optional<Output<Boolean>> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }

    /**
     * The name of the exclusion filter.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the exclusion filter.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private LogsIndexExclusionFilterArgs() {}

    private LogsIndexExclusionFilterArgs(LogsIndexExclusionFilterArgs $) {
        this.filters = $.filters;
        this.isEnabled = $.isEnabled;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsIndexExclusionFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsIndexExclusionFilterArgs $;

        public Builder() {
            $ = new LogsIndexExclusionFilterArgs();
        }

        public Builder(LogsIndexExclusionFilterArgs defaults) {
            $ = new LogsIndexExclusionFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<LogsIndexExclusionFilterFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<LogsIndexExclusionFilterFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(LogsIndexExclusionFilterFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isEnabled A boolean stating if the exclusion is active or not.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(@Nullable Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled A boolean stating if the exclusion is active or not.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param name The name of the exclusion filter.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the exclusion filter.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public LogsIndexExclusionFilterArgs build() {
            return $;
        }
    }

}
