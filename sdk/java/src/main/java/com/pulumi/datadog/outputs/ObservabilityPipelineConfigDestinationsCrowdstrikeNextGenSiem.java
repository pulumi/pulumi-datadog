// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompression;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemTls;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiem {
    /**
     * @return Compression configuration for log events.
     * 
     */
    private @Nullable ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompression compression;
    /**
     * @return Encoding format for log events. Valid values are `json`, `raw_message`.
     * 
     */
    private String encoding;
    /**
     * @return Unique identifier for the destination component.
     * 
     */
    private String id;
    /**
     * @return A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    private List<String> inputs;
    /**
     * @return Configuration for enabling TLS encryption between the pipeline component and external services.
     * 
     */
    private @Nullable ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemTls tls;

    private ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiem() {}
    /**
     * @return Compression configuration for log events.
     * 
     */
    public Optional<ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompression> compression() {
        return Optional.ofNullable(this.compression);
    }
    /**
     * @return Encoding format for log events. Valid values are `json`, `raw_message`.
     * 
     */
    public String encoding() {
        return this.encoding;
    }
    /**
     * @return Unique identifier for the destination component.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    public List<String> inputs() {
        return this.inputs;
    }
    /**
     * @return Configuration for enabling TLS encryption between the pipeline component and external services.
     * 
     */
    public Optional<ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemTls> tls() {
        return Optional.ofNullable(this.tls);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompression compression;
        private String encoding;
        private String id;
        private List<String> inputs;
        private @Nullable ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemTls tls;
        public Builder() {}
        public Builder(ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compression = defaults.compression;
    	      this.encoding = defaults.encoding;
    	      this.id = defaults.id;
    	      this.inputs = defaults.inputs;
    	      this.tls = defaults.tls;
        }

        @CustomType.Setter
        public Builder compression(@Nullable ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemCompression compression) {

            this.compression = compression;
            return this;
        }
        @CustomType.Setter
        public Builder encoding(String encoding) {
            if (encoding == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiem", "encoding");
            }
            this.encoding = encoding;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inputs(List<String> inputs) {
            if (inputs == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiem", "inputs");
            }
            this.inputs = inputs;
            return this;
        }
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }
        @CustomType.Setter
        public Builder tls(@Nullable ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiemTls tls) {

            this.tls = tls;
            return this;
        }
        public ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiem build() {
            final var _resultValue = new ObservabilityPipelineConfigDestinationsCrowdstrikeNextGenSiem();
            _resultValue.compression = compression;
            _resultValue.encoding = encoding;
            _resultValue.id = id;
            _resultValue.inputs = inputs;
            _resultValue.tls = tls;
            return _resultValue;
        }
    }
}
