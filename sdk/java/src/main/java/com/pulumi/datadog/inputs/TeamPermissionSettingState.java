// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TeamPermissionSettingState extends com.pulumi.resources.ResourceArgs {

    public static final TeamPermissionSettingState Empty = new TeamPermissionSettingState();

    /**
     * The identifier for the action. Valid values are `manage_membership`, `edit`.
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return The identifier for the action. Valid values are `manage_membership`, `edit`.
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * ID of the team the team permission setting is associated with.
     * 
     */
    @Import(name="teamId")
    private @Nullable Output<String> teamId;

    /**
     * @return ID of the team the team permission setting is associated with.
     * 
     */
    public Optional<Output<String>> teamId() {
        return Optional.ofNullable(this.teamId);
    }

    /**
     * The action value. Valid values are dependent on the action. `manage_membership` action allows `admins`, `members`, `organization`, `user_access_manage` values. `edit` action allows `admins`, `members`, `teams_manage` values.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return The action value. Valid values are dependent on the action. `manage_membership` action allows `admins`, `members`, `organization`, `user_access_manage` values. `edit` action allows `admins`, `members`, `teams_manage` values.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private TeamPermissionSettingState() {}

    private TeamPermissionSettingState(TeamPermissionSettingState $) {
        this.action = $.action;
        this.teamId = $.teamId;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TeamPermissionSettingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TeamPermissionSettingState $;

        public Builder() {
            $ = new TeamPermissionSettingState();
        }

        public Builder(TeamPermissionSettingState defaults) {
            $ = new TeamPermissionSettingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The identifier for the action. Valid values are `manage_membership`, `edit`.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The identifier for the action. Valid values are `manage_membership`, `edit`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param teamId ID of the team the team permission setting is associated with.
         * 
         * @return builder
         * 
         */
        public Builder teamId(@Nullable Output<String> teamId) {
            $.teamId = teamId;
            return this;
        }

        /**
         * @param teamId ID of the team the team permission setting is associated with.
         * 
         * @return builder
         * 
         */
        public Builder teamId(String teamId) {
            return teamId(Output.of(teamId));
        }

        /**
         * @param value The action value. Valid values are dependent on the action. `manage_membership` action allows `admins`, `members`, `organization`, `user_access_manage` values. `edit` action allows `admins`, `members`, `teams_manage` values.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The action value. Valid values are dependent on the action. `manage_membership` action allows `admins`, `members`, `organization`, `user_access_manage` values. `edit` action allows `admins`, `members`, `teams_manage` values.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public TeamPermissionSettingState build() {
            return $;
        }
    }

}
