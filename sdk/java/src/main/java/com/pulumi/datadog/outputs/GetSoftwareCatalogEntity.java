// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSoftwareCatalogEntity {
    private String displayName;
    private String id;
    private String kind;
    private String name;
    private String namespace;
    private String owner;
    private List<String> tags;

    private GetSoftwareCatalogEntity() {}
    public String displayName() {
        return this.displayName;
    }
    public String id() {
        return this.id;
    }
    public String kind() {
        return this.kind;
    }
    public String name() {
        return this.name;
    }
    public String namespace() {
        return this.namespace;
    }
    public String owner() {
        return this.owner;
    }
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSoftwareCatalogEntity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String id;
        private String kind;
        private String name;
        private String namespace;
        private String owner;
        private List<String> tags;
        public Builder() {}
        public Builder(GetSoftwareCatalogEntity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.owner = defaults.owner;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSoftwareCatalogEntity", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSoftwareCatalogEntity", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetSoftwareCatalogEntity", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSoftwareCatalogEntity", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetSoftwareCatalogEntity", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder owner(String owner) {
            if (owner == null) {
              throw new MissingRequiredPropertyException("GetSoftwareCatalogEntity", "owner");
            }
            this.owner = owner;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetSoftwareCatalogEntity", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetSoftwareCatalogEntity build() {
            final var _resultValue = new GetSoftwareCatalogEntity();
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.kind = kind;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.owner = owner;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
