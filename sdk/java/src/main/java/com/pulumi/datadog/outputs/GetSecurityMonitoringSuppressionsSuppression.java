// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSecurityMonitoringSuppressionsSuppression {
    private String description;
    private Boolean enabled;
    private String expirationDate;
    private String id;
    private String name;
    private String ruleQuery;
    private String suppressionQuery;

    private GetSecurityMonitoringSuppressionsSuppression() {}
    public String description() {
        return this.description;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public String expirationDate() {
        return this.expirationDate;
    }
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String ruleQuery() {
        return this.ruleQuery;
    }
    public String suppressionQuery() {
        return this.suppressionQuery;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityMonitoringSuppressionsSuppression defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private Boolean enabled;
        private String expirationDate;
        private String id;
        private String name;
        private String ruleQuery;
        private String suppressionQuery;
        public Builder() {}
        public Builder(GetSecurityMonitoringSuppressionsSuppression defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.expirationDate = defaults.expirationDate;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.ruleQuery = defaults.ruleQuery;
    	      this.suppressionQuery = defaults.suppressionQuery;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSecurityMonitoringSuppressionsSuppression", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetSecurityMonitoringSuppressionsSuppression", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder expirationDate(String expirationDate) {
            if (expirationDate == null) {
              throw new MissingRequiredPropertyException("GetSecurityMonitoringSuppressionsSuppression", "expirationDate");
            }
            this.expirationDate = expirationDate;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSecurityMonitoringSuppressionsSuppression", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSecurityMonitoringSuppressionsSuppression", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ruleQuery(String ruleQuery) {
            if (ruleQuery == null) {
              throw new MissingRequiredPropertyException("GetSecurityMonitoringSuppressionsSuppression", "ruleQuery");
            }
            this.ruleQuery = ruleQuery;
            return this;
        }
        @CustomType.Setter
        public Builder suppressionQuery(String suppressionQuery) {
            if (suppressionQuery == null) {
              throw new MissingRequiredPropertyException("GetSecurityMonitoringSuppressionsSuppression", "suppressionQuery");
            }
            this.suppressionQuery = suppressionQuery;
            return this;
        }
        public GetSecurityMonitoringSuppressionsSuppression build() {
            final var _resultValue = new GetSecurityMonitoringSuppressionsSuppression();
            _resultValue.description = description;
            _resultValue.enabled = enabled;
            _resultValue.expirationDate = expirationDate;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.ruleQuery = ruleQuery;
            _resultValue.suppressionQuery = suppressionQuery;
            return _resultValue;
        }
    }
}
