// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.UserRoleArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.UserRoleState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a Datadog UserRole resource. This can be used to create and manage Datadog User Roles. Conflicts may occur if used together with the `datadog.User` resource&#39;s `roles` attribute. This resource is in beta and is subject to change.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.Role;
 * import com.pulumi.datadog.RoleArgs;
 * import com.pulumi.datadog.inputs.RolePermissionArgs;
 * import com.pulumi.datadog.User;
 * import com.pulumi.datadog.UserArgs;
 * import com.pulumi.datadog.UserRole;
 * import com.pulumi.datadog.UserRoleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var monitorWriterRole = new Role("monitorWriterRole", RoleArgs.builder()
 *             .name("Monitor Writer Role")
 *             .permissions(RolePermissionArgs.builder()
 *                 .id(bar.permissions().monitorsWrite())
 *                 .build())
 *             .build());
 * 
 *         var newUser = new User("newUser", UserArgs.builder()
 *             .email("new{@literal @}example.com")
 *             .build());
 * 
 *         // Create new user_role resource
 *         var newUserWithMonitorWriterRole = new UserRole("newUserWithMonitorWriterRole", UserRoleArgs.builder()
 *             .roleId(monitorWriterRole.id())
 *             .userId(newUser.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * This resource is imported using user_id and role_id seperated by `:`.
 * 
 * ```sh
 * $ pulumi import datadog:index/userRole:UserRole user_with_admin_role &#34;${role_id}:${user_id}&#34;
 * ```
 * 
 */
@ResourceType(type="datadog:index/userRole:UserRole")
public class UserRole extends com.pulumi.resources.CustomResource {
    /**
     * ID of the role that the user is assigned to.
     * 
     */
    @Export(name="roleId", refs={String.class}, tree="[0]")
    private Output<String> roleId;

    /**
     * @return ID of the role that the user is assigned to.
     * 
     */
    public Output<String> roleId() {
        return this.roleId;
    }
    /**
     * The ID of the user.
     * 
     */
    @Export(name="userId", refs={String.class}, tree="[0]")
    private Output<String> userId;

    /**
     * @return The ID of the user.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserRole(String name) {
        this(name, UserRoleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserRole(String name, UserRoleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserRole(String name, UserRoleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/userRole:UserRole", name, args == null ? UserRoleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private UserRole(String name, Output<String> id, @Nullable UserRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/userRole:UserRole", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserRole get(String name, Output<String> id, @Nullable UserRoleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new UserRole(name, id, state, options);
    }
}
