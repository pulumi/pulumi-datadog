// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMonitorSchedulingOptionEvaluationWindow {
    private String dayStarts;
    private Integer hourStarts;
    private Integer monthStarts;

    private GetMonitorSchedulingOptionEvaluationWindow() {}
    public String dayStarts() {
        return this.dayStarts;
    }
    public Integer hourStarts() {
        return this.hourStarts;
    }
    public Integer monthStarts() {
        return this.monthStarts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitorSchedulingOptionEvaluationWindow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dayStarts;
        private Integer hourStarts;
        private Integer monthStarts;
        public Builder() {}
        public Builder(GetMonitorSchedulingOptionEvaluationWindow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayStarts = defaults.dayStarts;
    	      this.hourStarts = defaults.hourStarts;
    	      this.monthStarts = defaults.monthStarts;
        }

        @CustomType.Setter
        public Builder dayStarts(String dayStarts) {
            if (dayStarts == null) {
              throw new MissingRequiredPropertyException("GetMonitorSchedulingOptionEvaluationWindow", "dayStarts");
            }
            this.dayStarts = dayStarts;
            return this;
        }
        @CustomType.Setter
        public Builder hourStarts(Integer hourStarts) {
            if (hourStarts == null) {
              throw new MissingRequiredPropertyException("GetMonitorSchedulingOptionEvaluationWindow", "hourStarts");
            }
            this.hourStarts = hourStarts;
            return this;
        }
        @CustomType.Setter
        public Builder monthStarts(Integer monthStarts) {
            if (monthStarts == null) {
              throw new MissingRequiredPropertyException("GetMonitorSchedulingOptionEvaluationWindow", "monthStarts");
            }
            this.monthStarts = monthStarts;
            return this;
        }
        public GetMonitorSchedulingOptionEvaluationWindow build() {
            final var _resultValue = new GetMonitorSchedulingOptionEvaluationWindow();
            _resultValue.dayStarts = dayStarts;
            _resultValue.hourStarts = hourStarts;
            _resultValue.monthStarts = monthStarts;
            return _resultValue;
        }
    }
}
