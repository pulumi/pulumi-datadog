// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSensitiveDataScannerStandardPatternResult {
    /**
     * @return Filter all the Datadog standard patterns by name.
     * 
     */
    private String filter;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return List of recommended keywords to improve rule accuracy.
     * 
     */
    private List<String> includedKeywords;
    /**
     * @return Name of the standard pattern.
     * 
     */
    private String name;
    /**
     * @return Regex that the standard pattern applies.
     * 
     */
    private String pattern;
    /**
     * @return List of tags.
     * 
     */
    private List<String> tags;

    private GetSensitiveDataScannerStandardPatternResult() {}
    /**
     * @return Filter all the Datadog standard patterns by name.
     * 
     */
    public String filter() {
        return this.filter;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of recommended keywords to improve rule accuracy.
     * 
     */
    public List<String> includedKeywords() {
        return this.includedKeywords;
    }
    /**
     * @return Name of the standard pattern.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Regex that the standard pattern applies.
     * 
     */
    public String pattern() {
        return this.pattern;
    }
    /**
     * @return List of tags.
     * 
     */
    public List<String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSensitiveDataScannerStandardPatternResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String filter;
        private String id;
        private List<String> includedKeywords;
        private String name;
        private String pattern;
        private List<String> tags;
        public Builder() {}
        public Builder(GetSensitiveDataScannerStandardPatternResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.id = defaults.id;
    	      this.includedKeywords = defaults.includedKeywords;
    	      this.name = defaults.name;
    	      this.pattern = defaults.pattern;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder filter(String filter) {
            if (filter == null) {
              throw new MissingRequiredPropertyException("GetSensitiveDataScannerStandardPatternResult", "filter");
            }
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSensitiveDataScannerStandardPatternResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includedKeywords(List<String> includedKeywords) {
            if (includedKeywords == null) {
              throw new MissingRequiredPropertyException("GetSensitiveDataScannerStandardPatternResult", "includedKeywords");
            }
            this.includedKeywords = includedKeywords;
            return this;
        }
        public Builder includedKeywords(String... includedKeywords) {
            return includedKeywords(List.of(includedKeywords));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSensitiveDataScannerStandardPatternResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder pattern(String pattern) {
            if (pattern == null) {
              throw new MissingRequiredPropertyException("GetSensitiveDataScannerStandardPatternResult", "pattern");
            }
            this.pattern = pattern;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetSensitiveDataScannerStandardPatternResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public GetSensitiveDataScannerStandardPatternResult build() {
            final var _resultValue = new GetSensitiveDataScannerStandardPatternResult();
            _resultValue.filter = filter;
            _resultValue.id = id;
            _resultValue.includedKeywords = includedKeywords;
            _resultValue.name = name;
            _resultValue.pattern = pattern;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
