// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.ms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class IntegrationTeamsTenantBasedHandleArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationTeamsTenantBasedHandleArgs Empty = new IntegrationTeamsTenantBasedHandleArgs();

    /**
     * Your channel name.
     * 
     */
    @Import(name="channelName", required=true)
    private Output<String> channelName;

    /**
     * @return Your channel name.
     * 
     */
    public Output<String> channelName() {
        return this.channelName;
    }

    /**
     * Your tenant-based handle name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Your tenant-based handle name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Your team name.
     * 
     */
    @Import(name="teamName", required=true)
    private Output<String> teamName;

    /**
     * @return Your team name.
     * 
     */
    public Output<String> teamName() {
        return this.teamName;
    }

    /**
     * Your tenant name.
     * 
     */
    @Import(name="tenantName", required=true)
    private Output<String> tenantName;

    /**
     * @return Your tenant name.
     * 
     */
    public Output<String> tenantName() {
        return this.tenantName;
    }

    private IntegrationTeamsTenantBasedHandleArgs() {}

    private IntegrationTeamsTenantBasedHandleArgs(IntegrationTeamsTenantBasedHandleArgs $) {
        this.channelName = $.channelName;
        this.name = $.name;
        this.teamName = $.teamName;
        this.tenantName = $.tenantName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationTeamsTenantBasedHandleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationTeamsTenantBasedHandleArgs $;

        public Builder() {
            $ = new IntegrationTeamsTenantBasedHandleArgs();
        }

        public Builder(IntegrationTeamsTenantBasedHandleArgs defaults) {
            $ = new IntegrationTeamsTenantBasedHandleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param channelName Your channel name.
         * 
         * @return builder
         * 
         */
        public Builder channelName(Output<String> channelName) {
            $.channelName = channelName;
            return this;
        }

        /**
         * @param channelName Your channel name.
         * 
         * @return builder
         * 
         */
        public Builder channelName(String channelName) {
            return channelName(Output.of(channelName));
        }

        /**
         * @param name Your tenant-based handle name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Your tenant-based handle name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param teamName Your team name.
         * 
         * @return builder
         * 
         */
        public Builder teamName(Output<String> teamName) {
            $.teamName = teamName;
            return this;
        }

        /**
         * @param teamName Your team name.
         * 
         * @return builder
         * 
         */
        public Builder teamName(String teamName) {
            return teamName(Output.of(teamName));
        }

        /**
         * @param tenantName Your tenant name.
         * 
         * @return builder
         * 
         */
        public Builder tenantName(Output<String> tenantName) {
            $.tenantName = tenantName;
            return this;
        }

        /**
         * @param tenantName Your tenant name.
         * 
         * @return builder
         * 
         */
        public Builder tenantName(String tenantName) {
            return tenantName(Output.of(tenantName));
        }

        public IntegrationTeamsTenantBasedHandleArgs build() {
            if ($.channelName == null) {
                throw new MissingRequiredPropertyException("IntegrationTeamsTenantBasedHandleArgs", "channelName");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("IntegrationTeamsTenantBasedHandleArgs", "name");
            }
            if ($.teamName == null) {
                throw new MissingRequiredPropertyException("IntegrationTeamsTenantBasedHandleArgs", "teamName");
            }
            if ($.tenantName == null) {
                throw new MissingRequiredPropertyException("IntegrationTeamsTenantBasedHandleArgs", "tenantName");
            }
            return $;
        }
    }

}
