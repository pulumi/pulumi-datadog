// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigSourcesGooglePubsubAuthArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigSourcesGooglePubsubTlsArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigSourcesGooglePubsubArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigSourcesGooglePubsubArgs Empty = new ObservabilityPipelineConfigSourcesGooglePubsubArgs();

    /**
     * GCP credentials used to authenticate with Google Cloud Storage.
     * 
     */
    @Import(name="auth")
    private @Nullable Output<ObservabilityPipelineConfigSourcesGooglePubsubAuthArgs> auth;

    /**
     * @return GCP credentials used to authenticate with Google Cloud Storage.
     * 
     */
    public Optional<Output<ObservabilityPipelineConfigSourcesGooglePubsubAuthArgs>> auth() {
        return Optional.ofNullable(this.auth);
    }

    /**
     * The decoding format used to interpret incoming logs.
     * 
     */
    @Import(name="decoding", required=true)
    private Output<String> decoding;

    /**
     * @return The decoding format used to interpret incoming logs.
     * 
     */
    public Output<String> decoding() {
        return this.decoding;
    }

    /**
     * The unique identifier for this component. Used to reference this component in other parts of the pipeline (e.g., as input to downstream components).
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The unique identifier for this component. Used to reference this component in other parts of the pipeline (e.g., as input to downstream components).
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The GCP project ID that owns the Pub/Sub subscription.
     * 
     */
    @Import(name="project", required=true)
    private Output<String> project;

    /**
     * @return The GCP project ID that owns the Pub/Sub subscription.
     * 
     */
    public Output<String> project() {
        return this.project;
    }

    /**
     * The Pub/Sub subscription name from which messages are consumed.
     * 
     */
    @Import(name="subscription", required=true)
    private Output<String> subscription;

    /**
     * @return The Pub/Sub subscription name from which messages are consumed.
     * 
     */
    public Output<String> subscription() {
        return this.subscription;
    }

    /**
     * Configuration for enabling TLS encryption between the pipeline component and external services.
     * 
     */
    @Import(name="tls")
    private @Nullable Output<ObservabilityPipelineConfigSourcesGooglePubsubTlsArgs> tls;

    /**
     * @return Configuration for enabling TLS encryption between the pipeline component and external services.
     * 
     */
    public Optional<Output<ObservabilityPipelineConfigSourcesGooglePubsubTlsArgs>> tls() {
        return Optional.ofNullable(this.tls);
    }

    private ObservabilityPipelineConfigSourcesGooglePubsubArgs() {}

    private ObservabilityPipelineConfigSourcesGooglePubsubArgs(ObservabilityPipelineConfigSourcesGooglePubsubArgs $) {
        this.auth = $.auth;
        this.decoding = $.decoding;
        this.id = $.id;
        this.project = $.project;
        this.subscription = $.subscription;
        this.tls = $.tls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigSourcesGooglePubsubArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigSourcesGooglePubsubArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigSourcesGooglePubsubArgs();
        }

        public Builder(ObservabilityPipelineConfigSourcesGooglePubsubArgs defaults) {
            $ = new ObservabilityPipelineConfigSourcesGooglePubsubArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auth GCP credentials used to authenticate with Google Cloud Storage.
         * 
         * @return builder
         * 
         */
        public Builder auth(@Nullable Output<ObservabilityPipelineConfigSourcesGooglePubsubAuthArgs> auth) {
            $.auth = auth;
            return this;
        }

        /**
         * @param auth GCP credentials used to authenticate with Google Cloud Storage.
         * 
         * @return builder
         * 
         */
        public Builder auth(ObservabilityPipelineConfigSourcesGooglePubsubAuthArgs auth) {
            return auth(Output.of(auth));
        }

        /**
         * @param decoding The decoding format used to interpret incoming logs.
         * 
         * @return builder
         * 
         */
        public Builder decoding(Output<String> decoding) {
            $.decoding = decoding;
            return this;
        }

        /**
         * @param decoding The decoding format used to interpret incoming logs.
         * 
         * @return builder
         * 
         */
        public Builder decoding(String decoding) {
            return decoding(Output.of(decoding));
        }

        /**
         * @param id The unique identifier for this component. Used to reference this component in other parts of the pipeline (e.g., as input to downstream components).
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique identifier for this component. Used to reference this component in other parts of the pipeline (e.g., as input to downstream components).
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param project The GCP project ID that owns the Pub/Sub subscription.
         * 
         * @return builder
         * 
         */
        public Builder project(Output<String> project) {
            $.project = project;
            return this;
        }

        /**
         * @param project The GCP project ID that owns the Pub/Sub subscription.
         * 
         * @return builder
         * 
         */
        public Builder project(String project) {
            return project(Output.of(project));
        }

        /**
         * @param subscription The Pub/Sub subscription name from which messages are consumed.
         * 
         * @return builder
         * 
         */
        public Builder subscription(Output<String> subscription) {
            $.subscription = subscription;
            return this;
        }

        /**
         * @param subscription The Pub/Sub subscription name from which messages are consumed.
         * 
         * @return builder
         * 
         */
        public Builder subscription(String subscription) {
            return subscription(Output.of(subscription));
        }

        /**
         * @param tls Configuration for enabling TLS encryption between the pipeline component and external services.
         * 
         * @return builder
         * 
         */
        public Builder tls(@Nullable Output<ObservabilityPipelineConfigSourcesGooglePubsubTlsArgs> tls) {
            $.tls = tls;
            return this;
        }

        /**
         * @param tls Configuration for enabling TLS encryption between the pipeline component and external services.
         * 
         * @return builder
         * 
         */
        public Builder tls(ObservabilityPipelineConfigSourcesGooglePubsubTlsArgs tls) {
            return tls(Output.of(tls));
        }

        public ObservabilityPipelineConfigSourcesGooglePubsubArgs build() {
            if ($.decoding == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigSourcesGooglePubsubArgs", "decoding");
            }
            if ($.id == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigSourcesGooglePubsubArgs", "id");
            }
            if ($.project == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigSourcesGooglePubsubArgs", "project");
            }
            if ($.subscription == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigSourcesGooglePubsubArgs", "subscription");
            }
            return $;
        }
    }

}
