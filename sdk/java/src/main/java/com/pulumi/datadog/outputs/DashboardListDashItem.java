// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DashboardListDashItem {
    /**
     * @return The ID of the dashboard to add
     * 
     */
    private String dashId;
    /**
     * @return The type of this dashboard. Valid values are `custom_timeboard`, `custom_screenboard`, `integration_screenboard`, `integration_timeboard`, `host_timeboard`.
     * 
     */
    private String type;

    private DashboardListDashItem() {}
    /**
     * @return The ID of the dashboard to add
     * 
     */
    public String dashId() {
        return this.dashId;
    }
    /**
     * @return The type of this dashboard. Valid values are `custom_timeboard`, `custom_screenboard`, `integration_screenboard`, `integration_timeboard`, `host_timeboard`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardListDashItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dashId;
        private String type;
        public Builder() {}
        public Builder(DashboardListDashItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dashId = defaults.dashId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dashId(String dashId) {
            if (dashId == null) {
              throw new MissingRequiredPropertyException("DashboardListDashItem", "dashId");
            }
            this.dashId = dashId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("DashboardListDashItem", "type");
            }
            this.type = type;
            return this;
        }
        public DashboardListDashItem build() {
            final var _resultValue = new DashboardListDashItem();
            _resultValue.dashId = dashId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
