// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigProcessorsCustomProcessorArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigProcessorsCustomProcessorArgs Empty = new ObservabilityPipelineConfigProcessorsCustomProcessorArgs();

    /**
     * The unique identifier for this processor.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The unique identifier for this processor.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * A list of component IDs whose output is used as the input for this processor.
     * 
     */
    @Import(name="inputs", required=true)
    private Output<List<String>> inputs;

    /**
     * @return A list of component IDs whose output is used as the input for this processor.
     * 
     */
    public Output<List<String>> inputs() {
        return this.inputs;
    }

    /**
     * Array of VRL remap configurations. Each remap defines a transformation rule with its own filter and VRL script.
     * 
     */
    @Import(name="remaps")
    private @Nullable Output<List<ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs>> remaps;

    /**
     * @return Array of VRL remap configurations. Each remap defines a transformation rule with its own filter and VRL script.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs>>> remaps() {
        return Optional.ofNullable(this.remaps);
    }

    private ObservabilityPipelineConfigProcessorsCustomProcessorArgs() {}

    private ObservabilityPipelineConfigProcessorsCustomProcessorArgs(ObservabilityPipelineConfigProcessorsCustomProcessorArgs $) {
        this.id = $.id;
        this.inputs = $.inputs;
        this.remaps = $.remaps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigProcessorsCustomProcessorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigProcessorsCustomProcessorArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigProcessorsCustomProcessorArgs();
        }

        public Builder(ObservabilityPipelineConfigProcessorsCustomProcessorArgs defaults) {
            $ = new ObservabilityPipelineConfigProcessorsCustomProcessorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The unique identifier for this processor.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique identifier for this processor.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param inputs A list of component IDs whose output is used as the input for this processor.
         * 
         * @return builder
         * 
         */
        public Builder inputs(Output<List<String>> inputs) {
            $.inputs = inputs;
            return this;
        }

        /**
         * @param inputs A list of component IDs whose output is used as the input for this processor.
         * 
         * @return builder
         * 
         */
        public Builder inputs(List<String> inputs) {
            return inputs(Output.of(inputs));
        }

        /**
         * @param inputs A list of component IDs whose output is used as the input for this processor.
         * 
         * @return builder
         * 
         */
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }

        /**
         * @param remaps Array of VRL remap configurations. Each remap defines a transformation rule with its own filter and VRL script.
         * 
         * @return builder
         * 
         */
        public Builder remaps(@Nullable Output<List<ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs>> remaps) {
            $.remaps = remaps;
            return this;
        }

        /**
         * @param remaps Array of VRL remap configurations. Each remap defines a transformation rule with its own filter and VRL script.
         * 
         * @return builder
         * 
         */
        public Builder remaps(List<ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs> remaps) {
            return remaps(Output.of(remaps));
        }

        /**
         * @param remaps Array of VRL remap configurations. Each remap defines a transformation rule with its own filter and VRL script.
         * 
         * @return builder
         * 
         */
        public Builder remaps(ObservabilityPipelineConfigProcessorsCustomProcessorRemapArgs... remaps) {
            return remaps(List.of(remaps));
        }

        public ObservabilityPipelineConfigProcessorsCustomProcessorArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsCustomProcessorArgs", "id");
            }
            if ($.inputs == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsCustomProcessorArgs", "inputs");
            }
            return $;
        }
    }

}
