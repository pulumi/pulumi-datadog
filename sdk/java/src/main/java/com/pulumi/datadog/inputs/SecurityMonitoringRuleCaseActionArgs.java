// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.SecurityMonitoringRuleCaseActionOptionsArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityMonitoringRuleCaseActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityMonitoringRuleCaseActionArgs Empty = new SecurityMonitoringRuleCaseActionArgs();

    /**
     * Options for the action.
     * 
     */
    @Import(name="options")
    private @Nullable Output<SecurityMonitoringRuleCaseActionOptionsArgs> options;

    /**
     * @return Options for the action.
     * 
     */
    public Optional<Output<SecurityMonitoringRuleCaseActionOptionsArgs>> options() {
        return Optional.ofNullable(this.options);
    }

    /**
     * Type of action to perform when the case triggers. Valid values are `block_ip`, `block_user`, `user_behavior`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of action to perform when the case triggers. Valid values are `block_ip`, `block_user`, `user_behavior`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private SecurityMonitoringRuleCaseActionArgs() {}

    private SecurityMonitoringRuleCaseActionArgs(SecurityMonitoringRuleCaseActionArgs $) {
        this.options = $.options;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityMonitoringRuleCaseActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityMonitoringRuleCaseActionArgs $;

        public Builder() {
            $ = new SecurityMonitoringRuleCaseActionArgs();
        }

        public Builder(SecurityMonitoringRuleCaseActionArgs defaults) {
            $ = new SecurityMonitoringRuleCaseActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param options Options for the action.
         * 
         * @return builder
         * 
         */
        public Builder options(@Nullable Output<SecurityMonitoringRuleCaseActionOptionsArgs> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options Options for the action.
         * 
         * @return builder
         * 
         */
        public Builder options(SecurityMonitoringRuleCaseActionOptionsArgs options) {
            return options(Output.of(options));
        }

        /**
         * @param type Type of action to perform when the case triggers. Valid values are `block_ip`, `block_user`, `user_behavior`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of action to perform when the case triggers. Valid values are `block_ip`, `block_user`, `user_behavior`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SecurityMonitoringRuleCaseActionArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("SecurityMonitoringRuleCaseActionArgs", "type");
            }
            return $;
        }
    }

}
