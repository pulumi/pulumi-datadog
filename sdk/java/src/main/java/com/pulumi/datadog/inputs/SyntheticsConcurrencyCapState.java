// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsConcurrencyCapState extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsConcurrencyCapState Empty = new SyntheticsConcurrencyCapState();

    /**
     * Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.
     * 
     */
    @Import(name="onDemandConcurrencyCap")
    private @Nullable Output<Integer> onDemandConcurrencyCap;

    /**
     * @return Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.
     * 
     */
    public Optional<Output<Integer>> onDemandConcurrencyCap() {
        return Optional.ofNullable(this.onDemandConcurrencyCap);
    }

    private SyntheticsConcurrencyCapState() {}

    private SyntheticsConcurrencyCapState(SyntheticsConcurrencyCapState $) {
        this.onDemandConcurrencyCap = $.onDemandConcurrencyCap;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsConcurrencyCapState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsConcurrencyCapState $;

        public Builder() {
            $ = new SyntheticsConcurrencyCapState();
        }

        public Builder(SyntheticsConcurrencyCapState defaults) {
            $ = new SyntheticsConcurrencyCapState(Objects.requireNonNull(defaults));
        }

        /**
         * @param onDemandConcurrencyCap Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.
         * 
         * @return builder
         * 
         */
        public Builder onDemandConcurrencyCap(@Nullable Output<Integer> onDemandConcurrencyCap) {
            $.onDemandConcurrencyCap = onDemandConcurrencyCap;
            return this;
        }

        /**
         * @param onDemandConcurrencyCap Value of the on-demand concurrency cap, customizing the number of Synthetic tests run in parallel.
         * 
         * @return builder
         * 
         */
        public Builder onDemandConcurrencyCap(Integer onDemandConcurrencyCap) {
            return onDemandConcurrencyCap(Output.of(onDemandConcurrencyCap));
        }

        public SyntheticsConcurrencyCapState build() {
            return $;
        }
    }

}
