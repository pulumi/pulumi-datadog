// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DashboardWidgetSloListDefinitionRequestQuerySortArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetSloListDefinitionRequestQuerySortArgs Empty = new DashboardWidgetSloListDefinitionRequestQuerySortArgs();

    @Import(name="column", required=true)
    private Output<String> column;

    public Output<String> column() {
        return this.column;
    }

    @Import(name="order", required=true)
    private Output<String> order;

    public Output<String> order() {
        return this.order;
    }

    private DashboardWidgetSloListDefinitionRequestQuerySortArgs() {}

    private DashboardWidgetSloListDefinitionRequestQuerySortArgs(DashboardWidgetSloListDefinitionRequestQuerySortArgs $) {
        this.column = $.column;
        this.order = $.order;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetSloListDefinitionRequestQuerySortArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetSloListDefinitionRequestQuerySortArgs $;

        public Builder() {
            $ = new DashboardWidgetSloListDefinitionRequestQuerySortArgs();
        }

        public Builder(DashboardWidgetSloListDefinitionRequestQuerySortArgs defaults) {
            $ = new DashboardWidgetSloListDefinitionRequestQuerySortArgs(Objects.requireNonNull(defaults));
        }

        public Builder column(Output<String> column) {
            $.column = column;
            return this;
        }

        public Builder column(String column) {
            return column(Output.of(column));
        }

        public Builder order(Output<String> order) {
            $.order = order;
            return this;
        }

        public Builder order(String order) {
            return order(Output.of(order));
        }

        public DashboardWidgetSloListDefinitionRequestQuerySortArgs build() {
            $.column = Objects.requireNonNull($.column, "expected parameter 'column' to be non-null");
            $.order = Objects.requireNonNull($.order, "expected parameter 'order' to be non-null");
            return $;
        }
    }

}
