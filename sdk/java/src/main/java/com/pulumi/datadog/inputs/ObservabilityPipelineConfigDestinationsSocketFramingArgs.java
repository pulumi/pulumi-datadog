// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigDestinationsSocketFramingCharacterDelimitedArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigDestinationsSocketFramingArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigDestinationsSocketFramingArgs Empty = new ObservabilityPipelineConfigDestinationsSocketFramingArgs();

    /**
     * Used when `method` is `character_delimited`. Specifies the delimiter character.
     * 
     */
    @Import(name="characterDelimited")
    private @Nullable Output<ObservabilityPipelineConfigDestinationsSocketFramingCharacterDelimitedArgs> characterDelimited;

    /**
     * @return Used when `method` is `character_delimited`. Specifies the delimiter character.
     * 
     */
    public Optional<Output<ObservabilityPipelineConfigDestinationsSocketFramingCharacterDelimitedArgs>> characterDelimited() {
        return Optional.ofNullable(this.characterDelimited);
    }

    /**
     * The framing method. Valid values are `newline_delimited`, `bytes`, `character_delimited`.
     * 
     */
    @Import(name="method", required=true)
    private Output<String> method;

    /**
     * @return The framing method. Valid values are `newline_delimited`, `bytes`, `character_delimited`.
     * 
     */
    public Output<String> method() {
        return this.method;
    }

    private ObservabilityPipelineConfigDestinationsSocketFramingArgs() {}

    private ObservabilityPipelineConfigDestinationsSocketFramingArgs(ObservabilityPipelineConfigDestinationsSocketFramingArgs $) {
        this.characterDelimited = $.characterDelimited;
        this.method = $.method;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigDestinationsSocketFramingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigDestinationsSocketFramingArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigDestinationsSocketFramingArgs();
        }

        public Builder(ObservabilityPipelineConfigDestinationsSocketFramingArgs defaults) {
            $ = new ObservabilityPipelineConfigDestinationsSocketFramingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param characterDelimited Used when `method` is `character_delimited`. Specifies the delimiter character.
         * 
         * @return builder
         * 
         */
        public Builder characterDelimited(@Nullable Output<ObservabilityPipelineConfigDestinationsSocketFramingCharacterDelimitedArgs> characterDelimited) {
            $.characterDelimited = characterDelimited;
            return this;
        }

        /**
         * @param characterDelimited Used when `method` is `character_delimited`. Specifies the delimiter character.
         * 
         * @return builder
         * 
         */
        public Builder characterDelimited(ObservabilityPipelineConfigDestinationsSocketFramingCharacterDelimitedArgs characterDelimited) {
            return characterDelimited(Output.of(characterDelimited));
        }

        /**
         * @param method The framing method. Valid values are `newline_delimited`, `bytes`, `character_delimited`.
         * 
         * @return builder
         * 
         */
        public Builder method(Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method The framing method. Valid values are `newline_delimited`, `bytes`, `character_delimited`.
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        public ObservabilityPipelineConfigDestinationsSocketFramingArgs build() {
            if ($.method == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsSocketFramingArgs", "method");
            }
            return $;
        }
    }

}
