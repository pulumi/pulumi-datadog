// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigProcessorsOcsfMapperArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigProcessorsOcsfMapperArgs Empty = new ObservabilityPipelineConfigProcessorsOcsfMapperArgs();

    /**
     * The unique identifier for this component.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The unique identifier for this component.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Search query to select logs.
     * 
     */
    @Import(name="include", required=true)
    private Output<String> include;

    /**
     * @return Search query to select logs.
     * 
     */
    public Output<String> include() {
        return this.include;
    }

    /**
     * List of component IDs whose output is used as input.
     * 
     */
    @Import(name="inputs", required=true)
    private Output<List<String>> inputs;

    /**
     * @return List of component IDs whose output is used as input.
     * 
     */
    public Output<List<String>> inputs() {
        return this.inputs;
    }

    /**
     * List of OCSF mapping entries using library mapping.
     * 
     */
    @Import(name="mappings")
    private @Nullable Output<List<ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs>> mappings;

    /**
     * @return List of OCSF mapping entries using library mapping.
     * 
     */
    public Optional<Output<List<ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs>>> mappings() {
        return Optional.ofNullable(this.mappings);
    }

    private ObservabilityPipelineConfigProcessorsOcsfMapperArgs() {}

    private ObservabilityPipelineConfigProcessorsOcsfMapperArgs(ObservabilityPipelineConfigProcessorsOcsfMapperArgs $) {
        this.id = $.id;
        this.include = $.include;
        this.inputs = $.inputs;
        this.mappings = $.mappings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigProcessorsOcsfMapperArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigProcessorsOcsfMapperArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigProcessorsOcsfMapperArgs();
        }

        public Builder(ObservabilityPipelineConfigProcessorsOcsfMapperArgs defaults) {
            $ = new ObservabilityPipelineConfigProcessorsOcsfMapperArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The unique identifier for this component.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique identifier for this component.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param include Search query to select logs.
         * 
         * @return builder
         * 
         */
        public Builder include(Output<String> include) {
            $.include = include;
            return this;
        }

        /**
         * @param include Search query to select logs.
         * 
         * @return builder
         * 
         */
        public Builder include(String include) {
            return include(Output.of(include));
        }

        /**
         * @param inputs List of component IDs whose output is used as input.
         * 
         * @return builder
         * 
         */
        public Builder inputs(Output<List<String>> inputs) {
            $.inputs = inputs;
            return this;
        }

        /**
         * @param inputs List of component IDs whose output is used as input.
         * 
         * @return builder
         * 
         */
        public Builder inputs(List<String> inputs) {
            return inputs(Output.of(inputs));
        }

        /**
         * @param inputs List of component IDs whose output is used as input.
         * 
         * @return builder
         * 
         */
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }

        /**
         * @param mappings List of OCSF mapping entries using library mapping.
         * 
         * @return builder
         * 
         */
        public Builder mappings(@Nullable Output<List<ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs>> mappings) {
            $.mappings = mappings;
            return this;
        }

        /**
         * @param mappings List of OCSF mapping entries using library mapping.
         * 
         * @return builder
         * 
         */
        public Builder mappings(List<ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs> mappings) {
            return mappings(Output.of(mappings));
        }

        /**
         * @param mappings List of OCSF mapping entries using library mapping.
         * 
         * @return builder
         * 
         */
        public Builder mappings(ObservabilityPipelineConfigProcessorsOcsfMapperMappingArgs... mappings) {
            return mappings(List.of(mappings));
        }

        public ObservabilityPipelineConfigProcessorsOcsfMapperArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsOcsfMapperArgs", "id");
            }
            if ($.include == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsOcsfMapperArgs", "include");
            }
            if ($.inputs == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsOcsfMapperArgs", "inputs");
            }
            return $;
        }
    }

}
