// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVector;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplit {
    /**
     * @return The split graph list contains a graph for each value of the split dimension.
     * 
     */
    private List<DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVector> splitVectors;

    private DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplit() {}
    /**
     * @return The split graph list contains a graph for each value of the split dimension.
     * 
     */
    public List<DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVector> splitVectors() {
        return this.splitVectors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVector> splitVectors;
        public Builder() {}
        public Builder(DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.splitVectors = defaults.splitVectors;
        }

        @CustomType.Setter
        public Builder splitVectors(List<DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVector> splitVectors) {
            if (splitVectors == null) {
              throw new MissingRequiredPropertyException("DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplit", "splitVectors");
            }
            this.splitVectors = splitVectors;
            return this;
        }
        public Builder splitVectors(DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplitSplitVector... splitVectors) {
            return splitVectors(List.of(splitVectors));
        }
        public DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplit build() {
            final var _resultValue = new DashboardWidgetSplitGraphDefinitionSplitConfigStaticSplit();
            _resultValue.splitVectors = splitVectors;
            return _resultValue;
        }
    }
}
