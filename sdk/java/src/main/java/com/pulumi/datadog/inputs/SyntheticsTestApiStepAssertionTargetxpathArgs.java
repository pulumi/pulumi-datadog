// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsTestApiStepAssertionTargetxpathArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsTestApiStepAssertionTargetxpathArgs Empty = new SyntheticsTestApiStepAssertionTargetxpathArgs();

    @Import(name="operator", required=true)
    private Output<String> operator;

    public Output<String> operator() {
        return this.operator;
    }

    @Import(name="targetvalue")
    private @Nullable Output<String> targetvalue;

    public Optional<Output<String>> targetvalue() {
        return Optional.ofNullable(this.targetvalue);
    }

    @Import(name="xpath", required=true)
    private Output<String> xpath;

    public Output<String> xpath() {
        return this.xpath;
    }

    private SyntheticsTestApiStepAssertionTargetxpathArgs() {}

    private SyntheticsTestApiStepAssertionTargetxpathArgs(SyntheticsTestApiStepAssertionTargetxpathArgs $) {
        this.operator = $.operator;
        this.targetvalue = $.targetvalue;
        this.xpath = $.xpath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsTestApiStepAssertionTargetxpathArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsTestApiStepAssertionTargetxpathArgs $;

        public Builder() {
            $ = new SyntheticsTestApiStepAssertionTargetxpathArgs();
        }

        public Builder(SyntheticsTestApiStepAssertionTargetxpathArgs defaults) {
            $ = new SyntheticsTestApiStepAssertionTargetxpathArgs(Objects.requireNonNull(defaults));
        }

        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        public Builder targetvalue(@Nullable Output<String> targetvalue) {
            $.targetvalue = targetvalue;
            return this;
        }

        public Builder targetvalue(String targetvalue) {
            return targetvalue(Output.of(targetvalue));
        }

        public Builder xpath(Output<String> xpath) {
            $.xpath = xpath;
            return this;
        }

        public Builder xpath(String xpath) {
            return xpath(Output.of(xpath));
        }

        public SyntheticsTestApiStepAssertionTargetxpathArgs build() {
            $.operator = Objects.requireNonNull($.operator, "expected parameter 'operator' to be non-null");
            $.xpath = Objects.requireNonNull($.xpath, "expected parameter 'xpath' to be non-null");
            return $;
        }
    }

}
