// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.MonitorVariablesCloudCostQueryArgs;
import com.pulumi.datadog.inputs.MonitorVariablesEventQueryArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorVariablesArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorVariablesArgs Empty = new MonitorVariablesArgs();

    /**
     * The Cloud Cost query using formulas and functions.
     * 
     */
    @Import(name="cloudCostQueries")
    private @Nullable Output<List<MonitorVariablesCloudCostQueryArgs>> cloudCostQueries;

    /**
     * @return The Cloud Cost query using formulas and functions.
     * 
     */
    public Optional<Output<List<MonitorVariablesCloudCostQueryArgs>>> cloudCostQueries() {
        return Optional.ofNullable(this.cloudCostQueries);
    }

    /**
     * A timeseries formula and functions events query.
     * 
     */
    @Import(name="eventQueries")
    private @Nullable Output<List<MonitorVariablesEventQueryArgs>> eventQueries;

    /**
     * @return A timeseries formula and functions events query.
     * 
     */
    public Optional<Output<List<MonitorVariablesEventQueryArgs>>> eventQueries() {
        return Optional.ofNullable(this.eventQueries);
    }

    private MonitorVariablesArgs() {}

    private MonitorVariablesArgs(MonitorVariablesArgs $) {
        this.cloudCostQueries = $.cloudCostQueries;
        this.eventQueries = $.eventQueries;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorVariablesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorVariablesArgs $;

        public Builder() {
            $ = new MonitorVariablesArgs();
        }

        public Builder(MonitorVariablesArgs defaults) {
            $ = new MonitorVariablesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudCostQueries The Cloud Cost query using formulas and functions.
         * 
         * @return builder
         * 
         */
        public Builder cloudCostQueries(@Nullable Output<List<MonitorVariablesCloudCostQueryArgs>> cloudCostQueries) {
            $.cloudCostQueries = cloudCostQueries;
            return this;
        }

        /**
         * @param cloudCostQueries The Cloud Cost query using formulas and functions.
         * 
         * @return builder
         * 
         */
        public Builder cloudCostQueries(List<MonitorVariablesCloudCostQueryArgs> cloudCostQueries) {
            return cloudCostQueries(Output.of(cloudCostQueries));
        }

        /**
         * @param cloudCostQueries The Cloud Cost query using formulas and functions.
         * 
         * @return builder
         * 
         */
        public Builder cloudCostQueries(MonitorVariablesCloudCostQueryArgs... cloudCostQueries) {
            return cloudCostQueries(List.of(cloudCostQueries));
        }

        /**
         * @param eventQueries A timeseries formula and functions events query.
         * 
         * @return builder
         * 
         */
        public Builder eventQueries(@Nullable Output<List<MonitorVariablesEventQueryArgs>> eventQueries) {
            $.eventQueries = eventQueries;
            return this;
        }

        /**
         * @param eventQueries A timeseries formula and functions events query.
         * 
         * @return builder
         * 
         */
        public Builder eventQueries(List<MonitorVariablesEventQueryArgs> eventQueries) {
            return eventQueries(Output.of(eventQueries));
        }

        /**
         * @param eventQueries A timeseries formula and functions events query.
         * 
         * @return builder
         * 
         */
        public Builder eventQueries(MonitorVariablesEventQueryArgs... eventQueries) {
            return eventQueries(List.of(eventQueries));
        }

        public MonitorVariablesArgs build() {
            return $;
        }
    }

}
