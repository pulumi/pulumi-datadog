// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs Empty = new ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs();

    /**
     * Path to the IP field in the log.
     * 
     */
    @Import(name="keyField")
    private @Nullable Output<String> keyField;

    /**
     * @return Path to the IP field in the log.
     * 
     */
    public Optional<Output<String>> keyField() {
        return Optional.ofNullable(this.keyField);
    }

    /**
     * Locale used to resolve geographical names.
     * 
     */
    @Import(name="locale")
    private @Nullable Output<String> locale;

    /**
     * @return Locale used to resolve geographical names.
     * 
     */
    public Optional<Output<String>> locale() {
        return Optional.ofNullable(this.locale);
    }

    /**
     * Path to the GeoIP database file.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Path to the GeoIP database file.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    private ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs() {}

    private ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs(ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs $) {
        this.keyField = $.keyField;
        this.locale = $.locale;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs();
        }

        public Builder(ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs defaults) {
            $ = new ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyField Path to the IP field in the log.
         * 
         * @return builder
         * 
         */
        public Builder keyField(@Nullable Output<String> keyField) {
            $.keyField = keyField;
            return this;
        }

        /**
         * @param keyField Path to the IP field in the log.
         * 
         * @return builder
         * 
         */
        public Builder keyField(String keyField) {
            return keyField(Output.of(keyField));
        }

        /**
         * @param locale Locale used to resolve geographical names.
         * 
         * @return builder
         * 
         */
        public Builder locale(@Nullable Output<String> locale) {
            $.locale = locale;
            return this;
        }

        /**
         * @param locale Locale used to resolve geographical names.
         * 
         * @return builder
         * 
         */
        public Builder locale(String locale) {
            return locale(Output.of(locale));
        }

        /**
         * @param path Path to the GeoIP database file.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path to the GeoIP database file.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs build() {
            return $;
        }
    }

}
