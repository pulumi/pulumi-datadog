// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsTestApiStepAssertionTargetjsonschemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsTestApiStepAssertionTargetjsonschemaArgs Empty = new SyntheticsTestApiStepAssertionTargetjsonschemaArgs();

    /**
     * The JSON Schema to validate the body against.
     * 
     */
    @Import(name="jsonschema", required=true)
    private Output<String> jsonschema;

    /**
     * @return The JSON Schema to validate the body against.
     * 
     */
    public Output<String> jsonschema() {
        return this.jsonschema;
    }

    /**
     * The meta schema to use for the JSON Schema. Defaults to `&#34;draft-07&#34;`.
     * 
     */
    @Import(name="metaschema")
    private @Nullable Output<String> metaschema;

    /**
     * @return The meta schema to use for the JSON Schema. Defaults to `&#34;draft-07&#34;`.
     * 
     */
    public Optional<Output<String>> metaschema() {
        return Optional.ofNullable(this.metaschema);
    }

    private SyntheticsTestApiStepAssertionTargetjsonschemaArgs() {}

    private SyntheticsTestApiStepAssertionTargetjsonschemaArgs(SyntheticsTestApiStepAssertionTargetjsonschemaArgs $) {
        this.jsonschema = $.jsonschema;
        this.metaschema = $.metaschema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsTestApiStepAssertionTargetjsonschemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsTestApiStepAssertionTargetjsonschemaArgs $;

        public Builder() {
            $ = new SyntheticsTestApiStepAssertionTargetjsonschemaArgs();
        }

        public Builder(SyntheticsTestApiStepAssertionTargetjsonschemaArgs defaults) {
            $ = new SyntheticsTestApiStepAssertionTargetjsonschemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jsonschema The JSON Schema to validate the body against.
         * 
         * @return builder
         * 
         */
        public Builder jsonschema(Output<String> jsonschema) {
            $.jsonschema = jsonschema;
            return this;
        }

        /**
         * @param jsonschema The JSON Schema to validate the body against.
         * 
         * @return builder
         * 
         */
        public Builder jsonschema(String jsonschema) {
            return jsonschema(Output.of(jsonschema));
        }

        /**
         * @param metaschema The meta schema to use for the JSON Schema. Defaults to `&#34;draft-07&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder metaschema(@Nullable Output<String> metaschema) {
            $.metaschema = metaschema;
            return this;
        }

        /**
         * @param metaschema The meta schema to use for the JSON Schema. Defaults to `&#34;draft-07&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder metaschema(String metaschema) {
            return metaschema(Output.of(metaschema));
        }

        public SyntheticsTestApiStepAssertionTargetjsonschemaArgs build() {
            if ($.jsonschema == null) {
                throw new MissingRequiredPropertyException("SyntheticsTestApiStepAssertionTargetjsonschemaArgs", "jsonschema");
            }
            return $;
        }
    }

}
