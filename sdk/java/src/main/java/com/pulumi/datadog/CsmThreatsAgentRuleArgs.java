// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.CsmThreatsAgentRuleActionArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CsmThreatsAgentRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CsmThreatsAgentRuleArgs Empty = new CsmThreatsAgentRuleArgs();

    /**
     * The list of actions the rule can perform
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<CsmThreatsAgentRuleActionArgs>> actions;

    /**
     * @return The list of actions the rule can perform
     * 
     */
    public Optional<Output<List<CsmThreatsAgentRuleActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * A description for the Agent rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description for the Agent rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Indicates whether the Agent rule is enabled. Must not be used without policy_id.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Indicates whether the Agent rule is enabled. Must not be used without policy_id.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The SECL expression of the Agent rule
     * 
     */
    @Import(name="expression", required=true)
    private Output<String> expression;

    /**
     * @return The SECL expression of the Agent rule
     * 
     */
    public Output<String> expression() {
        return this.expression;
    }

    /**
     * The name of the Agent rule.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the Agent rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The ID of the agent policy in which the rule is saved
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    /**
     * @return The ID of the agent policy in which the rule is saved
     * 
     */
    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    /**
     * The list of product tags associated with the rule
     * 
     */
    @Import(name="productTags")
    private @Nullable Output<List<String>> productTags;

    /**
     * @return The list of product tags associated with the rule
     * 
     */
    public Optional<Output<List<String>>> productTags() {
        return Optional.ofNullable(this.productTags);
    }

    private CsmThreatsAgentRuleArgs() {}

    private CsmThreatsAgentRuleArgs(CsmThreatsAgentRuleArgs $) {
        this.actions = $.actions;
        this.description = $.description;
        this.enabled = $.enabled;
        this.expression = $.expression;
        this.name = $.name;
        this.policyId = $.policyId;
        this.productTags = $.productTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CsmThreatsAgentRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CsmThreatsAgentRuleArgs $;

        public Builder() {
            $ = new CsmThreatsAgentRuleArgs();
        }

        public Builder(CsmThreatsAgentRuleArgs defaults) {
            $ = new CsmThreatsAgentRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions The list of actions the rule can perform
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<CsmThreatsAgentRuleActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions The list of actions the rule can perform
         * 
         * @return builder
         * 
         */
        public Builder actions(List<CsmThreatsAgentRuleActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions The list of actions the rule can perform
         * 
         * @return builder
         * 
         */
        public Builder actions(CsmThreatsAgentRuleActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param description A description for the Agent rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description for the Agent rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enabled Indicates whether the Agent rule is enabled. Must not be used without policy_id.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Indicates whether the Agent rule is enabled. Must not be used without policy_id.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param expression The SECL expression of the Agent rule
         * 
         * @return builder
         * 
         */
        public Builder expression(Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression The SECL expression of the Agent rule
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param name The name of the Agent rule.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Agent rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policyId The ID of the agent policy in which the rule is saved
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId The ID of the agent policy in which the rule is saved
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        /**
         * @param productTags The list of product tags associated with the rule
         * 
         * @return builder
         * 
         */
        public Builder productTags(@Nullable Output<List<String>> productTags) {
            $.productTags = productTags;
            return this;
        }

        /**
         * @param productTags The list of product tags associated with the rule
         * 
         * @return builder
         * 
         */
        public Builder productTags(List<String> productTags) {
            return productTags(Output.of(productTags));
        }

        /**
         * @param productTags The list of product tags associated with the rule
         * 
         * @return builder
         * 
         */
        public Builder productTags(String... productTags) {
            return productTags(List.of(productTags));
        }

        public CsmThreatsAgentRuleArgs build() {
            if ($.expression == null) {
                throw new MissingRequiredPropertyException("CsmThreatsAgentRuleArgs", "expression");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("CsmThreatsAgentRuleArgs", "name");
            }
            return $;
        }
    }

}
