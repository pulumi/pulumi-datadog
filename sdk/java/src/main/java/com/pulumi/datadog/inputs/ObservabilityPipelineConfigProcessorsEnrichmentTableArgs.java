// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigProcessorsEnrichmentTableFileArgs;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineConfigProcessorsEnrichmentTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineConfigProcessorsEnrichmentTableArgs Empty = new ObservabilityPipelineConfigProcessorsEnrichmentTableArgs();

    /**
     * Defines a static enrichment table loaded from a CSV file.
     * 
     */
    @Import(name="file")
    private @Nullable Output<ObservabilityPipelineConfigProcessorsEnrichmentTableFileArgs> file;

    /**
     * @return Defines a static enrichment table loaded from a CSV file.
     * 
     */
    public Optional<Output<ObservabilityPipelineConfigProcessorsEnrichmentTableFileArgs>> file() {
        return Optional.ofNullable(this.file);
    }

    /**
     * Uses a GeoIP database to enrich logs based on an IP field.
     * 
     */
    @Import(name="geoip")
    private @Nullable Output<ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs> geoip;

    /**
     * @return Uses a GeoIP database to enrich logs based on an IP field.
     * 
     */
    public Optional<Output<ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs>> geoip() {
        return Optional.ofNullable(this.geoip);
    }

    /**
     * The unique identifier for this processor.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The unique identifier for this processor.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * A Datadog search query used to determine which logs this processor targets.
     * 
     */
    @Import(name="include", required=true)
    private Output<String> include;

    /**
     * @return A Datadog search query used to determine which logs this processor targets.
     * 
     */
    public Output<String> include() {
        return this.include;
    }

    /**
     * A list of component IDs whose output is used as the input for this processor.
     * 
     */
    @Import(name="inputs", required=true)
    private Output<List<String>> inputs;

    /**
     * @return A list of component IDs whose output is used as the input for this processor.
     * 
     */
    public Output<List<String>> inputs() {
        return this.inputs;
    }

    /**
     * Path where enrichment results should be stored in the log.
     * 
     */
    @Import(name="target", required=true)
    private Output<String> target;

    /**
     * @return Path where enrichment results should be stored in the log.
     * 
     */
    public Output<String> target() {
        return this.target;
    }

    private ObservabilityPipelineConfigProcessorsEnrichmentTableArgs() {}

    private ObservabilityPipelineConfigProcessorsEnrichmentTableArgs(ObservabilityPipelineConfigProcessorsEnrichmentTableArgs $) {
        this.file = $.file;
        this.geoip = $.geoip;
        this.id = $.id;
        this.include = $.include;
        this.inputs = $.inputs;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineConfigProcessorsEnrichmentTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineConfigProcessorsEnrichmentTableArgs $;

        public Builder() {
            $ = new ObservabilityPipelineConfigProcessorsEnrichmentTableArgs();
        }

        public Builder(ObservabilityPipelineConfigProcessorsEnrichmentTableArgs defaults) {
            $ = new ObservabilityPipelineConfigProcessorsEnrichmentTableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param file Defines a static enrichment table loaded from a CSV file.
         * 
         * @return builder
         * 
         */
        public Builder file(@Nullable Output<ObservabilityPipelineConfigProcessorsEnrichmentTableFileArgs> file) {
            $.file = file;
            return this;
        }

        /**
         * @param file Defines a static enrichment table loaded from a CSV file.
         * 
         * @return builder
         * 
         */
        public Builder file(ObservabilityPipelineConfigProcessorsEnrichmentTableFileArgs file) {
            return file(Output.of(file));
        }

        /**
         * @param geoip Uses a GeoIP database to enrich logs based on an IP field.
         * 
         * @return builder
         * 
         */
        public Builder geoip(@Nullable Output<ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs> geoip) {
            $.geoip = geoip;
            return this;
        }

        /**
         * @param geoip Uses a GeoIP database to enrich logs based on an IP field.
         * 
         * @return builder
         * 
         */
        public Builder geoip(ObservabilityPipelineConfigProcessorsEnrichmentTableGeoipArgs geoip) {
            return geoip(Output.of(geoip));
        }

        /**
         * @param id The unique identifier for this processor.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The unique identifier for this processor.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param include A Datadog search query used to determine which logs this processor targets.
         * 
         * @return builder
         * 
         */
        public Builder include(Output<String> include) {
            $.include = include;
            return this;
        }

        /**
         * @param include A Datadog search query used to determine which logs this processor targets.
         * 
         * @return builder
         * 
         */
        public Builder include(String include) {
            return include(Output.of(include));
        }

        /**
         * @param inputs A list of component IDs whose output is used as the input for this processor.
         * 
         * @return builder
         * 
         */
        public Builder inputs(Output<List<String>> inputs) {
            $.inputs = inputs;
            return this;
        }

        /**
         * @param inputs A list of component IDs whose output is used as the input for this processor.
         * 
         * @return builder
         * 
         */
        public Builder inputs(List<String> inputs) {
            return inputs(Output.of(inputs));
        }

        /**
         * @param inputs A list of component IDs whose output is used as the input for this processor.
         * 
         * @return builder
         * 
         */
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }

        /**
         * @param target Path where enrichment results should be stored in the log.
         * 
         * @return builder
         * 
         */
        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target Path where enrichment results should be stored in the log.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        public ObservabilityPipelineConfigProcessorsEnrichmentTableArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsEnrichmentTableArgs", "id");
            }
            if ($.include == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsEnrichmentTableArgs", "include");
            }
            if ($.inputs == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsEnrichmentTableArgs", "inputs");
            }
            if ($.target == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsEnrichmentTableArgs", "target");
            }
            return $;
        }
    }

}
