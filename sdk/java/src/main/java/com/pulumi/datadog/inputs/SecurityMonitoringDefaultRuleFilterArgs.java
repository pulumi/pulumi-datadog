// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SecurityMonitoringDefaultRuleFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityMonitoringDefaultRuleFilterArgs Empty = new SecurityMonitoringDefaultRuleFilterArgs();

    /**
     * The type of filtering action. Allowed enum values: require, suppress Valid values are `require`, `suppress`.
     * 
     */
    @Import(name="action", required=true)
    private Output<String> action;

    /**
     * @return The type of filtering action. Allowed enum values: require, suppress Valid values are `require`, `suppress`.
     * 
     */
    public Output<String> action() {
        return this.action;
    }

    /**
     * Query for selecting logs to apply the filtering action.
     * 
     */
    @Import(name="query", required=true)
    private Output<String> query;

    /**
     * @return Query for selecting logs to apply the filtering action.
     * 
     */
    public Output<String> query() {
        return this.query;
    }

    private SecurityMonitoringDefaultRuleFilterArgs() {}

    private SecurityMonitoringDefaultRuleFilterArgs(SecurityMonitoringDefaultRuleFilterArgs $) {
        this.action = $.action;
        this.query = $.query;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityMonitoringDefaultRuleFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityMonitoringDefaultRuleFilterArgs $;

        public Builder() {
            $ = new SecurityMonitoringDefaultRuleFilterArgs();
        }

        public Builder(SecurityMonitoringDefaultRuleFilterArgs defaults) {
            $ = new SecurityMonitoringDefaultRuleFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The type of filtering action. Allowed enum values: require, suppress Valid values are `require`, `suppress`.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The type of filtering action. Allowed enum values: require, suppress Valid values are `require`, `suppress`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param query Query for selecting logs to apply the filtering action.
         * 
         * @return builder
         * 
         */
        public Builder query(Output<String> query) {
            $.query = query;
            return this;
        }

        /**
         * @param query Query for selecting logs to apply the filtering action.
         * 
         * @return builder
         * 
         */
        public Builder query(String query) {
            return query(Output.of(query));
        }

        public SecurityMonitoringDefaultRuleFilterArgs build() {
            if ($.action == null) {
                throw new MissingRequiredPropertyException("SecurityMonitoringDefaultRuleFilterArgs", "action");
            }
            if ($.query == null) {
                throw new MissingRequiredPropertyException("SecurityMonitoringDefaultRuleFilterArgs", "query");
            }
            return $;
        }
    }

}
