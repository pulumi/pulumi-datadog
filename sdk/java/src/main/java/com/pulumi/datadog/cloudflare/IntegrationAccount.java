// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.cloudflare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.cloudflare.IntegrationAccountArgs;
import com.pulumi.datadog.cloudflare.inputs.IntegrationAccountState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Datadog IntegrationCloudflareAccount resource. This can be used to create and manage Datadog integration_cloudflare_account.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.cloudflare.IntegrationAccount;
 * import com.pulumi.datadog.cloudflare.IntegrationAccountArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new IntegrationAccount(&#34;foo&#34;, IntegrationAccountArgs.builder()        
 *             .apiKey(&#34;12345678910abc&#34;)
 *             .email(&#34;test-email@example.com&#34;)
 *             .name(&#34;test-name&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * ```sh
 *  $ pulumi import datadog:cloudflare/integrationAccount:IntegrationAccount new_list &#34;&#34;
 * ```
 * 
 */
@ResourceType(type="datadog:cloudflare/integrationAccount:IntegrationAccount")
public class IntegrationAccount extends com.pulumi.resources.CustomResource {
    /**
     * The API key (or token) for the Cloudflare account.
     * 
     */
    @Export(name="apiKey", type=String.class, parameters={})
    private Output<String> apiKey;

    /**
     * @return The API key (or token) for the Cloudflare account.
     * 
     */
    public Output<String> apiKey() {
        return this.apiKey;
    }
    /**
     * The email associated with the Cloudflare account. If an API key is provided (and not a token), this field is also required.
     * 
     */
    @Export(name="email", type=String.class, parameters={})
    private Output</* @Nullable */ String> email;

    /**
     * @return The email associated with the Cloudflare account. If an API key is provided (and not a token), this field is also required.
     * 
     */
    public Output<Optional<String>> email() {
        return Codegen.optional(this.email);
    }
    /**
     * The name of the Cloudflare account.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the Cloudflare account.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IntegrationAccount(String name) {
        this(name, IntegrationAccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IntegrationAccount(String name, IntegrationAccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IntegrationAccount(String name, IntegrationAccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:cloudflare/integrationAccount:IntegrationAccount", name, args == null ? IntegrationAccountArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IntegrationAccount(String name, Output<String> id, @Nullable IntegrationAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:cloudflare/integrationAccount:IntegrationAccount", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "apiKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IntegrationAccount get(String name, Output<String> id, @Nullable IntegrationAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IntegrationAccount(name, id, state, options);
    }
}
