// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MetricTagConfigurationAggregation {
    /**
     * @return A space aggregation for use in query. Valid values are `avg`, `max`, `min`, `sum`.
     * 
     */
    private String space;
    /**
     * @return A time aggregation for use in query. Valid values are `avg`, `count`, `max`, `min`, `sum`.
     * 
     */
    private String time;

    private MetricTagConfigurationAggregation() {}
    /**
     * @return A space aggregation for use in query. Valid values are `avg`, `max`, `min`, `sum`.
     * 
     */
    public String space() {
        return this.space;
    }
    /**
     * @return A time aggregation for use in query. Valid values are `avg`, `count`, `max`, `min`, `sum`.
     * 
     */
    public String time() {
        return this.time;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricTagConfigurationAggregation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String space;
        private String time;
        public Builder() {}
        public Builder(MetricTagConfigurationAggregation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.space = defaults.space;
    	      this.time = defaults.time;
        }

        @CustomType.Setter
        public Builder space(String space) {
            if (space == null) {
              throw new MissingRequiredPropertyException("MetricTagConfigurationAggregation", "space");
            }
            this.space = space;
            return this;
        }
        @CustomType.Setter
        public Builder time(String time) {
            if (time == null) {
              throw new MissingRequiredPropertyException("MetricTagConfigurationAggregation", "time");
            }
            this.time = time;
            return this;
        }
        public MetricTagConfigurationAggregation build() {
            final var _resultValue = new MetricTagConfigurationAggregation();
            _resultValue.space = space;
            _resultValue.time = time;
            return _resultValue;
        }
    }
}
