// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LogsCustomPipelineProcessorDecoderProcessor {
    /**
     * @return Encoding type: base64 or base16
     * 
     */
    private String binaryToTextEncoding;
    /**
     * @return Input representation: utf-8 or integer
     * 
     */
    private String inputRepresentation;
    /**
     * @return If the processor is enabled or not.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return Name of the processor.
     * 
     */
    private @Nullable String name;
    /**
     * @return Encoded message
     * 
     */
    private String source;
    /**
     * @return Decoded message
     * 
     */
    private String target;

    private LogsCustomPipelineProcessorDecoderProcessor() {}
    /**
     * @return Encoding type: base64 or base16
     * 
     */
    public String binaryToTextEncoding() {
        return this.binaryToTextEncoding;
    }
    /**
     * @return Input representation: utf-8 or integer
     * 
     */
    public String inputRepresentation() {
        return this.inputRepresentation;
    }
    /**
     * @return If the processor is enabled or not.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return Name of the processor.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Encoded message
     * 
     */
    public String source() {
        return this.source;
    }
    /**
     * @return Decoded message
     * 
     */
    public String target() {
        return this.target;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogsCustomPipelineProcessorDecoderProcessor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String binaryToTextEncoding;
        private String inputRepresentation;
        private @Nullable Boolean isEnabled;
        private @Nullable String name;
        private String source;
        private String target;
        public Builder() {}
        public Builder(LogsCustomPipelineProcessorDecoderProcessor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.binaryToTextEncoding = defaults.binaryToTextEncoding;
    	      this.inputRepresentation = defaults.inputRepresentation;
    	      this.isEnabled = defaults.isEnabled;
    	      this.name = defaults.name;
    	      this.source = defaults.source;
    	      this.target = defaults.target;
        }

        @CustomType.Setter
        public Builder binaryToTextEncoding(String binaryToTextEncoding) {
            if (binaryToTextEncoding == null) {
              throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorDecoderProcessor", "binaryToTextEncoding");
            }
            this.binaryToTextEncoding = binaryToTextEncoding;
            return this;
        }
        @CustomType.Setter
        public Builder inputRepresentation(String inputRepresentation) {
            if (inputRepresentation == null) {
              throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorDecoderProcessor", "inputRepresentation");
            }
            this.inputRepresentation = inputRepresentation;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {

            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorDecoderProcessor", "source");
            }
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder target(String target) {
            if (target == null) {
              throw new MissingRequiredPropertyException("LogsCustomPipelineProcessorDecoderProcessor", "target");
            }
            this.target = target;
            return this;
        }
        public LogsCustomPipelineProcessorDecoderProcessor build() {
            final var _resultValue = new LogsCustomPipelineProcessorDecoderProcessor();
            _resultValue.binaryToTextEncoding = binaryToTextEncoding;
            _resultValue.inputRepresentation = inputRepresentation;
            _resultValue.isEnabled = isEnabled;
            _resultValue.name = name;
            _resultValue.source = source;
            _resultValue.target = target;
            return _resultValue;
        }
    }
}
