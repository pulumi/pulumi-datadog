// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLogsIndexesOrderResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Array of strings identifying by their name(s) the index(es) of your organization. Logs are tested against the query filter of each index one by one, following the order of the array. Logs are eventually stored in the first matching index.
     * 
     */
    private List<String> indexNames;

    private GetLogsIndexesOrderResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Array of strings identifying by their name(s) the index(es) of your organization. Logs are tested against the query filter of each index one by one, following the order of the array. Logs are eventually stored in the first matching index.
     * 
     */
    public List<String> indexNames() {
        return this.indexNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogsIndexesOrderResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<String> indexNames;
        public Builder() {}
        public Builder(GetLogsIndexesOrderResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.indexNames = defaults.indexNames;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder indexNames(List<String> indexNames) {
            this.indexNames = Objects.requireNonNull(indexNames);
            return this;
        }
        public Builder indexNames(String... indexNames) {
            return indexNames(List.of(indexNames));
        }
        public GetLogsIndexesOrderResult build() {
            final var _resultValue = new GetLogsIndexesOrderResult();
            _resultValue.id = id;
            _resultValue.indexNames = indexNames;
            return _resultValue;
        }
    }
}
