// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ComplianceResourceEvaluationFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ComplianceResourceEvaluationFilterArgs Empty = new ComplianceResourceEvaluationFilterArgs();

    /**
     * The cloud provider of the filter&#39;s targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud providers.
     * 
     */
    @Import(name="cloudProvider", required=true)
    private Output<String> cloudProvider;

    /**
     * @return The cloud provider of the filter&#39;s targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud providers.
     * 
     */
    public Output<String> cloudProvider() {
        return this.cloudProvider;
    }

    /**
     * The ID of the of the filter&#39;s targeted resource. Different cloud providers target different resource IDs:
     *   - `aws`: account ID
     *   - `gcp`: project ID
     *   - `azure`: subscription ID
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return The ID of the of the filter&#39;s targeted resource. Different cloud providers target different resource IDs:
     *   - `aws`: account ID
     *   - `gcp`: project ID
     *   - `azure`: subscription ID
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    /**
     * List of tags to filter misconfiguration detections. Each entry should follow the format: &#34;key&#34;:&#34;value&#34;.
     * 
     */
    @Import(name="tags", required=true)
    private Output<List<String>> tags;

    /**
     * @return List of tags to filter misconfiguration detections. Each entry should follow the format: &#34;key&#34;:&#34;value&#34;.
     * 
     */
    public Output<List<String>> tags() {
        return this.tags;
    }

    private ComplianceResourceEvaluationFilterArgs() {}

    private ComplianceResourceEvaluationFilterArgs(ComplianceResourceEvaluationFilterArgs $) {
        this.cloudProvider = $.cloudProvider;
        this.resourceId = $.resourceId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComplianceResourceEvaluationFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComplianceResourceEvaluationFilterArgs $;

        public Builder() {
            $ = new ComplianceResourceEvaluationFilterArgs();
        }

        public Builder(ComplianceResourceEvaluationFilterArgs defaults) {
            $ = new ComplianceResourceEvaluationFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudProvider The cloud provider of the filter&#39;s targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud providers.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(Output<String> cloudProvider) {
            $.cloudProvider = cloudProvider;
            return this;
        }

        /**
         * @param cloudProvider The cloud provider of the filter&#39;s targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud providers.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(String cloudProvider) {
            return cloudProvider(Output.of(cloudProvider));
        }

        /**
         * @param resourceId The ID of the of the filter&#39;s targeted resource. Different cloud providers target different resource IDs:
         *   - `aws`: account ID
         *   - `gcp`: project ID
         *   - `azure`: subscription ID
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The ID of the of the filter&#39;s targeted resource. Different cloud providers target different resource IDs:
         *   - `aws`: account ID
         *   - `gcp`: project ID
         *   - `azure`: subscription ID
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param tags List of tags to filter misconfiguration detections. Each entry should follow the format: &#34;key&#34;:&#34;value&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tags(Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags List of tags to filter misconfiguration detections. Each entry should follow the format: &#34;key&#34;:&#34;value&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags List of tags to filter misconfiguration detections. Each entry should follow the format: &#34;key&#34;:&#34;value&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public ComplianceResourceEvaluationFilterArgs build() {
            if ($.cloudProvider == null) {
                throw new MissingRequiredPropertyException("ComplianceResourceEvaluationFilterArgs", "cloudProvider");
            }
            if ($.resourceId == null) {
                throw new MissingRequiredPropertyException("ComplianceResourceEvaluationFilterArgs", "resourceId");
            }
            if ($.tags == null) {
                throw new MissingRequiredPropertyException("ComplianceResourceEvaluationFilterArgs", "tags");
            }
            return $;
        }
    }

}
