// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs Empty = new DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs();

    /**
     * The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
     * 
     */
    @Import(name="aggregator")
    private @Nullable Output<String> aggregator;

    /**
     * @return The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
     * 
     */
    public Optional<Output<String>> aggregator() {
        return Optional.ofNullable(this.aggregator);
    }

    /**
     * The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.
     * 
     */
    @Import(name="dataSource", required=true)
    private Output<String> dataSource;

    /**
     * @return The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.
     * 
     */
    public Output<String> dataSource() {
        return this.dataSource;
    }

    /**
     * The name of the variable.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the variable.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The cloud cost query definition.
     * 
     */
    @Import(name="query", required=true)
    private Output<String> query;

    /**
     * @return The cloud cost query definition.
     * 
     */
    public Output<String> query() {
        return this.query;
    }

    private DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs() {}

    private DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs(DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs $) {
        this.aggregator = $.aggregator;
        this.dataSource = $.dataSource;
        this.name = $.name;
        this.query = $.query;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs $;

        public Builder() {
            $ = new DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs();
        }

        public Builder(DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs defaults) {
            $ = new DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggregator The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
         * 
         * @return builder
         * 
         */
        public Builder aggregator(@Nullable Output<String> aggregator) {
            $.aggregator = aggregator;
            return this;
        }

        /**
         * @param aggregator The aggregation methods available for cloud cost queries. Valid values are `avg`, `last`, `max`, `min`, `sum`, `percentile`.
         * 
         * @return builder
         * 
         */
        public Builder aggregator(String aggregator) {
            return aggregator(Output.of(aggregator));
        }

        /**
         * @param dataSource The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.
         * 
         * @return builder
         * 
         */
        public Builder dataSource(Output<String> dataSource) {
            $.dataSource = dataSource;
            return this;
        }

        /**
         * @param dataSource The data source for APM Dependency Stats queries. Valid values are `apm_dependency_stats`.
         * 
         * @return builder
         * 
         */
        public Builder dataSource(String dataSource) {
            return dataSource(Output.of(dataSource));
        }

        /**
         * @param name The name of the variable.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the variable.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param query The cloud cost query definition.
         * 
         * @return builder
         * 
         */
        public Builder query(Output<String> query) {
            $.query = query;
            return this;
        }

        /**
         * @param query The cloud cost query definition.
         * 
         * @return builder
         * 
         */
        public Builder query(String query) {
            return query(Output.of(query));
        }

        public DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs build() {
            if ($.dataSource == null) {
                throw new MissingRequiredPropertyException("DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs", "dataSource");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs", "name");
            }
            if ($.query == null) {
                throw new MissingRequiredPropertyException("DashboardWidgetGroupDefinitionWidgetQueryTableDefinitionRequestQueryCloudCostQueryArgs", "query");
            }
            return $;
        }
    }

}
