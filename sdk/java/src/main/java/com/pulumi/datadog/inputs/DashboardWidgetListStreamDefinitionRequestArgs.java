// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetListStreamDefinitionRequestColumnArgs;
import com.pulumi.datadog.inputs.DashboardWidgetListStreamDefinitionRequestQueryArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DashboardWidgetListStreamDefinitionRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetListStreamDefinitionRequestArgs Empty = new DashboardWidgetListStreamDefinitionRequestArgs();

    /**
     * Column properties used by the front end for display.
     * 
     */
    @Import(name="columns", required=true)
    private Output<List<DashboardWidgetListStreamDefinitionRequestColumnArgs>> columns;

    /**
     * @return Column properties used by the front end for display.
     * 
     */
    public Output<List<DashboardWidgetListStreamDefinitionRequestColumnArgs>> columns() {
        return this.columns;
    }

    @Import(name="query", required=true)
    private Output<DashboardWidgetListStreamDefinitionRequestQueryArgs> query;

    public Output<DashboardWidgetListStreamDefinitionRequestQueryArgs> query() {
        return this.query;
    }

    /**
     * Widget response format. Valid values are `event_list`.
     * 
     */
    @Import(name="responseFormat", required=true)
    private Output<String> responseFormat;

    /**
     * @return Widget response format. Valid values are `event_list`.
     * 
     */
    public Output<String> responseFormat() {
        return this.responseFormat;
    }

    private DashboardWidgetListStreamDefinitionRequestArgs() {}

    private DashboardWidgetListStreamDefinitionRequestArgs(DashboardWidgetListStreamDefinitionRequestArgs $) {
        this.columns = $.columns;
        this.query = $.query;
        this.responseFormat = $.responseFormat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetListStreamDefinitionRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetListStreamDefinitionRequestArgs $;

        public Builder() {
            $ = new DashboardWidgetListStreamDefinitionRequestArgs();
        }

        public Builder(DashboardWidgetListStreamDefinitionRequestArgs defaults) {
            $ = new DashboardWidgetListStreamDefinitionRequestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param columns Column properties used by the front end for display.
         * 
         * @return builder
         * 
         */
        public Builder columns(Output<List<DashboardWidgetListStreamDefinitionRequestColumnArgs>> columns) {
            $.columns = columns;
            return this;
        }

        /**
         * @param columns Column properties used by the front end for display.
         * 
         * @return builder
         * 
         */
        public Builder columns(List<DashboardWidgetListStreamDefinitionRequestColumnArgs> columns) {
            return columns(Output.of(columns));
        }

        /**
         * @param columns Column properties used by the front end for display.
         * 
         * @return builder
         * 
         */
        public Builder columns(DashboardWidgetListStreamDefinitionRequestColumnArgs... columns) {
            return columns(List.of(columns));
        }

        public Builder query(Output<DashboardWidgetListStreamDefinitionRequestQueryArgs> query) {
            $.query = query;
            return this;
        }

        public Builder query(DashboardWidgetListStreamDefinitionRequestQueryArgs query) {
            return query(Output.of(query));
        }

        /**
         * @param responseFormat Widget response format. Valid values are `event_list`.
         * 
         * @return builder
         * 
         */
        public Builder responseFormat(Output<String> responseFormat) {
            $.responseFormat = responseFormat;
            return this;
        }

        /**
         * @param responseFormat Widget response format. Valid values are `event_list`.
         * 
         * @return builder
         * 
         */
        public Builder responseFormat(String responseFormat) {
            return responseFormat(Output.of(responseFormat));
        }

        public DashboardWidgetListStreamDefinitionRequestArgs build() {
            $.columns = Objects.requireNonNull($.columns, "expected parameter 'columns' to be non-null");
            $.query = Objects.requireNonNull($.query, "expected parameter 'query' to be non-null");
            $.responseFormat = Objects.requireNonNull($.responseFormat, "expected parameter 'responseFormat' to be non-null");
            return $;
        }
    }

}
