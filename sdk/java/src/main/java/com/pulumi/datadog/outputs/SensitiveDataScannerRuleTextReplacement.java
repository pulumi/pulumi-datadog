// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SensitiveDataScannerRuleTextReplacement {
    /**
     * @return Required if type == &#39;partial*replacement*from*beginning&#39; or &#39;partial*replacement*from*end&#39;. It must be &gt; 0.
     * 
     */
    private @Nullable Integer numberOfChars;
    /**
     * @return Required if type == &#39;replacement_string&#39;.
     * 
     */
    private @Nullable String replacementString;
    /**
     * @return Type of the replacement text. None means no replacement. hash means the data will be stubbed. replacement*string means that one can chose a text to replace the data. partial*replacement*from*beginning allows a user to partially replace the data from the beginning, and partial*replacement*from_end on the other hand, allows to replace data from the end. Valid values are `none`, `hash`, `replacement_string`, `partial_replacement_from_beginning`, `partial_replacement_from_end`.
     * 
     */
    private String type;

    private SensitiveDataScannerRuleTextReplacement() {}
    /**
     * @return Required if type == &#39;partial*replacement*from*beginning&#39; or &#39;partial*replacement*from*end&#39;. It must be &gt; 0.
     * 
     */
    public Optional<Integer> numberOfChars() {
        return Optional.ofNullable(this.numberOfChars);
    }
    /**
     * @return Required if type == &#39;replacement_string&#39;.
     * 
     */
    public Optional<String> replacementString() {
        return Optional.ofNullable(this.replacementString);
    }
    /**
     * @return Type of the replacement text. None means no replacement. hash means the data will be stubbed. replacement*string means that one can chose a text to replace the data. partial*replacement*from*beginning allows a user to partially replace the data from the beginning, and partial*replacement*from_end on the other hand, allows to replace data from the end. Valid values are `none`, `hash`, `replacement_string`, `partial_replacement_from_beginning`, `partial_replacement_from_end`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SensitiveDataScannerRuleTextReplacement defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer numberOfChars;
        private @Nullable String replacementString;
        private String type;
        public Builder() {}
        public Builder(SensitiveDataScannerRuleTextReplacement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.numberOfChars = defaults.numberOfChars;
    	      this.replacementString = defaults.replacementString;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder numberOfChars(@Nullable Integer numberOfChars) {
            this.numberOfChars = numberOfChars;
            return this;
        }
        @CustomType.Setter
        public Builder replacementString(@Nullable String replacementString) {
            this.replacementString = replacementString;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public SensitiveDataScannerRuleTextReplacement build() {
            final var _resultValue = new SensitiveDataScannerRuleTextReplacement();
            _resultValue.numberOfChars = numberOfChars;
            _resultValue.replacementString = replacementString;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
