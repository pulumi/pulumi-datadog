// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetMetricMetadataPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMetricMetadataPlainArgs Empty = new GetMetricMetadataPlainArgs();

    /**
     * The metric for which to fetch metadata.
     * 
     */
    @Import(name="metricName", required=true)
    private String metricName;

    /**
     * @return The metric for which to fetch metadata.
     * 
     */
    public String metricName() {
        return this.metricName;
    }

    private GetMetricMetadataPlainArgs() {}

    private GetMetricMetadataPlainArgs(GetMetricMetadataPlainArgs $) {
        this.metricName = $.metricName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMetricMetadataPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMetricMetadataPlainArgs $;

        public Builder() {
            $ = new GetMetricMetadataPlainArgs();
        }

        public Builder(GetMetricMetadataPlainArgs defaults) {
            $ = new GetMetricMetadataPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metricName The metric for which to fetch metadata.
         * 
         * @return builder
         * 
         */
        public Builder metricName(String metricName) {
            $.metricName = metricName;
            return this;
        }

        public GetMetricMetadataPlainArgs build() {
            if ($.metricName == null) {
                throw new MissingRequiredPropertyException("GetMetricMetadataPlainArgs", "metricName");
            }
            return $;
        }
    }

}
