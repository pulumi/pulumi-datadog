// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIncidentNotificationTemplateResult {
    /**
     * @return The category of the notification template.
     * 
     */
    private String category;
    /**
     * @return The content body of the notification template.
     * 
     */
    private String content;
    /**
     * @return Timestamp when the notification template was created.
     * 
     */
    private String created;
    /**
     * @return The ID of the incident notification template.
     * 
     */
    private String id;
    /**
     * @return The ID of the incident type this notification template is associated with.
     * 
     */
    private String incidentType;
    /**
     * @return Timestamp when the notification template was last modified.
     * 
     */
    private String modified;
    /**
     * @return The name of the notification template.
     * 
     */
    private String name;
    /**
     * @return The subject line of the notification template.
     * 
     */
    private String subject;

    private GetIncidentNotificationTemplateResult() {}
    /**
     * @return The category of the notification template.
     * 
     */
    public String category() {
        return this.category;
    }
    /**
     * @return The content body of the notification template.
     * 
     */
    public String content() {
        return this.content;
    }
    /**
     * @return Timestamp when the notification template was created.
     * 
     */
    public String created() {
        return this.created;
    }
    /**
     * @return The ID of the incident notification template.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the incident type this notification template is associated with.
     * 
     */
    public String incidentType() {
        return this.incidentType;
    }
    /**
     * @return Timestamp when the notification template was last modified.
     * 
     */
    public String modified() {
        return this.modified;
    }
    /**
     * @return The name of the notification template.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The subject line of the notification template.
     * 
     */
    public String subject() {
        return this.subject;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIncidentNotificationTemplateResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String category;
        private String content;
        private String created;
        private String id;
        private String incidentType;
        private String modified;
        private String name;
        private String subject;
        public Builder() {}
        public Builder(GetIncidentNotificationTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.content = defaults.content;
    	      this.created = defaults.created;
    	      this.id = defaults.id;
    	      this.incidentType = defaults.incidentType;
    	      this.modified = defaults.modified;
    	      this.name = defaults.name;
    	      this.subject = defaults.subject;
        }

        @CustomType.Setter
        public Builder category(String category) {
            if (category == null) {
              throw new MissingRequiredPropertyException("GetIncidentNotificationTemplateResult", "category");
            }
            this.category = category;
            return this;
        }
        @CustomType.Setter
        public Builder content(String content) {
            if (content == null) {
              throw new MissingRequiredPropertyException("GetIncidentNotificationTemplateResult", "content");
            }
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder created(String created) {
            if (created == null) {
              throw new MissingRequiredPropertyException("GetIncidentNotificationTemplateResult", "created");
            }
            this.created = created;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIncidentNotificationTemplateResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder incidentType(String incidentType) {
            if (incidentType == null) {
              throw new MissingRequiredPropertyException("GetIncidentNotificationTemplateResult", "incidentType");
            }
            this.incidentType = incidentType;
            return this;
        }
        @CustomType.Setter
        public Builder modified(String modified) {
            if (modified == null) {
              throw new MissingRequiredPropertyException("GetIncidentNotificationTemplateResult", "modified");
            }
            this.modified = modified;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetIncidentNotificationTemplateResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder subject(String subject) {
            if (subject == null) {
              throw new MissingRequiredPropertyException("GetIncidentNotificationTemplateResult", "subject");
            }
            this.subject = subject;
            return this;
        }
        public GetIncidentNotificationTemplateResult build() {
            final var _resultValue = new GetIncidentNotificationTemplateResult();
            _resultValue.category = category;
            _resultValue.content = content;
            _resultValue.created = created;
            _resultValue.id = id;
            _resultValue.incidentType = incidentType;
            _resultValue.modified = modified;
            _resultValue.name = name;
            _resultValue.subject = subject;
            return _resultValue;
        }
    }
}
