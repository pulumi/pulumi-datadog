// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RumMetricCompute {
    /**
     * @return The type of aggregation to use.
     * 
     */
    private String aggregationType;
    /**
     * @return Toggle to include or exclude percentile aggregations for distribution metrics. Only present when `aggregation_type` is `distribution`.
     * 
     */
    private @Nullable Boolean includePercentiles;
    /**
     * @return The path to the value the RUM-based metric will aggregate on. Only present when `aggregation_type` is `distribution`.
     * 
     */
    private @Nullable String path;

    private RumMetricCompute() {}
    /**
     * @return The type of aggregation to use.
     * 
     */
    public String aggregationType() {
        return this.aggregationType;
    }
    /**
     * @return Toggle to include or exclude percentile aggregations for distribution metrics. Only present when `aggregation_type` is `distribution`.
     * 
     */
    public Optional<Boolean> includePercentiles() {
        return Optional.ofNullable(this.includePercentiles);
    }
    /**
     * @return The path to the value the RUM-based metric will aggregate on. Only present when `aggregation_type` is `distribution`.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RumMetricCompute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String aggregationType;
        private @Nullable Boolean includePercentiles;
        private @Nullable String path;
        public Builder() {}
        public Builder(RumMetricCompute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregationType = defaults.aggregationType;
    	      this.includePercentiles = defaults.includePercentiles;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder aggregationType(String aggregationType) {
            if (aggregationType == null) {
              throw new MissingRequiredPropertyException("RumMetricCompute", "aggregationType");
            }
            this.aggregationType = aggregationType;
            return this;
        }
        @CustomType.Setter
        public Builder includePercentiles(@Nullable Boolean includePercentiles) {

            this.includePercentiles = includePercentiles;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        public RumMetricCompute build() {
            final var _resultValue = new RumMetricCompute();
            _resultValue.aggregationType = aggregationType;
            _resultValue.includePercentiles = includePercentiles;
            _resultValue.path = path;
            return _resultValue;
        }
    }
}
