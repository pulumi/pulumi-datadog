// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SyntheticsTestConfigVariable {
    private @Nullable String example;
    /**
     * @return When type = `global`, ID of the global variable to use.
     * 
     */
    private @Nullable String id;
    /**
     * @return Name of the variable.
     * 
     */
    private String name;
    private @Nullable String pattern;
    /**
     * @return Whether the value of this variable will be obfuscated in test results.
     * 
     */
    private @Nullable Boolean secure;
    /**
     * @return Type of test configuration variable. Valid values are `global`, `text`.
     * 
     */
    private String type;

    private SyntheticsTestConfigVariable() {}
    public Optional<String> example() {
        return Optional.ofNullable(this.example);
    }
    /**
     * @return When type = `global`, ID of the global variable to use.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Name of the variable.
     * 
     */
    public String name() {
        return this.name;
    }
    public Optional<String> pattern() {
        return Optional.ofNullable(this.pattern);
    }
    /**
     * @return Whether the value of this variable will be obfuscated in test results.
     * 
     */
    public Optional<Boolean> secure() {
        return Optional.ofNullable(this.secure);
    }
    /**
     * @return Type of test configuration variable. Valid values are `global`, `text`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SyntheticsTestConfigVariable defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String example;
        private @Nullable String id;
        private String name;
        private @Nullable String pattern;
        private @Nullable Boolean secure;
        private String type;
        public Builder() {}
        public Builder(SyntheticsTestConfigVariable defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.example = defaults.example;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.pattern = defaults.pattern;
    	      this.secure = defaults.secure;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder example(@Nullable String example) {
            this.example = example;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder pattern(@Nullable String pattern) {
            this.pattern = pattern;
            return this;
        }
        @CustomType.Setter
        public Builder secure(@Nullable Boolean secure) {
            this.secure = secure;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public SyntheticsTestConfigVariable build() {
            final var _resultValue = new SyntheticsTestConfigVariable();
            _resultValue.example = example;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.pattern = pattern;
            _resultValue.secure = secure;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
