// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.GetCostBudgetEntryTagFilter;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCostBudgetEntry extends com.pulumi.resources.InvokeArgs {

    public static final GetCostBudgetEntry Empty = new GetCostBudgetEntry();

    @Import(name="amount", required=true)
    private Double amount;

    public Double amount() {
        return this.amount;
    }

    @Import(name="month", required=true)
    private Integer month;

    public Integer month() {
        return this.month;
    }

    @Import(name="tagFilters")
    private @Nullable List<GetCostBudgetEntryTagFilter> tagFilters;

    public Optional<List<GetCostBudgetEntryTagFilter>> tagFilters() {
        return Optional.ofNullable(this.tagFilters);
    }

    private GetCostBudgetEntry() {}

    private GetCostBudgetEntry(GetCostBudgetEntry $) {
        this.amount = $.amount;
        this.month = $.month;
        this.tagFilters = $.tagFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCostBudgetEntry defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCostBudgetEntry $;

        public Builder() {
            $ = new GetCostBudgetEntry();
        }

        public Builder(GetCostBudgetEntry defaults) {
            $ = new GetCostBudgetEntry(Objects.requireNonNull(defaults));
        }

        public Builder amount(Double amount) {
            $.amount = amount;
            return this;
        }

        public Builder month(Integer month) {
            $.month = month;
            return this;
        }

        public Builder tagFilters(@Nullable List<GetCostBudgetEntryTagFilter> tagFilters) {
            $.tagFilters = tagFilters;
            return this;
        }

        public Builder tagFilters(GetCostBudgetEntryTagFilter... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }

        public GetCostBudgetEntry build() {
            if ($.amount == null) {
                throw new MissingRequiredPropertyException("GetCostBudgetEntry", "amount");
            }
            if ($.month == null) {
                throw new MissingRequiredPropertyException("GetCostBudgetEntry", "month");
            }
            return $;
        }
    }

}
