// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IncidentNotificationTemplateState extends com.pulumi.resources.ResourceArgs {

    public static final IncidentNotificationTemplateState Empty = new IncidentNotificationTemplateState();

    /**
     * The category of the notification template. Valid values are `alert`, `incident`, `recovery`.
     * 
     */
    @Import(name="category")
    private @Nullable Output<String> category;

    /**
     * @return The category of the notification template. Valid values are `alert`, `incident`, `recovery`.
     * 
     */
    public Optional<Output<String>> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * The content body of the notification template.
     * 
     */
    @Import(name="content")
    private @Nullable Output<String> content;

    /**
     * @return The content body of the notification template.
     * 
     */
    public Optional<Output<String>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * Timestamp when the notification template was created.
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return Timestamp when the notification template was created.
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * The ID of the incident type this notification template is associated with.
     * 
     */
    @Import(name="incidentType")
    private @Nullable Output<String> incidentType;

    /**
     * @return The ID of the incident type this notification template is associated with.
     * 
     */
    public Optional<Output<String>> incidentType() {
        return Optional.ofNullable(this.incidentType);
    }

    /**
     * Timestamp when the notification template was last modified.
     * 
     */
    @Import(name="modified")
    private @Nullable Output<String> modified;

    /**
     * @return Timestamp when the notification template was last modified.
     * 
     */
    public Optional<Output<String>> modified() {
        return Optional.ofNullable(this.modified);
    }

    /**
     * The name of the notification template.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the notification template.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The subject line of the notification template.
     * 
     */
    @Import(name="subject")
    private @Nullable Output<String> subject;

    /**
     * @return The subject line of the notification template.
     * 
     */
    public Optional<Output<String>> subject() {
        return Optional.ofNullable(this.subject);
    }

    private IncidentNotificationTemplateState() {}

    private IncidentNotificationTemplateState(IncidentNotificationTemplateState $) {
        this.category = $.category;
        this.content = $.content;
        this.created = $.created;
        this.incidentType = $.incidentType;
        this.modified = $.modified;
        this.name = $.name;
        this.subject = $.subject;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IncidentNotificationTemplateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IncidentNotificationTemplateState $;

        public Builder() {
            $ = new IncidentNotificationTemplateState();
        }

        public Builder(IncidentNotificationTemplateState defaults) {
            $ = new IncidentNotificationTemplateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param category The category of the notification template. Valid values are `alert`, `incident`, `recovery`.
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category The category of the notification template. Valid values are `alert`, `incident`, `recovery`.
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        /**
         * @param content The content body of the notification template.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content The content body of the notification template.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param created Timestamp when the notification template was created.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created Timestamp when the notification template was created.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param incidentType The ID of the incident type this notification template is associated with.
         * 
         * @return builder
         * 
         */
        public Builder incidentType(@Nullable Output<String> incidentType) {
            $.incidentType = incidentType;
            return this;
        }

        /**
         * @param incidentType The ID of the incident type this notification template is associated with.
         * 
         * @return builder
         * 
         */
        public Builder incidentType(String incidentType) {
            return incidentType(Output.of(incidentType));
        }

        /**
         * @param modified Timestamp when the notification template was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modified(@Nullable Output<String> modified) {
            $.modified = modified;
            return this;
        }

        /**
         * @param modified Timestamp when the notification template was last modified.
         * 
         * @return builder
         * 
         */
        public Builder modified(String modified) {
            return modified(Output.of(modified));
        }

        /**
         * @param name The name of the notification template.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the notification template.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param subject The subject line of the notification template.
         * 
         * @return builder
         * 
         */
        public Builder subject(@Nullable Output<String> subject) {
            $.subject = subject;
            return this;
        }

        /**
         * @param subject The subject line of the notification template.
         * 
         * @return builder
         * 
         */
        public Builder subject(String subject) {
            return subject(Output.of(subject));
        }

        public IncidentNotificationTemplateState build() {
            return $;
        }
    }

}
