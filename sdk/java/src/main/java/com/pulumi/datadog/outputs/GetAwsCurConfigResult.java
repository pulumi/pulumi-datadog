// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.GetAwsCurConfigAccountFilters;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAwsCurConfigResult {
    private @Nullable GetAwsCurConfigAccountFilters accountFilters;
    /**
     * @return The AWS account ID associated with this CUR configuration.
     * 
     */
    private String accountId;
    /**
     * @return The S3 bucket name where Cost and Usage Report files are stored.
     * 
     */
    private String bucketName;
    /**
     * @return The AWS region where the S3 bucket is located.
     * 
     */
    private String bucketRegion;
    /**
     * @return The Datadog cloud account ID for the AWS CUR configuration you want to retrieve information about.
     * 
     */
    private Integer cloudAccountId;
    /**
     * @return The timestamp when the CUR configuration was created.
     * 
     */
    private String createdAt;
    /**
     * @return List of error messages if the CUR configuration encountered any issues.
     * 
     */
    private List<String> errorMessages;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    /**
     * @return The name of the AWS Cost and Usage Report.
     * 
     */
    private String reportName;
    /**
     * @return The S3 key prefix where CUR files are stored within the bucket.
     * 
     */
    private String reportPrefix;
    /**
     * @return The current status of the CUR configuration (e.g., active, archived).
     * 
     */
    private String status;
    /**
     * @return The timestamp when the CUR configuration status was last updated.
     * 
     */
    private String statusUpdatedAt;
    /**
     * @return The timestamp when the CUR configuration was last updated.
     * 
     */
    private String updatedAt;

    private GetAwsCurConfigResult() {}
    public Optional<GetAwsCurConfigAccountFilters> accountFilters() {
        return Optional.ofNullable(this.accountFilters);
    }
    /**
     * @return The AWS account ID associated with this CUR configuration.
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The S3 bucket name where Cost and Usage Report files are stored.
     * 
     */
    public String bucketName() {
        return this.bucketName;
    }
    /**
     * @return The AWS region where the S3 bucket is located.
     * 
     */
    public String bucketRegion() {
        return this.bucketRegion;
    }
    /**
     * @return The Datadog cloud account ID for the AWS CUR configuration you want to retrieve information about.
     * 
     */
    public Integer cloudAccountId() {
        return this.cloudAccountId;
    }
    /**
     * @return The timestamp when the CUR configuration was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return List of error messages if the CUR configuration encountered any issues.
     * 
     */
    public List<String> errorMessages() {
        return this.errorMessages;
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the AWS Cost and Usage Report.
     * 
     */
    public String reportName() {
        return this.reportName;
    }
    /**
     * @return The S3 key prefix where CUR files are stored within the bucket.
     * 
     */
    public String reportPrefix() {
        return this.reportPrefix;
    }
    /**
     * @return The current status of the CUR configuration (e.g., active, archived).
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The timestamp when the CUR configuration status was last updated.
     * 
     */
    public String statusUpdatedAt() {
        return this.statusUpdatedAt;
    }
    /**
     * @return The timestamp when the CUR configuration was last updated.
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAwsCurConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetAwsCurConfigAccountFilters accountFilters;
        private String accountId;
        private String bucketName;
        private String bucketRegion;
        private Integer cloudAccountId;
        private String createdAt;
        private List<String> errorMessages;
        private String id;
        private String reportName;
        private String reportPrefix;
        private String status;
        private String statusUpdatedAt;
        private String updatedAt;
        public Builder() {}
        public Builder(GetAwsCurConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountFilters = defaults.accountFilters;
    	      this.accountId = defaults.accountId;
    	      this.bucketName = defaults.bucketName;
    	      this.bucketRegion = defaults.bucketRegion;
    	      this.cloudAccountId = defaults.cloudAccountId;
    	      this.createdAt = defaults.createdAt;
    	      this.errorMessages = defaults.errorMessages;
    	      this.id = defaults.id;
    	      this.reportName = defaults.reportName;
    	      this.reportPrefix = defaults.reportPrefix;
    	      this.status = defaults.status;
    	      this.statusUpdatedAt = defaults.statusUpdatedAt;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder accountFilters(@Nullable GetAwsCurConfigAccountFilters accountFilters) {

            this.accountFilters = accountFilters;
            return this;
        }
        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder bucketName(String bucketName) {
            if (bucketName == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "bucketName");
            }
            this.bucketName = bucketName;
            return this;
        }
        @CustomType.Setter
        public Builder bucketRegion(String bucketRegion) {
            if (bucketRegion == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "bucketRegion");
            }
            this.bucketRegion = bucketRegion;
            return this;
        }
        @CustomType.Setter
        public Builder cloudAccountId(Integer cloudAccountId) {
            if (cloudAccountId == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "cloudAccountId");
            }
            this.cloudAccountId = cloudAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder errorMessages(List<String> errorMessages) {
            if (errorMessages == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "errorMessages");
            }
            this.errorMessages = errorMessages;
            return this;
        }
        public Builder errorMessages(String... errorMessages) {
            return errorMessages(List.of(errorMessages));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder reportName(String reportName) {
            if (reportName == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "reportName");
            }
            this.reportName = reportName;
            return this;
        }
        @CustomType.Setter
        public Builder reportPrefix(String reportPrefix) {
            if (reportPrefix == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "reportPrefix");
            }
            this.reportPrefix = reportPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusUpdatedAt(String statusUpdatedAt) {
            if (statusUpdatedAt == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "statusUpdatedAt");
            }
            this.statusUpdatedAt = statusUpdatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetAwsCurConfigResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetAwsCurConfigResult build() {
            final var _resultValue = new GetAwsCurConfigResult();
            _resultValue.accountFilters = accountFilters;
            _resultValue.accountId = accountId;
            _resultValue.bucketName = bucketName;
            _resultValue.bucketRegion = bucketRegion;
            _resultValue.cloudAccountId = cloudAccountId;
            _resultValue.createdAt = createdAt;
            _resultValue.errorMessages = errorMessages;
            _resultValue.id = id;
            _resultValue.reportName = reportName;
            _resultValue.reportPrefix = reportPrefix;
            _resultValue.status = status;
            _resultValue.statusUpdatedAt = statusUpdatedAt;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
