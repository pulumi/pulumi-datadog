// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.DashboardListArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.DashboardListState;
import com.pulumi.datadog.outputs.DashboardListDashItem;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Datadog dashboard_list resource. This can be used to create and manage Datadog Dashboard Lists and the individual dashboards within them.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.Dashboard;
 * import com.pulumi.datadog.DashboardArgs;
 * import com.pulumi.datadog.inputs.DashboardWidgetArgs;
 * import com.pulumi.datadog.inputs.DashboardWidgetAlertGraphDefinitionArgs;
 * import com.pulumi.datadog.inputs.DashboardWidgetEventStreamDefinitionArgs;
 * import com.pulumi.datadog.inputs.DashboardWidgetWidgetLayoutArgs;
 * import com.pulumi.datadog.DashboardList;
 * import com.pulumi.datadog.DashboardListArgs;
 * import com.pulumi.datadog.inputs.DashboardListDashItemArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var time = new Dashboard("time", DashboardArgs.builder()
 *             .title("TF Test Layout Dashboard")
 *             .description("Created using the Datadog provider in Pulumi")
 *             .layoutType("ordered")
 *             .isReadOnly(true)
 *             .widgets(DashboardWidgetArgs.builder()
 *                 .alertGraphDefinition(DashboardWidgetAlertGraphDefinitionArgs.builder()
 *                     .alertId("1234")
 *                     .vizType("timeseries")
 *                     .title("Widget Title")
 *                     .liveSpan("1h")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var screen = new Dashboard("screen", DashboardArgs.builder()
 *             .title("TF Test Free Layout Dashboard")
 *             .description("Created using the Datadog provider in Pulumi")
 *             .layoutType("free")
 *             .isReadOnly(false)
 *             .widgets(DashboardWidgetArgs.builder()
 *                 .eventStreamDefinition(DashboardWidgetEventStreamDefinitionArgs.builder()
 *                     .query("*")
 *                     .eventSize("l")
 *                     .title("Widget Title")
 *                     .titleSize(16)
 *                     .titleAlign("left")
 *                     .liveSpan("1h")
 *                     .build())
 *                 .widgetLayout(DashboardWidgetWidgetLayoutArgs.builder()
 *                     .height(43)
 *                     .width(32)
 *                     .x(5)
 *                     .y(5)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         // Create a new Dashboard List with two Dashboards
 *         var newList = new DashboardList("newList", DashboardListArgs.builder()
 *             .name("Automated Created List")
 *             .dashItems(            
 *                 DashboardListDashItemArgs.builder()
 *                     .type("custom_timeboard")
 *                     .dashId(time.id())
 *                     .build(),
 *                 DashboardListDashItemArgs.builder()
 *                     .type("custom_screenboard")
 *                     .dashId(screen.id())
 *                     .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     screen,
 *                     time)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import datadog:index/dashboardList:DashboardList new_list 123456
 * ```
 * 
 */
@ResourceType(type="datadog:index/dashboardList:DashboardList")
public class DashboardList extends com.pulumi.resources.CustomResource {
    /**
     * A set of dashboard items that belong to this list
     * 
     */
    @Export(name="dashItems", refs={List.class,DashboardListDashItem.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DashboardListDashItem>> dashItems;

    /**
     * @return A set of dashboard items that belong to this list
     * 
     */
    public Output<Optional<List<DashboardListDashItem>>> dashItems() {
        return Codegen.optional(this.dashItems);
    }
    /**
     * The name of the Dashboard List
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Dashboard List
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DashboardList(java.lang.String name) {
        this(name, DashboardListArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DashboardList(java.lang.String name, DashboardListArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DashboardList(java.lang.String name, DashboardListArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/dashboardList:DashboardList", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DashboardList(java.lang.String name, Output<java.lang.String> id, @Nullable DashboardListState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/dashboardList:DashboardList", name, state, makeResourceOptions(options, id), false);
    }

    private static DashboardListArgs makeArgs(DashboardListArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DashboardListArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DashboardList get(java.lang.String name, Output<java.lang.String> id, @Nullable DashboardListState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DashboardList(name, id, state, options);
    }
}
