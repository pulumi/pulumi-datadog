// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GetIncidentNotificationRuleConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetIncidentNotificationRuleConditionArgs Empty = new GetIncidentNotificationRuleConditionArgs();

    /**
     * The incident field to evaluate. Common values include: state, severity, services, teams. Custom fields are also supported.
     * 
     */
    @Import(name="field", required=true)
    private Output<String> field;

    /**
     * @return The incident field to evaluate. Common values include: state, severity, services, teams. Custom fields are also supported.
     * 
     */
    public Output<String> field() {
        return this.field;
    }

    /**
     * The value(s) to compare against.
     * 
     */
    @Import(name="values", required=true)
    private Output<List<String>> values;

    /**
     * @return The value(s) to compare against.
     * 
     */
    public Output<List<String>> values() {
        return this.values;
    }

    private GetIncidentNotificationRuleConditionArgs() {}

    private GetIncidentNotificationRuleConditionArgs(GetIncidentNotificationRuleConditionArgs $) {
        this.field = $.field;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIncidentNotificationRuleConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIncidentNotificationRuleConditionArgs $;

        public Builder() {
            $ = new GetIncidentNotificationRuleConditionArgs();
        }

        public Builder(GetIncidentNotificationRuleConditionArgs defaults) {
            $ = new GetIncidentNotificationRuleConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param field The incident field to evaluate. Common values include: state, severity, services, teams. Custom fields are also supported.
         * 
         * @return builder
         * 
         */
        public Builder field(Output<String> field) {
            $.field = field;
            return this;
        }

        /**
         * @param field The incident field to evaluate. Common values include: state, severity, services, teams. Custom fields are also supported.
         * 
         * @return builder
         * 
         */
        public Builder field(String field) {
            return field(Output.of(field));
        }

        /**
         * @param values The value(s) to compare against.
         * 
         * @return builder
         * 
         */
        public Builder values(Output<List<String>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values The value(s) to compare against.
         * 
         * @return builder
         * 
         */
        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        /**
         * @param values The value(s) to compare against.
         * 
         * @return builder
         * 
         */
        public Builder values(String... values) {
            return values(List.of(values));
        }

        public GetIncidentNotificationRuleConditionArgs build() {
            if ($.field == null) {
                throw new MissingRequiredPropertyException("GetIncidentNotificationRuleConditionArgs", "field");
            }
            if ($.values == null) {
                throw new MissingRequiredPropertyException("GetIncidentNotificationRuleConditionArgs", "values");
            }
            return $;
        }
    }

}
