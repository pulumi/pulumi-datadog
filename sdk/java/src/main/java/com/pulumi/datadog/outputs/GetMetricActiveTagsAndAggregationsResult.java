// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.GetMetricActiveTagsAndAggregationsActiveAggregation;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMetricActiveTagsAndAggregationsResult {
    /**
     * @return The active aggregations associated with the metric.
     * 
     */
    private List<GetMetricActiveTagsAndAggregationsActiveAggregation> activeAggregations;
    /**
     * @return The active tags associated with the metric.
     * 
     */
    private List<String> activeTags;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    /**
     * @return The metric for which to fetch tags.
     * 
     */
    private String metric;
    /**
     * @return The number of seconds to look back from now.
     * 
     */
    private @Nullable Integer window;

    private GetMetricActiveTagsAndAggregationsResult() {}
    /**
     * @return The active aggregations associated with the metric.
     * 
     */
    public List<GetMetricActiveTagsAndAggregationsActiveAggregation> activeAggregations() {
        return this.activeAggregations;
    }
    /**
     * @return The active tags associated with the metric.
     * 
     */
    public List<String> activeTags() {
        return this.activeTags;
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The metric for which to fetch tags.
     * 
     */
    public String metric() {
        return this.metric;
    }
    /**
     * @return The number of seconds to look back from now.
     * 
     */
    public Optional<Integer> window() {
        return Optional.ofNullable(this.window);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetricActiveTagsAndAggregationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMetricActiveTagsAndAggregationsActiveAggregation> activeAggregations;
        private List<String> activeTags;
        private String id;
        private String metric;
        private @Nullable Integer window;
        public Builder() {}
        public Builder(GetMetricActiveTagsAndAggregationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeAggregations = defaults.activeAggregations;
    	      this.activeTags = defaults.activeTags;
    	      this.id = defaults.id;
    	      this.metric = defaults.metric;
    	      this.window = defaults.window;
        }

        @CustomType.Setter
        public Builder activeAggregations(List<GetMetricActiveTagsAndAggregationsActiveAggregation> activeAggregations) {
            if (activeAggregations == null) {
              throw new MissingRequiredPropertyException("GetMetricActiveTagsAndAggregationsResult", "activeAggregations");
            }
            this.activeAggregations = activeAggregations;
            return this;
        }
        public Builder activeAggregations(GetMetricActiveTagsAndAggregationsActiveAggregation... activeAggregations) {
            return activeAggregations(List.of(activeAggregations));
        }
        @CustomType.Setter
        public Builder activeTags(List<String> activeTags) {
            if (activeTags == null) {
              throw new MissingRequiredPropertyException("GetMetricActiveTagsAndAggregationsResult", "activeTags");
            }
            this.activeTags = activeTags;
            return this;
        }
        public Builder activeTags(String... activeTags) {
            return activeTags(List.of(activeTags));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMetricActiveTagsAndAggregationsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metric(String metric) {
            if (metric == null) {
              throw new MissingRequiredPropertyException("GetMetricActiveTagsAndAggregationsResult", "metric");
            }
            this.metric = metric;
            return this;
        }
        @CustomType.Setter
        public Builder window(@Nullable Integer window) {

            this.window = window;
            return this;
        }
        public GetMetricActiveTagsAndAggregationsResult build() {
            final var _resultValue = new GetMetricActiveTagsAndAggregationsResult();
            _resultValue.activeAggregations = activeAggregations;
            _resultValue.activeTags = activeTags;
            _resultValue.id = id;
            _resultValue.metric = metric;
            _resultValue.window = window;
            return _resultValue;
        }
    }
}
