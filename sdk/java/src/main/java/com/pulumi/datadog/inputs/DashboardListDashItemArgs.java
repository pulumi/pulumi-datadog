// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DashboardListDashItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardListDashItemArgs Empty = new DashboardListDashItemArgs();

    /**
     * The ID of the dashboard to add
     * 
     */
    @Import(name="dashId", required=true)
    private Output<String> dashId;

    /**
     * @return The ID of the dashboard to add
     * 
     */
    public Output<String> dashId() {
        return this.dashId;
    }

    /**
     * The type of this dashboard. Valid values are `custom_timeboard`, `custom_screenboard`, `integration_screenboard`, `integration_timeboard`, `host_timeboard`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of this dashboard. Valid values are `custom_timeboard`, `custom_screenboard`, `integration_screenboard`, `integration_timeboard`, `host_timeboard`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private DashboardListDashItemArgs() {}

    private DashboardListDashItemArgs(DashboardListDashItemArgs $) {
        this.dashId = $.dashId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardListDashItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardListDashItemArgs $;

        public Builder() {
            $ = new DashboardListDashItemArgs();
        }

        public Builder(DashboardListDashItemArgs defaults) {
            $ = new DashboardListDashItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dashId The ID of the dashboard to add
         * 
         * @return builder
         * 
         */
        public Builder dashId(Output<String> dashId) {
            $.dashId = dashId;
            return this;
        }

        /**
         * @param dashId The ID of the dashboard to add
         * 
         * @return builder
         * 
         */
        public Builder dashId(String dashId) {
            return dashId(Output.of(dashId));
        }

        /**
         * @param type The type of this dashboard. Valid values are `custom_timeboard`, `custom_screenboard`, `integration_screenboard`, `integration_timeboard`, `host_timeboard`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of this dashboard. Valid values are `custom_timeboard`, `custom_screenboard`, `integration_screenboard`, `integration_timeboard`, `host_timeboard`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DashboardListDashItemArgs build() {
            if ($.dashId == null) {
                throw new MissingRequiredPropertyException("DashboardListDashItemArgs", "dashId");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("DashboardListDashItemArgs", "type");
            }
            return $;
        }
    }

}
