// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.SpansMetricComputeArgs;
import com.pulumi.datadog.inputs.SpansMetricFilterArgs;
import com.pulumi.datadog.inputs.SpansMetricGroupByArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpansMetricState extends com.pulumi.resources.ResourceArgs {

    public static final SpansMetricState Empty = new SpansMetricState();

    @Import(name="compute")
    private @Nullable Output<SpansMetricComputeArgs> compute;

    public Optional<Output<SpansMetricComputeArgs>> compute() {
        return Optional.ofNullable(this.compute);
    }

    @Import(name="filter")
    private @Nullable Output<SpansMetricFilterArgs> filter;

    public Optional<Output<SpansMetricFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    @Import(name="groupBies")
    private @Nullable Output<List<SpansMetricGroupByArgs>> groupBies;

    public Optional<Output<List<SpansMetricGroupByArgs>>> groupBies() {
        return Optional.ofNullable(this.groupBies);
    }

    /**
     * The name of the span-based metric. This field can&#39;t be updated after creation.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the span-based metric. This field can&#39;t be updated after creation.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private SpansMetricState() {}

    private SpansMetricState(SpansMetricState $) {
        this.compute = $.compute;
        this.filter = $.filter;
        this.groupBies = $.groupBies;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpansMetricState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpansMetricState $;

        public Builder() {
            $ = new SpansMetricState();
        }

        public Builder(SpansMetricState defaults) {
            $ = new SpansMetricState(Objects.requireNonNull(defaults));
        }

        public Builder compute(@Nullable Output<SpansMetricComputeArgs> compute) {
            $.compute = compute;
            return this;
        }

        public Builder compute(SpansMetricComputeArgs compute) {
            return compute(Output.of(compute));
        }

        public Builder filter(@Nullable Output<SpansMetricFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(SpansMetricFilterArgs filter) {
            return filter(Output.of(filter));
        }

        public Builder groupBies(@Nullable Output<List<SpansMetricGroupByArgs>> groupBies) {
            $.groupBies = groupBies;
            return this;
        }

        public Builder groupBies(List<SpansMetricGroupByArgs> groupBies) {
            return groupBies(Output.of(groupBies));
        }

        public Builder groupBies(SpansMetricGroupByArgs... groupBies) {
            return groupBies(List.of(groupBies));
        }

        /**
         * @param name The name of the span-based metric. This field can&#39;t be updated after creation.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the span-based metric. This field can&#39;t be updated after creation.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public SpansMetricState build() {
            return $;
        }
    }

}
