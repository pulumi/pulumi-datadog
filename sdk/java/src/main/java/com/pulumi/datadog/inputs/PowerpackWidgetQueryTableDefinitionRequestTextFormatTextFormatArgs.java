// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatMatchArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatReplaceArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs extends com.pulumi.resources.ResourceArgs {

    public static final PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs Empty = new PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs();

    /**
     * The custom color palette to apply to the background.
     * 
     */
    @Import(name="customBgColor")
    private @Nullable Output<String> customBgColor;

    /**
     * @return The custom color palette to apply to the background.
     * 
     */
    public Optional<Output<String>> customBgColor() {
        return Optional.ofNullable(this.customBgColor);
    }

    /**
     * The custom color palette to apply to the foreground text.
     * 
     */
    @Import(name="customFgColor")
    private @Nullable Output<String> customFgColor;

    /**
     * @return The custom color palette to apply to the foreground text.
     * 
     */
    public Optional<Output<String>> customFgColor() {
        return Optional.ofNullable(this.customFgColor);
    }

    /**
     * Match rule for the table widget text format.
     * 
     */
    @Import(name="match", required=true)
    private Output<PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatMatchArgs> match;

    /**
     * @return Match rule for the table widget text format.
     * 
     */
    public Output<PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatMatchArgs> match() {
        return this.match;
    }

    /**
     * The color palette to apply. Valid values are `white_on_red`, `white_on_yellow`, `white_on_green`, `black_on_light_red`, `black_on_light_yellow`, `black_on_light_green`, `red_on_white`, `yellow_on_white`, `green_on_white`, `custom_bg`, `custom_text`.
     * 
     */
    @Import(name="palette")
    private @Nullable Output<String> palette;

    /**
     * @return The color palette to apply. Valid values are `white_on_red`, `white_on_yellow`, `white_on_green`, `black_on_light_red`, `black_on_light_yellow`, `black_on_light_green`, `red_on_white`, `yellow_on_white`, `green_on_white`, `custom_bg`, `custom_text`.
     * 
     */
    public Optional<Output<String>> palette() {
        return Optional.ofNullable(this.palette);
    }

    /**
     * Match rule for the table widget text format.
     * 
     */
    @Import(name="replace")
    private @Nullable Output<PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatReplaceArgs> replace;

    /**
     * @return Match rule for the table widget text format.
     * 
     */
    public Optional<Output<PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatReplaceArgs>> replace() {
        return Optional.ofNullable(this.replace);
    }

    private PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs() {}

    private PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs(PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs $) {
        this.customBgColor = $.customBgColor;
        this.customFgColor = $.customFgColor;
        this.match = $.match;
        this.palette = $.palette;
        this.replace = $.replace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs $;

        public Builder() {
            $ = new PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs();
        }

        public Builder(PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs defaults) {
            $ = new PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customBgColor The custom color palette to apply to the background.
         * 
         * @return builder
         * 
         */
        public Builder customBgColor(@Nullable Output<String> customBgColor) {
            $.customBgColor = customBgColor;
            return this;
        }

        /**
         * @param customBgColor The custom color palette to apply to the background.
         * 
         * @return builder
         * 
         */
        public Builder customBgColor(String customBgColor) {
            return customBgColor(Output.of(customBgColor));
        }

        /**
         * @param customFgColor The custom color palette to apply to the foreground text.
         * 
         * @return builder
         * 
         */
        public Builder customFgColor(@Nullable Output<String> customFgColor) {
            $.customFgColor = customFgColor;
            return this;
        }

        /**
         * @param customFgColor The custom color palette to apply to the foreground text.
         * 
         * @return builder
         * 
         */
        public Builder customFgColor(String customFgColor) {
            return customFgColor(Output.of(customFgColor));
        }

        /**
         * @param match Match rule for the table widget text format.
         * 
         * @return builder
         * 
         */
        public Builder match(Output<PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatMatchArgs> match) {
            $.match = match;
            return this;
        }

        /**
         * @param match Match rule for the table widget text format.
         * 
         * @return builder
         * 
         */
        public Builder match(PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatMatchArgs match) {
            return match(Output.of(match));
        }

        /**
         * @param palette The color palette to apply. Valid values are `white_on_red`, `white_on_yellow`, `white_on_green`, `black_on_light_red`, `black_on_light_yellow`, `black_on_light_green`, `red_on_white`, `yellow_on_white`, `green_on_white`, `custom_bg`, `custom_text`.
         * 
         * @return builder
         * 
         */
        public Builder palette(@Nullable Output<String> palette) {
            $.palette = palette;
            return this;
        }

        /**
         * @param palette The color palette to apply. Valid values are `white_on_red`, `white_on_yellow`, `white_on_green`, `black_on_light_red`, `black_on_light_yellow`, `black_on_light_green`, `red_on_white`, `yellow_on_white`, `green_on_white`, `custom_bg`, `custom_text`.
         * 
         * @return builder
         * 
         */
        public Builder palette(String palette) {
            return palette(Output.of(palette));
        }

        /**
         * @param replace Match rule for the table widget text format.
         * 
         * @return builder
         * 
         */
        public Builder replace(@Nullable Output<PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatReplaceArgs> replace) {
            $.replace = replace;
            return this;
        }

        /**
         * @param replace Match rule for the table widget text format.
         * 
         * @return builder
         * 
         */
        public Builder replace(PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatReplaceArgs replace) {
            return replace(Output.of(replace));
        }

        public PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs build() {
            if ($.match == null) {
                throw new MissingRequiredPropertyException("PowerpackWidgetQueryTableDefinitionRequestTextFormatTextFormatArgs", "match");
            }
            return $;
        }
    }

}
