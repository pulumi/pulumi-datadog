// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.OnCallTeamRoutingRulesRuleActionArgs;
import com.pulumi.datadog.inputs.OnCallTeamRoutingRulesRuleTimeRestrictionsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OnCallTeamRoutingRulesRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final OnCallTeamRoutingRulesRuleArgs Empty = new OnCallTeamRoutingRulesRuleArgs();

    /**
     * Specifies the list of actions to perform when the routing rule is matched.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<OnCallTeamRoutingRulesRuleActionArgs>> actions;

    /**
     * @return Specifies the list of actions to perform when the routing rule is matched.
     * 
     */
    public Optional<Output<List<OnCallTeamRoutingRulesRuleActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * ID of the policy to be applied when this routing rule matches.
     * 
     */
    @Import(name="escalationPolicy")
    private @Nullable Output<String> escalationPolicy;

    /**
     * @return ID of the policy to be applied when this routing rule matches.
     * 
     */
    public Optional<Output<String>> escalationPolicy() {
        return Optional.ofNullable(this.escalationPolicy);
    }

    /**
     * The ID of this rule.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of this rule.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Defines the query or condition that triggers this routing rule. Defaults to `&#34;&#34;`.
     * 
     */
    @Import(name="query")
    private @Nullable Output<String> query;

    /**
     * @return Defines the query or condition that triggers this routing rule. Defaults to `&#34;&#34;`.
     * 
     */
    public Optional<Output<String>> query() {
        return Optional.ofNullable(this.query);
    }

    /**
     * Holds time zone information and a list of time restrictions for a routing rule.
     * 
     */
    @Import(name="timeRestrictions")
    private @Nullable Output<OnCallTeamRoutingRulesRuleTimeRestrictionsArgs> timeRestrictions;

    /**
     * @return Holds time zone information and a list of time restrictions for a routing rule.
     * 
     */
    public Optional<Output<OnCallTeamRoutingRulesRuleTimeRestrictionsArgs>> timeRestrictions() {
        return Optional.ofNullable(this.timeRestrictions);
    }

    /**
     * Defines the urgency for pages created via this rule. Only valid if `escalation_policy` is set. Valid values are `high`, `low`, `dynamic`.
     * 
     */
    @Import(name="urgency")
    private @Nullable Output<String> urgency;

    /**
     * @return Defines the urgency for pages created via this rule. Only valid if `escalation_policy` is set. Valid values are `high`, `low`, `dynamic`.
     * 
     */
    public Optional<Output<String>> urgency() {
        return Optional.ofNullable(this.urgency);
    }

    private OnCallTeamRoutingRulesRuleArgs() {}

    private OnCallTeamRoutingRulesRuleArgs(OnCallTeamRoutingRulesRuleArgs $) {
        this.actions = $.actions;
        this.escalationPolicy = $.escalationPolicy;
        this.id = $.id;
        this.query = $.query;
        this.timeRestrictions = $.timeRestrictions;
        this.urgency = $.urgency;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OnCallTeamRoutingRulesRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OnCallTeamRoutingRulesRuleArgs $;

        public Builder() {
            $ = new OnCallTeamRoutingRulesRuleArgs();
        }

        public Builder(OnCallTeamRoutingRulesRuleArgs defaults) {
            $ = new OnCallTeamRoutingRulesRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Specifies the list of actions to perform when the routing rule is matched.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<OnCallTeamRoutingRulesRuleActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Specifies the list of actions to perform when the routing rule is matched.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<OnCallTeamRoutingRulesRuleActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions Specifies the list of actions to perform when the routing rule is matched.
         * 
         * @return builder
         * 
         */
        public Builder actions(OnCallTeamRoutingRulesRuleActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param escalationPolicy ID of the policy to be applied when this routing rule matches.
         * 
         * @return builder
         * 
         */
        public Builder escalationPolicy(@Nullable Output<String> escalationPolicy) {
            $.escalationPolicy = escalationPolicy;
            return this;
        }

        /**
         * @param escalationPolicy ID of the policy to be applied when this routing rule matches.
         * 
         * @return builder
         * 
         */
        public Builder escalationPolicy(String escalationPolicy) {
            return escalationPolicy(Output.of(escalationPolicy));
        }

        /**
         * @param id The ID of this rule.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of this rule.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param query Defines the query or condition that triggers this routing rule. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder query(@Nullable Output<String> query) {
            $.query = query;
            return this;
        }

        /**
         * @param query Defines the query or condition that triggers this routing rule. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder query(String query) {
            return query(Output.of(query));
        }

        /**
         * @param timeRestrictions Holds time zone information and a list of time restrictions for a routing rule.
         * 
         * @return builder
         * 
         */
        public Builder timeRestrictions(@Nullable Output<OnCallTeamRoutingRulesRuleTimeRestrictionsArgs> timeRestrictions) {
            $.timeRestrictions = timeRestrictions;
            return this;
        }

        /**
         * @param timeRestrictions Holds time zone information and a list of time restrictions for a routing rule.
         * 
         * @return builder
         * 
         */
        public Builder timeRestrictions(OnCallTeamRoutingRulesRuleTimeRestrictionsArgs timeRestrictions) {
            return timeRestrictions(Output.of(timeRestrictions));
        }

        /**
         * @param urgency Defines the urgency for pages created via this rule. Only valid if `escalation_policy` is set. Valid values are `high`, `low`, `dynamic`.
         * 
         * @return builder
         * 
         */
        public Builder urgency(@Nullable Output<String> urgency) {
            $.urgency = urgency;
            return this;
        }

        /**
         * @param urgency Defines the urgency for pages created via this rule. Only valid if `escalation_policy` is set. Valid values are `high`, `low`, `dynamic`.
         * 
         * @return builder
         * 
         */
        public Builder urgency(String urgency) {
            return urgency(Output.of(urgency));
        }

        public OnCallTeamRoutingRulesRuleArgs build() {
            return $;
        }
    }

}
