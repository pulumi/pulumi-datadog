// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class OpenapiApiArgs extends com.pulumi.resources.ResourceArgs {

    public static final OpenapiApiArgs Empty = new OpenapiApiArgs();

    /**
     * The textual content of the OpenAPI specification. Use `file()` in order to reference another file in the repository (see exmaple).
     * 
     */
    @Import(name="spec", required=true)
    private Output<String> spec;

    /**
     * @return The textual content of the OpenAPI specification. Use `file()` in order to reference another file in the repository (see exmaple).
     * 
     */
    public Output<String> spec() {
        return this.spec;
    }

    private OpenapiApiArgs() {}

    private OpenapiApiArgs(OpenapiApiArgs $) {
        this.spec = $.spec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenapiApiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenapiApiArgs $;

        public Builder() {
            $ = new OpenapiApiArgs();
        }

        public Builder(OpenapiApiArgs defaults) {
            $ = new OpenapiApiArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param spec The textual content of the OpenAPI specification. Use `file()` in order to reference another file in the repository (see exmaple).
         * 
         * @return builder
         * 
         */
        public Builder spec(Output<String> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec The textual content of the OpenAPI specification. Use `file()` in order to reference another file in the repository (see exmaple).
         * 
         * @return builder
         * 
         */
        public Builder spec(String spec) {
            return spec(Output.of(spec));
        }

        public OpenapiApiArgs build() {
            if ($.spec == null) {
                throw new MissingRequiredPropertyException("OpenapiApiArgs", "spec");
            }
            return $;
        }
    }

}
