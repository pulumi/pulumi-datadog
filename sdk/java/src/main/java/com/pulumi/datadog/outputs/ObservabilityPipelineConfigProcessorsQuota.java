// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigProcessorsQuotaLimit;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigProcessorsQuotaOverride;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObservabilityPipelineConfigProcessorsQuota {
    /**
     * @return Whether to drop events exceeding the limit.
     * 
     */
    private Boolean dropEvents;
    /**
     * @return The unique ID of the processor.
     * 
     */
    private String id;
    /**
     * @return Whether to ignore when partition fields are missing.
     * 
     */
    private @Nullable Boolean ignoreWhenMissingPartitions;
    /**
     * @return A Datadog search query used to determine which logs this processor targets.
     * 
     */
    private String include;
    /**
     * @return The inputs for the processor.
     * 
     */
    private List<String> inputs;
    private @Nullable ObservabilityPipelineConfigProcessorsQuotaLimit limit;
    /**
     * @return The name of the quota.
     * 
     */
    private String name;
    /**
     * @return The overrides for field-specific quotas.
     * 
     */
    private @Nullable List<ObservabilityPipelineConfigProcessorsQuotaOverride> overrides;
    /**
     * @return List of partition fields.
     * 
     */
    private @Nullable List<String> partitionFields;

    private ObservabilityPipelineConfigProcessorsQuota() {}
    /**
     * @return Whether to drop events exceeding the limit.
     * 
     */
    public Boolean dropEvents() {
        return this.dropEvents;
    }
    /**
     * @return The unique ID of the processor.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether to ignore when partition fields are missing.
     * 
     */
    public Optional<Boolean> ignoreWhenMissingPartitions() {
        return Optional.ofNullable(this.ignoreWhenMissingPartitions);
    }
    /**
     * @return A Datadog search query used to determine which logs this processor targets.
     * 
     */
    public String include() {
        return this.include;
    }
    /**
     * @return The inputs for the processor.
     * 
     */
    public List<String> inputs() {
        return this.inputs;
    }
    public Optional<ObservabilityPipelineConfigProcessorsQuotaLimit> limit() {
        return Optional.ofNullable(this.limit);
    }
    /**
     * @return The name of the quota.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The overrides for field-specific quotas.
     * 
     */
    public List<ObservabilityPipelineConfigProcessorsQuotaOverride> overrides() {
        return this.overrides == null ? List.of() : this.overrides;
    }
    /**
     * @return List of partition fields.
     * 
     */
    public List<String> partitionFields() {
        return this.partitionFields == null ? List.of() : this.partitionFields;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservabilityPipelineConfigProcessorsQuota defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean dropEvents;
        private String id;
        private @Nullable Boolean ignoreWhenMissingPartitions;
        private String include;
        private List<String> inputs;
        private @Nullable ObservabilityPipelineConfigProcessorsQuotaLimit limit;
        private String name;
        private @Nullable List<ObservabilityPipelineConfigProcessorsQuotaOverride> overrides;
        private @Nullable List<String> partitionFields;
        public Builder() {}
        public Builder(ObservabilityPipelineConfigProcessorsQuota defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dropEvents = defaults.dropEvents;
    	      this.id = defaults.id;
    	      this.ignoreWhenMissingPartitions = defaults.ignoreWhenMissingPartitions;
    	      this.include = defaults.include;
    	      this.inputs = defaults.inputs;
    	      this.limit = defaults.limit;
    	      this.name = defaults.name;
    	      this.overrides = defaults.overrides;
    	      this.partitionFields = defaults.partitionFields;
        }

        @CustomType.Setter
        public Builder dropEvents(Boolean dropEvents) {
            if (dropEvents == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsQuota", "dropEvents");
            }
            this.dropEvents = dropEvents;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsQuota", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ignoreWhenMissingPartitions(@Nullable Boolean ignoreWhenMissingPartitions) {

            this.ignoreWhenMissingPartitions = ignoreWhenMissingPartitions;
            return this;
        }
        @CustomType.Setter
        public Builder include(String include) {
            if (include == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsQuota", "include");
            }
            this.include = include;
            return this;
        }
        @CustomType.Setter
        public Builder inputs(List<String> inputs) {
            if (inputs == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsQuota", "inputs");
            }
            this.inputs = inputs;
            return this;
        }
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }
        @CustomType.Setter
        public Builder limit(@Nullable ObservabilityPipelineConfigProcessorsQuotaLimit limit) {

            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsQuota", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder overrides(@Nullable List<ObservabilityPipelineConfigProcessorsQuotaOverride> overrides) {

            this.overrides = overrides;
            return this;
        }
        public Builder overrides(ObservabilityPipelineConfigProcessorsQuotaOverride... overrides) {
            return overrides(List.of(overrides));
        }
        @CustomType.Setter
        public Builder partitionFields(@Nullable List<String> partitionFields) {

            this.partitionFields = partitionFields;
            return this;
        }
        public Builder partitionFields(String... partitionFields) {
            return partitionFields(List.of(partitionFields));
        }
        public ObservabilityPipelineConfigProcessorsQuota build() {
            final var _resultValue = new ObservabilityPipelineConfigProcessorsQuota();
            _resultValue.dropEvents = dropEvents;
            _resultValue.id = id;
            _resultValue.ignoreWhenMissingPartitions = ignoreWhenMissingPartitions;
            _resultValue.include = include;
            _resultValue.inputs = inputs;
            _resultValue.limit = limit;
            _resultValue.name = name;
            _resultValue.overrides = overrides;
            _resultValue.partitionFields = partitionFields;
            return _resultValue;
        }
    }
}
