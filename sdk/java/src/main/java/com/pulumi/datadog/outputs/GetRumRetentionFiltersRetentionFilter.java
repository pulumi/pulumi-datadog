// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRumRetentionFiltersRetentionFilter {
    private Boolean enabled;
    private String eventType;
    private String id;
    private String name;
    private String query;
    private Integer sampleRate;

    private GetRumRetentionFiltersRetentionFilter() {}
    public Boolean enabled() {
        return this.enabled;
    }
    public String eventType() {
        return this.eventType;
    }
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String query() {
        return this.query;
    }
    public Integer sampleRate() {
        return this.sampleRate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRumRetentionFiltersRetentionFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private String eventType;
        private String id;
        private String name;
        private String query;
        private Integer sampleRate;
        public Builder() {}
        public Builder(GetRumRetentionFiltersRetentionFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.eventType = defaults.eventType;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.query = defaults.query;
    	      this.sampleRate = defaults.sampleRate;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetRumRetentionFiltersRetentionFilter", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder eventType(String eventType) {
            if (eventType == null) {
              throw new MissingRequiredPropertyException("GetRumRetentionFiltersRetentionFilter", "eventType");
            }
            this.eventType = eventType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRumRetentionFiltersRetentionFilter", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRumRetentionFiltersRetentionFilter", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            if (query == null) {
              throw new MissingRequiredPropertyException("GetRumRetentionFiltersRetentionFilter", "query");
            }
            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder sampleRate(Integer sampleRate) {
            if (sampleRate == null) {
              throw new MissingRequiredPropertyException("GetRumRetentionFiltersRetentionFilter", "sampleRate");
            }
            this.sampleRate = sampleRate;
            return this;
        }
        public GetRumRetentionFiltersRetentionFilter build() {
            final var _resultValue = new GetRumRetentionFiltersRetentionFilter();
            _resultValue.enabled = enabled;
            _resultValue.eventType = eventType;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.query = query;
            _resultValue.sampleRate = sampleRate;
            return _resultValue;
        }
    }
}
