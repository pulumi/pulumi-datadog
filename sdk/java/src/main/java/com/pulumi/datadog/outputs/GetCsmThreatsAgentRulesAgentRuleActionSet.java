// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCsmThreatsAgentRulesAgentRuleActionSet {
    private Boolean append;
    private String defaultValue;
    private String expression;
    private String field;
    private Boolean inherited;
    private String name;
    private String scope;
    private Integer size;
    private Integer ttl;
    private String value;

    private GetCsmThreatsAgentRulesAgentRuleActionSet() {}
    public Boolean append() {
        return this.append;
    }
    public String defaultValue() {
        return this.defaultValue;
    }
    public String expression() {
        return this.expression;
    }
    public String field() {
        return this.field;
    }
    public Boolean inherited() {
        return this.inherited;
    }
    public String name() {
        return this.name;
    }
    public String scope() {
        return this.scope;
    }
    public Integer size() {
        return this.size;
    }
    public Integer ttl() {
        return this.ttl;
    }
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCsmThreatsAgentRulesAgentRuleActionSet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean append;
        private String defaultValue;
        private String expression;
        private String field;
        private Boolean inherited;
        private String name;
        private String scope;
        private Integer size;
        private Integer ttl;
        private String value;
        public Builder() {}
        public Builder(GetCsmThreatsAgentRulesAgentRuleActionSet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.append = defaults.append;
    	      this.defaultValue = defaults.defaultValue;
    	      this.expression = defaults.expression;
    	      this.field = defaults.field;
    	      this.inherited = defaults.inherited;
    	      this.name = defaults.name;
    	      this.scope = defaults.scope;
    	      this.size = defaults.size;
    	      this.ttl = defaults.ttl;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder append(Boolean append) {
            if (append == null) {
              throw new MissingRequiredPropertyException("GetCsmThreatsAgentRulesAgentRuleActionSet", "append");
            }
            this.append = append;
            return this;
        }
        @CustomType.Setter
        public Builder defaultValue(String defaultValue) {
            if (defaultValue == null) {
              throw new MissingRequiredPropertyException("GetCsmThreatsAgentRulesAgentRuleActionSet", "defaultValue");
            }
            this.defaultValue = defaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder expression(String expression) {
            if (expression == null) {
              throw new MissingRequiredPropertyException("GetCsmThreatsAgentRulesAgentRuleActionSet", "expression");
            }
            this.expression = expression;
            return this;
        }
        @CustomType.Setter
        public Builder field(String field) {
            if (field == null) {
              throw new MissingRequiredPropertyException("GetCsmThreatsAgentRulesAgentRuleActionSet", "field");
            }
            this.field = field;
            return this;
        }
        @CustomType.Setter
        public Builder inherited(Boolean inherited) {
            if (inherited == null) {
              throw new MissingRequiredPropertyException("GetCsmThreatsAgentRulesAgentRuleActionSet", "inherited");
            }
            this.inherited = inherited;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCsmThreatsAgentRulesAgentRuleActionSet", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("GetCsmThreatsAgentRulesAgentRuleActionSet", "scope");
            }
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetCsmThreatsAgentRulesAgentRuleActionSet", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder ttl(Integer ttl) {
            if (ttl == null) {
              throw new MissingRequiredPropertyException("GetCsmThreatsAgentRulesAgentRuleActionSet", "ttl");
            }
            this.ttl = ttl;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetCsmThreatsAgentRulesAgentRuleActionSet", "value");
            }
            this.value = value;
            return this;
        }
        public GetCsmThreatsAgentRulesAgentRuleActionSet build() {
            final var _resultValue = new GetCsmThreatsAgentRulesAgentRuleActionSet();
            _resultValue.append = append;
            _resultValue.defaultValue = defaultValue;
            _resultValue.expression = expression;
            _resultValue.field = field;
            _resultValue.inherited = inherited;
            _resultValue.name = name;
            _resultValue.scope = scope;
            _resultValue.size = size;
            _resultValue.ttl = ttl;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
