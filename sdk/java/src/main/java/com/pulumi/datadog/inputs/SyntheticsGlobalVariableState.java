// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.SyntheticsGlobalVariableOptionsArgs;
import com.pulumi.datadog.inputs.SyntheticsGlobalVariableParseTestOptionsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsGlobalVariableState extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsGlobalVariableState Empty = new SyntheticsGlobalVariableState();

    /**
     * Description of the global variable.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the global variable.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Synthetics global variable name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Synthetics global variable name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Additional options for the variable, such as a MFA token.
     * 
     */
    @Import(name="options")
    private @Nullable Output<SyntheticsGlobalVariableOptionsArgs> options;

    /**
     * @return Additional options for the variable, such as a MFA token.
     * 
     */
    public Optional<Output<SyntheticsGlobalVariableOptionsArgs>> options() {
        return Optional.ofNullable(this.options);
    }

    /**
     * Id of the Synthetics test to use for a variable from test.
     * 
     */
    @Import(name="parseTestId")
    private @Nullable Output<String> parseTestId;

    /**
     * @return Id of the Synthetics test to use for a variable from test.
     * 
     */
    public Optional<Output<String>> parseTestId() {
        return Optional.ofNullable(this.parseTestId);
    }

    /**
     * ID of the Synthetics test to use a source of the global variable value.
     * 
     */
    @Import(name="parseTestOptions")
    private @Nullable Output<SyntheticsGlobalVariableParseTestOptionsArgs> parseTestOptions;

    /**
     * @return ID of the Synthetics test to use a source of the global variable value.
     * 
     */
    public Optional<Output<SyntheticsGlobalVariableParseTestOptionsArgs>> parseTestOptions() {
        return Optional.ofNullable(this.parseTestOptions);
    }

    /**
     * A list of role identifiers to associate with the Synthetics global variable.
     * 
     */
    @Import(name="restrictedRoles")
    private @Nullable Output<List<String>> restrictedRoles;

    /**
     * @return A list of role identifiers to associate with the Synthetics global variable.
     * 
     */
    public Optional<Output<List<String>>> restrictedRoles() {
        return Optional.ofNullable(this.restrictedRoles);
    }

    /**
     * If set to true, the value of the global variable is hidden. Defaults to `false`.
     * 
     */
    @Import(name="secure")
    private @Nullable Output<Boolean> secure;

    /**
     * @return If set to true, the value of the global variable is hidden. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> secure() {
        return Optional.ofNullable(this.secure);
    }

    /**
     * A list of tags to associate with your synthetics global variable.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return A list of tags to associate with your synthetics global variable.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Value for the parser to use, required for type `json_path` or `regex`.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Value for the parser to use, required for type `json_path` or `regex`.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private SyntheticsGlobalVariableState() {}

    private SyntheticsGlobalVariableState(SyntheticsGlobalVariableState $) {
        this.description = $.description;
        this.name = $.name;
        this.options = $.options;
        this.parseTestId = $.parseTestId;
        this.parseTestOptions = $.parseTestOptions;
        this.restrictedRoles = $.restrictedRoles;
        this.secure = $.secure;
        this.tags = $.tags;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsGlobalVariableState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsGlobalVariableState $;

        public Builder() {
            $ = new SyntheticsGlobalVariableState();
        }

        public Builder(SyntheticsGlobalVariableState defaults) {
            $ = new SyntheticsGlobalVariableState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the global variable.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the global variable.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Synthetics global variable name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Synthetics global variable name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param options Additional options for the variable, such as a MFA token.
         * 
         * @return builder
         * 
         */
        public Builder options(@Nullable Output<SyntheticsGlobalVariableOptionsArgs> options) {
            $.options = options;
            return this;
        }

        /**
         * @param options Additional options for the variable, such as a MFA token.
         * 
         * @return builder
         * 
         */
        public Builder options(SyntheticsGlobalVariableOptionsArgs options) {
            return options(Output.of(options));
        }

        /**
         * @param parseTestId Id of the Synthetics test to use for a variable from test.
         * 
         * @return builder
         * 
         */
        public Builder parseTestId(@Nullable Output<String> parseTestId) {
            $.parseTestId = parseTestId;
            return this;
        }

        /**
         * @param parseTestId Id of the Synthetics test to use for a variable from test.
         * 
         * @return builder
         * 
         */
        public Builder parseTestId(String parseTestId) {
            return parseTestId(Output.of(parseTestId));
        }

        /**
         * @param parseTestOptions ID of the Synthetics test to use a source of the global variable value.
         * 
         * @return builder
         * 
         */
        public Builder parseTestOptions(@Nullable Output<SyntheticsGlobalVariableParseTestOptionsArgs> parseTestOptions) {
            $.parseTestOptions = parseTestOptions;
            return this;
        }

        /**
         * @param parseTestOptions ID of the Synthetics test to use a source of the global variable value.
         * 
         * @return builder
         * 
         */
        public Builder parseTestOptions(SyntheticsGlobalVariableParseTestOptionsArgs parseTestOptions) {
            return parseTestOptions(Output.of(parseTestOptions));
        }

        /**
         * @param restrictedRoles A list of role identifiers to associate with the Synthetics global variable.
         * 
         * @return builder
         * 
         */
        public Builder restrictedRoles(@Nullable Output<List<String>> restrictedRoles) {
            $.restrictedRoles = restrictedRoles;
            return this;
        }

        /**
         * @param restrictedRoles A list of role identifiers to associate with the Synthetics global variable.
         * 
         * @return builder
         * 
         */
        public Builder restrictedRoles(List<String> restrictedRoles) {
            return restrictedRoles(Output.of(restrictedRoles));
        }

        /**
         * @param restrictedRoles A list of role identifiers to associate with the Synthetics global variable.
         * 
         * @return builder
         * 
         */
        public Builder restrictedRoles(String... restrictedRoles) {
            return restrictedRoles(List.of(restrictedRoles));
        }

        /**
         * @param secure If set to true, the value of the global variable is hidden. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder secure(@Nullable Output<Boolean> secure) {
            $.secure = secure;
            return this;
        }

        /**
         * @param secure If set to true, the value of the global variable is hidden. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder secure(Boolean secure) {
            return secure(Output.of(secure));
        }

        /**
         * @param tags A list of tags to associate with your synthetics global variable.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of tags to associate with your synthetics global variable.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A list of tags to associate with your synthetics global variable.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param value Value for the parser to use, required for type `json_path` or `regex`.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value for the parser to use, required for type `json_path` or `regex`.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public SyntheticsGlobalVariableState build() {
            return $;
        }
    }

}
