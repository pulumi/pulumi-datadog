// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationAccountMetricsConfigNamespaceFiltersArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationAccountMetricsConfigNamespaceFiltersArgs Empty = new IntegrationAccountMetricsConfigNamespaceFiltersArgs();

    /**
     * Exclude only these namespaces from metrics collection. Use `datadog.aws.getIntegrationAvailableNamespaces` data source to get allowed values. Defaults to `[&#34;AWS/SQS&#34;, &#34;AWS/ElasticMapReduce&#34;]`. `AWS/SQS` and `AWS/ElasticMapReduce` are excluded by default to reduce your AWS CloudWatch costs from `GetMetricData` API calls.
     * 
     */
    @Import(name="excludeOnlies")
    private @Nullable Output<List<String>> excludeOnlies;

    /**
     * @return Exclude only these namespaces from metrics collection. Use `datadog.aws.getIntegrationAvailableNamespaces` data source to get allowed values. Defaults to `[&#34;AWS/SQS&#34;, &#34;AWS/ElasticMapReduce&#34;]`. `AWS/SQS` and `AWS/ElasticMapReduce` are excluded by default to reduce your AWS CloudWatch costs from `GetMetricData` API calls.
     * 
     */
    public Optional<Output<List<String>>> excludeOnlies() {
        return Optional.ofNullable(this.excludeOnlies);
    }

    /**
     * Include only these namespaces for metrics collection. Use `datadog.aws.getIntegrationAvailableNamespaces` data source to get allowed values.
     * 
     */
    @Import(name="includeOnlies")
    private @Nullable Output<List<String>> includeOnlies;

    /**
     * @return Include only these namespaces for metrics collection. Use `datadog.aws.getIntegrationAvailableNamespaces` data source to get allowed values.
     * 
     */
    public Optional<Output<List<String>>> includeOnlies() {
        return Optional.ofNullable(this.includeOnlies);
    }

    private IntegrationAccountMetricsConfigNamespaceFiltersArgs() {}

    private IntegrationAccountMetricsConfigNamespaceFiltersArgs(IntegrationAccountMetricsConfigNamespaceFiltersArgs $) {
        this.excludeOnlies = $.excludeOnlies;
        this.includeOnlies = $.includeOnlies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationAccountMetricsConfigNamespaceFiltersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationAccountMetricsConfigNamespaceFiltersArgs $;

        public Builder() {
            $ = new IntegrationAccountMetricsConfigNamespaceFiltersArgs();
        }

        public Builder(IntegrationAccountMetricsConfigNamespaceFiltersArgs defaults) {
            $ = new IntegrationAccountMetricsConfigNamespaceFiltersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludeOnlies Exclude only these namespaces from metrics collection. Use `datadog.aws.getIntegrationAvailableNamespaces` data source to get allowed values. Defaults to `[&#34;AWS/SQS&#34;, &#34;AWS/ElasticMapReduce&#34;]`. `AWS/SQS` and `AWS/ElasticMapReduce` are excluded by default to reduce your AWS CloudWatch costs from `GetMetricData` API calls.
         * 
         * @return builder
         * 
         */
        public Builder excludeOnlies(@Nullable Output<List<String>> excludeOnlies) {
            $.excludeOnlies = excludeOnlies;
            return this;
        }

        /**
         * @param excludeOnlies Exclude only these namespaces from metrics collection. Use `datadog.aws.getIntegrationAvailableNamespaces` data source to get allowed values. Defaults to `[&#34;AWS/SQS&#34;, &#34;AWS/ElasticMapReduce&#34;]`. `AWS/SQS` and `AWS/ElasticMapReduce` are excluded by default to reduce your AWS CloudWatch costs from `GetMetricData` API calls.
         * 
         * @return builder
         * 
         */
        public Builder excludeOnlies(List<String> excludeOnlies) {
            return excludeOnlies(Output.of(excludeOnlies));
        }

        /**
         * @param excludeOnlies Exclude only these namespaces from metrics collection. Use `datadog.aws.getIntegrationAvailableNamespaces` data source to get allowed values. Defaults to `[&#34;AWS/SQS&#34;, &#34;AWS/ElasticMapReduce&#34;]`. `AWS/SQS` and `AWS/ElasticMapReduce` are excluded by default to reduce your AWS CloudWatch costs from `GetMetricData` API calls.
         * 
         * @return builder
         * 
         */
        public Builder excludeOnlies(String... excludeOnlies) {
            return excludeOnlies(List.of(excludeOnlies));
        }

        /**
         * @param includeOnlies Include only these namespaces for metrics collection. Use `datadog.aws.getIntegrationAvailableNamespaces` data source to get allowed values.
         * 
         * @return builder
         * 
         */
        public Builder includeOnlies(@Nullable Output<List<String>> includeOnlies) {
            $.includeOnlies = includeOnlies;
            return this;
        }

        /**
         * @param includeOnlies Include only these namespaces for metrics collection. Use `datadog.aws.getIntegrationAvailableNamespaces` data source to get allowed values.
         * 
         * @return builder
         * 
         */
        public Builder includeOnlies(List<String> includeOnlies) {
            return includeOnlies(Output.of(includeOnlies));
        }

        /**
         * @param includeOnlies Include only these namespaces for metrics collection. Use `datadog.aws.getIntegrationAvailableNamespaces` data source to get allowed values.
         * 
         * @return builder
         * 
         */
        public Builder includeOnlies(String... includeOnlies) {
            return includeOnlies(List.of(includeOnlies));
        }

        public IntegrationAccountMetricsConfigNamespaceFiltersArgs build() {
            return $;
        }
    }

}
