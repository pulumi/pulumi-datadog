// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigProcessorsEnrichmentTableFile;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigProcessorsEnrichmentTableGeoip;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObservabilityPipelineConfigProcessorsEnrichmentTable {
    /**
     * @return Defines a static enrichment table loaded from a CSV file.
     * 
     */
    private @Nullable ObservabilityPipelineConfigProcessorsEnrichmentTableFile file;
    /**
     * @return Uses a GeoIP database to enrich logs based on an IP field.
     * 
     */
    private @Nullable ObservabilityPipelineConfigProcessorsEnrichmentTableGeoip geoip;
    /**
     * @return The unique identifier for this processor.
     * 
     */
    private String id;
    /**
     * @return A Datadog search query used to determine which logs this processor targets.
     * 
     */
    private String include;
    /**
     * @return A list of component IDs whose output is used as the input for this processor.
     * 
     */
    private List<String> inputs;
    /**
     * @return Path where enrichment results should be stored in the log.
     * 
     */
    private String target;

    private ObservabilityPipelineConfigProcessorsEnrichmentTable() {}
    /**
     * @return Defines a static enrichment table loaded from a CSV file.
     * 
     */
    public Optional<ObservabilityPipelineConfigProcessorsEnrichmentTableFile> file() {
        return Optional.ofNullable(this.file);
    }
    /**
     * @return Uses a GeoIP database to enrich logs based on an IP field.
     * 
     */
    public Optional<ObservabilityPipelineConfigProcessorsEnrichmentTableGeoip> geoip() {
        return Optional.ofNullable(this.geoip);
    }
    /**
     * @return The unique identifier for this processor.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A Datadog search query used to determine which logs this processor targets.
     * 
     */
    public String include() {
        return this.include;
    }
    /**
     * @return A list of component IDs whose output is used as the input for this processor.
     * 
     */
    public List<String> inputs() {
        return this.inputs;
    }
    /**
     * @return Path where enrichment results should be stored in the log.
     * 
     */
    public String target() {
        return this.target;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservabilityPipelineConfigProcessorsEnrichmentTable defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ObservabilityPipelineConfigProcessorsEnrichmentTableFile file;
        private @Nullable ObservabilityPipelineConfigProcessorsEnrichmentTableGeoip geoip;
        private String id;
        private String include;
        private List<String> inputs;
        private String target;
        public Builder() {}
        public Builder(ObservabilityPipelineConfigProcessorsEnrichmentTable defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.file = defaults.file;
    	      this.geoip = defaults.geoip;
    	      this.id = defaults.id;
    	      this.include = defaults.include;
    	      this.inputs = defaults.inputs;
    	      this.target = defaults.target;
        }

        @CustomType.Setter
        public Builder file(@Nullable ObservabilityPipelineConfigProcessorsEnrichmentTableFile file) {

            this.file = file;
            return this;
        }
        @CustomType.Setter
        public Builder geoip(@Nullable ObservabilityPipelineConfigProcessorsEnrichmentTableGeoip geoip) {

            this.geoip = geoip;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsEnrichmentTable", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder include(String include) {
            if (include == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsEnrichmentTable", "include");
            }
            this.include = include;
            return this;
        }
        @CustomType.Setter
        public Builder inputs(List<String> inputs) {
            if (inputs == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsEnrichmentTable", "inputs");
            }
            this.inputs = inputs;
            return this;
        }
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }
        @CustomType.Setter
        public Builder target(String target) {
            if (target == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigProcessorsEnrichmentTable", "target");
            }
            this.target = target;
            return this;
        }
        public ObservabilityPipelineConfigProcessorsEnrichmentTable build() {
            final var _resultValue = new ObservabilityPipelineConfigProcessorsEnrichmentTable();
            _resultValue.file = file;
            _resultValue.geoip = geoip;
            _resultValue.id = id;
            _resultValue.include = include;
            _resultValue.inputs = inputs;
            _resultValue.target = target;
            return _resultValue;
        }
    }
}
