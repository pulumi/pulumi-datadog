// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsTestApiStepRequestBasicauthArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsTestApiStepRequestBasicauthArgs Empty = new SyntheticsTestApiStepRequestBasicauthArgs();

    /**
     * Access key for `SIGV4` authentication.
     * 
     */
    @Import(name="accessKey")
    private @Nullable Output<String> accessKey;

    /**
     * @return Access key for `SIGV4` authentication.
     * 
     */
    public Optional<Output<String>> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }

    /**
     * Access token url for `oauth-client` or `oauth-rop` authentication.
     * 
     */
    @Import(name="accessTokenUrl")
    private @Nullable Output<String> accessTokenUrl;

    /**
     * @return Access token url for `oauth-client` or `oauth-rop` authentication.
     * 
     */
    public Optional<Output<String>> accessTokenUrl() {
        return Optional.ofNullable(this.accessTokenUrl);
    }

    /**
     * Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
     * 
     */
    @Import(name="audience")
    private @Nullable Output<String> audience;

    /**
     * @return Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
     * 
     */
    public Optional<Output<String>> audience() {
        return Optional.ofNullable(this.audience);
    }

    /**
     * Client ID for `oauth-client` or `oauth-rop` authentication.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return Client ID for `oauth-client` or `oauth-rop` authentication.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Client secret for `oauth-client` or `oauth-rop` authentication.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return Client secret for `oauth-client` or `oauth-rop` authentication.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * Domain for `ntlm` authentication.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return Domain for `ntlm` authentication.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * Password for authentication.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return Password for authentication.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Region for `SIGV4` authentication.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region for `SIGV4` authentication.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
     * 
     */
    @Import(name="resource")
    private @Nullable Output<String> resource;

    /**
     * @return Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
     * 
     */
    public Optional<Output<String>> resource() {
        return Optional.ofNullable(this.resource);
    }

    /**
     * Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * Secret key for `SIGV4` authentication.
     * 
     */
    @Import(name="secretKey")
    private @Nullable Output<String> secretKey;

    /**
     * @return Secret key for `SIGV4` authentication.
     * 
     */
    public Optional<Output<String>> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    /**
     * Service name for `SIGV4` authentication.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Service name for `SIGV4` authentication.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Session token for `SIGV4` authentication.
     * 
     */
    @Import(name="sessionToken")
    private @Nullable Output<String> sessionToken;

    /**
     * @return Session token for `SIGV4` authentication.
     * 
     */
    public Optional<Output<String>> sessionToken() {
        return Optional.ofNullable(this.sessionToken);
    }

    /**
     * Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
     * 
     */
    @Import(name="tokenApiAuthentication")
    private @Nullable Output<String> tokenApiAuthentication;

    /**
     * @return Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
     * 
     */
    public Optional<Output<String>> tokenApiAuthentication() {
        return Optional.ofNullable(this.tokenApiAuthentication);
    }

    /**
     * Type of basic authentication to use when performing the test. Defaults to `&#34;web&#34;`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of basic authentication to use when performing the test. Defaults to `&#34;web&#34;`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Username for authentication.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return Username for authentication.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    /**
     * Workstation for `ntlm` authentication.
     * 
     */
    @Import(name="workstation")
    private @Nullable Output<String> workstation;

    /**
     * @return Workstation for `ntlm` authentication.
     * 
     */
    public Optional<Output<String>> workstation() {
        return Optional.ofNullable(this.workstation);
    }

    private SyntheticsTestApiStepRequestBasicauthArgs() {}

    private SyntheticsTestApiStepRequestBasicauthArgs(SyntheticsTestApiStepRequestBasicauthArgs $) {
        this.accessKey = $.accessKey;
        this.accessTokenUrl = $.accessTokenUrl;
        this.audience = $.audience;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.domain = $.domain;
        this.password = $.password;
        this.region = $.region;
        this.resource = $.resource;
        this.scope = $.scope;
        this.secretKey = $.secretKey;
        this.serviceName = $.serviceName;
        this.sessionToken = $.sessionToken;
        this.tokenApiAuthentication = $.tokenApiAuthentication;
        this.type = $.type;
        this.username = $.username;
        this.workstation = $.workstation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsTestApiStepRequestBasicauthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsTestApiStepRequestBasicauthArgs $;

        public Builder() {
            $ = new SyntheticsTestApiStepRequestBasicauthArgs();
        }

        public Builder(SyntheticsTestApiStepRequestBasicauthArgs defaults) {
            $ = new SyntheticsTestApiStepRequestBasicauthArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey Access key for `SIGV4` authentication.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(@Nullable Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param accessKey Access key for `SIGV4` authentication.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        /**
         * @param accessTokenUrl Access token url for `oauth-client` or `oauth-rop` authentication.
         * 
         * @return builder
         * 
         */
        public Builder accessTokenUrl(@Nullable Output<String> accessTokenUrl) {
            $.accessTokenUrl = accessTokenUrl;
            return this;
        }

        /**
         * @param accessTokenUrl Access token url for `oauth-client` or `oauth-rop` authentication.
         * 
         * @return builder
         * 
         */
        public Builder accessTokenUrl(String accessTokenUrl) {
            return accessTokenUrl(Output.of(accessTokenUrl));
        }

        /**
         * @param audience Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder audience(@Nullable Output<String> audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param audience Audience for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder audience(String audience) {
            return audience(Output.of(audience));
        }

        /**
         * @param clientId Client ID for `oauth-client` or `oauth-rop` authentication.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Client ID for `oauth-client` or `oauth-rop` authentication.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret Client secret for `oauth-client` or `oauth-rop` authentication.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Client secret for `oauth-client` or `oauth-rop` authentication.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param domain Domain for `ntlm` authentication.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain Domain for `ntlm` authentication.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param password Password for authentication.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Password for authentication.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param region Region for `SIGV4` authentication.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region for `SIGV4` authentication.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param resource Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder resource(@Nullable Output<String> resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param resource Resource for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder resource(String resource) {
            return resource(Output.of(resource));
        }

        /**
         * @param scope Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Scope for `oauth-client` or `oauth-rop` authentication. Defaults to `&#34;&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param secretKey Secret key for `SIGV4` authentication.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(@Nullable Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey Secret key for `SIGV4` authentication.
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        /**
         * @param serviceName Service name for `SIGV4` authentication.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name for `SIGV4` authentication.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param sessionToken Session token for `SIGV4` authentication.
         * 
         * @return builder
         * 
         */
        public Builder sessionToken(@Nullable Output<String> sessionToken) {
            $.sessionToken = sessionToken;
            return this;
        }

        /**
         * @param sessionToken Session token for `SIGV4` authentication.
         * 
         * @return builder
         * 
         */
        public Builder sessionToken(String sessionToken) {
            return sessionToken(Output.of(sessionToken));
        }

        /**
         * @param tokenApiAuthentication Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
         * 
         * @return builder
         * 
         */
        public Builder tokenApiAuthentication(@Nullable Output<String> tokenApiAuthentication) {
            $.tokenApiAuthentication = tokenApiAuthentication;
            return this;
        }

        /**
         * @param tokenApiAuthentication Token API Authentication for `oauth-client` or `oauth-rop` authentication. Valid values are `header`, `body`.
         * 
         * @return builder
         * 
         */
        public Builder tokenApiAuthentication(String tokenApiAuthentication) {
            return tokenApiAuthentication(Output.of(tokenApiAuthentication));
        }

        /**
         * @param type Type of basic authentication to use when performing the test. Defaults to `&#34;web&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of basic authentication to use when performing the test. Defaults to `&#34;web&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param username Username for authentication.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Username for authentication.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        /**
         * @param workstation Workstation for `ntlm` authentication.
         * 
         * @return builder
         * 
         */
        public Builder workstation(@Nullable Output<String> workstation) {
            $.workstation = workstation;
            return this;
        }

        /**
         * @param workstation Workstation for `ntlm` authentication.
         * 
         * @return builder
         * 
         */
        public Builder workstation(String workstation) {
            return workstation(Output.of(workstation));
        }

        public SyntheticsTestApiStepRequestBasicauthArgs build() {
            return $;
        }
    }

}
