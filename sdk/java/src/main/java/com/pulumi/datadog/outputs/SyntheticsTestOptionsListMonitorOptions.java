// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SyntheticsTestOptionsListMonitorOptions {
    /**
     * @return A message to include with a re-notification.
     * 
     */
    private @Nullable String escalationMessage;
    /**
     * @return Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
     * 
     */
    private @Nullable Integer renotifyInterval;
    /**
     * @return The number of times a monitor renotifies. It can only be set if `renotify_interval` is set.
     * 
     */
    private @Nullable Integer renotifyOccurrences;

    private SyntheticsTestOptionsListMonitorOptions() {}
    /**
     * @return A message to include with a re-notification.
     * 
     */
    public Optional<String> escalationMessage() {
        return Optional.ofNullable(this.escalationMessage);
    }
    /**
     * @return Specify a renotification frequency in minutes. Values available by default are `0`, `10`, `20`, `30`, `40`, `50`, `60`, `90`, `120`, `180`, `240`, `300`, `360`, `720`, `1440`. Defaults to `0`.
     * 
     */
    public Optional<Integer> renotifyInterval() {
        return Optional.ofNullable(this.renotifyInterval);
    }
    /**
     * @return The number of times a monitor renotifies. It can only be set if `renotify_interval` is set.
     * 
     */
    public Optional<Integer> renotifyOccurrences() {
        return Optional.ofNullable(this.renotifyOccurrences);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SyntheticsTestOptionsListMonitorOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String escalationMessage;
        private @Nullable Integer renotifyInterval;
        private @Nullable Integer renotifyOccurrences;
        public Builder() {}
        public Builder(SyntheticsTestOptionsListMonitorOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.escalationMessage = defaults.escalationMessage;
    	      this.renotifyInterval = defaults.renotifyInterval;
    	      this.renotifyOccurrences = defaults.renotifyOccurrences;
        }

        @CustomType.Setter
        public Builder escalationMessage(@Nullable String escalationMessage) {

            this.escalationMessage = escalationMessage;
            return this;
        }
        @CustomType.Setter
        public Builder renotifyInterval(@Nullable Integer renotifyInterval) {

            this.renotifyInterval = renotifyInterval;
            return this;
        }
        @CustomType.Setter
        public Builder renotifyOccurrences(@Nullable Integer renotifyOccurrences) {

            this.renotifyOccurrences = renotifyOccurrences;
            return this;
        }
        public SyntheticsTestOptionsListMonitorOptions build() {
            final var _resultValue = new SyntheticsTestOptionsListMonitorOptions();
            _resultValue.escalationMessage = escalationMessage;
            _resultValue.renotifyInterval = renotifyInterval;
            _resultValue.renotifyOccurrences = renotifyOccurrences;
            return _resultValue;
        }
    }
}
