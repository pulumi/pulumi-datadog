// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ObservabilityPipelineConfigDestinationsMicrosoftSentinel {
    /**
     * @return Azure AD client ID used for authentication.
     * 
     */
    private String clientId;
    /**
     * @return The immutable ID of the Data Collection Rule (DCR).
     * 
     */
    private String dcrImmutableId;
    /**
     * @return The unique identifier for this component.
     * 
     */
    private String id;
    /**
     * @return A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    private List<String> inputs;
    /**
     * @return The name of the Log Analytics table where logs will be sent.
     * 
     */
    private String table;
    /**
     * @return Azure AD tenant ID.
     * 
     */
    private String tenantId;

    private ObservabilityPipelineConfigDestinationsMicrosoftSentinel() {}
    /**
     * @return Azure AD client ID used for authentication.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return The immutable ID of the Data Collection Rule (DCR).
     * 
     */
    public String dcrImmutableId() {
        return this.dcrImmutableId;
    }
    /**
     * @return The unique identifier for this component.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of component IDs whose output is used as the `input` for this component.
     * 
     */
    public List<String> inputs() {
        return this.inputs;
    }
    /**
     * @return The name of the Log Analytics table where logs will be sent.
     * 
     */
    public String table() {
        return this.table;
    }
    /**
     * @return Azure AD tenant ID.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservabilityPipelineConfigDestinationsMicrosoftSentinel defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private String dcrImmutableId;
        private String id;
        private List<String> inputs;
        private String table;
        private String tenantId;
        public Builder() {}
        public Builder(ObservabilityPipelineConfigDestinationsMicrosoftSentinel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.dcrImmutableId = defaults.dcrImmutableId;
    	      this.id = defaults.id;
    	      this.inputs = defaults.inputs;
    	      this.table = defaults.table;
    	      this.tenantId = defaults.tenantId;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsMicrosoftSentinel", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder dcrImmutableId(String dcrImmutableId) {
            if (dcrImmutableId == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsMicrosoftSentinel", "dcrImmutableId");
            }
            this.dcrImmutableId = dcrImmutableId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsMicrosoftSentinel", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inputs(List<String> inputs) {
            if (inputs == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsMicrosoftSentinel", "inputs");
            }
            this.inputs = inputs;
            return this;
        }
        public Builder inputs(String... inputs) {
            return inputs(List.of(inputs));
        }
        @CustomType.Setter
        public Builder table(String table) {
            if (table == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsMicrosoftSentinel", "table");
            }
            this.table = table;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            if (tenantId == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigDestinationsMicrosoftSentinel", "tenantId");
            }
            this.tenantId = tenantId;
            return this;
        }
        public ObservabilityPipelineConfigDestinationsMicrosoftSentinel build() {
            final var _resultValue = new ObservabilityPipelineConfigDestinationsMicrosoftSentinel();
            _resultValue.clientId = clientId;
            _resultValue.dcrImmutableId = dcrImmutableId;
            _resultValue.id = id;
            _resultValue.inputs = inputs;
            _resultValue.table = table;
            _resultValue.tenantId = tenantId;
            return _resultValue;
        }
    }
}
