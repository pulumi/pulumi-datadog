// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.MonitorSchedulingOptionCustomScheduleArgs;
import com.pulumi.datadog.inputs.MonitorSchedulingOptionEvaluationWindowArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorSchedulingOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorSchedulingOptionArgs Empty = new MonitorSchedulingOptionArgs();

    /**
     * Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
     * 
     */
    @Import(name="customSchedules")
    private @Nullable Output<List<MonitorSchedulingOptionCustomScheduleArgs>> customSchedules;

    /**
     * @return Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
     * 
     */
    public Optional<Output<List<MonitorSchedulingOptionCustomScheduleArgs>>> customSchedules() {
        return Optional.ofNullable(this.customSchedules);
    }

    /**
     * Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.
     * 
     */
    @Import(name="evaluationWindows")
    private @Nullable Output<List<MonitorSchedulingOptionEvaluationWindowArgs>> evaluationWindows;

    /**
     * @return Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.
     * 
     */
    public Optional<Output<List<MonitorSchedulingOptionEvaluationWindowArgs>>> evaluationWindows() {
        return Optional.ofNullable(this.evaluationWindows);
    }

    private MonitorSchedulingOptionArgs() {}

    private MonitorSchedulingOptionArgs(MonitorSchedulingOptionArgs $) {
        this.customSchedules = $.customSchedules;
        this.evaluationWindows = $.evaluationWindows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorSchedulingOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorSchedulingOptionArgs $;

        public Builder() {
            $ = new MonitorSchedulingOptionArgs();
        }

        public Builder(MonitorSchedulingOptionArgs defaults) {
            $ = new MonitorSchedulingOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customSchedules Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
         * 
         * @return builder
         * 
         */
        public Builder customSchedules(@Nullable Output<List<MonitorSchedulingOptionCustomScheduleArgs>> customSchedules) {
            $.customSchedules = customSchedules;
            return this;
        }

        /**
         * @param customSchedules Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
         * 
         * @return builder
         * 
         */
        public Builder customSchedules(List<MonitorSchedulingOptionCustomScheduleArgs> customSchedules) {
            return customSchedules(Output.of(customSchedules));
        }

        /**
         * @param customSchedules Configuration options for the custom schedules. If `start` is omitted, the monitor creation time will be used.
         * 
         * @return builder
         * 
         */
        public Builder customSchedules(MonitorSchedulingOptionCustomScheduleArgs... customSchedules) {
            return customSchedules(List.of(customSchedules));
        }

        /**
         * @param evaluationWindows Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.
         * 
         * @return builder
         * 
         */
        public Builder evaluationWindows(@Nullable Output<List<MonitorSchedulingOptionEvaluationWindowArgs>> evaluationWindows) {
            $.evaluationWindows = evaluationWindows;
            return this;
        }

        /**
         * @param evaluationWindows Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.
         * 
         * @return builder
         * 
         */
        public Builder evaluationWindows(List<MonitorSchedulingOptionEvaluationWindowArgs> evaluationWindows) {
            return evaluationWindows(Output.of(evaluationWindows));
        }

        /**
         * @param evaluationWindows Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.
         * 
         * @return builder
         * 
         */
        public Builder evaluationWindows(MonitorSchedulingOptionEvaluationWindowArgs... evaluationWindows) {
            return evaluationWindows(List.of(evaluationWindows));
        }

        public MonitorSchedulingOptionArgs build() {
            return $;
        }
    }

}
