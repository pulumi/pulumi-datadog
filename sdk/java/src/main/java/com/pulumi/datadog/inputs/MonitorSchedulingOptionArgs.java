// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.MonitorSchedulingOptionEvaluationWindowArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;


public final class MonitorSchedulingOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorSchedulingOptionArgs Empty = new MonitorSchedulingOptionArgs();

    /**
     * Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.
     * 
     */
    @Import(name="evaluationWindows", required=true)
    private Output<List<MonitorSchedulingOptionEvaluationWindowArgs>> evaluationWindows;

    /**
     * @return Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.
     * 
     */
    public Output<List<MonitorSchedulingOptionEvaluationWindowArgs>> evaluationWindows() {
        return this.evaluationWindows;
    }

    private MonitorSchedulingOptionArgs() {}

    private MonitorSchedulingOptionArgs(MonitorSchedulingOptionArgs $) {
        this.evaluationWindows = $.evaluationWindows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorSchedulingOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorSchedulingOptionArgs $;

        public Builder() {
            $ = new MonitorSchedulingOptionArgs();
        }

        public Builder(MonitorSchedulingOptionArgs defaults) {
            $ = new MonitorSchedulingOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param evaluationWindows Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.
         * 
         * @return builder
         * 
         */
        public Builder evaluationWindows(Output<List<MonitorSchedulingOptionEvaluationWindowArgs>> evaluationWindows) {
            $.evaluationWindows = evaluationWindows;
            return this;
        }

        /**
         * @param evaluationWindows Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.
         * 
         * @return builder
         * 
         */
        public Builder evaluationWindows(List<MonitorSchedulingOptionEvaluationWindowArgs> evaluationWindows) {
            return evaluationWindows(Output.of(evaluationWindows));
        }

        /**
         * @param evaluationWindows Configuration options for the evaluation window. If `hour_starts` is set, no other fields may be set. Otherwise, `day_starts` and `month_starts` must be set together.
         * 
         * @return builder
         * 
         */
        public Builder evaluationWindows(MonitorSchedulingOptionEvaluationWindowArgs... evaluationWindows) {
            return evaluationWindows(List.of(evaluationWindows));
        }

        public MonitorSchedulingOptionArgs build() {
            if ($.evaluationWindows == null) {
                throw new MissingRequiredPropertyException("MonitorSchedulingOptionArgs", "evaluationWindows");
            }
            return $;
        }
    }

}
