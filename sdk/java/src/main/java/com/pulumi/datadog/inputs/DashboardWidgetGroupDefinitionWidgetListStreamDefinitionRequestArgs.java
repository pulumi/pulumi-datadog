// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestColumnArgs;
import com.pulumi.datadog.inputs.DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQueryArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs Empty = new DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs();

    /**
     * Widget columns.
     * 
     */
    @Import(name="columns", required=true)
    private Output<List<DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestColumnArgs>> columns;

    /**
     * @return Widget columns.
     * 
     */
    public Output<List<DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestColumnArgs>> columns() {
        return this.columns;
    }

    /**
     * Updated list stream widget.
     * 
     */
    @Import(name="query", required=true)
    private Output<DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQueryArgs> query;

    /**
     * @return Updated list stream widget.
     * 
     */
    public Output<DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQueryArgs> query() {
        return this.query;
    }

    /**
     * Widget response format. Valid values are `event_list`.
     * 
     */
    @Import(name="responseFormat", required=true)
    private Output<String> responseFormat;

    /**
     * @return Widget response format. Valid values are `event_list`.
     * 
     */
    public Output<String> responseFormat() {
        return this.responseFormat;
    }

    private DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs() {}

    private DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs(DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs $) {
        this.columns = $.columns;
        this.query = $.query;
        this.responseFormat = $.responseFormat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs $;

        public Builder() {
            $ = new DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs();
        }

        public Builder(DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs defaults) {
            $ = new DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param columns Widget columns.
         * 
         * @return builder
         * 
         */
        public Builder columns(Output<List<DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestColumnArgs>> columns) {
            $.columns = columns;
            return this;
        }

        /**
         * @param columns Widget columns.
         * 
         * @return builder
         * 
         */
        public Builder columns(List<DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestColumnArgs> columns) {
            return columns(Output.of(columns));
        }

        /**
         * @param columns Widget columns.
         * 
         * @return builder
         * 
         */
        public Builder columns(DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestColumnArgs... columns) {
            return columns(List.of(columns));
        }

        /**
         * @param query Updated list stream widget.
         * 
         * @return builder
         * 
         */
        public Builder query(Output<DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQueryArgs> query) {
            $.query = query;
            return this;
        }

        /**
         * @param query Updated list stream widget.
         * 
         * @return builder
         * 
         */
        public Builder query(DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestQueryArgs query) {
            return query(Output.of(query));
        }

        /**
         * @param responseFormat Widget response format. Valid values are `event_list`.
         * 
         * @return builder
         * 
         */
        public Builder responseFormat(Output<String> responseFormat) {
            $.responseFormat = responseFormat;
            return this;
        }

        /**
         * @param responseFormat Widget response format. Valid values are `event_list`.
         * 
         * @return builder
         * 
         */
        public Builder responseFormat(String responseFormat) {
            return responseFormat(Output.of(responseFormat));
        }

        public DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs build() {
            if ($.columns == null) {
                throw new MissingRequiredPropertyException("DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs", "columns");
            }
            if ($.query == null) {
                throw new MissingRequiredPropertyException("DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs", "query");
            }
            if ($.responseFormat == null) {
                throw new MissingRequiredPropertyException("DashboardWidgetGroupDefinitionWidgetListStreamDefinitionRequestArgs", "responseFormat");
            }
            return $;
        }
    }

}
