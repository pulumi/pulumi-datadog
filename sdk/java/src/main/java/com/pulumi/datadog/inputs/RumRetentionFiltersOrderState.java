// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RumRetentionFiltersOrderState extends com.pulumi.resources.ResourceArgs {

    public static final RumRetentionFiltersOrderState Empty = new RumRetentionFiltersOrderState();

    /**
     * RUM application ID.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return RUM application ID.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
     * 
     */
    @Import(name="retentionFilterIds")
    private @Nullable Output<List<String>> retentionFilterIds;

    /**
     * @return RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
     * 
     */
    public Optional<Output<List<String>>> retentionFilterIds() {
        return Optional.ofNullable(this.retentionFilterIds);
    }

    private RumRetentionFiltersOrderState() {}

    private RumRetentionFiltersOrderState(RumRetentionFiltersOrderState $) {
        this.applicationId = $.applicationId;
        this.retentionFilterIds = $.retentionFilterIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RumRetentionFiltersOrderState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RumRetentionFiltersOrderState $;

        public Builder() {
            $ = new RumRetentionFiltersOrderState();
        }

        public Builder(RumRetentionFiltersOrderState defaults) {
            $ = new RumRetentionFiltersOrderState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId RUM application ID.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId RUM application ID.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param retentionFilterIds RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
         * 
         * @return builder
         * 
         */
        public Builder retentionFilterIds(@Nullable Output<List<String>> retentionFilterIds) {
            $.retentionFilterIds = retentionFilterIds;
            return this;
        }

        /**
         * @param retentionFilterIds RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
         * 
         * @return builder
         * 
         */
        public Builder retentionFilterIds(List<String> retentionFilterIds) {
            return retentionFilterIds(Output.of(retentionFilterIds));
        }

        /**
         * @param retentionFilterIds RUM retention filter ID list. The order of IDs in this attribute defines the order of RUM retention filters.
         * 
         * @return builder
         * 
         */
        public Builder retentionFilterIds(String... retentionFilterIds) {
            return retentionFilterIds(List.of(retentionFilterIds));
        }

        public RumRetentionFiltersOrderState build() {
            return $;
        }
    }

}
