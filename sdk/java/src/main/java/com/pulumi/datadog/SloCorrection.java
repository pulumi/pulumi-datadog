// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.SloCorrectionArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.SloCorrectionState;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource for interacting with the slo_correction API.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.ServiceLevelObjective;
 * import com.pulumi.datadog.ServiceLevelObjectiveArgs;
 * import com.pulumi.datadog.inputs.ServiceLevelObjectiveQueryArgs;
 * import com.pulumi.datadog.inputs.ServiceLevelObjectiveThresholdArgs;
 * import com.pulumi.datadog.SloCorrection;
 * import com.pulumi.datadog.SloCorrectionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Create a new Datadog SLO correction. slo_id can be derived from slo resource or specify an slo id of an existing SLO.
 *         var exampleSlo = new ServiceLevelObjective("exampleSlo", ServiceLevelObjectiveArgs.builder()
 *             .name("example slo")
 *             .type("metric")
 *             .description("some updated description about example_slo SLO")
 *             .query(ServiceLevelObjectiveQueryArgs.builder()
 *                 .numerator("sum:my.metric{type:good}.as_count()")
 *                 .denominator("sum:my.metric{type:good}.as_count() + sum:my.metric{type:bad}.as_count()")
 *                 .build())
 *             .thresholds(ServiceLevelObjectiveThresholdArgs.builder()
 *                 .timeframe("7d")
 *                 .target(99.5)
 *                 .warning(99.8)
 *                 .build())
 *             .tags("foo:bar")
 *             .build());
 * 
 *         var exampleSloCorrection = new SloCorrection("exampleSloCorrection", SloCorrectionArgs.builder()
 *             .category("Scheduled Maintenance")
 *             .description("correction example")
 *             .start(1735707000)
 *             .end(1735718600)
 *             .sloId(exampleSlo.id())
 *             .timezone("UTC")
 *             .build());
 * 
 *         var exampleSloCorrectionWithRecurrence = new SloCorrection("exampleSloCorrectionWithRecurrence", SloCorrectionArgs.builder()
 *             .category("Scheduled Maintenance")
 *             .description("correction example with recurrence")
 *             .start(1735707000)
 *             .rrule("FREQ=DAILY;INTERVAL=3;COUNT=3")
 *             .duration(3600)
 *             .sloId(exampleSlo.id())
 *             .timezone("UTC")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import datadog:index/sloCorrection:SloCorrection testing_slo_correction 11111111-3fee-11eb-8a13-77cd9f15119e
 * ```
 * 
 */
@ResourceType(type="datadog:index/sloCorrection:SloCorrection")
public class SloCorrection extends com.pulumi.resources.CustomResource {
    /**
     * Category the SLO correction belongs to. Valid values are `Scheduled Maintenance`, `Outside Business Hours`, `Deployment`, `Other`.
     * 
     */
    @Export(name="category", refs={String.class}, tree="[0]")
    private Output<String> category;

    /**
     * @return Category the SLO correction belongs to. Valid values are `Scheduled Maintenance`, `Outside Business Hours`, `Deployment`, `Other`.
     * 
     */
    public Output<String> category() {
        return this.category;
    }
    /**
     * Description of the correction being made.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the correction being made.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Length of time in seconds for a specified `rrule` recurring SLO correction (required if specifying `rrule`)
     * 
     */
    @Export(name="duration", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> duration;

    /**
     * @return Length of time in seconds for a specified `rrule` recurring SLO correction (required if specifying `rrule`)
     * 
     */
    public Output<Optional<Integer>> duration() {
        return Codegen.optional(this.duration);
    }
    /**
     * Ending time of the correction in epoch seconds. Required for one time corrections, but optional if `rrule` is specified
     * 
     */
    @Export(name="end", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> end;

    /**
     * @return Ending time of the correction in epoch seconds. Required for one time corrections, but optional if `rrule` is specified
     * 
     */
    public Output<Optional<Integer>> end() {
        return Codegen.optional(this.end);
    }
    /**
     * Recurrence rules as defined in the iCalendar RFC 5545. Supported rules for SLO corrections are `FREQ`, `INTERVAL`, `COUNT` and `UNTIL`.
     * 
     */
    @Export(name="rrule", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> rrule;

    /**
     * @return Recurrence rules as defined in the iCalendar RFC 5545. Supported rules for SLO corrections are `FREQ`, `INTERVAL`, `COUNT` and `UNTIL`.
     * 
     */
    public Output<Optional<String>> rrule() {
        return Codegen.optional(this.rrule);
    }
    /**
     * ID of the SLO that this correction will be applied to.
     * 
     */
    @Export(name="sloId", refs={String.class}, tree="[0]")
    private Output<String> sloId;

    /**
     * @return ID of the SLO that this correction will be applied to.
     * 
     */
    public Output<String> sloId() {
        return this.sloId;
    }
    /**
     * Starting time of the correction in epoch seconds.
     * 
     */
    @Export(name="start", refs={Integer.class}, tree="[0]")
    private Output<Integer> start;

    /**
     * @return Starting time of the correction in epoch seconds.
     * 
     */
    public Output<Integer> start() {
        return this.start;
    }
    /**
     * The timezone to display in the UI for the correction times (defaults to &#34;UTC&#34;)
     * 
     */
    @Export(name="timezone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timezone;

    /**
     * @return The timezone to display in the UI for the correction times (defaults to &#34;UTC&#34;)
     * 
     */
    public Output<Optional<String>> timezone() {
        return Codegen.optional(this.timezone);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SloCorrection(java.lang.String name) {
        this(name, SloCorrectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SloCorrection(java.lang.String name, SloCorrectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SloCorrection(java.lang.String name, SloCorrectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/sloCorrection:SloCorrection", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SloCorrection(java.lang.String name, Output<java.lang.String> id, @Nullable SloCorrectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/sloCorrection:SloCorrection", name, state, makeResourceOptions(options, id), false);
    }

    private static SloCorrectionArgs makeArgs(SloCorrectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SloCorrectionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SloCorrection get(java.lang.String name, Output<java.lang.String> id, @Nullable SloCorrectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SloCorrection(name, id, state, options);
    }
}
