// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetHostsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetHostsArgs Empty = new GetHostsArgs();

    /**
     * String to filter search results.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<String> filter;

    /**
     * @return String to filter search results.
     * 
     */
    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * Number of seconds since UNIX epoch from which you want to search your hosts.
     * 
     */
    @Import(name="from")
    private @Nullable Output<Integer> from;

    /**
     * @return Number of seconds since UNIX epoch from which you want to search your hosts.
     * 
     */
    public Optional<Output<Integer>> from() {
        return Optional.ofNullable(this.from);
    }

    /**
     * Include information on the muted status of hosts and when the mute expires.
     * 
     */
    @Import(name="includeMutedHostsData")
    private @Nullable Output<Boolean> includeMutedHostsData;

    /**
     * @return Include information on the muted status of hosts and when the mute expires.
     * 
     */
    public Optional<Output<Boolean>> includeMutedHostsData() {
        return Optional.ofNullable(this.includeMutedHostsData);
    }

    /**
     * Direction of sort.
     * 
     */
    @Import(name="sortDir")
    private @Nullable Output<String> sortDir;

    /**
     * @return Direction of sort.
     * 
     */
    public Optional<Output<String>> sortDir() {
        return Optional.ofNullable(this.sortDir);
    }

    /**
     * Sort hosts by this field.
     * 
     */
    @Import(name="sortField")
    private @Nullable Output<String> sortField;

    /**
     * @return Sort hosts by this field.
     * 
     */
    public Optional<Output<String>> sortField() {
        return Optional.ofNullable(this.sortField);
    }

    private GetHostsArgs() {}

    private GetHostsArgs(GetHostsArgs $) {
        this.filter = $.filter;
        this.from = $.from;
        this.includeMutedHostsData = $.includeMutedHostsData;
        this.sortDir = $.sortDir;
        this.sortField = $.sortField;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetHostsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetHostsArgs $;

        public Builder() {
            $ = new GetHostsArgs();
        }

        public Builder(GetHostsArgs defaults) {
            $ = new GetHostsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter String to filter search results.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter String to filter search results.
         * 
         * @return builder
         * 
         */
        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param from Number of seconds since UNIX epoch from which you want to search your hosts.
         * 
         * @return builder
         * 
         */
        public Builder from(@Nullable Output<Integer> from) {
            $.from = from;
            return this;
        }

        /**
         * @param from Number of seconds since UNIX epoch from which you want to search your hosts.
         * 
         * @return builder
         * 
         */
        public Builder from(Integer from) {
            return from(Output.of(from));
        }

        /**
         * @param includeMutedHostsData Include information on the muted status of hosts and when the mute expires.
         * 
         * @return builder
         * 
         */
        public Builder includeMutedHostsData(@Nullable Output<Boolean> includeMutedHostsData) {
            $.includeMutedHostsData = includeMutedHostsData;
            return this;
        }

        /**
         * @param includeMutedHostsData Include information on the muted status of hosts and when the mute expires.
         * 
         * @return builder
         * 
         */
        public Builder includeMutedHostsData(Boolean includeMutedHostsData) {
            return includeMutedHostsData(Output.of(includeMutedHostsData));
        }

        /**
         * @param sortDir Direction of sort.
         * 
         * @return builder
         * 
         */
        public Builder sortDir(@Nullable Output<String> sortDir) {
            $.sortDir = sortDir;
            return this;
        }

        /**
         * @param sortDir Direction of sort.
         * 
         * @return builder
         * 
         */
        public Builder sortDir(String sortDir) {
            return sortDir(Output.of(sortDir));
        }

        /**
         * @param sortField Sort hosts by this field.
         * 
         * @return builder
         * 
         */
        public Builder sortField(@Nullable Output<String> sortField) {
            $.sortField = sortField;
            return this;
        }

        /**
         * @param sortField Sort hosts by this field.
         * 
         * @return builder
         * 
         */
        public Builder sortField(String sortField) {
            return sortField(Output.of(sortField));
        }

        public GetHostsArgs build() {
            return $;
        }
    }

}
