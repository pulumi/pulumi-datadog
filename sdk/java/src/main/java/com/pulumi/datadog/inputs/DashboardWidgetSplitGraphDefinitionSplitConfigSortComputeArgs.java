// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs Empty = new DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs();

    /**
     * The aggregation method.
     * 
     */
    @Import(name="aggregation")
    private @Nullable Output<String> aggregation;

    /**
     * @return The aggregation method.
     * 
     */
    public Optional<Output<String>> aggregation() {
        return Optional.ofNullable(this.aggregation);
    }

    /**
     * The metric from the request to correlate with this conditional format.
     * 
     */
    @Import(name="metric", required=true)
    private Output<String> metric;

    /**
     * @return The metric from the request to correlate with this conditional format.
     * 
     */
    public Output<String> metric() {
        return this.metric;
    }

    private DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs() {}

    private DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs(DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs $) {
        this.aggregation = $.aggregation;
        this.metric = $.metric;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs $;

        public Builder() {
            $ = new DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs();
        }

        public Builder(DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs defaults) {
            $ = new DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggregation The aggregation method.
         * 
         * @return builder
         * 
         */
        public Builder aggregation(@Nullable Output<String> aggregation) {
            $.aggregation = aggregation;
            return this;
        }

        /**
         * @param aggregation The aggregation method.
         * 
         * @return builder
         * 
         */
        public Builder aggregation(String aggregation) {
            return aggregation(Output.of(aggregation));
        }

        /**
         * @param metric The metric from the request to correlate with this conditional format.
         * 
         * @return builder
         * 
         */
        public Builder metric(Output<String> metric) {
            $.metric = metric;
            return this;
        }

        /**
         * @param metric The metric from the request to correlate with this conditional format.
         * 
         * @return builder
         * 
         */
        public Builder metric(String metric) {
            return metric(Output.of(metric));
        }

        public DashboardWidgetSplitGraphDefinitionSplitConfigSortComputeArgs build() {
            $.metric = Objects.requireNonNull($.metric, "expected parameter 'metric' to be non-null");
            return $;
        }
    }

}
