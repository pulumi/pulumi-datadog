// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.SecurityMonitoringRuleArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.SecurityMonitoringRuleState;
import com.pulumi.datadog.outputs.SecurityMonitoringRuleCase;
import com.pulumi.datadog.outputs.SecurityMonitoringRuleFilter;
import com.pulumi.datadog.outputs.SecurityMonitoringRuleOptions;
import com.pulumi.datadog.outputs.SecurityMonitoringRuleQuery;
import com.pulumi.datadog.outputs.SecurityMonitoringRuleSignalQuery;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Datadog Security Monitoring Rule API resource. This can be used to create and manage Datadog security monitoring rules. To change settings for a default rule use `datadog_security_default_rule` instead.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.SecurityMonitoringRule;
 * import com.pulumi.datadog.SecurityMonitoringRuleArgs;
 * import com.pulumi.datadog.inputs.SecurityMonitoringRuleCaseArgs;
 * import com.pulumi.datadog.inputs.SecurityMonitoringRuleOptionsArgs;
 * import com.pulumi.datadog.inputs.SecurityMonitoringRuleQueryArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myrule = new SecurityMonitoringRule(&#34;myrule&#34;, SecurityMonitoringRuleArgs.builder()        
 *             .cases(SecurityMonitoringRuleCaseArgs.builder()
 *                 .condition(&#34;errors &gt; 3 &amp;&amp; warnings &gt; 10&#34;)
 *                 .notifications(&#34;@user&#34;)
 *                 .status(&#34;high&#34;)
 *                 .build())
 *             .enabled(true)
 *             .message(&#34;The rule has triggered.&#34;)
 *             .name(&#34;My rule&#34;)
 *             .options(SecurityMonitoringRuleOptionsArgs.builder()
 *                 .evaluationWindow(300)
 *                 .keepAlive(600)
 *                 .maxSignalDuration(900)
 *                 .build())
 *             .queries(            
 *                 SecurityMonitoringRuleQueryArgs.builder()
 *                     .aggregation(&#34;count&#34;)
 *                     .groupByFields(&#34;host&#34;)
 *                     .name(&#34;errors&#34;)
 *                     .query(&#34;status:error&#34;)
 *                     .build(),
 *                 SecurityMonitoringRuleQueryArgs.builder()
 *                     .aggregation(&#34;count&#34;)
 *                     .groupByFields(&#34;host&#34;)
 *                     .name(&#34;warnings&#34;)
 *                     .query(&#34;status:warning&#34;)
 *                     .build())
 *             .tags(&#34;type:dos&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Security monitoring rules can be imported using ID, e.g.
 * 
 * ```sh
 *  $ pulumi import datadog:index/securityMonitoringRule:SecurityMonitoringRule my_rule m0o-hto-lkb
 * ```
 * 
 */
@ResourceType(type="datadog:index/securityMonitoringRule:SecurityMonitoringRule")
public class SecurityMonitoringRule extends com.pulumi.resources.CustomResource {
    /**
     * Cases for generating signals.
     * 
     */
    @Export(name="cases", refs={List.class,SecurityMonitoringRuleCase.class}, tree="[0,1]")
    private Output<List<SecurityMonitoringRuleCase>> cases;

    /**
     * @return Cases for generating signals.
     * 
     */
    public Output<List<SecurityMonitoringRuleCase>> cases() {
        return this.cases;
    }
    /**
     * Whether the rule is enabled.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Whether the rule is enabled.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Additional queries to filter matched events before they are processed.
     * 
     */
    @Export(name="filters", refs={List.class,SecurityMonitoringRuleFilter.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SecurityMonitoringRuleFilter>> filters;

    /**
     * @return Additional queries to filter matched events before they are processed.
     * 
     */
    public Output<Optional<List<SecurityMonitoringRuleFilter>>> filters() {
        return Codegen.optional(this.filters);
    }
    /**
     * Whether the notifications include the triggering group-by values in their title.
     * 
     */
    @Export(name="hasExtendedTitle", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> hasExtendedTitle;

    /**
     * @return Whether the notifications include the triggering group-by values in their title.
     * 
     */
    public Output<Optional<Boolean>> hasExtendedTitle() {
        return Codegen.optional(this.hasExtendedTitle);
    }
    /**
     * Message for generated signals.
     * 
     */
    @Export(name="message", refs={String.class}, tree="[0]")
    private Output<String> message;

    /**
     * @return Message for generated signals.
     * 
     */
    public Output<String> message() {
        return this.message;
    }
    /**
     * Name of the case.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the case.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Options on rules.
     * 
     */
    @Export(name="options", refs={SecurityMonitoringRuleOptions.class}, tree="[0]")
    private Output</* @Nullable */ SecurityMonitoringRuleOptions> options;

    /**
     * @return Options on rules.
     * 
     */
    public Output<Optional<SecurityMonitoringRuleOptions>> options() {
        return Codegen.optional(this.options);
    }
    /**
     * Query for selecting logs to apply the filtering action.
     * 
     */
    @Export(name="queries", refs={List.class,SecurityMonitoringRuleQuery.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SecurityMonitoringRuleQuery>> queries;

    /**
     * @return Query for selecting logs to apply the filtering action.
     * 
     */
    public Output<Optional<List<SecurityMonitoringRuleQuery>>> queries() {
        return Codegen.optional(this.queries);
    }
    /**
     * Queries for selecting logs which are part of the rule.
     * 
     */
    @Export(name="signalQueries", refs={List.class,SecurityMonitoringRuleSignalQuery.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SecurityMonitoringRuleSignalQuery>> signalQueries;

    /**
     * @return Queries for selecting logs which are part of the rule.
     * 
     */
    public Output<Optional<List<SecurityMonitoringRuleSignalQuery>>> signalQueries() {
        return Codegen.optional(this.signalQueries);
    }
    /**
     * Tags for generated signals.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Tags for generated signals.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The rule type. Valid values are `log_detection`, `workload_security`, `signal_correlation`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return The rule type. Valid values are `log_detection`, `workload_security`, `signal_correlation`.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SecurityMonitoringRule(String name) {
        this(name, SecurityMonitoringRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SecurityMonitoringRule(String name, SecurityMonitoringRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SecurityMonitoringRule(String name, SecurityMonitoringRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/securityMonitoringRule:SecurityMonitoringRule", name, args == null ? SecurityMonitoringRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SecurityMonitoringRule(String name, Output<String> id, @Nullable SecurityMonitoringRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/securityMonitoringRule:SecurityMonitoringRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SecurityMonitoringRule get(String name, Output<String> id, @Nullable SecurityMonitoringRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SecurityMonitoringRule(name, id, state, options);
    }
}
