// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetAlertValueDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetChangeDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetDistributionDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetEventStreamDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetFreeTextDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetGeomapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetHeatmapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetHostmapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetIframeDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetImageDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetListStreamDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetLogStreamDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetManageStatusDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetNoteDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetQueryTableDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetQueryValueDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetScatterplotDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetServicemapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetSloListDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetSunburstDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetToplistDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTopologyMapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTreemapDefinition;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetWidgetLayout;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetGroupDefinitionWidget {
    /**
     * @return The definition for a Alert Graph widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition alertGraphDefinition;
    /**
     * @return The definition for a Alert Value widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetAlertValueDefinition alertValueDefinition;
    /**
     * @return The definition for a Change widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetChangeDefinition changeDefinition;
    /**
     * @return The definition for a Check Status widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition checkStatusDefinition;
    /**
     * @return The definition for a Distribution widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetDistributionDefinition distributionDefinition;
    /**
     * @return The definition for a Event Stream widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetEventStreamDefinition eventStreamDefinition;
    /**
     * @return The definition for a Event Timeline widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition eventTimelineDefinition;
    /**
     * @return The definition for a Free Text widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetFreeTextDefinition freeTextDefinition;
    /**
     * @return The definition for a Geomap widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetGeomapDefinition geomapDefinition;
    /**
     * @return The definition for a Heatmap widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetHeatmapDefinition heatmapDefinition;
    /**
     * @return The definition for a Hostmap widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetHostmapDefinition hostmapDefinition;
    /**
     * @return The ID of the widget.
     * 
     */
    private @Nullable Integer id;
    /**
     * @return The definition for an Iframe widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetIframeDefinition iframeDefinition;
    /**
     * @return The definition for an Image widget
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetImageDefinition imageDefinition;
    /**
     * @return The definition for a List Stream widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetListStreamDefinition listStreamDefinition;
    /**
     * @return The definition for an Log Stream widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetLogStreamDefinition logStreamDefinition;
    /**
     * @return The definition for an Manage Status widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetManageStatusDefinition manageStatusDefinition;
    /**
     * @return The definition for a Note widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetNoteDefinition noteDefinition;
    /**
     * @return The definition for a Query Table widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetQueryTableDefinition queryTableDefinition;
    /**
     * @return The definition for a Query Value widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetQueryValueDefinition queryValueDefinition;
    /**
     * @return The definition for a Run Workflow widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinition runWorkflowDefinition;
    /**
     * @return The definition for a Scatterplot widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetScatterplotDefinition scatterplotDefinition;
    /**
     * @return The definition for a Service Level Objective widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition serviceLevelObjectiveDefinition;
    /**
     * @return The definition for a Service Map widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetServicemapDefinition servicemapDefinition;
    /**
     * @return The definition for an SLO (Service Level Objective) List widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetSloListDefinition sloListDefinition;
    /**
     * @return The definition for a Sunburst widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetSunburstDefinition sunburstDefinition;
    /**
     * @return The definition for a Timeseries widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition timeseriesDefinition;
    /**
     * @return The definition for a Toplist widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetToplistDefinition toplistDefinition;
    /**
     * @return The definition for a Topology Map widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTopologyMapDefinition topologyMapDefinition;
    /**
     * @return The definition for a Trace Service widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition traceServiceDefinition;
    /**
     * @return The definition for a Treemap widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTreemapDefinition treemapDefinition;
    /**
     * @return The layout of the widget on a &#39;free&#39; dashboard.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetWidgetLayout widgetLayout;

    private DashboardWidgetGroupDefinitionWidget() {}
    /**
     * @return The definition for a Alert Graph widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition> alertGraphDefinition() {
        return Optional.ofNullable(this.alertGraphDefinition);
    }
    /**
     * @return The definition for a Alert Value widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetAlertValueDefinition> alertValueDefinition() {
        return Optional.ofNullable(this.alertValueDefinition);
    }
    /**
     * @return The definition for a Change widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetChangeDefinition> changeDefinition() {
        return Optional.ofNullable(this.changeDefinition);
    }
    /**
     * @return The definition for a Check Status widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition> checkStatusDefinition() {
        return Optional.ofNullable(this.checkStatusDefinition);
    }
    /**
     * @return The definition for a Distribution widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetDistributionDefinition> distributionDefinition() {
        return Optional.ofNullable(this.distributionDefinition);
    }
    /**
     * @return The definition for a Event Stream widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetEventStreamDefinition> eventStreamDefinition() {
        return Optional.ofNullable(this.eventStreamDefinition);
    }
    /**
     * @return The definition for a Event Timeline widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition> eventTimelineDefinition() {
        return Optional.ofNullable(this.eventTimelineDefinition);
    }
    /**
     * @return The definition for a Free Text widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetFreeTextDefinition> freeTextDefinition() {
        return Optional.ofNullable(this.freeTextDefinition);
    }
    /**
     * @return The definition for a Geomap widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetGeomapDefinition> geomapDefinition() {
        return Optional.ofNullable(this.geomapDefinition);
    }
    /**
     * @return The definition for a Heatmap widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetHeatmapDefinition> heatmapDefinition() {
        return Optional.ofNullable(this.heatmapDefinition);
    }
    /**
     * @return The definition for a Hostmap widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetHostmapDefinition> hostmapDefinition() {
        return Optional.ofNullable(this.hostmapDefinition);
    }
    /**
     * @return The ID of the widget.
     * 
     */
    public Optional<Integer> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The definition for an Iframe widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetIframeDefinition> iframeDefinition() {
        return Optional.ofNullable(this.iframeDefinition);
    }
    /**
     * @return The definition for an Image widget
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetImageDefinition> imageDefinition() {
        return Optional.ofNullable(this.imageDefinition);
    }
    /**
     * @return The definition for a List Stream widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetListStreamDefinition> listStreamDefinition() {
        return Optional.ofNullable(this.listStreamDefinition);
    }
    /**
     * @return The definition for an Log Stream widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetLogStreamDefinition> logStreamDefinition() {
        return Optional.ofNullable(this.logStreamDefinition);
    }
    /**
     * @return The definition for an Manage Status widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetManageStatusDefinition> manageStatusDefinition() {
        return Optional.ofNullable(this.manageStatusDefinition);
    }
    /**
     * @return The definition for a Note widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetNoteDefinition> noteDefinition() {
        return Optional.ofNullable(this.noteDefinition);
    }
    /**
     * @return The definition for a Query Table widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetQueryTableDefinition> queryTableDefinition() {
        return Optional.ofNullable(this.queryTableDefinition);
    }
    /**
     * @return The definition for a Query Value widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetQueryValueDefinition> queryValueDefinition() {
        return Optional.ofNullable(this.queryValueDefinition);
    }
    /**
     * @return The definition for a Run Workflow widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinition> runWorkflowDefinition() {
        return Optional.ofNullable(this.runWorkflowDefinition);
    }
    /**
     * @return The definition for a Scatterplot widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetScatterplotDefinition> scatterplotDefinition() {
        return Optional.ofNullable(this.scatterplotDefinition);
    }
    /**
     * @return The definition for a Service Level Objective widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition> serviceLevelObjectiveDefinition() {
        return Optional.ofNullable(this.serviceLevelObjectiveDefinition);
    }
    /**
     * @return The definition for a Service Map widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetServicemapDefinition> servicemapDefinition() {
        return Optional.ofNullable(this.servicemapDefinition);
    }
    /**
     * @return The definition for an SLO (Service Level Objective) List widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetSloListDefinition> sloListDefinition() {
        return Optional.ofNullable(this.sloListDefinition);
    }
    /**
     * @return The definition for a Sunburst widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetSunburstDefinition> sunburstDefinition() {
        return Optional.ofNullable(this.sunburstDefinition);
    }
    /**
     * @return The definition for a Timeseries widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition> timeseriesDefinition() {
        return Optional.ofNullable(this.timeseriesDefinition);
    }
    /**
     * @return The definition for a Toplist widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetToplistDefinition> toplistDefinition() {
        return Optional.ofNullable(this.toplistDefinition);
    }
    /**
     * @return The definition for a Topology Map widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTopologyMapDefinition> topologyMapDefinition() {
        return Optional.ofNullable(this.topologyMapDefinition);
    }
    /**
     * @return The definition for a Trace Service widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition> traceServiceDefinition() {
        return Optional.ofNullable(this.traceServiceDefinition);
    }
    /**
     * @return The definition for a Treemap widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTreemapDefinition> treemapDefinition() {
        return Optional.ofNullable(this.treemapDefinition);
    }
    /**
     * @return The layout of the widget on a &#39;free&#39; dashboard.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetWidgetLayout> widgetLayout() {
        return Optional.ofNullable(this.widgetLayout);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetGroupDefinitionWidget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition alertGraphDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetAlertValueDefinition alertValueDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetChangeDefinition changeDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition checkStatusDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetDistributionDefinition distributionDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetEventStreamDefinition eventStreamDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition eventTimelineDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetFreeTextDefinition freeTextDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetGeomapDefinition geomapDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetHeatmapDefinition heatmapDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetHostmapDefinition hostmapDefinition;
        private @Nullable Integer id;
        private @Nullable DashboardWidgetGroupDefinitionWidgetIframeDefinition iframeDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetImageDefinition imageDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetListStreamDefinition listStreamDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetLogStreamDefinition logStreamDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetManageStatusDefinition manageStatusDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetNoteDefinition noteDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetQueryTableDefinition queryTableDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetQueryValueDefinition queryValueDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinition runWorkflowDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetScatterplotDefinition scatterplotDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition serviceLevelObjectiveDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetServicemapDefinition servicemapDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetSloListDefinition sloListDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetSunburstDefinition sunburstDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition timeseriesDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetToplistDefinition toplistDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetTopologyMapDefinition topologyMapDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition traceServiceDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetTreemapDefinition treemapDefinition;
        private @Nullable DashboardWidgetGroupDefinitionWidgetWidgetLayout widgetLayout;
        public Builder() {}
        public Builder(DashboardWidgetGroupDefinitionWidget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertGraphDefinition = defaults.alertGraphDefinition;
    	      this.alertValueDefinition = defaults.alertValueDefinition;
    	      this.changeDefinition = defaults.changeDefinition;
    	      this.checkStatusDefinition = defaults.checkStatusDefinition;
    	      this.distributionDefinition = defaults.distributionDefinition;
    	      this.eventStreamDefinition = defaults.eventStreamDefinition;
    	      this.eventTimelineDefinition = defaults.eventTimelineDefinition;
    	      this.freeTextDefinition = defaults.freeTextDefinition;
    	      this.geomapDefinition = defaults.geomapDefinition;
    	      this.heatmapDefinition = defaults.heatmapDefinition;
    	      this.hostmapDefinition = defaults.hostmapDefinition;
    	      this.id = defaults.id;
    	      this.iframeDefinition = defaults.iframeDefinition;
    	      this.imageDefinition = defaults.imageDefinition;
    	      this.listStreamDefinition = defaults.listStreamDefinition;
    	      this.logStreamDefinition = defaults.logStreamDefinition;
    	      this.manageStatusDefinition = defaults.manageStatusDefinition;
    	      this.noteDefinition = defaults.noteDefinition;
    	      this.queryTableDefinition = defaults.queryTableDefinition;
    	      this.queryValueDefinition = defaults.queryValueDefinition;
    	      this.runWorkflowDefinition = defaults.runWorkflowDefinition;
    	      this.scatterplotDefinition = defaults.scatterplotDefinition;
    	      this.serviceLevelObjectiveDefinition = defaults.serviceLevelObjectiveDefinition;
    	      this.servicemapDefinition = defaults.servicemapDefinition;
    	      this.sloListDefinition = defaults.sloListDefinition;
    	      this.sunburstDefinition = defaults.sunburstDefinition;
    	      this.timeseriesDefinition = defaults.timeseriesDefinition;
    	      this.toplistDefinition = defaults.toplistDefinition;
    	      this.topologyMapDefinition = defaults.topologyMapDefinition;
    	      this.traceServiceDefinition = defaults.traceServiceDefinition;
    	      this.treemapDefinition = defaults.treemapDefinition;
    	      this.widgetLayout = defaults.widgetLayout;
        }

        @CustomType.Setter
        public Builder alertGraphDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetAlertGraphDefinition alertGraphDefinition) {
            this.alertGraphDefinition = alertGraphDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder alertValueDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetAlertValueDefinition alertValueDefinition) {
            this.alertValueDefinition = alertValueDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder changeDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetChangeDefinition changeDefinition) {
            this.changeDefinition = changeDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder checkStatusDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetCheckStatusDefinition checkStatusDefinition) {
            this.checkStatusDefinition = checkStatusDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder distributionDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetDistributionDefinition distributionDefinition) {
            this.distributionDefinition = distributionDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder eventStreamDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetEventStreamDefinition eventStreamDefinition) {
            this.eventStreamDefinition = eventStreamDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder eventTimelineDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetEventTimelineDefinition eventTimelineDefinition) {
            this.eventTimelineDefinition = eventTimelineDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder freeTextDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetFreeTextDefinition freeTextDefinition) {
            this.freeTextDefinition = freeTextDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder geomapDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetGeomapDefinition geomapDefinition) {
            this.geomapDefinition = geomapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder heatmapDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetHeatmapDefinition heatmapDefinition) {
            this.heatmapDefinition = heatmapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder hostmapDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetHostmapDefinition hostmapDefinition) {
            this.hostmapDefinition = hostmapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable Integer id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder iframeDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetIframeDefinition iframeDefinition) {
            this.iframeDefinition = iframeDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder imageDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetImageDefinition imageDefinition) {
            this.imageDefinition = imageDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder listStreamDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetListStreamDefinition listStreamDefinition) {
            this.listStreamDefinition = listStreamDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder logStreamDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetLogStreamDefinition logStreamDefinition) {
            this.logStreamDefinition = logStreamDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder manageStatusDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetManageStatusDefinition manageStatusDefinition) {
            this.manageStatusDefinition = manageStatusDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder noteDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetNoteDefinition noteDefinition) {
            this.noteDefinition = noteDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder queryTableDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetQueryTableDefinition queryTableDefinition) {
            this.queryTableDefinition = queryTableDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder queryValueDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetQueryValueDefinition queryValueDefinition) {
            this.queryValueDefinition = queryValueDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder runWorkflowDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetRunWorkflowDefinition runWorkflowDefinition) {
            this.runWorkflowDefinition = runWorkflowDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder scatterplotDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetScatterplotDefinition scatterplotDefinition) {
            this.scatterplotDefinition = scatterplotDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder serviceLevelObjectiveDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetServiceLevelObjectiveDefinition serviceLevelObjectiveDefinition) {
            this.serviceLevelObjectiveDefinition = serviceLevelObjectiveDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder servicemapDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetServicemapDefinition servicemapDefinition) {
            this.servicemapDefinition = servicemapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder sloListDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetSloListDefinition sloListDefinition) {
            this.sloListDefinition = sloListDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder sunburstDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetSunburstDefinition sunburstDefinition) {
            this.sunburstDefinition = sunburstDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder timeseriesDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinition timeseriesDefinition) {
            this.timeseriesDefinition = timeseriesDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder toplistDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetToplistDefinition toplistDefinition) {
            this.toplistDefinition = toplistDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder topologyMapDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetTopologyMapDefinition topologyMapDefinition) {
            this.topologyMapDefinition = topologyMapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder traceServiceDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetTraceServiceDefinition traceServiceDefinition) {
            this.traceServiceDefinition = traceServiceDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder treemapDefinition(@Nullable DashboardWidgetGroupDefinitionWidgetTreemapDefinition treemapDefinition) {
            this.treemapDefinition = treemapDefinition;
            return this;
        }
        @CustomType.Setter
        public Builder widgetLayout(@Nullable DashboardWidgetGroupDefinitionWidgetWidgetLayout widgetLayout) {
            this.widgetLayout = widgetLayout;
            return this;
        }
        public DashboardWidgetGroupDefinitionWidget build() {
            final var o = new DashboardWidgetGroupDefinitionWidget();
            o.alertGraphDefinition = alertGraphDefinition;
            o.alertValueDefinition = alertValueDefinition;
            o.changeDefinition = changeDefinition;
            o.checkStatusDefinition = checkStatusDefinition;
            o.distributionDefinition = distributionDefinition;
            o.eventStreamDefinition = eventStreamDefinition;
            o.eventTimelineDefinition = eventTimelineDefinition;
            o.freeTextDefinition = freeTextDefinition;
            o.geomapDefinition = geomapDefinition;
            o.heatmapDefinition = heatmapDefinition;
            o.hostmapDefinition = hostmapDefinition;
            o.id = id;
            o.iframeDefinition = iframeDefinition;
            o.imageDefinition = imageDefinition;
            o.listStreamDefinition = listStreamDefinition;
            o.logStreamDefinition = logStreamDefinition;
            o.manageStatusDefinition = manageStatusDefinition;
            o.noteDefinition = noteDefinition;
            o.queryTableDefinition = queryTableDefinition;
            o.queryValueDefinition = queryValueDefinition;
            o.runWorkflowDefinition = runWorkflowDefinition;
            o.scatterplotDefinition = scatterplotDefinition;
            o.serviceLevelObjectiveDefinition = serviceLevelObjectiveDefinition;
            o.servicemapDefinition = servicemapDefinition;
            o.sloListDefinition = sloListDefinition;
            o.sunburstDefinition = sunburstDefinition;
            o.timeseriesDefinition = timeseriesDefinition;
            o.toplistDefinition = toplistDefinition;
            o.topologyMapDefinition = topologyMapDefinition;
            o.traceServiceDefinition = traceServiceDefinition;
            o.treemapDefinition = treemapDefinition;
            o.widgetLayout = widgetLayout;
            return o;
        }
    }
}
