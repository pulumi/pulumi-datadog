// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.GetLogsPipelinesLogsPipelineFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLogsPipelinesLogsPipeline {
    private List<GetLogsPipelinesLogsPipelineFilter> filters;
    private String id;
    private Boolean isEnabled;
    private Boolean isReadOnly;
    private String name;
    private String type;

    private GetLogsPipelinesLogsPipeline() {}
    public List<GetLogsPipelinesLogsPipelineFilter> filters() {
        return this.filters;
    }
    public String id() {
        return this.id;
    }
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    public Boolean isReadOnly() {
        return this.isReadOnly;
    }
    public String name() {
        return this.name;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogsPipelinesLogsPipeline defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetLogsPipelinesLogsPipelineFilter> filters;
        private String id;
        private Boolean isEnabled;
        private Boolean isReadOnly;
        private String name;
        private String type;
        public Builder() {}
        public Builder(GetLogsPipelinesLogsPipeline defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.isReadOnly = defaults.isReadOnly;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder filters(List<GetLogsPipelinesLogsPipelineFilter> filters) {
            this.filters = Objects.requireNonNull(filters);
            return this;
        }
        public Builder filters(GetLogsPipelinesLogsPipelineFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder isReadOnly(Boolean isReadOnly) {
            this.isReadOnly = Objects.requireNonNull(isReadOnly);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetLogsPipelinesLogsPipeline build() {
            final var o = new GetLogsPipelinesLogsPipeline();
            o.filters = filters;
            o.id = id;
            o.isEnabled = isEnabled;
            o.isReadOnly = isReadOnly;
            o.name = name;
            o.type = type;
            return o;
        }
    }
}
