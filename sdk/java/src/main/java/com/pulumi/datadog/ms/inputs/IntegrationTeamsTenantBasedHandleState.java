// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.ms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationTeamsTenantBasedHandleState extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationTeamsTenantBasedHandleState Empty = new IntegrationTeamsTenantBasedHandleState();

    /**
     * Your channel name.
     * 
     */
    @Import(name="channelName")
    private @Nullable Output<String> channelName;

    /**
     * @return Your channel name.
     * 
     */
    public Optional<Output<String>> channelName() {
        return Optional.ofNullable(this.channelName);
    }

    /**
     * Your tenant-based handle name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Your tenant-based handle name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Your team name.
     * 
     */
    @Import(name="teamName")
    private @Nullable Output<String> teamName;

    /**
     * @return Your team name.
     * 
     */
    public Optional<Output<String>> teamName() {
        return Optional.ofNullable(this.teamName);
    }

    /**
     * Your tenant name.
     * 
     */
    @Import(name="tenantName")
    private @Nullable Output<String> tenantName;

    /**
     * @return Your tenant name.
     * 
     */
    public Optional<Output<String>> tenantName() {
        return Optional.ofNullable(this.tenantName);
    }

    private IntegrationTeamsTenantBasedHandleState() {}

    private IntegrationTeamsTenantBasedHandleState(IntegrationTeamsTenantBasedHandleState $) {
        this.channelName = $.channelName;
        this.name = $.name;
        this.teamName = $.teamName;
        this.tenantName = $.tenantName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationTeamsTenantBasedHandleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationTeamsTenantBasedHandleState $;

        public Builder() {
            $ = new IntegrationTeamsTenantBasedHandleState();
        }

        public Builder(IntegrationTeamsTenantBasedHandleState defaults) {
            $ = new IntegrationTeamsTenantBasedHandleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param channelName Your channel name.
         * 
         * @return builder
         * 
         */
        public Builder channelName(@Nullable Output<String> channelName) {
            $.channelName = channelName;
            return this;
        }

        /**
         * @param channelName Your channel name.
         * 
         * @return builder
         * 
         */
        public Builder channelName(String channelName) {
            return channelName(Output.of(channelName));
        }

        /**
         * @param name Your tenant-based handle name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Your tenant-based handle name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param teamName Your team name.
         * 
         * @return builder
         * 
         */
        public Builder teamName(@Nullable Output<String> teamName) {
            $.teamName = teamName;
            return this;
        }

        /**
         * @param teamName Your team name.
         * 
         * @return builder
         * 
         */
        public Builder teamName(String teamName) {
            return teamName(Output.of(teamName));
        }

        /**
         * @param tenantName Your tenant name.
         * 
         * @return builder
         * 
         */
        public Builder tenantName(@Nullable Output<String> tenantName) {
            $.tenantName = tenantName;
            return this;
        }

        /**
         * @param tenantName Your tenant name.
         * 
         * @return builder
         * 
         */
        public Builder tenantName(String tenantName) {
            return tenantName(Output.of(tenantName));
        }

        public IntegrationTeamsTenantBasedHandleState build() {
            return $;
        }
    }

}
