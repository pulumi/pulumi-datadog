// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQuery;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery;
import com.pulumi.datadog.outputs.DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest {
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery apmQuery;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQuery auditQuery;
    /**
     * @return How the marker lines are displayed, options are one of {`error`, `warning`, `info`, `ok`} combined with one of {`dashed`, `solid`, `bold`}. Example: `error dashed`.
     * 
     */
    private @Nullable String displayType;
    private @Nullable List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula> formulas;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery logQuery;
    /**
     * @return Used to define expression aliases. Multiple `metadata` blocks are allowed using the structure below.
     * 
     */
    private @Nullable List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata> metadatas;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery networkQuery;
    /**
     * @return A Boolean indicating whether the request uses the right or left Y-Axis.
     * 
     */
    private @Nullable Boolean onRightYaxis;
    /**
     * @return The process query to use in the widget. The structure of this block is described below.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery processQuery;
    /**
     * @return The metric query to use for this widget.
     * 
     */
    private @Nullable String q;
    private @Nullable List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery> queries;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery rumQuery;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery securityQuery;
    /**
     * @return Styling options for widget formulas.
     * 
     */
    private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle style;

    private DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest() {}
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery> apmQuery() {
        return Optional.ofNullable(this.apmQuery);
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQuery> auditQuery() {
        return Optional.ofNullable(this.auditQuery);
    }
    /**
     * @return How the marker lines are displayed, options are one of {`error`, `warning`, `info`, `ok`} combined with one of {`dashed`, `solid`, `bold`}. Example: `error dashed`.
     * 
     */
    public Optional<String> displayType() {
        return Optional.ofNullable(this.displayType);
    }
    public List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula> formulas() {
        return this.formulas == null ? List.of() : this.formulas;
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery> logQuery() {
        return Optional.ofNullable(this.logQuery);
    }
    /**
     * @return Used to define expression aliases. Multiple `metadata` blocks are allowed using the structure below.
     * 
     */
    public List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata> metadatas() {
        return this.metadatas == null ? List.of() : this.metadatas;
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery> networkQuery() {
        return Optional.ofNullable(this.networkQuery);
    }
    /**
     * @return A Boolean indicating whether the request uses the right or left Y-Axis.
     * 
     */
    public Optional<Boolean> onRightYaxis() {
        return Optional.ofNullable(this.onRightYaxis);
    }
    /**
     * @return The process query to use in the widget. The structure of this block is described below.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery> processQuery() {
        return Optional.ofNullable(this.processQuery);
    }
    /**
     * @return The metric query to use for this widget.
     * 
     */
    public Optional<String> q() {
        return Optional.ofNullable(this.q);
    }
    public List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery> queries() {
        return this.queries == null ? List.of() : this.queries;
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery> rumQuery() {
        return Optional.ofNullable(this.rumQuery);
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery> securityQuery() {
        return Optional.ofNullable(this.securityQuery);
    }
    /**
     * @return Styling options for widget formulas.
     * 
     */
    public Optional<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle> style() {
        return Optional.ofNullable(this.style);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery apmQuery;
        private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQuery auditQuery;
        private @Nullable String displayType;
        private @Nullable List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula> formulas;
        private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery logQuery;
        private @Nullable List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata> metadatas;
        private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery networkQuery;
        private @Nullable Boolean onRightYaxis;
        private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery processQuery;
        private @Nullable String q;
        private @Nullable List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery> queries;
        private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery rumQuery;
        private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery securityQuery;
        private @Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle style;
        public Builder() {}
        public Builder(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apmQuery = defaults.apmQuery;
    	      this.auditQuery = defaults.auditQuery;
    	      this.displayType = defaults.displayType;
    	      this.formulas = defaults.formulas;
    	      this.logQuery = defaults.logQuery;
    	      this.metadatas = defaults.metadatas;
    	      this.networkQuery = defaults.networkQuery;
    	      this.onRightYaxis = defaults.onRightYaxis;
    	      this.processQuery = defaults.processQuery;
    	      this.q = defaults.q;
    	      this.queries = defaults.queries;
    	      this.rumQuery = defaults.rumQuery;
    	      this.securityQuery = defaults.securityQuery;
    	      this.style = defaults.style;
        }

        @CustomType.Setter
        public Builder apmQuery(@Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestApmQuery apmQuery) {

            this.apmQuery = apmQuery;
            return this;
        }
        @CustomType.Setter
        public Builder auditQuery(@Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestAuditQuery auditQuery) {

            this.auditQuery = auditQuery;
            return this;
        }
        @CustomType.Setter
        public Builder displayType(@Nullable String displayType) {

            this.displayType = displayType;
            return this;
        }
        @CustomType.Setter
        public Builder formulas(@Nullable List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula> formulas) {

            this.formulas = formulas;
            return this;
        }
        public Builder formulas(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestFormula... formulas) {
            return formulas(List.of(formulas));
        }
        @CustomType.Setter
        public Builder logQuery(@Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestLogQuery logQuery) {

            this.logQuery = logQuery;
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(@Nullable List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata> metadatas) {

            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder networkQuery(@Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestNetworkQuery networkQuery) {

            this.networkQuery = networkQuery;
            return this;
        }
        @CustomType.Setter
        public Builder onRightYaxis(@Nullable Boolean onRightYaxis) {

            this.onRightYaxis = onRightYaxis;
            return this;
        }
        @CustomType.Setter
        public Builder processQuery(@Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestProcessQuery processQuery) {

            this.processQuery = processQuery;
            return this;
        }
        @CustomType.Setter
        public Builder q(@Nullable String q) {

            this.q = q;
            return this;
        }
        @CustomType.Setter
        public Builder queries(@Nullable List<DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery> queries) {

            this.queries = queries;
            return this;
        }
        public Builder queries(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestQuery... queries) {
            return queries(List.of(queries));
        }
        @CustomType.Setter
        public Builder rumQuery(@Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestRumQuery rumQuery) {

            this.rumQuery = rumQuery;
            return this;
        }
        @CustomType.Setter
        public Builder securityQuery(@Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestSecurityQuery securityQuery) {

            this.securityQuery = securityQuery;
            return this;
        }
        @CustomType.Setter
        public Builder style(@Nullable DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle style) {

            this.style = style;
            return this;
        }
        public DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest build() {
            final var _resultValue = new DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequest();
            _resultValue.apmQuery = apmQuery;
            _resultValue.auditQuery = auditQuery;
            _resultValue.displayType = displayType;
            _resultValue.formulas = formulas;
            _resultValue.logQuery = logQuery;
            _resultValue.metadatas = metadatas;
            _resultValue.networkQuery = networkQuery;
            _resultValue.onRightYaxis = onRightYaxis;
            _resultValue.processQuery = processQuery;
            _resultValue.q = q;
            _resultValue.queries = queries;
            _resultValue.rumQuery = rumQuery;
            _resultValue.securityQuery = securityQuery;
            _resultValue.style = style;
            return _resultValue;
        }
    }
}
