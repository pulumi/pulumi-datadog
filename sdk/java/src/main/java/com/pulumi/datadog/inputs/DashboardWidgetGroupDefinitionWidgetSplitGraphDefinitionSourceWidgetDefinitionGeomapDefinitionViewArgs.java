// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs Empty = new DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs();

    /**
     * The two-letter ISO code of a country to focus the map on (or `WORLD`).
     * 
     */
    @Import(name="focus", required=true)
    private Output<String> focus;

    /**
     * @return The two-letter ISO code of a country to focus the map on (or `WORLD`).
     * 
     */
    public Output<String> focus() {
        return this.focus;
    }

    private DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs() {}

    private DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs(DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs $) {
        this.focus = $.focus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs $;

        public Builder() {
            $ = new DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs();
        }

        public Builder(DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs defaults) {
            $ = new DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param focus The two-letter ISO code of a country to focus the map on (or `WORLD`).
         * 
         * @return builder
         * 
         */
        public Builder focus(Output<String> focus) {
            $.focus = focus;
            return this;
        }

        /**
         * @param focus The two-letter ISO code of a country to focus the map on (or `WORLD`).
         * 
         * @return builder
         * 
         */
        public Builder focus(String focus) {
            return focus(Output.of(focus));
        }

        public DashboardWidgetGroupDefinitionWidgetSplitGraphDefinitionSourceWidgetDefinitionGeomapDefinitionViewArgs build() {
            $.focus = Objects.requireNonNull($.focus, "expected parameter 'focus' to be non-null");
            return $;
        }
    }

}
