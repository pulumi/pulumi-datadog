// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTeamResult {
    /**
     * @return Free-form markdown description/content for the team&#39;s homepage.
     * 
     */
    private String description;
    /**
     * @return Search query. Can be team name, team handle, or email of team member.
     * 
     */
    private @Nullable String filterKeyword;
    /**
     * @return The team&#39;s handle.
     * 
     */
    private String handle;
    /**
     * @return The ID of this resource.
     * 
     */
    private String id;
    /**
     * @return The number of links belonging to the team.
     * 
     */
    private Integer linkCount;
    /**
     * @return The name of the team.
     * 
     */
    private String name;
    /**
     * @return A brief summary of the team, derived from the `description`.
     * 
     */
    private String summary;
    /**
     * @return The team&#39;s identifier.
     * 
     */
    private String teamId;
    /**
     * @return The number of users belonging to the team.
     * 
     */
    private Integer userCount;

    private GetTeamResult() {}
    /**
     * @return Free-form markdown description/content for the team&#39;s homepage.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Search query. Can be team name, team handle, or email of team member.
     * 
     */
    public Optional<String> filterKeyword() {
        return Optional.ofNullable(this.filterKeyword);
    }
    /**
     * @return The team&#39;s handle.
     * 
     */
    public String handle() {
        return this.handle;
    }
    /**
     * @return The ID of this resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The number of links belonging to the team.
     * 
     */
    public Integer linkCount() {
        return this.linkCount;
    }
    /**
     * @return The name of the team.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A brief summary of the team, derived from the `description`.
     * 
     */
    public String summary() {
        return this.summary;
    }
    /**
     * @return The team&#39;s identifier.
     * 
     */
    public String teamId() {
        return this.teamId;
    }
    /**
     * @return The number of users belonging to the team.
     * 
     */
    public Integer userCount() {
        return this.userCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTeamResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private @Nullable String filterKeyword;
        private String handle;
        private String id;
        private Integer linkCount;
        private String name;
        private String summary;
        private String teamId;
        private Integer userCount;
        public Builder() {}
        public Builder(GetTeamResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.filterKeyword = defaults.filterKeyword;
    	      this.handle = defaults.handle;
    	      this.id = defaults.id;
    	      this.linkCount = defaults.linkCount;
    	      this.name = defaults.name;
    	      this.summary = defaults.summary;
    	      this.teamId = defaults.teamId;
    	      this.userCount = defaults.userCount;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder filterKeyword(@Nullable String filterKeyword) {
            this.filterKeyword = filterKeyword;
            return this;
        }
        @CustomType.Setter
        public Builder handle(String handle) {
            this.handle = Objects.requireNonNull(handle);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder linkCount(Integer linkCount) {
            this.linkCount = Objects.requireNonNull(linkCount);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder summary(String summary) {
            this.summary = Objects.requireNonNull(summary);
            return this;
        }
        @CustomType.Setter
        public Builder teamId(String teamId) {
            this.teamId = Objects.requireNonNull(teamId);
            return this;
        }
        @CustomType.Setter
        public Builder userCount(Integer userCount) {
            this.userCount = Objects.requireNonNull(userCount);
            return this;
        }
        public GetTeamResult build() {
            final var o = new GetTeamResult();
            o.description = description;
            o.filterKeyword = filterKeyword;
            o.handle = handle;
            o.id = id;
            o.linkCount = linkCount;
            o.name = name;
            o.summary = summary;
            o.teamId = teamId;
            o.userCount = userCount;
            return o;
        }
    }
}
