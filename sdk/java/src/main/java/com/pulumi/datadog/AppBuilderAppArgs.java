// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppBuilderAppArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppBuilderAppArgs Empty = new AppBuilderAppArgs();

    /**
     * If specified, this will override the Action Connection IDs for the specified Action Query Names in the App JSON. Otherwise, a map of the App&#39;s Action Query Names to Action Connection IDs will be returned in output.
     * 
     */
    @Import(name="actionQueryNamesToConnectionIds")
    private @Nullable Output<Map<String,String>> actionQueryNamesToConnectionIds;

    /**
     * @return If specified, this will override the Action Connection IDs for the specified Action Query Names in the App JSON. Otherwise, a map of the App&#39;s Action Query Names to Action Connection IDs will be returned in output.
     * 
     */
    public Optional<Output<Map<String,String>>> actionQueryNamesToConnectionIds() {
        return Optional.ofNullable(this.actionQueryNamesToConnectionIds);
    }

    /**
     * The JSON representation of the App. String length must be at least 1.
     * 
     */
    @Import(name="appJson", required=true)
    private Output<String> appJson;

    /**
     * @return The JSON representation of the App. String length must be at least 1.
     * 
     */
    public Output<String> appJson() {
        return this.appJson;
    }

    /**
     * If specified, this will override the human-readable description of the App in the App JSON. String length must be at least 1.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return If specified, this will override the human-readable description of the App in the App JSON. String length must be at least 1.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * If specified, this will override the name of the App in the App JSON. String length must be at least 1.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return If specified, this will override the name of the App in the App JSON. String length must be at least 1.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Set the app to published or unpublished. Published apps are available to other users. To ensure the app is accessible to the correct users, you also need to set a [Restriction Policy](https://docs.datadoghq.com/api/latest/restriction-policies/) on the app if a policy does not yet exist. Defaults to `false`.
     * 
     */
    @Import(name="published")
    private @Nullable Output<Boolean> published;

    /**
     * @return Set the app to published or unpublished. Published apps are available to other users. To ensure the app is accessible to the correct users, you also need to set a [Restriction Policy](https://docs.datadoghq.com/api/latest/restriction-policies/) on the app if a policy does not yet exist. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> published() {
        return Optional.ofNullable(this.published);
    }

    /**
     * The name of the root component of the app. This must be a grid component that contains all other components. If specified, this will override the root instance name of the App in the App JSON. String length must be at least 1.
     * 
     */
    @Import(name="rootInstanceName")
    private @Nullable Output<String> rootInstanceName;

    /**
     * @return The name of the root component of the app. This must be a grid component that contains all other components. If specified, this will override the root instance name of the App in the App JSON. String length must be at least 1.
     * 
     */
    public Optional<Output<String>> rootInstanceName() {
        return Optional.ofNullable(this.rootInstanceName);
    }

    private AppBuilderAppArgs() {}

    private AppBuilderAppArgs(AppBuilderAppArgs $) {
        this.actionQueryNamesToConnectionIds = $.actionQueryNamesToConnectionIds;
        this.appJson = $.appJson;
        this.description = $.description;
        this.name = $.name;
        this.published = $.published;
        this.rootInstanceName = $.rootInstanceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppBuilderAppArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppBuilderAppArgs $;

        public Builder() {
            $ = new AppBuilderAppArgs();
        }

        public Builder(AppBuilderAppArgs defaults) {
            $ = new AppBuilderAppArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionQueryNamesToConnectionIds If specified, this will override the Action Connection IDs for the specified Action Query Names in the App JSON. Otherwise, a map of the App&#39;s Action Query Names to Action Connection IDs will be returned in output.
         * 
         * @return builder
         * 
         */
        public Builder actionQueryNamesToConnectionIds(@Nullable Output<Map<String,String>> actionQueryNamesToConnectionIds) {
            $.actionQueryNamesToConnectionIds = actionQueryNamesToConnectionIds;
            return this;
        }

        /**
         * @param actionQueryNamesToConnectionIds If specified, this will override the Action Connection IDs for the specified Action Query Names in the App JSON. Otherwise, a map of the App&#39;s Action Query Names to Action Connection IDs will be returned in output.
         * 
         * @return builder
         * 
         */
        public Builder actionQueryNamesToConnectionIds(Map<String,String> actionQueryNamesToConnectionIds) {
            return actionQueryNamesToConnectionIds(Output.of(actionQueryNamesToConnectionIds));
        }

        /**
         * @param appJson The JSON representation of the App. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder appJson(Output<String> appJson) {
            $.appJson = appJson;
            return this;
        }

        /**
         * @param appJson The JSON representation of the App. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder appJson(String appJson) {
            return appJson(Output.of(appJson));
        }

        /**
         * @param description If specified, this will override the human-readable description of the App in the App JSON. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description If specified, this will override the human-readable description of the App in the App JSON. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name If specified, this will override the name of the App in the App JSON. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name If specified, this will override the name of the App in the App JSON. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param published Set the app to published or unpublished. Published apps are available to other users. To ensure the app is accessible to the correct users, you also need to set a [Restriction Policy](https://docs.datadoghq.com/api/latest/restriction-policies/) on the app if a policy does not yet exist. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder published(@Nullable Output<Boolean> published) {
            $.published = published;
            return this;
        }

        /**
         * @param published Set the app to published or unpublished. Published apps are available to other users. To ensure the app is accessible to the correct users, you also need to set a [Restriction Policy](https://docs.datadoghq.com/api/latest/restriction-policies/) on the app if a policy does not yet exist. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder published(Boolean published) {
            return published(Output.of(published));
        }

        /**
         * @param rootInstanceName The name of the root component of the app. This must be a grid component that contains all other components. If specified, this will override the root instance name of the App in the App JSON. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder rootInstanceName(@Nullable Output<String> rootInstanceName) {
            $.rootInstanceName = rootInstanceName;
            return this;
        }

        /**
         * @param rootInstanceName The name of the root component of the app. This must be a grid component that contains all other components. If specified, this will override the root instance name of the App in the App JSON. String length must be at least 1.
         * 
         * @return builder
         * 
         */
        public Builder rootInstanceName(String rootInstanceName) {
            return rootInstanceName(Output.of(rootInstanceName));
        }

        public AppBuilderAppArgs build() {
            if ($.appJson == null) {
                throw new MissingRequiredPropertyException("AppBuilderAppArgs", "appJson");
            }
            return $;
        }
    }

}
