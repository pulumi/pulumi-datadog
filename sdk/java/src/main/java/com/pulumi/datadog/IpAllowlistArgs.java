// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.IpAllowlistEntryArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpAllowlistArgs extends com.pulumi.resources.ResourceArgs {

    public static final IpAllowlistArgs Empty = new IpAllowlistArgs();

    /**
     * Whether the IP Allowlist is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether the IP Allowlist is enabled.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.
     * 
     */
    @Import(name="entries")
    private @Nullable Output<List<IpAllowlistEntryArgs>> entries;

    /**
     * @return Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.
     * 
     */
    public Optional<Output<List<IpAllowlistEntryArgs>>> entries() {
        return Optional.ofNullable(this.entries);
    }

    private IpAllowlistArgs() {}

    private IpAllowlistArgs(IpAllowlistArgs $) {
        this.enabled = $.enabled;
        this.entries = $.entries;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpAllowlistArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpAllowlistArgs $;

        public Builder() {
            $ = new IpAllowlistArgs();
        }

        public Builder(IpAllowlistArgs defaults) {
            $ = new IpAllowlistArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether the IP Allowlist is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the IP Allowlist is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param entries Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.
         * 
         * @return builder
         * 
         */
        public Builder entries(@Nullable Output<List<IpAllowlistEntryArgs>> entries) {
            $.entries = entries;
            return this;
        }

        /**
         * @param entries Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.
         * 
         * @return builder
         * 
         */
        public Builder entries(List<IpAllowlistEntryArgs> entries) {
            return entries(Output.of(entries));
        }

        /**
         * @param entries Set of objects containing an IP address or range of IP addresses in the allowlist and an accompanying note.
         * 
         * @return builder
         * 
         */
        public Builder entries(IpAllowlistEntryArgs... entries) {
            return entries(List.of(entries));
        }

        public IpAllowlistArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("IpAllowlistArgs", "enabled");
            }
            return $;
        }
    }

}
