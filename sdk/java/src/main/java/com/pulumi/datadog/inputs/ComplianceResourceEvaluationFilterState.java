// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ComplianceResourceEvaluationFilterState extends com.pulumi.resources.ResourceArgs {

    public static final ComplianceResourceEvaluationFilterState Empty = new ComplianceResourceEvaluationFilterState();

    /**
     * The cloud provider of the filter&#39;s targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud
     * providers.
     * 
     */
    @Import(name="cloudProvider")
    private @Nullable Output<String> cloudProvider;

    /**
     * @return The cloud provider of the filter&#39;s targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud
     * providers.
     * 
     */
    public Optional<Output<String>> cloudProvider() {
        return Optional.ofNullable(this.cloudProvider);
    }

    /**
     * The ID of the of the filter&#39;s targeted resource. Different cloud providers target different resource IDs: - `aws`:
     * account ID - `gcp`: project ID - `azure`: subscription ID
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return The ID of the of the filter&#39;s targeted resource. Different cloud providers target different resource IDs: - `aws`:
     * account ID - `gcp`: project ID - `azure`: subscription ID
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * List of tags to filter misconfiguration detections. Each entry should follow the format: &#34;key&#34;:&#34;value&#34;.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return List of tags to filter misconfiguration detections. Each entry should follow the format: &#34;key&#34;:&#34;value&#34;.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ComplianceResourceEvaluationFilterState() {}

    private ComplianceResourceEvaluationFilterState(ComplianceResourceEvaluationFilterState $) {
        this.cloudProvider = $.cloudProvider;
        this.resourceId = $.resourceId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComplianceResourceEvaluationFilterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComplianceResourceEvaluationFilterState $;

        public Builder() {
            $ = new ComplianceResourceEvaluationFilterState();
        }

        public Builder(ComplianceResourceEvaluationFilterState defaults) {
            $ = new ComplianceResourceEvaluationFilterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudProvider The cloud provider of the filter&#39;s targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud
         * providers.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(@Nullable Output<String> cloudProvider) {
            $.cloudProvider = cloudProvider;
            return this;
        }

        /**
         * @param cloudProvider The cloud provider of the filter&#39;s targeted resource. Only `aws`, `gcp`, or `azure` are considered valid cloud
         * providers.
         * 
         * @return builder
         * 
         */
        public Builder cloudProvider(String cloudProvider) {
            return cloudProvider(Output.of(cloudProvider));
        }

        /**
         * @param resourceId The ID of the of the filter&#39;s targeted resource. Different cloud providers target different resource IDs: - `aws`:
         * account ID - `gcp`: project ID - `azure`: subscription ID
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The ID of the of the filter&#39;s targeted resource. Different cloud providers target different resource IDs: - `aws`:
         * account ID - `gcp`: project ID - `azure`: subscription ID
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param tags List of tags to filter misconfiguration detections. Each entry should follow the format: &#34;key&#34;:&#34;value&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags List of tags to filter misconfiguration detections. Each entry should follow the format: &#34;key&#34;:&#34;value&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags List of tags to filter misconfiguration detections. Each entry should follow the format: &#34;key&#34;:&#34;value&#34;.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public ComplianceResourceEvaluationFilterState build() {
            return $;
        }
    }

}
