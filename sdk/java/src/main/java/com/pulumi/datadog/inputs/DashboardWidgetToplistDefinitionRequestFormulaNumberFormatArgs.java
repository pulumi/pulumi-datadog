// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs;
import com.pulumi.datadog.inputs.DashboardWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs Empty = new DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs();

    /**
     * Unit of the number format.
     * 
     */
    @Import(name="unit", required=true)
    private Output<DashboardWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs> unit;

    /**
     * @return Unit of the number format.
     * 
     */
    public Output<DashboardWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs> unit() {
        return this.unit;
    }

    @Import(name="unitScale")
    private @Nullable Output<DashboardWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs> unitScale;

    public Optional<Output<DashboardWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs>> unitScale() {
        return Optional.ofNullable(this.unitScale);
    }

    private DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs() {}

    private DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs(DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs $) {
        this.unit = $.unit;
        this.unitScale = $.unitScale;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs $;

        public Builder() {
            $ = new DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs();
        }

        public Builder(DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs defaults) {
            $ = new DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param unit Unit of the number format.
         * 
         * @return builder
         * 
         */
        public Builder unit(Output<DashboardWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs> unit) {
            $.unit = unit;
            return this;
        }

        /**
         * @param unit Unit of the number format.
         * 
         * @return builder
         * 
         */
        public Builder unit(DashboardWidgetToplistDefinitionRequestFormulaNumberFormatUnitArgs unit) {
            return unit(Output.of(unit));
        }

        public Builder unitScale(@Nullable Output<DashboardWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs> unitScale) {
            $.unitScale = unitScale;
            return this;
        }

        public Builder unitScale(DashboardWidgetToplistDefinitionRequestFormulaNumberFormatUnitScaleArgs unitScale) {
            return unitScale(Output.of(unitScale));
        }

        public DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs build() {
            if ($.unit == null) {
                throw new MissingRequiredPropertyException("DashboardWidgetToplistDefinitionRequestFormulaNumberFormatArgs", "unit");
            }
            return $;
        }
    }

}
