// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSoftwareCatalogPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSoftwareCatalogPlainArgs Empty = new GetSoftwareCatalogPlainArgs();

    /**
     * Filter entities by excluding snapshotted entities.
     * 
     */
    @Import(name="filterExcludeSnapshot")
    private @Nullable String filterExcludeSnapshot;

    /**
     * @return Filter entities by excluding snapshotted entities.
     * 
     */
    public Optional<String> filterExcludeSnapshot() {
        return Optional.ofNullable(this.filterExcludeSnapshot);
    }

    /**
     * Filter entities by UUID.
     * 
     */
    @Import(name="filterId")
    private @Nullable String filterId;

    /**
     * @return Filter entities by UUID.
     * 
     */
    public Optional<String> filterId() {
        return Optional.ofNullable(this.filterId);
    }

    /**
     * Filter entities by kind.
     * 
     */
    @Import(name="filterKind")
    private @Nullable String filterKind;

    /**
     * @return Filter entities by kind.
     * 
     */
    public Optional<String> filterKind() {
        return Optional.ofNullable(this.filterKind);
    }

    /**
     * Filter entities by name.
     * 
     */
    @Import(name="filterName")
    private @Nullable String filterName;

    /**
     * @return Filter entities by name.
     * 
     */
    public Optional<String> filterName() {
        return Optional.ofNullable(this.filterName);
    }

    /**
     * Filter entities by owner.
     * 
     */
    @Import(name="filterOwner")
    private @Nullable String filterOwner;

    /**
     * @return Filter entities by owner.
     * 
     */
    public Optional<String> filterOwner() {
        return Optional.ofNullable(this.filterOwner);
    }

    /**
     * Filter entities by reference.
     * 
     */
    @Import(name="filterRef")
    private @Nullable String filterRef;

    /**
     * @return Filter entities by reference.
     * 
     */
    public Optional<String> filterRef() {
        return Optional.ofNullable(this.filterRef);
    }

    /**
     * Filter entities by relation type.
     * 
     */
    @Import(name="filterRelationType")
    private @Nullable String filterRelationType;

    /**
     * @return Filter entities by relation type.
     * 
     */
    public Optional<String> filterRelationType() {
        return Optional.ofNullable(this.filterRelationType);
    }

    private GetSoftwareCatalogPlainArgs() {}

    private GetSoftwareCatalogPlainArgs(GetSoftwareCatalogPlainArgs $) {
        this.filterExcludeSnapshot = $.filterExcludeSnapshot;
        this.filterId = $.filterId;
        this.filterKind = $.filterKind;
        this.filterName = $.filterName;
        this.filterOwner = $.filterOwner;
        this.filterRef = $.filterRef;
        this.filterRelationType = $.filterRelationType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSoftwareCatalogPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSoftwareCatalogPlainArgs $;

        public Builder() {
            $ = new GetSoftwareCatalogPlainArgs();
        }

        public Builder(GetSoftwareCatalogPlainArgs defaults) {
            $ = new GetSoftwareCatalogPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filterExcludeSnapshot Filter entities by excluding snapshotted entities.
         * 
         * @return builder
         * 
         */
        public Builder filterExcludeSnapshot(@Nullable String filterExcludeSnapshot) {
            $.filterExcludeSnapshot = filterExcludeSnapshot;
            return this;
        }

        /**
         * @param filterId Filter entities by UUID.
         * 
         * @return builder
         * 
         */
        public Builder filterId(@Nullable String filterId) {
            $.filterId = filterId;
            return this;
        }

        /**
         * @param filterKind Filter entities by kind.
         * 
         * @return builder
         * 
         */
        public Builder filterKind(@Nullable String filterKind) {
            $.filterKind = filterKind;
            return this;
        }

        /**
         * @param filterName Filter entities by name.
         * 
         * @return builder
         * 
         */
        public Builder filterName(@Nullable String filterName) {
            $.filterName = filterName;
            return this;
        }

        /**
         * @param filterOwner Filter entities by owner.
         * 
         * @return builder
         * 
         */
        public Builder filterOwner(@Nullable String filterOwner) {
            $.filterOwner = filterOwner;
            return this;
        }

        /**
         * @param filterRef Filter entities by reference.
         * 
         * @return builder
         * 
         */
        public Builder filterRef(@Nullable String filterRef) {
            $.filterRef = filterRef;
            return this;
        }

        /**
         * @param filterRelationType Filter entities by relation type.
         * 
         * @return builder
         * 
         */
        public Builder filterRelationType(@Nullable String filterRelationType) {
            $.filterRelationType = filterRelationType;
            return this;
        }

        public GetSoftwareCatalogPlainArgs build() {
            return $;
        }
    }

}
