// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.ObservabilityPipelineConfigArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObservabilityPipelineArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObservabilityPipelineArgs Empty = new ObservabilityPipelineArgs();

    /**
     * Configuration for the pipeline.
     * 
     */
    @Import(name="config")
    private @Nullable Output<ObservabilityPipelineConfigArgs> config;

    /**
     * @return Configuration for the pipeline.
     * 
     */
    public Optional<Output<ObservabilityPipelineConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The pipeline name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The pipeline name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ObservabilityPipelineArgs() {}

    private ObservabilityPipelineArgs(ObservabilityPipelineArgs $) {
        this.config = $.config;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObservabilityPipelineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObservabilityPipelineArgs $;

        public Builder() {
            $ = new ObservabilityPipelineArgs();
        }

        public Builder(ObservabilityPipelineArgs defaults) {
            $ = new ObservabilityPipelineArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param config Configuration for the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<ObservabilityPipelineConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config Configuration for the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder config(ObservabilityPipelineConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param name The pipeline name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The pipeline name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ObservabilityPipelineArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ObservabilityPipelineArgs", "name");
            }
            return $;
        }
    }

}
