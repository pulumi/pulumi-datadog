// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetActionConnectionAwsAssumeRole extends com.pulumi.resources.InvokeArgs {

    public static final GetActionConnectionAwsAssumeRole Empty = new GetActionConnectionAwsAssumeRole();

    /**
     * AWS account that the connection is created for
     * 
     */
    @Import(name="accountId", required=true)
    private String accountId;

    /**
     * @return AWS account that the connection is created for
     * 
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * External ID that specifies which connection can be used to assume the role
     * 
     */
    @Import(name="externalId", required=true)
    private String externalId;

    /**
     * @return External ID that specifies which connection can be used to assume the role
     * 
     */
    public String externalId() {
        return this.externalId;
    }

    /**
     * AWS account that will assume the role
     * 
     */
    @Import(name="principalId", required=true)
    private String principalId;

    /**
     * @return AWS account that will assume the role
     * 
     */
    public String principalId() {
        return this.principalId;
    }

    /**
     * Role to assume
     * 
     */
    @Import(name="role", required=true)
    private String role;

    /**
     * @return Role to assume
     * 
     */
    public String role() {
        return this.role;
    }

    private GetActionConnectionAwsAssumeRole() {}

    private GetActionConnectionAwsAssumeRole(GetActionConnectionAwsAssumeRole $) {
        this.accountId = $.accountId;
        this.externalId = $.externalId;
        this.principalId = $.principalId;
        this.role = $.role;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetActionConnectionAwsAssumeRole defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetActionConnectionAwsAssumeRole $;

        public Builder() {
            $ = new GetActionConnectionAwsAssumeRole();
        }

        public Builder(GetActionConnectionAwsAssumeRole defaults) {
            $ = new GetActionConnectionAwsAssumeRole(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId AWS account that the connection is created for
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param externalId External ID that specifies which connection can be used to assume the role
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param principalId AWS account that will assume the role
         * 
         * @return builder
         * 
         */
        public Builder principalId(String principalId) {
            $.principalId = principalId;
            return this;
        }

        /**
         * @param role Role to assume
         * 
         * @return builder
         * 
         */
        public Builder role(String role) {
            $.role = role;
            return this;
        }

        public GetActionConnectionAwsAssumeRole build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("GetActionConnectionAwsAssumeRole", "accountId");
            }
            if ($.externalId == null) {
                throw new MissingRequiredPropertyException("GetActionConnectionAwsAssumeRole", "externalId");
            }
            if ($.principalId == null) {
                throw new MissingRequiredPropertyException("GetActionConnectionAwsAssumeRole", "principalId");
            }
            if ($.role == null) {
                throw new MissingRequiredPropertyException("GetActionConnectionAwsAssumeRole", "role");
            }
            return $;
        }
    }

}
