// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle {
    /**
     * @return The type of lines displayed. Valid values are `dashed`, `dotted`, `solid`.
     * 
     */
    private @Nullable String lineType;
    /**
     * @return The width of line displayed. Valid values are `normal`, `thick`, `thin`.
     * 
     */
    private @Nullable String lineWidth;
    /**
     * @return The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.
     * 
     */
    private @Nullable String palette;

    private DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle() {}
    /**
     * @return The type of lines displayed. Valid values are `dashed`, `dotted`, `solid`.
     * 
     */
    public Optional<String> lineType() {
        return Optional.ofNullable(this.lineType);
    }
    /**
     * @return The width of line displayed. Valid values are `normal`, `thick`, `thin`.
     * 
     */
    public Optional<String> lineWidth() {
        return Optional.ofNullable(this.lineWidth);
    }
    /**
     * @return The color palette to apply. Valid values are `blue`, `custom_bg`, `custom_image`, `custom_text`, `gray_on_white`, `grey`, `green`, `orange`, `red`, `red_on_white`, `white_on_gray`, `white_on_green`, `green_on_white`, `white_on_red`, `white_on_yellow`, `yellow_on_white`, `black_on_light_yellow`, `black_on_light_green`, `black_on_light_red`.
     * 
     */
    public Optional<String> palette() {
        return Optional.ofNullable(this.palette);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String lineType;
        private @Nullable String lineWidth;
        private @Nullable String palette;
        public Builder() {}
        public Builder(DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lineType = defaults.lineType;
    	      this.lineWidth = defaults.lineWidth;
    	      this.palette = defaults.palette;
        }

        @CustomType.Setter
        public Builder lineType(@Nullable String lineType) {
            this.lineType = lineType;
            return this;
        }
        @CustomType.Setter
        public Builder lineWidth(@Nullable String lineWidth) {
            this.lineWidth = lineWidth;
            return this;
        }
        @CustomType.Setter
        public Builder palette(@Nullable String palette) {
            this.palette = palette;
            return this;
        }
        public DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle build() {
            final var _resultValue = new DashboardWidgetGroupDefinitionWidgetTimeseriesDefinitionRequestStyle();
            _resultValue.lineType = lineType;
            _resultValue.lineWidth = lineWidth;
            _resultValue.palette = palette;
            return _resultValue;
        }
    }
}
