// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigSourcesGooglePubsubAuth;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigSourcesGooglePubsubTls;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObservabilityPipelineConfigSourcesGooglePubsub {
    /**
     * @return GCP credentials used to authenticate with Google Cloud Storage.
     * 
     */
    private @Nullable ObservabilityPipelineConfigSourcesGooglePubsubAuth auth;
    /**
     * @return The decoding format used to interpret incoming logs.
     * 
     */
    private String decoding;
    /**
     * @return The unique identifier for this component. Used to reference this component in other parts of the pipeline (e.g., as input to downstream components).
     * 
     */
    private String id;
    /**
     * @return The GCP project ID that owns the Pub/Sub subscription.
     * 
     */
    private String project;
    /**
     * @return The Pub/Sub subscription name from which messages are consumed.
     * 
     */
    private String subscription;
    /**
     * @return Configuration for enabling TLS encryption between the pipeline component and external services.
     * 
     */
    private @Nullable ObservabilityPipelineConfigSourcesGooglePubsubTls tls;

    private ObservabilityPipelineConfigSourcesGooglePubsub() {}
    /**
     * @return GCP credentials used to authenticate with Google Cloud Storage.
     * 
     */
    public Optional<ObservabilityPipelineConfigSourcesGooglePubsubAuth> auth() {
        return Optional.ofNullable(this.auth);
    }
    /**
     * @return The decoding format used to interpret incoming logs.
     * 
     */
    public String decoding() {
        return this.decoding;
    }
    /**
     * @return The unique identifier for this component. Used to reference this component in other parts of the pipeline (e.g., as input to downstream components).
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The GCP project ID that owns the Pub/Sub subscription.
     * 
     */
    public String project() {
        return this.project;
    }
    /**
     * @return The Pub/Sub subscription name from which messages are consumed.
     * 
     */
    public String subscription() {
        return this.subscription;
    }
    /**
     * @return Configuration for enabling TLS encryption between the pipeline component and external services.
     * 
     */
    public Optional<ObservabilityPipelineConfigSourcesGooglePubsubTls> tls() {
        return Optional.ofNullable(this.tls);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservabilityPipelineConfigSourcesGooglePubsub defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ObservabilityPipelineConfigSourcesGooglePubsubAuth auth;
        private String decoding;
        private String id;
        private String project;
        private String subscription;
        private @Nullable ObservabilityPipelineConfigSourcesGooglePubsubTls tls;
        public Builder() {}
        public Builder(ObservabilityPipelineConfigSourcesGooglePubsub defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auth = defaults.auth;
    	      this.decoding = defaults.decoding;
    	      this.id = defaults.id;
    	      this.project = defaults.project;
    	      this.subscription = defaults.subscription;
    	      this.tls = defaults.tls;
        }

        @CustomType.Setter
        public Builder auth(@Nullable ObservabilityPipelineConfigSourcesGooglePubsubAuth auth) {

            this.auth = auth;
            return this;
        }
        @CustomType.Setter
        public Builder decoding(String decoding) {
            if (decoding == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigSourcesGooglePubsub", "decoding");
            }
            this.decoding = decoding;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigSourcesGooglePubsub", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder project(String project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigSourcesGooglePubsub", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder subscription(String subscription) {
            if (subscription == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigSourcesGooglePubsub", "subscription");
            }
            this.subscription = subscription;
            return this;
        }
        @CustomType.Setter
        public Builder tls(@Nullable ObservabilityPipelineConfigSourcesGooglePubsubTls tls) {

            this.tls = tls;
            return this;
        }
        public ObservabilityPipelineConfigSourcesGooglePubsub build() {
            final var _resultValue = new ObservabilityPipelineConfigSourcesGooglePubsub();
            _resultValue.auth = auth;
            _resultValue.decoding = decoding;
            _resultValue.id = id;
            _resultValue.project = project;
            _resultValue.subscription = subscription;
            _resultValue.tls = tls;
            return _resultValue;
        }
    }
}
