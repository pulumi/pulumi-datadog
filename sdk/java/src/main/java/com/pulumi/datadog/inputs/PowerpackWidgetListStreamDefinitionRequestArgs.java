// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.PowerpackWidgetListStreamDefinitionRequestColumnArgs;
import com.pulumi.datadog.inputs.PowerpackWidgetListStreamDefinitionRequestQueryArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class PowerpackWidgetListStreamDefinitionRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final PowerpackWidgetListStreamDefinitionRequestArgs Empty = new PowerpackWidgetListStreamDefinitionRequestArgs();

    /**
     * Column properties used by the front end for display.
     * 
     */
    @Import(name="columns", required=true)
    private Output<List<PowerpackWidgetListStreamDefinitionRequestColumnArgs>> columns;

    /**
     * @return Column properties used by the front end for display.
     * 
     */
    public Output<List<PowerpackWidgetListStreamDefinitionRequestColumnArgs>> columns() {
        return this.columns;
    }

    @Import(name="query", required=true)
    private Output<PowerpackWidgetListStreamDefinitionRequestQueryArgs> query;

    public Output<PowerpackWidgetListStreamDefinitionRequestQueryArgs> query() {
        return this.query;
    }

    /**
     * Widget response format. Valid values are `event_list`.
     * 
     */
    @Import(name="responseFormat", required=true)
    private Output<String> responseFormat;

    /**
     * @return Widget response format. Valid values are `event_list`.
     * 
     */
    public Output<String> responseFormat() {
        return this.responseFormat;
    }

    private PowerpackWidgetListStreamDefinitionRequestArgs() {}

    private PowerpackWidgetListStreamDefinitionRequestArgs(PowerpackWidgetListStreamDefinitionRequestArgs $) {
        this.columns = $.columns;
        this.query = $.query;
        this.responseFormat = $.responseFormat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PowerpackWidgetListStreamDefinitionRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PowerpackWidgetListStreamDefinitionRequestArgs $;

        public Builder() {
            $ = new PowerpackWidgetListStreamDefinitionRequestArgs();
        }

        public Builder(PowerpackWidgetListStreamDefinitionRequestArgs defaults) {
            $ = new PowerpackWidgetListStreamDefinitionRequestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param columns Column properties used by the front end for display.
         * 
         * @return builder
         * 
         */
        public Builder columns(Output<List<PowerpackWidgetListStreamDefinitionRequestColumnArgs>> columns) {
            $.columns = columns;
            return this;
        }

        /**
         * @param columns Column properties used by the front end for display.
         * 
         * @return builder
         * 
         */
        public Builder columns(List<PowerpackWidgetListStreamDefinitionRequestColumnArgs> columns) {
            return columns(Output.of(columns));
        }

        /**
         * @param columns Column properties used by the front end for display.
         * 
         * @return builder
         * 
         */
        public Builder columns(PowerpackWidgetListStreamDefinitionRequestColumnArgs... columns) {
            return columns(List.of(columns));
        }

        public Builder query(Output<PowerpackWidgetListStreamDefinitionRequestQueryArgs> query) {
            $.query = query;
            return this;
        }

        public Builder query(PowerpackWidgetListStreamDefinitionRequestQueryArgs query) {
            return query(Output.of(query));
        }

        /**
         * @param responseFormat Widget response format. Valid values are `event_list`.
         * 
         * @return builder
         * 
         */
        public Builder responseFormat(Output<String> responseFormat) {
            $.responseFormat = responseFormat;
            return this;
        }

        /**
         * @param responseFormat Widget response format. Valid values are `event_list`.
         * 
         * @return builder
         * 
         */
        public Builder responseFormat(String responseFormat) {
            return responseFormat(Output.of(responseFormat));
        }

        public PowerpackWidgetListStreamDefinitionRequestArgs build() {
            if ($.columns == null) {
                throw new MissingRequiredPropertyException("PowerpackWidgetListStreamDefinitionRequestArgs", "columns");
            }
            if ($.query == null) {
                throw new MissingRequiredPropertyException("PowerpackWidgetListStreamDefinitionRequestArgs", "query");
            }
            if ($.responseFormat == null) {
                throw new MissingRequiredPropertyException("PowerpackWidgetListStreamDefinitionRequestArgs", "responseFormat");
            }
            return $;
        }
    }

}
