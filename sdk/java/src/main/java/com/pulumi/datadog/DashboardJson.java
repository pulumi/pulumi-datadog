// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.DashboardJsonArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.DashboardJsonState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Datadog dashboard JSON resource. This can be used to create and manage Datadog dashboards using the JSON definition.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.DashboardJson;
 * import com.pulumi.datadog.DashboardJsonArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Example Dashboard JSON
 *         var dashboardJson = new DashboardJson(&#34;dashboardJson&#34;, DashboardJsonArgs.builder()        
 *             .dashboard(&#34;&#34;&#34;
 * {
 *    &#34;title&#34;:&#34;Ordered Layout Dashboard&#34;,
 *    &#34;description&#34;:&#34;Created using the Datadog provider in Pulumi&#34;,
 *    &#34;widgets&#34;:[
 *       {
 *          &#34;id&#34;:719369537777170,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;type&#34;:&#34;alert_graph&#34;,
 *             &#34;alert_id&#34;:&#34;895605&#34;,
 *             &#34;viz_type&#34;:&#34;timeseries&#34;
 *          }
 *       },
 *       {
 *          &#34;id&#34;:2306240030393868,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;type&#34;:&#34;alert_value&#34;,
 *             &#34;alert_id&#34;:&#34;895605&#34;,
 *             &#34;unit&#34;:&#34;b&#34;,
 *             &#34;text_align&#34;:&#34;center&#34;,
 *             &#34;precision&#34;:3
 *          }
 *       },
 *       {
 *          &#34;id&#34;:6990998850881326,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;type&#34;:&#34;alert_value&#34;,
 *             &#34;alert_id&#34;:&#34;895605&#34;,
 *             &#34;unit&#34;:&#34;b&#34;,
 *             &#34;text_align&#34;:&#34;center&#34;,
 *             &#34;precision&#34;:3
 *          }
 *       },
 *       {
 *          &#34;id&#34;:3351284044659007,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;type&#34;:&#34;change&#34;,
 *             &#34;requests&#34;:[
 *                {
 *                   &#34;q&#34;:&#34;avg:system.load.1{env:staging} by {account}&#34;,
 *                   &#34;compare_to&#34;:&#34;week_before&#34;,
 *                   &#34;change_type&#34;:&#34;absolute&#34;,
 *                   &#34;order_dir&#34;:&#34;desc&#34;,
 *                   &#34;increase_good&#34;:true,
 *                   &#34;order_by&#34;:&#34;name&#34;,
 *                   &#34;show_present&#34;:true
 *                }
 *             ]
 *          }
 *       },
 *       {
 *          &#34;id&#34;:6450290622996182,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;show_legend&#34;:false,
 *             &#34;type&#34;:&#34;distribution&#34;,
 *             &#34;requests&#34;:[
 *                {
 *                   &#34;q&#34;:&#34;avg:system.load.1{env:staging} by {account}&#34;,
 *                   &#34;style&#34;:{
 *                      &#34;palette&#34;:&#34;warm&#34;
 *                   }
 *                }
 *             ]
 *          }
 *       },
 *       {
 *          &#34;id&#34;:4902842646291536,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;type&#34;:&#34;check_status&#34;,
 *             &#34;check&#34;:&#34;aws.ecs.agent_connected&#34;,
 *             &#34;grouping&#34;:&#34;cluster&#34;,
 *             &#34;group_by&#34;:[
 *                &#34;account&#34;,
 *                &#34;cluster&#34;
 *             ],
 *             &#34;tags&#34;:[
 *                &#34;account:demo&#34;,
 *                &#34;cluster:awseb-ruthebdog-env-8-dn3m6u3gvk&#34;
 *             ]
 *          }
 *       },
 *       {
 *          &#34;id&#34;:6392349954822644,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;show_legend&#34;:false,
 *             &#34;type&#34;:&#34;heatmap&#34;,
 *             &#34;yaxis&#34;:{
 *                &#34;scale&#34;:&#34;sqrt&#34;,
 *                &#34;include_zero&#34;:true,
 *                &#34;min&#34;:&#34;1&#34;,
 *                &#34;max&#34;:&#34;2&#34;
 *             },
 *             &#34;requests&#34;:[
 *                {
 *                   &#34;q&#34;:&#34;avg:system.load.1{env:staging} by {account}&#34;,
 *                   &#34;style&#34;:{
 *                      &#34;palette&#34;:&#34;warm&#34;
 *                   }
 *                }
 *             ]
 *          }
 *       },
 *       {
 *          &#34;id&#34;:5222961478940988,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;type&#34;:&#34;hostmap&#34;,
 *             &#34;requests&#34;:{
 *                &#34;fill&#34;:{
 *                   &#34;q&#34;:&#34;avg:system.load.1{*} by {host}&#34;
 *                },
 *                &#34;size&#34;:{
 *                   &#34;q&#34;:&#34;avg:memcache.uptime{*} by {host}&#34;
 *                }
 *             },
 *             &#34;node_type&#34;:&#34;container&#34;,
 *             &#34;no_metric_hosts&#34;:true,
 *             &#34;no_group_hosts&#34;:true,
 *             &#34;group&#34;:[
 *                &#34;host&#34;,
 *                &#34;region&#34;
 *             ],
 *             &#34;scope&#34;:[
 *                &#34;region:us-east-1&#34;,
 *                &#34;aws_account:727006795293&#34;
 *             ],
 *             &#34;style&#34;:{
 *                &#34;palette&#34;:&#34;yellow_to_green&#34;,
 *                &#34;palette_flip&#34;:true,
 *                &#34;fill_min&#34;:&#34;10&#34;,
 *                &#34;fill_max&#34;:&#34;20&#34;
 *             }
 *          }
 *       },
 *       {
 *          &#34;id&#34;:8121199734227072,
 *          &#34;definition&#34;:{
 *             &#34;type&#34;:&#34;note&#34;,
 *             &#34;content&#34;:&#34;note text&#34;,
 *             &#34;background_color&#34;:&#34;pink&#34;,
 *             &#34;font_size&#34;:&#34;14&#34;,
 *             &#34;text_align&#34;:&#34;center&#34;,
 *             &#34;show_tick&#34;:true,
 *             &#34;tick_pos&#34;:&#34;50%&#34;,
 *             &#34;tick_edge&#34;:&#34;left&#34;
 *          }
 *       },
 *       {
 *          &#34;id&#34;:1775856835833038,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;type&#34;:&#34;query_value&#34;,
 *             &#34;requests&#34;:[
 *                {
 *                   &#34;q&#34;:&#34;avg:system.load.1{env:staging} by {account}&#34;,
 *                   &#34;aggregator&#34;:&#34;sum&#34;,
 *                   &#34;conditional_formats&#34;:[
 *                      {
 *                         &#34;hide_value&#34;:false,
 *                         &#34;comparator&#34;:&#34;&lt;&#34;,
 *                         &#34;palette&#34;:&#34;white_on_green&#34;,
 *                         &#34;value&#34;:2
 *                      },
 *                      {
 *                         &#34;hide_value&#34;:false,
 *                         &#34;comparator&#34;:&#34;&gt;&#34;,
 *                         &#34;palette&#34;:&#34;white_on_red&#34;,
 *                         &#34;value&#34;:2.2
 *                      }
 *                   ]
 *                }
 *             ],
 *             &#34;autoscale&#34;:true,
 *             &#34;custom_unit&#34;:&#34;xx&#34;,
 *             &#34;text_align&#34;:&#34;right&#34;,
 *             &#34;precision&#34;:4
 *          }
 *       },
 *       {
 *          &#34;id&#34;:8461455966625581,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;type&#34;:&#34;query_table&#34;,
 *             &#34;requests&#34;:[
 *                {
 *                   &#34;q&#34;:&#34;avg:system.load.1{env:staging} by {account}&#34;,
 *                   &#34;aggregator&#34;:&#34;sum&#34;,
 *                   &#34;conditional_formats&#34;:[
 *                      {
 *                         &#34;hide_value&#34;:false,
 *                         &#34;comparator&#34;:&#34;&lt;&#34;,
 *                         &#34;palette&#34;:&#34;white_on_green&#34;,
 *                         &#34;value&#34;:2
 *                      },
 *                      {
 *                         &#34;hide_value&#34;:false,
 *                         &#34;comparator&#34;:&#34;&gt;&#34;,
 *                         &#34;palette&#34;:&#34;white_on_red&#34;,
 *                         &#34;value&#34;:2.2
 *                      }
 *                   ],
 *                   &#34;limit&#34;:10
 *                }
 *             ]
 *          }
 *       },
 *       {
 *          &#34;id&#34;:8660006349418736,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;type&#34;:&#34;scatterplot&#34;,
 *             &#34;requests&#34;:{
 *                &#34;x&#34;:{
 *                   &#34;q&#34;:&#34;avg:system.cpu.user{*} by {service, account}&#34;,
 *                   &#34;aggregator&#34;:&#34;max&#34;
 *                },
 *                &#34;y&#34;:{
 *                   &#34;q&#34;:&#34;avg:system.mem.used{*} by {service, account}&#34;,
 *                   &#34;aggregator&#34;:&#34;min&#34;
 *                }
 *             },
 *             &#34;xaxis&#34;:{
 *                &#34;scale&#34;:&#34;pow&#34;,
 *                &#34;label&#34;:&#34;x&#34;,
 *                &#34;include_zero&#34;:true,
 *                &#34;min&#34;:&#34;1&#34;,
 *                &#34;max&#34;:&#34;2000&#34;
 *             },
 *             &#34;yaxis&#34;:{
 *                &#34;scale&#34;:&#34;log&#34;,
 *                &#34;label&#34;:&#34;y&#34;,
 *                &#34;include_zero&#34;:false,
 *                &#34;min&#34;:&#34;5&#34;,
 *                &#34;max&#34;:&#34;2222&#34;
 *             },
 *             &#34;color_by_groups&#34;:[
 *                &#34;account&#34;,
 *                &#34;apm-role-group&#34;
 *             ]
 *          }
 *       },
 *       {
 *          &#34;id&#34;:1669590772917638,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;env: prod, datacenter:dc1, service: master-db&#34;,
 *             &#34;title_size&#34;:&#34;16&#34;,
 *             &#34;title_align&#34;:&#34;left&#34;,
 *             &#34;type&#34;:&#34;servicemap&#34;,
 *             &#34;service&#34;:&#34;master-db&#34;,
 *             &#34;filters&#34;:[
 *                &#34;env:prod&#34;,
 *                &#34;datacenter:dc1&#34;
 *             ]
 *          }
 *       },
 *       {
 *          &#34;id&#34;:2138829058361817,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;show_legend&#34;:true,
 *             &#34;legend_size&#34;:&#34;2&#34;,
 *             &#34;type&#34;:&#34;timeseries&#34;,
 *             &#34;requests&#34;:[
 *                {
 *                   &#34;q&#34;:&#34;avg:system.cpu.user{app:general} by {env}&#34;,
 *                   &#34;on_right_yaxis&#34;:false,
 *                   &#34;metadata&#34;:[
 *                      {
 *                         &#34;expression&#34;:&#34;avg:system.cpu.user{app:general} by {env}&#34;,
 *                         &#34;alias_name&#34;:&#34;Alpha&#34;
 *                      }
 *                   ],
 *                   &#34;style&#34;:{
 *                      &#34;palette&#34;:&#34;warm&#34;,
 *                      &#34;line_type&#34;:&#34;dashed&#34;,
 *                      &#34;line_width&#34;:&#34;thin&#34;
 *                   },
 *                   &#34;display_type&#34;:&#34;line&#34;
 *                },
 *                {
 *                   &#34;on_right_yaxis&#34;:false,
 *                   &#34;log_query&#34;:{
 *                      &#34;index&#34;:&#34;mcnulty&#34;,
 *                      &#34;search&#34;:{
 *                         &#34;query&#34;:&#34;status:info&#34;
 *                      },
 *                      &#34;group_by&#34;:[
 *                         {
 *                            &#34;facet&#34;:&#34;host&#34;,
 *                            &#34;sort&#34;:{
 *                               &#34;facet&#34;:&#34;@duration&#34;,
 *                               &#34;aggregation&#34;:&#34;avg&#34;,
 *                               &#34;order&#34;:&#34;desc&#34;
 *                            },
 *                            &#34;limit&#34;:10
 *                         }
 *                      ],
 *                      &#34;compute&#34;:{
 *                         &#34;facet&#34;:&#34;@duration&#34;,
 *                         &#34;interval&#34;:5000,
 *                         &#34;aggregation&#34;:&#34;avg&#34;
 *                      }
 *                   },
 *                   &#34;display_type&#34;:&#34;area&#34;
 *                },
 *                {
 *                   &#34;on_right_yaxis&#34;:false,
 *                   &#34;apm_query&#34;:{
 *                      &#34;index&#34;:&#34;apm-search&#34;,
 *                      &#34;search&#34;:{
 *                         &#34;query&#34;:&#34;type:web&#34;
 *                      },
 *                      &#34;group_by&#34;:[
 *                         {
 *                            &#34;facet&#34;:&#34;resource_name&#34;,
 *                            &#34;sort&#34;:{
 *                               &#34;facet&#34;:&#34;@string_query.interval&#34;,
 *                               &#34;aggregation&#34;:&#34;avg&#34;,
 *                               &#34;order&#34;:&#34;desc&#34;
 *                            },
 *                            &#34;limit&#34;:50
 *                         }
 *                      ],
 *                      &#34;compute&#34;:{
 *                         &#34;facet&#34;:&#34;@duration&#34;,
 *                         &#34;interval&#34;:5000,
 *                         &#34;aggregation&#34;:&#34;avg&#34;
 *                      }
 *                   },
 *                   &#34;display_type&#34;:&#34;bars&#34;
 *                },
 *                {
 *                   &#34;on_right_yaxis&#34;:false,
 *                   &#34;process_query&#34;:{
 *                      &#34;search_by&#34;:&#34;error&#34;,
 *                      &#34;metric&#34;:&#34;process.stat.cpu.total_pct&#34;,
 *                      &#34;limit&#34;:50,
 *                      &#34;filter_by&#34;:[
 *                         &#34;active&#34;
 *                      ]
 *                   },
 *                   &#34;display_type&#34;:&#34;area&#34;
 *                }
 *             ],
 *             &#34;yaxis&#34;:{
 *                &#34;scale&#34;:&#34;log&#34;,
 *                &#34;include_zero&#34;:false,
 *                &#34;max&#34;:&#34;100&#34;
 *             },
 *             &#34;events&#34;:[
 *                {
 *                   &#34;q&#34;:&#34;sources:test tags:1&#34;
 *                },
 *                {
 *                   &#34;q&#34;:&#34;sources:test tags:2&#34;
 *                }
 *             ],
 *             &#34;markers&#34;:[
 *                {
 *                   &#34;label&#34;:&#34; z=6 &#34;,
 *                   &#34;value&#34;:&#34;y = 4&#34;,
 *                   &#34;display_type&#34;:&#34;error dashed&#34;
 *                },
 *                {
 *                   &#34;label&#34;:&#34; x=8 &#34;,
 *                   &#34;value&#34;:&#34;10 &lt; y &lt; 999&#34;,
 *                   &#34;display_type&#34;:&#34;ok solid&#34;
 *                }
 *             ]
 *          }
 *       },
 *       {
 *          &#34;id&#34;:7307171374656551,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;type&#34;:&#34;toplist&#34;,
 *             &#34;requests&#34;:[
 *                {
 *                   &#34;q&#34;:&#34;avg:system.cpu.user{app:general} by {env}&#34;,
 *                   &#34;conditional_formats&#34;:[
 *                      {
 *                         &#34;hide_value&#34;:false,
 *                         &#34;comparator&#34;:&#34;&lt;&#34;,
 *                         &#34;palette&#34;:&#34;white_on_green&#34;,
 *                         &#34;value&#34;:2
 *                      },
 *                      {
 *                         &#34;hide_value&#34;:false,
 *                         &#34;comparator&#34;:&#34;&gt;&#34;,
 *                         &#34;palette&#34;:&#34;white_on_red&#34;,
 *                         &#34;value&#34;:2.2
 *                      }
 *                   ]
 *                }
 *             ]
 *          }
 *       },
 *       {
 *          &#34;id&#34;:7086674838553258,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Group Widget&#34;,
 *             &#34;type&#34;:&#34;group&#34;,
 *             &#34;layout_type&#34;:&#34;ordered&#34;,
 *             &#34;widgets&#34;:[
 *                {
 *                   &#34;id&#34;:3726092277657502,
 *                   &#34;definition&#34;:{
 *                      &#34;type&#34;:&#34;note&#34;,
 *                      &#34;content&#34;:&#34;cluster note widget&#34;,
 *                      &#34;background_color&#34;:&#34;pink&#34;,
 *                      &#34;font_size&#34;:&#34;14&#34;,
 *                      &#34;text_align&#34;:&#34;center&#34;,
 *                      &#34;show_tick&#34;:true,
 *                      &#34;tick_pos&#34;:&#34;50%&#34;,
 *                      &#34;tick_edge&#34;:&#34;left&#34;
 *                   }
 *                },
 *                {
 *                   &#34;id&#34;:6376384650558057,
 *                   &#34;definition&#34;:{
 *                      &#34;title&#34;:&#34;Alert Graph&#34;,
 *                      &#34;type&#34;:&#34;alert_graph&#34;,
 *                      &#34;alert_id&#34;:&#34;123&#34;,
 *                      &#34;viz_type&#34;:&#34;toplist&#34;
 *                   }
 *                }
 *             ]
 *          }
 *       },
 *       {
 *          &#34;id&#34;:4668903563678912,
 *          &#34;definition&#34;:{
 *             &#34;title&#34;:&#34;Widget Title&#34;,
 *             &#34;type&#34;:&#34;slo&#34;,
 *             &#34;view_type&#34;:&#34;detail&#34;,
 *             &#34;time_windows&#34;:[
 *                &#34;7d&#34;,
 *                &#34;previous_week&#34;
 *             ],
 *             &#34;slo_id&#34;:&#34;56789&#34;,
 *             &#34;show_error_budget&#34;:true,
 *             &#34;view_mode&#34;:&#34;overall&#34;,
 *             &#34;global_time_target&#34;:&#34;0&#34;
 *          }
 *       }
 *    ],
 *    &#34;template_variables&#34;:[
 *       {
 *          &#34;name&#34;:&#34;var_1&#34;,
 *          &#34;default&#34;:&#34;aws&#34;,
 *          &#34;prefix&#34;:&#34;host&#34;
 *       },
 *       {
 *          &#34;name&#34;:&#34;var_2&#34;,
 *          &#34;default&#34;:&#34;autoscaling&#34;,
 *          &#34;prefix&#34;:&#34;service_name&#34;
 *       }
 *    ],
 *    &#34;layout_type&#34;:&#34;ordered&#34;,
 *    &#34;is_read_only&#34;:true,
 *    &#34;notify_list&#34;:[
 * 
 *    ],
 *    &#34;template_variable_presets&#34;:[
 *       {
 *          &#34;name&#34;:&#34;preset_1&#34;,
 *          &#34;template_variables&#34;:[
 *             {
 *                &#34;name&#34;:&#34;var_1&#34;,
 *                &#34;value&#34;:&#34;host.dc&#34;
 *             },
 *             {
 *                &#34;name&#34;:&#34;var_2&#34;,
 *                &#34;value&#34;:&#34;my_service&#34;
 *             }
 *          ]
 *       }
 *    ]
 * }
 * 
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import datadog:index/dashboardJson:DashboardJson my_service_dashboard sv7-gyh-kas
 * ```
 * 
 */
@ResourceType(type="datadog:index/dashboardJson:DashboardJson")
public class DashboardJson extends com.pulumi.resources.CustomResource {
    /**
     * The JSON formatted definition of the Dashboard.
     * 
     */
    @Export(name="dashboard", refs={String.class}, tree="[0]")
    private Output<String> dashboard;

    /**
     * @return The JSON formatted definition of the Dashboard.
     * 
     */
    public Output<String> dashboard() {
        return this.dashboard;
    }
    /**
     * A list of dashboard lists this dashboard belongs to. This attribute should not be set if managing the corresponding
     * dashboard lists using Terraform as it causes inconsistent behavior.
     * 
     */
    @Export(name="dashboardLists", refs={List.class,Integer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Integer>> dashboardLists;

    /**
     * @return A list of dashboard lists this dashboard belongs to. This attribute should not be set if managing the corresponding
     * dashboard lists using Terraform as it causes inconsistent behavior.
     * 
     */
    public Output<Optional<List<Integer>>> dashboardLists() {
        return Codegen.optional(this.dashboardLists);
    }
    /**
     * The list of dashboard lists this dashboard should be removed from. Internal only.
     * 
     */
    @Export(name="dashboardListsRemoveds", refs={List.class,Integer.class}, tree="[0,1]")
    private Output<List<Integer>> dashboardListsRemoveds;

    /**
     * @return The list of dashboard lists this dashboard should be removed from. Internal only.
     * 
     */
    public Output<List<Integer>> dashboardListsRemoveds() {
        return this.dashboardListsRemoveds;
    }
    /**
     * The URL of the dashboard.
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return The URL of the dashboard.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DashboardJson(String name) {
        this(name, DashboardJsonArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DashboardJson(String name, DashboardJsonArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DashboardJson(String name, DashboardJsonArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/dashboardJson:DashboardJson", name, args == null ? DashboardJsonArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DashboardJson(String name, Output<String> id, @Nullable DashboardJsonState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/dashboardJson:DashboardJson", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DashboardJson get(String name, Output<String> id, @Nullable DashboardJsonState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DashboardJson(name, id, state, options);
    }
}
