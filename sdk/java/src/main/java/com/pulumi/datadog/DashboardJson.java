// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.DashboardJsonArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.DashboardJsonState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Datadog dashboard JSON resource. This can be used to create and manage Datadog dashboards using the JSON definition.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.DashboardJson;
 * import com.pulumi.datadog.DashboardJsonArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         // Example Dashboard JSON
 *         var dashboardJson = new DashboardJson("dashboardJson", DashboardJsonArgs.builder()
 *             .dashboard("""
 * }{{@code
 *    "title":"Ordered Layout Dashboard",
 *    "description":"Created using the Datadog provider in Pulumi",
 *    "widgets":[
 *       }{{@code
 *          "id":719369537777170,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "type":"alert_graph",
 *             "alert_id":"895605",
 *             "viz_type":"timeseries"
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":2306240030393868,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "type":"alert_value",
 *             "alert_id":"895605",
 *             "unit":"b",
 *             "text_align":"center",
 *             "precision":3
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":6990998850881326,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "type":"alert_value",
 *             "alert_id":"895605",
 *             "unit":"b",
 *             "text_align":"center",
 *             "precision":3
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":3351284044659007,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "type":"change",
 *             "requests":[
 *                }{{@code
 *                   "q":"avg:system.load.1}{{@code env:staging}}{@code  by }{{@code account}}{@code ",
 *                   "compare_to":"week_before",
 *                   "change_type":"absolute",
 *                   "order_dir":"desc",
 *                   "increase_good":true,
 *                   "order_by":"name",
 *                   "show_present":true
 *                }}{@code
 *             ]
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":6450290622996182,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "show_legend":false,
 *             "type":"distribution",
 *             "requests":[
 *                }{{@code
 *                   "q":"avg:system.load.1}{{@code env:staging}}{@code  by }{{@code account}}{@code ",
 *                   "style":}{{@code
 *                      "palette":"warm"
 *                   }}{@code
 *                }}{@code
 *             ]
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":4902842646291536,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "type":"check_status",
 *             "check":"aws.ecs.agent_connected",
 *             "grouping":"cluster",
 *             "group_by":[
 *                "account",
 *                "cluster"
 *             ],
 *             "tags":[
 *                "account:demo",
 *                "cluster:awseb-ruthebdog-env-8-dn3m6u3gvk"
 *             ]
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":6392349954822644,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "show_legend":false,
 *             "type":"heatmap",
 *             "yaxis":}{{@code
 *                "scale":"sqrt",
 *                "include_zero":true,
 *                "min":"1",
 *                "max":"2"
 *             }}{@code ,
 *             "requests":[
 *                }{{@code
 *                   "q":"avg:system.load.1}{{@code env:staging}}{@code  by }{{@code account}}{@code ",
 *                   "style":}{{@code
 *                      "palette":"warm"
 *                   }}{@code
 *                }}{@code
 *             ]
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":5222961478940988,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "type":"hostmap",
 *             "requests":}{{@code
 *                "fill":}{{@code
 *                   "q":"avg:system.load.1}{{@code *}}{@code  by }{{@code host}}{@code "
 *                }}{@code ,
 *                "size":}{{@code
 *                   "q":"avg:memcache.uptime}{{@code *}}{@code  by }{{@code host}}{@code "
 *                }}{@code
 *             }}{@code ,
 *             "node_type":"container",
 *             "no_metric_hosts":true,
 *             "no_group_hosts":true,
 *             "group":[
 *                "host",
 *                "region"
 *             ],
 *             "scope":[
 *                "region:us-east-1",
 *                "aws_account:727006795293"
 *             ],
 *             "style":}{{@code
 *                "palette":"yellow_to_green",
 *                "palette_flip":true,
 *                "fill_min":"10",
 *                "fill_max":"20"
 *             }}{@code
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":8121199734227072,
 *          "definition":}{{@code
 *             "type":"note",
 *             "content":"note text",
 *             "background_color":"pink",
 *             "font_size":"14",
 *             "text_align":"center",
 *             "show_tick":true,
 *             "tick_pos":"50%",
 *             "tick_edge":"left"
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":1775856835833038,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "type":"query_value",
 *             "requests":[
 *                }{{@code
 *                   "q":"avg:system.load.1}{{@code env:staging}}{@code  by }{{@code account}}{@code ",
 *                   "aggregator":"sum",
 *                   "conditional_formats":[
 *                      }{{@code
 *                         "hide_value":false,
 *                         "comparator":"<",
 *                         "palette":"white_on_green",
 *                         "value":2
 *                      }}{@code ,
 *                      }{{@code
 *                         "hide_value":false,
 *                         "comparator":">",
 *                         "palette":"white_on_red",
 *                         "value":2.2
 *                      }}{@code
 *                   ]
 *                }}{@code
 *             ],
 *             "autoscale":true,
 *             "custom_unit":"xx",
 *             "text_align":"right",
 *             "precision":4
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":8461455966625581,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "type":"query_table",
 *             "requests":[
 *                }{{@code
 *                   "q":"avg:system.load.1}{{@code env:staging}}{@code  by }{{@code account}}{@code ",
 *                   "aggregator":"sum",
 *                   "conditional_formats":[
 *                      }{{@code
 *                         "hide_value":false,
 *                         "comparator":"<",
 *                         "palette":"white_on_green",
 *                         "value":2
 *                      }}{@code ,
 *                      }{{@code
 *                         "hide_value":false,
 *                         "comparator":">",
 *                         "palette":"white_on_red",
 *                         "value":2.2
 *                      }}{@code
 *                   ],
 *                   "limit":10
 *                }}{@code
 *             ]
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":8660006349418736,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "type":"scatterplot",
 *             "requests":}{{@code
 *                "x":}{{@code
 *                   "q":"avg:system.cpu.user}{{@code *}}{@code  by }{{@code service, account}}{@code ",
 *                   "aggregator":"max"
 *                }}{@code ,
 *                "y":}{{@code
 *                   "q":"avg:system.mem.used}{{@code *}}{@code  by }{{@code service, account}}{@code ",
 *                   "aggregator":"min"
 *                }}{@code
 *             }}{@code ,
 *             "xaxis":}{{@code
 *                "scale":"pow",
 *                "label":"x",
 *                "include_zero":true,
 *                "min":"1",
 *                "max":"2000"
 *             }}{@code ,
 *             "yaxis":}{{@code
 *                "scale":"log",
 *                "label":"y",
 *                "include_zero":false,
 *                "min":"5",
 *                "max":"2222"
 *             }}{@code ,
 *             "color_by_groups":[
 *                "account",
 *                "apm-role-group"
 *             ]
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":1669590772917638,
 *          "definition":}{{@code
 *             "title":"env: prod, datacenter:dc1, service: master-db",
 *             "title_size":"16",
 *             "title_align":"left",
 *             "type":"servicemap",
 *             "service":"master-db",
 *             "filters":[
 *                "env:prod",
 *                "datacenter:dc1"
 *             ]
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":2138829058361817,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "show_legend":true,
 *             "legend_size":"2",
 *             "type":"timeseries",
 *             "requests":[
 *                }{{@code
 *                   "q":"avg:system.cpu.user}{{@code app:general}}{@code  by }{{@code env}}{@code ",
 *                   "on_right_yaxis":false,
 *                   "metadata":[
 *                      }{{@code
 *                         "expression":"avg:system.cpu.user}{{@code app:general}}{@code  by }{{@code env}}{@code ",
 *                         "alias_name":"Alpha"
 *                      }}{@code
 *                   ],
 *                   "style":}{{@code
 *                      "palette":"warm",
 *                      "line_type":"dashed",
 *                      "line_width":"thin"
 *                   }}{@code ,
 *                   "display_type":"line"
 *                }}{@code ,
 *                }{{@code
 *                   "on_right_yaxis":false,
 *                   "log_query":}{{@code
 *                      "index":"mcnulty",
 *                      "search":}{{@code
 *                         "query":"status:info"
 *                      }}{@code ,
 *                      "group_by":[
 *                         }{{@code
 *                            "facet":"host",
 *                            "sort":}{{@code
 *                               "facet":"}{@literal @}{@code duration",
 *                               "aggregation":"avg",
 *                               "order":"desc"
 *                            }}{@code ,
 *                            "limit":10
 *                         }}{@code
 *                      ],
 *                      "compute":}{{@code
 *                         "facet":"}{@literal @}{@code duration",
 *                         "interval":5000,
 *                         "aggregation":"avg"
 *                      }}{@code
 *                   }}{@code ,
 *                   "display_type":"area"
 *                }}{@code ,
 *                }{{@code
 *                   "on_right_yaxis":false,
 *                   "apm_query":}{{@code
 *                      "index":"apm-search",
 *                      "search":}{{@code
 *                         "query":"type:web"
 *                      }}{@code ,
 *                      "group_by":[
 *                         }{{@code
 *                            "facet":"resource_name",
 *                            "sort":}{{@code
 *                               "facet":"}{@literal @}{@code string_query.interval",
 *                               "aggregation":"avg",
 *                               "order":"desc"
 *                            }}{@code ,
 *                            "limit":50
 *                         }}{@code
 *                      ],
 *                      "compute":}{{@code
 *                         "facet":"}{@literal @}{@code duration",
 *                         "interval":5000,
 *                         "aggregation":"avg"
 *                      }}{@code
 *                   }}{@code ,
 *                   "display_type":"bars"
 *                }}{@code ,
 *                }{{@code
 *                   "on_right_yaxis":false,
 *                   "process_query":}{{@code
 *                      "search_by":"error",
 *                      "metric":"process.stat.cpu.total_pct",
 *                      "limit":50,
 *                      "filter_by":[
 *                         "active"
 *                      ]
 *                   }}{@code ,
 *                   "display_type":"area"
 *                }}{@code
 *             ],
 *             "yaxis":}{{@code
 *                "scale":"log",
 *                "include_zero":false,
 *                "max":"100"
 *             }}{@code ,
 *             "events":[
 *                }{{@code
 *                   "q":"sources:test tags:1"
 *                }}{@code ,
 *                }{{@code
 *                   "q":"sources:test tags:2"
 *                }}{@code
 *             ],
 *             "markers":[
 *                }{{@code
 *                   "label":" z=6 ",
 *                   "value":"y = 4",
 *                   "display_type":"error dashed"
 *                }}{@code ,
 *                }{{@code
 *                   "label":" x=8 ",
 *                   "value":"10 < y < 999",
 *                   "display_type":"ok solid"
 *                }}{@code
 *             ]
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":7307171374656551,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "type":"toplist",
 *             "requests":[
 *                }{{@code
 *                   "q":"avg:system.cpu.user}{{@code app:general}}{@code  by }{{@code env}}{@code ",
 *                   "conditional_formats":[
 *                      }{{@code
 *                         "hide_value":false,
 *                         "comparator":"<",
 *                         "palette":"white_on_green",
 *                         "value":2
 *                      }}{@code ,
 *                      }{{@code
 *                         "hide_value":false,
 *                         "comparator":">",
 *                         "palette":"white_on_red",
 *                         "value":2.2
 *                      }}{@code
 *                   ]
 *                }}{@code
 *             ]
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":7086674838553258,
 *          "definition":}{{@code
 *             "title":"Group Widget",
 *             "type":"group",
 *             "layout_type":"ordered",
 *             "widgets":[
 *                }{{@code
 *                   "id":3726092277657502,
 *                   "definition":}{{@code
 *                      "type":"note",
 *                      "content":"cluster note widget",
 *                      "background_color":"pink",
 *                      "font_size":"14",
 *                      "text_align":"center",
 *                      "show_tick":true,
 *                      "tick_pos":"50%",
 *                      "tick_edge":"left"
 *                   }}{@code
 *                }}{@code ,
 *                }{{@code
 *                   "id":6376384650558057,
 *                   "definition":}{{@code
 *                      "title":"Alert Graph",
 *                      "type":"alert_graph",
 *                      "alert_id":"123",
 *                      "viz_type":"toplist"
 *                   }}{@code
 *                }}{@code
 *             ]
 *          }}{@code
 *       }}{@code ,
 *       }{{@code
 *          "id":4668903563678912,
 *          "definition":}{{@code
 *             "title":"Widget Title",
 *             "type":"slo",
 *             "view_type":"detail",
 *             "time_windows":[
 *                "7d",
 *                "previous_week"
 *             ],
 *             "slo_id":"56789",
 *             "show_error_budget":true,
 *             "view_mode":"overall",
 *             "global_time_target":"0"
 *          }}{@code
 *       }}{@code
 *    ],
 *    "template_variables":[
 *       }{{@code
 *          "name":"var_1",
 *          "default":"aws",
 *          "prefix":"host"
 *       }}{@code ,
 *       }{{@code
 *          "name":"var_2",
 *          "default":"autoscaling",
 *          "prefix":"service_name"
 *       }}{@code
 *    ],
 *    "layout_type":"ordered",
 *    "is_read_only":true,
 *    "notify_list":[
 * 
 *    ],
 *    "template_variable_presets":[
 *       }{{@code
 *          "name":"preset_1",
 *          "template_variables":[
 *             }{{@code
 *                "name":"var_1",
 *                "value":"host.dc"
 *             }}{@code ,
 *             }{{@code
 *                "name":"var_2",
 *                "value":"my_service"
 *             }}{@code
 *          ]
 *       }}{@code
 *    ]
 * }}{@code
 *             """)
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import datadog:index/dashboardJson:DashboardJson my_service_dashboard sv7-gyh-kas
 * ```
 * 
 */
@ResourceType(type="datadog:index/dashboardJson:DashboardJson")
public class DashboardJson extends com.pulumi.resources.CustomResource {
    /**
     * The JSON formatted definition of the Dashboard.
     * 
     */
    @Export(name="dashboard", refs={String.class}, tree="[0]")
    private Output<String> dashboard;

    /**
     * @return The JSON formatted definition of the Dashboard.
     * 
     */
    public Output<String> dashboard() {
        return this.dashboard;
    }
    @Export(name="dashboardLists", refs={List.class,Integer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Integer>> dashboardLists;

    public Output<Optional<List<Integer>>> dashboardLists() {
        return Codegen.optional(this.dashboardLists);
    }
    /**
     * The list of dashboard lists this dashboard should be removed from. Internal only.
     * 
     */
    @Export(name="dashboardListsRemoveds", refs={List.class,Integer.class}, tree="[0,1]")
    private Output<List<Integer>> dashboardListsRemoveds;

    /**
     * @return The list of dashboard lists this dashboard should be removed from. Internal only.
     * 
     */
    public Output<List<Integer>> dashboardListsRemoveds() {
        return this.dashboardListsRemoveds;
    }
    /**
     * The URL of the dashboard.
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return The URL of the dashboard.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DashboardJson(java.lang.String name) {
        this(name, DashboardJsonArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DashboardJson(java.lang.String name, DashboardJsonArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DashboardJson(java.lang.String name, DashboardJsonArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/dashboardJson:DashboardJson", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DashboardJson(java.lang.String name, Output<java.lang.String> id, @Nullable DashboardJsonState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/dashboardJson:DashboardJson", name, state, makeResourceOptions(options, id), false);
    }

    private static DashboardJsonArgs makeArgs(DashboardJsonArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DashboardJsonArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DashboardJson get(java.lang.String name, Output<java.lang.String> id, @Nullable DashboardJsonState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DashboardJson(name, id, state, options);
    }
}
