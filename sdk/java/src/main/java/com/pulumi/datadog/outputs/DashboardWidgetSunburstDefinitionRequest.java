// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionRequestApmQuery;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionRequestAuditQuery;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionRequestFormula;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionRequestLogQuery;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionRequestNetworkQuery;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionRequestProcessQuery;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionRequestQuery;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionRequestRumQuery;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionRequestSecurityQuery;
import com.pulumi.datadog.outputs.DashboardWidgetSunburstDefinitionRequestStyle;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetSunburstDefinitionRequest {
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetSunburstDefinitionRequestApmQuery apmQuery;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetSunburstDefinitionRequestAuditQuery auditQuery;
    private @Nullable List<DashboardWidgetSunburstDefinitionRequestFormula> formulas;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetSunburstDefinitionRequestLogQuery logQuery;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetSunburstDefinitionRequestNetworkQuery networkQuery;
    /**
     * @return The process query to use in the widget. The structure of this block is described below.
     * 
     */
    private @Nullable DashboardWidgetSunburstDefinitionRequestProcessQuery processQuery;
    /**
     * @return The metric query to use for this widget.
     * 
     */
    private @Nullable String q;
    private @Nullable List<DashboardWidgetSunburstDefinitionRequestQuery> queries;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetSunburstDefinitionRequestRumQuery rumQuery;
    /**
     * @return The query to use for this widget.
     * 
     */
    private @Nullable DashboardWidgetSunburstDefinitionRequestSecurityQuery securityQuery;
    /**
     * @return Styling options for widget formulas.
     * 
     */
    private @Nullable DashboardWidgetSunburstDefinitionRequestStyle style;

    private DashboardWidgetSunburstDefinitionRequest() {}
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetSunburstDefinitionRequestApmQuery> apmQuery() {
        return Optional.ofNullable(this.apmQuery);
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetSunburstDefinitionRequestAuditQuery> auditQuery() {
        return Optional.ofNullable(this.auditQuery);
    }
    public List<DashboardWidgetSunburstDefinitionRequestFormula> formulas() {
        return this.formulas == null ? List.of() : this.formulas;
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetSunburstDefinitionRequestLogQuery> logQuery() {
        return Optional.ofNullable(this.logQuery);
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetSunburstDefinitionRequestNetworkQuery> networkQuery() {
        return Optional.ofNullable(this.networkQuery);
    }
    /**
     * @return The process query to use in the widget. The structure of this block is described below.
     * 
     */
    public Optional<DashboardWidgetSunburstDefinitionRequestProcessQuery> processQuery() {
        return Optional.ofNullable(this.processQuery);
    }
    /**
     * @return The metric query to use for this widget.
     * 
     */
    public Optional<String> q() {
        return Optional.ofNullable(this.q);
    }
    public List<DashboardWidgetSunburstDefinitionRequestQuery> queries() {
        return this.queries == null ? List.of() : this.queries;
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetSunburstDefinitionRequestRumQuery> rumQuery() {
        return Optional.ofNullable(this.rumQuery);
    }
    /**
     * @return The query to use for this widget.
     * 
     */
    public Optional<DashboardWidgetSunburstDefinitionRequestSecurityQuery> securityQuery() {
        return Optional.ofNullable(this.securityQuery);
    }
    /**
     * @return Styling options for widget formulas.
     * 
     */
    public Optional<DashboardWidgetSunburstDefinitionRequestStyle> style() {
        return Optional.ofNullable(this.style);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetSunburstDefinitionRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable DashboardWidgetSunburstDefinitionRequestApmQuery apmQuery;
        private @Nullable DashboardWidgetSunburstDefinitionRequestAuditQuery auditQuery;
        private @Nullable List<DashboardWidgetSunburstDefinitionRequestFormula> formulas;
        private @Nullable DashboardWidgetSunburstDefinitionRequestLogQuery logQuery;
        private @Nullable DashboardWidgetSunburstDefinitionRequestNetworkQuery networkQuery;
        private @Nullable DashboardWidgetSunburstDefinitionRequestProcessQuery processQuery;
        private @Nullable String q;
        private @Nullable List<DashboardWidgetSunburstDefinitionRequestQuery> queries;
        private @Nullable DashboardWidgetSunburstDefinitionRequestRumQuery rumQuery;
        private @Nullable DashboardWidgetSunburstDefinitionRequestSecurityQuery securityQuery;
        private @Nullable DashboardWidgetSunburstDefinitionRequestStyle style;
        public Builder() {}
        public Builder(DashboardWidgetSunburstDefinitionRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apmQuery = defaults.apmQuery;
    	      this.auditQuery = defaults.auditQuery;
    	      this.formulas = defaults.formulas;
    	      this.logQuery = defaults.logQuery;
    	      this.networkQuery = defaults.networkQuery;
    	      this.processQuery = defaults.processQuery;
    	      this.q = defaults.q;
    	      this.queries = defaults.queries;
    	      this.rumQuery = defaults.rumQuery;
    	      this.securityQuery = defaults.securityQuery;
    	      this.style = defaults.style;
        }

        @CustomType.Setter
        public Builder apmQuery(@Nullable DashboardWidgetSunburstDefinitionRequestApmQuery apmQuery) {

            this.apmQuery = apmQuery;
            return this;
        }
        @CustomType.Setter
        public Builder auditQuery(@Nullable DashboardWidgetSunburstDefinitionRequestAuditQuery auditQuery) {

            this.auditQuery = auditQuery;
            return this;
        }
        @CustomType.Setter
        public Builder formulas(@Nullable List<DashboardWidgetSunburstDefinitionRequestFormula> formulas) {

            this.formulas = formulas;
            return this;
        }
        public Builder formulas(DashboardWidgetSunburstDefinitionRequestFormula... formulas) {
            return formulas(List.of(formulas));
        }
        @CustomType.Setter
        public Builder logQuery(@Nullable DashboardWidgetSunburstDefinitionRequestLogQuery logQuery) {

            this.logQuery = logQuery;
            return this;
        }
        @CustomType.Setter
        public Builder networkQuery(@Nullable DashboardWidgetSunburstDefinitionRequestNetworkQuery networkQuery) {

            this.networkQuery = networkQuery;
            return this;
        }
        @CustomType.Setter
        public Builder processQuery(@Nullable DashboardWidgetSunburstDefinitionRequestProcessQuery processQuery) {

            this.processQuery = processQuery;
            return this;
        }
        @CustomType.Setter
        public Builder q(@Nullable String q) {

            this.q = q;
            return this;
        }
        @CustomType.Setter
        public Builder queries(@Nullable List<DashboardWidgetSunburstDefinitionRequestQuery> queries) {

            this.queries = queries;
            return this;
        }
        public Builder queries(DashboardWidgetSunburstDefinitionRequestQuery... queries) {
            return queries(List.of(queries));
        }
        @CustomType.Setter
        public Builder rumQuery(@Nullable DashboardWidgetSunburstDefinitionRequestRumQuery rumQuery) {

            this.rumQuery = rumQuery;
            return this;
        }
        @CustomType.Setter
        public Builder securityQuery(@Nullable DashboardWidgetSunburstDefinitionRequestSecurityQuery securityQuery) {

            this.securityQuery = securityQuery;
            return this;
        }
        @CustomType.Setter
        public Builder style(@Nullable DashboardWidgetSunburstDefinitionRequestStyle style) {

            this.style = style;
            return this;
        }
        public DashboardWidgetSunburstDefinitionRequest build() {
            final var _resultValue = new DashboardWidgetSunburstDefinitionRequest();
            _resultValue.apmQuery = apmQuery;
            _resultValue.auditQuery = auditQuery;
            _resultValue.formulas = formulas;
            _resultValue.logQuery = logQuery;
            _resultValue.networkQuery = networkQuery;
            _resultValue.processQuery = processQuery;
            _resultValue.q = q;
            _resultValue.queries = queries;
            _resultValue.rumQuery = rumQuery;
            _resultValue.securityQuery = securityQuery;
            _resultValue.style = style;
            return _resultValue;
        }
    }
}
