// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.aws.inputs.IntegrationAccountMetricsConfigNamespaceFiltersArgs;
import com.pulumi.datadog.aws.inputs.IntegrationAccountMetricsConfigTagFilterArgs;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationAccountMetricsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationAccountMetricsConfigArgs Empty = new IntegrationAccountMetricsConfigArgs();

    /**
     * Enable EC2 automute for AWS metrics Defaults to `true`.
     * 
     */
    @Import(name="automuteEnabled")
    private @Nullable Output<Boolean> automuteEnabled;

    /**
     * @return Enable EC2 automute for AWS metrics Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> automuteEnabled() {
        return Optional.ofNullable(this.automuteEnabled);
    }

    /**
     * Enable CloudWatch alarms collection Defaults to `false`.
     * 
     */
    @Import(name="collectCloudwatchAlarms")
    private @Nullable Output<Boolean> collectCloudwatchAlarms;

    /**
     * @return Enable CloudWatch alarms collection Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> collectCloudwatchAlarms() {
        return Optional.ofNullable(this.collectCloudwatchAlarms);
    }

    /**
     * Enable custom metrics collection Defaults to `false`.
     * 
     */
    @Import(name="collectCustomMetrics")
    private @Nullable Output<Boolean> collectCustomMetrics;

    /**
     * @return Enable custom metrics collection Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> collectCustomMetrics() {
        return Optional.ofNullable(this.collectCustomMetrics);
    }

    /**
     * Enable AWS metrics collection Defaults to `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Enable AWS metrics collection Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * AWS metrics namespace filters. Defaults to a pre-set `exclude_only` list if block is empty.
     * 
     */
    @Import(name="namespaceFilters")
    private @Nullable Output<IntegrationAccountMetricsConfigNamespaceFiltersArgs> namespaceFilters;

    /**
     * @return AWS metrics namespace filters. Defaults to a pre-set `exclude_only` list if block is empty.
     * 
     */
    public Optional<Output<IntegrationAccountMetricsConfigNamespaceFiltersArgs>> namespaceFilters() {
        return Optional.ofNullable(this.namespaceFilters);
    }

    /**
     * AWS Metrics Collection tag filters list. The array of custom AWS resource tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from a specified service. Wildcards, such as `?` (match a single character) and `*` (match multiple characters), and exclusion using `!` before the tag are supported. For EC2, only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. For example, `env:production,instance-type:c?.*,!region:us-east-1`.
     * 
     */
    @Import(name="tagFilters")
    private @Nullable Output<List<IntegrationAccountMetricsConfigTagFilterArgs>> tagFilters;

    /**
     * @return AWS Metrics Collection tag filters list. The array of custom AWS resource tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from a specified service. Wildcards, such as `?` (match a single character) and `*` (match multiple characters), and exclusion using `!` before the tag are supported. For EC2, only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. For example, `env:production,instance-type:c?.*,!region:us-east-1`.
     * 
     */
    public Optional<Output<List<IntegrationAccountMetricsConfigTagFilterArgs>>> tagFilters() {
        return Optional.ofNullable(this.tagFilters);
    }

    private IntegrationAccountMetricsConfigArgs() {}

    private IntegrationAccountMetricsConfigArgs(IntegrationAccountMetricsConfigArgs $) {
        this.automuteEnabled = $.automuteEnabled;
        this.collectCloudwatchAlarms = $.collectCloudwatchAlarms;
        this.collectCustomMetrics = $.collectCustomMetrics;
        this.enabled = $.enabled;
        this.namespaceFilters = $.namespaceFilters;
        this.tagFilters = $.tagFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationAccountMetricsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationAccountMetricsConfigArgs $;

        public Builder() {
            $ = new IntegrationAccountMetricsConfigArgs();
        }

        public Builder(IntegrationAccountMetricsConfigArgs defaults) {
            $ = new IntegrationAccountMetricsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automuteEnabled Enable EC2 automute for AWS metrics Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder automuteEnabled(@Nullable Output<Boolean> automuteEnabled) {
            $.automuteEnabled = automuteEnabled;
            return this;
        }

        /**
         * @param automuteEnabled Enable EC2 automute for AWS metrics Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder automuteEnabled(Boolean automuteEnabled) {
            return automuteEnabled(Output.of(automuteEnabled));
        }

        /**
         * @param collectCloudwatchAlarms Enable CloudWatch alarms collection Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder collectCloudwatchAlarms(@Nullable Output<Boolean> collectCloudwatchAlarms) {
            $.collectCloudwatchAlarms = collectCloudwatchAlarms;
            return this;
        }

        /**
         * @param collectCloudwatchAlarms Enable CloudWatch alarms collection Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder collectCloudwatchAlarms(Boolean collectCloudwatchAlarms) {
            return collectCloudwatchAlarms(Output.of(collectCloudwatchAlarms));
        }

        /**
         * @param collectCustomMetrics Enable custom metrics collection Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder collectCustomMetrics(@Nullable Output<Boolean> collectCustomMetrics) {
            $.collectCustomMetrics = collectCustomMetrics;
            return this;
        }

        /**
         * @param collectCustomMetrics Enable custom metrics collection Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder collectCustomMetrics(Boolean collectCustomMetrics) {
            return collectCustomMetrics(Output.of(collectCustomMetrics));
        }

        /**
         * @param enabled Enable AWS metrics collection Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Enable AWS metrics collection Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param namespaceFilters AWS metrics namespace filters. Defaults to a pre-set `exclude_only` list if block is empty.
         * 
         * @return builder
         * 
         */
        public Builder namespaceFilters(@Nullable Output<IntegrationAccountMetricsConfigNamespaceFiltersArgs> namespaceFilters) {
            $.namespaceFilters = namespaceFilters;
            return this;
        }

        /**
         * @param namespaceFilters AWS metrics namespace filters. Defaults to a pre-set `exclude_only` list if block is empty.
         * 
         * @return builder
         * 
         */
        public Builder namespaceFilters(IntegrationAccountMetricsConfigNamespaceFiltersArgs namespaceFilters) {
            return namespaceFilters(Output.of(namespaceFilters));
        }

        /**
         * @param tagFilters AWS Metrics Collection tag filters list. The array of custom AWS resource tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from a specified service. Wildcards, such as `?` (match a single character) and `*` (match multiple characters), and exclusion using `!` before the tag are supported. For EC2, only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. For example, `env:production,instance-type:c?.*,!region:us-east-1`.
         * 
         * @return builder
         * 
         */
        public Builder tagFilters(@Nullable Output<List<IntegrationAccountMetricsConfigTagFilterArgs>> tagFilters) {
            $.tagFilters = tagFilters;
            return this;
        }

        /**
         * @param tagFilters AWS Metrics Collection tag filters list. The array of custom AWS resource tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from a specified service. Wildcards, such as `?` (match a single character) and `*` (match multiple characters), and exclusion using `!` before the tag are supported. For EC2, only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. For example, `env:production,instance-type:c?.*,!region:us-east-1`.
         * 
         * @return builder
         * 
         */
        public Builder tagFilters(List<IntegrationAccountMetricsConfigTagFilterArgs> tagFilters) {
            return tagFilters(Output.of(tagFilters));
        }

        /**
         * @param tagFilters AWS Metrics Collection tag filters list. The array of custom AWS resource tags (in the form `key:value`) defines a filter that Datadog uses when collecting metrics from a specified service. Wildcards, such as `?` (match a single character) and `*` (match multiple characters), and exclusion using `!` before the tag are supported. For EC2, only hosts that match one of the defined tags will be imported into Datadog. The rest will be ignored. For example, `env:production,instance-type:c?.*,!region:us-east-1`.
         * 
         * @return builder
         * 
         */
        public Builder tagFilters(IntegrationAccountMetricsConfigTagFilterArgs... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }

        public IntegrationAccountMetricsConfigArgs build() {
            return $;
        }
    }

}
