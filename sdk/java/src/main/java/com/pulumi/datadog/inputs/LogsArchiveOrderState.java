// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogsArchiveOrderState extends com.pulumi.resources.ResourceArgs {

    public static final LogsArchiveOrderState Empty = new LogsArchiveOrderState();

    /**
     * The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archiveIds` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.
     * 
     */
    @Import(name="archiveIds")
    private @Nullable Output<List<String>> archiveIds;

    /**
     * @return The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archiveIds` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.
     * 
     */
    public Optional<Output<List<String>>> archiveIds() {
        return Optional.ofNullable(this.archiveIds);
    }

    private LogsArchiveOrderState() {}

    private LogsArchiveOrderState(LogsArchiveOrderState $) {
        this.archiveIds = $.archiveIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsArchiveOrderState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsArchiveOrderState $;

        public Builder() {
            $ = new LogsArchiveOrderState();
        }

        public Builder(LogsArchiveOrderState defaults) {
            $ = new LogsArchiveOrderState(Objects.requireNonNull(defaults));
        }

        /**
         * @param archiveIds The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archiveIds` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.
         * 
         * @return builder
         * 
         */
        public Builder archiveIds(@Nullable Output<List<String>> archiveIds) {
            $.archiveIds = archiveIds;
            return this;
        }

        /**
         * @param archiveIds The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archiveIds` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.
         * 
         * @return builder
         * 
         */
        public Builder archiveIds(List<String> archiveIds) {
            return archiveIds(Output.of(archiveIds));
        }

        /**
         * @param archiveIds The archive IDs list. The order of archive IDs in this attribute defines the overall archive order for logs. If `archiveIds` is empty or not specified, it will import the actual archive order, and create the resource. Otherwise, it will try to update the order.
         * 
         * @return builder
         * 
         */
        public Builder archiveIds(String... archiveIds) {
            return archiveIds(List.of(archiveIds));
        }

        public LogsArchiveOrderState build() {
            return $;
        }
    }

}
