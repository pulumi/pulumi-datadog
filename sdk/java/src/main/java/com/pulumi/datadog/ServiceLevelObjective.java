// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.datadog.ServiceLevelObjectiveArgs;
import com.pulumi.datadog.Utilities;
import com.pulumi.datadog.inputs.ServiceLevelObjectiveState;
import com.pulumi.datadog.outputs.ServiceLevelObjectiveQuery;
import com.pulumi.datadog.outputs.ServiceLevelObjectiveSliSpecification;
import com.pulumi.datadog.outputs.ServiceLevelObjectiveThreshold;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Datadog service level objective resource. This can be used to create and manage Datadog service level objectives.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.datadog.ServiceLevelObjective;
 * import com.pulumi.datadog.ServiceLevelObjectiveArgs;
 * import com.pulumi.datadog.inputs.ServiceLevelObjectiveQueryArgs;
 * import com.pulumi.datadog.inputs.ServiceLevelObjectiveThresholdArgs;
 * import com.pulumi.datadog.inputs.ServiceLevelObjectiveSliSpecificationArgs;
 * import com.pulumi.datadog.inputs.ServiceLevelObjectiveSliSpecificationTimeSliceArgs;
 * import com.pulumi.datadog.inputs.ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs;
 * import com.pulumi.datadog.inputs.ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Metric-Based SLO
 *         // Create a new Datadog service level objective
 *         var foo = new ServiceLevelObjective(&#34;foo&#34;, ServiceLevelObjectiveArgs.builder()        
 *             .description(&#34;My custom metric SLO&#34;)
 *             .name(&#34;Example Metric SLO&#34;)
 *             .query(ServiceLevelObjectiveQueryArgs.builder()
 *                 .denominator(&#34;sum:my.custom.count.metric{*}.as_count()&#34;)
 *                 .numerator(&#34;sum:my.custom.count.metric{type:good_events}.as_count()&#34;)
 *                 .build())
 *             .tags(            
 *                 &#34;foo:bar&#34;,
 *                 &#34;baz&#34;)
 *             .targetThreshold(99.9)
 *             .thresholds(            
 *                 ServiceLevelObjectiveThresholdArgs.builder()
 *                     .target(99.9)
 *                     .timeframe(&#34;7d&#34;)
 *                     .warning(99.99)
 *                     .build(),
 *                 ServiceLevelObjectiveThresholdArgs.builder()
 *                     .target(99.9)
 *                     .timeframe(&#34;30d&#34;)
 *                     .warning(99.99)
 *                     .build())
 *             .timeframe(&#34;30d&#34;)
 *             .type(&#34;metric&#34;)
 *             .warningThreshold(99.99)
 *             .build());
 * 
 *         // Monitor-Based SLO
 *         // Create a new Datadog service level objective
 *         var bar = new ServiceLevelObjective(&#34;bar&#34;, ServiceLevelObjectiveArgs.builder()        
 *             .description(&#34;My custom monitor SLO&#34;)
 *             .monitorIds(            
 *                 1,
 *                 2,
 *                 3)
 *             .name(&#34;Example Monitor SLO&#34;)
 *             .tags(            
 *                 &#34;foo:bar&#34;,
 *                 &#34;baz&#34;)
 *             .targetThreshold(99.9)
 *             .thresholds(            
 *                 ServiceLevelObjectiveThresholdArgs.builder()
 *                     .target(99.9)
 *                     .timeframe(&#34;7d&#34;)
 *                     .warning(99.99)
 *                     .build(),
 *                 ServiceLevelObjectiveThresholdArgs.builder()
 *                     .target(99.9)
 *                     .timeframe(&#34;30d&#34;)
 *                     .warning(99.99)
 *                     .build())
 *             .timeframe(&#34;30d&#34;)
 *             .type(&#34;monitor&#34;)
 *             .warningThreshold(99.99)
 *             .build());
 * 
 *         var timeSliceSlo = new ServiceLevelObjective(&#34;timeSliceSlo&#34;, ServiceLevelObjectiveArgs.builder()        
 *             .description(&#34;My custom time slice SLO&#34;)
 *             .name(&#34;Example Time Slice SLO&#34;)
 *             .sliSpecification(ServiceLevelObjectiveSliSpecificationArgs.builder()
 *                 .timeSlice(ServiceLevelObjectiveSliSpecificationTimeSliceArgs.builder()
 *                     .comparator(&#34;&gt;&#34;)
 *                     .query(ServiceLevelObjectiveSliSpecificationTimeSliceQueryArgs.builder()
 *                         .formula(ServiceLevelObjectiveSliSpecificationTimeSliceQueryFormulaArgs.builder()
 *                             .formulaExpression(&#34;query1&#34;)
 *                             .build())
 *                         .query(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *                         .build())
 *                     .threshold(0.9)
 *                     .build())
 *                 .build())
 *             .tags(            
 *                 &#34;service:myservice&#34;,
 *                 &#34;team:myteam&#34;)
 *             .targetThreshold(99.9)
 *             .thresholds(ServiceLevelObjectiveThresholdArgs.builder()
 *                 .target(99.9)
 *                 .timeframe(&#34;7d&#34;)
 *                 .warning(99.99)
 *                 .build())
 *             .timeframe(&#34;7d&#34;)
 *             .type(&#34;time_slice&#34;)
 *             .warningThreshold(99.99)
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Service Level Objectives can be imported using their string ID, e.g.
 * 
 * ```sh
 * $ pulumi import datadog:index/serviceLevelObjective:ServiceLevelObjective baz 12345678901234567890123456789012
 * ```
 * 
 */
@ResourceType(type="datadog:index/serviceLevelObjective:ServiceLevelObjective")
public class ServiceLevelObjective extends com.pulumi.resources.CustomResource {
    /**
     * A description of this service level objective.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of this service level objective.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A boolean indicating whether this monitor can be deleted even if it&#39;s referenced by other resources (for example, dashboards).
     * 
     */
    @Export(name="forceDelete", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceDelete;

    /**
     * @return A boolean indicating whether this monitor can be deleted even if it&#39;s referenced by other resources (for example, dashboards).
     * 
     */
    public Output<Optional<Boolean>> forceDelete() {
        return Codegen.optional(this.forceDelete);
    }
    /**
     * A static set of groups to filter monitor-based SLOs
     * 
     */
    @Export(name="groups", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> groups;

    /**
     * @return A static set of groups to filter monitor-based SLOs
     * 
     */
    public Output<Optional<List<String>>> groups() {
        return Codegen.optional(this.groups);
    }
    /**
     * A static set of monitor IDs to use as part of the SLO
     * 
     */
    @Export(name="monitorIds", refs={List.class,Integer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Integer>> monitorIds;

    /**
     * @return A static set of monitor IDs to use as part of the SLO
     * 
     */
    public Output<Optional<List<Integer>>> monitorIds() {
        return Codegen.optional(this.monitorIds);
    }
    /**
     * The name of the query for use in formulas.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the query for use in formulas.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
     * 
     */
    @Export(name="query", refs={ServiceLevelObjectiveQuery.class}, tree="[0]")
    private Output</* @Nullable */ ServiceLevelObjectiveQuery> query;

    /**
     * @return A timeseries query, containing named data-source-specific queries and a formula involving the named queries.
     * 
     */
    public Output<Optional<ServiceLevelObjectiveQuery>> query() {
        return Codegen.optional(this.query);
    }
    /**
     * A map of SLI specifications to use as part of the SLO.
     * 
     */
    @Export(name="sliSpecification", refs={ServiceLevelObjectiveSliSpecification.class}, tree="[0]")
    private Output</* @Nullable */ ServiceLevelObjectiveSliSpecification> sliSpecification;

    /**
     * @return A map of SLI specifications to use as part of the SLO.
     * 
     */
    public Output<Optional<ServiceLevelObjectiveSliSpecification>> sliSpecification() {
        return Codegen.optional(this.sliSpecification);
    }
    /**
     * A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it&#39;s not currently possible to filter by these tags when querying via the API
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return A list of tags to associate with your service level objective. This can help you categorize and filter service level objectives in the service level objectives page of the UI. Note: it&#39;s not currently possible to filter by these tags when querying via the API
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The objective&#39;s target in `(0,100)`. This must match the corresponding thresholds of the primary time frame.
     * 
     */
    @Export(name="targetThreshold", refs={Double.class}, tree="[0]")
    private Output<Double> targetThreshold;

    /**
     * @return The objective&#39;s target in `(0,100)`. This must match the corresponding thresholds of the primary time frame.
     * 
     */
    public Output<Double> targetThreshold() {
        return this.targetThreshold;
    }
    /**
     * A list of thresholds and targets that define the service level objectives from the provided SLIs.
     * 
     */
    @Export(name="thresholds", refs={List.class,ServiceLevelObjectiveThreshold.class}, tree="[0,1]")
    private Output<List<ServiceLevelObjectiveThreshold>> thresholds;

    /**
     * @return A list of thresholds and targets that define the service level objectives from the provided SLIs.
     * 
     */
    public Output<List<ServiceLevelObjectiveThreshold>> thresholds() {
        return this.thresholds;
    }
    /**
     * The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.
     * 
     */
    @Export(name="timeframe", refs={String.class}, tree="[0]")
    private Output<String> timeframe;

    /**
     * @return The time frame for the objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API documentation page. Valid values are `7d`, `30d`, `90d`, `custom`.
     * 
     */
    public Output<String> timeframe() {
        return this.timeframe;
    }
    /**
     * The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Valid values are `metric`, `monitor`, `time_slice`.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the service level objective. The mapping from these types to the types found in the Datadog Web UI can be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object). Valid values are `metric`, `monitor`, `time_slice`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Whether or not to validate the SLO.
     * 
     */
    @Export(name="validate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> validate;

    /**
     * @return Whether or not to validate the SLO.
     * 
     */
    public Output<Optional<Boolean>> validate() {
        return Codegen.optional(this.validate);
    }
    /**
     * The objective&#39;s warning value in `(0,100)`. This must be greater than the target value and match the corresponding thresholds of the primary time frame.
     * 
     */
    @Export(name="warningThreshold", refs={Double.class}, tree="[0]")
    private Output<Double> warningThreshold;

    /**
     * @return The objective&#39;s warning value in `(0,100)`. This must be greater than the target value and match the corresponding thresholds of the primary time frame.
     * 
     */
    public Output<Double> warningThreshold() {
        return this.warningThreshold;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServiceLevelObjective(String name) {
        this(name, ServiceLevelObjectiveArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServiceLevelObjective(String name, ServiceLevelObjectiveArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServiceLevelObjective(String name, ServiceLevelObjectiveArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/serviceLevelObjective:ServiceLevelObjective", name, args == null ? ServiceLevelObjectiveArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServiceLevelObjective(String name, Output<String> id, @Nullable ServiceLevelObjectiveState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("datadog:index/serviceLevelObjective:ServiceLevelObjective", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServiceLevelObjective get(String name, Output<String> id, @Nullable ServiceLevelObjectiveState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServiceLevelObjective(name, id, state, options);
    }
}
