// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.GetCostBudgetEntry;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetCostBudgetResult {
    /**
     * @return The month when the budget ends (YYYYMM).
     * 
     */
    private Integer endMonth;
    /**
     * @return The entries of the budget.
     * 
     */
    private @Nullable List<GetCostBudgetEntry> entries;
    /**
     * @return The ID of the budget.
     * 
     */
    private String id;
    /**
     * @return The cost query used to track against the budget.
     * 
     */
    private String metricsQuery;
    /**
     * @return The name of the budget.
     * 
     */
    private String name;
    /**
     * @return The month when the budget starts (YYYYMM).
     * 
     */
    private Integer startMonth;
    /**
     * @return The sum of all budget entries&#39; amounts.
     * 
     */
    private Double totalAmount;

    private GetCostBudgetResult() {}
    /**
     * @return The month when the budget ends (YYYYMM).
     * 
     */
    public Integer endMonth() {
        return this.endMonth;
    }
    /**
     * @return The entries of the budget.
     * 
     */
    public List<GetCostBudgetEntry> entries() {
        return this.entries == null ? List.of() : this.entries;
    }
    /**
     * @return The ID of the budget.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The cost query used to track against the budget.
     * 
     */
    public String metricsQuery() {
        return this.metricsQuery;
    }
    /**
     * @return The name of the budget.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The month when the budget starts (YYYYMM).
     * 
     */
    public Integer startMonth() {
        return this.startMonth;
    }
    /**
     * @return The sum of all budget entries&#39; amounts.
     * 
     */
    public Double totalAmount() {
        return this.totalAmount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCostBudgetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer endMonth;
        private @Nullable List<GetCostBudgetEntry> entries;
        private String id;
        private String metricsQuery;
        private String name;
        private Integer startMonth;
        private Double totalAmount;
        public Builder() {}
        public Builder(GetCostBudgetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endMonth = defaults.endMonth;
    	      this.entries = defaults.entries;
    	      this.id = defaults.id;
    	      this.metricsQuery = defaults.metricsQuery;
    	      this.name = defaults.name;
    	      this.startMonth = defaults.startMonth;
    	      this.totalAmount = defaults.totalAmount;
        }

        @CustomType.Setter
        public Builder endMonth(Integer endMonth) {
            if (endMonth == null) {
              throw new MissingRequiredPropertyException("GetCostBudgetResult", "endMonth");
            }
            this.endMonth = endMonth;
            return this;
        }
        @CustomType.Setter
        public Builder entries(@Nullable List<GetCostBudgetEntry> entries) {

            this.entries = entries;
            return this;
        }
        public Builder entries(GetCostBudgetEntry... entries) {
            return entries(List.of(entries));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCostBudgetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metricsQuery(String metricsQuery) {
            if (metricsQuery == null) {
              throw new MissingRequiredPropertyException("GetCostBudgetResult", "metricsQuery");
            }
            this.metricsQuery = metricsQuery;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCostBudgetResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder startMonth(Integer startMonth) {
            if (startMonth == null) {
              throw new MissingRequiredPropertyException("GetCostBudgetResult", "startMonth");
            }
            this.startMonth = startMonth;
            return this;
        }
        @CustomType.Setter
        public Builder totalAmount(Double totalAmount) {
            if (totalAmount == null) {
              throw new MissingRequiredPropertyException("GetCostBudgetResult", "totalAmount");
            }
            this.totalAmount = totalAmount;
            return this;
        }
        public GetCostBudgetResult build() {
            final var _resultValue = new GetCostBudgetResult();
            _resultValue.endMonth = endMonth;
            _resultValue.entries = entries;
            _resultValue.id = id;
            _resultValue.metricsQuery = metricsQuery;
            _resultValue.name = name;
            _resultValue.startMonth = startMonth;
            _resultValue.totalAmount = totalAmount;
            return _resultValue;
        }
    }
}
