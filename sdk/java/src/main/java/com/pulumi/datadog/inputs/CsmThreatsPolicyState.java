// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CsmThreatsPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final CsmThreatsPolicyState Empty = new CsmThreatsPolicyState();

    /**
     * A description for the policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description for the policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Indicates whether the policy is enabled. Defaults to `false`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Indicates whether the policy is enabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
     * 
     */
    @Import(name="hostTagsLists")
    private @Nullable Output<List<List<String>>> hostTagsLists;

    /**
     * @return Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
     * 
     */
    public Optional<Output<List<List<String>>>> hostTagsLists() {
        return Optional.ofNullable(this.hostTagsLists);
    }

    /**
     * The name of the policy.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private CsmThreatsPolicyState() {}

    private CsmThreatsPolicyState(CsmThreatsPolicyState $) {
        this.description = $.description;
        this.enabled = $.enabled;
        this.hostTagsLists = $.hostTagsLists;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CsmThreatsPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CsmThreatsPolicyState $;

        public Builder() {
            $ = new CsmThreatsPolicyState();
        }

        public Builder(CsmThreatsPolicyState defaults) {
            $ = new CsmThreatsPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A description for the policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description for the policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enabled Indicates whether the policy is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Indicates whether the policy is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param hostTagsLists Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
         * 
         * @return builder
         * 
         */
        public Builder hostTagsLists(@Nullable Output<List<List<String>>> hostTagsLists) {
            $.hostTagsLists = hostTagsLists;
            return this;
        }

        /**
         * @param hostTagsLists Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
         * 
         * @return builder
         * 
         */
        public Builder hostTagsLists(List<List<String>> hostTagsLists) {
            return hostTagsLists(Output.of(hostTagsLists));
        }

        /**
         * @param hostTagsLists Host tags that define where the policy is deployed. Inner values are ANDed, outer arrays are ORed.
         * 
         * @return builder
         * 
         */
        public Builder hostTagsLists(List<String>... hostTagsLists) {
            return hostTagsLists(List.of(hostTagsLists));
        }

        /**
         * @param name The name of the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Host tags that define where the policy is deployed. Deprecated, use host*tags*lists instead.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public CsmThreatsPolicyState build() {
            return $;
        }
    }

}
