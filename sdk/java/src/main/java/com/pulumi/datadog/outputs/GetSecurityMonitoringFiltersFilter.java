// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.GetSecurityMonitoringFiltersFilterExclusionFilter;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityMonitoringFiltersFilter {
    /**
     * @return Exclusion filters to exclude some logs from the security filter.
     * 
     */
    private @Nullable List<GetSecurityMonitoringFiltersFilterExclusionFilter> exclusionFilters;
    /**
     * @return The filtered data type.
     * 
     */
    private @Nullable String filteredDataType;
    /**
     * @return Whether the security filter is enabled.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The name of the security filter.
     * 
     */
    private String name;
    /**
     * @return The query of the security filter.
     * 
     */
    private String query;
    /**
     * @return The version of the security filter.
     * 
     */
    private Integer version;

    private GetSecurityMonitoringFiltersFilter() {}
    /**
     * @return Exclusion filters to exclude some logs from the security filter.
     * 
     */
    public List<GetSecurityMonitoringFiltersFilterExclusionFilter> exclusionFilters() {
        return this.exclusionFilters == null ? List.of() : this.exclusionFilters;
    }
    /**
     * @return The filtered data type.
     * 
     */
    public Optional<String> filteredDataType() {
        return Optional.ofNullable(this.filteredDataType);
    }
    /**
     * @return Whether the security filter is enabled.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The name of the security filter.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The query of the security filter.
     * 
     */
    public String query() {
        return this.query;
    }
    /**
     * @return The version of the security filter.
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityMonitoringFiltersFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetSecurityMonitoringFiltersFilterExclusionFilter> exclusionFilters;
        private @Nullable String filteredDataType;
        private Boolean isEnabled;
        private String name;
        private String query;
        private Integer version;
        public Builder() {}
        public Builder(GetSecurityMonitoringFiltersFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exclusionFilters = defaults.exclusionFilters;
    	      this.filteredDataType = defaults.filteredDataType;
    	      this.isEnabled = defaults.isEnabled;
    	      this.name = defaults.name;
    	      this.query = defaults.query;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder exclusionFilters(@Nullable List<GetSecurityMonitoringFiltersFilterExclusionFilter> exclusionFilters) {

            this.exclusionFilters = exclusionFilters;
            return this;
        }
        public Builder exclusionFilters(GetSecurityMonitoringFiltersFilterExclusionFilter... exclusionFilters) {
            return exclusionFilters(List.of(exclusionFilters));
        }
        @CustomType.Setter
        public Builder filteredDataType(@Nullable String filteredDataType) {

            this.filteredDataType = filteredDataType;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            if (isEnabled == null) {
              throw new MissingRequiredPropertyException("GetSecurityMonitoringFiltersFilter", "isEnabled");
            }
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSecurityMonitoringFiltersFilter", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            if (query == null) {
              throw new MissingRequiredPropertyException("GetSecurityMonitoringFiltersFilter", "query");
            }
            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetSecurityMonitoringFiltersFilter", "version");
            }
            this.version = version;
            return this;
        }
        public GetSecurityMonitoringFiltersFilter build() {
            final var _resultValue = new GetSecurityMonitoringFiltersFilter();
            _resultValue.exclusionFilters = exclusionFilters;
            _resultValue.filteredDataType = filteredDataType;
            _resultValue.isEnabled = isEnabled;
            _resultValue.name = name;
            _resultValue.query = query;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
