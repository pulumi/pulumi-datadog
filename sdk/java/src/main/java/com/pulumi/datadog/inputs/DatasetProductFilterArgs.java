// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DatasetProductFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetProductFilterArgs Empty = new DatasetProductFilterArgs();

    /**
     * A list of tag-based filters used to restrict access to the product type. Each filter is formatted as `{@literal @}tag.key:value`.
     * 
     */
    @Import(name="filters", required=true)
    private Output<List<String>> filters;

    /**
     * @return A list of tag-based filters used to restrict access to the product type. Each filter is formatted as `{@literal @}tag.key:value`.
     * 
     */
    public Output<List<String>> filters() {
        return this.filters;
    }

    /**
     * The product type of the dataset. Supported types: `apm`, `rum`, `synthetics`, `metrics`, `logs`, `sd_repoinfo`, `error_tracking`, `cloud_cost`, and `ml_obs`.
     * 
     */
    @Import(name="product", required=true)
    private Output<String> product;

    /**
     * @return The product type of the dataset. Supported types: `apm`, `rum`, `synthetics`, `metrics`, `logs`, `sd_repoinfo`, `error_tracking`, `cloud_cost`, and `ml_obs`.
     * 
     */
    public Output<String> product() {
        return this.product;
    }

    private DatasetProductFilterArgs() {}

    private DatasetProductFilterArgs(DatasetProductFilterArgs $) {
        this.filters = $.filters;
        this.product = $.product;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetProductFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetProductFilterArgs $;

        public Builder() {
            $ = new DatasetProductFilterArgs();
        }

        public Builder(DatasetProductFilterArgs defaults) {
            $ = new DatasetProductFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters A list of tag-based filters used to restrict access to the product type. Each filter is formatted as `{@literal @}tag.key:value`.
         * 
         * @return builder
         * 
         */
        public Builder filters(Output<List<String>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters A list of tag-based filters used to restrict access to the product type. Each filter is formatted as `{@literal @}tag.key:value`.
         * 
         * @return builder
         * 
         */
        public Builder filters(List<String> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters A list of tag-based filters used to restrict access to the product type. Each filter is formatted as `{@literal @}tag.key:value`.
         * 
         * @return builder
         * 
         */
        public Builder filters(String... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param product The product type of the dataset. Supported types: `apm`, `rum`, `synthetics`, `metrics`, `logs`, `sd_repoinfo`, `error_tracking`, `cloud_cost`, and `ml_obs`.
         * 
         * @return builder
         * 
         */
        public Builder product(Output<String> product) {
            $.product = product;
            return this;
        }

        /**
         * @param product The product type of the dataset. Supported types: `apm`, `rum`, `synthetics`, `metrics`, `logs`, `sd_repoinfo`, `error_tracking`, `cloud_cost`, and `ml_obs`.
         * 
         * @return builder
         * 
         */
        public Builder product(String product) {
            return product(Output.of(product));
        }

        public DatasetProductFilterArgs build() {
            if ($.filters == null) {
                throw new MissingRequiredPropertyException("DatasetProductFilterArgs", "filters");
            }
            if ($.product == null) {
                throw new MissingRequiredPropertyException("DatasetProductFilterArgs", "product");
            }
            return $;
        }
    }

}
