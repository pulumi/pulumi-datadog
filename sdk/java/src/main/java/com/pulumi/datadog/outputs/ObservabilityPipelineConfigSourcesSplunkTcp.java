// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigSourcesSplunkTcpTls;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObservabilityPipelineConfigSourcesSplunkTcp {
    /**
     * @return The unique identifier for this component. Used to reference this component in other parts of the pipeline (e.g., as input to downstream components).
     * 
     */
    private String id;
    /**
     * @return Configuration for enabling TLS encryption between the pipeline component and external services.
     * 
     */
    private @Nullable ObservabilityPipelineConfigSourcesSplunkTcpTls tls;

    private ObservabilityPipelineConfigSourcesSplunkTcp() {}
    /**
     * @return The unique identifier for this component. Used to reference this component in other parts of the pipeline (e.g., as input to downstream components).
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Configuration for enabling TLS encryption between the pipeline component and external services.
     * 
     */
    public Optional<ObservabilityPipelineConfigSourcesSplunkTcpTls> tls() {
        return Optional.ofNullable(this.tls);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservabilityPipelineConfigSourcesSplunkTcp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable ObservabilityPipelineConfigSourcesSplunkTcpTls tls;
        public Builder() {}
        public Builder(ObservabilityPipelineConfigSourcesSplunkTcp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.tls = defaults.tls;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("ObservabilityPipelineConfigSourcesSplunkTcp", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder tls(@Nullable ObservabilityPipelineConfigSourcesSplunkTcpTls tls) {

            this.tls = tls;
            return this;
        }
        public ObservabilityPipelineConfigSourcesSplunkTcp build() {
            final var _resultValue = new ObservabilityPipelineConfigSourcesSplunkTcp();
            _resultValue.id = id;
            _resultValue.tls = tls;
            return _resultValue;
        }
    }
}
