// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.SyntheticsTestApiStepAssertionTargetjsonpathArgs;
import com.pulumi.datadog.inputs.SyntheticsTestApiStepAssertionTargetjsonschemaArgs;
import com.pulumi.datadog.inputs.SyntheticsTestApiStepAssertionTargetxpathArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsTestApiStepAssertionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsTestApiStepAssertionArgs Empty = new SyntheticsTestApiStepAssertionArgs();

    /**
     * Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
     * 
     */
    @Import(name="operator", required=true)
    private Output<String> operator;

    /**
     * @return Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
     * 
     */
    public Output<String> operator() {
        return this.operator;
    }

    /**
     * If assertion type is `header`, this is the header name.
     * 
     */
    @Import(name="property")
    private @Nullable Output<String> property;

    /**
     * @return If assertion type is `header`, this is the header name.
     * 
     */
    public Optional<Output<String>> property() {
        return Optional.ofNullable(this.property);
    }

    /**
     * Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
     * 
     */
    @Import(name="target")
    private @Nullable Output<String> target;

    /**
     * @return Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
     * 
     */
    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
     * 
     */
    @Import(name="targetjsonpath")
    private @Nullable Output<SyntheticsTestApiStepAssertionTargetjsonpathArgs> targetjsonpath;

    /**
     * @return Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
     * 
     */
    public Optional<Output<SyntheticsTestApiStepAssertionTargetjsonpathArgs>> targetjsonpath() {
        return Optional.ofNullable(this.targetjsonpath);
    }

    /**
     * Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
     * 
     */
    @Import(name="targetjsonschema")
    private @Nullable Output<SyntheticsTestApiStepAssertionTargetjsonschemaArgs> targetjsonschema;

    /**
     * @return Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
     * 
     */
    public Optional<Output<SyntheticsTestApiStepAssertionTargetjsonschemaArgs>> targetjsonschema() {
        return Optional.ofNullable(this.targetjsonschema);
    }

    /**
     * Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
     * 
     */
    @Import(name="targetxpath")
    private @Nullable Output<SyntheticsTestApiStepAssertionTargetxpathArgs> targetxpath;

    /**
     * @return Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
     * 
     */
    public Optional<Output<SyntheticsTestApiStepAssertionTargetxpathArgs>> targetxpath() {
        return Optional.ofNullable(this.targetxpath);
    }

    /**
     * Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
     * 
     */
    @Import(name="timingsScope")
    private @Nullable Output<String> timingsScope;

    /**
     * @return Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
     * 
     */
    public Optional<Output<String>> timingsScope() {
        return Optional.ofNullable(this.timingsScope);
    }

    /**
     * Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private SyntheticsTestApiStepAssertionArgs() {}

    private SyntheticsTestApiStepAssertionArgs(SyntheticsTestApiStepAssertionArgs $) {
        this.operator = $.operator;
        this.property = $.property;
        this.target = $.target;
        this.targetjsonpath = $.targetjsonpath;
        this.targetjsonschema = $.targetjsonschema;
        this.targetxpath = $.targetxpath;
        this.timingsScope = $.timingsScope;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsTestApiStepAssertionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsTestApiStepAssertionArgs $;

        public Builder() {
            $ = new SyntheticsTestApiStepAssertionArgs();
        }

        public Builder(SyntheticsTestApiStepAssertionArgs defaults) {
            $ = new SyntheticsTestApiStepAssertionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param operator Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
         * 
         * @return builder
         * 
         */
        public Builder operator(Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator Assertion operator. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)).
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param property If assertion type is `header`, this is the header name.
         * 
         * @return builder
         * 
         */
        public Builder property(@Nullable Output<String> property) {
            $.property = property;
            return this;
        }

        /**
         * @param property If assertion type is `header`, this is the header name.
         * 
         * @return builder
         * 
         */
        public Builder property(String property) {
            return property(Output.of(property));
        }

        /**
         * @param target Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target Expected value. Depends on the assertion type, refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test) for details.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        /**
         * @param targetjsonpath Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
         * 
         * @return builder
         * 
         */
        public Builder targetjsonpath(@Nullable Output<SyntheticsTestApiStepAssertionTargetjsonpathArgs> targetjsonpath) {
            $.targetjsonpath = targetjsonpath;
            return this;
        }

        /**
         * @param targetjsonpath Expected structure if `operator` is `validatesJSONPath`. Exactly one nested block is allowed with the structure below.
         * 
         * @return builder
         * 
         */
        public Builder targetjsonpath(SyntheticsTestApiStepAssertionTargetjsonpathArgs targetjsonpath) {
            return targetjsonpath(Output.of(targetjsonpath));
        }

        /**
         * @param targetjsonschema Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
         * 
         * @return builder
         * 
         */
        public Builder targetjsonschema(@Nullable Output<SyntheticsTestApiStepAssertionTargetjsonschemaArgs> targetjsonschema) {
            $.targetjsonschema = targetjsonschema;
            return this;
        }

        /**
         * @param targetjsonschema Expected structure if `operator` is `validatesJSONSchema`. Exactly one nested block is allowed with the structure below.
         * 
         * @return builder
         * 
         */
        public Builder targetjsonschema(SyntheticsTestApiStepAssertionTargetjsonschemaArgs targetjsonschema) {
            return targetjsonschema(Output.of(targetjsonschema));
        }

        /**
         * @param targetxpath Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
         * 
         * @return builder
         * 
         */
        public Builder targetxpath(@Nullable Output<SyntheticsTestApiStepAssertionTargetxpathArgs> targetxpath) {
            $.targetxpath = targetxpath;
            return this;
        }

        /**
         * @param targetxpath Expected structure if `operator` is `validatesXPath`. Exactly one nested block is allowed with the structure below.
         * 
         * @return builder
         * 
         */
        public Builder targetxpath(SyntheticsTestApiStepAssertionTargetxpathArgs targetxpath) {
            return targetxpath(Output.of(targetxpath));
        }

        /**
         * @param timingsScope Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
         * 
         * @return builder
         * 
         */
        public Builder timingsScope(@Nullable Output<String> timingsScope) {
            $.timingsScope = timingsScope;
            return this;
        }

        /**
         * @param timingsScope Timings scope for response time assertions. Valid values are `all`, `withoutDNS`.
         * 
         * @return builder
         * 
         */
        public Builder timingsScope(String timingsScope) {
            return timingsScope(Output.of(timingsScope));
        }

        /**
         * @param type Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of assertion. **Note** Only some combinations of `type` and `operator` are valid (please refer to [Datadog documentation](https://docs.datadoghq.com/api/latest/synthetics/#create-a-test)). Valid values are `body`, `header`, `statusCode`, `certificate`, `responseTime`, `property`, `recordEvery`, `recordSome`, `tlsVersion`, `minTlsVersion`, `latency`, `packetLossPercentage`, `packetsReceived`, `networkHop`, `receivedMessage`, `grpcHealthcheckStatus`, `grpcMetadata`, `grpcProto`, `connection`, `bodyHash`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SyntheticsTestApiStepAssertionArgs build() {
            if ($.operator == null) {
                throw new MissingRequiredPropertyException("SyntheticsTestApiStepAssertionArgs", "operator");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("SyntheticsTestApiStepAssertionArgs", "type");
            }
            return $;
        }
    }

}
