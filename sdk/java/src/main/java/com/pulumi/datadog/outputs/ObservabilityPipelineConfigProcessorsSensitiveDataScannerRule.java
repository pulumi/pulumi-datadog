// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleKeywordOptions;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleOnMatch;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigProcessorsSensitiveDataScannerRulePattern;
import com.pulumi.datadog.outputs.ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleScope;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ObservabilityPipelineConfigProcessorsSensitiveDataScannerRule {
    /**
     * @return Keyword-based proximity matching for sensitive data.
     * 
     */
    private @Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleKeywordOptions keywordOptions;
    /**
     * @return A name identifying the rule.
     * 
     */
    private @Nullable String name;
    /**
     * @return The action to take when a sensitive value is found.
     * 
     */
    private @Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleOnMatch onMatch;
    /**
     * @return Pattern detection configuration for identifying sensitive data using either a custom regex or a library reference.
     * 
     */
    private @Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRulePattern pattern;
    /**
     * @return Field-level targeting options that determine where the scanner should operate.
     * 
     */
    private @Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleScope scope;
    /**
     * @return Tags assigned to this rule for filtering and classification.
     * 
     */
    private @Nullable List<String> tags;

    private ObservabilityPipelineConfigProcessorsSensitiveDataScannerRule() {}
    /**
     * @return Keyword-based proximity matching for sensitive data.
     * 
     */
    public Optional<ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleKeywordOptions> keywordOptions() {
        return Optional.ofNullable(this.keywordOptions);
    }
    /**
     * @return A name identifying the rule.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The action to take when a sensitive value is found.
     * 
     */
    public Optional<ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleOnMatch> onMatch() {
        return Optional.ofNullable(this.onMatch);
    }
    /**
     * @return Pattern detection configuration for identifying sensitive data using either a custom regex or a library reference.
     * 
     */
    public Optional<ObservabilityPipelineConfigProcessorsSensitiveDataScannerRulePattern> pattern() {
        return Optional.ofNullable(this.pattern);
    }
    /**
     * @return Field-level targeting options that determine where the scanner should operate.
     * 
     */
    public Optional<ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleScope> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return Tags assigned to this rule for filtering and classification.
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObservabilityPipelineConfigProcessorsSensitiveDataScannerRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleKeywordOptions keywordOptions;
        private @Nullable String name;
        private @Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleOnMatch onMatch;
        private @Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRulePattern pattern;
        private @Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleScope scope;
        private @Nullable List<String> tags;
        public Builder() {}
        public Builder(ObservabilityPipelineConfigProcessorsSensitiveDataScannerRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keywordOptions = defaults.keywordOptions;
    	      this.name = defaults.name;
    	      this.onMatch = defaults.onMatch;
    	      this.pattern = defaults.pattern;
    	      this.scope = defaults.scope;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder keywordOptions(@Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleKeywordOptions keywordOptions) {

            this.keywordOptions = keywordOptions;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder onMatch(@Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleOnMatch onMatch) {

            this.onMatch = onMatch;
            return this;
        }
        @CustomType.Setter
        public Builder pattern(@Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRulePattern pattern) {

            this.pattern = pattern;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable ObservabilityPipelineConfigProcessorsSensitiveDataScannerRuleScope scope) {

            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        public ObservabilityPipelineConfigProcessorsSensitiveDataScannerRule build() {
            final var _resultValue = new ObservabilityPipelineConfigProcessorsSensitiveDataScannerRule();
            _resultValue.keywordOptions = keywordOptions;
            _resultValue.name = name;
            _resultValue.onMatch = onMatch;
            _resultValue.pattern = pattern;
            _resultValue.scope = scope;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
