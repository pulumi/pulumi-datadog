// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.GetTagPipelineRulesetRuleMapping;
import com.pulumi.datadog.inputs.GetTagPipelineRulesetRuleQuery;
import com.pulumi.datadog.inputs.GetTagPipelineRulesetRuleReferenceTable;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTagPipelineRulesetRule extends com.pulumi.resources.InvokeArgs {

    public static final GetTagPipelineRulesetRule Empty = new GetTagPipelineRulesetRule();

    /**
     * Whether the rule is enabled.
     * 
     */
    @Import(name="enabled", required=true)
    private Boolean enabled;

    /**
     * @return Whether the rule is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * The mapping configuration for the rule.
     * 
     */
    @Import(name="mapping")
    private @Nullable GetTagPipelineRulesetRuleMapping mapping;

    /**
     * @return The mapping configuration for the rule.
     * 
     */
    public Optional<GetTagPipelineRulesetRuleMapping> mapping() {
        return Optional.ofNullable(this.mapping);
    }

    /**
     * Rule metadata key-value pairs.
     * 
     */
    @Import(name="metadata", required=true)
    private Map<String,String> metadata;

    /**
     * @return Rule metadata key-value pairs.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata;
    }

    /**
     * The name of the rule.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the rule.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The query configuration for the rule.
     * 
     */
    @Import(name="query")
    private @Nullable GetTagPipelineRulesetRuleQuery query;

    /**
     * @return The query configuration for the rule.
     * 
     */
    public Optional<GetTagPipelineRulesetRuleQuery> query() {
        return Optional.ofNullable(this.query);
    }

    /**
     * The reference table configuration for the rule.
     * 
     */
    @Import(name="referenceTable")
    private @Nullable GetTagPipelineRulesetRuleReferenceTable referenceTable;

    /**
     * @return The reference table configuration for the rule.
     * 
     */
    public Optional<GetTagPipelineRulesetRuleReferenceTable> referenceTable() {
        return Optional.ofNullable(this.referenceTable);
    }

    private GetTagPipelineRulesetRule() {}

    private GetTagPipelineRulesetRule(GetTagPipelineRulesetRule $) {
        this.enabled = $.enabled;
        this.mapping = $.mapping;
        this.metadata = $.metadata;
        this.name = $.name;
        this.query = $.query;
        this.referenceTable = $.referenceTable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTagPipelineRulesetRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTagPipelineRulesetRule $;

        public Builder() {
            $ = new GetTagPipelineRulesetRule();
        }

        public Builder(GetTagPipelineRulesetRule defaults) {
            $ = new GetTagPipelineRulesetRule(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Whether the rule is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param mapping The mapping configuration for the rule.
         * 
         * @return builder
         * 
         */
        public Builder mapping(@Nullable GetTagPipelineRulesetRuleMapping mapping) {
            $.mapping = mapping;
            return this;
        }

        /**
         * @param metadata Rule metadata key-value pairs.
         * 
         * @return builder
         * 
         */
        public Builder metadata(Map<String,String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param name The name of the rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param query The query configuration for the rule.
         * 
         * @return builder
         * 
         */
        public Builder query(@Nullable GetTagPipelineRulesetRuleQuery query) {
            $.query = query;
            return this;
        }

        /**
         * @param referenceTable The reference table configuration for the rule.
         * 
         * @return builder
         * 
         */
        public Builder referenceTable(@Nullable GetTagPipelineRulesetRuleReferenceTable referenceTable) {
            $.referenceTable = referenceTable;
            return this;
        }

        public GetTagPipelineRulesetRule build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("GetTagPipelineRulesetRule", "enabled");
            }
            if ($.metadata == null) {
                throw new MissingRequiredPropertyException("GetTagPipelineRulesetRule", "metadata");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetTagPipelineRulesetRule", "name");
            }
            return $;
        }
    }

}
