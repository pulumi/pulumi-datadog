// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.SensitiveDataScannerGroupFilterArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SensitiveDataScannerGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final SensitiveDataScannerGroupArgs Empty = new SensitiveDataScannerGroupArgs();

    /**
     * Description of the Datadog scanning group.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the Datadog scanning group.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Filter object the scanning group applies.
     * 
     */
    @Import(name="filter", required=true)
    private Output<SensitiveDataScannerGroupFilterArgs> filter;

    /**
     * @return Filter object the scanning group applies.
     * 
     */
    public Output<SensitiveDataScannerGroupFilterArgs> filter() {
        return this.filter;
    }

    /**
     * Whether or not the scanning group is enabled. If the group doesn&#39;t contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return Whether or not the scanning group is enabled. If the group doesn&#39;t contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * Name of the Datadog scanning group.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the Datadog scanning group.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * List of products the scanning group applies. Valid values are `logs`, `rum`, `events`, `apm`.
     * 
     */
    @Import(name="productLists", required=true)
    private Output<List<String>> productLists;

    /**
     * @return List of products the scanning group applies. Valid values are `logs`, `rum`, `events`, `apm`.
     * 
     */
    public Output<List<String>> productLists() {
        return this.productLists;
    }

    private SensitiveDataScannerGroupArgs() {}

    private SensitiveDataScannerGroupArgs(SensitiveDataScannerGroupArgs $) {
        this.description = $.description;
        this.filter = $.filter;
        this.isEnabled = $.isEnabled;
        this.name = $.name;
        this.productLists = $.productLists;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SensitiveDataScannerGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SensitiveDataScannerGroupArgs $;

        public Builder() {
            $ = new SensitiveDataScannerGroupArgs();
        }

        public Builder(SensitiveDataScannerGroupArgs defaults) {
            $ = new SensitiveDataScannerGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the Datadog scanning group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the Datadog scanning group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param filter Filter object the scanning group applies.
         * 
         * @return builder
         * 
         */
        public Builder filter(Output<SensitiveDataScannerGroupFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter Filter object the scanning group applies.
         * 
         * @return builder
         * 
         */
        public Builder filter(SensitiveDataScannerGroupFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param isEnabled Whether or not the scanning group is enabled. If the group doesn&#39;t contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled Whether or not the scanning group is enabled. If the group doesn&#39;t contain any rule or if all the rules in it are disabled, the group is force-disabled by our backend
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param name Name of the Datadog scanning group.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Datadog scanning group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param productLists List of products the scanning group applies. Valid values are `logs`, `rum`, `events`, `apm`.
         * 
         * @return builder
         * 
         */
        public Builder productLists(Output<List<String>> productLists) {
            $.productLists = productLists;
            return this;
        }

        /**
         * @param productLists List of products the scanning group applies. Valid values are `logs`, `rum`, `events`, `apm`.
         * 
         * @return builder
         * 
         */
        public Builder productLists(List<String> productLists) {
            return productLists(Output.of(productLists));
        }

        /**
         * @param productLists List of products the scanning group applies. Valid values are `logs`, `rum`, `events`, `apm`.
         * 
         * @return builder
         * 
         */
        public Builder productLists(String... productLists) {
            return productLists(List.of(productLists));
        }

        public SensitiveDataScannerGroupArgs build() {
            if ($.filter == null) {
                throw new MissingRequiredPropertyException("SensitiveDataScannerGroupArgs", "filter");
            }
            if ($.isEnabled == null) {
                throw new MissingRequiredPropertyException("SensitiveDataScannerGroupArgs", "isEnabled");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("SensitiveDataScannerGroupArgs", "name");
            }
            if ($.productLists == null) {
                throw new MissingRequiredPropertyException("SensitiveDataScannerGroupArgs", "productLists");
            }
            return $;
        }
    }

}
