// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.aws.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationAccountMetricsConfigTagFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationAccountMetricsConfigTagFilterArgs Empty = new IntegrationAccountMetricsConfigTagFilterArgs();

    /**
     * The AWS service for which the tag filters defined in `tags` will be applied.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return The AWS service for which the tag filters defined in `tags` will be applied.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * The AWS resource tags to filter on for the service specified by `namespace`.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The AWS resource tags to filter on for the service specified by `namespace`.
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private IntegrationAccountMetricsConfigTagFilterArgs() {}

    private IntegrationAccountMetricsConfigTagFilterArgs(IntegrationAccountMetricsConfigTagFilterArgs $) {
        this.namespace = $.namespace;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationAccountMetricsConfigTagFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationAccountMetricsConfigTagFilterArgs $;

        public Builder() {
            $ = new IntegrationAccountMetricsConfigTagFilterArgs();
        }

        public Builder(IntegrationAccountMetricsConfigTagFilterArgs defaults) {
            $ = new IntegrationAccountMetricsConfigTagFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param namespace The AWS service for which the tag filters defined in `tags` will be applied.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The AWS service for which the tag filters defined in `tags` will be applied.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param tags The AWS resource tags to filter on for the service specified by `namespace`.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The AWS resource tags to filter on for the service specified by `namespace`.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The AWS resource tags to filter on for the service specified by `namespace`.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public IntegrationAccountMetricsConfigTagFilterArgs build() {
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("IntegrationAccountMetricsConfigTagFilterArgs", "namespace");
            }
            return $;
        }
    }

}
