// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.datadog.outputs.GetCustomAllocationRuleStrategyAllocatedByAllocatedTag;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetCustomAllocationRuleStrategyAllocatedBy {
    private @Nullable List<GetCustomAllocationRuleStrategyAllocatedByAllocatedTag> allocatedTags;
    /**
     * @return The percentage of costs allocated to this target as a decimal (e.g., 0.33 for 33%).
     * 
     */
    private Double percentage;

    private GetCustomAllocationRuleStrategyAllocatedBy() {}
    public List<GetCustomAllocationRuleStrategyAllocatedByAllocatedTag> allocatedTags() {
        return this.allocatedTags == null ? List.of() : this.allocatedTags;
    }
    /**
     * @return The percentage of costs allocated to this target as a decimal (e.g., 0.33 for 33%).
     * 
     */
    public Double percentage() {
        return this.percentage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomAllocationRuleStrategyAllocatedBy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetCustomAllocationRuleStrategyAllocatedByAllocatedTag> allocatedTags;
        private Double percentage;
        public Builder() {}
        public Builder(GetCustomAllocationRuleStrategyAllocatedBy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocatedTags = defaults.allocatedTags;
    	      this.percentage = defaults.percentage;
        }

        @CustomType.Setter
        public Builder allocatedTags(@Nullable List<GetCustomAllocationRuleStrategyAllocatedByAllocatedTag> allocatedTags) {

            this.allocatedTags = allocatedTags;
            return this;
        }
        public Builder allocatedTags(GetCustomAllocationRuleStrategyAllocatedByAllocatedTag... allocatedTags) {
            return allocatedTags(List.of(allocatedTags));
        }
        @CustomType.Setter
        public Builder percentage(Double percentage) {
            if (percentage == null) {
              throw new MissingRequiredPropertyException("GetCustomAllocationRuleStrategyAllocatedBy", "percentage");
            }
            this.percentage = percentage;
            return this;
        }
        public GetCustomAllocationRuleStrategyAllocatedBy build() {
            final var _resultValue = new GetCustomAllocationRuleStrategyAllocatedBy();
            _resultValue.allocatedTags = allocatedTags;
            _resultValue.percentage = percentage;
            return _resultValue;
        }
    }
}
