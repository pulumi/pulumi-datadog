// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.GetCostBudgetEntryTagFilterArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCostBudgetEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetCostBudgetEntryArgs Empty = new GetCostBudgetEntryArgs();

    @Import(name="amount", required=true)
    private Output<Double> amount;

    public Output<Double> amount() {
        return this.amount;
    }

    @Import(name="month", required=true)
    private Output<Integer> month;

    public Output<Integer> month() {
        return this.month;
    }

    @Import(name="tagFilters")
    private @Nullable Output<List<GetCostBudgetEntryTagFilterArgs>> tagFilters;

    public Optional<Output<List<GetCostBudgetEntryTagFilterArgs>>> tagFilters() {
        return Optional.ofNullable(this.tagFilters);
    }

    private GetCostBudgetEntryArgs() {}

    private GetCostBudgetEntryArgs(GetCostBudgetEntryArgs $) {
        this.amount = $.amount;
        this.month = $.month;
        this.tagFilters = $.tagFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCostBudgetEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCostBudgetEntryArgs $;

        public Builder() {
            $ = new GetCostBudgetEntryArgs();
        }

        public Builder(GetCostBudgetEntryArgs defaults) {
            $ = new GetCostBudgetEntryArgs(Objects.requireNonNull(defaults));
        }

        public Builder amount(Output<Double> amount) {
            $.amount = amount;
            return this;
        }

        public Builder amount(Double amount) {
            return amount(Output.of(amount));
        }

        public Builder month(Output<Integer> month) {
            $.month = month;
            return this;
        }

        public Builder month(Integer month) {
            return month(Output.of(month));
        }

        public Builder tagFilters(@Nullable Output<List<GetCostBudgetEntryTagFilterArgs>> tagFilters) {
            $.tagFilters = tagFilters;
            return this;
        }

        public Builder tagFilters(List<GetCostBudgetEntryTagFilterArgs> tagFilters) {
            return tagFilters(Output.of(tagFilters));
        }

        public Builder tagFilters(GetCostBudgetEntryTagFilterArgs... tagFilters) {
            return tagFilters(List.of(tagFilters));
        }

        public GetCostBudgetEntryArgs build() {
            if ($.amount == null) {
                throw new MissingRequiredPropertyException("GetCostBudgetEntryArgs", "amount");
            }
            if ($.month == null) {
                throw new MissingRequiredPropertyException("GetCostBudgetEntryArgs", "month");
            }
            return $;
        }
    }

}
