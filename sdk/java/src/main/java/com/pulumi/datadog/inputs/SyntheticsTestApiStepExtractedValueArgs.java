// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.datadog.inputs.SyntheticsTestApiStepExtractedValueParserArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SyntheticsTestApiStepExtractedValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final SyntheticsTestApiStepExtractedValueArgs Empty = new SyntheticsTestApiStepExtractedValueArgs();

    @Import(name="field")
    private @Nullable Output<String> field;

    public Optional<Output<String>> field() {
        return Optional.ofNullable(this.field);
    }

    /**
     * Name of Datadog synthetics test.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of Datadog synthetics test.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    @Import(name="parser", required=true)
    private Output<SyntheticsTestApiStepExtractedValueParserArgs> parser;

    public Output<SyntheticsTestApiStepExtractedValueParserArgs> parser() {
        return this.parser;
    }

    @Import(name="secure")
    private @Nullable Output<Boolean> secure;

    public Optional<Output<Boolean>> secure() {
        return Optional.ofNullable(this.secure);
    }

    /**
     * Synthetics test type. Valid values are `api`, `browser`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Synthetics test type. Valid values are `api`, `browser`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private SyntheticsTestApiStepExtractedValueArgs() {}

    private SyntheticsTestApiStepExtractedValueArgs(SyntheticsTestApiStepExtractedValueArgs $) {
        this.field = $.field;
        this.name = $.name;
        this.parser = $.parser;
        this.secure = $.secure;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SyntheticsTestApiStepExtractedValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SyntheticsTestApiStepExtractedValueArgs $;

        public Builder() {
            $ = new SyntheticsTestApiStepExtractedValueArgs();
        }

        public Builder(SyntheticsTestApiStepExtractedValueArgs defaults) {
            $ = new SyntheticsTestApiStepExtractedValueArgs(Objects.requireNonNull(defaults));
        }

        public Builder field(@Nullable Output<String> field) {
            $.field = field;
            return this;
        }

        public Builder field(String field) {
            return field(Output.of(field));
        }

        /**
         * @param name Name of Datadog synthetics test.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of Datadog synthetics test.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parser(Output<SyntheticsTestApiStepExtractedValueParserArgs> parser) {
            $.parser = parser;
            return this;
        }

        public Builder parser(SyntheticsTestApiStepExtractedValueParserArgs parser) {
            return parser(Output.of(parser));
        }

        public Builder secure(@Nullable Output<Boolean> secure) {
            $.secure = secure;
            return this;
        }

        public Builder secure(Boolean secure) {
            return secure(Output.of(secure));
        }

        /**
         * @param type Synthetics test type. Valid values are `api`, `browser`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Synthetics test type. Valid values are `api`, `browser`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SyntheticsTestApiStepExtractedValueArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.parser = Objects.requireNonNull($.parser, "expected parameter 'parser' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
