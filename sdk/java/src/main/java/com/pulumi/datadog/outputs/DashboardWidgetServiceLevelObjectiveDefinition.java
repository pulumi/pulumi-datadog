// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DashboardWidgetServiceLevelObjectiveDefinition {
    private @Nullable String additionalQueryFilters;
    private @Nullable String globalTimeTarget;
    private @Nullable Boolean showErrorBudget;
    private String sloId;
    private List<String> timeWindows;
    /**
     * @return The title of the dashboard.
     * 
     */
    private @Nullable String title;
    private @Nullable String titleAlign;
    private @Nullable String titleSize;
    private String viewMode;
    private String viewType;

    private DashboardWidgetServiceLevelObjectiveDefinition() {}
    public Optional<String> additionalQueryFilters() {
        return Optional.ofNullable(this.additionalQueryFilters);
    }
    public Optional<String> globalTimeTarget() {
        return Optional.ofNullable(this.globalTimeTarget);
    }
    public Optional<Boolean> showErrorBudget() {
        return Optional.ofNullable(this.showErrorBudget);
    }
    public String sloId() {
        return this.sloId;
    }
    public List<String> timeWindows() {
        return this.timeWindows;
    }
    /**
     * @return The title of the dashboard.
     * 
     */
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    public Optional<String> titleAlign() {
        return Optional.ofNullable(this.titleAlign);
    }
    public Optional<String> titleSize() {
        return Optional.ofNullable(this.titleSize);
    }
    public String viewMode() {
        return this.viewMode;
    }
    public String viewType() {
        return this.viewType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DashboardWidgetServiceLevelObjectiveDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String additionalQueryFilters;
        private @Nullable String globalTimeTarget;
        private @Nullable Boolean showErrorBudget;
        private String sloId;
        private List<String> timeWindows;
        private @Nullable String title;
        private @Nullable String titleAlign;
        private @Nullable String titleSize;
        private String viewMode;
        private String viewType;
        public Builder() {}
        public Builder(DashboardWidgetServiceLevelObjectiveDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalQueryFilters = defaults.additionalQueryFilters;
    	      this.globalTimeTarget = defaults.globalTimeTarget;
    	      this.showErrorBudget = defaults.showErrorBudget;
    	      this.sloId = defaults.sloId;
    	      this.timeWindows = defaults.timeWindows;
    	      this.title = defaults.title;
    	      this.titleAlign = defaults.titleAlign;
    	      this.titleSize = defaults.titleSize;
    	      this.viewMode = defaults.viewMode;
    	      this.viewType = defaults.viewType;
        }

        @CustomType.Setter
        public Builder additionalQueryFilters(@Nullable String additionalQueryFilters) {
            this.additionalQueryFilters = additionalQueryFilters;
            return this;
        }
        @CustomType.Setter
        public Builder globalTimeTarget(@Nullable String globalTimeTarget) {
            this.globalTimeTarget = globalTimeTarget;
            return this;
        }
        @CustomType.Setter
        public Builder showErrorBudget(@Nullable Boolean showErrorBudget) {
            this.showErrorBudget = showErrorBudget;
            return this;
        }
        @CustomType.Setter
        public Builder sloId(String sloId) {
            this.sloId = Objects.requireNonNull(sloId);
            return this;
        }
        @CustomType.Setter
        public Builder timeWindows(List<String> timeWindows) {
            this.timeWindows = Objects.requireNonNull(timeWindows);
            return this;
        }
        public Builder timeWindows(String... timeWindows) {
            return timeWindows(List.of(timeWindows));
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {
            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder titleAlign(@Nullable String titleAlign) {
            this.titleAlign = titleAlign;
            return this;
        }
        @CustomType.Setter
        public Builder titleSize(@Nullable String titleSize) {
            this.titleSize = titleSize;
            return this;
        }
        @CustomType.Setter
        public Builder viewMode(String viewMode) {
            this.viewMode = Objects.requireNonNull(viewMode);
            return this;
        }
        @CustomType.Setter
        public Builder viewType(String viewType) {
            this.viewType = Objects.requireNonNull(viewType);
            return this;
        }
        public DashboardWidgetServiceLevelObjectiveDefinition build() {
            final var o = new DashboardWidgetServiceLevelObjectiveDefinition();
            o.additionalQueryFilters = additionalQueryFilters;
            o.globalTimeTarget = globalTimeTarget;
            o.showErrorBudget = showErrorBudget;
            o.sloId = sloId;
            o.timeWindows = timeWindows;
            o.title = title;
            o.titleAlign = titleAlign;
            o.titleSize = titleSize;
            o.viewMode = viewMode;
            o.viewType = viewType;
            return o;
        }
    }
}
