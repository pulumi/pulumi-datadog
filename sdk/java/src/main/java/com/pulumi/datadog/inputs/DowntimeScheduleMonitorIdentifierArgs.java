// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DowntimeScheduleMonitorIdentifierArgs extends com.pulumi.resources.ResourceArgs {

    public static final DowntimeScheduleMonitorIdentifierArgs Empty = new DowntimeScheduleMonitorIdentifierArgs();

    /**
     * ID of the monitor to prevent notifications.
     * 
     */
    @Import(name="monitorId")
    private @Nullable Output<Integer> monitorId;

    /**
     * @return ID of the monitor to prevent notifications.
     * 
     */
    public Optional<Output<Integer>> monitorId() {
        return Optional.ofNullable(this.monitorId);
    }

    /**
     * A list of monitor tags. For example, tags that are applied directly to monitors, not tags that are used in monitor queries (which are filtered by the scope parameter), to which the downtime applies. The resulting downtime applies to monitors that match **all** provided monitor tags. Setting `monitor_tags` to `[*]` configures the downtime to mute all monitors for the given scope.
     * 
     */
    @Import(name="monitorTags")
    private @Nullable Output<List<String>> monitorTags;

    /**
     * @return A list of monitor tags. For example, tags that are applied directly to monitors, not tags that are used in monitor queries (which are filtered by the scope parameter), to which the downtime applies. The resulting downtime applies to monitors that match **all** provided monitor tags. Setting `monitor_tags` to `[*]` configures the downtime to mute all monitors for the given scope.
     * 
     */
    public Optional<Output<List<String>>> monitorTags() {
        return Optional.ofNullable(this.monitorTags);
    }

    private DowntimeScheduleMonitorIdentifierArgs() {}

    private DowntimeScheduleMonitorIdentifierArgs(DowntimeScheduleMonitorIdentifierArgs $) {
        this.monitorId = $.monitorId;
        this.monitorTags = $.monitorTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DowntimeScheduleMonitorIdentifierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DowntimeScheduleMonitorIdentifierArgs $;

        public Builder() {
            $ = new DowntimeScheduleMonitorIdentifierArgs();
        }

        public Builder(DowntimeScheduleMonitorIdentifierArgs defaults) {
            $ = new DowntimeScheduleMonitorIdentifierArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param monitorId ID of the monitor to prevent notifications.
         * 
         * @return builder
         * 
         */
        public Builder monitorId(@Nullable Output<Integer> monitorId) {
            $.monitorId = monitorId;
            return this;
        }

        /**
         * @param monitorId ID of the monitor to prevent notifications.
         * 
         * @return builder
         * 
         */
        public Builder monitorId(Integer monitorId) {
            return monitorId(Output.of(monitorId));
        }

        /**
         * @param monitorTags A list of monitor tags. For example, tags that are applied directly to monitors, not tags that are used in monitor queries (which are filtered by the scope parameter), to which the downtime applies. The resulting downtime applies to monitors that match **all** provided monitor tags. Setting `monitor_tags` to `[*]` configures the downtime to mute all monitors for the given scope.
         * 
         * @return builder
         * 
         */
        public Builder monitorTags(@Nullable Output<List<String>> monitorTags) {
            $.monitorTags = monitorTags;
            return this;
        }

        /**
         * @param monitorTags A list of monitor tags. For example, tags that are applied directly to monitors, not tags that are used in monitor queries (which are filtered by the scope parameter), to which the downtime applies. The resulting downtime applies to monitors that match **all** provided monitor tags. Setting `monitor_tags` to `[*]` configures the downtime to mute all monitors for the given scope.
         * 
         * @return builder
         * 
         */
        public Builder monitorTags(List<String> monitorTags) {
            return monitorTags(Output.of(monitorTags));
        }

        /**
         * @param monitorTags A list of monitor tags. For example, tags that are applied directly to monitors, not tags that are used in monitor queries (which are filtered by the scope parameter), to which the downtime applies. The resulting downtime applies to monitors that match **all** provided monitor tags. Setting `monitor_tags` to `[*]` configures the downtime to mute all monitors for the given scope.
         * 
         * @return builder
         * 
         */
        public Builder monitorTags(String... monitorTags) {
            return monitorTags(List.of(monitorTags));
        }

        public DowntimeScheduleMonitorIdentifierArgs build() {
            return $;
        }
    }

}
