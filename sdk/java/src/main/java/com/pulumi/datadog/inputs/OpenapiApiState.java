// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.datadog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OpenapiApiState extends com.pulumi.resources.ResourceArgs {

    public static final OpenapiApiState Empty = new OpenapiApiState();

    /**
     * The textual content of the OpenAPI specification. Use `file()` in order to reference another file in the repository (see exmaple).
     * 
     */
    @Import(name="spec")
    private @Nullable Output<String> spec;

    /**
     * @return The textual content of the OpenAPI specification. Use `file()` in order to reference another file in the repository (see exmaple).
     * 
     */
    public Optional<Output<String>> spec() {
        return Optional.ofNullable(this.spec);
    }

    private OpenapiApiState() {}

    private OpenapiApiState(OpenapiApiState $) {
        this.spec = $.spec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OpenapiApiState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OpenapiApiState $;

        public Builder() {
            $ = new OpenapiApiState();
        }

        public Builder(OpenapiApiState defaults) {
            $ = new OpenapiApiState(Objects.requireNonNull(defaults));
        }

        /**
         * @param spec The textual content of the OpenAPI specification. Use `file()` in order to reference another file in the repository (see exmaple).
         * 
         * @return builder
         * 
         */
        public Builder spec(@Nullable Output<String> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec The textual content of the OpenAPI specification. Use `file()` in order to reference another file in the repository (see exmaple).
         * 
         * @return builder
         * 
         */
        public Builder spec(String spec) {
            return spec(Output.of(spec));
        }

        public OpenapiApiState build() {
            return $;
        }
    }

}
